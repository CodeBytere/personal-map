(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var main = require('./main.js');
var modalJS = require('./modal.js');
var airtable = require('airtable');

/******* GETTERS *******/

API_KEY = 'keyK7dq5zUfQPWqlO';
BASE_KEY = 'app2K7DEbfK3K8itR';
BASE_NAME = 'map-test';

var base = new airtable({
  apiKey: API_KEY
}).base(BASE_KEY);

//gets locations and places them appropriately in the sidebar
var getLocations = function() {
  clearSidebarLocations();

  base(BASE_NAME).select({
    view: "Main View"
  }).eachPage(function page(records, fetchNextPage) {
    records.forEach(function(record) {
      var output_id = record.fields.type + "_locs";

      var html = '<button id="' + record.id + '" class="edit_modal_button">' + record.fields.title + '</button><br><button class="delete_modal_button ' + record.id + '"><i class="fa fa-trash-o fa-2x"></i></button>';

      var container = document.createElement('div');
      container.className = "loc_entry";
      container.innerHTML = html;

      var output = document.getElementById(output_id);
      output.appendChild(container);

      var delete_button =  document.getElementsByClassName('' + record.id)[0];
      delete_button.onclick = function () {
        deleteMarker(record.id)
      };

      var edit_button = document.getElementById(record.id);
      edit_button.onclick = function () {
        editMarker(record)
      };
    });

    fetchNextPage();

  }, function done(error) {
    if (error) {
      console.log(error);
    }
  });
}

//gets markers from Airtable base and places them on the map
var getMarkers = function (){
  base(BASE_NAME).select({
    view: "Main View"
  }).eachPage(function page(records, fetchNextPage) {
    main.placeMarkers(records);
    fetchNextPage();

  }, function done(error) {
    if (error) {
      console.log(error);
    }
  });
}

/******* SETTERS *******/

//adds a marker through the modal
var addMarker = function () {

  var form_middle = "<form class='loc_form'> \
    <input type='text' name='title' class='new_loc_input' placeholder='Title'> <br>\
    <input type='text' name='address' class='new_loc_input' placeholder='Address'> <br>\
    <input type='text' name='link' class='new_loc_input' placeholder='Link'> <br>\
    <select name='type' class='new_loc_select'> \
      <option value='key_location'>Key Location</option> \
      <option value='coffee'>Coffee</option> \
      <option value='restaurant'>Restaurant</option> \
      <option value='nightlife'>Nightlife</option> \
      <option value='landmark'>Landmark</option> \
    </select> \
    </form>";

  modalJS.modal.show({
    top: 'Add Location',
    middle: form_middle,
    confirm: {
      text: 'Add',
      click: function () {
        marker = $('form').serializeArray().reduce(function(obj, item) {
          obj[item.name] = item.value;
          return obj;
        }, {});
        placeMarker(marker);
      }
    }
  });
};

//displays modal to edit a marker's values
var editMarker = function(record) {

  var link = function(link_val) {
    if (link_val == null)
      return "placeholder='Enter a link'";
    else
      return "value='" + record.fields.link + "'";
  }

  var form_middle = "<form class='loc_form'> \
    <input type='text' name='title' class='new_loc_input' value='" + record.fields.title + "'> <br>\
    <input type='text' name='address' class='new_loc_input' value='" + record.fields.address + "'> <br>\
    <input type='text' name='link' class='new_loc_input'" + link(record.fields.link) + "> <br>\
    <select name='type' class='new_loc_select'> \
      <option value='key_location'>Key Location</option> \
      <option value='coffee'>Coffee</option> \
      <option value='restaurant'>Restaurant</option> \
      <option value='nightlife'>Nightlife</option> \
      <option value='landmark'>Landmark</option> \
    </select> \
    </form>";

  modalJS.modal.show({
    top: 'Edit Location',
    middle: form_middle,
    confirm: {
      text: 'Save',
      click: function () {
        marker = $('form').serializeArray().reduce(function (obj, item) {
          obj[item.name] = item.value;
          return obj;
        }, {});
        updateMarker(record, marker);
      }
    }
  });
};

//performs call to update marker info in the db
var updateMarker = function(record, fields) {

  fields.lat = record.fields.lat;
  fields.lng = record.fields.lng;

  base(BASE_NAME).replace(record.id, fields, function(err, record) {
    if (err) {
      console.log(err); return;
    }
    console.log("successfully updated record");
    getLocations();
    getMarkers();
  });
}

//removes a marker from the database
var deleteMarker = function(id) {
  base(BASE_NAME).destroy(id, function(err, deletedRecord) {
    if (err) {
      console.log(err);
      return;
    }
    console.log('successfully deleted record');
    getLocations();
    getMarkers();
  });
}

//places a new marker on the map with given and calculated data
var placeMarker = function(record) {

  //uses geocoder to get the latitude and longitude
  function encodeAddress() {
    var geocoder = new google.maps.Geocoder();
    geocoder.geocode({'address' : record.address}, function (results, status) {
      if (status === google.maps.GeocoderStatus.OK) {
        setData(results[0].geometry.location);
      } else {
        alert("Google Maps had some trouble finding" + address + status);
      }
    });
   }
  encodeAddress();

  //sets the field information and executes POST request to the airtable api
  function setData(lat_lng){
    var new_record = {
      title: record.title,
      address: record.address,
      lat: JSON.stringify(lat_lng.lat()),
      lng: JSON.stringify(lat_lng.lng()),
      link: record.link,
      type: record.type
    };

    base(BASE_NAME).create(new_record, function(err, record) {
      if (err) {
        console.log(err);
        return;
      }
      console.log("successfully created new record");
      getMarkers();
      getLocations();
    });
  }
};

/******** HELPERS ********/

//clears the sidebar of locations when a new one is added
var clearSidebarLocations = function(){
  var loc_types = ['key_location_locs','coffee_locs','restaurant_locs', 'nightlife_locs','landmark_locs'];

  loc_types.forEach(function (loc_type) {
    document.getElementById(loc_type).innerHTML = "";
  });
}

module.exports = {
  getLocations: getLocations,
  getMarkers: getMarkers,
  addMarker: addMarker,
  editMarker: editMarker,
  placeMarker: placeMarker,
};



},{"./main.js":2,"./modal.js":3,"airtable":4}],2:[function(require,module,exports){
var crud = require('./crud.js');
var modal = require('./modal.js');
var $ = require("jquery");
var fontawesome = require('fontawesome-markers');

var map;
var infoWindow;
var infoWindows = [];

//initialize and populate the map
$(document).ready(function() {
  var mapOptions = {
    "center": {
      "lat": 40.7828647,
      "lng": -73.9653551
    }
    , "clickableIcons": true
    , "disableDoubleClickZoom": false
    , "draggable": true
    , "fullscreenControl": true
    , "keyboardShortcuts": true
    , "mapMaker": false
    , "mapTypeControl": true
    , "mapTypeControlOptions": {
      "text": "Default (depends on viewport size etc.)"
      , "style": 0
    }
    , "mapTypeId": "roadmap"
    , "rotateControl": true
    , "scaleControl": true
    , "scrollwheel": true
    , "streetViewControl": true
    , "styles": [{
      "featureType": "landscape.man_made"
      , "elementType": "geometry"
      , "stylers": [{
        "color": "#f7f1df"
      }]
    }, {
      "featureType": "landscape.natural"
      , "elementType": "geometry"
      , "stylers": [{
        "color": "#d0e3b4"
      }]
    }, {
      "featureType": "landscape.natural.terrain"
      , "elementType": "geometry"
      , "stylers": [{
        "visibility": "on"
      }]
    }, {
      "featureType": "poi"
      , "elementType": "labels"
      , "stylers": [{
        "visibility": "on"
      }]
    }, {
      "featureType": "poi.business"
      , "elementType": "all"
      , "stylers": [{
        "visibility": "on"
      }]
    }, {
      "featureType": "poi.medical"
      , "elementType": "geometry"
      , "stylers": [{
        "color": "#fbd3da"
      }]
    }, {
      "featureType": "poi.park"
      , "elementType": "geometry"
      , "stylers": [{
        "color": "#bde6ab"
      }]
    }, {
      "featureType": "road"
      , "elementType": "geometry.stroke"
      , "stylers": [{
        "visibility": "on"
      }]
    }, {
      "featureType": "road"
      , "elementType": "labels"
      , "stylers": [{
        "visibility": "on"
      }]
    }, {
      "featureType": "road.highway"
      , "elementType": "geometry.fill"
      , "stylers": [{
        "color": "#ffe15f"
      }]
    }, {
      "featureType": "road.highway"
      , "elementType": "geometry.stroke"
      , "stylers": [{
        "color": "#efd151"
      }]
    }, {
      "featureType": "road.arterial"
      , "elementType": "geometry.fill"
      , "stylers": [{
        "color": "#ffffff"
      }]
    }, {
      "featureType": "road.local"
      , "elementType": "geometry.fill"
      , "stylers": [{
        "color": "black"
      }]
    }, {
      "featureType": "transit.station.airport"
      , "elementType": "geometry.fill"
      , "stylers": [{
        "color": "#cfb2db"
      }]
    }, {
      "featureType": "water"
      , "elementType": "geometry"
      , "stylers": [{
        "color": "#a2daf2"
      }]
    }]
    , "zoom": 14
    , "zoomControl": true
  };
  var mapElement = document.getElementById('map');
  map = new google.maps.Map(mapElement, mapOptions);

  google.maps.event.addDomListener(window, "resize", function () {
    var center = map.getCenter();
    google.maps.event.trigger(map, "resize");
    map.setCenter(center);
  });

  //close infowindows when the map is clicked
  google.maps.event.addListener(map, "click", function(event) {
    closeInfoWindows();
  });

  //add markers to both the map and the sidebar
  crud.getMarkers();
  crud.getLocations();

  addSearchBox();

  var btn = document.getElementById("mod_btn");
  btn.addEventListener("click", function(){
    crud.addMarker();
  });
});

//returns the custom map icon for each type of location
function custom_icons(type){
  var path, fillColor;

  if (type === "key_location") {
    path = fontawesome.KEY;
    fillColor = 'blue';
  }
  else if (type === "restaurant") {
    path = fontawesome.CUTLERY;
    fillColor = 'purple';
  }
  else if (type === "coffee") {
    path = fontawesome.COFFEE;
    fillColor = 'saddlebrown';
  }
  else if (type === "landmark") {
    path = fontawesome.BUILDING;
    fillColor = 'darkblue';
  }
  else if (type === "nightlife") {
    path = fontawesome.GLASS;
    fillColor = 'forestgreen';
  }

  var icon = {
    path: path,
    scale: 0.35,
    strokeWeight: 0.6,
    strokeColor: 'black',
    strokeOpacity: 1,
    fillColor: fillColor,
    fillOpacity: 1,
  }

  return icon;
}

//places markers on the map
function placeMarkers(info_markers) {
  $.each(info_markers, function (key, data) {
    data = data.fields;
    var lat_lng = new google.maps.LatLng(data.lat, data.lng);

    var marker = new google.maps.Marker({
      map: map,
      position: lat_lng,
      icon: custom_icons(data.type),
      address: data.address,
      title: data.title,
      labelClass: "mark"
    });

    var details;
    if (data.link) {
      details = "<strong>" + data.title + "</strong> <br>" + " <br>" +  data.address + "<br>" + " <br> <a href="+data.link+" target='_blank'>Website</a>";
    } else {
      details = "<strong>" + data.title + "</strong> <br>" + " <br>" +  data.address;
    }

    infowindow = new google.maps.InfoWindow()
    bindInfoWindow(marker, map, infowindow, details);
  });
}

//closes all other infowindows when a new one is placed
function closeInfoWindows() {
  for (i = 0; i < infoWindows.length; i++) {
      infoWindows[i].close();
      infoWindows.splice(i, 1);
  }
}

//binds an info window to each placed marker
function bindInfoWindow(marker, map, infowindow, strDescription){
  google.maps.event.addListener(marker, 'click', function() {
    closeInfoWindows();
    infowindow.setContent(strDescription);
    infoWindows.push(infowindow);
    infowindow.open(map, marker);
  });
}

//adds a search box to the field
function addSearchBox() {
  var input = document.getElementById('search-box');
  var searchBox = new google.maps.places.SearchBox(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.addListener('bounds_changed', function () {
    searchBox.setBounds(map.getBounds());
  });
  var markers = [];
  searchBox.addListener('places_changed', function () {
    var places = searchBox.getPlaces();
    if (places.length == 0) {
      return;
    }
    markers.forEach(function (marker) {
      marker.setMap(null);
    });
    markers = [];
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function (place) {
      if (!place.geometry) {
        console.log("Returned place contains no geometry");
        return;
      }
      var icon = {
        url: place.icon
        , size: new google.maps.Size(71, 71)
        , origin: new google.maps.Point(0, 0)
        , anchor: new google.maps.Point(17, 34)
        , scaledSize: new google.maps.Size(25, 25)
      };
      markers.push(new google.maps.Marker({
        map: map
        , icon: icon
        , title: place.name
        , position: place.geometry.location
      }));
      if (place.geometry.viewport) {
        bounds.union(place.geometry.viewport);
      }
      else {
        bounds.extend(place.geometry.location);
      }
    });
    map.fitBounds(bounds);
  });
}

module.exports.placeMarkers = placeMarkers;


},{"./crud.js":1,"./modal.js":3,"fontawesome-markers":22,"jquery":23}],3:[function(require,module,exports){
Array.prototype.contains = function (el) {
  return this.indexOf(el) > -1;
};
Node.prototype.removeClasses = function (arr) {
  this.className = this.className.split(/\s+/).filter(function (c) {
    return !arr.contains(c) && c.length;
  }).join(' ');
};
Node.prototype.addClass = function (c) {
  this.className += (/\s$/.test(this.className) || !this.className.length ? '' : ' ') + c;
};
var ModalJS = {
    version: '1.1'
    , modal: function (type) {
      var modal = {
        bg: '#modaljs-bg'
        , modals: '#modaljs-modals'
        , modal: '#modaljs-modal'
        , top: '#modaljs-top'
        , topCancel: '#modaljs-top-cancel'
        , middle: '#modaljs-middle'
        , bottom: '#modaljs-bottom'
        , bottomCancel: '#modaljs-bottom-cancel'
        , bottomConfirm: '#modaljs-bottom-confirm'
        , transitionType: '#modaljs-transitionType'
      };
      return ModalJS.sel(modal[type]);
    }
    , modalTypes: [
		'modal'
		, 'success'
		, 'alert'
		, 'warning'
		, 'error'
	]
    , sizeTypes: [
		'small'
		, 'medium'
		, 'big'
	]
    , monoTypes: [
		'mono'
		, 'colored'
	]
    , positionTypes: [
		'stickedToTop'
		, 'top'
		, 'middle'
		, 'bottom'
		, 'stickedToBottom'
	]
    , confirmFn: function () {}
    , isShown: function () {
      return modaljs.modal('modals').style.display != 'none';
    }
    , sel: function (s, b) {
      return b ? document.querySelectorAll(s) : document.querySelector(s);
    }
    , addEvent: function (el, name, func) {
      // addEvent
      var aE = function (el, name, func) {
          if (el.addEventListener) el.addEventListener(name, func, false);
          else if (el.attachEvent) el.attachEvent('on' + name, func);
          else el['on' + name] = func;
        }
        , i;
      switch (typeof el) {
      case 'object':
        if (el instanceof Node) {
          aE(el, name, func);
        }
        else if (el instanceof Array) {
          for (i = el.length - 1; i >= 0; i--) aE(el[i], name, func);
        }
        break;
      default:
        throw new Error('el must be object or instance of an array!');
      }
    }
    , init: function (props) {
      var modalHTML = '<div id="modaljs-modals" style="opacity:0;display:none"><div id="modaljs-bg"></div><div id="modaljs-modal" class="modaljs-normal"><div id="modaljs-top"></div><div id="modaljs-top-cancel"></div><div id="modaljs-middle"></div><div id="modaljs-bottom"><input type="button" id="modaljs-bottom-confirm" value="Ok"></div><input type="hidden" id="modaljs-transitionType"></div></div>';
      document.body.insertAdjacentHTML('beforeend', modalHTML);
      var that = this;
      this.addEvent([
			this.modal('topCancel')
			, this.modal('bg')
		], 'click', function () {
        that.hideModal();
      });
      this.addEvent(this.modal('bottomConfirm'), 'click', function () {
        that.hideModal();
        that.confirmFn();
      });
    }
    , show: function (props) {
      if (arguments.length < 1) throw new Error('ModalJS.show() needs at least one argument!');
      if (typeof props != 'object') throw new Error('Properties must be an object!');
      if (!props.hasOwnProperty('top') || !props.hasOwnProperty('middle')) throw new Error('Properties in ModalJS.show() must include at least "top" and "middle" properties!');
      if (!this.sel('#modaljs-modals', true).length) this.init(props);
      // setting up transitionType hidden input
      this.modal('transitionType').value = props.hasOwnProperty('transition') && ['fast', 'normal', 'slow'].indexOf(props.transition) > -1 ? props.transition : 'fast';
      var getProp = function (o, prop, def) {
        if (typeof def != 'boolean') def = false;
        if (!o.hasOwnProperty(prop)) return def;
        return o[prop];
      };
      var modals = this.modal('modals')
        , confirm = this.modal('bottomConfirm')
        , modalType = getProp(props, 'type', 'modal')
        , monoType = getProp(props, 'mono')
        , isBG = getProp(props, 'background', true)
        , sizeType = getProp(props, 'size', 'small')
        , positionType = getProp(props, 'position', 'middle');
      // setting 'type'
      if (!this.modalTypes.contains(modalType)) modalType = 'modal';
      modals.removeClasses(this.modalTypes);
      modals.addClass(modalType);
      monoType = monoType ? 'mono' : 'colored';
      if (!this.monoTypes.contains(monoType)) monoType = 'colored';
      this.modal('modal').removeClasses(this.monoTypes);
      this.modal('modal').addClass(monoType);
      // setting 'bg'
      this.modal('bg').style.display = this.modal('modal').style.boxShadow = isBG ? '' : 'none';
      // setting 'size'
      if (!this.sizeTypes.contains(sizeType)) sizeType = 'small';
      this.modal('modal').removeClasses(this.sizeTypes);
      this.modal('modal').addClass(sizeType);
      // setting 'position'
      if (!this.positionTypes.contains(positionType)) positionType = 'middle';
      this.modal('modal').removeClasses(this.positionTypes);
      this.modal('modal').addClass(positionType);
      // setting 'confirm'
      confirm.style.display = 'none';
      if (props.hasOwnProperty('confirm') && props.confirm.hasOwnProperty('text') && props.confirm.hasOwnProperty('click')) {
        var text = props.confirm.text
          , click = props.confirm.click
        if (typeof text == 'string' && typeof click == 'function') {
          confirm.style.display = 'inline-block';
          text = text || 'Ok';
          confirm.value = text;
          confirm.focus();
          this.confirmFn = click;
        }
      }
      this.showModal(modals, this.modal('transitionType'));
      var w = window;
      // setting 'background'
      this.modal('top').innerHTML = props.top;
      this.modal('middle').innerHTML = props.middle;
      // setting up modal top position
      this.modal('modal').style.margin = (positionType == 'middle' ? (-(this.modal('modal').offsetHeight / 2) - (props.hasOwnProperty('offsetTop') && typeof props.offsetTop == 'number' ? props.offsetTop : 0)) : '0') + 'px 0 0 ' + (-(this.modal('modal').offsetWidth / 2)) + 'px';
    }
    , showModal: function () {
      if (modaljs.isShown()) throw new Error('You can\'t show an actual shown modal!');
      var modals = this.modal('modals')
        , transitionType = this.modal('transitionType')
        , transitions = {
          fast: 0
          , normal: 300
          , slow: 600
        };
      var transitionsKeys = Object.keys(transitions);
      modals.removeClasses(transitionsKeys);
      modals.addClass(transitionType.value);
      modals.style.display = '';
      setTimeout(function () {
        modals.style.opacity = '1';
      }, transitions[transitionType.value]);
    }
    , hideModal: function () {
      if (!modaljs.isShown()) throw new Error('You can\'t hide an actual hidden modal!');
      var modals = this.modal('modals')
        , transitionType = this.modal('transitionType')
        , transitions = {
          fast: 0
          , normal: 300
          , slow: 600
        };
      modals.style.opacity = '0';
      setTimeout(function () {
        modals.style.display = 'none';
      }, transitions[transitionType.value]);
    }
  }
  , modaljs = ModalJS;

module.exports.modal = modaljs;

},{}],4:[function(require,module,exports){
(function (process){
'use strict';

var assert = require('assert');

var Class = require('./class');
var Base = require('./base');
var Record = require('./record');
var Table = require('./table');

var Airtable = Class.extend({
    init: function(opts) {
        opts = opts || {};

        this._apiKey = opts.apiKey || Airtable.apiKey || Airtable.default_config.apiKey;
        this._endpointUrl = opts.endpointUrl || Airtable.endpointUrl || Airtable.default_config.endpointUrl;
        this._apiVersion = opts.apiVersion || Airtable.apiVersion || Airtable.default_config.apiVersion;
        this._apiVersionMajor = this._apiVersion.split('.')[0];
        this._allowUnauthorizedSsl = opts.allowUnauthorizedSsl || Airtable.allowUnauthorizedSsl || Airtable.default_config.allowUnauthorizedSsl;
        this._noRetryIfRateLimited = opts.noRetryIfRateLimited || Airtable.noRetryIfRateLimited || Airtable.default_config.noRetryIfRateLimited;

        assert(this._apiKey, 'API key is required to connect to Airtable');
    },

    base: function(baseId) {
        return Base.createFunctor(this, baseId);
    }
});

Airtable.default_config = {
    endpointUrl: process.env.AIRTABLE_ENDPOINT_URL || 'https://api.airtable.com',
    apiVersion: '0.1.0',
    apiKey: process.env.AIRTABLE_API_KEY,
    allowUnauthorizedSsl: false,
    noRetryIfRateLimited: false
};

Airtable.configure = function(opts) {
    Airtable.apiKey = opts.apiKey;
    Airtable.endpointUrl = opts.endpointUrl;
    Airtable.apiVersion = opts.apiVersion;
    Airtable.allowUnauthorizedSsl = opts.allowUnauthorizedSsl;
    Airtable.noRetryIfRateLimited = opts.noRetryIfRateLimited;
};

Airtable.base = function(baseId) {
    return new Airtable().base(baseId);
};

Airtable.Base = Base;
Airtable.Record = Record;
Airtable.Table = Table;

module.exports = Airtable;

}).call(this,require('_process'))

},{"./base":6,"./class":7,"./record":11,"./table":13,"_process":19,"assert":17}],5:[function(require,module,exports){
'use strict';

var Class = require('./class');

var AirtableError = Class.extend({
    init: function(error, message, statusCode) {
        this.error = error;
        this.message = message;
        this.statusCode = statusCode;
    },
    toString: function() {
        return [
            this.message,
            '(', this.error, ')',
            this.statusCode ?  '[Http code ' + this.statusCode + ']' : ''
        ].join('');
    }
});

module.exports = AirtableError;

},{"./class":7}],6:[function(require,module,exports){
'use strict';

var _ = require('lodash');
var internalConfig = require('./internal_config');
var Class = require('./class');
var AirtableError = require('./airtable_error');
var Table = require('./table');
var runAction = require('./run_action');

var Base = Class.extend({
    init: function(airtable, baseId) {
        this._airtable = airtable;
        this._id = baseId;
    },

    table: function(tableName) {
        return new Table(this, null, tableName);
    },

    runAction: function(method, path, queryParams, bodyData, callback) {
        runAction(this, method, path, queryParams, bodyData, callback);
    },

    _checkStatusForError: function(statusCode, body) {
        if (statusCode === 401) {
            return new AirtableError('AUTHENTICATION_REQUIRED', 'You should provide valid api key to perform this operation', statusCode);
        } else if (statusCode === 403) {
            return new AirtableError('NOT_AUTHORIZED', 'You are not authorized to perform this operation', statusCode);
        } else if (statusCode === 404) {
            return (function(){
                var message = (body && body.error && body.error.message) ? body.error.message : 'Could not find what you are looking for';
                return new AirtableError('NOT_FOUND', message, statusCode);
            })();
        } else if (statusCode === 413) {
            return new AirtableError('REQUEST_TOO_LARGE', 'Request body is too large', statusCode);
        } else if (statusCode === 422) {
            return new AirtableError(body.error.type, body.error.message, statusCode);
        } else if (statusCode === 429) {
            return new AirtableError('TOO_MANY_REQUESTS', 'You have made too many requests in a short period of time. Please retry your request later', statusCode);
        }else if (statusCode === 500) {
            return new AirtableError('SERVER_ERROR', 'Try again. If the problem persists, contact support.', statusCode);
        } else if (statusCode === 503) {
            return new AirtableError('SERVICE_UNAVAILABLE', 'The service is temporarily unavailable. Please retry shortly.', statusCode);
        }
    },

    doCall: function(tableName) {
        return this.table(tableName);
    },

    getId: function() {
        return this._id;
    }
});

Base.createFunctor = function(airtable, baseId) {
    var base = new Base(airtable, baseId);
    var baseFn = function() {
        return base.doCall.apply(base, arguments);
    };
    _.each(['table', 'runAction', 'getId'], function(baseMethod) {
        baseFn[baseMethod] = base[baseMethod].bind(base);
    });
    baseFn._base = base;
    baseFn.tables = base.tables;
    return baseFn;
};

module.exports = Base;

},{"./airtable_error":5,"./class":7,"./internal_config":9,"./run_action":12,"./table":13,"lodash":16}],7:[function(require,module,exports){
/*jshint strict:false */

/* Simple JavaScript Inheritance
 * By John Resig http://ejohn.org/
 * MIT Licensed.
 */
// Inspired by base2 and Prototype
// http://ejohn.org/blog/simple-javascript-inheritance/
(function(){
    var initializing = false, fnTest = /xyz/.test(function(){xyz;}) ? /\b_super\b/ : /.*/;

    // The base Class implementation (does nothing)
    var Class = function(){};

    // Create a new Class that inherits from this class
    Class.extend = function extender(prop) {
        var _super = this.prototype;

        // Instantiate a base class (but only create the instance,
        // don't run the init constructor)
        initializing = true;
        var prototype = new this();
        initializing = false;

        // Copy the properties over onto the new prototype
        for (var name in prop) {
            // Check if we're overwriting an existing function
            prototype[name] = typeof prop[name] == "function" &&
                typeof _super[name] == "function" && fnTest.test(prop[name]) ?
                (function(name, fn){
                    return function() {
                        var tmp = this._super;

                        // Add a new ._super() method that is the same method
                        // but on the super-class
                        this._super = _super[name];

                        // The method only need to be bound temporarily, so we
                        // remove it when we're done executing
                        var ret = fn.apply(this, arguments);
                        this._super = tmp;

                        return ret;
                    };
                })(name, prop[name]) :
            prop[name];
        }

        // The dummy class constructor
        function Class() {
            // All construction is actually done in the init method
            if ( !initializing && this.init )
                this.init.apply(this, arguments);
        }

        // Populate our constructed prototype object
        Class.prototype = prototype;

        // Enforce the constructor to be what we expect
        Class.prototype.constructor = Class;

        // And make this class extendable
        Class.extend = extender;

        return Class;
    };

    if (typeof exports !== 'undefined') {
        module.exports = Class;
    } else {
        window.Class = Class;
    }
})();

},{}],8:[function(require,module,exports){
'use strict';

var didWarnForDeprecation = {};

/**
 * Convenience function for marking a function as deprecated.
 *
 * Will emit a warning the first time that function is called.
 *
 * @param fn the function to mark as deprecated.
 * @param key a unique key identifying the function.
 * @param message the warning message.
 *
 * @return a wrapped function
 */
function deprecate(fn, key, message) {
    return function() {
        if (!didWarnForDeprecation[key]) {
            didWarnForDeprecation[key] = true;
            console.warn(message);
        }
        fn.apply(this, arguments);
    };
}

module.exports = deprecate;


},{}],9:[function(require,module,exports){
module.exports={
    "RETRY_DELAY_IF_RATE_LIMITED": 5000,
    "REQUEST_TIMEOUT": 30000
}
},{}],10:[function(require,module,exports){
'use strict';

var assert = require('assert');
var _ = require('lodash');

var check = require('./typecheck');
var Class = require('./class');
var Record = require('./record');

var Query = Class.extend({
    /**
     * Builds a query object. Won't fetch until `firstPage` or
     * or `eachPage` is called.
     */
    init: function(table, params) {
        assert(_.isPlainObject(params));
        _.each(params, function(value, key) {
            assert(Query.paramValidators[key] && Query.paramValidators[key](value).pass, 'Invalid parameter for Query: ' + key);
        });

        this._table = table;
        this._params = params;
    },

    /**
     * Fetches the first page of results for the query asynchronously,
     * then calls `done(error, records)`.
     */
    firstPage: function(done) {
        assert(_.isFunction(done),
            'The first parameter to `firstPage` must be a function');

        this.eachPage(function(records, fetchNextPage) {
            done(null, records);
        }, function(error) {
            done(error, null);
        });
    },

    /**
     * Fetches each page of results for the query asynchronously.
     *
     * Calls `pageCallback(records, fetchNextPage)` for each
     * page. You must call `fetchNextPage()` to fetch the next page of
     * results.
     *
     * After fetching all pages, or if there's an error, calls
     * `done(error)`.
     */
    eachPage: function(pageCallback, done) {
        assert(_.isFunction(pageCallback),
            'The first parameter to `eachPage` must be a function');

        assert(_.isFunction(done) || _.isUndefined(done),
            'The second parameter to `eachPage` must be a function or undefined');

        var that = this;
        var path = '/' + this._table._urlEncodedNameOrId();
        var params = _.clone(this._params);

        var inner = function() {
            that._table._base.runAction('get', path, params, {}, function(err, response, result) {
                if (err) {
                    done(err, null);
                } else {
                    var next;
                    if (result.offset) {
                        params.offset = result.offset;
                        next = inner;
                    } else {
                        next = function() {
                            if (done) {
                                done(null);
                            }
                        };
                    }

                    var records = _.map(result.records, function(recordJson) {
                        return new Record(that._table, null, recordJson);
                    });

                    pageCallback(records, next);
                }
            });
        };

        inner();
    },
});

Query.paramValidators = {
    fields:
        check(check.isArrayOf(_.isString), 'the value for `fields` should be an array of strings'),

    filterByFormula:
        check(_.isString, 'the value for `filterByFormula` should be a string'),

    maxRecords:
        check(_.isNumber, 'the value for `maxRecords` should be a number'),

    pageSize:
        check(_.isNumber, 'the value for `pageSize` should be a number'),

    sort:
        check(check.isArrayOf(function(obj) {
            return (
                _.isPlainObject(obj) &&
                _.isString(obj.field) &&
                (_.isUndefined(obj.direction) || _.contains(['asc', 'desc'], obj.direction))
            );
        }), 'the value for `sort` should be an array of sort objects. ' +
            'Each sort object must have a string `field` value, and an optional ' +
            '`direction` value that is "asc" or "desc".'
        ),

    view:
        check(_.isString, 'the value for `view` should be a string'),
};

/**
 * Validates the parameters for passing to the Query constructor.
 *
 * @return an object with two keys:
 *  validParams: the object that should be passed to the constructor.
 *  ignoredKeys: a list of keys that will be ignored.
 *  errors: a list of error messages.
 */
Query.validateParams = function validateParams(params) {
    assert(_.isPlainObject(params));

    var validParams = {};
    var ignoredKeys = [];
    var errors = [];
    _.each(params, function(value, key) {
        if (Query.paramValidators.hasOwnProperty(key)) {
            var validator = Query.paramValidators[key];
            var validationResult = validator(value);
            if (validationResult.pass) {
                validParams[key] = value;
            } else {
                errors.push(validationResult.error);
            }
        } else {
            ignoredKeys.push(key);
        }
    });

    return {
        validParams: validParams,
        ignoredKeys: ignoredKeys,
        errors: errors,
    };
};

module.exports = Query;

},{"./class":7,"./record":11,"./typecheck":14,"assert":17,"lodash":16}],11:[function(require,module,exports){
'use strict';

var _ = require('lodash');

var Class = require('./class');

var Record = Class.extend({
    init: function(table, recordId, recordJson) {
        this._table = table;
        this.id = recordId || recordJson.id;
        this.setRawJson(recordJson);
        this.updateFields = this.patchUpdate;
        this.replaceFields = this.putUpdate;
    },
    getId: function() {
        return this.id;
    },
    get: function(columnName) {
        return this.fields[columnName];
    },
    set: function(columnName, columnValue) {
        this.fields[columnName] = columnValue;
    },
    save: function(done) {
        this.putUpdate(this.fields, done);
    },
    patchUpdate: function(cellValuesByName, opts, done) {
        var that = this;
        if (!done) {
            done = opts;
            opts = {};
        }
        var updateBody = _.extend({
            fields: cellValuesByName
        }, opts);

        this._table._base.runAction('patch', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, updateBody, function(err, response, results) {
            if (err) { done(err); return; }

            that.setRawJson(results);
            done(null, that);
        });
    },
    putUpdate: function(cellValuesByName, opts, done) {
        var that = this;
        if (!done) {
            done = opts;
            opts = {};
        }
        var updateBody = _.extend({
            fields: cellValuesByName
        }, opts);
        this._table._base.runAction('put', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, updateBody, function(err, response, results) {
            if (err) { done(err); return; }

            that.setRawJson(results);
            done(null, that);
        });
    },
    destroy: function(done) {
        var that = this;
        this._table._base.runAction('delete', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, {}, function(err, response, results) {
            if (err) { done(err); return; }

            done(null, that);
        });
    },

    fetch: function(done) {
        var that = this;
        this._table._base.runAction('get', '/' + this._table._urlEncodedNameOrId() + '/' + this.id, {}, {}, function(err, response, results) {
            if (err) { done(err); return; }

            that.setRawJson(results);
            done(null, that);
        });
    },
    setRawJson: function(rawJson) {
        this._rawJson = rawJson;
        this.fields = (this._rawJson && this._rawJson.fields) || {};
    }
});

module.exports = Record;

},{"./class":7,"lodash":16}],12:[function(require,module,exports){
/*globals jQuery */
'use strict';

var internalConfig = require('./internal_config');

function runActionWithJQuery(base, method, path, queryParams, bodyData, callback) {
    queryParams.forceInsecureCrossDomain = 'ALLOW_ANY_DOMAIN';

    var url = base._airtable._endpointUrl+'/v' + base._airtable._apiVersionMajor + '/' + base._id + path + '?' + jQuery.param(queryParams);

    jQuery.ajax(url, {
        contentType: 'application/json',
        type: method,

        data: JSON.stringify(bodyData),
        processData: false,
        dataType: 'json',
        timeout: internalConfig.REQUEST_TIMEOUT,

        headers: {
            'Authorization': 'Bearer ' + base._airtable._apiKey,
            'x-api-version': base._airtable._apiVersion,
            'x-airtable-application-id': base.getId(),
        },
        success: function(data, textStatus, jqXHR) {
            callback(null, null, data);
        },
        error: function(jqXHR, textStatus) {
            var error;
            if (jqXHR.status === 429 && !base._airtable._noRetryIfRateLimited) {
                setTimeout(function() {
                    runActionWithJQuery(base, method, path, queryParams, bodyData, callback);
                }, internalConfig.RETRY_DELAY_IF_RATE_LIMITED);
                return;
            }
            error = base._checkStatusForError(jqXHR.status, jqXHR.responseJSON);
            callback(error);
        }
    });
}

module.exports = runActionWithJQuery;

},{"./internal_config":9}],13:[function(require,module,exports){
'use strict';

var _ = require('lodash');

var assert = require('assert');
var async = require('async');

var AirtableError = require('./airtable_error');
var Class = require('./class');
var deprecate = require('./deprecate');
var Query = require('./query');
var Record = require('./record');

var Table = Class.extend({
    init: function(base, tableId, tableName) {
        this._base = base;
        assert(tableId || tableName, 'Table name or table ID is required');
        this.id = tableId;
        this.name = tableName;

        // Public API
        this.find = this._findRecordById.bind(this);
        this.select = this._selectRecords.bind(this);
        this.create = this._createRecord.bind(this);
        this.update = this._updateRecord.bind(this);
        this.destroy = this._destroyRecord.bind(this);
        this.replace = this._replaceRecord.bind(this);

        // Deprecated API
        this.list = deprecate(this._listRecords.bind(this),
            'table.list',
            'Airtable: `list()` is deprecated. Use `select()` instead.');
        this.forEach = deprecate(this._forEachRecord.bind(this),
            'table.forEach',
            'Airtable: `forEach()` is deprecated. Use `select()` instead.');
    },
    _findRecordById: function(recordId, done) {
        var record = new Record(this, recordId);
        record.fetch(done);
    },
    _selectRecords: function(params) {
        if (_.isUndefined(params)) {
            params = {};
        }

        if (arguments.length > 1) {
            console.warn('Airtable: `select` takes only one parameter, but it was given ' +
                arguments.length + ' parameters. ' +
                'Use `eachPage` or `firstPage` to fetch records.');
        }

        if (_.isPlainObject(params)) {
            var validationResults = Query.validateParams(params);

            if (validationResults.errors.length) {
                var formattedErrors = validationResults.errors.map(function(error) {
                    return '  * ' + error;
                });

                assert(false, 'Airtable: invalid parameters for `select`:\n' +
                    formattedErrors.join('\n'));
            }

            if (validationResults.ignoredKeys.length) {
                console.warn('Airtable: the following parameters to `select` will be ignored: ' +
                    validationResults.ignoredKeys.join(', '));
            }

            return new Query(this, validationResults.validParams);
        } else {
            assert(false, 'Airtable: the parameter for `select` should be a plain object or undefined.');
        }
    },
    _urlEncodedNameOrId: function(){
        return this.id || encodeURIComponent(this.name);
    },
    _createRecord: function(recordData, optionalParameters, done) {
        var that = this;
        if (!done) {
            done = optionalParameters;
            optionalParameters = {};
        }
        var requestData = _.extend({fields: recordData}, optionalParameters);
        this._base.runAction('post', '/' + that._urlEncodedNameOrId() + '/', {}, requestData, function(err, resp, body) {
            if (err) { done(err); return; }

            var record = new Record(that, body.id, body);
            done(null, record);
        });
    },
    _updateRecord: function(recordId, recordData, opts, done) {
        var record = new Record(this, recordId);
        record.patchUpdate(recordData, opts, done);
    },
    _replaceRecord: function(recordId, recordData, opts, done) {
        var record = new Record(this, recordId);
        record.putUpdate(recordData, opts, done);
    },
    _destroyRecord: function(recordId, done) {
        var record = new Record(this, recordId);
        record.destroy(done);
    },
    _listRecords: function(limit, offset, opts, done) {
        var that = this;

        if (!done) {
            done = opts;
            opts = {};
        }
        var listRecordsParameters = _.extend({
            limit: limit, offset: offset
        }, opts);

        async.waterfall([
            function(next) {
                that._base.runAction('get', '/' + that._urlEncodedNameOrId() + '/', listRecordsParameters, {}, next);
            },
            function(response, results, next) {
                var records = _.map(results.records, function(recordJson) {
                    return new Record(that, null, recordJson);
                });
                next(null, records, results.offset);
            }
        ], done);
    },
    _forEachRecord: function(opts, callback, done) {
        if (arguments.length === 2) {
            done = callback;
            callback = opts;
            opts = {};
        }
        var that = this;
        var limit = Table.__recordsPerPageForIteration || 100;
        var offset = null;

        var nextPage = function() {
            that._listRecords(limit, offset, opts, function(err, page, newOffset) {
                if (err) { done(err); return; }

                _.each(page, callback);

                if (newOffset) {
                    offset = newOffset;
                    nextPage();
                } else {
                    done();
                }
            });
        };
        nextPage();
    }
});

module.exports = Table;

},{"./airtable_error":5,"./class":7,"./deprecate":8,"./query":10,"./record":11,"assert":17,"async":15,"lodash":16}],14:[function(require,module,exports){
'use strict';

var _ = require('lodash');

function check(fn, error) {
    return function(value) {
        if (fn(value)) {
            return {pass: true};
        } else {
            return {pass: false, error: error};
        }
    };
}

check.isOneOf = function isOneOf(options) {
    return _.contains.bind(this, options);
};

check.isArrayOf = function(itemValidator) {
    return function(value) {
        return _.isArray(value) && _.every(value, itemValidator);
    };
};

module.exports = check;

},{"lodash":16}],15:[function(require,module,exports){
(function (process,global){
/*!
 * async
 * https://github.com/caolan/async
 *
 * Copyright 2010-2014 Caolan McMahon
 * Released under the MIT license
 */
(function () {

    var async = {};
    function noop() {}
    function identity(v) {
        return v;
    }
    function toBool(v) {
        return !!v;
    }
    function notId(v) {
        return !v;
    }

    // global on the server, window in the browser
    var previous_async;

    // Establish the root object, `window` (`self`) in the browser, `global`
    // on the server, or `this` in some virtual machines. We use `self`
    // instead of `window` for `WebWorker` support.
    var root = typeof self === 'object' && self.self === self && self ||
            typeof global === 'object' && global.global === global && global ||
            this;

    if (root != null) {
        previous_async = root.async;
    }

    async.noConflict = function () {
        root.async = previous_async;
        return async;
    };

    function only_once(fn) {
        return function() {
            if (fn === null) throw new Error("Callback was already called.");
            fn.apply(this, arguments);
            fn = null;
        };
    }

    function _once(fn) {
        return function() {
            if (fn === null) return;
            fn.apply(this, arguments);
            fn = null;
        };
    }

    //// cross-browser compatiblity functions ////

    var _toString = Object.prototype.toString;

    var _isArray = Array.isArray || function (obj) {
        return _toString.call(obj) === '[object Array]';
    };

    // Ported from underscore.js isObject
    var _isObject = function(obj) {
        var type = typeof obj;
        return type === 'function' || type === 'object' && !!obj;
    };

    function _isArrayLike(arr) {
        return _isArray(arr) || (
            // has a positive integer length property
            typeof arr.length === "number" &&
            arr.length >= 0 &&
            arr.length % 1 === 0
        );
    }

    function _arrayEach(arr, iterator) {
        var index = -1,
            length = arr.length;

        while (++index < length) {
            iterator(arr[index], index, arr);
        }
    }

    function _map(arr, iterator) {
        var index = -1,
            length = arr.length,
            result = Array(length);

        while (++index < length) {
            result[index] = iterator(arr[index], index, arr);
        }
        return result;
    }

    function _range(count) {
        return _map(Array(count), function (v, i) { return i; });
    }

    function _reduce(arr, iterator, memo) {
        _arrayEach(arr, function (x, i, a) {
            memo = iterator(memo, x, i, a);
        });
        return memo;
    }

    function _forEachOf(object, iterator) {
        _arrayEach(_keys(object), function (key) {
            iterator(object[key], key);
        });
    }

    function _indexOf(arr, item) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] === item) return i;
        }
        return -1;
    }

    var _keys = Object.keys || function (obj) {
        var keys = [];
        for (var k in obj) {
            if (obj.hasOwnProperty(k)) {
                keys.push(k);
            }
        }
        return keys;
    };

    function _keyIterator(coll) {
        var i = -1;
        var len;
        var keys;
        if (_isArrayLike(coll)) {
            len = coll.length;
            return function next() {
                i++;
                return i < len ? i : null;
            };
        } else {
            keys = _keys(coll);
            len = keys.length;
            return function next() {
                i++;
                return i < len ? keys[i] : null;
            };
        }
    }

    // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)
    // This accumulates the arguments passed into an array, after a given index.
    // From underscore.js (https://github.com/jashkenas/underscore/pull/2140).
    function _restParam(func, startIndex) {
        startIndex = startIndex == null ? func.length - 1 : +startIndex;
        return function() {
            var length = Math.max(arguments.length - startIndex, 0);
            var rest = Array(length);
            for (var index = 0; index < length; index++) {
                rest[index] = arguments[index + startIndex];
            }
            switch (startIndex) {
                case 0: return func.call(this, rest);
                case 1: return func.call(this, arguments[0], rest);
            }
            // Currently unused but handle cases outside of the switch statement:
            // var args = Array(startIndex + 1);
            // for (index = 0; index < startIndex; index++) {
            //     args[index] = arguments[index];
            // }
            // args[startIndex] = rest;
            // return func.apply(this, args);
        };
    }

    function _withoutIndex(iterator) {
        return function (value, index, callback) {
            return iterator(value, callback);
        };
    }

    //// exported async module functions ////

    //// nextTick implementation with browser-compatible fallback ////

    // capture the global reference to guard against fakeTimer mocks
    var _setImmediate = typeof setImmediate === 'function' && setImmediate;

    var _delay = _setImmediate ? function(fn) {
        // not a direct alias for IE10 compatibility
        _setImmediate(fn);
    } : function(fn) {
        setTimeout(fn, 0);
    };

    if (typeof process === 'object' && typeof process.nextTick === 'function') {
        async.nextTick = process.nextTick;
    } else {
        async.nextTick = _delay;
    }
    async.setImmediate = _setImmediate ? _delay : async.nextTick;


    async.forEach =
    async.each = function (arr, iterator, callback) {
        return async.eachOf(arr, _withoutIndex(iterator), callback);
    };

    async.forEachSeries =
    async.eachSeries = function (arr, iterator, callback) {
        return async.eachOfSeries(arr, _withoutIndex(iterator), callback);
    };


    async.forEachLimit =
    async.eachLimit = function (arr, limit, iterator, callback) {
        return _eachOfLimit(limit)(arr, _withoutIndex(iterator), callback);
    };

    async.forEachOf =
    async.eachOf = function (object, iterator, callback) {
        callback = _once(callback || noop);
        object = object || [];

        var iter = _keyIterator(object);
        var key, completed = 0;

        while ((key = iter()) != null) {
            completed += 1;
            iterator(object[key], key, only_once(done));
        }

        if (completed === 0) callback(null);

        function done(err) {
            completed--;
            if (err) {
                callback(err);
            }
            // Check key is null in case iterator isn't exhausted
            // and done resolved synchronously.
            else if (key === null && completed <= 0) {
                callback(null);
            }
        }
    };

    async.forEachOfSeries =
    async.eachOfSeries = function (obj, iterator, callback) {
        callback = _once(callback || noop);
        obj = obj || [];
        var nextKey = _keyIterator(obj);
        var key = nextKey();
        function iterate() {
            var sync = true;
            if (key === null) {
                return callback(null);
            }
            iterator(obj[key], key, only_once(function (err) {
                if (err) {
                    callback(err);
                }
                else {
                    key = nextKey();
                    if (key === null) {
                        return callback(null);
                    } else {
                        if (sync) {
                            async.setImmediate(iterate);
                        } else {
                            iterate();
                        }
                    }
                }
            }));
            sync = false;
        }
        iterate();
    };



    async.forEachOfLimit =
    async.eachOfLimit = function (obj, limit, iterator, callback) {
        _eachOfLimit(limit)(obj, iterator, callback);
    };

    function _eachOfLimit(limit) {

        return function (obj, iterator, callback) {
            callback = _once(callback || noop);
            obj = obj || [];
            var nextKey = _keyIterator(obj);
            if (limit <= 0) {
                return callback(null);
            }
            var done = false;
            var running = 0;
            var errored = false;

            (function replenish () {
                if (done && running <= 0) {
                    return callback(null);
                }

                while (running < limit && !errored) {
                    var key = nextKey();
                    if (key === null) {
                        done = true;
                        if (running <= 0) {
                            callback(null);
                        }
                        return;
                    }
                    running += 1;
                    iterator(obj[key], key, only_once(function (err) {
                        running -= 1;
                        if (err) {
                            callback(err);
                            errored = true;
                        }
                        else {
                            replenish();
                        }
                    }));
                }
            })();
        };
    }


    function doParallel(fn) {
        return function (obj, iterator, callback) {
            return fn(async.eachOf, obj, iterator, callback);
        };
    }
    function doParallelLimit(fn) {
        return function (obj, limit, iterator, callback) {
            return fn(_eachOfLimit(limit), obj, iterator, callback);
        };
    }
    function doSeries(fn) {
        return function (obj, iterator, callback) {
            return fn(async.eachOfSeries, obj, iterator, callback);
        };
    }

    function _asyncMap(eachfn, arr, iterator, callback) {
        callback = _once(callback || noop);
        arr = arr || [];
        var results = _isArrayLike(arr) ? [] : {};
        eachfn(arr, function (value, index, callback) {
            iterator(value, function (err, v) {
                results[index] = v;
                callback(err);
            });
        }, function (err) {
            callback(err, results);
        });
    }

    async.map = doParallel(_asyncMap);
    async.mapSeries = doSeries(_asyncMap);
    async.mapLimit = doParallelLimit(_asyncMap);

    // reduce only has a series version, as doing reduce in parallel won't
    // work in many situations.
    async.inject =
    async.foldl =
    async.reduce = function (arr, memo, iterator, callback) {
        async.eachOfSeries(arr, function (x, i, callback) {
            iterator(memo, x, function (err, v) {
                memo = v;
                callback(err);
            });
        }, function (err) {
            callback(err, memo);
        });
    };

    async.foldr =
    async.reduceRight = function (arr, memo, iterator, callback) {
        var reversed = _map(arr, identity).reverse();
        async.reduce(reversed, memo, iterator, callback);
    };

    async.transform = function (arr, memo, iterator, callback) {
        if (arguments.length === 3) {
            callback = iterator;
            iterator = memo;
            memo = _isArray(arr) ? [] : {};
        }

        async.eachOf(arr, function(v, k, cb) {
            iterator(memo, v, k, cb);
        }, function(err) {
            callback(err, memo);
        });
    };

    function _filter(eachfn, arr, iterator, callback) {
        var results = [];
        eachfn(arr, function (x, index, callback) {
            iterator(x, function (v) {
                if (v) {
                    results.push({index: index, value: x});
                }
                callback();
            });
        }, function () {
            callback(_map(results.sort(function (a, b) {
                return a.index - b.index;
            }), function (x) {
                return x.value;
            }));
        });
    }

    async.select =
    async.filter = doParallel(_filter);

    async.selectLimit =
    async.filterLimit = doParallelLimit(_filter);

    async.selectSeries =
    async.filterSeries = doSeries(_filter);

    function _reject(eachfn, arr, iterator, callback) {
        _filter(eachfn, arr, function(value, cb) {
            iterator(value, function(v) {
                cb(!v);
            });
        }, callback);
    }
    async.reject = doParallel(_reject);
    async.rejectLimit = doParallelLimit(_reject);
    async.rejectSeries = doSeries(_reject);

    function _createTester(eachfn, check, getResult) {
        return function(arr, limit, iterator, cb) {
            function done() {
                if (cb) cb(getResult(false, void 0));
            }
            function iteratee(x, _, callback) {
                if (!cb) return callback();
                iterator(x, function (v) {
                    if (cb && check(v)) {
                        cb(getResult(true, x));
                        cb = iterator = false;
                    }
                    callback();
                });
            }
            if (arguments.length > 3) {
                eachfn(arr, limit, iteratee, done);
            } else {
                cb = iterator;
                iterator = limit;
                eachfn(arr, iteratee, done);
            }
        };
    }

    async.any =
    async.some = _createTester(async.eachOf, toBool, identity);

    async.someLimit = _createTester(async.eachOfLimit, toBool, identity);

    async.all =
    async.every = _createTester(async.eachOf, notId, notId);

    async.everyLimit = _createTester(async.eachOfLimit, notId, notId);

    function _findGetResult(v, x) {
        return x;
    }
    async.detect = _createTester(async.eachOf, identity, _findGetResult);
    async.detectSeries = _createTester(async.eachOfSeries, identity, _findGetResult);
    async.detectLimit = _createTester(async.eachOfLimit, identity, _findGetResult);

    async.sortBy = function (arr, iterator, callback) {
        async.map(arr, function (x, callback) {
            iterator(x, function (err, criteria) {
                if (err) {
                    callback(err);
                }
                else {
                    callback(null, {value: x, criteria: criteria});
                }
            });
        }, function (err, results) {
            if (err) {
                return callback(err);
            }
            else {
                callback(null, _map(results.sort(comparator), function (x) {
                    return x.value;
                }));
            }

        });

        function comparator(left, right) {
            var a = left.criteria, b = right.criteria;
            return a < b ? -1 : a > b ? 1 : 0;
        }
    };

    async.auto = function (tasks, concurrency, callback) {
        if (typeof arguments[1] === 'function') {
            // concurrency is optional, shift the args.
            callback = concurrency;
            concurrency = null;
        }
        callback = _once(callback || noop);
        var keys = _keys(tasks);
        var remainingTasks = keys.length;
        if (!remainingTasks) {
            return callback(null);
        }
        if (!concurrency) {
            concurrency = remainingTasks;
        }

        var results = {};
        var runningTasks = 0;

        var hasError = false;

        var listeners = [];
        function addListener(fn) {
            listeners.unshift(fn);
        }
        function removeListener(fn) {
            var idx = _indexOf(listeners, fn);
            if (idx >= 0) listeners.splice(idx, 1);
        }
        function taskComplete() {
            remainingTasks--;
            _arrayEach(listeners.slice(0), function (fn) {
                fn();
            });
        }

        addListener(function () {
            if (!remainingTasks) {
                callback(null, results);
            }
        });

        _arrayEach(keys, function (k) {
            if (hasError) return;
            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];
            var taskCallback = _restParam(function(err, args) {
                runningTasks--;
                if (args.length <= 1) {
                    args = args[0];
                }
                if (err) {
                    var safeResults = {};
                    _forEachOf(results, function(val, rkey) {
                        safeResults[rkey] = val;
                    });
                    safeResults[k] = args;
                    hasError = true;

                    callback(err, safeResults);
                }
                else {
                    results[k] = args;
                    async.setImmediate(taskComplete);
                }
            });
            var requires = task.slice(0, task.length - 1);
            // prevent dead-locks
            var len = requires.length;
            var dep;
            while (len--) {
                if (!(dep = tasks[requires[len]])) {
                    throw new Error('Has nonexistent dependency in ' + requires.join(', '));
                }
                if (_isArray(dep) && _indexOf(dep, k) >= 0) {
                    throw new Error('Has cyclic dependencies');
                }
            }
            function ready() {
                return runningTasks < concurrency && _reduce(requires, function (a, x) {
                    return (a && results.hasOwnProperty(x));
                }, true) && !results.hasOwnProperty(k);
            }
            if (ready()) {
                runningTasks++;
                task[task.length - 1](taskCallback, results);
            }
            else {
                addListener(listener);
            }
            function listener() {
                if (ready()) {
                    runningTasks++;
                    removeListener(listener);
                    task[task.length - 1](taskCallback, results);
                }
            }
        });
    };



    async.retry = function(times, task, callback) {
        var DEFAULT_TIMES = 5;
        var DEFAULT_INTERVAL = 0;

        var attempts = [];

        var opts = {
            times: DEFAULT_TIMES,
            interval: DEFAULT_INTERVAL
        };

        function parseTimes(acc, t){
            if(typeof t === 'number'){
                acc.times = parseInt(t, 10) || DEFAULT_TIMES;
            } else if(typeof t === 'object'){
                acc.times = parseInt(t.times, 10) || DEFAULT_TIMES;
                acc.interval = parseInt(t.interval, 10) || DEFAULT_INTERVAL;
            } else {
                throw new Error('Unsupported argument type for \'times\': ' + typeof t);
            }
        }

        var length = arguments.length;
        if (length < 1 || length > 3) {
            throw new Error('Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)');
        } else if (length <= 2 && typeof times === 'function') {
            callback = task;
            task = times;
        }
        if (typeof times !== 'function') {
            parseTimes(opts, times);
        }
        opts.callback = callback;
        opts.task = task;

        function wrappedTask(wrappedCallback, wrappedResults) {
            function retryAttempt(task, finalAttempt) {
                return function(seriesCallback) {
                    task(function(err, result){
                        seriesCallback(!err || finalAttempt, {err: err, result: result});
                    }, wrappedResults);
                };
            }

            function retryInterval(interval){
                return function(seriesCallback){
                    setTimeout(function(){
                        seriesCallback(null);
                    }, interval);
                };
            }

            while (opts.times) {

                var finalAttempt = !(opts.times-=1);
                attempts.push(retryAttempt(opts.task, finalAttempt));
                if(!finalAttempt && opts.interval > 0){
                    attempts.push(retryInterval(opts.interval));
                }
            }

            async.series(attempts, function(done, data){
                data = data[data.length - 1];
                (wrappedCallback || opts.callback)(data.err, data.result);
            });
        }

        // If a callback is passed, run this as a controll flow
        return opts.callback ? wrappedTask() : wrappedTask;
    };

    async.waterfall = function (tasks, callback) {
        callback = _once(callback || noop);
        if (!_isArray(tasks)) {
            var err = new Error('First argument to waterfall must be an array of functions');
            return callback(err);
        }
        if (!tasks.length) {
            return callback();
        }
        function wrapIterator(iterator) {
            return _restParam(function (err, args) {
                if (err) {
                    callback.apply(null, [err].concat(args));
                }
                else {
                    var next = iterator.next();
                    if (next) {
                        args.push(wrapIterator(next));
                    }
                    else {
                        args.push(callback);
                    }
                    ensureAsync(iterator).apply(null, args);
                }
            });
        }
        wrapIterator(async.iterator(tasks))();
    };

    function _parallel(eachfn, tasks, callback) {
        callback = callback || noop;
        var results = _isArrayLike(tasks) ? [] : {};

        eachfn(tasks, function (task, key, callback) {
            task(_restParam(function (err, args) {
                if (args.length <= 1) {
                    args = args[0];
                }
                results[key] = args;
                callback(err);
            }));
        }, function (err) {
            callback(err, results);
        });
    }

    async.parallel = function (tasks, callback) {
        _parallel(async.eachOf, tasks, callback);
    };

    async.parallelLimit = function(tasks, limit, callback) {
        _parallel(_eachOfLimit(limit), tasks, callback);
    };

    async.series = function(tasks, callback) {
        _parallel(async.eachOfSeries, tasks, callback);
    };

    async.iterator = function (tasks) {
        function makeCallback(index) {
            function fn() {
                if (tasks.length) {
                    tasks[index].apply(null, arguments);
                }
                return fn.next();
            }
            fn.next = function () {
                return (index < tasks.length - 1) ? makeCallback(index + 1): null;
            };
            return fn;
        }
        return makeCallback(0);
    };

    async.apply = _restParam(function (fn, args) {
        return _restParam(function (callArgs) {
            return fn.apply(
                null, args.concat(callArgs)
            );
        });
    });

    function _concat(eachfn, arr, fn, callback) {
        var result = [];
        eachfn(arr, function (x, index, cb) {
            fn(x, function (err, y) {
                result = result.concat(y || []);
                cb(err);
            });
        }, function (err) {
            callback(err, result);
        });
    }
    async.concat = doParallel(_concat);
    async.concatSeries = doSeries(_concat);

    async.whilst = function (test, iterator, callback) {
        callback = callback || noop;
        if (test()) {
            var next = _restParam(function(err, args) {
                if (err) {
                    callback(err);
                } else if (test.apply(this, args)) {
                    iterator(next);
                } else {
                    callback.apply(null, [null].concat(args));
                }
            });
            iterator(next);
        } else {
            callback(null);
        }
    };

    async.doWhilst = function (iterator, test, callback) {
        var calls = 0;
        return async.whilst(function() {
            return ++calls <= 1 || test.apply(this, arguments);
        }, iterator, callback);
    };

    async.until = function (test, iterator, callback) {
        return async.whilst(function() {
            return !test.apply(this, arguments);
        }, iterator, callback);
    };

    async.doUntil = function (iterator, test, callback) {
        return async.doWhilst(iterator, function() {
            return !test.apply(this, arguments);
        }, callback);
    };

    async.during = function (test, iterator, callback) {
        callback = callback || noop;

        var next = _restParam(function(err, args) {
            if (err) {
                callback(err);
            } else {
                args.push(check);
                test.apply(this, args);
            }
        });

        var check = function(err, truth) {
            if (err) {
                callback(err);
            } else if (truth) {
                iterator(next);
            } else {
                callback(null);
            }
        };

        test(check);
    };

    async.doDuring = function (iterator, test, callback) {
        var calls = 0;
        async.during(function(next) {
            if (calls++ < 1) {
                next(null, true);
            } else {
                test.apply(this, arguments);
            }
        }, iterator, callback);
    };

    function _queue(worker, concurrency, payload) {
        if (concurrency == null) {
            concurrency = 1;
        }
        else if(concurrency === 0) {
            throw new Error('Concurrency must not be zero');
        }
        function _insert(q, data, pos, callback) {
            if (callback != null && typeof callback !== "function") {
                throw new Error("task callback must be a function");
            }
            q.started = true;
            if (!_isArray(data)) {
                data = [data];
            }
            if(data.length === 0 && q.idle()) {
                // call drain immediately if there are no tasks
                return async.setImmediate(function() {
                    q.drain();
                });
            }
            _arrayEach(data, function(task) {
                var item = {
                    data: task,
                    callback: callback || noop
                };

                if (pos) {
                    q.tasks.unshift(item);
                } else {
                    q.tasks.push(item);
                }

                if (q.tasks.length === q.concurrency) {
                    q.saturated();
                }
            });
            async.setImmediate(q.process);
        }
        function _next(q, tasks) {
            return function(){
                workers -= 1;

                var removed = false;
                var args = arguments;
                _arrayEach(tasks, function (task) {
                    _arrayEach(workersList, function (worker, index) {
                        if (worker === task && !removed) {
                            workersList.splice(index, 1);
                            removed = true;
                        }
                    });

                    task.callback.apply(task, args);
                });
                if (q.tasks.length + workers === 0) {
                    q.drain();
                }
                q.process();
            };
        }

        var workers = 0;
        var workersList = [];
        var q = {
            tasks: [],
            concurrency: concurrency,
            payload: payload,
            saturated: noop,
            empty: noop,
            drain: noop,
            started: false,
            paused: false,
            push: function (data, callback) {
                _insert(q, data, false, callback);
            },
            kill: function () {
                q.drain = noop;
                q.tasks = [];
            },
            unshift: function (data, callback) {
                _insert(q, data, true, callback);
            },
            process: function () {
                while(!q.paused && workers < q.concurrency && q.tasks.length){

                    var tasks = q.payload ?
                        q.tasks.splice(0, q.payload) :
                        q.tasks.splice(0, q.tasks.length);

                    var data = _map(tasks, function (task) {
                        return task.data;
                    });

                    if (q.tasks.length === 0) {
                        q.empty();
                    }
                    workers += 1;
                    workersList.push(tasks[0]);
                    var cb = only_once(_next(q, tasks));
                    worker(data, cb);
                }
            },
            length: function () {
                return q.tasks.length;
            },
            running: function () {
                return workers;
            },
            workersList: function () {
                return workersList;
            },
            idle: function() {
                return q.tasks.length + workers === 0;
            },
            pause: function () {
                q.paused = true;
            },
            resume: function () {
                if (q.paused === false) { return; }
                q.paused = false;
                var resumeCount = Math.min(q.concurrency, q.tasks.length);
                // Need to call q.process once per concurrent
                // worker to preserve full concurrency after pause
                for (var w = 1; w <= resumeCount; w++) {
                    async.setImmediate(q.process);
                }
            }
        };
        return q;
    }

    async.queue = function (worker, concurrency) {
        var q = _queue(function (items, cb) {
            worker(items[0], cb);
        }, concurrency, 1);

        return q;
    };

    async.priorityQueue = function (worker, concurrency) {

        function _compareTasks(a, b){
            return a.priority - b.priority;
        }

        function _binarySearch(sequence, item, compare) {
            var beg = -1,
                end = sequence.length - 1;
            while (beg < end) {
                var mid = beg + ((end - beg + 1) >>> 1);
                if (compare(item, sequence[mid]) >= 0) {
                    beg = mid;
                } else {
                    end = mid - 1;
                }
            }
            return beg;
        }

        function _insert(q, data, priority, callback) {
            if (callback != null && typeof callback !== "function") {
                throw new Error("task callback must be a function");
            }
            q.started = true;
            if (!_isArray(data)) {
                data = [data];
            }
            if(data.length === 0) {
                // call drain immediately if there are no tasks
                return async.setImmediate(function() {
                    q.drain();
                });
            }
            _arrayEach(data, function(task) {
                var item = {
                    data: task,
                    priority: priority,
                    callback: typeof callback === 'function' ? callback : noop
                };

                q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);

                if (q.tasks.length === q.concurrency) {
                    q.saturated();
                }
                async.setImmediate(q.process);
            });
        }

        // Start with a normal queue
        var q = async.queue(worker, concurrency);

        // Override push to accept second parameter representing priority
        q.push = function (data, priority, callback) {
            _insert(q, data, priority, callback);
        };

        // Remove unshift function
        delete q.unshift;

        return q;
    };

    async.cargo = function (worker, payload) {
        return _queue(worker, 1, payload);
    };

    function _console_fn(name) {
        return _restParam(function (fn, args) {
            fn.apply(null, args.concat([_restParam(function (err, args) {
                if (typeof console === 'object') {
                    if (err) {
                        if (console.error) {
                            console.error(err);
                        }
                    }
                    else if (console[name]) {
                        _arrayEach(args, function (x) {
                            console[name](x);
                        });
                    }
                }
            })]));
        });
    }
    async.log = _console_fn('log');
    async.dir = _console_fn('dir');
    /*async.info = _console_fn('info');
    async.warn = _console_fn('warn');
    async.error = _console_fn('error');*/

    async.memoize = function (fn, hasher) {
        var memo = {};
        var queues = {};
        var has = Object.prototype.hasOwnProperty;
        hasher = hasher || identity;
        var memoized = _restParam(function memoized(args) {
            var callback = args.pop();
            var key = hasher.apply(null, args);
            if (has.call(memo, key)) {   
                async.setImmediate(function () {
                    callback.apply(null, memo[key]);
                });
            }
            else if (has.call(queues, key)) {
                queues[key].push(callback);
            }
            else {
                queues[key] = [callback];
                fn.apply(null, args.concat([_restParam(function (args) {
                    memo[key] = args;
                    var q = queues[key];
                    delete queues[key];
                    for (var i = 0, l = q.length; i < l; i++) {
                        q[i].apply(null, args);
                    }
                })]));
            }
        });
        memoized.memo = memo;
        memoized.unmemoized = fn;
        return memoized;
    };

    async.unmemoize = function (fn) {
        return function () {
            return (fn.unmemoized || fn).apply(null, arguments);
        };
    };

    function _times(mapper) {
        return function (count, iterator, callback) {
            mapper(_range(count), iterator, callback);
        };
    }

    async.times = _times(async.map);
    async.timesSeries = _times(async.mapSeries);
    async.timesLimit = function (count, limit, iterator, callback) {
        return async.mapLimit(_range(count), limit, iterator, callback);
    };

    async.seq = function (/* functions... */) {
        var fns = arguments;
        return _restParam(function (args) {
            var that = this;

            var callback = args[args.length - 1];
            if (typeof callback == 'function') {
                args.pop();
            } else {
                callback = noop;
            }

            async.reduce(fns, args, function (newargs, fn, cb) {
                fn.apply(that, newargs.concat([_restParam(function (err, nextargs) {
                    cb(err, nextargs);
                })]));
            },
            function (err, results) {
                callback.apply(that, [err].concat(results));
            });
        });
    };

    async.compose = function (/* functions... */) {
        return async.seq.apply(null, Array.prototype.reverse.call(arguments));
    };


    function _applyEach(eachfn) {
        return _restParam(function(fns, args) {
            var go = _restParam(function(args) {
                var that = this;
                var callback = args.pop();
                return eachfn(fns, function (fn, _, cb) {
                    fn.apply(that, args.concat([cb]));
                },
                callback);
            });
            if (args.length) {
                return go.apply(this, args);
            }
            else {
                return go;
            }
        });
    }

    async.applyEach = _applyEach(async.eachOf);
    async.applyEachSeries = _applyEach(async.eachOfSeries);


    async.forever = function (fn, callback) {
        var done = only_once(callback || noop);
        var task = ensureAsync(fn);
        function next(err) {
            if (err) {
                return done(err);
            }
            task(next);
        }
        next();
    };

    function ensureAsync(fn) {
        return _restParam(function (args) {
            var callback = args.pop();
            args.push(function () {
                var innerArgs = arguments;
                if (sync) {
                    async.setImmediate(function () {
                        callback.apply(null, innerArgs);
                    });
                } else {
                    callback.apply(null, innerArgs);
                }
            });
            var sync = true;
            fn.apply(this, args);
            sync = false;
        });
    }

    async.ensureAsync = ensureAsync;

    async.constant = _restParam(function(values) {
        var args = [null].concat(values);
        return function (callback) {
            return callback.apply(this, args);
        };
    });

    async.wrapSync =
    async.asyncify = function asyncify(func) {
        return _restParam(function (args) {
            var callback = args.pop();
            var result;
            try {
                result = func.apply(this, args);
            } catch (e) {
                return callback(e);
            }
            // if result is Promise object
            if (_isObject(result) && typeof result.then === "function") {
                result.then(function(value) {
                    callback(null, value);
                })["catch"](function(err) {
                    callback(err.message ? err : new Error(err));
                });
            } else {
                callback(null, result);
            }
        });
    };

    // Node.js
    if (typeof module === 'object' && module.exports) {
        module.exports = async;
    }
    // AMD / RequireJS
    else if (typeof define === 'function' && define.amd) {
        define([], function () {
            return async;
        });
    }
    // included directly via <script> tag
    else {
        root.async = async;
    }

}());

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"_process":19}],16:[function(require,module,exports){
(function (global){
/**
 * @license
 * Lo-Dash 2.4.1 (Custom Build) <http://lodash.com/>
 * Build: `lodash modern -o ./dist/lodash.js`
 * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.5.2 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <http://lodash.com/license>
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre ES5 environments */
  var undefined;

  /** Used to pool arrays and objects used internally */
  var arrayPool = [],
      objectPool = [];

  /** Used to generate unique IDs */
  var idCounter = 0;

  /** Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype` */
  var keyPrefix = +new Date + '';

  /** Used as the size when optimizations are enabled for large arrays */
  var largeArraySize = 75;

  /** Used as the max size of the `arrayPool` and `objectPool` */
  var maxPoolSize = 40;

  /** Used to detect and test whitespace */
  var whitespace = (
    // whitespace
    ' \t\x0B\f\xA0\ufeff' +

    // line terminators
    '\n\r\u2028\u2029' +

    // unicode category "Zs" space separators
    '\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000'
  );

  /** Used to match empty string literals in compiled template source */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /**
   * Used to match ES6 template delimiters
   * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-literals-string-literals
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match regexp flags from their coerced string values */
  var reFlags = /\w*$/;

  /** Used to detected named functions */
  var reFuncName = /^\s*function[ \n\r\t]+\w/;

  /** Used to match "interpolate" template delimiters */
  var reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match leading whitespace and zeros to be removed */
  var reLeadingSpacesAndZeros = RegExp('^[' + whitespace + ']*0+(?=.$)');

  /** Used to ensure capturing order of template delimiters */
  var reNoMatch = /($^)/;

  /** Used to detect functions containing a `this` reference */
  var reThis = /\bthis\b/;

  /** Used to match unescaped characters in compiled string literals */
  var reUnescapedString = /['\n\r\t\u2028\u2029\\]/g;

  /** Used to assign default `context` object properties */
  var contextProps = [
    'Array', 'Boolean', 'Date', 'Function', 'Math', 'Number', 'Object',
    'RegExp', 'String', '_', 'attachEvent', 'clearTimeout', 'isFinite', 'isNaN',
    'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify */
  var templateCounter = 0;

  /** `Object#toString` result shortcuts */
  var argsClass = '[object Arguments]',
      arrayClass = '[object Array]',
      boolClass = '[object Boolean]',
      dateClass = '[object Date]',
      funcClass = '[object Function]',
      numberClass = '[object Number]',
      objectClass = '[object Object]',
      regexpClass = '[object RegExp]',
      stringClass = '[object String]';

  /** Used to identify object classifications that `_.clone` supports */
  var cloneableClasses = {};
  cloneableClasses[funcClass] = false;
  cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
  cloneableClasses[boolClass] = cloneableClasses[dateClass] =
  cloneableClasses[numberClass] = cloneableClasses[objectClass] =
  cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

  /** Used as an internal `_.debounce` options object */
  var debounceOptions = {
    'leading': false,
    'maxWait': 0,
    'trailing': false
  };

  /** Used as the property descriptor for `__bindData__` */
  var descriptor = {
    'configurable': false,
    'enumerable': false,
    'value': null,
    'writable': false
  };

  /** Used to determine if values are of the language type Object */
  var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
  };

  /** Used to escape characters for inclusion in compiled string literals */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\t': 't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Used as a reference to the global object */
  var root = (objectTypes[typeof window] && window) || this;

  /** Detect free variable `exports` */
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;

  /** Detect free variable `module` */
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports` */
  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;

  /** Detect free variable `global` from Node.js or Browserified code and use it as `root` */
  var freeGlobal = objectTypes[typeof global] && global;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
    root = freeGlobal;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * The base implementation of `_.indexOf` without support for binary searches
   * or `fromIndex` constraints.
   *
   * @private
   * @param {Array} array The array to search.
   * @param {*} value The value to search for.
   * @param {number} [fromIndex=0] The index to search from.
   * @returns {number} Returns the index of the matched value or `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    var index = (fromIndex || 0) - 1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * An implementation of `_.contains` for cache objects that mimics the return
   * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.
   *
   * @private
   * @param {Object} cache The cache object to inspect.
   * @param {*} value The value to search for.
   * @returns {number} Returns `0` if `value` is found, else `-1`.
   */
  function cacheIndexOf(cache, value) {
    var type = typeof value;
    cache = cache.cache;

    if (type == 'boolean' || value == null) {
      return cache[value] ? 0 : -1;
    }
    if (type != 'number' && type != 'string') {
      type = 'object';
    }
    var key = type == 'number' ? value : keyPrefix + value;
    cache = (cache = cache[type]) && cache[key];

    return type == 'object'
      ? (cache && baseIndexOf(cache, value) > -1 ? 0 : -1)
      : (cache ? 0 : -1);
  }

  /**
   * Adds a given value to the corresponding cache object.
   *
   * @private
   * @param {*} value The value to add to the cache.
   */
  function cachePush(value) {
    var cache = this.cache,
        type = typeof value;

    if (type == 'boolean' || value == null) {
      cache[value] = true;
    } else {
      if (type != 'number' && type != 'string') {
        type = 'object';
      }
      var key = type == 'number' ? value : keyPrefix + value,
          typeCache = cache[type] || (cache[type] = {});

      if (type == 'object') {
        (typeCache[key] || (typeCache[key] = [])).push(value);
      } else {
        typeCache[key] = true;
      }
    }
  }

  /**
   * Used by `_.max` and `_.min` as the default callback when a given
   * collection is a string value.
   *
   * @private
   * @param {string} value The character to inspect.
   * @returns {number} Returns the code unit of given character.
   */
  function charAtCallback(value) {
    return value.charCodeAt(0);
  }

  /**
   * Used by `sortBy` to compare transformed `collection` elements, stable sorting
   * them in ascending order.
   *
   * @private
   * @param {Object} a The object to compare to `b`.
   * @param {Object} b The object to compare to `a`.
   * @returns {number} Returns the sort order indicator of `1` or `-1`.
   */
  function compareAscending(a, b) {
    var ac = a.criteria,
        bc = b.criteria,
        index = -1,
        length = ac.length;

    while (++index < length) {
      var value = ac[index],
          other = bc[index];

      if (value !== other) {
        if (value > other || typeof value == 'undefined') {
          return 1;
        }
        if (value < other || typeof other == 'undefined') {
          return -1;
        }
      }
    }
    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
    // that causes it, under certain circumstances, to return the same value for
    // `a` and `b`. See https://github.com/jashkenas/underscore/pull/1247
    //
    // This also ensures a stable sort in V8 and other engines.
    // See http://code.google.com/p/v8/issues/detail?id=90
    return a.index - b.index;
  }

  /**
   * Creates a cache object to optimize linear searches of large arrays.
   *
   * @private
   * @param {Array} [array=[]] The array to search.
   * @returns {null|Object} Returns the cache object or `null` if caching should not be used.
   */
  function createCache(array) {
    var index = -1,
        length = array.length,
        first = array[0],
        mid = array[(length / 2) | 0],
        last = array[length - 1];

    if (first && typeof first == 'object' &&
        mid && typeof mid == 'object' && last && typeof last == 'object') {
      return false;
    }
    var cache = getObject();
    cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

    var result = getObject();
    result.array = array;
    result.cache = cache;
    result.push = cachePush;

    while (++index < length) {
      result.push(array[index]);
    }
    return result;
  }

  /**
   * Used by `template` to escape characters for inclusion in compiled
   * string literals.
   *
   * @private
   * @param {string} match The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(match) {
    return '\\' + stringEscapes[match];
  }

  /**
   * Gets an array from the array pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Array} The array from the pool.
   */
  function getArray() {
    return arrayPool.pop() || [];
  }

  /**
   * Gets an object from the object pool or creates a new one if the pool is empty.
   *
   * @private
   * @returns {Object} The object from the pool.
   */
  function getObject() {
    return objectPool.pop() || {
      'array': null,
      'cache': null,
      'criteria': null,
      'false': false,
      'index': 0,
      'null': false,
      'number': null,
      'object': null,
      'push': null,
      'string': null,
      'true': false,
      'undefined': false,
      'value': null
    };
  }

  /**
   * Releases the given array back to the array pool.
   *
   * @private
   * @param {Array} [array] The array to release.
   */
  function releaseArray(array) {
    array.length = 0;
    if (arrayPool.length < maxPoolSize) {
      arrayPool.push(array);
    }
  }

  /**
   * Releases the given object back to the object pool.
   *
   * @private
   * @param {Object} [object] The object to release.
   */
  function releaseObject(object) {
    var cache = object.cache;
    if (cache) {
      releaseObject(cache);
    }
    object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
    if (objectPool.length < maxPoolSize) {
      objectPool.push(object);
    }
  }

  /**
   * Slices the `collection` from the `start` index up to, but not including,
   * the `end` index.
   *
   * Note: This function is used instead of `Array#slice` to support node lists
   * in IE < 9 and to ensure dense arrays are returned.
   *
   * @private
   * @param {Array|Object|string} collection The collection to slice.
   * @param {number} start The start index.
   * @param {number} end The end index.
   * @returns {Array} Returns the new array.
   */
  function slice(array, start, end) {
    start || (start = 0);
    if (typeof end == 'undefined') {
      end = array ? array.length : 0;
    }
    var index = -1,
        length = end - start || 0,
        result = Array(length < 0 ? 0 : length);

    while (++index < length) {
      result[index] = array[start + index];
    }
    return result;
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new `lodash` function using the given context object.
   *
   * @static
   * @memberOf _
   * @category Utilities
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns the `lodash` function.
   */
  function runInContext(context) {
    // Avoid issues with some ES3 environments that attempt to use values, named
    // after built-in constructors like `Object`, for the creation of literals.
    // ES5 clears this up by stating that literals must use built-in constructors.
    // See http://es5.github.io/#x11.1.5.
    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;

    /** Native constructor references */
    var Array = context.Array,
        Boolean = context.Boolean,
        Date = context.Date,
        Function = context.Function,
        Math = context.Math,
        Number = context.Number,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /**
     * Used for `Array` method references.
     *
     * Normally `Array.prototype` would suffice, however, using an array literal
     * avoids issues in Narwhal.
     */
    var arrayRef = [];

    /** Used for native method references */
    var objectProto = Object.prototype;

    /** Used to restore the original `_` reference in `noConflict` */
    var oldDash = context._;

    /** Used to resolve the internal [[Class]] of values */
    var toString = objectProto.toString;

    /** Used to detect if a method is native */
    var reNative = RegExp('^' +
      String(toString)
        .replace(/[.*+?^${}()|[\]\\]/g, '\\$&')
        .replace(/toString| for [^\]]+/g, '.*?') + '$'
    );

    /** Native method shortcuts */
    var ceil = Math.ceil,
        clearTimeout = context.clearTimeout,
        floor = Math.floor,
        fnToString = Function.prototype.toString,
        getPrototypeOf = isNative(getPrototypeOf = Object.getPrototypeOf) && getPrototypeOf,
        hasOwnProperty = objectProto.hasOwnProperty,
        push = arrayRef.push,
        setTimeout = context.setTimeout,
        splice = arrayRef.splice,
        unshift = arrayRef.unshift;

    /** Used to set meta data on functions */
    var defineProperty = (function() {
      // IE 8 only accepts DOM elements
      try {
        var o = {},
            func = isNative(func = Object.defineProperty) && func,
            result = func(o, o, o) && func;
      } catch(e) { }
      return result;
    }());

    /* Native method shortcuts for methods with the same name as other `lodash` methods */
    var nativeCreate = isNative(nativeCreate = Object.create) && nativeCreate,
        nativeIsArray = isNative(nativeIsArray = Array.isArray) && nativeIsArray,
        nativeIsFinite = context.isFinite,
        nativeIsNaN = context.isNaN,
        nativeKeys = isNative(nativeKeys = Object.keys) && nativeKeys,
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random;

    /** Used to lookup a built-in constructor by [[Class]] */
    var ctorByClass = {};
    ctorByClass[arrayClass] = Array;
    ctorByClass[boolClass] = Boolean;
    ctorByClass[dateClass] = Date;
    ctorByClass[funcClass] = Function;
    ctorByClass[objectClass] = Object;
    ctorByClass[numberClass] = Number;
    ctorByClass[regexpClass] = RegExp;
    ctorByClass[stringClass] = String;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps the given value to enable intuitive
     * method chaining.
     *
     * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:
     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,
     * and `unshift`
     *
     * Chaining is supported in custom builds as long as the `value` method is
     * implicitly or explicitly included in the build.
     *
     * The chainable wrapper functions are:
     * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,
     * `compose`, `concat`, `countBy`, `create`, `createCallback`, `curry`,
     * `debounce`, `defaults`, `defer`, `delay`, `difference`, `filter`, `flatten`,
     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,
     * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,
     * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `pull`, `push`,
     * `range`, `reject`, `remove`, `rest`, `reverse`, `shuffle`, `slice`, `sort`,
     * `sortBy`, `splice`, `tap`, `throttle`, `times`, `toArray`, `transform`,
     * `union`, `uniq`, `unshift`, `unzip`, `values`, `where`, `without`, `wrap`,
     * and `zip`
     *
     * The non-chainable wrapper functions are:
     * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `findIndex`,
     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `has`, `identity`,
     * `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,
     * `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`, `isNull`, `isNumber`,
     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`, `join`,
     * `lastIndexOf`, `mixin`, `noConflict`, `parseInt`, `pop`, `random`, `reduce`,
     * `reduceRight`, `result`, `shift`, `size`, `some`, `sortedIndex`, `runInContext`,
     * `template`, `unescape`, `uniqueId`, and `value`
     *
     * The wrapper functions `first` and `last` return wrapped values when `n` is
     * provided, otherwise they return unwrapped values.
     *
     * Explicit chaining can be enabled by using the `_.chain` method.
     *
     * @name _
     * @constructor
     * @category Chaining
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns a `lodash` instance.
     * @example
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // returns an unwrapped value
     * wrapped.reduce(function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * // returns a wrapped value
     * var squares = wrapped.map(function(num) {
     *   return num * num;
     * });
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      // don't wrap if already wrapped, even if wrapped by a different `lodash` constructor
      return (value && typeof value == 'object' && !isArray(value) && hasOwnProperty.call(value, '__wrapped__'))
       ? value
       : new lodashWrapper(value);
    }

    /**
     * A fast path for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap in a `lodash` instance.
     * @param {boolean} chainAll A flag to enable chaining for all methods
     * @returns {Object} Returns a `lodash` instance.
     */
    function lodashWrapper(value, chainAll) {
      this.__chain__ = !!chainAll;
      this.__wrapped__ = value;
    }
    // ensure `new lodashWrapper` is an instance of `lodash`
    lodashWrapper.prototype = lodash.prototype;

    /**
     * An object used to flag environments features.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    var support = lodash.support = {};

    /**
     * Detect if functions can be decompiled by `Function#toString`
     * (all but PS3 and older Opera mobile browsers & avoided in Windows 8 apps).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcDecomp = !isNative(context.WinRTError) && reThis.test(runInContext);

    /**
     * Detect if `Function#name` is supported (all but IE).
     *
     * @memberOf _.support
     * @type boolean
     */
    support.funcNames = typeof Function.name == 'string';

    /**
     * By default, the template delimiters used by Lo-Dash are similar to those in
     * embedded Ruby (ERB). Change the following template settings to use alternative
     * delimiters.
     *
     * @static
     * @memberOf _
     * @type Object
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'escape': /<%-([\s\S]+?)%>/g,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'evaluate': /<%([\s\S]+?)%>/g,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type RegExp
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type string
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type Object
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type Function
         */
        '_': lodash
      }
    };

    /*--------------------------------------------------------------------------*/

    /**
     * The base implementation of `_.bind` that creates the bound function and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new bound function.
     */
    function baseBind(bindData) {
      var func = bindData[0],
          partialArgs = bindData[2],
          thisArg = bindData[4];

      function bound() {
        // `Function#bind` spec
        // http://es5.github.io/#x15.3.4.5
        if (partialArgs) {
          // avoid `arguments` object deoptimizations by using `slice` instead
          // of `Array.prototype.slice.call` and not assigning `arguments` to a
          // variable as a ternary expression
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        // mimic the constructor's `return` behavior
        // http://es5.github.io/#x13.2.2
        if (this instanceof bound) {
          // ensure `new bound` is an instance of `func`
          var thisBinding = baseCreate(func.prototype),
              result = func.apply(thisBinding, args || arguments);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisArg, args || arguments);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.clone` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates clones with source counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, isDeep, callback, stackA, stackB) {
      if (callback) {
        var result = callback(value);
        if (typeof result != 'undefined') {
          return result;
        }
      }
      // inspect [[Class]]
      var isObj = isObject(value);
      if (isObj) {
        var className = toString.call(value);
        if (!cloneableClasses[className]) {
          return value;
        }
        var ctor = ctorByClass[className];
        switch (className) {
          case boolClass:
          case dateClass:
            return new ctor(+value);

          case numberClass:
          case stringClass:
            return new ctor(value);

          case regexpClass:
            result = ctor(value.source, reFlags.exec(value));
            result.lastIndex = value.lastIndex;
            return result;
        }
      } else {
        return value;
      }
      var isArr = isArray(value);
      if (isDeep) {
        // check for circular references and return corresponding clone
        var initedStack = !stackA;
        stackA || (stackA = getArray());
        stackB || (stackB = getArray());

        var length = stackA.length;
        while (length--) {
          if (stackA[length] == value) {
            return stackB[length];
          }
        }
        result = isArr ? ctor(value.length) : {};
      }
      else {
        result = isArr ? slice(value) : assign({}, value);
      }
      // add array properties assigned by `RegExp#exec`
      if (isArr) {
        if (hasOwnProperty.call(value, 'index')) {
          result.index = value.index;
        }
        if (hasOwnProperty.call(value, 'input')) {
          result.input = value.input;
        }
      }
      // exit for shallow clone
      if (!isDeep) {
        return result;
      }
      // add the source value to the stack of traversed objects
      // and associate it with its clone
      stackA.push(value);
      stackB.push(result);

      // recursively populate clone (susceptible to call stack limits)
      (isArr ? forEach : forOwn)(value, function(objValue, key) {
        result[key] = baseClone(objValue, isDeep, callback, stackA, stackB);
      });

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(prototype, properties) {
      return isObject(prototype) ? nativeCreate(prototype) : {};
    }
    // fallback for browsers without `Object.create`
    if (!nativeCreate) {
      baseCreate = (function() {
        function Object() {}
        return function(prototype) {
          if (isObject(prototype)) {
            Object.prototype = prototype;
            var result = new Object;
            Object.prototype = null;
          }
          return result || context.Object();
        };
      }());
    }

    /**
     * The base implementation of `_.createCallback` without support for creating
     * "_.pluck" or "_.where" style callbacks.
     *
     * @private
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     */
    function baseCreateCallback(func, thisArg, argCount) {
      if (typeof func != 'function') {
        return identity;
      }
      // exit early for no `thisArg` or already bound by `Function#bind`
      if (typeof thisArg == 'undefined' || !('prototype' in func)) {
        return func;
      }
      var bindData = func.__bindData__;
      if (typeof bindData == 'undefined') {
        if (support.funcNames) {
          bindData = !func.name;
        }
        bindData = bindData || !support.funcDecomp;
        if (!bindData) {
          var source = fnToString.call(func);
          if (!support.funcNames) {
            bindData = !reFuncName.test(source);
          }
          if (!bindData) {
            // checks if `func` references the `this` keyword and stores the result
            bindData = reThis.test(source);
            setBindData(func, bindData);
          }
        }
      }
      // exit early if there are no `this` references or `func` is bound
      if (bindData === false || (bindData !== true && bindData[1] & 1)) {
        return func;
      }
      switch (argCount) {
        case 1: return function(value) {
          return func.call(thisArg, value);
        };
        case 2: return function(a, b) {
          return func.call(thisArg, a, b);
        };
        case 3: return function(value, index, collection) {
          return func.call(thisArg, value, index, collection);
        };
        case 4: return function(accumulator, value, index, collection) {
          return func.call(thisArg, accumulator, value, index, collection);
        };
      }
      return bind(func, thisArg);
    }

    /**
     * The base implementation of `createWrapper` that creates the wrapper and
     * sets its meta data.
     *
     * @private
     * @param {Array} bindData The bind data array.
     * @returns {Function} Returns the new function.
     */
    function baseCreateWrapper(bindData) {
      var func = bindData[0],
          bitmask = bindData[1],
          partialArgs = bindData[2],
          partialRightArgs = bindData[3],
          thisArg = bindData[4],
          arity = bindData[5];

      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          key = func;

      function bound() {
        var thisBinding = isBind ? thisArg : this;
        if (partialArgs) {
          var args = slice(partialArgs);
          push.apply(args, arguments);
        }
        if (partialRightArgs || isCurry) {
          args || (args = slice(arguments));
          if (partialRightArgs) {
            push.apply(args, partialRightArgs);
          }
          if (isCurry && args.length < arity) {
            bitmask |= 16 & ~32;
            return baseCreateWrapper([func, (isCurryBound ? bitmask : bitmask & ~3), args, null, thisArg, arity]);
          }
        }
        args || (args = arguments);
        if (isBindKey) {
          func = thisBinding[key];
        }
        if (this instanceof bound) {
          thisBinding = baseCreate(func.prototype);
          var result = func.apply(thisBinding, args);
          return isObject(result) ? result : thisBinding;
        }
        return func.apply(thisBinding, args);
      }
      setBindData(bound, bindData);
      return bound;
    }

    /**
     * The base implementation of `_.difference` that accepts a single array
     * of values to exclude.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {Array} [values] The array of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     */
    function baseDifference(array, values) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          isLarge = length >= largeArraySize && indexOf === baseIndexOf,
          result = [];

      if (isLarge) {
        var cache = createCache(values);
        if (cache) {
          indexOf = cacheIndexOf;
          values = cache;
        } else {
          isLarge = false;
        }
      }
      while (++index < length) {
        var value = array[index];
        if (indexOf(values, value) < 0) {
          result.push(value);
        }
      }
      if (isLarge) {
        releaseObject(values);
      }
      return result;
    }

    /**
     * The base implementation of `_.flatten` without support for callback
     * shorthands or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {boolean} [isStrict=false] A flag to restrict flattening to arrays and `arguments` objects.
     * @param {number} [fromIndex=0] The index to start from.
     * @returns {Array} Returns a new flattened array.
     */
    function baseFlatten(array, isShallow, isStrict, fromIndex) {
      var index = (fromIndex || 0) - 1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];

        if (value && typeof value == 'object' && typeof value.length == 'number'
            && (isArray(value) || isArguments(value))) {
          // recursively flatten arrays (susceptible to call stack limits)
          if (!isShallow) {
            value = baseFlatten(value, isShallow, isStrict);
          }
          var valIndex = -1,
              valLength = value.length,
              resIndex = result.length;

          result.length += valLength;
          while (++valIndex < valLength) {
            result[resIndex++] = value[valIndex];
          }
        } else if (!isStrict) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.isEqual`, without support for `thisArg` binding,
     * that allows partial "_.where" style comparisons.
     *
     * @private
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {Function} [isWhere=false] A flag to indicate performing partial comparisons.
     * @param {Array} [stackA=[]] Tracks traversed `a` objects.
     * @param {Array} [stackB=[]] Tracks traversed `b` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(a, b, callback, isWhere, stackA, stackB) {
      // used to indicate that when comparing objects, `a` has at least the properties of `b`
      if (callback) {
        var result = callback(a, b);
        if (typeof result != 'undefined') {
          return !!result;
        }
      }
      // exit early for identical values
      if (a === b) {
        // treat `+0` vs. `-0` as not equal
        return a !== 0 || (1 / a == 1 / b);
      }
      var type = typeof a,
          otherType = typeof b;

      // exit early for unlike primitive values
      if (a === a &&
          !(a && objectTypes[type]) &&
          !(b && objectTypes[otherType])) {
        return false;
      }
      // exit early for `null` and `undefined` avoiding ES3's Function#call behavior
      // http://es5.github.io/#x15.3.4.4
      if (a == null || b == null) {
        return a === b;
      }
      // compare [[Class]] names
      var className = toString.call(a),
          otherClass = toString.call(b);

      if (className == argsClass) {
        className = objectClass;
      }
      if (otherClass == argsClass) {
        otherClass = objectClass;
      }
      if (className != otherClass) {
        return false;
      }
      switch (className) {
        case boolClass:
        case dateClass:
          // coerce dates and booleans to numbers, dates to milliseconds and booleans
          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal
          return +a == +b;

        case numberClass:
          // treat `NaN` vs. `NaN` as equal
          return (a != +a)
            ? b != +b
            // but treat `+0` vs. `-0` as not equal
            : (a == 0 ? (1 / a == 1 / b) : a == +b);

        case regexpClass:
        case stringClass:
          // coerce regexes to strings (http://es5.github.io/#x15.10.6.4)
          // treat string primitives and their corresponding object instances as equal
          return a == String(b);
      }
      var isArr = className == arrayClass;
      if (!isArr) {
        // unwrap any `lodash` wrapped values
        var aWrapped = hasOwnProperty.call(a, '__wrapped__'),
            bWrapped = hasOwnProperty.call(b, '__wrapped__');

        if (aWrapped || bWrapped) {
          return baseIsEqual(aWrapped ? a.__wrapped__ : a, bWrapped ? b.__wrapped__ : b, callback, isWhere, stackA, stackB);
        }
        // exit for functions and DOM nodes
        if (className != objectClass) {
          return false;
        }
        // in older versions of Opera, `arguments` objects have `Array` constructors
        var ctorA = a.constructor,
            ctorB = b.constructor;

        // non `Object` object instances with different constructors are not equal
        if (ctorA != ctorB &&
              !(isFunction(ctorA) && ctorA instanceof ctorA && isFunction(ctorB) && ctorB instanceof ctorB) &&
              ('constructor' in a && 'constructor' in b)
            ) {
          return false;
        }
      }
      // assume cyclic structures are equal
      // the algorithm for detecting cyclic structures is adapted from ES 5.1
      // section 15.12.3, abstract operation `JO` (http://es5.github.io/#x15.12.3)
      var initedStack = !stackA;
      stackA || (stackA = getArray());
      stackB || (stackB = getArray());

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == a) {
          return stackB[length] == b;
        }
      }
      var size = 0;
      result = true;

      // add `a` and `b` to the stack of traversed objects
      stackA.push(a);
      stackB.push(b);

      // recursively compare objects and arrays (susceptible to call stack limits)
      if (isArr) {
        // compare lengths to determine if a deep comparison is necessary
        length = a.length;
        size = b.length;
        result = size == length;

        if (result || isWhere) {
          // deep compare the contents, ignoring non-numeric properties
          while (size--) {
            var index = length,
                value = b[size];

            if (isWhere) {
              while (index--) {
                if ((result = baseIsEqual(a[index], value, callback, isWhere, stackA, stackB))) {
                  break;
                }
              }
            } else if (!(result = baseIsEqual(a[size], value, callback, isWhere, stackA, stackB))) {
              break;
            }
          }
        }
      }
      else {
        // deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`
        // which, in this case, is more costly
        forIn(b, function(value, key, b) {
          if (hasOwnProperty.call(b, key)) {
            // count the number of properties.
            size++;
            // deep compare each property value.
            return (result = hasOwnProperty.call(a, key) && baseIsEqual(a[key], value, callback, isWhere, stackA, stackB));
          }
        });

        if (result && !isWhere) {
          // ensure both objects have the same number of properties
          forIn(a, function(value, key, a) {
            if (hasOwnProperty.call(a, key)) {
              // `size` will be `-1` if `a` has more properties than `b`
              return (result = --size > -1);
            }
          });
        }
      }
      stackA.pop();
      stackB.pop();

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    /**
     * The base implementation of `_.merge` without argument juggling or support
     * for `thisArg` binding.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {Array} [stackA=[]] Tracks traversed source objects.
     * @param {Array} [stackB=[]] Associates values with source counterparts.
     */
    function baseMerge(object, source, callback, stackA, stackB) {
      (isArray(source) ? forEach : forOwn)(source, function(source, key) {
        var found,
            isArr,
            result = source,
            value = object[key];

        if (source && ((isArr = isArray(source)) || isPlainObject(source))) {
          // avoid merging previously merged cyclic sources
          var stackLength = stackA.length;
          while (stackLength--) {
            if ((found = stackA[stackLength] == source)) {
              value = stackB[stackLength];
              break;
            }
          }
          if (!found) {
            var isShallow;
            if (callback) {
              result = callback(value, source);
              if ((isShallow = typeof result != 'undefined')) {
                value = result;
              }
            }
            if (!isShallow) {
              value = isArr
                ? (isArray(value) ? value : [])
                : (isPlainObject(value) ? value : {});
            }
            // add `source` and associated `value` to the stack of traversed objects
            stackA.push(source);
            stackB.push(value);

            // recursively merge objects and arrays (susceptible to call stack limits)
            if (!isShallow) {
              baseMerge(value, source, callback, stackA, stackB);
            }
          }
        }
        else {
          if (callback) {
            result = callback(value, source);
            if (typeof result == 'undefined') {
              result = source;
            }
          }
          if (typeof result != 'undefined') {
            value = result;
          }
        }
        object[key] = value;
      });
    }

    /**
     * The base implementation of `_.random` without argument juggling or support
     * for returning floating-point numbers.
     *
     * @private
     * @param {number} min The minimum possible value.
     * @param {number} max The maximum possible value.
     * @returns {number} Returns a random number.
     */
    function baseRandom(min, max) {
      return min + floor(nativeRandom() * (max - min + 1));
    }

    /**
     * The base implementation of `_.uniq` without support for callback shorthands
     * or `thisArg` binding.
     *
     * @private
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function} [callback] The function called per iteration.
     * @returns {Array} Returns a duplicate-value-free array.
     */
    function baseUniq(array, isSorted, callback) {
      var index = -1,
          indexOf = getIndexOf(),
          length = array ? array.length : 0,
          result = [];

      var isLarge = !isSorted && length >= largeArraySize && indexOf === baseIndexOf,
          seen = (callback || isLarge) ? getArray() : result;

      if (isLarge) {
        var cache = createCache(seen);
        indexOf = cacheIndexOf;
        seen = cache;
      }
      while (++index < length) {
        var value = array[index],
            computed = callback ? callback(value, index, array) : value;

        if (isSorted
              ? !index || seen[seen.length - 1] !== computed
              : indexOf(seen, computed) < 0
            ) {
          if (callback || isLarge) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      if (isLarge) {
        releaseArray(seen.array);
        releaseObject(seen);
      } else if (callback) {
        releaseArray(seen);
      }
      return result;
    }

    /**
     * Creates a function that aggregates a collection, creating an object composed
     * of keys generated from the results of running each element of the collection
     * through a callback. The given `setter` function sets the keys and values
     * of the composed object.
     *
     * @private
     * @param {Function} setter The setter function.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter) {
      return function(collection, callback, thisArg) {
        var result = {};
        callback = lodash.createCallback(callback, thisArg, 3);

        var index = -1,
            length = collection ? collection.length : 0;

        if (typeof length == 'number') {
          while (++index < length) {
            var value = collection[index];
            setter(result, value, callback(value, index, collection), collection);
          }
        } else {
          forOwn(collection, function(value, key, collection) {
            setter(result, value, callback(value, key, collection), collection);
          });
        }
        return result;
      };
    }

    /**
     * Creates a function that, when called, either curries or invokes `func`
     * with an optional `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to reference.
     * @param {number} bitmask The bitmask of method flags to compose.
     *  The bitmask may be composed of the following flags:
     *  1 - `_.bind`
     *  2 - `_.bindKey`
     *  4 - `_.curry`
     *  8 - `_.curry` (bound)
     *  16 - `_.partial`
     *  32 - `_.partialRight`
     * @param {Array} [partialArgs] An array of arguments to prepend to those
     *  provided to the new function.
     * @param {Array} [partialRightArgs] An array of arguments to append to those
     *  provided to the new function.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new function.
     */
    function createWrapper(func, bitmask, partialArgs, partialRightArgs, thisArg, arity) {
      var isBind = bitmask & 1,
          isBindKey = bitmask & 2,
          isCurry = bitmask & 4,
          isCurryBound = bitmask & 8,
          isPartial = bitmask & 16,
          isPartialRight = bitmask & 32;

      if (!isBindKey && !isFunction(func)) {
        throw new TypeError;
      }
      if (isPartial && !partialArgs.length) {
        bitmask &= ~16;
        isPartial = partialArgs = false;
      }
      if (isPartialRight && !partialRightArgs.length) {
        bitmask &= ~32;
        isPartialRight = partialRightArgs = false;
      }
      var bindData = func && func.__bindData__;
      if (bindData && bindData !== true) {
        // clone `bindData`
        bindData = slice(bindData);
        if (bindData[2]) {
          bindData[2] = slice(bindData[2]);
        }
        if (bindData[3]) {
          bindData[3] = slice(bindData[3]);
        }
        // set `thisBinding` is not previously bound
        if (isBind && !(bindData[1] & 1)) {
          bindData[4] = thisArg;
        }
        // set if previously bound but not currently (subsequent curried functions)
        if (!isBind && bindData[1] & 1) {
          bitmask |= 8;
        }
        // set curried arity if not yet set
        if (isCurry && !(bindData[1] & 4)) {
          bindData[5] = arity;
        }
        // append partial left arguments
        if (isPartial) {
          push.apply(bindData[2] || (bindData[2] = []), partialArgs);
        }
        // append partial right arguments
        if (isPartialRight) {
          unshift.apply(bindData[3] || (bindData[3] = []), partialRightArgs);
        }
        // merge flags
        bindData[1] |= bitmask;
        return createWrapper.apply(null, bindData);
      }
      // fast path for `_.bind`
      var creater = (bitmask == 1 || bitmask === 17) ? baseBind : baseCreateWrapper;
      return creater([func, bitmask, partialArgs, partialRightArgs, thisArg, arity]);
    }

    /**
     * Used by `escape` to convert characters to HTML entities.
     *
     * @private
     * @param {string} match The matched character to escape.
     * @returns {string} Returns the escaped character.
     */
    function escapeHtmlChar(match) {
      return htmlEscapes[match];
    }

    /**
     * Gets the appropriate "indexOf" function. If the `_.indexOf` method is
     * customized, this method returns the custom method, otherwise it returns
     * the `baseIndexOf` function.
     *
     * @private
     * @returns {Function} Returns the "indexOf" function.
     */
    function getIndexOf() {
      var result = (result = lodash.indexOf) === indexOf ? baseIndexOf : result;
      return result;
    }

    /**
     * Checks if `value` is a native function.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a native function, else `false`.
     */
    function isNative(value) {
      return typeof value == 'function' && reNative.test(value);
    }

    /**
     * Sets `this` binding data on a given function.
     *
     * @private
     * @param {Function} func The function to set data on.
     * @param {Array} value The data array to set.
     */
    var setBindData = !defineProperty ? noop : function(func, value) {
      descriptor.value = value;
      defineProperty(func, '__bindData__', descriptor);
    };

    /**
     * A fallback implementation of `isPlainObject` which checks if a given value
     * is an object created by the `Object` constructor, assuming objects created
     * by the `Object` constructor have no inherited enumerable properties and that
     * there are no `Object.prototype` extensions.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     */
    function shimIsPlainObject(value) {
      var ctor,
          result;

      // avoid non Object objects, `arguments` objects, and DOM elements
      if (!(value && toString.call(value) == objectClass) ||
          (ctor = value.constructor, isFunction(ctor) && !(ctor instanceof ctor))) {
        return false;
      }
      // In most environments an object's own properties are iterated before
      // its inherited properties. If the last iterated property is an object's
      // own property then there are no inherited enumerable properties.
      forIn(value, function(value, key) {
        result = key;
      });
      return typeof result == 'undefined' || hasOwnProperty.call(value, result);
    }

    /**
     * Used by `unescape` to convert HTML entities to characters.
     *
     * @private
     * @param {string} match The matched character to unescape.
     * @returns {string} Returns the unescaped character.
     */
    function unescapeHtmlChar(match) {
      return htmlUnescapes[match];
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Checks if `value` is an `arguments` object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an `arguments` object, else `false`.
     * @example
     *
     * (function() { return _.isArguments(arguments); })(1, 2, 3);
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == argsClass || false;
    }

    /**
     * Checks if `value` is an array.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an array, else `false`.
     * @example
     *
     * (function() { return _.isArray(arguments); })();
     * // => false
     *
     * _.isArray([1, 2, 3]);
     * // => true
     */
    var isArray = nativeIsArray || function(value) {
      return value && typeof value == 'object' && typeof value.length == 'number' &&
        toString.call(value) == arrayClass || false;
    };

    /**
     * A fallback implementation of `Object.keys` which produces an array of the
     * given object's own enumerable property names.
     *
     * @private
     * @type Function
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     */
    var shimKeys = function(object) {
      var index, iterable = object, result = [];
      if (!iterable) return result;
      if (!(objectTypes[typeof object])) return result;
        for (index in iterable) {
          if (hasOwnProperty.call(iterable, index)) {
            result.push(index);
          }
        }
      return result
    };

    /**
     * Creates an array composed of the own enumerable property names of an object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names.
     * @example
     *
     * _.keys({ 'one': 1, 'two': 2, 'three': 3 });
     * // => ['one', 'two', 'three'] (property order is not guaranteed across environments)
     */
    var keys = !nativeKeys ? shimKeys : function(object) {
      if (!isObject(object)) {
        return [];
      }
      return nativeKeys(object);
    };

    /**
     * Used to convert characters to HTML entities:
     *
     * Though the `>` character is escaped for symmetry, characters like `>` and `/`
     * don't require escaping in HTML and have no special meaning unless they're part
     * of a tag or an unquoted attribute value.
     * http://mathiasbynens.be/notes/ambiguous-ampersands (under "semi-related fun fact")
     */
    var htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };

    /** Used to convert HTML entities to characters */
    var htmlUnescapes = invert(htmlEscapes);

    /** Used to match HTML entities and HTML characters */
    var reEscapedHtml = RegExp('(' + keys(htmlUnescapes).join('|') + ')', 'g'),
        reUnescapedHtml = RegExp('[' + keys(htmlEscapes).join('') + ']', 'g');

    /*--------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object. Subsequent sources will overwrite property assignments of previous
     * sources. If a callback is provided it will be executed to produce the
     * assigned values. The callback is bound to `thisArg` and invoked with two
     * arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @type Function
     * @alias extend
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize assigning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * _.assign({ 'name': 'fred' }, { 'employer': 'slate' });
     * // => { 'name': 'fred', 'employer': 'slate' }
     *
     * var defaults = _.partialRight(_.assign, function(a, b) {
     *   return typeof a == 'undefined' ? b : a;
     * });
     *
     * var object = { 'name': 'barney' };
     * defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var assign = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {
        var callback = baseCreateCallback(args[--argsLength - 1], args[argsLength--], 2);
      } else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {
        callback = args[--argsLength];
      }
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          result[index] = callback ? callback(result[index], iterable[index]) : iterable[index];
        }
        }
      }
      return result
    };

    /**
     * Creates a clone of `value`. If `isDeep` is `true` nested objects will also
     * be cloned, otherwise they will be assigned by reference. If a callback
     * is provided it will be executed to produce the cloned values. If the
     * callback returns `undefined` cloning will be handled by the method instead.
     * The callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to clone.
     * @param {boolean} [isDeep=false] Specify a deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var shallow = _.clone(characters);
     * shallow[0] === characters[0];
     * // => true
     *
     * var deep = _.clone(characters, true);
     * deep[0] === characters[0];
     * // => false
     *
     * _.mixin({
     *   'clone': _.partialRight(_.clone, function(value) {
     *     return _.isElement(value) ? value.cloneNode(false) : undefined;
     *   })
     * });
     *
     * var clone = _.clone(document.body);
     * clone.childNodes.length;
     * // => 0
     */
    function clone(value, isDeep, callback, thisArg) {
      // allows working with "Collections" methods without using their `index`
      // and `collection` arguments for `isDeep` and `callback`
      if (typeof isDeep != 'boolean' && isDeep != null) {
        thisArg = callback;
        callback = isDeep;
        isDeep = false;
      }
      return baseClone(value, isDeep, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates a deep clone of `value`. If a callback is provided it will be
     * executed to produce the cloned values. If the callback returns `undefined`
     * cloning will be handled by the method instead. The callback is bound to
     * `thisArg` and invoked with one argument; (value).
     *
     * Note: This method is loosely based on the structured clone algorithm. Functions
     * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and
     * objects created by constructors other than `Object` are cloned to plain `Object` objects.
     * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to deep clone.
     * @param {Function} [callback] The function to customize cloning values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the deep cloned value.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * var deep = _.cloneDeep(characters);
     * deep[0] === characters[0];
     * // => false
     *
     * var view = {
     *   'label': 'docs',
     *   'node': element
     * };
     *
     * var clone = _.cloneDeep(view, function(value) {
     *   return _.isElement(value) ? value.cloneNode(true) : undefined;
     * });
     *
     * clone.node == view.node;
     * // => false
     */
    function cloneDeep(value, callback, thisArg) {
      return baseClone(value, true, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 1));
    }

    /**
     * Creates an object that inherits from the given `prototype` object. If a
     * `properties` object is provided its own enumerable properties are assigned
     * to the created object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, { 'constructor': Circle });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties ? assign(result, properties) : result;
    }

    /**
     * Assigns own enumerable properties of source object(s) to the destination
     * object for all destination properties that resolve to `undefined`. Once a
     * property is set, additional defaults of the same property will be ignored.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param- {Object} [guard] Allows working with `_.reduce` without using its
     *  `key` and `object` arguments as sources.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var object = { 'name': 'barney' };
     * _.defaults(object, { 'name': 'fred', 'employer': 'slate' });
     * // => { 'name': 'barney', 'employer': 'slate' }
     */
    var defaults = function(object, source, guard) {
      var index, iterable = object, result = iterable;
      if (!iterable) return result;
      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;
      while (++argsIndex < argsLength) {
        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (typeof result[index] == 'undefined') result[index] = iterable[index];
        }
        }
      }
      return result
    };

    /**
     * This method is like `_.findIndex` except that it returns the key of the
     * first element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': false },
     *   'fred': {    'age': 40, 'blocked': true },
     *   'pebbles': { 'age': 1,  'blocked': false }
     * };
     *
     * _.findKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => 'barney' (property order is not guaranteed across environments)
     *
     * // using "_.where" callback shorthand
     * _.findKey(characters, { 'age': 1 });
     * // => 'pebbles'
     *
     * // using "_.pluck" callback shorthand
     * _.findKey(characters, 'blocked');
     * // => 'fred'
     */
    function findKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwn(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to search.
     * @param {Function|Object|string} [callback=identity] The function called per
     *  iteration. If a property name or object is provided it will be used to
     *  create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {string|undefined} Returns the key of the found element, else `undefined`.
     * @example
     *
     * var characters = {
     *   'barney': {  'age': 36, 'blocked': true },
     *   'fred': {    'age': 40, 'blocked': false },
     *   'pebbles': { 'age': 1,  'blocked': true }
     * };
     *
     * _.findLastKey(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => returns `pebbles`, assuming `_.findKey` returns `barney`
     *
     * // using "_.where" callback shorthand
     * _.findLastKey(characters, { 'age': 40 });
     * // => 'fred'
     *
     * // using "_.pluck" callback shorthand
     * _.findLastKey(characters, 'blocked');
     * // => 'pebbles'
     */
    function findLastKey(object, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forOwnRight(object, function(value, key, object) {
        if (callback(value, key, object)) {
          result = key;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over own and inherited enumerable properties of an object,
     * executing the callback for each property. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, key, object). Callbacks may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forIn(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'x', 'y', and 'move' (property order is not guaranteed across environments)
     */
    var forIn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        for (index in iterable) {
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forIn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * Shape.prototype.move = function(x, y) {
     *   this.x += x;
     *   this.y += y;
     * };
     *
     * _.forInRight(new Shape, function(value, key) {
     *   console.log(key);
     * });
     * // => logs 'move', 'y', and 'x' assuming `_.forIn ` logs 'x', 'y', and 'move'
     */
    function forInRight(object, callback, thisArg) {
      var pairs = [];

      forIn(object, function(value, key) {
        pairs.push(key, value);
      });

      var length = pairs.length;
      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(pairs[length--], pairs[length], object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Iterates over own enumerable properties of an object, executing the callback
     * for each property. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, key, object). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs '0', '1', and 'length' (property order is not guaranteed across environments)
     */
    var forOwn = function(collection, callback, thisArg) {
      var index, iterable = collection, result = iterable;
      if (!iterable) return result;
      if (!objectTypes[typeof iterable]) return result;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
        var ownIndex = -1,
            ownProps = objectTypes[typeof iterable] && keys(iterable),
            length = ownProps ? ownProps.length : 0;

        while (++ownIndex < length) {
          index = ownProps[ownIndex];
          if (callback(iterable[index], index, collection) === false) return result;
        }
      return result
    };

    /**
     * This method is like `_.forOwn` except that it iterates over elements
     * of a `collection` in the opposite order.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns `object`.
     * @example
     *
     * _.forOwnRight({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {
     *   console.log(key);
     * });
     * // => logs 'length', '1', and '0' assuming `_.forOwn` logs '0', '1', and 'length'
     */
    function forOwnRight(object, callback, thisArg) {
      var props = keys(object),
          length = props.length;

      callback = baseCreateCallback(callback, thisArg, 3);
      while (length--) {
        var key = props[length];
        if (callback(object[key], key, object) === false) {
          break;
        }
      }
      return object;
    }

    /**
     * Creates a sorted array of property names of all enumerable properties,
     * own and inherited, of `object` that have function values.
     *
     * @static
     * @memberOf _
     * @alias methods
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property names that have function values.
     * @example
     *
     * _.functions(_);
     * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]
     */
    function functions(object) {
      var result = [];
      forIn(object, function(value, key) {
        if (isFunction(value)) {
          result.push(key);
        }
      });
      return result.sort();
    }

    /**
     * Checks if the specified property name exists as a direct property of `object`,
     * instead of an inherited property.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to check.
     * @returns {boolean} Returns `true` if key is a direct property, else `false`.
     * @example
     *
     * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');
     * // => true
     */
    function has(object, key) {
      return object ? hasOwnProperty.call(object, key) : false;
    }

    /**
     * Creates an object composed of the inverted keys and values of the given object.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the created inverted object.
     * @example
     *
     * _.invert({ 'first': 'fred', 'second': 'barney' });
     * // => { 'fred': 'first', 'barney': 'second' }
     */
    function invert(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = {};

      while (++index < length) {
        var key = props[index];
        result[object[key]] = key;
      }
      return result;
    }

    /**
     * Checks if `value` is a boolean value.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a boolean value, else `false`.
     * @example
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        value && typeof value == 'object' && toString.call(value) == boolClass || false;
    }

    /**
     * Checks if `value` is a date.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a date, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     */
    function isDate(value) {
      return value && typeof value == 'object' && toString.call(value) == dateClass || false;
    }

    /**
     * Checks if `value` is a DOM element.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     */
    function isElement(value) {
      return value && value.nodeType === 1 || false;
    }

    /**
     * Checks if `value` is empty. Arrays, strings, or `arguments` objects with a
     * length of `0` and objects with no own enumerable properties are considered
     * "empty".
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object|string} value The value to inspect.
     * @returns {boolean} Returns `true` if the `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({});
     * // => true
     *
     * _.isEmpty('');
     * // => true
     */
    function isEmpty(value) {
      var result = true;
      if (!value) {
        return result;
      }
      var className = toString.call(value),
          length = value.length;

      if ((className == arrayClass || className == stringClass || className == argsClass ) ||
          (className == objectClass && typeof length == 'number' && isFunction(value.splice))) {
        return !length;
      }
      forOwn(value, function() {
        return (result = false);
      });
      return result;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent to each other. If a callback is provided it will be executed
     * to compare values. If the callback returns `undefined` comparisons will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (a, b).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} a The value to compare.
     * @param {*} b The other value to compare.
     * @param {Function} [callback] The function to customize comparing values.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var copy = { 'name': 'fred' };
     *
     * object == copy;
     * // => false
     *
     * _.isEqual(object, copy);
     * // => true
     *
     * var words = ['hello', 'goodbye'];
     * var otherWords = ['hi', 'goodbye'];
     *
     * _.isEqual(words, otherWords, function(a, b) {
     *   var reGreet = /^(?:hello|hi)$/i,
     *       aGreet = _.isString(a) && reGreet.test(a),
     *       bGreet = _.isString(b) && reGreet.test(b);
     *
     *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;
     * });
     * // => true
     */
    function isEqual(a, b, callback, thisArg) {
      return baseIsEqual(a, b, typeof callback == 'function' && baseCreateCallback(callback, thisArg, 2));
    }

    /**
     * Checks if `value` is, or can be coerced to, a finite number.
     *
     * Note: This is not the same as native `isFinite` which will return true for
     * booleans and empty strings. See http://es5.github.io/#x15.1.2.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is finite, else `false`.
     * @example
     *
     * _.isFinite(-101);
     * // => true
     *
     * _.isFinite('10');
     * // => true
     *
     * _.isFinite(true);
     * // => false
     *
     * _.isFinite('');
     * // => false
     *
     * _.isFinite(Infinity);
     * // => false
     */
    function isFinite(value) {
      return nativeIsFinite(value) && !nativeIsNaN(parseFloat(value));
    }

    /**
     * Checks if `value` is a function.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     */
    function isFunction(value) {
      return typeof value == 'function';
    }

    /**
     * Checks if `value` is the language type of Object.
     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(1);
     * // => false
     */
    function isObject(value) {
      // check if the value is the ECMAScript language type of Object
      // http://es5.github.io/#x8
      // and avoid a V8 bug
      // http://code.google.com/p/v8/issues/detail?id=2291
      return !!(value && objectTypes[typeof value]);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * Note: This is not the same as native `isNaN` which will return `true` for
     * `undefined` and other non-numeric values. See http://es5.github.io/#x15.1.2.4.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // `NaN` as a primitive is the only value that is not equal to itself
      // (perform the [[Class]] check first to avoid errors with some host objects in IE)
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(undefined);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is a number.
     *
     * Note: `NaN` is considered a number. See http://es5.github.io/#x8.5.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(8.4 * 5);
     * // => true
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        value && typeof value == 'object' && toString.call(value) == numberClass || false;
    }

    /**
     * Checks if `value` is an object created by the `Object` constructor.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * _.isPlainObject(new Shape);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     */
    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function(value) {
      if (!(value && toString.call(value) == objectClass)) {
        return false;
      }
      var valueOf = value.valueOf,
          objProto = isNative(valueOf) && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);

      return objProto
        ? (value == objProto || getPrototypeOf(value) == objProto)
        : shimIsPlainObject(value);
    };

    /**
     * Checks if `value` is a regular expression.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a regular expression, else `false`.
     * @example
     *
     * _.isRegExp(/fred/);
     * // => true
     */
    function isRegExp(value) {
      return value && typeof value == 'object' && toString.call(value) == regexpClass || false;
    }

    /**
     * Checks if `value` is a string.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is a string, else `false`.
     * @example
     *
     * _.isString('fred');
     * // => true
     */
    function isString(value) {
      return typeof value == 'string' ||
        value && typeof value == 'object' && toString.call(value) == stringClass || false;
    }

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if the `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     */
    function isUndefined(value) {
      return typeof value == 'undefined';
    }

    /**
     * Creates an object with the same keys as `object` and values generated by
     * running each own enumerable property of `object` through the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new object with values of the results of each `callback` execution.
     * @example
     *
     * _.mapValues({ 'a': 1, 'b': 2, 'c': 3} , function(num) { return num * 3; });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     *
     * var characters = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // using "_.pluck" callback shorthand
     * _.mapValues(characters, 'age');
     * // => { 'fred': 40, 'pebbles': 1 }
     */
    function mapValues(object, callback, thisArg) {
      var result = {};
      callback = lodash.createCallback(callback, thisArg, 3);

      forOwn(object, function(value, key, object) {
        result[key] = callback(value, key, object);
      });
      return result;
    }

    /**
     * Recursively merges own enumerable properties of the source object(s), that
     * don't resolve to `undefined` into the destination object. Subsequent sources
     * will overwrite property assignments of previous sources. If a callback is
     * provided it will be executed to produce the merged values of the destination
     * and source properties. If the callback returns `undefined` merging will
     * be handled by the method instead. The callback is bound to `thisArg` and
     * invoked with two arguments; (objectValue, sourceValue).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The destination object.
     * @param {...Object} [source] The source objects.
     * @param {Function} [callback] The function to customize merging properties.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the destination object.
     * @example
     *
     * var names = {
     *   'characters': [
     *     { 'name': 'barney' },
     *     { 'name': 'fred' }
     *   ]
     * };
     *
     * var ages = {
     *   'characters': [
     *     { 'age': 36 },
     *     { 'age': 40 }
     *   ]
     * };
     *
     * _.merge(names, ages);
     * // => { 'characters': [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred', 'age': 40 }] }
     *
     * var food = {
     *   'fruits': ['apple'],
     *   'vegetables': ['beet']
     * };
     *
     * var otherFood = {
     *   'fruits': ['banana'],
     *   'vegetables': ['carrot']
     * };
     *
     * _.merge(food, otherFood, function(a, b) {
     *   return _.isArray(a) ? a.concat(b) : undefined;
     * });
     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }
     */
    function merge(object) {
      var args = arguments,
          length = 2;

      if (!isObject(object)) {
        return object;
      }
      // allows working with `_.reduce` and `_.reduceRight` without using
      // their `index` and `collection` arguments
      if (typeof args[2] != 'number') {
        length = args.length;
      }
      if (length > 3 && typeof args[length - 2] == 'function') {
        var callback = baseCreateCallback(args[--length - 1], args[length--], 2);
      } else if (length > 2 && typeof args[length - 1] == 'function') {
        callback = args[--length];
      }
      var sources = slice(arguments, 1, length),
          index = -1,
          stackA = getArray(),
          stackB = getArray();

      while (++index < length) {
        baseMerge(object, sources[index], callback, stackA, stackB);
      }
      releaseArray(stackA);
      releaseArray(stackB);
      return object;
    }

    /**
     * Creates a shallow clone of `object` excluding the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` omitting the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The properties to omit or the
     *  function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object without the omitted properties.
     * @example
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, 'age');
     * // => { 'name': 'fred' }
     *
     * _.omit({ 'name': 'fred', 'age': 40 }, function(value) {
     *   return typeof value == 'number';
     * });
     * // => { 'name': 'fred' }
     */
    function omit(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var props = [];
        forIn(object, function(value, key) {
          props.push(key);
        });
        props = baseDifference(props, baseFlatten(arguments, true, false, 1));

        var index = -1,
            length = props.length;

        while (++index < length) {
          var key = props[index];
          result[key] = object[key];
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (!callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * Creates a two dimensional array of an object's key-value pairs,
     * i.e. `[[key1, value1], [key2, value2]]`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns new array of key-value pairs.
     * @example
     *
     * _.pairs({ 'barney': 36, 'fred': 40 });
     * // => [['barney', 36], ['fred', 40]] (property order is not guaranteed across environments)
     */
    function pairs(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        var key = props[index];
        result[index] = [key, object[key]];
      }
      return result;
    }

    /**
     * Creates a shallow clone of `object` composed of the specified properties.
     * Property names may be specified as individual arguments or as arrays of
     * property names. If a callback is provided it will be executed for each
     * property of `object` picking the properties the callback returns truey
     * for. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The source object.
     * @param {Function|...string|string[]} [callback] The function called per
     *  iteration or property names to pick, specified as individual property
     *  names or arrays of property names.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns an object composed of the picked properties.
     * @example
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, 'name');
     * // => { 'name': 'fred' }
     *
     * _.pick({ 'name': 'fred', '_userid': 'fred1' }, function(value, key) {
     *   return key.charAt(0) != '_';
     * });
     * // => { 'name': 'fred' }
     */
    function pick(object, callback, thisArg) {
      var result = {};
      if (typeof callback != 'function') {
        var index = -1,
            props = baseFlatten(arguments, true, false, 1),
            length = isObject(object) ? props.length : 0;

        while (++index < length) {
          var key = props[index];
          if (key in object) {
            result[key] = object[key];
          }
        }
      } else {
        callback = lodash.createCallback(callback, thisArg, 3);
        forIn(object, function(value, key, object) {
          if (callback(value, key, object)) {
            result[key] = value;
          }
        });
      }
      return result;
    }

    /**
     * An alternative to `_.reduce` this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable properties through a callback, with each callback execution
     * potentially mutating the `accumulator` object. The callback is bound to
     * `thisArg` and invoked with four arguments; (accumulator, value, key, object).
     * Callbacks may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Array|Object} object The object to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {
     *   num *= num;
     *   if (num % 2) {
     *     return result.push(num) < 3;
     *   }
     * });
     * // => [1, 9, 25]
     *
     * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     * });
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function transform(object, callback, accumulator, thisArg) {
      var isArr = isArray(object);
      if (accumulator == null) {
        if (isArr) {
          accumulator = [];
        } else {
          var ctor = object && object.constructor,
              proto = ctor && ctor.prototype;

          accumulator = baseCreate(proto);
        }
      }
      if (callback) {
        callback = lodash.createCallback(callback, thisArg, 4);
        (isArr ? forEach : forOwn)(object, function(value, index, object) {
          return callback(accumulator, value, index, object);
        });
      }
      return accumulator;
    }

    /**
     * Creates an array composed of the own enumerable property values of `object`.
     *
     * @static
     * @memberOf _
     * @category Objects
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns an array of property values.
     * @example
     *
     * _.values({ 'one': 1, 'two': 2, 'three': 3 });
     * // => [1, 2, 3] (property order is not guaranteed across environments)
     */
    function values(object) {
      var index = -1,
          props = keys(object),
          length = props.length,
          result = Array(length);

      while (++index < length) {
        result[index] = object[props[index]];
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array of elements from the specified indexes, or keys, of the
     * `collection`. Indexes may be specified as individual arguments or as arrays
     * of indexes.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {...(number|number[]|string|string[])} [index] The indexes of `collection`
     *   to retrieve, specified as individual indexes or arrays of indexes.
     * @returns {Array} Returns a new array of elements corresponding to the
     *  provided indexes.
     * @example
     *
     * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);
     * // => ['a', 'c', 'e']
     *
     * _.at(['fred', 'barney', 'pebbles'], 0, 2);
     * // => ['fred', 'pebbles']
     */
    function at(collection) {
      var args = arguments,
          index = -1,
          props = baseFlatten(args, true, false, 1),
          length = (args[2] && args[2][args[1]] === collection) ? 1 : props.length,
          result = Array(length);

      while(++index < length) {
        result[index] = collection[props[index]];
      }
      return result;
    }

    /**
     * Checks if a given value is present in a collection using strict equality
     * for comparisons, i.e. `===`. If `fromIndex` is negative, it is used as the
     * offset from the end of the collection.
     *
     * @static
     * @memberOf _
     * @alias include
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {*} target The value to check for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {boolean} Returns `true` if the `target` element is found, else `false`.
     * @example
     *
     * _.contains([1, 2, 3], 1);
     * // => true
     *
     * _.contains([1, 2, 3], 1, 2);
     * // => false
     *
     * _.contains({ 'name': 'fred', 'age': 40 }, 'fred');
     * // => true
     *
     * _.contains('pebbles', 'eb');
     * // => true
     */
    function contains(collection, target, fromIndex) {
      var index = -1,
          indexOf = getIndexOf(),
          length = collection ? collection.length : 0,
          result = false;

      fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex) || 0;
      if (isArray(collection)) {
        result = indexOf(collection, target, fromIndex) > -1;
      } else if (typeof length == 'number') {
        result = (isString(collection) ? collection.indexOf(target, fromIndex) : indexOf(collection, target, fromIndex)) > -1;
      } else {
        forOwn(collection, function(value) {
          if (++index >= fromIndex) {
            return !(result = value === target);
          }
        });
      }
      return result;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` through the callback. The corresponding value
     * of each key is the number of times the key was returned by the callback.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': 1, '6': 2 }
     *
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key]++ : result[key] = 1);
    });

    /**
     * Checks if the given callback returns truey value for **all** elements of
     * a collection. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias all
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if all elements passed the callback check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes']);
     * // => false
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.every(characters, 'age');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.every(characters, { 'age': 36 });
     * // => false
     */
    function every(collection, callback, thisArg) {
      var result = true;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if (!(result = !!callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return (result = !!callback(value, index, collection));
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning an array of all elements
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias select
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that passed the callback check.
     * @example
     *
     * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [2, 4, 6]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.filter(characters, 'blocked');
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     *
     * // using "_.where" callback shorthand
     * _.filter(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     */
    function filter(collection, callback, thisArg) {
      var result = [];
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            result.push(value);
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result.push(value);
          }
        });
      }
      return result;
    }

    /**
     * Iterates over elements of a collection, returning the first element that
     * the callback returns truey for. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias detect, findWhere
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.find(characters, function(chr) {
     *   return chr.age < 40;
     * });
     * // => { 'name': 'barney', 'age': 36, 'blocked': false }
     *
     * // using "_.where" callback shorthand
     * _.find(characters, { 'age': 1 });
     * // =>  { 'name': 'pebbles', 'age': 1, 'blocked': false }
     *
     * // using "_.pluck" callback shorthand
     * _.find(characters, 'blocked');
     * // => { 'name': 'fred', 'age': 40, 'blocked': true }
     */
    function find(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          var value = collection[index];
          if (callback(value, index, collection)) {
            return value;
          }
        }
      } else {
        var result;
        forOwn(collection, function(value, index, collection) {
          if (callback(value, index, collection)) {
            result = value;
            return false;
          }
        });
        return result;
      }
    }

    /**
     * This method is like `_.find` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the found element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(num) {
     *   return num % 2 == 1;
     * });
     * // => 3
     */
    function findLast(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);
      forEachRight(collection, function(value, index, collection) {
        if (callback(value, index, collection)) {
          result = value;
          return false;
        }
      });
      return result;
    }

    /**
     * Iterates over elements of a collection, executing the callback for each
     * element. The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection). Callbacks may exit iteration early by
     * explicitly returning `false`.
     *
     * Note: As with other "Collections" methods, objects with a `length` property
     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`
     * may be used for object iteration.
     *
     * @static
     * @memberOf _
     * @alias each
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEach(function(num) { console.log(num); }).join(',');
     * // => logs each number and returns '1,2,3'
     *
     * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { console.log(num); });
     * // => logs each number and returns the object (property order is not guaranteed across environments)
     */
    function forEach(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (++index < length) {
          if (callback(collection[index], index, collection) === false) {
            break;
          }
        }
      } else {
        forOwn(collection, callback);
      }
      return collection;
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias eachRight
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array|Object|string} Returns `collection`.
     * @example
     *
     * _([1, 2, 3]).forEachRight(function(num) { console.log(num); }).join(',');
     * // => logs each number from right to left and returns '3,2,1'
     */
    function forEachRight(collection, callback, thisArg) {
      var length = collection ? collection.length : 0;
      callback = callback && typeof thisArg == 'undefined' ? callback : baseCreateCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        while (length--) {
          if (callback(collection[length], length, collection) === false) {
            break;
          }
        }
      } else {
        var props = keys(collection);
        length = props.length;
        forOwn(collection, function(value, key, collection) {
          key = props ? props[--length] : --length;
          return callback(collection[key], key, collection);
        });
      }
      return collection;
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of a collection through the callback. The corresponding value
     * of each key is an array of the elements responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);
     * // => { '4': [4.2], '6': [6.1, 6.4] }
     *
     * // using "_.pluck" callback shorthand
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      (hasOwnProperty.call(result, key) ? result[key] : result[key] = []).push(value);
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of the collection through the given callback. The corresponding
     * value of each key is the last element responsible for generating the key.
     * The callback is bound to `thisArg` and invoked with three arguments;
     * (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var keys = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.indexBy(keys, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(keys, function(key) { return String.fromCharCode(key.code); });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.indexBy(characters, function(key) { this.fromCharCode(key.code); }, String);
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     */
    var indexBy = createAggregator(function(result, value, key) {
      result[key] = value;
    });

    /**
     * Invokes the method named by `methodName` on each element in the `collection`
     * returning an array of the results of each invoked method. Additional arguments
     * will be provided to each invoked method. If `methodName` is a function it
     * will be invoked for, and `this` bound to, each element in the `collection`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|string} methodName The name of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [arg] Arguments to invoke the method with.
     * @returns {Array} Returns a new array of the results of each invoked method.
     * @example
     *
     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invoke([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    function invoke(collection, methodName) {
      var args = slice(arguments, 2),
          index = -1,
          isFunc = typeof methodName == 'function',
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        result[++index] = (isFunc ? methodName : value[methodName]).apply(value, args);
      });
      return result;
    }

    /**
     * Creates an array of values by running each element in the collection
     * through the callback. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias collect
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of the results of each `callback` execution.
     * @example
     *
     * _.map([1, 2, 3], function(num) { return num * 3; });
     * // => [3, 6, 9]
     *
     * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });
     * // => [3, 6, 9] (property order is not guaranteed across environments)
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(characters, 'name');
     * // => ['barney', 'fred']
     */
    function map(collection, callback, thisArg) {
      var index = -1,
          length = collection ? collection.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      if (typeof length == 'number') {
        var result = Array(length);
        while (++index < length) {
          result[index] = callback(collection[index], index, collection);
        }
      } else {
        result = [];
        forOwn(collection, function(value, key, collection) {
          result[++index] = callback(value, key, collection);
        });
      }
      return result;
    }

    /**
     * Retrieves the maximum value of a collection. If the collection is empty or
     * falsey `-Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.max(characters, function(chr) { return chr.age; });
     * // => { 'name': 'fred', 'age': 40 };
     *
     * // using "_.pluck" callback shorthand
     * _.max(characters, 'age');
     * // => { 'name': 'fred', 'age': 40 };
     */
    function max(collection, callback, thisArg) {
      var computed = -Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value > result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current > computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the minimum value of a collection. If the collection is empty or
     * falsey `Infinity` is returned. If a callback is provided it will be executed
     * for each value in the collection to generate the criterion by which the value
     * is ranked. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.min(characters, function(chr) { return chr.age; });
     * // => { 'name': 'barney', 'age': 36 };
     *
     * // using "_.pluck" callback shorthand
     * _.min(characters, 'age');
     * // => { 'name': 'barney', 'age': 36 };
     */
    function min(collection, callback, thisArg) {
      var computed = Infinity,
          result = computed;

      // allows working with functions like `_.map` without using
      // their `index` argument as a callback
      if (typeof callback != 'function' && thisArg && thisArg[callback] === collection) {
        callback = null;
      }
      if (callback == null && isArray(collection)) {
        var index = -1,
            length = collection.length;

        while (++index < length) {
          var value = collection[index];
          if (value < result) {
            result = value;
          }
        }
      } else {
        callback = (callback == null && isString(collection))
          ? charAtCallback
          : lodash.createCallback(callback, thisArg, 3);

        forEach(collection, function(value, index, collection) {
          var current = callback(value, index, collection);
          if (current < computed) {
            computed = current;
            result = value;
          }
        });
      }
      return result;
    }

    /**
     * Retrieves the value of a specified property from all elements in the collection.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {string} property The name of the property to pluck.
     * @returns {Array} Returns a new array of property values.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * _.pluck(characters, 'name');
     * // => ['barney', 'fred']
     */
    var pluck = map;

    /**
     * Reduces a collection to a value which is the accumulated result of running
     * each element in the collection through the callback, where each successive
     * callback execution consumes the return value of the previous execution. If
     * `accumulator` is not provided the first element of the collection will be
     * used as the initial `accumulator` value. The callback is bound to `thisArg`
     * and invoked with four arguments; (accumulator, value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @alias foldl, inject
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var sum = _.reduce([1, 2, 3], function(sum, num) {
     *   return sum + num;
     * });
     * // => 6
     *
     * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {
     *   result[key] = num * 3;
     *   return result;
     * }, {});
     * // => { 'a': 3, 'b': 6, 'c': 9 }
     */
    function reduce(collection, callback, accumulator, thisArg) {
      if (!collection) return accumulator;
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);

      var index = -1,
          length = collection.length;

      if (typeof length == 'number') {
        if (noaccum) {
          accumulator = collection[++index];
        }
        while (++index < length) {
          accumulator = callback(accumulator, collection[index], index, collection);
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          accumulator = noaccum
            ? (noaccum = false, value)
            : callback(accumulator, value, index, collection)
        });
      }
      return accumulator;
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @alias foldr
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function} [callback=identity] The function called per iteration.
     * @param {*} [accumulator] Initial value of the accumulator.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * var list = [[0, 1], [2, 3], [4, 5]];
     * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, callback, accumulator, thisArg) {
      var noaccum = arguments.length < 3;
      callback = lodash.createCallback(callback, thisArg, 4);
      forEachRight(collection, function(value, index, collection) {
        accumulator = noaccum
          ? (noaccum = false, value)
          : callback(accumulator, value, index, collection);
      });
      return accumulator;
    }

    /**
     * The opposite of `_.filter` this method returns the elements of a
     * collection that the callback does **not** return truey for.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of elements that failed the callback check.
     * @example
     *
     * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });
     * // => [1, 3, 5]
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.reject(characters, 'blocked');
     * // => [{ 'name': 'barney', 'age': 36, 'blocked': false }]
     *
     * // using "_.where" callback shorthand
     * _.reject(characters, { 'age': 36 });
     * // => [{ 'name': 'fred', 'age': 40, 'blocked': true }]
     */
    function reject(collection, callback, thisArg) {
      callback = lodash.createCallback(callback, thisArg, 3);
      return filter(collection, function(value, index, collection) {
        return !callback(value, index, collection);
      });
    }

    /**
     * Retrieves a random element or `n` random elements from a collection.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to sample.
     * @param {number} [n] The number of elements to sample.
     * @param- {Object} [guard] Allows working with functions like `_.map`
     *  without using their `index` arguments as `n`.
     * @returns {Array} Returns the random sample(s) of `collection`.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     *
     * _.sample([1, 2, 3, 4], 2);
     * // => [3, 1]
     */
    function sample(collection, n, guard) {
      if (collection && typeof collection.length != 'number') {
        collection = values(collection);
      }
      if (n == null || guard) {
        return collection ? collection[baseRandom(0, collection.length - 1)] : undefined;
      }
      var result = shuffle(collection);
      result.length = nativeMin(nativeMax(0, n), result.length);
      return result;
    }

    /**
     * Creates an array of shuffled values, using a version of the Fisher-Yates
     * shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to shuffle.
     * @returns {Array} Returns a new shuffled collection.
     * @example
     *
     * _.shuffle([1, 2, 3, 4, 5, 6]);
     * // => [4, 1, 6, 3, 5, 2]
     */
    function shuffle(collection) {
      var index = -1,
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      forEach(collection, function(value) {
        var rand = baseRandom(0, ++index);
        result[index] = result[rand];
        result[rand] = value;
      });
      return result;
    }

    /**
     * Gets the size of the `collection` by returning `collection.length` for arrays
     * and array-like objects or the number of own enumerable properties for objects.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns `collection.length` or number of own enumerable properties.
     * @example
     *
     * _.size([1, 2]);
     * // => 2
     *
     * _.size({ 'one': 1, 'two': 2, 'three': 3 });
     * // => 3
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      var length = collection ? collection.length : 0;
      return typeof length == 'number' ? length : keys(collection).length;
    }

    /**
     * Checks if the callback returns a truey value for **any** element of a
     * collection. The function returns as soon as it finds a passing value and
     * does not iterate over the entire collection. The callback is bound to
     * `thisArg` and invoked with three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias any
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {boolean} Returns `true` if any element passed the callback check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'blocked': false },
     *   { 'name': 'fred',   'age': 40, 'blocked': true }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.some(characters, 'blocked');
     * // => true
     *
     * // using "_.where" callback shorthand
     * _.some(characters, { 'age': 1 });
     * // => false
     */
    function some(collection, callback, thisArg) {
      var result;
      callback = lodash.createCallback(callback, thisArg, 3);

      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if ((result = callback(collection[index], index, collection))) {
            break;
          }
        }
      } else {
        forOwn(collection, function(value, index, collection) {
          return !(result = callback(value, index, collection));
        });
      }
      return !!result;
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection through the callback. This method
     * performs a stable sort, that is, it will preserve the original sort order
     * of equal elements. The callback is bound to `thisArg` and invoked with
     * three arguments; (value, index|key, collection).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an array of property names is provided for `callback` the collection
     * will be sorted by each property value.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Array|Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of sorted elements.
     * @example
     *
     * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });
     * // => [3, 1, 2]
     *
     * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);
     * // => [3, 1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'barney',  'age': 26 },
     *   { 'name': 'fred',    'age': 30 }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.map(_.sortBy(characters, 'age'), _.values);
     * // => [['barney', 26], ['fred', 30], ['barney', 36], ['fred', 40]]
     *
     * // sorting by multiple properties
     * _.map(_.sortBy(characters, ['name', 'age']), _.values);
     * // = > [['barney', 26], ['barney', 36], ['fred', 30], ['fred', 40]]
     */
    function sortBy(collection, callback, thisArg) {
      var index = -1,
          isArr = isArray(callback),
          length = collection ? collection.length : 0,
          result = Array(typeof length == 'number' ? length : 0);

      if (!isArr) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      forEach(collection, function(value, key, collection) {
        var object = result[++index] = getObject();
        if (isArr) {
          object.criteria = map(callback, function(key) { return value[key]; });
        } else {
          (object.criteria = getArray())[0] = callback(value, key, collection);
        }
        object.index = index;
        object.value = value;
      });

      length = result.length;
      result.sort(compareAscending);
      while (length--) {
        var object = result[length];
        result[length] = object.value;
        if (!isArr) {
          releaseArray(object.criteria);
        }
        releaseObject(object);
      }
      return result;
    }

    /**
     * Converts the `collection` to an array.
     *
     * @static
     * @memberOf _
     * @category Collections
     * @param {Array|Object|string} collection The collection to convert.
     * @returns {Array} Returns the new converted array.
     * @example
     *
     * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);
     * // => [2, 3, 4]
     */
    function toArray(collection) {
      if (collection && typeof collection.length == 'number') {
        return slice(collection);
      }
      return values(collection);
    }

    /**
     * Performs a deep comparison of each element in a `collection` to the given
     * `properties` object, returning an array of all elements that have equivalent
     * property values.
     *
     * @static
     * @memberOf _
     * @type Function
     * @category Collections
     * @param {Array|Object|string} collection The collection to iterate over.
     * @param {Object} props The object of property values to filter by.
     * @returns {Array} Returns a new array of elements that have the given properties.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * _.where(characters, { 'age': 36 });
     * // => [{ 'name': 'barney', 'age': 36, 'pets': ['hoppy'] }]
     *
     * _.where(characters, { 'pets': ['dino'] });
     * // => [{ 'name': 'fred', 'age': 40, 'pets': ['baby puss', 'dino'] }]
     */
    var where = filter;

    /*--------------------------------------------------------------------------*/

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are all falsey.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to compact.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * Creates an array excluding all values of the provided arrays using strict
     * equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {...Array} [values] The arrays of values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);
     * // => [1, 3, 4]
     */
    function difference(array) {
      return baseDifference(array, baseFlatten(arguments, true, true, 1));
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element that passes the callback check, instead of the element itself.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': false },
     *   { 'name': 'fred',    'age': 40, 'blocked': true },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': false }
     * ];
     *
     * _.findIndex(characters, function(chr) {
     *   return chr.age < 20;
     * });
     * // => 2
     *
     * // using "_.where" callback shorthand
     * _.findIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findIndex(characters, 'blocked');
     * // => 1
     */
    function findIndex(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0;

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        if (callback(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of a `collection` from right to left.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36, 'blocked': true },
     *   { 'name': 'fred',    'age': 40, 'blocked': false },
     *   { 'name': 'pebbles', 'age': 1,  'blocked': true }
     * ];
     *
     * _.findLastIndex(characters, function(chr) {
     *   return chr.age > 30;
     * });
     * // => 1
     *
     * // using "_.where" callback shorthand
     * _.findLastIndex(characters, { 'age': 36 });
     * // => 0
     *
     * // using "_.pluck" callback shorthand
     * _.findLastIndex(characters, 'blocked');
     * // => 2
     */
    function findLastIndex(array, callback, thisArg) {
      var length = array ? array.length : 0;
      callback = lodash.createCallback(callback, thisArg, 3);
      while (length--) {
        if (callback(array[length], length, array)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Gets the first element or first `n` elements of an array. If a callback
     * is provided elements at the beginning of the array are returned as long
     * as the callback returns truey. The callback is bound to `thisArg` and
     * invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias head, take
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the first element(s) of `array`.
     * @example
     *
     * _.first([1, 2, 3]);
     * // => 1
     *
     * _.first([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.first([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [1, 2]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false, 'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.first(characters, 'blocked');
     * // => [{ 'name': 'barney', 'blocked': true, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.first(characters, { 'employer': 'slate' }), 'name');
     * // => ['barney', 'fred']
     */
    function first(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = -1;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[0] : undefined;
        }
      }
      return slice(array, 0, nativeMin(nativeMax(0, n), length));
    }

    /**
     * Flattens a nested array (the nesting can be to any depth). If `isShallow`
     * is truey, the array will only be flattened a single level. If a callback
     * is provided each element of the array is passed through the callback before
     * flattening. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to flatten.
     * @param {boolean} [isShallow=false] A flag to restrict flattening to a single level.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new flattened array.
     * @example
     *
     * _.flatten([1, [2], [3, [[4]]]]);
     * // => [1, 2, 3, 4];
     *
     * _.flatten([1, [2], [3, [[4]]]], true);
     * // => [1, 2, 3, [[4]]];
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 30, 'pets': ['hoppy'] },
     *   { 'name': 'fred',   'age': 40, 'pets': ['baby puss', 'dino'] }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.flatten(characters, 'pets');
     * // => ['hoppy', 'baby puss', 'dino']
     */
    function flatten(array, isShallow, callback, thisArg) {
      // juggle arguments
      if (typeof isShallow != 'boolean' && isShallow != null) {
        thisArg = callback;
        callback = (typeof isShallow != 'function' && thisArg && thisArg[isShallow] === array) ? null : isShallow;
        isShallow = false;
      }
      if (callback != null) {
        array = map(array, callback, thisArg);
      }
      return baseFlatten(array, isShallow);
    }

    /**
     * Gets the index at which the first occurrence of `value` is found using
     * strict equality for comparisons, i.e. `===`. If the array is already sorted
     * providing `true` for `fromIndex` will run a faster binary search.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {boolean|number} [fromIndex=0] The index to search from or `true`
     *  to perform a binary search on a sorted array.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 1
     *
     * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 4
     *
     * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);
     * // => 2
     */
    function indexOf(array, value, fromIndex) {
      if (typeof fromIndex == 'number') {
        var length = array ? array.length : 0;
        fromIndex = (fromIndex < 0 ? nativeMax(0, length + fromIndex) : fromIndex || 0);
      } else if (fromIndex) {
        var index = sortedIndex(array, value);
        return array[index] === value ? index : -1;
      }
      return baseIndexOf(array, value, fromIndex);
    }

    /**
     * Gets all but the last element or last `n` elements of an array. If a
     * callback is provided elements at the end of the array are excluded from
     * the result as long as the callback returns truey. The callback is bound
     * to `thisArg` and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     *
     * _.initial([1, 2, 3], 2);
     * // => [1]
     *
     * _.initial([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [1]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.initial(characters, 'blocked');
     * // => [{ 'name': 'barney',  'blocked': false, 'employer': 'slate' }]
     *
     * // using "_.where" callback shorthand
     * _.pluck(_.initial(characters, { 'employer': 'na' }), 'name');
     * // => ['barney', 'fred']
     */
    function initial(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : callback || n;
      }
      return slice(array, 0, nativeMin(nativeMax(0, length - n), length));
    }

    /**
     * Creates an array of unique values present in all provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of shared values.
     * @example
     *
     * _.intersection([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2]
     */
    function intersection() {
      var args = [],
          argsIndex = -1,
          argsLength = arguments.length,
          caches = getArray(),
          indexOf = getIndexOf(),
          trustIndexOf = indexOf === baseIndexOf,
          seen = getArray();

      while (++argsIndex < argsLength) {
        var value = arguments[argsIndex];
        if (isArray(value) || isArguments(value)) {
          args.push(value);
          caches.push(trustIndexOf && value.length >= largeArraySize &&
            createCache(argsIndex ? args[argsIndex] : seen));
        }
      }
      var array = args[0],
          index = -1,
          length = array ? array.length : 0,
          result = [];

      outer:
      while (++index < length) {
        var cache = caches[0];
        value = array[index];

        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
          argsIndex = argsLength;
          (cache || seen).push(value);
          while (--argsIndex) {
            cache = caches[argsIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
              continue outer;
            }
          }
          result.push(value);
        }
      }
      while (argsLength--) {
        cache = caches[argsLength];
        if (cache) {
          releaseObject(cache);
        }
      }
      releaseArray(caches);
      releaseArray(seen);
      return result;
    }

    /**
     * Gets the last element or last `n` elements of an array. If a callback is
     * provided elements at the end of the array are returned as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback] The function called
     *  per element or the number of elements to return. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {*} Returns the last element(s) of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     *
     * _.last([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.last([1, 2, 3], function(num) {
     *   return num > 1;
     * });
     * // => [2, 3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': false, 'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': true,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true,  'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.last(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.last(characters, { 'employer': 'na' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function last(array, callback, thisArg) {
      var n = 0,
          length = array ? array.length : 0;

      if (typeof callback != 'number' && callback != null) {
        var index = length;
        callback = lodash.createCallback(callback, thisArg, 3);
        while (index-- && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = callback;
        if (n == null || thisArg) {
          return array ? array[length - 1] : undefined;
        }
      }
      return slice(array, nativeMax(0, length - n));
    }

    /**
     * Gets the index at which the last occurrence of `value` is found using strict
     * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used
     * as the offset from the end of the collection.
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to search.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value or `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);
     * // => 4
     *
     * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var index = array ? array.length : 0;
      if (typeof fromIndex == 'number') {
        index = (fromIndex < 0 ? nativeMax(0, index + fromIndex) : nativeMin(fromIndex, index - 1)) + 1;
      }
      while (index--) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * Removes all provided values from the given array using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {...*} [value] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3, 1, 2, 3];
     * _.pull(array, 2, 3);
     * console.log(array);
     * // => [1, 1]
     */
    function pull(array) {
      var args = arguments,
          argsIndex = 0,
          argsLength = args.length,
          length = array ? array.length : 0;

      while (++argsIndex < argsLength) {
        var index = -1,
            value = args[argsIndex];
        while (++index < length) {
          if (array[index] === value) {
            splice.call(array, index--, 1);
            length--;
          }
        }
      }
      return array;
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to but not including `end`. If `start` is less than `stop` a
     * zero-length range is created unless a negative `step` is specified.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns a new range array.
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    function range(start, end, step) {
      start = +start || 0;
      step = typeof step == 'number' ? step : (+step || 1);

      if (end == null) {
        end = start;
        start = 0;
      }
      // use `Array(length)` so engines like Chakra and V8 avoid slower modes
      // http://youtu.be/XAqIpGU8ZZk#t=17m25s
      var index = -1,
          length = nativeMax(0, ceil((end - start) / (step || 1))),
          result = Array(length);

      while (++index < length) {
        result[index] = start;
        start += step;
      }
      return result;
    }

    /**
     * Removes all elements from an array that the callback returns truey for
     * and returns an array of removed elements. The callback is bound to `thisArg`
     * and invoked with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to modify.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4, 5, 6];
     * var evens = _.remove(array, function(num) { return num % 2 == 0; });
     *
     * console.log(array);
     * // => [1, 3, 5]
     *
     * console.log(evens);
     * // => [2, 4, 6]
     */
    function remove(array, callback, thisArg) {
      var index = -1,
          length = array ? array.length : 0,
          result = [];

      callback = lodash.createCallback(callback, thisArg, 3);
      while (++index < length) {
        var value = array[index];
        if (callback(value, index, array)) {
          result.push(value);
          splice.call(array, index--, 1);
          length--;
        }
      }
      return result;
    }

    /**
     * The opposite of `_.initial` this method gets all but the first element or
     * first `n` elements of an array. If a callback function is provided elements
     * at the beginning of the array are excluded from the result as long as the
     * callback returns truey. The callback is bound to `thisArg` and invoked
     * with three arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias drop, tail
     * @category Arrays
     * @param {Array} array The array to query.
     * @param {Function|Object|number|string} [callback=1] The function called
     *  per element or the number of elements to exclude. If a property name or
     *  object is provided it will be used to create a "_.pluck" or "_.where"
     *  style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a slice of `array`.
     * @example
     *
     * _.rest([1, 2, 3]);
     * // => [2, 3]
     *
     * _.rest([1, 2, 3], 2);
     * // => [3]
     *
     * _.rest([1, 2, 3], function(num) {
     *   return num < 3;
     * });
     * // => [3]
     *
     * var characters = [
     *   { 'name': 'barney',  'blocked': true,  'employer': 'slate' },
     *   { 'name': 'fred',    'blocked': false,  'employer': 'slate' },
     *   { 'name': 'pebbles', 'blocked': true, 'employer': 'na' }
     * ];
     *
     * // using "_.pluck" callback shorthand
     * _.pluck(_.rest(characters, 'blocked'), 'name');
     * // => ['fred', 'pebbles']
     *
     * // using "_.where" callback shorthand
     * _.rest(characters, { 'employer': 'slate' });
     * // => [{ 'name': 'pebbles', 'blocked': true, 'employer': 'na' }]
     */
    function rest(array, callback, thisArg) {
      if (typeof callback != 'number' && callback != null) {
        var n = 0,
            index = -1,
            length = array ? array.length : 0;

        callback = lodash.createCallback(callback, thisArg, 3);
        while (++index < length && callback(array[index], index, array)) {
          n++;
        }
      } else {
        n = (callback == null || thisArg) ? 1 : nativeMax(0, callback);
      }
      return slice(array, n);
    }

    /**
     * Uses a binary search to determine the smallest index at which a value
     * should be inserted into a given sorted array in order to maintain the sort
     * order of the array. If a callback is provided it will be executed for
     * `value` and each element of `array` to compute their sort ranking. The
     * callback is bound to `thisArg` and invoked with one argument; (value).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([20, 30, 50], 40);
     * // => 2
     *
     * // using "_.pluck" callback shorthand
     * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');
     * // => 2
     *
     * var dict = {
     *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }
     * };
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return dict.wordToNumber[word];
     * });
     * // => 2
     *
     * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {
     *   return this.wordToNumber[word];
     * }, dict);
     * // => 2
     */
    function sortedIndex(array, value, callback, thisArg) {
      var low = 0,
          high = array ? array.length : low;

      // explicitly reference `identity` for better inlining in Firefox
      callback = callback ? lodash.createCallback(callback, thisArg, 1) : identity;
      value = callback(value);

      while (low < high) {
        var mid = (low + high) >>> 1;
        (callback(array[mid]) < value)
          ? low = mid + 1
          : high = mid;
      }
      return low;
    }

    /**
     * Creates an array of unique values, in order, of the provided arrays using
     * strict equality for comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of combined values.
     * @example
     *
     * _.union([1, 2, 3], [5, 2, 1, 4], [2, 1]);
     * // => [1, 2, 3, 5, 4]
     */
    function union() {
      return baseUniq(baseFlatten(arguments, true, true));
    }

    /**
     * Creates a duplicate-value-free version of an array using strict equality
     * for comparisons, i.e. `===`. If the array is sorted, providing
     * `true` for `isSorted` will use a faster algorithm. If a callback is provided
     * each element of `array` is passed through the callback before uniqueness
     * is computed. The callback is bound to `thisArg` and invoked with three
     * arguments; (value, index, array).
     *
     * If a property name is provided for `callback` the created "_.pluck" style
     * callback will return the property value of the given element.
     *
     * If an object is provided for `callback` the created "_.where" style callback
     * will return `true` for elements that have the properties of the given object,
     * else `false`.
     *
     * @static
     * @memberOf _
     * @alias unique
     * @category Arrays
     * @param {Array} array The array to process.
     * @param {boolean} [isSorted=false] A flag to indicate that `array` is sorted.
     * @param {Function|Object|string} [callback=identity] The function called
     *  per iteration. If a property name or object is provided it will be used
     *  to create a "_.pluck" or "_.where" style callback, respectively.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns a duplicate-value-free array.
     * @example
     *
     * _.uniq([1, 2, 1, 3, 1]);
     * // => [1, 2, 3]
     *
     * _.uniq([1, 1, 2, 2, 3], true);
     * // => [1, 2, 3]
     *
     * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });
     * // => ['A', 'b', 'C']
     *
     * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);
     * // => [1, 2.5, 3]
     *
     * // using "_.pluck" callback shorthand
     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniq(array, isSorted, callback, thisArg) {
      // juggle arguments
      if (typeof isSorted != 'boolean' && isSorted != null) {
        thisArg = callback;
        callback = (typeof isSorted != 'function' && thisArg && thisArg[isSorted] === array) ? null : isSorted;
        isSorted = false;
      }
      if (callback != null) {
        callback = lodash.createCallback(callback, thisArg, 3);
      }
      return baseUniq(array, isSorted, callback);
    }

    /**
     * Creates an array excluding all provided values using strict equality for
     * comparisons, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {Array} array The array to filter.
     * @param {...*} [value] The values to exclude.
     * @returns {Array} Returns a new array of filtered values.
     * @example
     *
     * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);
     * // => [2, 3, 4]
     */
    function without(array) {
      return baseDifference(array, slice(arguments, 1));
    }

    /**
     * Creates an array that is the symmetric difference of the provided arrays.
     * See http://en.wikipedia.org/wiki/Symmetric_difference.
     *
     * @static
     * @memberOf _
     * @category Arrays
     * @param {...Array} [array] The arrays to inspect.
     * @returns {Array} Returns an array of values.
     * @example
     *
     * _.xor([1, 2, 3], [5, 2, 1, 4]);
     * // => [3, 5, 4]
     *
     * _.xor([1, 2, 5], [2, 3, 5], [3, 4, 5]);
     * // => [1, 4, 5]
     */
    function xor() {
      var index = -1,
          length = arguments.length;

      while (++index < length) {
        var array = arguments[index];
        if (isArray(array) || isArguments(array)) {
          var result = result
            ? baseUniq(baseDifference(result, array).concat(baseDifference(array, result)))
            : array;
        }
      }
      return result || [];
    }

    /**
     * Creates an array of grouped elements, the first of which contains the first
     * elements of the given arrays, the second of which contains the second
     * elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @alias unzip
     * @category Arrays
     * @param {...Array} [array] Arrays to process.
     * @returns {Array} Returns a new array of grouped elements.
     * @example
     *
     * _.zip(['fred', 'barney'], [30, 40], [true, false]);
     * // => [['fred', 30, true], ['barney', 40, false]]
     */
    function zip() {
      var array = arguments.length > 1 ? arguments : arguments[0],
          index = -1,
          length = array ? max(pluck(array, 'length')) : 0,
          result = Array(length < 0 ? 0 : length);

      while (++index < length) {
        result[index] = pluck(array, index);
      }
      return result;
    }

    /**
     * Creates an object composed from arrays of `keys` and `values`. Provide
     * either a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`
     * or two arrays, one of `keys` and one of corresponding `values`.
     *
     * @static
     * @memberOf _
     * @alias object
     * @category Arrays
     * @param {Array} keys The array of keys.
     * @param {Array} [values=[]] The array of values.
     * @returns {Object} Returns an object composed of the given keys and
     *  corresponding values.
     * @example
     *
     * _.zipObject(['fred', 'barney'], [30, 40]);
     * // => { 'fred': 30, 'barney': 40 }
     */
    function zipObject(keys, values) {
      var index = -1,
          length = keys ? keys.length : 0,
          result = {};

      if (!values && length && !isArray(keys[0])) {
        values = [];
      }
      while (++index < length) {
        var key = keys[index];
        if (values) {
          result[key] = values[index];
        } else if (key) {
          result[key[0]] = key[1];
        }
      }
      return result;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that executes `func`, with  the `this` binding and
     * arguments of the created function, only after being called `n` times.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {number} n The number of times the function must be called before
     *  `func` is executed.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('Done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => logs 'Done saving!', after all saves have completed
     */
    function after(n, func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with the `this`
     * binding of `thisArg` and prepends any additional `bind` arguments to those
     * provided to the bound function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to bind.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var func = function(greeting) {
     *   return greeting + ' ' + this.name;
     * };
     *
     * func = _.bind(func, { 'name': 'fred' }, 'hi');
     * func();
     * // => 'hi fred'
     */
    function bind(func, thisArg) {
      return arguments.length > 2
        ? createWrapper(func, 17, slice(arguments, 2), null, thisArg)
        : createWrapper(func, 1, null, null, thisArg);
    }

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method. Method names may be specified as individual arguments or as arrays
     * of method names. If no method names are provided all the function properties
     * of `object` will be bound.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...string} [methodName] The object method names to
     *  bind, specified as individual method names or arrays of method names.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'onClick': function() { console.log('clicked ' + this.label); }
     * };
     *
     * _.bindAll(view);
     * jQuery('#docs').on('click', view.onClick);
     * // => logs 'clicked docs', when the button is clicked
     */
    function bindAll(object) {
      var funcs = arguments.length > 1 ? baseFlatten(arguments, true, false, 1) : functions(object),
          index = -1,
          length = funcs.length;

      while (++index < length) {
        var key = funcs[index];
        object[key] = createWrapper(object[key], 1, null, null, object);
      }
      return object;
    }

    /**
     * Creates a function that, when called, invokes the method at `object[key]`
     * and prepends any additional `bindKey` arguments to those provided to the bound
     * function. This method differs from `_.bind` by allowing bound functions to
     * reference methods that will be redefined or don't yet exist.
     * See http://michaux.ca/articles/lazy-function-definition-pattern.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Object} object The object the method belongs to.
     * @param {string} key The key of the method.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'name': 'fred',
     *   'greet': function(greeting) {
     *     return greeting + ' ' + this.name;
     *   }
     * };
     *
     * var func = _.bindKey(object, 'greet', 'hi');
     * func();
     * // => 'hi fred'
     *
     * object.greet = function(greeting) {
     *   return greeting + 'ya ' + this.name + '!';
     * };
     *
     * func();
     * // => 'hiya fred!'
     */
    function bindKey(object, key) {
      return arguments.length > 2
        ? createWrapper(key, 19, slice(arguments, 2), null, object)
        : createWrapper(key, 3, null, null, object);
    }

    /**
     * Creates a function that is the composition of the provided functions,
     * where each function consumes the return value of the function that follows.
     * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.
     * Each function is executed with the `this` binding of the composed function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {...Function} [func] Functions to compose.
     * @returns {Function} Returns the new composed function.
     * @example
     *
     * var realNameMap = {
     *   'pebbles': 'penelope'
     * };
     *
     * var format = function(name) {
     *   name = realNameMap[name.toLowerCase()] || name;
     *   return name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();
     * };
     *
     * var greet = function(formatted) {
     *   return 'Hiya ' + formatted + '!';
     * };
     *
     * var welcome = _.compose(greet, format);
     * welcome('pebbles');
     * // => 'Hiya Penelope!'
     */
    function compose() {
      var funcs = arguments,
          length = funcs.length;

      while (length--) {
        if (!isFunction(funcs[length])) {
          throw new TypeError;
        }
      }
      return function() {
        var args = arguments,
            length = funcs.length;

        while (length--) {
          args = [funcs[length].apply(this, args)];
        }
        return args[0];
      };
    }

    /**
     * Creates a function which accepts one or more arguments of `func` that when
     * invoked either executes `func` returning its result, if all `func` arguments
     * have been provided, or returns a function that accepts one or more of the
     * remaining `func` arguments, and so on. The arity of `func` can be specified
     * if `func.length` is not sufficient.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var curried = _.curry(function(a, b, c) {
     *   console.log(a + b + c);
     * });
     *
     * curried(1)(2)(3);
     * // => 6
     *
     * curried(1, 2)(3);
     * // => 6
     *
     * curried(1, 2, 3);
     * // => 6
     */
    function curry(func, arity) {
      arity = typeof arity == 'number' ? arity : (+arity || func.length);
      return createWrapper(func, 4, null, null, null, arity);
    }

    /**
     * Creates a function that will delay the execution of `func` until after
     * `wait` milliseconds have elapsed since the last time it was invoked.
     * Provide an options object to indicate that `func` should be invoked on
     * the leading and/or trailing edge of the `wait` timeout. Subsequent calls
     * to the debounced function will return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the debounced function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to debounce.
     * @param {number} wait The number of milliseconds to delay.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=false] Specify execution on the leading edge of the timeout.
     * @param {number} [options.maxWait] The maximum time `func` is allowed to be delayed before it's called.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // avoid costly calculations while the window size is in flux
     * var lazyLayout = _.debounce(calculateLayout, 150);
     * jQuery(window).on('resize', lazyLayout);
     *
     * // execute `sendMail` when the click event is fired, debouncing subsequent calls
     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * });
     *
     * // ensure `batchLog` is executed once after 1 second of debounced calls
     * var source = new EventSource('/stream');
     * source.addEventListener('message', _.debounce(batchLog, 250, {
     *   'maxWait': 1000
     * }, false);
     */
    function debounce(func, wait, options) {
      var args,
          maxTimeoutId,
          result,
          stamp,
          thisArg,
          timeoutId,
          trailingCall,
          lastCalled = 0,
          maxWait = false,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      wait = nativeMax(0, wait) || 0;
      if (options === true) {
        var leading = true;
        trailing = false;
      } else if (isObject(options)) {
        leading = options.leading;
        maxWait = 'maxWait' in options && (nativeMax(wait, options.maxWait) || 0);
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      var delayed = function() {
        var remaining = wait - (now() - stamp);
        if (remaining <= 0) {
          if (maxTimeoutId) {
            clearTimeout(maxTimeoutId);
          }
          var isCalled = trailingCall;
          maxTimeoutId = timeoutId = trailingCall = undefined;
          if (isCalled) {
            lastCalled = now();
            result = func.apply(thisArg, args);
            if (!timeoutId && !maxTimeoutId) {
              args = thisArg = null;
            }
          }
        } else {
          timeoutId = setTimeout(delayed, remaining);
        }
      };

      var maxDelayed = function() {
        if (timeoutId) {
          clearTimeout(timeoutId);
        }
        maxTimeoutId = timeoutId = trailingCall = undefined;
        if (trailing || (maxWait !== wait)) {
          lastCalled = now();
          result = func.apply(thisArg, args);
          if (!timeoutId && !maxTimeoutId) {
            args = thisArg = null;
          }
        }
      };

      return function() {
        args = arguments;
        stamp = now();
        thisArg = this;
        trailingCall = trailing && (timeoutId || !leading);

        if (maxWait === false) {
          var leadingCall = leading && !timeoutId;
        } else {
          if (!maxTimeoutId && !leading) {
            lastCalled = stamp;
          }
          var remaining = maxWait - (stamp - lastCalled),
              isCalled = remaining <= 0;

          if (isCalled) {
            if (maxTimeoutId) {
              maxTimeoutId = clearTimeout(maxTimeoutId);
            }
            lastCalled = stamp;
            result = func.apply(thisArg, args);
          }
          else if (!maxTimeoutId) {
            maxTimeoutId = setTimeout(maxDelayed, remaining);
          }
        }
        if (isCalled && timeoutId) {
          timeoutId = clearTimeout(timeoutId);
        }
        else if (!timeoutId && wait !== maxWait) {
          timeoutId = setTimeout(delayed, wait);
        }
        if (leadingCall) {
          isCalled = true;
          result = func.apply(thisArg, args);
        }
        if (isCalled && !timeoutId && !maxTimeoutId) {
          args = thisArg = null;
        }
        return result;
      };
    }

    /**
     * Defers executing the `func` function until the current call stack has cleared.
     * Additional arguments will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to defer.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) { console.log(text); }, 'deferred');
     * // logs 'deferred' after one or more milliseconds
     */
    function defer(func) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 1);
      return setTimeout(function() { func.apply(undefined, args); }, 1);
    }

    /**
     * Executes the `func` function after `wait` milliseconds. Additional arguments
     * will be provided to `func` when it is invoked.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay execution.
     * @param {...*} [arg] Arguments to invoke the function with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) { console.log(text); }, 1000, 'later');
     * // => logs 'later' after one second
     */
    function delay(func, wait) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var args = slice(arguments, 2);
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided it will be used to determine the cache key for storing the result
     * based on the arguments provided to the memoized function. By default, the
     * first argument provided to the memoized function is used as the cache key.
     * The `func` is executed with the `this` binding of the memoized function.
     * The result cache is exposed as the `cache` property on the memoized function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] A function used to resolve the cache key.
     * @returns {Function} Returns the new memoizing function.
     * @example
     *
     * var fibonacci = _.memoize(function(n) {
     *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);
     * });
     *
     * fibonacci(9)
     * // => 34
     *
     * var data = {
     *   'fred': { 'name': 'fred', 'age': 40 },
     *   'pebbles': { 'name': 'pebbles', 'age': 1 }
     * };
     *
     * // modifying the result cache
     * var get = _.memoize(function(name) { return data[name]; }, _.identity);
     * get('pebbles');
     * // => { 'name': 'pebbles', 'age': 1 }
     *
     * get.cache.pebbles.name = 'penelope';
     * get('pebbles');
     * // => { 'name': 'penelope', 'age': 1 }
     */
    function memoize(func, resolver) {
      if (!isFunction(func)) {
        throw new TypeError;
      }
      var memoized = function() {
        var cache = memoized.cache,
            key = resolver ? resolver.apply(this, arguments) : keyPrefix + arguments[0];

        return hasOwnProperty.call(cache, key)
          ? cache[key]
          : (cache[key] = func.apply(this, arguments));
      }
      memoized.cache = {};
      return memoized;
    }

    /**
     * Creates a function that is restricted to execute `func` once. Repeat calls to
     * the function will return the value of the first call. The `func` is executed
     * with the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // `initialize` executes `createApplication` once
     */
    function once(func) {
      var ran,
          result;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      return function() {
        if (ran) {
          return result;
        }
        ran = true;
        result = func.apply(this, arguments);

        // clear the `func` variable so the function may be garbage collected
        func = null;
        return result;
      };
    }

    /**
     * Creates a function that, when called, invokes `func` with any additional
     * `partial` arguments prepended to those provided to the new function. This
     * method is similar to `_.bind` except it does **not** alter the `this` binding.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var greet = function(greeting, name) { return greeting + ' ' + name; };
     * var hi = _.partial(greet, 'hi');
     * hi('fred');
     * // => 'hi fred'
     */
    function partial(func) {
      return createWrapper(func, 16, slice(arguments, 1));
    }

    /**
     * This method is like `_.partial` except that `partial` arguments are
     * appended to those provided to the new function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [arg] Arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * var defaultsDeep = _.partialRight(_.merge, _.defaults);
     *
     * var options = {
     *   'variable': 'data',
     *   'imports': { 'jq': $ }
     * };
     *
     * defaultsDeep(options, _.templateSettings);
     *
     * options.variable
     * // => 'data'
     *
     * options.imports
     * // => { '_': _, 'jq': $ }
     */
    function partialRight(func) {
      return createWrapper(func, 32, null, slice(arguments, 1));
    }

    /**
     * Creates a function that, when executed, will only call the `func` function
     * at most once per every `wait` milliseconds. Provide an options object to
     * indicate that `func` should be invoked on the leading and/or trailing edge
     * of the `wait` timeout. Subsequent calls to the throttled function will
     * return the result of the last `func` call.
     *
     * Note: If `leading` and `trailing` options are `true` `func` will be called
     * on the trailing edge of the timeout only if the the throttled function is
     * invoked more than once during the `wait` timeout.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {Function} func The function to throttle.
     * @param {number} wait The number of milliseconds to throttle executions to.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.leading=true] Specify execution on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true] Specify execution on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // avoid excessively updating the position while scrolling
     * var throttled = _.throttle(updatePosition, 100);
     * jQuery(window).on('scroll', throttled);
     *
     * // execute `renewToken` when the click event is fired, but not more than once every 5 minutes
     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {
     *   'trailing': false
     * }));
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (!isFunction(func)) {
        throw new TypeError;
      }
      if (options === false) {
        leading = false;
      } else if (isObject(options)) {
        leading = 'leading' in options ? options.leading : leading;
        trailing = 'trailing' in options ? options.trailing : trailing;
      }
      debounceOptions.leading = leading;
      debounceOptions.maxWait = wait;
      debounceOptions.trailing = trailing;

      return debounce(func, wait, debounceOptions);
    }

    /**
     * Creates a function that provides `value` to the wrapper function as its
     * first argument. Additional arguments provided to the function are appended
     * to those provided to the wrapper function. The wrapper is executed with
     * the `this` binding of the created function.
     *
     * @static
     * @memberOf _
     * @category Functions
     * @param {*} value The value to wrap.
     * @param {Function} wrapper The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('Fred, Wilma, & Pebbles');
     * // => '<p>Fred, Wilma, &amp; Pebbles</p>'
     */
    function wrap(value, wrapper) {
      return createWrapper(wrapper, 16, [value]);
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var object = { 'name': 'fred' };
     * var getter = _.constant(object);
     * getter() === object;
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Produces a callback bound to an optional `thisArg`. If `func` is a property
     * name the created callback will return the property value for a given element.
     * If `func` is an object the created callback will return `true` for elements
     * that contain the equivalent object properties, otherwise it will return `false`.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} [func=identity] The value to convert to a callback.
     * @param {*} [thisArg] The `this` binding of the created callback.
     * @param {number} [argCount] The number of arguments the callback accepts.
     * @returns {Function} Returns a callback function.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // wrap to create custom callback shorthands
     * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {
     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);
     *   return !match ? func(callback, thisArg) : function(object) {
     *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];
     *   };
     * });
     *
     * _.filter(characters, 'age__gt38');
     * // => [{ 'name': 'fred', 'age': 40 }]
     */
    function createCallback(func, thisArg, argCount) {
      var type = typeof func;
      if (func == null || type == 'function') {
        return baseCreateCallback(func, thisArg, argCount);
      }
      // handle "_.pluck" style callback shorthands
      if (type != 'object') {
        return property(func);
      }
      var props = keys(func),
          key = props[0],
          a = func[key];

      // handle "_.where" style callback shorthands
      if (props.length == 1 && a === a && !isObject(a)) {
        // fast path the common case of providing an object with a single
        // property containing a primitive value
        return function(object) {
          var b = object[key];
          return a === b && (a !== 0 || (1 / a == 1 / b));
        };
      }
      return function(object) {
        var length = props.length,
            result = false;

        while (length--) {
          if (!(result = baseIsEqual(object[props[length]], func[props[length]], null, true))) {
            break;
          }
        }
        return result;
      };
    }

    /**
     * Converts the characters `&`, `<`, `>`, `"`, and `'` in `string` to their
     * corresponding HTML entities.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('Fred, Wilma, & Pebbles');
     * // => 'Fred, Wilma, &amp; Pebbles'
     */
    function escape(string) {
      return string == null ? '' : String(string).replace(reUnescapedHtml, escapeHtmlChar);
    }

    /**
     * This method returns the first argument provided to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.identity(object) === object;
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Adds function properties of a source object to the destination object.
     * If `object` is a function methods will be added to its prototype as well.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Function|Object} [object=lodash] object The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options] The options object.
     * @param {boolean} [options.chain=true] Specify whether the functions added are chainable.
     * @example
     *
     * function capitalize(string) {
     *   return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
     * }
     *
     * _.mixin({ 'capitalize': capitalize });
     * _.capitalize('fred');
     * // => 'Fred'
     *
     * _('fred').capitalize().value();
     * // => 'Fred'
     *
     * _.mixin({ 'capitalize': capitalize }, { 'chain': false });
     * _('fred').capitalize();
     * // => 'Fred'
     */
    function mixin(object, source, options) {
      var chain = true,
          methodNames = source && functions(source);

      if (!source || (!options && !methodNames.length)) {
        if (options == null) {
          options = source;
        }
        ctor = lodashWrapper;
        source = object;
        object = lodash;
        methodNames = functions(source);
      }
      if (options === false) {
        chain = false;
      } else if (isObject(options) && 'chain' in options) {
        chain = options.chain;
      }
      var ctor = object,
          isFunc = isFunction(ctor);

      forEach(methodNames, function(methodName) {
        var func = object[methodName] = source[methodName];
        if (isFunc) {
          ctor.prototype[methodName] = function() {
            var chainAll = this.__chain__,
                value = this.__wrapped__,
                args = [value];

            push.apply(args, arguments);
            var result = func.apply(object, args);
            if (chain || chainAll) {
              if (value === result && isObject(result)) {
                return this;
              }
              result = new ctor(result);
              result.__chain__ = chainAll;
            }
            return result;
          };
        }
      });
    }

    /**
     * Reverts the '_' variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      context._ = oldDash;
      return this;
    }

    /**
     * A no-operation function.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var object = { 'name': 'fred' };
     * _.noop(object) === undefined;
     * // => true
     */
    function noop() {
      // no operation performed
    }

    /**
     * Gets the number of milliseconds that have elapsed since the Unix epoch
     * (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @example
     *
     * var stamp = _.now();
     * _.defer(function() { console.log(_.now() - stamp); });
     * // => logs the number of milliseconds it took for the deferred function to be called
     */
    var now = isNative(now = Date.now) && now || function() {
      return new Date().getTime();
    };

    /**
     * Converts the given value into an integer of the specified radix.
     * If `radix` is `undefined` or `0` a `radix` of `10` is used unless the
     * `value` is a hexadecimal, in which case a `radix` of `16` is used.
     *
     * Note: This method avoids differences in native ES3 and ES5 `parseInt`
     * implementations. See http://es5.github.io/#E.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} value The value to parse.
     * @param {number} [radix] The radix used to interpret the value to parse.
     * @returns {number} Returns the new integer value.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     */
    var parseInt = nativeParseInt(whitespace + '08') == 8 ? nativeParseInt : function(value, radix) {
      // Firefox < 21 and Opera < 15 follow the ES3 specified implementation of `parseInt`
      return nativeParseInt(isString(value) ? value.replace(reLeadingSpacesAndZeros, '') : value, radix || 0);
    };

    /**
     * Creates a "_.pluck" style function, which returns the `key` value of a
     * given object.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} key The name of the property to retrieve.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var characters = [
     *   { 'name': 'fred',   'age': 40 },
     *   { 'name': 'barney', 'age': 36 }
     * ];
     *
     * var getName = _.property('name');
     *
     * _.map(characters, getName);
     * // => ['barney', 'fred']
     *
     * _.sortBy(characters, getName);
     * // => [{ 'name': 'barney', 'age': 36 }, { 'name': 'fred',   'age': 40 }]
     */
    function property(key) {
      return function(object) {
        return object[key];
      };
    }

    /**
     * Produces a random number between `min` and `max` (inclusive). If only one
     * argument is provided a number between `0` and the given number will be
     * returned. If `floating` is truey or either `min` or `max` are floats a
     * floating-point number will be returned instead of an integer.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} [min=0] The minimum possible value.
     * @param {number} [max=1] The maximum possible value.
     * @param {boolean} [floating=false] Specify returning a floating-point number.
     * @returns {number} Returns a random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(min, max, floating) {
      var noMin = min == null,
          noMax = max == null;

      if (floating == null) {
        if (typeof min == 'boolean' && noMax) {
          floating = min;
          min = 1;
        }
        else if (!noMax && typeof max == 'boolean') {
          floating = max;
          noMax = true;
        }
      }
      if (noMin && noMax) {
        max = 1;
      }
      min = +min || 0;
      if (noMax) {
        max = min;
        min = 0;
      } else {
        max = +max || 0;
      }
      if (floating || min % 1 || max % 1) {
        var rand = nativeRandom();
        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand +'').length - 1)))), max);
      }
      return baseRandom(min, max);
    }

    /**
     * Resolves the value of property `key` on `object`. If `key` is a function
     * it will be invoked with the `this` binding of `object` and its result returned,
     * else the property value is returned. If `object` is falsey then `undefined`
     * is returned.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {Object} object The object to inspect.
     * @param {string} key The name of the property to resolve.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = {
     *   'cheese': 'crumpets',
     *   'stuff': function() {
     *     return 'nonsense';
     *   }
     * };
     *
     * _.result(object, 'cheese');
     * // => 'crumpets'
     *
     * _.result(object, 'stuff');
     * // => 'nonsense'
     */
    function result(object, key) {
      if (object) {
        var value = object[key];
        return isFunction(value) ? object[key]() : value;
      }
    }

    /**
     * A micro-templating method that handles arbitrary delimiters, preserves
     * whitespace, and correctly escapes quotes within interpolated code.
     *
     * Note: In the development build, `_.template` utilizes sourceURLs for easier
     * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
     *
     * For more information on precompiling templates see:
     * http://lodash.com/custom-builds
     *
     * For more information on Chrome extension sandboxes see:
     * http://developer.chrome.com/stable/extensions/sandboxingEval.html
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} text The template text.
     * @param {Object} data The data object used to populate the text.
     * @param {Object} [options] The options object.
     * @param {RegExp} [options.escape] The "escape" delimiter.
     * @param {RegExp} [options.evaluate] The "evaluate" delimiter.
     * @param {Object} [options.imports] An object to import into the template as local variables.
     * @param {RegExp} [options.interpolate] The "interpolate" delimiter.
     * @param {string} [sourceURL] The sourceURL of the template's compiled source.
     * @param {string} [variable] The data object variable name.
     * @returns {Function|string} Returns a compiled function when no `data` object
     *  is given, else it returns the interpolated text.
     * @example
     *
     * // using the "interpolate" delimiter to create a compiled template
     * var compiled = _.template('hello <%= name %>');
     * compiled({ 'name': 'fred' });
     * // => 'hello fred'
     *
     * // using the "escape" delimiter to escape HTML in data property values
     * _.template('<b><%- value %></b>', { 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // using the "evaluate" delimiter to generate HTML
     * var list = '<% _.forEach(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the ES6 delimiter as an alternative to the default "interpolate" delimiter
     * _.template('hello ${ name }', { 'name': 'pebbles' });
     * // => 'hello pebbles'
     *
     * // using the internal `print` function in "evaluate" delimiters
     * _.template('<% print("hello " + name); %>!', { 'name': 'barney' });
     * // => 'hello barney!'
     *
     * // using a custom template delimiters
     * _.templateSettings = {
     *   'interpolate': /{{([\s\S]+?)}}/g
     * };
     *
     * _.template('hello {{ name }}!', { 'name': 'mustache' });
     * // => 'hello mustache!'
     *
     * // using the `imports` option to import jQuery
     * var list = '<% jq.each(people, function(name) { %><li><%- name %></li><% }); %>';
     * _.template(list, { 'people': ['fred', 'barney'] }, { 'imports': { 'jq': jQuery } });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // using the `sourceURL` option to specify a custom sourceURL for the template
     * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector
     *
     * // using the `variable` option to ensure a with-statement isn't used in the compiled template
     * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     *   var __t, __p = '', __e = _.escape;
     *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';
     *   return __p;
     * }
     *
     * // using the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and a stack trace
     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(text, data, options) {
      // based on John Resig's `tmpl` implementation
      // http://ejohn.org/blog/javascript-micro-templating/
      // and Laura Doktorova's doT.js
      // https://github.com/olado/doT
      var settings = lodash.templateSettings;
      text = String(text || '');

      // avoid missing dependencies when `iteratorTemplate` is not defined
      options = defaults({}, options, settings);

      var imports = defaults({}, options.imports, settings.imports),
          importsKeys = keys(imports),
          importsValues = values(imports);

      var isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // compile the regexp to match each delimiter
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      text.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // escape characters that cannot be included in string literals
        source += text.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // replace delimiters with snippets
        if (escapeValue) {
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // the JS engine embedded in Adobe products requires returning the `match`
        // string in order to produce the correct `offset` value
        return match;
      });

      source += "';\n";

      // if `variable` is not specified, wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain
      var variable = options.variable,
          hasVariable = variable;

      if (!hasVariable) {
        variable = 'obj';
        source = 'with (' + variable + ') {\n' + source + '\n}\n';
      }
      // cleanup code by stripping empty strings
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // frame code as the function body
      source = 'function(' + variable + ') {\n' +
        (hasVariable ? '' : variable + ' || (' + variable + ' = {});\n') +
        "var __t, __p = '', __e = _.escape" +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      // Use a sourceURL for easier debugging.
      // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
      var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';

      try {
        var result = Function(importsKeys, 'return ' + source + sourceURL).apply(undefined, importsValues);
      } catch(e) {
        e.source = source;
        throw e;
      }
      if (data) {
        return result(data);
      }
      // provide the compiled function's source by its `toString` method, in
      // supported environments, or the `source` property as a convenience for
      // inlining compiled templates during the build process
      result.source = source;
      return result;
    }

    /**
     * Executes the callback `n` times, returning an array of the results
     * of each callback execution. The callback is bound to `thisArg` and invoked
     * with one argument; (index).
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {number} n The number of times to execute the callback.
     * @param {Function} callback The function called per iteration.
     * @param {*} [thisArg] The `this` binding of `callback`.
     * @returns {Array} Returns an array of the results of each `callback` execution.
     * @example
     *
     * var diceRolls = _.times(3, _.partial(_.random, 1, 6));
     * // => [3, 6, 4]
     *
     * _.times(3, function(n) { mage.castSpell(n); });
     * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively
     *
     * _.times(3, function(n) { this.cast(n); }, mage);
     * // => also calls `mage.castSpell(n)` three times
     */
    function times(n, callback, thisArg) {
      n = (n = +n) > -1 ? n : 0;
      var index = -1,
          result = Array(n);

      callback = baseCreateCallback(callback, thisArg, 1);
      while (++index < n) {
        result[index] = callback(index);
      }
      return result;
    }

    /**
     * The inverse of `_.escape` this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their
     * corresponding characters.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} string The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('Fred, Barney &amp; Pebbles');
     * // => 'Fred, Barney & Pebbles'
     */
    function unescape(string) {
      return string == null ? '' : String(string).replace(reEscapedHtml, unescapeHtmlChar);
    }

    /**
     * Generates a unique ID. If `prefix` is provided the ID will be appended to it.
     *
     * @static
     * @memberOf _
     * @category Utilities
     * @param {string} [prefix] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return String(prefix == null ? '' : prefix) + id;
    }

    /*--------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object that wraps the given value with explicit
     * method chaining enabled.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney',  'age': 36 },
     *   { 'name': 'fred',    'age': 40 },
     *   { 'name': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _.chain(characters)
     *     .sortBy('age')
     *     .map(function(chr) { return chr.name + ' is ' + chr.age; })
     *     .first()
     *     .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      value = new lodashWrapper(value);
      value.__chain__ = true;
      return value;
    }

    /**
     * Invokes `interceptor` with the `value` as the first argument and then
     * returns `value`. The purpose of this method is to "tap into" a method
     * chain in order to perform operations on intermediate results within
     * the chain.
     *
     * @static
     * @memberOf _
     * @category Chaining
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3, 4])
     *  .tap(function(array) { array.pop(); })
     *  .reverse()
     *  .value();
     * // => [3, 2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * Enables explicit method chaining on the wrapper object.
     *
     * @name chain
     * @memberOf _
     * @category Chaining
     * @returns {*} Returns the wrapper object.
     * @example
     *
     * var characters = [
     *   { 'name': 'barney', 'age': 36 },
     *   { 'name': 'fred',   'age': 40 }
     * ];
     *
     * // without explicit chaining
     * _(characters).first();
     * // => { 'name': 'barney', 'age': 36 }
     *
     * // with explicit chaining
     * _(characters).chain()
     *   .first()
     *   .pick('age')
     *   .value();
     * // => { 'age': 36 }
     */
    function wrapperChain() {
      this.__chain__ = true;
      return this;
    }

    /**
     * Produces the `toString` result of the wrapped value.
     *
     * @name toString
     * @memberOf _
     * @category Chaining
     * @returns {string} Returns the string result.
     * @example
     *
     * _([1, 2, 3]).toString();
     * // => '1,2,3'
     */
    function wrapperToString() {
      return String(this.__wrapped__);
    }

    /**
     * Extracts the wrapped value.
     *
     * @name valueOf
     * @memberOf _
     * @alias value
     * @category Chaining
     * @returns {*} Returns the wrapped value.
     * @example
     *
     * _([1, 2, 3]).valueOf();
     * // => [1, 2, 3]
     */
    function wrapperValueOf() {
      return this.__wrapped__;
    }

    /*--------------------------------------------------------------------------*/

    // add functions that return wrapped values when chaining
    lodash.after = after;
    lodash.assign = assign;
    lodash.at = at;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.chain = chain;
    lodash.compact = compact;
    lodash.compose = compose;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.createCallback = createCallback;
    lodash.curry = curry;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.filter = filter;
    lodash.flatten = flatten;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.functions = functions;
    lodash.groupBy = groupBy;
    lodash.indexBy = indexBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.invert = invert;
    lodash.invoke = invoke;
    lodash.keys = keys;
    lodash.map = map;
    lodash.mapValues = mapValues;
    lodash.max = max;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.min = min;
    lodash.omit = omit;
    lodash.once = once;
    lodash.pairs = pairs;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.pick = pick;
    lodash.pluck = pluck;
    lodash.property = property;
    lodash.pull = pull;
    lodash.range = range;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.shuffle = shuffle;
    lodash.sortBy = sortBy;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.times = times;
    lodash.toArray = toArray;
    lodash.transform = transform;
    lodash.union = union;
    lodash.uniq = uniq;
    lodash.values = values;
    lodash.where = where;
    lodash.without = without;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.zip = zip;
    lodash.zipObject = zipObject;

    // add aliases
    lodash.collect = map;
    lodash.drop = rest;
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.extend = assign;
    lodash.methods = functions;
    lodash.object = zipObject;
    lodash.select = filter;
    lodash.tail = rest;
    lodash.unique = uniq;
    lodash.unzip = zip;

    // add functions to `lodash.prototype`
    mixin(lodash);

    /*--------------------------------------------------------------------------*/

    // add functions that return unwrapped values when chaining
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.contains = contains;
    lodash.escape = escape;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.has = has;
    lodash.identity = identity;
    lodash.indexOf = indexOf;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isBoolean = isBoolean;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isNaN = isNaN;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isString = isString;
    lodash.isUndefined = isUndefined;
    lodash.lastIndexOf = lastIndexOf;
    lodash.mixin = mixin;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.result = result;
    lodash.runInContext = runInContext;
    lodash.size = size;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.template = template;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;

    // add aliases
    lodash.all = every;
    lodash.any = some;
    lodash.detect = find;
    lodash.findWhere = find;
    lodash.foldl = reduce;
    lodash.foldr = reduceRight;
    lodash.include = contains;
    lodash.inject = reduce;

    mixin(function() {
      var source = {}
      forOwn(lodash, function(func, methodName) {
        if (!lodash.prototype[methodName]) {
          source[methodName] = func;
        }
      });
      return source;
    }(), false);

    /*--------------------------------------------------------------------------*/

    // add functions capable of returning wrapped and unwrapped values when chaining
    lodash.first = first;
    lodash.last = last;
    lodash.sample = sample;

    // add aliases
    lodash.take = first;
    lodash.head = first;

    forOwn(lodash, function(func, methodName) {
      var callbackable = methodName !== 'sample';
      if (!lodash.prototype[methodName]) {
        lodash.prototype[methodName]= function(n, guard) {
          var chainAll = this.__chain__,
              result = func(this.__wrapped__, n, guard);

          return !chainAll && (n == null || (guard && !(callbackable && typeof n == 'function')))
            ? result
            : new lodashWrapper(result, chainAll);
        };
      }
    });

    /*--------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type string
     */
    lodash.VERSION = '2.4.1';

    // add "Chaining" functions to the wrapper
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.toString = wrapperToString;
    lodash.prototype.value = wrapperValueOf;
    lodash.prototype.valueOf = wrapperValueOf;

    // add `Array` functions that return unwrapped values
    forEach(['join', 'pop', 'shift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        var chainAll = this.__chain__,
            result = func.apply(this.__wrapped__, arguments);

        return chainAll
          ? new lodashWrapper(result, chainAll)
          : result;
      };
    });

    // add `Array` functions that return the existing wrapped value
    forEach(['push', 'reverse', 'sort', 'unshift'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        func.apply(this.__wrapped__, arguments);
        return this;
      };
    });

    // add `Array` functions that return new wrapped values
    forEach(['concat', 'slice', 'splice'], function(methodName) {
      var func = arrayRef[methodName];
      lodash.prototype[methodName] = function() {
        return new lodashWrapper(func.apply(this.__wrapped__, arguments), this.__chain__);
      };
    });

    return lodash;
  }

  /*--------------------------------------------------------------------------*/

  // expose Lo-Dash
  var _ = runInContext();

  // some AMD build optimizers like r.js check for condition patterns like the following:
  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {
    // Expose Lo-Dash to the global object even when an AMD loader is present in
    // case Lo-Dash is loaded with a RequireJS shim config.
    // See http://requirejs.org/docs/api.html#config-shim
    root._ = _;

    // define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module
    define(function() {
      return _;
    });
  }
  // check for `exports` after `define` in case a build optimizer adds an `exports` object
  else if (freeExports && freeModule) {
    // in Node.js or RingoJS
    if (moduleExports) {
      (freeModule.exports = _)._ = _;
    }
    // in Narwhal or Rhino -require
    else {
      freeExports._ = _;
    }
  }
  else {
    // in a browser or Rhino
    root._ = _;
  }
}.call(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],17:[function(require,module,exports){
// http://wiki.commonjs.org/wiki/Unit_Testing/1.0
//
// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!
//
// Originally from narwhal.js (http://narwhaljs.org)
// Copyright (c) 2009 Thomas Robinson <280north.com>
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the 'Software'), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// when used in node, this will actually load the util module we depend on
// versus loading the builtin util module as happens otherwise
// this is a bug in node module loading as far as I am concerned
var util = require('util/');

var pSlice = Array.prototype.slice;
var hasOwn = Object.prototype.hasOwnProperty;

// 1. The assert module provides functions that throw
// AssertionError's when particular conditions are not met. The
// assert module must conform to the following interface.

var assert = module.exports = ok;

// 2. The AssertionError is defined in assert.
// new assert.AssertionError({ message: message,
//                             actual: actual,
//                             expected: expected })

assert.AssertionError = function AssertionError(options) {
  this.name = 'AssertionError';
  this.actual = options.actual;
  this.expected = options.expected;
  this.operator = options.operator;
  if (options.message) {
    this.message = options.message;
    this.generatedMessage = false;
  } else {
    this.message = getMessage(this);
    this.generatedMessage = true;
  }
  var stackStartFunction = options.stackStartFunction || fail;

  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, stackStartFunction);
  }
  else {
    // non v8 browsers so we can have a stacktrace
    var err = new Error();
    if (err.stack) {
      var out = err.stack;

      // try to strip useless frames
      var fn_name = stackStartFunction.name;
      var idx = out.indexOf('\n' + fn_name);
      if (idx >= 0) {
        // once we have located the function frame
        // we need to strip out everything before it (and its line)
        var next_line = out.indexOf('\n', idx + 1);
        out = out.substring(next_line + 1);
      }

      this.stack = out;
    }
  }
};

// assert.AssertionError instanceof Error
util.inherits(assert.AssertionError, Error);

function replacer(key, value) {
  if (util.isUndefined(value)) {
    return '' + value;
  }
  if (util.isNumber(value) && !isFinite(value)) {
    return value.toString();
  }
  if (util.isFunction(value) || util.isRegExp(value)) {
    return value.toString();
  }
  return value;
}

function truncate(s, n) {
  if (util.isString(s)) {
    return s.length < n ? s : s.slice(0, n);
  } else {
    return s;
  }
}

function getMessage(self) {
  return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +
         self.operator + ' ' +
         truncate(JSON.stringify(self.expected, replacer), 128);
}

// At present only the three keys mentioned above are used and
// understood by the spec. Implementations or sub modules can pass
// other keys to the AssertionError's constructor - they will be
// ignored.

// 3. All of the following functions must throw an AssertionError
// when a corresponding condition is not met, with a message that
// may be undefined if not provided.  All assertion methods provide
// both the actual and expected values to the assertion error for
// display purposes.

function fail(actual, expected, message, operator, stackStartFunction) {
  throw new assert.AssertionError({
    message: message,
    actual: actual,
    expected: expected,
    operator: operator,
    stackStartFunction: stackStartFunction
  });
}

// EXTENSION! allows for well behaved errors defined elsewhere.
assert.fail = fail;

// 4. Pure assertion tests whether a value is truthy, as determined
// by !!guard.
// assert.ok(guard, message_opt);
// This statement is equivalent to assert.equal(true, !!guard,
// message_opt);. To test strictly for the value true, use
// assert.strictEqual(true, guard, message_opt);.

function ok(value, message) {
  if (!value) fail(value, true, message, '==', assert.ok);
}
assert.ok = ok;

// 5. The equality assertion tests shallow, coercive equality with
// ==.
// assert.equal(actual, expected, message_opt);

assert.equal = function equal(actual, expected, message) {
  if (actual != expected) fail(actual, expected, message, '==', assert.equal);
};

// 6. The non-equality assertion tests for whether two objects are not equal
// with != assert.notEqual(actual, expected, message_opt);

assert.notEqual = function notEqual(actual, expected, message) {
  if (actual == expected) {
    fail(actual, expected, message, '!=', assert.notEqual);
  }
};

// 7. The equivalence assertion tests a deep equality relation.
// assert.deepEqual(actual, expected, message_opt);

assert.deepEqual = function deepEqual(actual, expected, message) {
  if (!_deepEqual(actual, expected)) {
    fail(actual, expected, message, 'deepEqual', assert.deepEqual);
  }
};

function _deepEqual(actual, expected) {
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (util.isBuffer(actual) && util.isBuffer(expected)) {
    if (actual.length != expected.length) return false;

    for (var i = 0; i < actual.length; i++) {
      if (actual[i] !== expected[i]) return false;
    }

    return true;

  // 7.2. If the expected value is a Date object, the actual value is
  // equivalent if it is also a Date object that refers to the same time.
  } else if (util.isDate(actual) && util.isDate(expected)) {
    return actual.getTime() === expected.getTime();

  // 7.3 If the expected value is a RegExp object, the actual value is
  // equivalent if it is also a RegExp object with the same source and
  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).
  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {
    return actual.source === expected.source &&
           actual.global === expected.global &&
           actual.multiline === expected.multiline &&
           actual.lastIndex === expected.lastIndex &&
           actual.ignoreCase === expected.ignoreCase;

  // 7.4. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!util.isObject(actual) && !util.isObject(expected)) {
    return actual == expected;

  // 7.5 For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected);
  }
}

function isArguments(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
}

function objEquiv(a, b) {
  if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  // if one is a primitive, the other must be same
  if (util.isPrimitive(a) || util.isPrimitive(b)) {
    return a === b;
  }
  var aIsArgs = isArguments(a),
      bIsArgs = isArguments(b);
  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))
    return false;
  if (aIsArgs) {
    a = pSlice.call(a);
    b = pSlice.call(b);
    return _deepEqual(a, b);
  }
  var ka = objectKeys(a),
      kb = objectKeys(b),
      key, i;
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!_deepEqual(a[key], b[key])) return false;
  }
  return true;
}

// 8. The non-equivalence assertion tests for any deep inequality.
// assert.notDeepEqual(actual, expected, message_opt);

assert.notDeepEqual = function notDeepEqual(actual, expected, message) {
  if (_deepEqual(actual, expected)) {
    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);
  }
};

// 9. The strict equality assertion tests strict equality, as determined by ===.
// assert.strictEqual(actual, expected, message_opt);

assert.strictEqual = function strictEqual(actual, expected, message) {
  if (actual !== expected) {
    fail(actual, expected, message, '===', assert.strictEqual);
  }
};

// 10. The strict non-equality assertion tests for strict inequality, as
// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);

assert.notStrictEqual = function notStrictEqual(actual, expected, message) {
  if (actual === expected) {
    fail(actual, expected, message, '!==', assert.notStrictEqual);
  }
};

function expectedException(actual, expected) {
  if (!actual || !expected) {
    return false;
  }

  if (Object.prototype.toString.call(expected) == '[object RegExp]') {
    return expected.test(actual);
  } else if (actual instanceof expected) {
    return true;
  } else if (expected.call({}, actual) === true) {
    return true;
  }

  return false;
}

function _throws(shouldThrow, block, expected, message) {
  var actual;

  if (util.isString(expected)) {
    message = expected;
    expected = null;
  }

  try {
    block();
  } catch (e) {
    actual = e;
  }

  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +
            (message ? ' ' + message : '.');

  if (shouldThrow && !actual) {
    fail(actual, expected, 'Missing expected exception' + message);
  }

  if (!shouldThrow && expectedException(actual, expected)) {
    fail(actual, expected, 'Got unwanted exception' + message);
  }

  if ((shouldThrow && actual && expected &&
      !expectedException(actual, expected)) || (!shouldThrow && actual)) {
    throw actual;
  }
}

// 11. Expected to throw an error:
// assert.throws(block, Error_opt, message_opt);

assert.throws = function(block, /*optional*/error, /*optional*/message) {
  _throws.apply(this, [true].concat(pSlice.call(arguments)));
};

// EXTENSION! This is annoying to write outside this module.
assert.doesNotThrow = function(block, /*optional*/message) {
  _throws.apply(this, [false].concat(pSlice.call(arguments)));
};

assert.ifError = function(err) { if (err) {throw err;}};

var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    if (hasOwn.call(obj, key)) keys.push(key);
  }
  return keys;
};

},{"util/":21}],18:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],19:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

(function () {
    try {
        cachedSetTimeout = setTimeout;
    } catch (e) {
        cachedSetTimeout = function () {
            throw new Error('setTimeout is not defined');
        }
    }
    try {
        cachedClearTimeout = clearTimeout;
    } catch (e) {
        cachedClearTimeout = function () {
            throw new Error('clearTimeout is not defined');
        }
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],20:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],21:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"./support/isBuffer":20,"_process":19,"inherits":18}],22:[function(require,module,exports){
module.exports={"GLASS":"M61.164-57.743q0 1.26-1.548 2.808l-22.752 22.752v27.648h11.52q.936 0 1.62.684t.684 1.62-.684 1.62-1.62.684h-32.256q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h11.52v-27.648l-22.752-22.752q-1.548-1.548-1.548-2.808 0-.828.648-1.314t1.368-.63 1.548-.144h50.688q.828 0 1.548.144t1.368.63.648 1.314z","MUSIC":"M55.296-56.375v40.32q0 1.8-1.224 3.204t-3.096 2.178-3.726 1.152-3.474.378-3.474-.378-3.726-1.152-3.096-2.178-1.224-3.204 1.224-3.204 3.096-2.178 3.726-1.152 3.474-.378q3.78 0 6.912 1.404v-19.332l-27.648 8.532v25.524q0 1.8-1.224 3.204t-3.096 2.178-3.726 1.152-3.474.378-3.474-.378-3.726-1.152-3.096-2.178-1.224-3.204 1.224-3.204 3.096-2.178 3.726-1.152 3.474-.378q3.78 0 6.912 1.404v-34.812q0-1.116.684-2.034t1.764-1.278l29.952-9.216q.432-.144 1.008-.144 1.44 0 2.448 1.008t1.008 2.448z","SEARCH":"M41.472-34.487q0-6.66-4.734-11.394t-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734 11.394-4.734 4.734-11.394zm18.432 29.952q0 1.872-1.368 3.24t-3.24 1.368q-1.944 0-3.24-1.368l-12.348-12.312q-6.444 4.464-14.364 4.464-5.148 0-9.846-1.998t-8.1-5.4-5.4-8.1-1.998-9.846 1.998-9.846 5.4-8.1 8.1-5.4 9.846-1.998 9.846 1.998 8.1 5.4 5.4 8.1 1.998 9.846q0 7.92-4.464 14.364l12.348 12.348q1.332 1.332 1.332 3.24z","ENVELOPE_O":"M59.904-10.295v-27.648q-1.152 1.296-2.484 2.376-9.648 7.416-15.336 12.168-1.836 1.548-2.988 2.412t-3.114 1.746-3.69.882h-.072q-1.728 0-3.69-.882t-3.114-1.746-2.988-2.412q-5.688-4.752-15.336-12.168-1.332-1.08-2.484-2.376v27.648q0 .468.342.81t.81.342h52.992q.468 0 .81-.342t.342-.81zm0-37.836v-.882l-.018-.468-.108-.45-.198-.324-.324-.27-.504-.09h-52.992q-.468 0-.81.342t-.342.81q0 6.048 5.292 10.224 6.948 5.472 14.436 11.412.216.18 1.26 1.062t1.656 1.35 1.602 1.134 1.818.99 1.548.324h.072q.72 0 1.548-.324t1.818-.99 1.602-1.134 1.656-1.35 1.26-1.062q7.488-5.94 14.436-11.412 1.944-1.548 3.618-4.158t1.674-4.734zm4.608-1.332v39.168q0 2.376-1.692 4.068t-4.068 1.692h-52.992q-2.376 0-4.068-1.692t-1.692-4.068v-39.168q0-2.376 1.692-4.068t4.068-1.692h52.992q2.376 0 4.068 1.692t1.692 4.068z","HEART":"M32.256-4.535q-.936 0-1.584-.648l-22.464-21.672q-.36-.288-.99-.936t-1.998-2.358-2.448-3.51-1.926-4.356-.846-4.968q0-7.92 4.572-12.384t12.636-4.464q2.232 0 4.554.774t4.32 2.088 3.438 2.466 2.736 2.448q1.296-1.296 2.736-2.448t3.438-2.466 4.32-2.088 4.554-.774q8.064 0 12.636 4.464t4.572 12.384q0 7.956-8.244 16.2l-22.428 21.6q-.648.648-1.584.648z","STAR":"M59.904-41.147q0 .792-.936 1.728l-13.068 12.744 3.096 18q.036.252.036.72 0 .756-.378 1.278t-1.098.522q-.684 0-1.44-.432l-16.164-8.496-16.164 8.496q-.792.432-1.44.432-.756 0-1.134-.522t-.378-1.278q0-.216.072-.72l3.096-18-13.104-12.744q-.9-.972-.9-1.728 0-1.332 2.016-1.656l18.072-2.628 8.1-16.38q.684-1.476 1.764-1.476t1.764 1.476l8.1 16.38 18.072 2.628q2.016.324 2.016 1.656z","STAR_O":"M40.932-28.295l11.016-10.692-15.192-2.232-6.804-13.752-6.804 13.752-15.192 2.232 11.016 10.692-2.628 15.156 13.608-7.164 13.572 7.164zm18.972-12.852q0 .792-.936 1.728l-13.068 12.744 3.096 18q.036.252.036.72 0 1.8-1.476 1.8-.684 0-1.44-.432l-16.164-8.496-16.164 8.496q-.792.432-1.44.432-.756 0-1.134-.522t-.378-1.278q0-.216.072-.72l3.096-18-13.104-12.744q-.9-.972-.9-1.728 0-1.332 2.016-1.656l18.072-2.628 8.1-16.38q.684-1.476 1.764-1.476t1.764 1.476l8.1 16.38 18.072 2.628q2.016.324 2.016 1.656z","USER":"M50.688-13.859q0 4.32-2.628 6.822t-6.984 2.502h-31.464q-4.356 0-6.984-2.502t-2.628-6.822q0-1.908.126-3.726t.504-3.924.954-3.906 1.548-3.51 2.232-2.916 3.078-1.926 4.014-.72q.324 0 1.512.774t2.682 1.728 3.888 1.728 4.806.774 4.806-.774 3.888-1.728 2.682-1.728 1.512-.774q2.196 0 4.014.72t3.078 1.926 2.232 2.916 1.548 3.51.954 3.906.504 3.924.126 3.726zm-11.52-32.148q0 5.724-4.05 9.774t-9.774 4.05-9.774-4.05-4.05-9.774 4.05-9.774 9.774-4.05 9.774 4.05 4.05 9.774z","FILM":"M13.824-6.839v-4.608q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm0-13.824v-4.608q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm0-13.824v-4.608q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm36.864 27.648v-18.432q0-.936-.684-1.62t-1.62-.684h-27.648q-.936 0-1.62.684t-.684 1.62v18.432q0 .936.684 1.62t1.62.684h27.648q.936 0 1.62-.684t.684-1.62zm-36.864-41.472v-4.608q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm50.688 41.472v-4.608q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm-13.824-27.648v-18.432q0-.936-.684-1.62t-1.62-.684h-27.648q-.936 0-1.62.684t-.684 1.62v18.432q0 .936.684 1.62t1.62.684h27.648q.936 0 1.62-.684t.684-1.62zm13.824 13.824v-4.608q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm0-13.824v-4.608q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm0-13.824v-4.608q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm4.608-5.76v48.384q0 2.376-1.692 4.068t-4.068 1.692h-57.6q-2.376 0-4.068-1.692t-1.692-4.068v-48.384q0-2.376 1.692-4.068t4.068-1.692h57.6q2.376 0 4.068 1.692t1.692 4.068z","TH_LARGE":"M27.648-27.575v13.824q0 1.872-1.368 3.24t-3.24 1.368h-18.432q-1.872 0-3.24-1.368t-1.368-3.24v-13.824q0-1.872 1.368-3.24t3.24-1.368h18.432q1.872 0 3.24 1.368t1.368 3.24zm0-27.648v13.824q0 1.872-1.368 3.24t-3.24 1.368h-18.432q-1.872 0-3.24-1.368t-1.368-3.24v-13.824q0-1.872 1.368-3.24t3.24-1.368h18.432q1.872 0 3.24 1.368t1.368 3.24zm32.256 27.648v13.824q0 1.872-1.368 3.24t-3.24 1.368h-18.432q-1.872 0-3.24-1.368t-1.368-3.24v-13.824q0-1.872 1.368-3.24t3.24-1.368h18.432q1.872 0 3.24 1.368t1.368 3.24zm0-27.648v13.824q0 1.872-1.368 3.24t-3.24 1.368h-18.432q-1.872 0-3.24-1.368t-1.368-3.24v-13.824q0-1.872 1.368-3.24t3.24-1.368h18.432q1.872 0 3.24 1.368t1.368 3.24z","TH":"M18.432-19.511v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm0-18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm23.04 18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm-23.04-36.864v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm23.04 18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm23.04 18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm-23.04-36.864v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm23.04 18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm0-18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448z","TH_LIST":"M18.432-19.511v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm0-18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm46.08 18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h34.56q1.44 0 2.448 1.008t1.008 2.448zm-46.08-36.864v6.912q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448zm46.08 18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h34.56q1.44 0 2.448 1.008t1.008 2.448zm0-18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h34.56q1.44 0 2.448 1.008t1.008 2.448z","CHECK":"M60.156-44.063q0 1.44-1.008 2.448l-26.064 26.064-4.896 4.896q-1.008 1.008-2.448 1.008t-2.448-1.008l-4.896-4.896-13.032-13.032q-1.008-1.008-1.008-2.448t1.008-2.448l4.896-4.896q1.008-1.008 2.448-1.008t2.448 1.008l10.584 10.62 23.616-23.652q1.008-1.008 2.448-1.008t2.448 1.008l4.896 4.896q1.008 1.008 1.008 2.448z","TIMES":"M46.728-16.847q0 1.44-1.008 2.448l-4.896 4.896q-1.008 1.008-2.448 1.008t-2.448-1.008l-10.584-10.584-10.584 10.584q-1.008 1.008-2.448 1.008t-2.448-1.008l-4.896-4.896q-1.008-1.008-1.008-2.448t1.008-2.448l10.584-10.584-10.584-10.584q-1.008-1.008-1.008-2.448t1.008-2.448l4.896-4.896q1.008-1.008 2.448-1.008t2.448 1.008l10.584 10.584 10.584-10.584q1.008-1.008 2.448-1.008t2.448 1.008l4.896 4.896q1.008 1.008 1.008 2.448t-1.008 2.448l-10.584 10.584 10.584 10.584q1.008 1.008 1.008 2.448z","SEARCH_PLUS":"M36.864-35.639v2.304q0 .468-.342.81t-.81.342h-8.064v8.064q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-8.064h-8.064q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h8.064v-8.064q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81v8.064h8.064q.468 0 .81.342t.342.81zm4.608 1.152q0-6.66-4.734-11.394t-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734 11.394-4.734 4.734-11.394zm18.432 29.952q0 1.908-1.35 3.258t-3.258 1.35q-1.944 0-3.24-1.368l-12.348-12.312q-6.444 4.464-14.364 4.464-5.148 0-9.846-1.998t-8.1-5.4-5.4-8.1-1.998-9.846 1.998-9.846 5.4-8.1 8.1-5.4 9.846-1.998 9.846 1.998 8.1 5.4 5.4 8.1 1.998 9.846q0 7.92-4.464 14.364l12.348 12.348q1.332 1.332 1.332 3.24z","SEARCH_MINUS":"M36.864-35.639v2.304q0 .468-.342.81t-.81.342h-20.736q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h20.736q.468 0 .81.342t.342.81zm4.608 1.152q0-6.66-4.734-11.394t-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734 11.394-4.734 4.734-11.394zm18.432 29.952q0 1.908-1.35 3.258t-3.258 1.35q-1.944 0-3.24-1.368l-12.348-12.312q-6.444 4.464-14.364 4.464-5.148 0-9.846-1.998t-8.1-5.4-5.4-8.1-1.998-9.846 1.998-9.846 5.4-8.1 8.1-5.4 9.846-1.998 9.846 1.998 8.1 5.4 5.4 8.1 1.998 9.846q0 7.92-4.464 14.364l12.348 12.348q1.332 1.332 1.332 3.24z","POWER_OFF":"M55.296-32.183q0 5.616-2.196 10.728t-5.904 8.82-8.82 5.904-10.728 2.196-10.728-2.196-8.82-5.904-5.904-8.82-2.196-10.728q0-6.552 2.898-12.348t8.154-9.72q1.548-1.152 3.438-.9t3.006 1.8q1.152 1.512.882 3.402t-1.782 3.042q-3.528 2.664-5.454 6.516t-1.926 8.208q0 3.744 1.458 7.146t3.942 5.886 5.886 3.942 7.146 1.458 7.146-1.458 5.886-3.942 3.942-5.886 1.458-7.146q0-4.356-1.926-8.208t-5.454-6.516q-1.512-1.152-1.782-3.042t.882-3.402q1.116-1.548 3.024-1.8t3.42.9q5.256 3.924 8.154 9.72t2.898 12.348zm-23.04-27.648v23.04q0 1.872-1.368 3.24t-3.24 1.368-3.24-1.368-1.368-3.24v-23.04q0-1.872 1.368-3.24t3.24-1.368 3.24 1.368 1.368 3.24z","SIGNAL":"M9.216-12.599v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm13.824-4.608v11.52q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-11.52q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm13.824-9.216v20.736q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-20.736q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm13.824-13.824v34.56q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-34.56q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm13.824-18.432v52.992q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-52.992q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828z","GEAR":"M36.864-32.183q0-3.816-2.7-6.516t-6.516-2.7-6.516 2.7-2.7 6.516 2.7 6.516 6.516 2.7 6.516-2.7 2.7-6.516zm18.432-3.924v7.992q0 .432-.288.828t-.72.468l-6.66 1.008q-.684 1.944-1.404 3.276 1.26 1.8 3.852 4.968.36.432.36.9t-.324.828q-.972 1.332-3.564 3.888t-3.384 2.556q-.432 0-.936-.324l-4.968-3.888q-1.584.828-3.276 1.368-.576 4.896-1.044 6.696-.252 1.008-1.296 1.008h-7.992q-.504 0-.882-.306t-.414-.774l-1.008-6.624q-1.764-.576-3.24-1.332l-5.076 3.852q-.36.324-.9.324-.504 0-.9-.396-4.536-4.104-5.94-6.048-.252-.36-.252-.828 0-.432.288-.828.54-.756 1.836-2.394t1.944-2.538q-.972-1.8-1.476-3.564l-6.588-.972q-.468-.072-.756-.45t-.288-.846v-7.992q0-.432.288-.828t.684-.468l6.696-1.008q.504-1.656 1.404-3.312-1.44-2.052-3.852-4.968-.36-.432-.36-.864 0-.36.324-.828.936-1.296 3.546-3.87t3.402-2.574q.468 0 .936.36l4.968 3.852q1.584-.828 3.276-1.368.576-4.896 1.044-6.696.252-1.008 1.296-1.008h7.992q.504 0 .882.306t.414.774l1.008 6.624q1.764.576 3.24 1.332l5.112-3.852q.324-.324.864-.324.468 0 .9.36 4.644 4.284 5.94 6.12.252.288.252.792 0 .432-.288.828-.54.756-1.836 2.394t-1.944 2.538q.936 1.8 1.476 3.528l6.588 1.008q.468.072.756.45t.288.846z","TRASH_O":"M18.432-37.943v20.736q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-20.736q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828zm9.216 0v20.736q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-20.736q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828zm9.216 0v20.736q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-20.736q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828zm4.608 26.064v-34.128h-32.256v34.128q0 .792.252 1.458t.522.972.378.306h29.952q.108 0 .378-.306t.522-.972.252-1.458zm-24.192-38.736h16.128l-1.728-4.212q-.252-.324-.612-.396h-11.412q-.36.072-.612.396zm33.408 1.152v2.304q0 .504-.324.828t-.828.324h-3.456v34.128q0 2.988-1.692 5.166t-4.068 2.178h-29.952q-2.376 0-4.068-2.106t-1.692-5.094v-34.272h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h11.124l2.52-6.012q.54-1.332 1.944-2.268t2.844-.936h11.52q1.44 0 2.844.936t1.944 2.268l2.52 6.012h11.124q.504 0 .828.324t.324.828z","HOME":"M50.688-28.727v17.28q0 .936-.684 1.62t-1.62.684h-13.824v-13.824h-9.216v13.824h-13.824q-.936 0-1.62-.684t-.684-1.62v-17.28l.018-.108.018-.108 20.7-17.064 20.7 17.064q.036.072.036.216zm8.028-2.484l-2.232 2.664q-.288.324-.756.396h-.108q-.468 0-.756-.252l-24.912-20.772-24.912 20.772q-.432.288-.864.252-.468-.072-.756-.396l-2.232-2.664q-.288-.36-.252-.846t.396-.774l25.884-21.564q1.152-.936 2.736-.936t2.736.936l8.784 7.344v-7.02q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v14.688l7.884 6.552q.36.288.396.774t-.252.846z","FILE_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08z","CLOCK_O":"M32.256-44.855v16.128q0 .504-.324.828t-.828.324h-11.52q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h8.064v-12.672q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828zm14.976 12.672q0-5.328-2.628-9.828t-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828zm8.064 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","ROAD":"M39.996-28.583v-.144l-.864-11.52q-.036-.468-.396-.81t-.828-.342h-6.696q-.468 0-.828.342t-.396.81l-.864 11.52v.144q-.036.432.288.72t.756.288h8.784q.432 0 .756-.288t.288-.72zm27.324 16.812q0 2.628-1.656 2.628h-25.344q.468 0 .792-.342t.288-.81l-.72-9.216q-.036-.468-.396-.81t-.828-.342h-9.792q-.468 0-.828.342t-.396.81l-.72 9.216q-.036.468.288.81t.792.342h-25.344q-1.656 0-1.656-2.628 0-1.944.936-4.176l15.012-37.584q.288-.684.936-1.188t1.368-.504h12.204q-.468 0-.828.342t-.396.81l-.54 6.912q-.036.504.288.828t.792.324h5.976q.468 0 .792-.324t.288-.828l-.54-6.912q-.036-.468-.396-.81t-.828-.342h12.204q.72 0 1.368.504t.936 1.188l15.012 37.584q.936 2.232.936 4.176z","DOWNLOAD":"M46.08-16.055q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm9.216 0q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm4.608-8.064v11.52q0 1.44-1.008 2.448t-2.448 1.008h-52.992q-1.44 0-2.448-1.008t-1.008-2.448v-11.52q0-1.44 1.008-2.448t2.448-1.008h16.74l4.86 4.896q2.088 2.016 4.896 2.016t4.896-2.016l4.896-4.896h16.704q1.44 0 2.448 1.008t1.008 2.448zm-11.7-20.484q.612 1.476-.504 2.52l-16.128 16.128q-.648.684-1.62.684t-1.62-.684l-16.128-16.128q-1.116-1.044-.504-2.52.612-1.404 2.124-1.404h9.216v-16.128q0-.936.684-1.62t1.62-.684h9.216q.936 0 1.62.684t.684 1.62v16.128h9.216q1.512 0 2.124 1.404z","ARROW_CIRCLE_O_DOWN":"M40.32-31.031q0 .432-.36.864l-11.484 11.484q-.396.324-.828.324t-.828-.324l-11.52-11.52q-.54-.576-.252-1.26.288-.72 1.08-.72h6.912v-12.672q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v12.672h6.912q.504 0 .828.324t.324.828zm-12.672-20.736q-5.328 0-9.828 2.628t-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828-2.628-9.828-7.128-7.128-9.828-2.628zm27.648 19.584q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","ARROW_CIRCLE_O_UP":"M40.248-32.903q-.288.72-1.08.72h-6.912v12.672q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-12.672h-6.912q-.504 0-.828-.324t-.324-.828q0-.432.36-.864l11.484-11.484q.396-.324.828-.324t.828.324l11.52 11.52q.54.576.252 1.26zm-12.6-18.864q-5.328 0-9.828 2.628t-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828-2.628-9.828-7.128-7.128-9.828-2.628zm27.648 19.584q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","INBOX":"M36.828-29.879h11.376l-.09-.288-.09-.288-7.632-17.856h-25.488l-7.632 17.856-.09.288-.09.288h11.376l3.42 6.912h11.52zm18.468 1.08v17.352q0 .936-.684 1.62t-1.62.684h-50.688q-.936 0-1.62-.684t-.684-1.62v-17.352q0-2.232.9-4.428l8.568-19.872q.36-.9 1.314-1.512t1.89-.612h29.952q.936 0 1.89.612t1.314 1.512l8.568 19.872q.9 2.196.9 4.428z","PLAY_CIRCLE_O":"M42.624-32.183q0 1.332-1.152 1.98l-19.584 11.52q-.54.324-1.152.324-.576 0-1.152-.288-1.152-.684-1.152-2.016v-23.04q0-1.332 1.152-2.016 1.188-.648 2.304.036l19.584 11.52q1.152.648 1.152 1.98zm4.608 0q0-5.328-2.628-9.828t-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828zm8.064 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","ROTATE_RIGHT":"M55.296-55.223v16.128q0 .936-.684 1.62t-1.62.684h-16.128q-1.512 0-2.124-1.44-.612-1.404.504-2.484l4.968-4.968q-5.328-4.932-12.564-4.932-3.744 0-7.146 1.458t-5.886 3.942-3.942 5.886-1.458 7.146 1.458 7.146 3.942 5.886 5.886 3.942 7.146 1.458q4.284 0 8.1-1.872t6.444-5.292q.252-.36.828-.432.504 0 .9.324l4.932 4.968q.324.288.342.738t-.27.81q-3.924 4.752-9.504 7.362t-11.772 2.61q-5.616 0-10.728-2.196t-8.82-5.904-5.904-8.82-2.196-10.728 2.196-10.728 5.904-8.82 8.82-5.904 10.728-2.196q5.292 0 10.242 1.998t8.802 5.634l4.68-4.644q1.044-1.116 2.52-.504 1.404.612 1.404 2.124z","REFRESH":"M54.396-26.423q0 .18-.036.252-2.304 9.648-9.648 15.642t-17.208 5.994q-5.256 0-10.17-1.98t-8.766-5.652l-4.644 4.644q-.684.684-1.62.684t-1.62-.684-.684-1.62v-16.128q0-.936.684-1.62t1.62-.684h16.128q.936 0 1.62.684t.684 1.62-.684 1.62l-4.932 4.932q2.556 2.376 5.796 3.672t6.732 1.296q4.824 0 9-2.34t6.696-6.444q.396-.612 1.908-4.212.288-.828 1.08-.828h6.912q.468 0 .81.342t.342.81zm.9-28.8v16.128q0 .936-.684 1.62t-1.62.684h-16.128q-.936 0-1.62-.684t-.684-1.62.684-1.62l4.968-4.968q-5.328-4.932-12.564-4.932-4.824 0-9 2.34t-6.696 6.444q-.396.612-1.908 4.212-.288.828-1.08.828h-7.164q-.468 0-.81-.342t-.342-.81v-.252q2.34-9.648 9.72-15.642t17.28-5.994q5.256 0 10.224 1.998t8.82 5.634l4.68-4.644q.684-.684 1.62-.684t1.62.684.684 1.62z","LIST_ALT":"M13.824-21.815v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm0-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm0-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm41.472 18.432v2.304q0 .468-.342.81t-.81.342h-34.56q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h34.56q.468 0 .81.342t.342.81zm0-9.216v2.304q0 .468-.342.81t-.81.342h-34.56q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h34.56q.468 0 .81.342t.342.81zm0-9.216v2.304q0 .468-.342.81t-.81.342h-34.56q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h34.56q.468 0 .81.342t.342.81zm4.608 25.344v-29.952q0-.468-.342-.81t-.81-.342h-52.992q-.468 0-.81.342t-.342.81v29.952q0 .468.342.81t.81.342h52.992q.468 0 .81-.342t.342-.81zm4.608-39.168v39.168q0 2.376-1.692 4.068t-4.068 1.692h-52.992q-2.376 0-4.068-1.692t-1.692-4.068v-39.168q0-2.376 1.692-4.068t4.068-1.692h52.992q2.376 0 4.068 1.692t1.692 4.068z","LOCK":"M11.52-36.791h18.432v-6.912q0-3.816-2.7-6.516t-6.516-2.7-6.516 2.7-2.7 6.516v6.912zm29.952 3.456v20.736q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-20.736q0-1.44 1.008-2.448t2.448-1.008h1.152v-6.912q0-6.624 4.752-11.376t11.376-4.752 11.376 4.752 4.752 11.376v6.912h1.152q1.44 0 2.448 1.008t1.008 2.448z","FLAG":"M11.52-55.223q0 2.592-2.304 3.96v45.576q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-45.576q-2.304-1.368-2.304-3.96 0-1.908 1.35-3.258t3.258-1.35 3.258 1.35 1.35 3.258zm52.992 2.304v27.468q0 .9-.45 1.386t-1.422.99q-7.74 4.176-13.284 4.176-2.196 0-4.446-.792t-3.906-1.728-4.158-1.728-5.13-.792q-6.912 0-16.704 5.256-.612.324-1.188.324-.936 0-1.62-.684t-.684-1.62v-26.712q0-1.152 1.116-1.98.756-.504 2.844-1.548 8.496-4.32 15.156-4.32 3.852 0 7.2 1.044t7.884 3.168q1.368.684 3.168.684 1.944 0 4.23-.756t3.96-1.692 3.168-1.692 1.962-.756q.936 0 1.62.684t.684 1.62z","HEADPHONES":"M59.904-32.543q0 5.976-2.16 11.304l-.72 1.764-6.66 1.188q-.792 2.988-3.258 4.914t-5.634 1.926v1.152q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-20.736q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828v1.152q2.556 0 4.68 1.278t3.348 3.438l2.448-.432q1.044-3.42 1.044-6.948 0-5.328-3.168-10.044t-8.514-7.524-11.358-2.808-11.358 2.808-8.514 7.524-3.168 10.044q0 3.528 1.044 6.948l2.448.432q1.224-2.16 3.348-3.438t4.68-1.278v-1.152q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828v20.736q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-1.152q-3.168 0-5.634-1.926t-3.258-4.914l-6.66-1.188-.72-1.764q-2.16-5.328-2.16-11.304 0-5.436 2.412-10.476t6.444-8.73 9.576-5.886 11.52-2.196 11.52 2.196 9.576 5.886 6.444 8.73 2.412 10.476z","VOLUME_OFF":"M27.648-51.767v39.168q0 .936-.684 1.62t-1.62.684-1.62-.684l-11.988-11.988h-9.432q-.936 0-1.62-.684t-.684-1.62v-13.824q0-.936.684-1.62t1.62-.684h9.432l11.988-11.988q.684-.684 1.62-.684t1.62.684.684 1.62z","VOLUME_DOWN":"M27.648-51.767v39.168q0 .936-.684 1.62t-1.62.684-1.62-.684l-11.988-11.988h-9.432q-.936 0-1.62-.684t-.684-1.62v-13.824q0-.936.684-1.62t1.62-.684h9.432l11.988-11.988q.684-.684 1.62-.684t1.62.684.684 1.62zm13.824 19.584q0 2.736-1.53 5.094t-4.05 3.366q-.36.18-.9.18-.936 0-1.62-.666t-.684-1.638q0-.756.432-1.278t1.044-.9 1.224-.828 1.044-1.278.432-2.052-.432-2.052-1.044-1.278-1.224-.828-1.044-.9-.432-1.278q0-.972.684-1.638t1.62-.666q.54 0 .9.18 2.52.972 4.05 3.348t1.53 5.112z","VOLUME_UP":"M27.648-51.767v39.168q0 .936-.684 1.62t-1.62.684-1.62-.684l-11.988-11.988h-9.432q-.936 0-1.62-.684t-.684-1.62v-13.824q0-.936.684-1.62t1.62-.684h9.432l11.988-11.988q.684-.684 1.62-.684t1.62.684.684 1.62zm13.824 19.584q0 2.736-1.53 5.094t-4.05 3.366q-.36.18-.9.18-.936 0-1.62-.666t-.684-1.638q0-.756.432-1.278t1.044-.9 1.224-.828 1.044-1.278.432-2.052-.432-2.052-1.044-1.278-1.224-.828-1.044-.9-.432-1.278q0-.972.684-1.638t1.62-.666q.54 0 .9.18 2.52.972 4.05 3.348t1.53 5.112zm9.216 0q0 5.508-3.06 10.17t-8.1 6.786q-.468.18-.9.18-.972 0-1.656-.684t-.684-1.62q0-1.404 1.404-2.124 2.016-1.044 2.736-1.584 2.664-1.944 4.158-4.878t1.494-6.246-1.494-6.246-4.158-4.878q-.72-.54-2.736-1.584-1.404-.72-1.404-2.124 0-.936.684-1.62t1.62-.684q.468 0 .936.18 5.04 2.124 8.1 6.786t3.06 10.17zm9.216 0q0 8.28-4.572 15.21t-12.168 10.206q-.468.18-.936.18-.936 0-1.62-.684t-.684-1.62q0-1.296 1.404-2.124.252-.144.81-.378t.81-.378q1.656-.9 2.952-1.836 4.428-3.276 6.912-8.172t2.484-10.404-2.484-10.404-6.912-8.172q-1.296-.936-2.952-1.836-.252-.144-.81-.378t-.81-.378q-1.404-.828-1.404-2.124 0-.936.684-1.62t1.62-.684q.468 0 .936.18 7.596 3.276 12.168 10.206t4.572 15.21z","QRCODE":"M13.824-22.967v4.608h-4.608v-4.608h4.608zm0-27.648v4.608h-4.608v-4.608h4.608zm27.648 0v4.608h-4.608v-4.608h4.608zm-36.864 36.828h13.824v-13.788h-13.824v13.788zm0-27.612h13.824v-13.824h-13.824v13.824zm27.648 0h13.824v-13.824h-13.824v13.824zm-9.216 9.216v23.04h-23.04v-23.04h23.04zm18.432 18.432v4.608h-4.608v-4.608h4.608zm9.216 0v4.608h-4.608v-4.608h4.608zm0-18.432v13.824h-13.824v-4.608h-4.608v13.824h-4.608v-23.04h13.824v4.608h4.608v-4.608h4.608zm-27.648-27.648v23.04h-23.04v-23.04h23.04zm27.648 0v23.04h-23.04v-23.04h23.04z","BARCODE":"M2.268-9.143h-2.268v-50.688h2.268v50.688zm2.268-.036h-1.152v-50.652h1.152v50.652zm3.384 0h-1.116v-50.652h1.116v50.652zm5.652 0h-1.116v-50.652h1.116v50.652zm5.652 0h-2.232v-50.652h2.232v50.652zm4.536 0h-1.116v-50.652h1.116v50.652zm2.268 0h-1.116v-50.652h1.116v50.652zm2.268 0h-1.116v-50.652h1.116v50.652zm5.652 0h-2.268v-50.652h2.268v50.652zm5.652 0h-2.268v-50.652h2.268v50.652zm4.536 0h-2.268v-50.652h2.268v50.652zm4.536 0h-2.268v-50.652h2.268v50.652zm3.384 0h-2.268v-50.652h2.268v50.652zm6.804 0h-3.384v-50.652h3.384v50.652zm2.268 0h-1.152v-50.652h1.152v50.652zm3.384.036h-2.268v-50.688h2.268v50.688z","TAG":"M16.128-48.311q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm38.412 20.736q0 1.908-1.332 3.24l-17.676 17.712q-1.404 1.332-3.276 1.332-1.908 0-3.24-1.332l-25.74-25.776q-1.368-1.332-2.322-3.636t-.954-4.212v-14.976q0-1.872 1.368-3.24t3.24-1.368h14.976q1.908 0 4.212.954t3.672 2.322l25.74 25.704q1.332 1.404 1.332 3.276z","TAGS":"M16.128-48.311q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm38.412 20.736q0 1.908-1.332 3.24l-17.676 17.712q-1.404 1.332-3.276 1.332-1.908 0-3.24-1.332l-25.74-25.776q-1.368-1.332-2.322-3.636t-.954-4.212v-14.976q0-1.872 1.368-3.24t3.24-1.368h14.976q1.908 0 4.212.954t3.672 2.322l25.74 25.704q1.332 1.404 1.332 3.276zm13.824 0q0 1.908-1.332 3.24l-17.676 17.712q-1.404 1.332-3.276 1.332-1.296 0-2.124-.504t-1.908-1.62l16.92-16.92q1.332-1.332 1.332-3.24 0-1.872-1.332-3.276l-25.74-25.704q-1.368-1.368-3.672-2.322t-4.212-.954h8.064q1.908 0 4.212.954t3.672 2.322l25.74 25.704q1.332 1.404 1.332 3.276z","BOOK":"M59.004-47.231q1.44 2.052.648 4.644l-9.9 32.616q-.684 2.304-2.754 3.87t-4.41 1.566h-33.228q-2.772 0-5.346-1.926t-3.582-4.734q-.864-2.412-.072-4.572 0-.144.108-.972t.144-1.332q.036-.288-.108-.774t-.108-.702q.072-.396.288-.756t.594-.846.594-.846q.828-1.368 1.62-3.294t1.08-3.294q.108-.36.018-1.08t-.018-1.008q.108-.396.612-1.008t.612-.828q.756-1.296 1.512-3.312t.9-3.24q.036-.324-.09-1.152t.018-1.008q.144-.468.792-1.098t.792-.81q.684-.936 1.53-3.042t.99-3.474q.036-.288-.108-.918t-.072-.954q.072-.288.324-.648t.648-.828.612-.756q.288-.432.594-1.098t.54-1.26.576-1.296.702-1.152.954-.846 1.296-.414 1.71.198l-.036.108q1.368-.324 1.836-.324h27.396q2.664 0 4.104 2.016t.648 4.68l-9.864 32.616q-1.296 4.284-2.574 5.526t-4.626 1.242h-31.284q-.972 0-1.368.54-.396.576-.036 1.548.864 2.52 5.184 2.52h33.228q1.044 0 2.016-.558t1.26-1.494l10.8-35.532q.252-.792.18-2.052 1.368.54 2.124 1.548zm-38.304.072q-.144.468.072.81t.72.342h21.888q.468 0 .918-.342t.594-.81l.756-2.304q.144-.468-.072-.81t-.72-.342h-21.888q-.468 0-.918.342t-.594.81zm-2.988 9.216q-.144.468.072.81t.72.342h21.888q.468 0 .918-.342t.594-.81l.756-2.304q.144-.468-.072-.81t-.72-.342h-21.888q-.468 0-.918.342t-.594.81z","BOOKMARK":"M41.904-59.831q.828 0 1.584.324 1.188.468 1.89 1.476t.702 2.232v46.404q0 1.224-.702 2.232t-1.89 1.476q-.684.288-1.584.288-1.728 0-2.988-1.152l-15.876-15.264-15.876 15.264q-1.296 1.188-2.988 1.188-.828 0-1.584-.324-1.188-.468-1.89-1.476t-.702-2.232v-46.404q0-1.224.702-2.232t1.89-1.476q.756-.324 1.584-.324h37.728z","PRINT":"M13.824-9.143h32.256v-9.216h-32.256v9.216zm0-23.04h32.256v-13.824h-5.76q-1.44 0-2.448-1.008t-1.008-2.448v-5.76h-23.04v23.04zm41.472 2.304q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm4.608 0v14.976q0 .468-.342.81t-.81.342h-8.064v5.76q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-5.76h-8.064q-.468 0-.81-.342t-.342-.81v-14.976q0-2.844 2.034-4.878t4.878-2.034h2.304v-19.584q0-1.44 1.008-2.448t2.448-1.008h24.192q1.44 0 3.168.72t2.736 1.728l5.472 5.472q1.008 1.008 1.728 2.736t.72 3.168v9.216h2.304q2.844 0 4.878 2.034t2.034 4.878z","CAMERA":"M34.56-40.247q4.284 0 7.326 3.042t3.042 7.326-3.042 7.326-7.326 3.042-7.326-3.042-3.042-7.326 3.042-7.326 7.326-3.042zm25.344-14.976q3.816 0 6.516 2.7t2.7 6.516v32.256q0 3.816-2.7 6.516t-6.516 2.7h-50.688q-3.816 0-6.516-2.7t-2.7-6.516v-32.256q0-3.816 2.7-6.516t6.516-2.7h8.064l1.836-4.896q.684-1.764 2.502-3.042t3.726-1.278h18.432q1.908 0 3.726 1.278t2.502 3.042l1.836 4.896h8.064zm-25.344 41.472q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","FONT":"M26.1-44.315l-6.12 16.2q1.188 0 4.914.072t5.778.072q.684 0 2.052-.072-3.132-9.108-6.624-16.272zm-26.1 39.78l.072-2.844q.828-.252 2.016-.45t2.052-.378 1.782-.522 1.602-1.044 1.116-1.818l8.532-22.176 10.08-26.064h4.6080000000000005q.288.504.396.756l7.38 17.28q1.188 2.808 3.816 9.27t4.104 9.882q.54 1.224 2.088 5.202t2.592 6.066q.72 1.62 1.26 2.052.684.54 3.168 1.062t3.024.738q.216 1.368.216 2.052l-.018.468-.018.468q-2.268 0-6.84-.288t-6.876-.288q-2.736 0-7.74.252t-6.408.288q0-1.548.144-2.808l4.716-1.008q.036 0 .45-.09t.558-.126.522-.162.54-.234.396-.288.324-.396.09-.504q0-.576-1.116-3.474t-2.592-6.39-1.512-3.6l-16.2-.072q-.936 2.088-2.754 7.038t-1.818 5.85q0 .792.504 1.35t1.566.882 1.746.486 2.052.306 1.476.144q.036.684.036 2.088 0 .324-.072.972-2.088 0-6.282-.36t-6.282-.36q-.288 0-.954.144t-.774.144q-2.88.504-6.768.504z","BOLD":"M19.98-9.683q2.664 1.152 5.04 1.152 13.536 0 13.536-12.06 0-4.104-1.476-6.48-.972-1.584-2.214-2.664t-2.43-1.674-2.898-.9-3.024-.378-3.402-.072q-2.628 0-3.636.36 0 1.908-.018 5.724t-.018 5.688q0 .288-.036 2.43t-.018 3.474.162 3.006.432 2.394zm-.504-26.856q1.512.252 3.924.252 2.952 0 5.148-.468t3.96-1.602 2.682-3.222.918-5.112q0-2.52-1.044-4.41t-2.844-2.952-3.888-1.566-4.464-.504q-1.8 0-4.68.468 0 1.8.144 5.436t.144 5.472q0 .972-.018 2.88t-.018 2.844q0 1.656.036 2.484zm-19.476 32.004l.072-3.384q.54-.144 3.06-.576t3.816-.972q.252-.432.45-.972t.306-1.206.198-1.17.108-1.35.018-1.224v-2.358q0-35.352-.792-36.9-.144-.288-.792-.522t-1.602-.396-1.782-.252-1.746-.162-1.098-.108l-.144-2.988q3.528-.072 12.24-.414t13.428-.342q.828 0 2.466.018t2.43.018q2.52 0 4.914.468t4.626 1.512 3.888 2.556 2.664 3.762 1.008 4.95q0 1.872-.594 3.438t-1.404 2.592-2.322 2.07-2.628 1.62-3.024 1.44q5.544 1.26 9.234 4.824t3.69 8.928q0 3.6-1.26 6.462t-3.366 4.698-4.968 3.078-5.886 1.746-6.336.504q-1.584 0-4.752-.108t-4.752-.108q-3.816 0-11.052.396t-8.316.432z","ITALIC":"M0-4.607l.612-3.06q.216-.072 2.934-.774t4.014-1.35q1.008-1.26 1.476-3.636.036-.252 2.232-10.404t4.104-19.566 1.872-10.674v-.9q-.864-.468-1.962-.666t-2.502-.288-2.088-.198l.684-3.708q1.188.072 4.32.234t5.382.252 4.338.09q1.728 0 3.546-.09t4.356-.252 3.546-.234q-.18 1.404-.684 3.204-1.08.36-3.654 1.026t-3.906 1.206q-.288.684-.504 1.53t-.324 1.44-.27 1.638-.234 1.512q-.972 5.328-3.15 15.102t-2.79 12.798q-.072.324-.468 2.088t-.72 3.24-.576 3.006-.216 2.07l.036.648q.612.144 6.66 1.116-.108 1.584-.576 3.564-.396 0-1.17.054t-1.17.054q-1.044 0-3.132-.36t-3.096-.36q-4.968-.072-7.416-.072-1.836 0-5.148.324t-4.356.396z","TEXT_HEIGHT":"M62.784-13.751q1.188 0 1.512.666t-.396 1.602l-4.536 5.832q-.72.936-1.764.936t-1.764-.936l-4.536-5.832q-.72-.936-.396-1.602t1.512-.666h2.88v-36.864h-2.88q-1.188 0-1.512-.666t.396-1.602l4.536-5.832q.72-.936 1.764-.936t1.764.936l4.536 5.832q.72.936.396 1.602t-1.512.666h-2.88v36.864h2.88zm-59.868-46.044l1.944.972q.432.18 7.596.18 1.584 0 4.752-.072t4.752-.072q1.296 0 3.87.018t3.87.018h10.548q.216 0 .756.018t.738 0 .576-.108.63-.324.54-.63l1.512-.036.504.018.504.018q.072 4.032.072 12.096 0 2.88-.18 3.924-1.404.504-2.448.648-.9-1.584-1.944-4.608-.108-.324-.396-1.728t-.522-2.646-.27-1.278q-.216-.288-.432-.45t-.558-.216-.468-.09-.648-.018-.594.018q-.612 0-2.394-.018t-2.682-.018-2.304.072-2.556.216q-.324 2.916-.288 4.896 0 3.384.072 13.968t.072 16.38q0 .576-.09 2.574t0 3.294.45 2.484q1.44.756 4.464 1.53t4.32 1.35q.18 1.44.18 1.8 0 .504-.108 1.044l-1.224.036q-2.736.072-7.848-.288t-7.452-.36q-1.8 0-5.436.324t-5.472.324l-.108-1.872v-.324q.612-.972 2.214-1.548t3.546-1.044 2.808-.972q.684-1.512.684-13.788 0-3.636-.108-10.908t-.108-10.908v-4.212q0-.072.018-.558t.018-.9-.036-.918-.108-.864-.18-.504q-.396-.432-5.832-.432-1.188 0-3.348.432t-2.88.936q-.684.468-1.224 2.61t-1.134 3.996-1.53 1.926q-1.512-.936-2.016-1.584v-13.788z","TEXT_WIDTH":"M2.916-59.795l1.944.972q.432.18 7.596.18 1.584 0 4.752-.072t4.752-.072q2.52 0 8.874-.036t10.962-.018 8.892.162q1.188.036 2.016-1.116l1.512-.036.504.018.504.018q.072 4.032.072 12.096 0 2.88-.18 3.924-1.404.504-2.448.648-.9-1.584-1.944-4.608-.108-.324-.396-1.71t-.54-2.646-.252-1.296q-.36-.468-.972-.684-.18-.072-2.376-.072-1.08 0-3.348-.036t-3.708-.036-3.384.072-3.456.252q-.324 2.916-.288 4.896l.036 5.472v-1.872q0 1.98.036 5.544t.054 6.48.018 5.508q0 .576-.09 2.574t0 3.294.45 2.484q1.44.756 4.464 1.53t4.32 1.35q.18 1.44.18 1.8 0 .504-.108 1.044l-1.224.036q-2.736.072-7.848-.288t-7.452-.36q-1.8 0-5.436.324t-5.472.324l-.108-1.872v-.324q.612-.972 2.214-1.548t3.546-1.044 2.808-.972q.252-.576.414-2.664t.216-5.238.054-5.58-.018-5.526-.018-3.204q0-.252-.09-.774t-.09-.81q0-.252.018-1.584t.036-2.628 0-2.754-.108-2.43-.234-1.152q-.396-.432-5.832-.432-1.476 0-5.868.486t-4.968.882q-.684.432-1.224 2.574t-1.134 4.014-1.53 1.944q-1.512-.936-2.016-1.584v-13.788zm44.244 46.152q.432 0 1.512.702t2.07 1.494 2.142 1.764 1.296 1.08q.936.756.936 1.764t-.936 1.764q-.144.108-1.296 1.08t-2.142 1.764-2.07 1.494-1.512.702q-.468 0-.738-.378t-.36-1.026-.09-1.206.054-1.188.054-.702h-36.864q0 .072.054.702t.054 1.188-.09 1.206-.36 1.026-.738.378q-.432 0-1.512-.702t-2.07-1.494-2.142-1.764-1.296-1.08q-.936-.756-.936-1.764t.936-1.764q.144-.108 1.296-1.08t2.142-1.764 2.07-1.494 1.512-.702q.468 0 .738.378t.36 1.026.09 1.206-.054 1.188-.054.702h36.864q0-.072-.054-.702t-.054-1.188.09-1.206.36-1.026.738-.378z","ALIGN_LEFT":"M64.512-16.055v4.608q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62zm-13.824-13.824v4.608q0 .936-.684 1.62t-1.62.684h-46.08q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h46.08q.936 0 1.62.684t.684 1.62zm9.216-13.824v4.608q0 .936-.684 1.62t-1.62.684h-55.296q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h55.296q.936 0 1.62.684t.684 1.62zm-13.824-13.824v4.608q0 .936-.684 1.62t-1.62.684h-41.472q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h41.472q.936 0 1.62.684t.684 1.62z","ALIGN_CENTER":"M64.512-16.055v4.608q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62zm-13.824-13.824v4.608q0 .936-.684 1.62t-1.62.684h-32.256q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h32.256q.936 0 1.62.684t.684 1.62zm9.216-13.824v4.608q0 .936-.684 1.62t-1.62.684h-50.688q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h50.688q.936 0 1.62.684t.684 1.62zm-13.824-13.824v4.608q0 .936-.684 1.62t-1.62.684h-23.04q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h23.04q.936 0 1.62.684t.684 1.62z","ALIGN_RIGHT":"M64.512-16.055v4.608q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62zm0-13.824v4.608q0 .936-.684 1.62t-1.62.684h-46.08q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h46.08q.936 0 1.62.684t.684 1.62zm0-13.824v4.608q0 .936-.684 1.62t-1.62.684h-55.296q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h55.296q.936 0 1.62.684t.684 1.62zm0-13.824v4.608q0 .936-.684 1.62t-1.62.684h-41.472q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h41.472q.936 0 1.62.684t.684 1.62z","ALIGN_JUSTIFY":"M64.512-16.055v4.608q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62zm0-13.824v4.608q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62zm0-13.824v4.608q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62zm0-13.824v4.608q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62z","LIST":"M9.216-17.207v6.912q0 .468-.342.81t-.81.342h-6.912q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h6.912q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-6.912q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h6.912q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-6.912q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h6.912q.468 0 .81.342t.342.81zm55.296 27.648v6.912q0 .468-.342.81t-.81.342h-48.384q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h48.384q.468 0 .81.342t.342.81zm-55.296-41.472v6.912q0 .468-.342.81t-.81.342h-6.912q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h6.912q.468 0 .81.342t.342.81zm55.296 27.648v6.912q0 .468-.342.81t-.81.342h-48.384q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h48.384q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-48.384q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h48.384q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-48.384q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h48.384q.468 0 .81.342t.342.81z","OUTDENT":"M13.824-44.855v20.736q0 .468-.342.81t-.81.342q-.504 0-.828-.324l-10.368-10.368q-.324-.324-.324-.828t.324-.828l10.368-10.368q.324-.324.828-.324.468 0 .81.342t.342.81zm50.688 27.648v6.912q0 .468-.342.81t-.81.342h-62.208q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h62.208q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-39.168q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h39.168q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-39.168q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h39.168q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-62.208q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h62.208q.468 0 .81.342t.342.81z","INDENT":"M12.672-34.487q0 .504-.324.828l-10.368 10.368q-.324.324-.828.324-.468 0-.81-.342t-.342-.81v-20.736q0-.468.342-.81t.81-.342q.504 0 .828.324l10.368 10.368q.324.324.324.828zm51.84 17.28v6.912q0 .468-.342.81t-.81.342h-62.208q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h62.208q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-39.168q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h39.168q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-39.168q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h39.168q.468 0 .81.342t.342.81zm0-13.824v6.912q0 .468-.342.81t-.81.342h-62.208q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h62.208q.468 0 .81.342t.342.81z","VIDEO_CAMERA":"M64.512-51.767v39.168q0 1.512-1.404 2.124-.468.18-.9.18-.972 0-1.62-.684l-14.508-14.508v5.976q0 4.284-3.042 7.326t-7.326 3.042h-25.344q-4.284 0-7.326-3.042t-3.042-7.326v-25.344q0-4.284 3.042-7.326t7.326-3.042h25.344q4.284 0 7.326 3.042t3.042 7.326v5.94l14.508-14.472q.648-.684 1.62-.684.432 0 .9.18 1.404.612 1.404 2.124z","PICTURE_O":"M23.04-43.703q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm36.864 13.824v16.128h-50.688v-6.912l11.52-11.52 5.76 5.76 18.432-18.432zm3.456-25.344h-57.6q-.468 0-.81.342t-.342.81v43.776q0 .468.342.81t.81.342h57.6q.468 0 .81-.342t.342-.81v-43.776q0-.468-.342-.81t-.81-.342zm5.76 1.152v43.776q0 2.376-1.692 4.068t-4.068 1.692h-57.6q-2.376 0-4.068-1.692t-1.692-4.068v-43.776q0-2.376 1.692-4.068t4.068-1.692h57.6q2.376 0 4.068 1.692t1.692 4.068z","PENCIL":"M13.068-9.143l3.276-3.276-8.46-8.46-3.276 3.276v3.852h4.608v4.608h3.852zm18.828-33.408q0-.792-.792-.792-.36 0-.612.252l-19.512 19.512q-.252.252-.252.612 0 .792.792.792.36 0 .612-.252l19.512-19.512q.252-.252.252-.612zm-1.944-6.912l14.976 14.976-29.952 29.952h-14.976v-14.976zm24.588 3.456q0 1.908-1.332 3.24l-5.976 5.976-14.976-14.976 5.976-5.94q1.296-1.368 3.24-1.368 1.908 0 3.276 1.368l8.46 8.424q1.332 1.404 1.332 3.276z","MAP_MARKER":"M27.648-41.399q0-3.816-2.7-6.516t-6.516-2.7-6.516 2.7-2.7 6.516 2.7 6.516 6.516 2.7 6.516-2.7 2.7-6.516zm9.216 0q0 3.924-1.188 6.444l-13.104 27.864q-.576 1.188-1.71 1.872t-2.43.684-2.43-.684-1.674-1.872l-13.14-27.864q-1.188-2.52-1.188-6.444 0-7.632 5.4-13.032t13.032-5.4 13.032 5.4 5.4 13.032z","ADJUST":"M27.648-12.599v-39.168q-5.328 0-9.828 2.628t-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628zm27.648-19.584q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","TINT":"M18.432-22.967q0-1.296-.72-2.484-.036-.036-.558-.81t-.918-1.368-.9-1.584-.756-1.818q-.144-.576-.756-.576t-.756.576q-.252.828-.756 1.818t-.9 1.584-.918 1.368-.558.81q-.72 1.188-.72 2.484 0 1.908 1.35 3.258t3.258 1.35 3.258-1.35 1.35-3.258zm18.432-4.608q0 7.632-5.4 13.032t-13.032 5.4-13.032-5.4-5.4-13.032q0-5.22 2.916-9.9.216-.324 2.25-3.258t3.636-5.436 3.582-6.408 2.988-7.254q.324-1.08 1.224-1.692t1.836-.612 1.854.612 1.206 1.692q1.008 3.348 2.988 7.254t3.582 6.408 3.636 5.436 2.25 3.258q2.916 4.572 2.916 9.9z","PENCIL_SQUARE_O":"M31.968-21.815l4.176-4.176-5.472-5.472-4.176 4.176v2.016h3.456v3.456h2.016zm15.84-25.92q-.576-.576-1.188.036l-12.6 12.6q-.612.612-.036 1.188t1.188-.036l12.6-12.6q.612-.612.036-1.188zm2.88 21.384v6.84q0 4.284-3.042 7.326t-7.326 3.042h-29.952q-4.284 0-7.326-3.042t-3.042-7.326v-29.952q0-4.284 3.042-7.326t7.326-3.042h29.952q2.268 0 4.212.9.54.252.648.828.108.612-.324 1.044l-1.764 1.764q-.504.504-1.152.288-.828-.216-1.62-.216h-29.952q-2.376 0-4.068 1.692t-1.692 4.068v29.952q0 2.376 1.692 4.068t4.068 1.692h29.952q2.376 0 4.068-1.692t1.692-4.068v-4.536q0-.468.324-.792l2.304-2.304q.54-.54 1.26-.252t.72 1.044zm-3.456-26.568l10.368 10.368-24.192 24.192h-10.368v-10.368zm15.984 4.752l-3.312 3.312-10.368-10.368 3.312-3.312q1.008-1.008 2.448-1.008t2.448 1.008l5.472 5.472q1.008 1.008 1.008 2.448t-1.008 2.448z","SHARE_SQUARE_O":"M50.688-28.835v9.324q0 4.284-3.042 7.326t-7.326 3.042h-29.952q-4.284 0-7.326-3.042t-3.042-7.326v-29.952q0-4.284 3.042-7.326t7.326-3.042h9.18q.468 0 .81.342t.342.81q0 .972-.936 1.152-2.772.936-4.788 2.16-.36.144-.576.144h-4.032q-2.376 0-4.068 1.692t-1.692 4.068v29.952q0 2.376 1.692 4.068t4.068 1.692h29.952q2.376 0 4.068-1.692t1.692-4.068v-7.704q0-.684.648-1.044 1.008-.468 1.944-1.332.576-.576 1.26-.288.756.324.756 1.044zm8.532-17.856l-13.824 13.824q-.648.684-1.62.684-.432 0-.9-.18-1.404-.612-1.404-2.124v-6.912h-5.76q-11.628 0-15.768 4.716-4.284 4.932-2.664 17.028.108.828-.72 1.224-.288.072-.432.072-.576 0-.936-.468-.36-.504-.756-1.116t-1.422-2.466-1.782-3.582-1.386-4.104-.63-4.392q0-1.764.126-3.276t.504-3.24 1.008-3.168 1.692-2.934 2.466-2.664 3.402-2.214 4.482-1.746 5.742-1.098 7.074-.396h5.76v-6.912q0-1.512 1.404-2.124.468-.18.9-.18.936 0 1.62.684l13.824 13.824q.684.684.684 1.62t-.684 1.62z","CHECK_SQUARE_O":"M50.688-30.959v11.448q0 4.284-3.042 7.326t-7.326 3.042h-29.952q-4.284 0-7.326-3.042t-3.042-7.326v-29.952q0-4.284 3.042-7.326t7.326-3.042h29.952q2.268 0 4.212.9.54.252.648.828.108.612-.324 1.044l-1.764 1.764q-.36.36-.828.36-.108 0-.324-.072-.828-.216-1.62-.216h-29.952q-2.376 0-4.068 1.692t-1.692 4.068v29.952q0 2.376 1.692 4.068t4.068 1.692h29.952q2.376 0 4.068-1.692t1.692-4.068v-9.144q0-.468.324-.792l2.304-2.304q.36-.36.828-.36.216 0 .432.108.72.288.72 1.044zm8.316-17.604l-29.304 29.304q-.864.864-2.052.864t-2.052-.864l-15.48-15.48q-.864-.864-.864-2.052t.864-2.052l3.96-3.96q.864-.864 2.052-.864t2.052.864l9.468 9.468 23.292-23.292q.864-.864 2.052-.864t2.052.864l3.96 3.96q.864.864.864 2.052t-.864 2.052z","ARROWS":"M64.512-32.183q0 .936-.684 1.62l-9.216 9.216q-.684.684-1.62.684t-1.62-.684-.684-1.62v-4.608h-13.824v13.824h4.608q.936 0 1.62.684t.684 1.62-.684 1.62l-9.216 9.216q-.684.684-1.62.684t-1.62-.684l-9.216-9.216q-.684-.684-.684-1.62t.684-1.62 1.62-.684h4.608v-13.824h-13.824v4.608q0 .936-.684 1.62t-1.62.684-1.62-.684l-9.216-9.216q-.684-.684-.684-1.62t.684-1.62l9.216-9.216q.684-.684 1.62-.684t1.62.684.684 1.62v4.608h13.824v-13.824h-4.608q-.936 0-1.62-.684t-.684-1.62.684-1.62l9.216-9.216q.684-.684 1.62-.684t1.62.684l9.216 9.216q.684.684.684 1.62t-.684 1.62-1.62.684h-4.608v13.824h13.824v-4.608q0-.936.684-1.62t1.62-.684 1.62.684l9.216 9.216q.684.684.684 1.62z","STEP_BACKWARD":"M35.244-59.363q.684-.684 1.152-.468t.468 1.152v52.992q0 .936-.468 1.152t-1.152-.468l-25.56-25.56q-.324-.324-.468-.684v24.408q0 .936-.684 1.62t-1.62.684h-4.608q-.936 0-1.62-.684t-.684-1.62v-50.688q0-.936.684-1.62t1.62-.684h4.608q.936 0 1.62.684t.684 1.62v24.408q.144-.396.468-.684z","FAST_BACKWARD":"M62.892-59.363q.684-.684 1.152-.468t.468 1.152v52.992q0 .936-.468 1.152t-1.152-.468l-25.56-25.56q-.324-.324-.468-.684v25.56q0 .936-.468 1.152t-1.152-.468l-25.56-25.56q-.324-.324-.468-.684v24.408q0 .936-.684 1.62t-1.62.684h-4.608q-.936 0-1.62-.684t-.684-1.62v-50.688q0-.936.684-1.62t1.62-.684h4.608q.936 0 1.62.684t.684 1.62v24.408q.144-.396.468-.684l25.56-25.56q.684-.684 1.152-.468t.468 1.152v25.56q.144-.396.468-.684z","BACKWARD":"M58.284-59.363q.684-.684 1.152-.468t.468 1.152v52.992q0 .936-.468 1.152t-1.152-.468l-25.56-25.56q-.288-.324-.468-.684v25.56q0 .936-.468 1.152t-1.152-.468l-25.56-25.56q-.684-.684-.684-1.62t.684-1.62l25.56-25.56q.684-.684 1.152-.468t.468 1.152v25.56q.18-.396.468-.684z","PLAY":"M49.824-31.067l-47.808 26.568q-.828.468-1.422.108t-.594-1.296v-52.992q0-.936.594-1.296t1.422.108l47.808 26.568q.828.468.828 1.116t-.828 1.116z","PAUSE":"M55.296-57.527v50.688q0 .936-.684 1.62t-1.62.684h-18.432q-.936 0-1.62-.684t-.684-1.62v-50.688q0-.936.684-1.62t1.62-.684h18.432q.936 0 1.62.684t.684 1.62zm-32.256 0v50.688q0 .936-.684 1.62t-1.62.684h-18.432q-.936 0-1.62-.684t-.684-1.62v-50.688q0-.936.684-1.62t1.62-.684h18.432q.936 0 1.62.684t.684 1.62z","STOP":"M55.296-57.527v50.688q0 .936-.684 1.62t-1.62.684h-50.688q-.936 0-1.62-.684t-.684-1.62v-50.688q0-.936.684-1.62t1.62-.684h50.688q.936 0 1.62.684t.684 1.62z","FORWARD":"M1.62-5.003q-.684.684-1.152.468t-.468-1.152v-52.992q0-.936.468-1.152t1.152.468l25.56 25.56q.288.288.468.684v-25.56q0-.936.468-1.152t1.152.468l25.56 25.56q.684.684.684 1.62t-.684 1.62l-25.56 25.56q-.684.684-1.152.468t-.468-1.152v-25.56q-.18.36-.468.684z","FAST_FORWARD":"M1.62-5.003q-.684.684-1.152.468t-.468-1.152v-52.992q0-.936.468-1.152t1.152.468l25.56 25.56q.288.288.468.684v-25.56q0-.936.468-1.152t1.152.468l25.56 25.56q.288.288.468.684v-24.408q0-.936.684-1.62t1.62-.684h4.608q.936 0 1.62.684t.684 1.62v50.688q0 .936-.684 1.62t-1.62.684h-4.608q-.936 0-1.62-.684t-.684-1.62v-24.408q-.18.36-.468.684l-25.56 25.56q-.684.684-1.152.468t-.468-1.152v-25.56q-.18.36-.468.684z","STEP_FORWARD":"M1.62-5.003q-.684.684-1.152.468t-.468-1.152v-52.992q0-.936.468-1.152t1.152.468l25.56 25.56q.288.288.468.684v-24.408q0-.936.684-1.62t1.62-.684h4.608q.936 0 1.62.684t.684 1.62v50.688q0 .936-.684 1.62t-1.62.684h-4.608q-.936 0-1.62-.684t-.684-1.62v-24.408q-.18.36-.468.684z","EJECT":"M.504-29.195l25.56-25.56q.684-.684 1.62-.684t1.62.684l25.56 25.56q.684.684.468 1.152t-1.152.468h-52.992q-.936 0-1.152-.468t.468-1.152zm52.524 20.052h-50.688q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h50.688q.936 0 1.62.684t.684 1.62v9.216q0 .936-.684 1.62t-1.62.684z","CHEVRON_LEFT":"M42.156-53.603l-19.116 19.116 19.116 19.116q.684.684.684 1.62t-.684 1.62l-5.976 5.976q-.684.684-1.62.684t-1.62-.684l-26.712-26.712q-.684-.684-.684-1.62t.684-1.62l26.712-26.712q.684-.684 1.62-.684t1.62.684l5.976 5.976q.684.684.684 1.62t-.684 1.62z","CHEVRON_RIGHT":"M39.852-32.867l-26.712 26.712q-.684.684-1.62.684t-1.62-.684l-5.976-5.976q-.684-.684-.684-1.62t.684-1.62l19.116-19.116-19.116-19.116q-.684-.684-.684-1.62t.684-1.62l5.976-5.976q.684-.684 1.62-.684t1.62.684l26.712 26.712q.684.684.684 1.62t-.684 1.62z","PLUS_CIRCLE":"M43.776-29.879v-4.608q0-.936-.684-1.62t-1.62-.684h-9.216v-9.216q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v9.216h-9.216q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h9.216v9.216q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62v-9.216h9.216q.936 0 1.62-.684t.684-1.62zm11.52-2.304q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","MINUS_CIRCLE":"M43.776-29.879v-4.608q0-.936-.684-1.62t-1.62-.684h-27.648q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h27.648q.936 0 1.62-.684t.684-1.62zm11.52-2.304q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","TIMES_CIRCLE":"M41.364-24.047q0-.936-.684-1.62l-6.516-6.516 6.516-6.516q.684-.684.684-1.62 0-.972-.684-1.656l-3.24-3.24q-.684-.684-1.656-.684-.936 0-1.62.684l-6.516 6.516-6.516-6.516q-.684-.684-1.62-.684-.972 0-1.656.684l-3.24 3.24q-.684.684-.684 1.656 0 .936.684 1.62l6.516 6.516-6.516 6.516q-.684.684-.684 1.62 0 .972.684 1.656l3.24 3.24q.684.684 1.656.684.936 0 1.62-.684l6.516-6.516 6.516 6.516q.684.684 1.62.684.972 0 1.656-.684l3.24-3.24q.684-.684.684-1.656zm13.932-8.136q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","CHECK_CIRCLE":"M46.224-38.015q0-1.008-.648-1.656l-3.276-3.24q-.684-.684-1.62-.684t-1.62.684l-14.688 14.652-8.136-8.136q-.684-.684-1.62-.684t-1.62.684l-3.276 3.24q-.648.648-.648 1.656 0 .972.648 1.62l13.032 13.032q.684.684 1.62.684.972 0 1.656-.684l19.548-19.548q.648-.648.648-1.62zm9.072 5.832q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","QUESTION_CIRCLE":"M32.256-14.903v-6.912q0-.504-.324-.828t-.828-.324h-6.912q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h6.912q.504 0 .828-.324t.324-.828zm9.216-24.192q0-3.168-1.998-5.868t-4.986-4.176-6.12-1.476q-8.748 0-13.356 7.668-.54.864.288 1.512l4.752 3.6q.252.216.684.216.576 0 .9-.432 1.908-2.448 3.096-3.312 1.224-.864 3.096-.864 1.728 0 3.078.936t1.35 2.124q0 1.368-.72 2.196t-2.448 1.62q-2.268 1.008-4.158 3.114t-1.89 4.518v1.296q0 .504.324.828t.828.324h6.912q.504 0 .828-.324t.324-.828q0-.684.774-1.782t1.962-1.782q1.152-.648 1.764-1.026t1.656-1.26 1.602-1.728 1.008-2.178.45-2.916zm13.824 6.912q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","INFO_CIRCLE":"M36.864-14.903v-5.76q0-.504-.324-.828t-.828-.324h-3.456v-18.432q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v5.76q0 .504.324.828t.828.324h3.456v11.52h-3.456q-.504 0-.828.324t-.324.828v5.76q0 .504.324.828t.828.324h16.128q.504 0 .828-.324t.324-.828zm-4.608-32.256v-5.76q0-.504-.324-.828t-.828-.324h-6.912q-.504 0-.828.324t-.324.828v5.76q0 .504.324.828t.828.324h6.912q.504 0 .828-.324t.324-.828zm23.04 14.976q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","CROSSHAIRS":"M43.092-27.575h-3.924q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h3.924q-1.152-3.888-4.05-6.786t-6.786-4.05v3.924q0 .936-.684 1.62t-1.62.684h-4.608q-.936 0-1.62-.684t-.684-1.62v-3.924q-3.888 1.152-6.786 4.05t-4.05 6.786h3.924q.936 0 1.62.684t.684 1.62v4.608q0 .936-.684 1.62t-1.62.684h-3.924q1.152 3.888 4.05 6.786t6.786 4.05v-3.924q0-.936.684-1.62t1.62-.684h4.608q.936 0 1.62.684t.684 1.62v3.924q3.888-1.152 6.786-4.05t4.05-6.786zm12.204-6.912v4.608q0 .936-.684 1.62t-1.62.684h-5.148q-1.332 5.796-5.562 10.026t-10.026 5.562v5.148q0 .936-.684 1.62t-1.62.684h-4.608q-.936 0-1.62-.684t-.684-1.62v-5.148q-5.796-1.332-10.026-5.562t-5.562-10.026h-5.148q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h5.148q1.332-5.796 5.562-10.026t10.026-5.562v-5.148q0-.936.684-1.62t1.62-.684h4.608q.936 0 1.62.684t.684 1.62v5.148q5.796 1.332 10.026 5.562t5.562 10.026h5.148q.936 0 1.62.684t.684 1.62z","TIMES_CIRCLE_O":"M39.492-25.595l-5.256 5.256q-.36.36-.828.36t-.828-.36l-4.932-4.932-4.932 4.932q-.36.36-.828.36t-.828-.36l-5.256-5.256q-.36-.36-.36-.828t.36-.828l4.932-4.932-4.932-4.932q-.36-.36-.36-.828t.36-.828l5.256-5.256q.36-.36.828-.36t.828.36l4.932 4.932 4.932-4.932q.36-.36.828-.36t.828.36l5.256 5.256q.36.36.36.828t-.36.828l-4.932 4.932 4.932 4.932q.36.36.36.828t-.36.828zm7.74-6.588q0-5.328-2.628-9.828t-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828zm8.064 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","CHECK_CIRCLE_O":"M42.156-35.171l-15.192 15.192q-.684.684-1.62.684t-1.62-.684l-10.584-10.584q-.684-.684-.684-1.62t.684-1.62l3.672-3.672q.684-.684 1.62-.684t1.62.684l5.292 5.292 9.9-9.9q.684-.684 1.62-.684t1.62.684l3.672 3.672q.684.684.684 1.62t-.684 1.62zm5.076 2.988q0-5.328-2.628-9.828t-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828zm8.064 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","BAN":"M47.232-32.291q0-5.796-3.132-10.62l-27.144 27.108q4.932 3.204 10.692 3.204 3.996 0 7.614-1.566t6.246-4.194 4.176-6.282 1.548-7.65zm-35.964 10.764l27.18-27.144q-4.86-3.276-10.8-3.276-5.328 0-9.828 2.628t-7.128 7.164-2.628 9.864q0 5.832 3.204 10.764zm44.028-10.764q0 5.652-2.196 10.8t-5.886 8.856-8.82 5.904-10.746 2.196-10.746-2.196-8.82-5.904-5.886-8.856-2.196-10.8 2.196-10.782 5.886-8.838 8.82-5.904 10.746-2.196 10.746 2.196 8.82 5.904 5.886 8.838 2.196 10.782z","ARROW_LEFT":"M55.296-32.183v4.608q0 1.908-1.17 3.258t-3.042 1.35h-25.344l10.548 10.584q1.368 1.296 1.368 3.24t-1.368 3.24l-2.7 2.736q-1.332 1.332-3.24 1.332-1.872 0-3.276-1.332l-23.436-23.472q-1.332-1.332-1.332-3.24 0-1.872 1.332-3.276l23.436-23.4q1.368-1.368 3.276-1.368 1.872 0 3.24 1.368l2.7 2.664q1.368 1.368 1.368 3.276t-1.368 3.276l-10.548 10.548h25.344q1.872 0 3.042 1.35t1.17 3.258z","ARROW_RIGHT":"M52.992-29.879q0 1.944-1.332 3.276l-23.436 23.436q-1.404 1.332-3.276 1.332-1.836 0-3.24-1.332l-2.7-2.7q-1.368-1.368-1.368-3.276t1.368-3.276l10.548-10.548h-25.344q-1.872 0-3.042-1.35t-1.17-3.258v-4.608q0-1.908 1.17-3.258t3.042-1.35h25.344l-10.548-10.584q-1.368-1.296-1.368-3.24t1.368-3.24l2.7-2.7q1.368-1.368 3.24-1.368 1.908 0 3.276 1.368l23.436 23.436q1.332 1.26 1.332 3.24z","ARROW_UP":"M57.996-29.483q0 1.836-1.332 3.24l-2.7 2.7q-1.368 1.368-3.276 1.368-1.944 0-3.24-1.368l-10.584-10.548v25.344q0 1.872-1.35 3.042t-3.258 1.17h-4.608q-1.908 0-3.258-1.17t-1.35-3.042v-25.344l-10.584 10.548q-1.296 1.368-3.24 1.368t-3.24-1.368l-2.7-2.7q-1.368-1.368-1.368-3.24 0-1.908 1.368-3.276l23.436-23.436q1.26-1.332 3.24-1.332 1.944 0 3.276 1.332l23.436 23.436q1.332 1.404 1.332 3.276z","ARROW_DOWN":"M57.996-34.487q0 1.908-1.332 3.24l-23.436 23.472q-1.404 1.332-3.276 1.332-1.908 0-3.24-1.332l-23.436-23.472q-1.368-1.296-1.368-3.24 0-1.908 1.368-3.276l2.664-2.7q1.404-1.332 3.276-1.332 1.908 0 3.24 1.332l10.584 10.584v-25.344q0-1.872 1.368-3.24t3.24-1.368h4.608q1.872 0 3.24 1.368t1.368 3.24v25.344l10.584-10.584q1.332-1.332 3.24-1.332 1.872 0 3.276 1.332l2.7 2.7q1.332 1.404 1.332 3.276z","SHARE":"M64.512-41.399q0 .936-.684 1.62l-18.432 18.432q-.684.684-1.62.684t-1.62-.684-.684-1.62v-9.216h-8.064q-3.528 0-6.318.216t-5.544.774-4.788 1.53-3.798 2.502-2.88 3.636-1.746 4.986-.63 6.516q0 1.98.18 4.428 0 .216.09.846t.09.954q0 .54-.306.9t-.846.36q-.576 0-1.008-.612-.252-.324-.468-.792t-.486-1.08-.378-.864q-4.572-10.26-4.572-16.236 0-7.164 1.908-11.988 5.832-14.508 31.5-14.508h8.064v-9.216q0-.936.684-1.62t1.62-.684 1.62.684l18.432 18.432q.684.684.684 1.62z","EXPAND":"M27.18-26.423q0 .468-.36.828l-11.952 11.952 5.184 5.184q.684.684.684 1.62t-.684 1.62-1.62.684h-16.128q-.936 0-1.62-.684t-.684-1.62v-16.128q0-.936.684-1.62t1.62-.684 1.62.684l5.184 5.184 11.952-11.952q.36-.36.828-.36t.828.36l4.104 4.104q.36.36.36.828zm28.116-31.104v16.128q0 .936-.684 1.62t-1.62.684-1.62-.684l-5.184-5.184-11.952 11.952q-.36.36-.828.36t-.828-.36l-4.104-4.104q-.36-.36-.36-.828t.36-.828l11.952-11.952-5.184-5.184q-.684-.684-.684-1.62t.684-1.62 1.62-.684h16.128q.936 0 1.62.684t.684 1.62z","COMPRESS":"M27.648-29.879v16.128q0 .936-.684 1.62t-1.62.684-1.62-.684l-5.184-5.184-11.952 11.952q-.36.36-.828.36t-.828-.36l-4.104-4.104q-.36-.36-.36-.828t.36-.828l11.952-11.952-5.184-5.184q-.684-.684-.684-1.62t.684-1.62 1.62-.684h16.128q.936 0 1.62.684t.684 1.62zm27.18-24.192q0 .468-.36.828l-11.952 11.952 5.184 5.184q.684.684.684 1.62t-.684 1.62-1.62.684h-16.128q-.936 0-1.62-.684t-.684-1.62v-16.128q0-.936.684-1.62t1.62-.684 1.62.684l5.184 5.184 11.952-11.952q.36-.36.828-.36t.828.36l4.104 4.104q.36.36.36.828z","PLUS":"M50.688-37.943v6.912q0 1.44-1.008 2.448t-2.448 1.008h-14.976v14.976q0 1.44-1.008 2.448t-2.448 1.008h-6.912q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h14.976v-14.976q0-1.44 1.008-2.448t2.448-1.008h6.912q1.44 0 2.448 1.008t1.008 2.448v14.976h14.976q1.44 0 2.448 1.008t1.008 2.448z","MINUS":"M50.688-37.943v6.912q0 1.44-1.008 2.448t-2.448 1.008h-43.776q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h43.776q1.44 0 2.448 1.008t1.008 2.448z","ASTERISK":"M53.352-26.639q1.656.936 2.142 2.79t-.45 3.51l-2.304 3.96q-.936 1.656-2.79 2.142t-3.51-.45l-9.576-5.508v11.052q0 1.872-1.368 3.24t-3.24 1.368h-4.608q-1.872 0-3.24-1.368t-1.368-3.24v-11.052l-9.576 5.508q-1.656.936-3.51.45t-2.79-2.142l-2.304-3.96q-.936-1.656-.45-3.51t2.142-2.79l9.576-5.544-9.576-5.544q-1.656-.936-2.142-2.79t.45-3.51l2.304-3.96q.936-1.656 2.79-2.142t3.51.45l9.576 5.508v-11.052q0-1.872 1.368-3.24t3.24-1.368h4.608q1.872 0 3.24 1.368t1.368 3.24v11.052l9.576-5.508q1.656-.936 3.51-.45t2.79 2.142l2.304 3.96q.936 1.656.45 3.51t-2.142 2.79l-9.576 5.544z","EXCLAMATION_CIRCLE":"M27.648-59.831q7.524 0 13.878 3.708t10.062 10.062 3.708 13.878-3.708 13.878-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708zm4.608 44.892v-6.84q0-.504-.324-.846t-.792-.342h-6.912q-.468 0-.828.36t-.36.828v6.84q0 .468.36.828t.828.36h6.912q.468 0 .792-.342t.324-.846zm-.072-12.384l.648-22.356q0-.432-.36-.648-.36-.288-.864-.288h-7.92q-.504 0-.864.288-.36.216-.36.648l.612 22.356q0 .36.36.63t.864.27h6.66q.504 0 .846-.27t.378-.63z","GIFT":"M33.408-15.623v-25.775999999999996h-11.52v25.775999999999996q0 .9.648 1.386t1.656.486h6.912q1.008 0 1.656-.486t.648-1.386zm-16.416-30.384h7.02l-4.536-5.796q-.936-1.116-2.484-1.116-1.44 0-2.448 1.008t-1.008 2.448 1.008 2.448 2.448 1.008zm24.768-3.456q0-1.44-1.008-2.448t-2.448-1.008q-1.548 0-2.484 1.116l-4.5 5.796h6.984q1.44 0 2.448-1.008t1.008-2.448zm13.536 9.216v11.52q0 .504-.324.828t-.828.324h-3.456v14.976q0 1.44-1.008 2.448t-2.448 1.008h-39.168q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-3.456q-.504 0-.828-.324t-.324-.828v-11.52q0-.504.324-.828t.828-.324h15.84q-3.348 0-5.706-2.358t-2.358-5.706 2.358-5.706 5.706-2.358q3.852 0 6.048 2.772l4.608 5.94 4.608-5.94q2.196-2.772 6.048-2.772 3.348 0 5.706 2.358t2.358 5.706-2.358 5.706-5.706 2.358h15.84q.504 0 .828.324t.324.828z","LEAF":"M46.08-39.095q0-.936-.684-1.62t-1.62-.684q-6.192 0-11.448 1.782t-9.342 4.824-8.478 7.902q-.684.756-.684 1.62 0 .936.684 1.62t1.62.684q.864 0 1.62-.684.972-.864 2.664-2.556t2.412-2.376q4.932-4.464 9.666-6.336t11.286-1.872q.936 0 1.62-.684t.684-1.62zm18.432-7.128q0 3.42-.72 6.948-1.656 8.064-6.642 13.788t-12.87 9.648q-7.704 3.888-15.768 3.888-5.328 0-10.296-1.692-.54-.18-3.168-1.512t-3.456-1.332q-.576 0-1.422 1.152t-1.62 2.52-1.89 2.52-2.16 1.152q-1.08 0-1.836-.396t-1.116-.864-.972-1.512l-.216-.396-.198-.36-.108-.342-.054-.486q0-1.26 1.116-2.646t2.448-2.358 2.448-2.016 1.116-1.728q0-.144-.504-1.368t-.576-1.584q-.324-1.836-.324-3.744 0-4.14 1.566-7.92t4.284-6.642 6.138-5.004 7.344-3.438q1.98-.648 5.22-.918t6.462-.324 6.426-.216 5.886-.864 4.086-2.034l1.062-1.062 1.062-1.008.972-.72 1.314-.576 1.566-.162q1.404 0 2.538 1.656t1.71 4.032.864 4.464.288 3.456z","FIRE":"M50.688-3.383v2.304q0 .468-.342.81t-.81.342h-48.384q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h48.384q.468 0 .81.342t.342.81zm-9.216-38.016q0 2.808-.882 5.184t-2.304 4.05-3.15 3.168-3.456 2.79-3.15 2.592-2.304 2.934-.882 3.474q0 3.456 2.412 8.064l-.144-.036.036.036q-3.24-1.476-5.76-2.988t-4.986-3.6-4.086-4.41-2.61-5.418-.99-6.624q0-2.808.882-5.184t2.304-4.05 3.15-3.168 3.456-2.79 3.15-2.592 2.304-2.934.882-3.474q0-3.384-2.376-8.064l.108.036-.036-.036q3.24 1.476 5.76 2.988t4.986 3.6 4.086 4.41 2.61 5.418.99 6.624z","EYE":"M59.904-29.879q-5.472-8.496-13.716-12.708 2.196 3.744 2.196 8.1 0 6.66-4.734 11.394t-11.394 4.734-11.394-4.734-4.734-11.394q0-4.356 2.196-8.1-8.244 4.212-13.716 12.708 4.788 7.38 12.006 11.754t15.642 4.374 15.642-4.374 12.006-11.754zm-25.92-13.824q0-.72-.504-1.224t-1.224-.504q-4.5 0-7.722 3.222t-3.222 7.722q0 .72.504 1.224t1.224.504 1.224-.504.504-1.224q0-3.096 2.196-5.292t5.292-2.196q.72 0 1.224-.504t.504-1.224zm30.528 13.824q0 1.224-.72 2.484-5.04 8.28-13.554 13.266t-17.982 4.986-17.982-5.004-13.554-13.248q-.72-1.26-.72-2.484t.72-2.484q5.04-8.244 13.554-13.248t17.982-5.004 17.982 5.004 13.554 13.248q.72 1.26.72 2.484z","EYE_SLASH":"M19.98-16.379l2.808-5.076q-3.132-2.268-4.896-5.724t-1.764-7.308q0-4.356 2.196-8.1-8.244 4.212-13.716 12.708 6.012 9.288 15.372 13.5zm14.004-27.324q0-.72-.504-1.224t-1.224-.504q-4.5 0-7.722 3.222t-3.222 7.722q0 .72.504 1.224t1.224.504 1.224-.504.504-1.224q0-3.096 2.196-5.292t5.292-2.196q.72 0 1.224-.504t.504-1.224zm13.068-6.876q0 .252-.036.324-3.78 6.768-11.34 20.376t-11.376 20.412l-1.764 3.204q-.36.576-1.008.576-.432 0-4.824-2.52-.576-.36-.576-1.008 0-.432 1.584-3.132-5.148-2.34-9.486-6.228t-7.506-8.82q-.72-1.116-.72-2.484t.72-2.484q5.508-8.46 13.68-13.356t17.856-4.896q3.204 0 6.48.612l1.944-3.492q.36-.576 1.008-.576.18 0 .648.216t1.116.558 1.188.666 1.134.666.702.414q.576.36.576.972zm1.332 16.092q0 5.004-2.844 9.126t-7.524 5.922l10.08-18.072q.288 1.62.288 3.024zm16.128 4.608q0 1.26-.72 2.484-1.404 2.304-3.924 5.22-5.4 6.192-12.51 9.612t-15.102 3.42l2.664-4.752q7.632-.648 14.13-4.932t10.854-11.052q-4.14-6.444-10.152-10.584l2.268-4.032q3.42 2.304 6.57 5.508t5.202 6.624q.72 1.224.72 2.484z","WARNING":"M36.864-14.939v-6.84q0-.504-.342-.846t-.81-.342h-6.912q-.468 0-.81.342t-.342.846v6.84q0 .504.342.846t.81.342h6.912q.468 0 .81-.342t.342-.846zm-.072-13.464l.648-16.524q0-.432-.36-.684-.468-.396-.864-.396h-7.92q-.396 0-.864.396-.36.252-.36.756l.612 16.452q0 .36.36.594t.864.234h6.66q.504 0 .846-.234t.378-.594zm-.504-33.624l27.648 50.688q1.26 2.268-.072 4.536-.612 1.044-1.674 1.656t-2.286.612h-55.296q-1.224 0-2.286-.612t-1.674-1.656q-1.332-2.268-.072-4.536l27.648-50.688q.612-1.116 1.692-1.764t2.34-.648 2.34.648 1.692 1.764z","PLANE":"M49.536-58.679q1.584 1.872.432 5.328t-3.888 6.192l-5.796 5.796 5.76 25.056q.18.684-.432 1.188l-4.608 3.456q-.252.216-.684.216-.144 0-.252-.036-.54-.108-.756-.576l-10.044-18.288-9.324 9.324 1.908 6.984q.18.612-.288 1.116l-3.456 3.456q-.324.324-.828.324h-.072q-.54-.072-.864-.468l-6.804-9.072-9.072-6.804q-.396-.252-.468-.828-.036-.468.324-.9l3.456-3.492q.324-.324.828-.324.216 0 .288.036l6.984 1.908 9.324-9.324-18.288-10.044q-.504-.288-.612-.864-.072-.576.324-.972l4.608-4.608q.504-.468 1.08-.288l23.94 5.724 5.76-5.76q2.736-2.736 6.192-3.888t5.328.432z","CALENDAR":"M4.608-4.535h10.368v-10.368h-10.368v10.368zm12.672 0h11.52v-10.368h-11.52v10.368zm-12.672-12.672h10.368v-11.52h-10.368v11.52zm12.672 0h11.52v-11.52h-11.52v11.52zm-12.672-13.824h10.368v-10.368h-10.368v10.368zm26.496 26.496h11.52v-10.368h-11.52v10.368zm-13.824-26.496h11.52v-10.368h-11.52v10.368zm27.648 26.496h10.368v-10.368h-10.368v10.368zm-13.824-12.672h11.52v-11.52h-11.52v11.52zm-12.672-31.104v-10.368q0-.468-.342-.81t-.81-.342h-2.304q-.468 0-.81.342t-.342.81v10.368q0 .468.342.81t.81.342h2.304q.468 0 .81-.342t.342-.81zm26.496 31.104h10.368v-11.52h-10.368v11.52zm-13.824-13.824h11.52v-10.368h-11.52v10.368zm13.824 0h10.368v-10.368h-10.368v10.368zm1.152-17.28v-10.368q0-.468-.342-.81t-.81-.342h-2.304q-.468 0-.81.342t-.342.81v10.368q0 .468.342.81t.81.342h2.304q.468 0 .81-.342t.342-.81zm13.824-2.304v46.08q0 1.872-1.368 3.24t-3.24 1.368h-50.688q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h4.608v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h13.824v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h4.608q1.872 0 3.24 1.368t1.368 3.24z","RANDOM":"M23.976-47.123q-2.16 3.312-4.932 9.828-.792-1.62-1.332-2.61t-1.458-2.286-1.836-2.034-2.268-1.26-2.934-.522h-8.064q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h8.064q9 0 14.76 8.1zm40.536 28.764q0 .504-.324.828l-11.52 11.52q-.324.324-.828.324-.468 0-.81-.342t-.342-.81v-6.912q-1.152 0-3.06.018t-2.916.036-2.628-.036-2.556-.18-2.304-.378-2.268-.666-2.088-1.026-2.124-1.44-1.98-1.926-2.016-2.502q2.124-3.348 4.896-9.828.792 1.62 1.332 2.61t1.458 2.286 1.836 2.034 2.268 1.26 2.934.522h9.216v-6.912q0-.504.324-.828t.828-.324q.432 0 .864.36l11.484 11.484q.324.324.324.828zm0-32.256q0 .504-.324.828l-11.52 11.52q-.324.324-.828.324-.468 0-.81-.342t-.342-.81v-6.912h-9.216q-1.728 0-3.132.54t-2.484 1.62-1.836 2.214-1.62 2.79q-1.152 2.232-2.808 6.156-1.044 2.376-1.782 3.996t-1.944 3.78-2.304 3.6-2.664 2.988-3.24 2.466-3.834 1.512-4.608.594h-8.064q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h8.064q1.728 0 3.132-.54t2.484-1.62 1.836-2.214 1.62-2.79q1.152-2.232 2.808-6.156 1.044-2.376 1.782-3.996t1.944-3.78 2.304-3.6 2.664-2.988 3.24-2.466 3.834-1.512 4.608-.594h9.216v-6.912q0-.504.324-.828t.828-.324q.432 0 .864.36l11.484 11.484q.324.324.324.828z","COMMENT":"M64.512-32.183q0 6.264-4.32 11.574t-11.736 8.388-16.2 3.078q-2.52 0-5.22-.288-7.128 6.3-16.56 8.712-1.764.504-4.104.792-.612.072-1.098-.324t-.63-1.044v-.036q-.108-.144-.018-.432t.072-.36.162-.342l.216-.324.252-.306.288-.324q.252-.288 1.116-1.242t1.242-1.368 1.116-1.422 1.17-1.836.972-2.124.936-2.736q-5.652-3.204-8.91-7.92t-3.258-10.116q0-4.68 2.556-8.946t6.876-7.362 10.296-4.914 12.528-1.818q8.784 0 16.2 3.078t11.736 8.388 4.32 11.574z","MAGNET":"M55.296-34.487v4.608q0 7.236-3.546 13.032t-9.864 9.054-14.238 3.258-14.238-3.258-9.864-9.054-3.546-13.032v-4.608q0-.936.684-1.62t1.62-.684h13.824q.936 0 1.62.684t.684 1.62v4.608q0 1.872.846 3.24t1.926 2.052 2.556 1.08 2.304.468 1.584.072 1.584-.072 2.304-.468 2.556-1.08 1.926-2.052.846-3.24v-4.608q0-.936.684-1.62t1.62-.684h13.824q.936 0 1.62.684t.684 1.62zm-36.864-23.04v13.824q0 .936-.684 1.62t-1.62.684h-13.824q-.936 0-1.62-.684t-.684-1.62v-13.824q0-.936.684-1.62t1.62-.684h13.824q.936 0 1.62.684t.684 1.62zm36.864 0v13.824q0 .936-.684 1.62t-1.62.684h-13.824q-.936 0-1.62-.684t-.684-1.62v-13.824q0-.936.684-1.62t1.62-.684h13.824q.936 0 1.62.684t.684 1.62z","CHEVRON_UP":"M60.588-16.523l-5.976 5.94q-.684.684-1.62.684t-1.62-.684l-19.116-19.116-19.116 19.116q-.684.684-1.62.684t-1.62-.684l-5.976-5.94q-.684-.684-.684-1.638t.684-1.638l26.712-26.676q.684-.684 1.62-.684t1.62.684l26.712 26.676q.684.684.684 1.638t-.684 1.638z","CHEVRON_DOWN":"M60.588-35.351l-26.712 26.676q-.684.684-1.62.684t-1.62-.684l-26.712-26.676q-.684-.684-.684-1.638t.684-1.638l5.976-5.94q.684-.684 1.62-.684t1.62.684l19.116 19.116 19.116-19.116q.684-.684 1.62-.684t1.62.684l5.976 5.94q.684.684.684 1.638t-.684 1.638z","RETWEET":"M46.08-10.295q0 .468-.342.81t-.81.342h-34.56q-.288 0-.486-.072t-.324-.252-.198-.288-.108-.414-.036-.414v-21.6h-6.912q-.936 0-1.62-.684t-.684-1.62q0-.864.54-1.476l11.52-13.824q.684-.792 1.764-.792t1.764.792l11.52 13.824q.54.612.54 1.476 0 .936-.684 1.62t-1.62.684h-6.912v13.824h20.736q.576 0 .9.396l5.76 6.912q.252.396.252.756zm23.04-14.976q0 .864-.54 1.476l-11.52 13.824q-.72.828-1.764.828t-1.764-.828l-11.52-13.824q-.54-.612-.54-1.476 0-.936.684-1.62t1.62-.684h6.912v-13.824h-20.736q-.576 0-.9-.432l-5.76-6.912q-.252-.324-.252-.72 0-.468.342-.81t.81-.342h34.56q.288 0 .486.072t.324.252.198.288.108.414.036.414v21.6h6.912q.936 0 1.62.684t.684 1.62z","SHOPPING_CART":"M23.04-9.143q0 1.872-1.368 3.24t-3.24 1.368-3.24-1.368-1.368-3.24 1.368-3.24 3.24-1.368 3.24 1.368 1.368 3.24zm32.256 0q0 1.872-1.368 3.24t-3.24 1.368-3.24-1.368-1.368-3.24 1.368-3.24 3.24-1.368 3.24 1.368 1.368 3.24zm4.608-39.168v18.432q0 .864-.594 1.53t-1.458.774l-37.584 4.392q.468 2.16.468 2.52 0 .576-.864 2.304h33.12q.936 0 1.62.684t.684 1.62-.684 1.62-1.62.684h-36.864q-.936 0-1.62-.684t-.684-1.62q0-.396.288-1.134t.576-1.296.774-1.44.558-1.062l-6.372-29.628h-7.344q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h9.216q.576 0 1.026.234t.702.558.468.882.288.936.198 1.062.162.936h43.236q.936 0 1.62.684t.684 1.62z","FOLDER":"M59.904-42.551v25.344q0 3.312-2.376 5.688t-5.688 2.376h-43.776q-3.312 0-5.688-2.376t-2.376-5.688v-34.56q0-3.312 2.376-5.688t5.688-2.376h11.52q3.312 0 5.688 2.376t2.376 5.688v1.152h24.192q3.312 0 5.688 2.376t2.376 5.688z","FOLDER_OPEN":"M67.644-30.167q0 1.116-1.116 2.376l-12.096 14.256q-1.548 1.836-4.338 3.114t-5.166 1.278h-39.168q-1.224 0-2.178-.468t-.954-1.548q0-1.116 1.116-2.376l12.096-14.256q1.548-1.836 4.338-3.114t5.166-1.278h39.168q1.224 0 2.178.468t.954 1.548zm-12.348-12.384v5.76h-29.952q-3.384 0-7.092 1.71t-5.904 4.302l-12.132 14.256-.18.216-.018-.45-.018-.45v-34.56q0-3.312 2.376-5.688t5.688-2.376h11.52q3.312 0 5.688 2.376t2.376 5.688v1.152h19.584q3.312 0 5.688 2.376t2.376 5.688z","ARROWS_V":"M25.344-52.919q0 .936-.684 1.62t-1.62.684h-4.608v36.864h4.608q.936 0 1.62.684t.684 1.62-.684 1.62l-9.216 9.216q-.684.684-1.62.684t-1.62-.684l-9.216-9.216q-.684-.684-.684-1.62t.684-1.62 1.62-.684h4.608v-36.864h-4.608q-.936 0-1.62-.684t-.684-1.62.684-1.62l9.216-9.216q.684-.684 1.62-.684t1.62.684l9.216 9.216q.684.684.684 1.62z","ARROWS_H":"M64.512-32.183q0 .936-.684 1.62l-9.216 9.216q-.684.684-1.62.684t-1.62-.684-.684-1.62v-4.608h-36.864v4.608q0 .936-.684 1.62t-1.62.684-1.62-.684l-9.216-9.216q-.684-.684-.684-1.62t.684-1.62l9.216-9.216q.684-.684 1.62-.684t1.62.684.684 1.62v4.608h36.864v-4.608q0-.936.684-1.62t1.62-.684 1.62.684l9.216 9.216q.684.684.684 1.62z","BAR_CHART_O":"M23.04-32.183v18.432h-9.216v-18.432h9.216zm13.824-18.432v36.864h-9.216v-36.864h9.216zm36.864 41.472v4.608h-73.728v-55.296h4.608v50.688h69.12zm-23.04-32.256v27.648h-9.216v-27.648h9.216zm13.824-13.824v41.472h-9.216v-41.472h9.216z","TWITTER_SQUARE":"M46.08-42.479q-2.016.9-4.356 1.224 2.448-1.44 3.348-4.212-2.34 1.368-4.824 1.836-2.196-2.376-5.508-2.376-3.132 0-5.346 2.214t-2.214 5.346q0 1.044.18 1.728-4.644-.252-8.712-2.34t-6.912-5.58q-1.044 1.8-1.044 3.816 0 4.104 3.276 6.3-1.692-.036-3.6-.936v.072q0 2.7 1.8 4.806t4.428 2.61q-1.044.288-1.836.288-.468 0-1.404-.144.756 2.268 2.682 3.744t4.374 1.512q-4.176 3.24-9.396 3.24-.936 0-1.8-.108 5.328 3.384 11.592 3.384 4.032 0 7.56-1.278t6.048-3.42 4.338-4.932 2.7-5.832.882-6.066q0-.648-.036-.972 2.268-1.62 3.78-3.924zm9.216-6.984v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","FACEBOOK_SQUARE":"M44.928-59.831q4.284 0 7.326 3.042t3.042 7.326v34.56q0 4.284-3.042 7.326t-7.326 3.042h-6.768v-21.42h7.164l1.08-8.352h-8.244v-5.328q0-2.016.846-3.024t3.294-1.008l4.392-.036v-7.452q-2.268-.324-6.408-.324-4.896 0-7.83 2.88t-2.934 8.136v6.156h-7.2v8.352h7.2v21.42h-19.152q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56z","CAMERA_RETRO":"M33.408-34.487q0-.504-.324-.828t-.828-.324q-2.376 0-4.068 1.692t-1.692 4.068q0 .504.324.828t.828.324.828-.324.324-.828q0-1.44 1.008-2.448t2.448-1.008q.504 0 .828-.324t.324-.828zm8.064 4.68q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516 2.7-6.516 6.516-2.7 6.516 2.7 2.7 6.516zm-36.864 20.664h55.296v-4.608h-55.296v4.608zm41.472-20.664q0-5.724-4.05-9.774t-9.774-4.05-9.774 4.05-4.05 9.774 4.05 9.774 9.774 4.05 9.774-4.05 4.05-9.774zm-36.864-23.112h13.824v-4.608h-13.824v4.608zm-4.608 6.912h55.296v-9.216000000000001h-29.808l-2.304 4.608h-23.184v4.608zm59.904-9.216v46.08q0 1.908-1.35 3.258t-3.258 1.35h-55.296q-1.908 0-3.258-1.35t-1.35-3.258v-46.08q0-1.908 1.35-3.258t3.258-1.35h55.296q1.908 0 3.258 1.35t1.35 3.258z","KEY":"M29.952-46.007q0-2.88-2.016-4.896t-4.896-2.016-4.896 2.016-2.016 4.896q0 1.512.684 2.988-1.476-.684-2.988-.684-2.88 0-4.896 2.016t-2.016 4.896 2.016 4.896 4.896 2.016 4.896-2.016 2.016-4.896q0-1.512-.684-2.988 1.476.684 2.988.684 2.88 0 4.896-2.016t2.016-4.896zm30.636 25.344q0 .612-1.764 2.376t-2.376 1.764q-.324 0-1.026-.576t-1.314-1.188-1.386-1.44-.882-.936l-3.456 3.456 7.92 7.92q1.008 1.008 1.008 2.448 0 1.512-1.404 2.916t-2.916 1.404q-1.44 0-2.448-1.008l-24.156-24.156q-6.336 4.716-13.14 4.716-5.868 0-9.558-3.69t-3.69-9.558q0-5.76 3.42-11.268t8.928-8.928 11.268-3.42q5.868 0 9.558 3.69t3.69 9.558q0 6.804-4.716 13.14l12.78 12.78 3.456-3.456q-.108-.108-.936-.882t-1.44-1.386-1.188-1.314-.576-1.026q0-.612 1.764-2.376t2.376-1.764q.468 0 .828.36.216.216 1.656 1.602t2.952 2.862 3.114 3.096 2.628 2.808 1.026 1.476z","GEARS":"M32.256-32.183q0-3.816-2.7-6.516t-6.516-2.7-6.516 2.7-2.7 6.516 2.7 6.516 6.516 2.7 6.516-2.7 2.7-6.516zm27.648 18.432q0-1.872-1.368-3.24t-3.24-1.368-3.24 1.368-1.368 3.24q0 1.908 1.35 3.258t3.258 1.35 3.258-1.35 1.35-3.258zm0-36.864q0-1.872-1.368-3.24t-3.24-1.368-3.24 1.368-1.368 3.24q0 1.908 1.35 3.258t3.258 1.35 3.258-1.35 1.35-3.258zm-13.824 15.156v6.66q0 .36-.252.702t-.576.378l-5.58.864q-.396 1.26-1.152 2.736 1.224 1.728 3.24 4.14.252.36.252.72 0 .432-.252.684-.828 1.08-2.97 3.222t-2.826 2.142q-.396 0-.756-.252l-4.14-3.24q-1.332.684-2.772 1.116-.396 3.888-.828 5.58-.252.864-1.08.864h-6.696q-.396 0-.72-.27t-.36-.63l-.828-5.508q-1.224-.36-2.7-1.116l-4.248 3.204q-.252.252-.72.252-.396 0-.756-.288-5.184-4.788-5.184-5.76 0-.324.252-.684.36-.504 1.476-1.908t1.692-2.196q-.828-1.584-1.26-2.952l-5.472-.864q-.36-.036-.612-.342t-.252-.702v-6.66q0-.36.252-.702t.576-.378l5.58-.864q.396-1.26 1.152-2.736-1.224-1.728-3.24-4.14-.252-.396-.252-.72 0-.432.252-.72.792-1.08 2.952-3.204t2.844-2.124q.396 0 .756.252l4.14 3.24q1.224-.648 2.772-1.152.396-3.888.828-5.544.252-.864 1.08-.864h6.696q.396 0 .72.27t.36.63l.828 5.508q1.224.36 2.7 1.116l4.248-3.204q.288-.252.72-.252.396 0 .756.288 5.184 4.788 5.184 5.76 0 .324-.252.684-.432.576-1.512 1.944t-1.62 2.16q.828 1.728 1.224 2.952l5.472.828q.36.072.612.378t.252.702zm23.04 19.188v5.04q0 .576-5.364 1.116-.432.972-1.08 1.872 1.836 4.068 1.836 4.968 0 .144-.144.252-4.392 2.556-4.464 2.556-.288 0-1.656-1.692t-1.872-2.448q-.72.072-1.08.072t-1.08-.072q-.504.756-1.872 2.448t-1.656 1.692q-.072 0-4.464-2.556-.144-.108-.144-.252 0-.9 1.836-4.968-.648-.9-1.08-1.872-5.364-.54-5.364-1.116v-5.04q0-.576 5.364-1.116.468-1.044 1.08-1.872-1.836-4.068-1.836-4.968 0-.144.144-.252.144-.072 1.26-.72t2.124-1.224 1.08-.576q.288 0 1.656 1.674t1.872 2.43q.72-.072 1.08-.072t1.08.072q1.836-2.556 3.312-4.032l.216-.072q.144 0 4.464 2.52.144.108.144.252 0 .9-1.836 4.968.612.828 1.08 1.872 5.364.54 5.364 1.116zm0-36.864v5.04q0 .576-5.364 1.116-.432.972-1.08 1.872 1.836 4.068 1.836 4.968 0 .144-.144.252-4.392 2.556-4.464 2.556-.288 0-1.656-1.692t-1.872-2.448q-.72.072-1.08.072t-1.08-.072q-.504.756-1.872 2.448t-1.656 1.692q-.072 0-4.464-2.556-.144-.108-.144-.252 0-.9 1.836-4.968-.648-.9-1.08-1.872-5.364-.54-5.364-1.116v-5.04q0-.576 5.364-1.116.468-1.044 1.08-1.872-1.836-4.068-1.836-4.968 0-.144.144-.252.144-.072 1.26-.72t2.124-1.224 1.08-.576q.288 0 1.656 1.674t1.872 2.43q.72-.072 1.08-.072t1.08.072q1.836-2.556 3.312-4.032l.216-.072q.144 0 4.464 2.52.144.108.144.252 0 .9-1.836 4.968.612.828 1.08 1.872 5.364.54 5.364 1.116z","COMMENTS":"M50.688-36.791q0 5.004-3.384 9.252t-9.234 6.714-12.726 2.466q-3.096 0-6.336-.576-4.464 3.168-10.008 4.608-1.296.324-3.096.576h-.108q-.396 0-.738-.288t-.414-.756q-.036-.108-.036-.234t.018-.234.072-.216l.09-.18.126-.198.144-.18.162-.18.144-.162q.18-.216.828-.9t.936-1.062.81-1.044.9-1.386.738-1.584q-4.464-2.592-7.02-6.372t-2.556-8.064q0-5.004 3.384-9.252t9.234-6.714 12.726-2.466 12.726 2.466 9.234 6.714 3.384 9.252zm13.824 9.216q0 4.32-2.556 8.082t-7.02 6.354q.36.864.738 1.584t.9 1.386.81 1.044.936 1.062.828.9l.144.162.162.18.144.18.126.198.09.18.072.216.018.234-.036.234q-.108.504-.468.792t-.792.252q-1.8-.252-3.096-.576-5.544-1.44-10.008-4.608-3.24.576-6.336.576-9.756 0-16.992-4.752 2.088.144 3.168.144 5.796 0 11.124-1.62t9.504-4.644q4.5-3.312 6.912-7.632t2.412-9.144q0-2.772-.828-5.472 4.644 2.556 7.344 6.408t2.7 8.28z","THUMBS_O_UP":"M9.216-16.055q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm41.472-20.736q0-1.836-1.404-3.222t-3.204-1.386h-12.672q0-2.088 1.728-5.742t1.728-5.778q0-3.528-1.152-5.22t-4.608-1.692q-.936.936-1.368 3.06t-1.098 4.518-2.142 3.942q-.792.828-2.772 3.276-.144.18-.828 1.08t-1.134 1.476-1.242 1.53-1.44 1.584-1.386 1.278-1.44.972-1.278.324h-1.152v23.04h1.152q.468 0 1.134.108t1.188.234 1.368.396 1.26.414 1.278.45 1.044.378q7.596 2.628 12.312 2.628h4.356q6.912 0 6.912-6.012 0-.936-.18-2.016 1.08-.576 1.71-1.89t.63-2.646-.648-2.484q1.908-1.8 1.908-4.284 0-.9-.36-1.998t-.9-1.71q1.152-.036 1.926-1.692t.774-2.916zm4.608-.036q0 3.204-1.764 5.868.324 1.188.324 2.484 0 2.772-1.368 5.184.108.756.108 1.548 0 3.636-2.16 6.408.036 5.004-3.06 7.902t-8.172 2.898h-4.644q-3.456 0-6.822-.81t-7.794-2.358q-4.176-1.44-4.968-1.44h-10.368q-1.908 0-3.258-1.35t-1.35-3.258v-23.04q0-1.908 1.35-3.258t3.258-1.35h9.864q1.296-.864 4.932-5.58 2.088-2.7 3.852-4.608.864-.9 1.278-3.078t1.098-4.554 2.232-3.888q1.404-1.332 3.24-1.332 3.024 0 5.436 1.17t3.672 3.654 1.26 6.696q0 3.348-1.728 6.912h6.336q3.744 0 6.48 2.736t2.736 6.444z","THUMBS_O_DOWN":"M9.216-48.311q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm41.472 20.736q0-1.26-.774-2.916t-1.926-1.692q.54-.612.9-1.71t.36-1.998q0-2.484-1.908-4.284.648-1.152.648-2.484t-.63-2.646-1.71-1.89q.18-1.08.18-2.016 0-3.06-1.764-4.536t-4.896-1.476h-4.608q-4.716 0-12.312 2.628-.18.072-1.044.378t-1.278.45-1.26.414-1.368.396-1.188.234-1.134.108h-1.152v23.04h1.152q.576 0 1.278.324t1.44.972 1.386 1.278 1.44 1.584 1.242 1.53 1.134 1.476.828 1.08q1.98 2.448 2.772 3.276 1.476 1.548 2.142 3.942t1.098 4.518 1.368 3.06q3.456 0 4.608-1.692t1.152-5.22q0-2.124-1.728-5.778t-1.728-5.742h12.672q1.8 0 3.204-1.386t1.404-3.222zm4.608.036q0 3.708-2.736 6.444t-6.48 2.736h-6.336q1.728 3.564 1.728 6.912 0 4.248-1.26 6.696-1.26 2.484-3.672 3.654t-5.436 1.17q-1.836 0-3.24-1.332-1.224-1.188-1.944-2.952t-.918-3.258-.63-3.042-1.116-2.304q-1.728-1.8-3.852-4.572-3.636-4.716-4.932-5.58h-9.864q-1.908 0-3.258-1.35t-1.35-3.258v-23.04q0-1.908 1.35-3.258t3.258-1.35h10.368q.792 0 4.968-1.44 4.608-1.584 8.028-2.376t7.2-.792h4.032q5.04 0 8.154 2.844t3.078 7.776v.18q2.16 2.772 2.16 6.408 0 .792-.108 1.548 1.368 2.412 1.368 5.184 0 1.296-.324 2.484 1.764 2.664 1.764 5.868z","STAR_HALF":"M29.952-63.287v48.204l-16.164 8.496q-.792.432-1.44.432-.756 0-1.134-.522t-.378-1.278q0-.216.072-.72l3.096-18-13.104-12.744q-.9-.972-.9-1.728 0-1.332 2.016-1.656l18.072-2.628 8.1-16.38q.684-1.476 1.764-1.476z","HEART_O":"M59.904-42.983q0-2.916-.774-5.148t-1.98-3.546-2.934-2.142-3.384-1.116-3.528-.288-4.032.918-3.978 2.304-3.114 2.592-2.16 2.214q-.648.792-1.764.792t-1.764-.792q-.864-1.008-2.16-2.214t-3.114-2.592-3.978-2.304-4.032-.918-3.528.288-3.384 1.116-2.934 2.142-1.98 3.546-.774 5.148q0 6.048 6.732 12.78l20.916 20.16 20.88-20.124q6.768-6.768 6.768-12.816zm4.608 0q0 7.956-8.244 16.2l-22.428 21.6q-.648.648-1.584.648t-1.584-.648l-22.464-21.672q-.36-.288-.99-.936t-1.998-2.358-2.448-3.51-1.926-4.356-.846-4.968q0-7.92 4.572-12.384t12.636-4.464q2.232 0 4.554.774t4.32 2.088 3.438 2.466 2.736 2.448q1.296-1.296 2.736-2.448t3.438-2.466 4.32-2.088 4.554-.774q8.064 0 12.636 4.464t4.572 12.384z","SIGN_OUT":"M23.04-12.599q0 .144.036.72t.018.954-.108.846-.36.702-.738.234h-11.52q-4.284 0-7.326-3.042t-3.042-7.326v-25.344q0-4.284 3.042-7.326t7.326-3.042h11.52q.468 0 .81.342t.342.81q0 .144.036.72t.018.954-.108.846-.36.702-.738.234h-11.52q-2.376 0-4.068 1.692t-1.692 4.068v25.344q0 2.376 1.692 4.068t4.068 1.692h11.232000000000001l.414.036.414.108.288.198.252.324.072.486zm33.408-19.584q0 .936-.684 1.62l-19.584 19.584q-.684.684-1.62.684t-1.62-.684-.684-1.62v-10.368h-16.128q-.936 0-1.62-.684t-.684-1.62v-13.824q0-.936.684-1.62t1.62-.684h16.128v-10.368q0-.936.684-1.62t1.62-.684 1.62.684l19.584 19.584q.684.684.684 1.62z","LINKEDIN_SQUARE":"M8.532-13.535h8.316v-24.984h-8.316v24.984zm8.856-32.688q-.036-1.872-1.296-3.096t-3.348-1.224-3.402 1.224-1.314 3.096q0 1.836 1.278 3.078t3.33 1.242h.036q2.124 0 3.42-1.242t1.296-3.078zm21.06 32.688h8.316v-14.328q0-5.544-2.628-8.388t-6.948-2.844q-4.896 0-7.524 4.212h.072v-3.636h-8.316q.108 2.376 0 24.984h8.316v-13.968q0-1.368.252-2.016.54-1.26 1.62-2.142t2.664-.882q4.176 0 4.176 5.652v13.356zm16.848-35.928v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","THUMB_TACK":"M17.28-33.335v-16.128q0-.504-.324-.828t-.828-.324-.828.324-.324.828v16.128q0 .504.324.828t.828.324.828-.324.324-.828zm24.192 12.672q0 .936-.684 1.62t-1.62.684h-15.444l-1.836 17.388q-.072.432-.378.738t-.738.306h-.036q-.972 0-1.152-.972l-2.736-17.46h-14.544q-.936 0-1.62-.684t-.684-1.62q0-4.428 2.826-7.974t6.39-3.546v-18.432q-1.872 0-3.24-1.368t-1.368-3.24 1.368-3.24 3.24-1.368h23.04q1.872 0 3.24 1.368t1.368 3.24-1.368 3.24-3.24 1.368v18.432q3.564 0 6.39 3.546t2.826 7.974z","EXTERNAL_LINK":"M50.688-31.031v11.52q0 4.284-3.042 7.326t-7.326 3.042h-29.952q-4.284 0-7.326-3.042t-3.042-7.326v-29.952q0-4.284 3.042-7.326t7.326-3.042h25.344q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-25.344q-2.376 0-4.068 1.692t-1.692 4.068v29.952q0 2.376 1.692 4.068t4.068 1.692h29.952q2.376 0 4.068-1.692t1.692-4.068v-11.52q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828zm13.824-31.104v18.432q0 .936-.684 1.62t-1.62.684-1.62-.684l-6.336-6.336-23.472 23.472q-.36.36-.828.36t-.828-.36l-4.104-4.104q-.36-.36-.36-.828t.36-.828l23.472-23.472-6.336-6.336q-.684-.684-.684-1.62t.684-1.62 1.62-.684h18.432q.936 0 1.62.684t.684 1.62z","SIGN_IN":"M42.624-32.183q0 .936-.684 1.62l-19.584 19.584q-.684.684-1.62.684t-1.62-.684-.684-1.62v-10.368h-16.128q-.936 0-1.62-.684t-.684-1.62v-13.824q0-.936.684-1.62t1.62-.684h16.128v-10.368q0-.936.684-1.62t1.62-.684 1.62.684l19.584 19.584q.684.684.684 1.62zm12.672-12.672v25.344q0 4.284-3.042 7.326t-7.326 3.042h-11.52q-.468 0-.81-.342t-.342-.81q0-.144-.036-.72t-.018-.954.108-.846.36-.702.738-.234h11.52q2.376 0 4.068-1.692t1.692-4.068v-25.344q0-2.376-1.692-4.068t-4.068-1.692h-11.232000000000001l-.414-.036-.414-.108-.288-.198-.252-.324-.072-.486q0-.144-.036-.72t-.018-.954.108-.846.36-.702.738-.234h11.52q4.284 0 7.326 3.042t3.042 7.326z","TROPHY":"M16.488-32.651q-2.664-5.832-2.664-13.356h-9.216v3.456q0 2.808 3.402 5.832t8.478 4.068zm38.808-9.9v-3.456h-9.216q0 7.524-2.664 13.356 5.076-1.044 8.478-4.068t3.402-5.832zm4.608-4.608v4.608q0 2.556-1.494 5.148t-4.032 4.68-6.228 3.51-7.758 1.602q-1.512 1.944-3.42 3.42-1.368 1.224-1.89 2.61t-.522 3.222q0 1.944 1.098 3.276t3.51 1.332q2.7 0 4.806 1.638t2.106 4.122v2.304q0 .504-.324.828t-.828.324h-29.952q-.504 0-.828-.324t-.324-.828v-2.304q0-2.484 2.106-4.122t4.806-1.638q2.412 0 3.51-1.332t1.098-3.276q0-1.836-.522-3.222t-1.89-2.61q-1.908-1.476-3.42-3.42-4.068-.18-7.758-1.602t-6.228-3.51-4.032-4.68-1.494-5.148v-4.608q0-1.44 1.008-2.448t2.448-1.008h10.368v-3.456q0-2.376 1.692-4.068t4.068-1.692h20.736q2.376 0 4.068 1.692t1.692 4.068v3.456h10.368q1.44 0 2.448 1.008t1.008 2.448z","GITHUB_SQUARE":"M18.684-21.239q.144-.216-.108-.468-.324-.252-.504-.072-.144.216.108.468.324.252.504.072zm-1.008-1.476q-.18-.252-.432-.144-.216.144 0 .432.252.288.432.18.216-.144 0-.468zm-1.476-1.44q.072-.144-.18-.288-.252-.072-.288.072-.108.18.144.288.288.072.324-.072zm.756.828q.072-.036.054-.162t-.126-.198q-.216-.252-.36-.108t.036.396q.216.216.396.072zm3.096 2.7q.072-.252-.324-.396-.324-.108-.468.144-.072.252.324.396.324.108.468-.144zm1.512.108q0-.288-.432-.288-.36 0-.36.288t.396.288.396-.288zm1.404-.252q-.072-.252-.468-.18t-.324.324q.072.288.432.216t.36-.36zm23.112-11.412q0-7.632-5.4-13.032t-13.032-5.4-13.032 5.4-5.4 13.032q0 6.012 3.528 10.818t9.072 6.678q.648.108.954-.18t.306-.72q0-1.872-.036-3.42-.216.036-.558.09t-1.278.072-1.728-.144-1.566-.72-1.062-1.494q-.828-2.124-2.052-2.664l-.162-.126-.288-.288-.252-.342.144-.27.702-.126q.216 0 .54.072t1.08.558 1.188 1.278q.576 1.008 1.35 1.512t1.566.504 1.368-.126 1.08-.342q.252-1.692 1.188-2.484-1.764-.216-3.096-.666t-2.628-1.404-1.998-2.736-.702-4.302q0-2.844 1.908-4.932-.864-2.232.18-4.896.684-.216 1.962.27t2.178 1.062l.936.576q2.088-.612 4.608-.612t4.608.612q.396-.252 1.026-.648t1.998-.936 2.052-.324q1.044 2.664.18 4.896 1.908 2.088 1.908 4.932 0 2.052-.504 3.618t-1.278 2.52-1.926 1.602-2.25.936-2.466.432q1.26 1.116 1.26 3.42 0 1.44-.018 3.204t-.018 1.836q0 .432.306.72t.954.18q5.544-1.872 9.072-6.678t3.528-10.818zm9.216-17.28v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","UPLOAD":"M46.08-11.447q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm9.216 0q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm4.608-8.064v11.52q0 1.44-1.008 2.448t-2.448 1.008h-52.992q-1.44 0-2.448-1.008t-1.008-2.448v-11.52q0-1.44 1.008-2.448t2.448-1.008h15.372q.756 2.016 2.538 3.312t3.978 1.296h9.216q2.196 0 3.978-1.296t2.538-3.312h15.372q1.44 0 2.448 1.008t1.008 2.448zm-11.7-23.328q-.612 1.44-2.124 1.44h-9.216v16.128q0 .936-.684 1.62t-1.62.684h-9.216q-.936 0-1.62-.684t-.684-1.62v-16.128h-9.216q-1.512 0-2.124-1.44-.612-1.404.504-2.484l16.128-16.128q.648-.684 1.62-.684t1.62.684l16.128 16.128q1.116 1.08.504 2.484z","LEMON_O":"M50.652-34.703q0-1.584-.252-4.086t-.648-3.474q-.432-1.08-.612-1.584t-.324-1.314-.144-1.746q0-.828.18-2.466t.18-2.43q0-1.332-.36-1.98-.144-.036-.468-.036-.684 0-2.088.162t-2.124.162q-2.16 0-6.336-.864t-6.3-.864q-1.548 0-3.402.414t-3.06.846-3.222 1.224q-4.932 1.944-7.272 3.708-3.456 2.628-5.742 6.822t-3.168 8.496-.882 8.946q0 1.44.45 4.32t.45 4.356q0 .828-.396 2.394t-.396 2.358.432 1.314 1.224.522q.864 0 2.61-.396t2.646-.396q2.052 0 6.102.558t6.102.558q6.516 0 10.224-1.296 4.644-1.62 8.478-5.49t5.976-8.838 2.142-9.9zm4.608-.072q0 5.94-2.52 11.79t-7.056 10.368-10.116 6.498q-4.464 1.584-11.736 1.584-2.052 0-6.12-.522t-6.084-.522q-.864 0-2.61.522t-2.646.522q-2.628 0-4.446-1.998t-1.818-4.626q0-.864.396-2.448t.396-2.412q0-1.44-.45-4.338t-.45-4.374q0-3.996.648-7.83t1.962-7.542 3.618-6.984 5.4-5.616q2.808-2.124 8.352-4.32 6.984-2.808 11.376-2.808 2.16 0 6.318.864t6.246.864q.684 0 2.052-.18t2.088-.18q2.916 0 4.248 1.818t1.332 4.842q0 .828-.18 2.448t-.18 2.448q0 .36.036.666t.108.612.144.486.234.576.234.612q.576 1.44.9 4.266t.324 4.914z","PHONE":"M50.688-19.799q0 .972-.36 2.538t-.756 2.466q-.756 1.8-4.392 3.816-3.384 1.836-6.696 1.836-.972 0-1.89-.126t-2.07-.45-1.71-.522-1.998-.738-1.764-.648q-3.528-1.26-6.3-2.988-4.608-2.844-9.522-7.758t-7.758-9.522q-1.728-2.772-2.988-6.3-.108-.324-.648-1.764t-.738-1.998-.522-1.71-.45-2.07-.126-1.89q0-3.312 1.836-6.696 2.016-3.636 3.816-4.392.9-.396 2.466-.756t2.538-.36q.504 0 .756.108.648.216 1.908 2.736.396.684 1.08 1.944t1.26 2.286 1.116 1.926q.108.144.63.9t.774 1.278.252 1.026q0 .72-1.026 1.8t-2.232 1.98-2.232 1.908-1.026 1.656q0 .324.18.81t.306.738.504.864.414.684q2.736 4.932 6.264 8.46t8.46 6.264q.072.036.684.414t.864.504.738.306.81.18q.648 0 1.656-1.026t1.908-2.232 1.98-2.232 1.8-1.026q.504 0 1.026.252t1.278.774.9.63q.9.54 1.926 1.116t2.286 1.26 1.944 1.08q2.52 1.26 2.736 1.908.108.252.108.756z","SQUARE_O":"M40.32-55.223h-29.952q-2.376 0-4.068 1.692t-1.692 4.068v29.952q0 2.376 1.692 4.068t4.068 1.692h29.952q2.376 0 4.068-1.692t1.692-4.068v-29.952q0-2.376-1.692-4.068t-4.068-1.692zm10.368 5.76v29.952q0 4.284-3.042 7.326t-7.326 3.042h-29.952q-4.284 0-7.326-3.042t-3.042-7.326v-29.952q0-4.284 3.042-7.326t7.326-3.042h29.952q4.284 0 7.326 3.042t3.042 7.326z","BOOKMARK_O":"M41.472-55.223h-36.864v44.712l15.228-14.616 3.204-3.06 3.204 3.06 15.228 14.616v-44.712zm.432-4.608q.828 0 1.584.324 1.188.468 1.89 1.476t.702 2.232v46.404q0 1.224-.702 2.232t-1.89 1.476q-.684.288-1.584.288-1.728 0-2.988-1.152l-15.876-15.264-15.876 15.264q-1.296 1.188-2.988 1.188-.828 0-1.584-.324-1.188-.468-1.89-1.476t-.702-2.232v-46.404q0-1.224.702-2.232t1.89-1.476q.756-.324 1.584-.324h37.728z","PHONE_SQUARE":"M46.08-21.491q0-.396-.072-.576-.108-.288-1.386-1.062t-3.186-1.782l-1.908-1.044q-.18-.108-.684-.468t-.9-.54-.756-.18q-.648 0-1.692 1.17t-2.052 2.358-1.584 1.188q-.252 0-.594-.126t-.558-.234-.612-.342-.504-.306q-3.564-1.98-6.138-4.554t-4.554-6.138q-.072-.108-.306-.504t-.342-.612-.234-.558-.126-.594q0-.468.738-1.206t1.62-1.386 1.62-1.422.738-1.314q0-.36-.18-.756t-.54-.9-.468-.684q-.108-.216-.54-1.026t-.9-1.638-.954-1.71-.9-1.458-.594-.648-.576-.072q-1.728 0-3.636.792-1.656.756-2.88 3.402t-1.224 4.698q0 .576.09 1.224t.18 1.098.324 1.188.36 1.062.45 1.188.396 1.08q2.16 5.904 7.794 11.538t11.538 7.794q.216.072 1.08.396t1.188.45 1.062.36 1.188.324 1.098.18 1.224.09q2.052 0 4.698-1.224t3.402-2.88q.792-1.908.792-3.636zm9.216-27.972v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","TWITTER":"M58.32-49.751q-2.412 3.528-5.832 6.012.036.504.036 1.512 0 4.68-1.368 9.342t-4.158 8.946-6.642 7.578-9.288 5.256-11.628 1.962q-9.756 0-17.856-5.22 1.26.144 2.808.144 8.1 0 14.436-4.968-3.78-.072-6.768-2.322t-4.104-5.742q1.188.18 2.196.18 1.548 0 3.06-.396-4.032-.828-6.678-4.014t-2.646-7.398v-.144q2.448 1.368 5.256 1.476-2.376-1.584-3.78-4.14t-1.404-5.544q0-3.168 1.584-5.868 4.356 5.364 10.602 8.586t13.374 3.582q-.288-1.368-.288-2.664 0-4.824 3.402-8.226t8.226-3.402q5.04 0 8.496 3.672 3.924-.756 7.38-2.808-1.332 4.14-5.112 6.408 3.348-.36 6.696-1.8z","FACEBOOK_F":"M34.524-64.007v9.504h-5.652q-3.096 0-4.176 1.296t-1.08 3.888v6.804h10.548l-1.404 10.656h-9.144v27.324h-11.016v-27.324h-9.18v-10.656h9.18v-7.848q0-6.696 3.744-10.386t9.972-3.69q5.292 0 8.208.432z","GITHUB":"M27.648-59.831q7.524 0 13.878 3.708t10.062 10.062 3.708 13.878q0 9.036-5.274 16.254t-13.626 9.99q-.972.18-1.44-.252t-.468-1.08q0-.108.018-2.754t.018-4.842q0-3.492-1.872-5.112 2.052-.216 3.69-.648t3.384-1.404 2.916-2.394 1.908-3.78.738-5.418q0-4.284-2.844-7.416 1.332-3.276-.288-7.344-1.008-.324-2.916.396t-3.312 1.584l-1.368.864q-3.348-.936-6.912-.936t-6.912.936q-.576-.396-1.53-.972t-3.006-1.386-3.06-.486q-1.62 4.068-.288 7.344-2.844 3.132-2.844 7.416 0 3.06.738 5.4t1.89 3.78 2.898 2.412 3.384 1.404 3.69.648q-1.404 1.296-1.764 3.708-.756.36-1.62.54t-2.052.18-2.358-.774-1.998-2.25q-.684-1.152-1.746-1.872t-1.782-.864l-.72-.108q-.756 0-1.044.162t-.18.414.324.504.468.432l.252.18q.792.36 1.566 1.368t1.134 1.836l.36.828q.468 1.368 1.584 2.214t2.412 1.08 2.502.252 1.998-.126l.828-.144q0 1.368.018 3.186t.018 1.962q0 .648-.468 1.08t-1.44.252q-8.352-2.772-13.626-9.99t-5.274-16.254q0-7.524 3.708-13.878t10.062-10.062 13.878-3.708zm-17.172 39.708q.108-.252-.252-.432-.36-.108-.468.072-.108.252.252.432.324.216.468-.072zm1.116 1.224q.252-.18-.072-.576-.36-.324-.576-.108-.252.18.072.576.36.36.576.108zm1.08 1.62q.324-.252 0-.684-.288-.468-.612-.216-.324.18 0 .648t.612.252zm1.512 1.512q.288-.288-.144-.684-.432-.432-.72-.108-.324.288.144.684.432.432.72.108zm2.052.9q.108-.396-.468-.576-.54-.144-.684.252t.468.54q.54.216.684-.216zm2.268.18q0-.468-.612-.396-.576 0-.576.396 0 .468.612.396.576 0 .576-.396zm2.088-.36q-.072-.396-.648-.324-.576.108-.504.54t.648.288.504-.504z","UNLOCK":"M59.904-43.703v9.216q0 .936-.684 1.62t-1.62.684h-2.304q-.936 0-1.62-.684t-.684-1.62v-9.216q0-3.816-2.7-6.516t-6.516-2.7-6.516 2.7-2.7 6.516v6.912h3.456q1.44 0 2.448 1.008t1.008 2.448v20.736q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-20.736q0-1.44 1.008-2.448t2.448-1.008h24.192v-6.912q0-6.66 4.734-11.394t11.394-4.734 11.394 4.734 4.734 11.394z","CREDIT_CARD":"M63.36-59.831q2.376 0 4.068 1.692t1.692 4.068v43.776q0 2.376-1.692 4.068t-4.068 1.692h-57.6q-2.376 0-4.068-1.692t-1.692-4.068v-43.776q0-2.376 1.692-4.068t4.068-1.692h57.6zm-57.6 4.608q-.468 0-.81.342t-.342.81v8.064h59.904v-8.064q0-.468-.342-.81t-.81-.342h-57.6zm57.6 46.08q.468 0 .81-.342t.342-.81v-21.888h-59.904v21.888q0 .468.342.81t.81.342h57.6zm-54.144-4.608v-4.608h9.216v4.608h-9.216zm13.824 0v-4.608h13.824v4.608h-13.824z","RSS":"M13.824-16.055q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm18.432 4.428q.072 1.008-.612 1.728-.648.756-1.692.756h-4.86q-.9 0-1.548-.594t-.72-1.494q-.792-8.244-6.642-14.094t-14.094-6.642q-.9-.072-1.494-.72t-.594-1.548v-4.86q0-1.044.756-1.692.612-.612 1.548-.612h.18q5.76.468 11.016 2.898t9.324 6.534q4.104 4.068 6.534 9.324t2.898 11.016zm18.432.072q.072.972-.648 1.692-.648.72-1.656.72h-5.148q-.936 0-1.602-.63t-.702-1.53q-.432-7.74-3.636-14.706t-8.334-12.096-12.096-8.334-14.706-3.672q-.9-.036-1.53-.702t-.63-1.566v-5.148q0-1.008.72-1.656.648-.648 1.584-.648h.108q9.432.468 18.054 4.32t15.318 10.584q6.732 6.696 10.584 15.318t4.32 18.054z","HDD_O":"M37.44-20.663q0 1.188-.846 2.034t-2.034.846-2.034-.846-.846-2.034.846-2.034 2.034-.846 2.034.846.846 2.034zm9.216 0q0 1.188-.846 2.034t-2.034.846-2.034-.846-.846-2.034.846-2.034 2.034-.846 2.034.846.846 2.034zm4.032 5.76v-11.52q0-.468-.342-.81t-.81-.342h-43.776q-.468 0-.81.342t-.342.81v11.52q0 .468.342.81t.81.342h43.776q.468 0 .81-.342t.342-.81zm-44.28-17.28h42.48l-5.652-17.352q-.144-.468-.576-.774t-.936-.306h-28.152q-.504 0-.936.306t-.576.774zm48.888 5.76v11.52q0 2.376-1.692 4.068t-4.068 1.692h-43.776q-2.376 0-4.068-1.692t-1.692-4.068v-11.52q0-.9.576-2.7l7.092-21.816q.612-1.908 2.268-3.096t3.636-1.188h28.152q1.98 0 3.636 1.188t2.268 3.096l7.092 21.816q.576 1.8.576 2.7z","BULLHORN":"M59.904-41.399q1.908 0 3.258 1.35t1.35 3.258-1.35 3.258-3.258 1.35v13.824q0 1.872-1.368 3.24t-3.24 1.368q-15.012-12.492-29.232-13.68-2.088.684-3.276 2.376t-1.116 3.618 1.44 3.33q-.72 1.188-.828 2.358t.216 2.088 1.206 1.98 1.728 1.8 2.214 1.818q-1.044 2.088-4.014 2.988t-6.066.414-4.752-1.998q-.252-.828-1.062-3.15t-1.152-3.402-.828-3.204-.54-3.636.126-3.546.792-3.978h-4.392q-2.376 0-4.068-1.692t-1.692-4.068v-6.912q0-2.376 1.692-4.068t4.068-1.692h17.28q15.66 0 32.256-13.824 1.872 0 3.24 1.368t1.368 3.24v13.824zm-4.608 21.744v-34.344q-14.184 10.872-27.648 12.348v9.72q13.572 1.512 27.648 12.276z","BELL_O":"M32.832-3.383q0-.576-.576-.576-2.124 0-3.654-1.53t-1.53-3.654q0-.576-.576-.576t-.576.576q0 2.628 1.854 4.482t4.482 1.854q.576 0 .576-.576zm-23.976-10.368h46.8q-9.576-10.8-9.576-29.952 0-1.836-.864-3.78t-2.484-3.708-4.374-2.898-6.102-1.134-6.102 1.134-4.374 2.898-2.484 3.708-.864 3.78q0 19.152-9.576 29.952zm53.352 0q0 1.872-1.368 3.24t-3.24 1.368h-16.128q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516h-16.128q-1.872 0-3.24-1.368t-1.368-3.24q1.8-1.512 3.276-3.168t3.06-4.302 2.682-5.706 1.8-7.416.702-9.36q0-5.472 4.212-10.17t11.052-5.706q-.288-.684-.288-1.404 0-1.44 1.008-2.448t2.448-1.008 2.448 1.008 1.008 2.448q0 .72-.288 1.404 6.84 1.008 11.052 5.706t4.212 10.17q0 5.004.702 9.36t1.8 7.416 2.682 5.706 3.06 4.302 3.276 3.168z","CERTIFICATE":"M49.536-32.183l4.968 4.86q1.08 1.008.72 2.52-.432 1.476-1.872 1.836l-6.768 1.728 1.908 6.696q.432 1.476-.684 2.52-1.044 1.116-2.52.684l-6.696-1.908-1.728 6.768q-.36 1.44-1.836 1.872-.432.072-.684.072-1.116 0-1.836-.792l-4.86-4.968-4.86 4.968q-1.008 1.08-2.52.72-1.476-.396-1.836-1.872l-1.728-6.768-6.696 1.908q-1.476.432-2.52-.684-1.116-1.044-.684-2.52l1.908-6.696-6.768-1.728q-1.44-.36-1.872-1.836-.36-1.512.72-2.52l4.968-4.86-4.968-4.86q-1.08-1.008-.72-2.52.432-1.476 1.872-1.836l6.768-1.728-1.908-6.696q-.432-1.476.684-2.52 1.044-1.116 2.52-.684l6.696 1.908 1.728-6.768q.36-1.476 1.836-1.836 1.476-.432 2.52.684l4.86 5.004 4.86-5.004q1.044-1.08 2.52-.684 1.476.36 1.836 1.836l1.728 6.768 6.696-1.908q1.476-.432 2.52.684 1.116 1.044.684 2.52l-1.908 6.696 6.768 1.728q1.44.36 1.872 1.836.36 1.512-.72 2.52z","HAND_O_RIGHT":"M9.216-16.055q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm50.688-20.736q0-1.836-1.404-3.222t-3.204-1.386h-20.736q0-.72.54-1.746t1.188-1.98 1.188-2.448.54-3.042q0-2.412-1.602-3.51t-4.158-1.098q-.864 0-3.24 5.004-.864 1.584-1.332 2.34-1.44 2.304-4.032 5.22-2.556 2.916-3.636 3.816-2.484 2.052-5.04 2.052h-1.152v23.04h1.152q2.592 0 6.012 1.152t6.966 2.304 6.462 1.152q6.804 0 6.804-6.012 0-.936-.18-2.016 1.08-.576 1.71-1.89t.63-2.646-.648-2.484q1.908-1.8 1.908-4.284 0-.9-.36-1.998t-.9-1.71h11.916q1.872 0 3.24-1.368t1.368-3.24zm4.608-.036q0 3.78-2.718 6.516t-6.498 2.736h-6.084q-.144 2.232-1.332 4.284.108.756.108 1.548 0 3.636-2.16 6.408.036 5.004-3.06 7.902t-8.172 2.898q-4.788 0-11.592-2.484-5.904-2.124-8.028-2.124h-10.368q-1.908 0-3.258-1.35t-1.35-3.258v-23.04q0-1.908 1.35-3.258t3.258-1.35h10.368q.36 0 .774-.162t.846-.504.81-.648.864-.81.738-.774.684-.774.504-.612q2.34-2.664 3.6-4.644.468-.756 1.188-2.232t1.332-2.592 1.458-2.268 1.98-1.782 2.502-.63q4.5 0 7.434 2.412t2.934 6.804q0 2.448-.792 4.608h13.464q3.744 0 6.48 2.736t2.736 6.444z","HAND_O_LEFT":"M49.536-13.751h1.152v-23.04h-1.152q-1.26 0-2.43-.432t-2.25-1.332-1.8-1.656-1.764-1.944l-.126-.162-.144-.162-.162-.18q-2.592-2.916-4.032-5.22-.504-.792-1.368-2.448-.036-.108-.378-.81t-.666-1.296-.72-1.278-.774-1.098-.666-.414q-2.556 0-4.158 1.098t-1.602 3.51q0 1.548.54 3.042t1.188 2.448 1.188 1.98.54 1.746h-20.736q-1.8 0-3.204 1.386t-1.404 3.222q0 1.872 1.368 3.24t3.24 1.368h11.916q-.54.612-.9 1.71t-.36 1.998q0 2.484 1.908 4.284-.648 1.152-.648 2.484t.63 2.646 1.71 1.89q-.144.864-.144 2.016 0 3.06 1.746 4.536t4.878 1.476q3.024 0 6.588-1.152t6.984-2.304 6.012-1.152zm10.368-2.304q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm4.608-20.736v23.04q0 1.908-1.35 3.258t-3.258 1.35h-10.368q-2.124 0-8.028 2.124-6.84 2.484-11.412 2.484-5.112 0-8.28-2.79t-3.132-7.83l.036-.18q-2.196-2.736-2.196-6.408 0-.792.108-1.548-1.188-2.052-1.332-4.284h-6.084q-3.78 0-6.498-2.736t-2.718-6.516q0-3.708 2.736-6.444t6.48-2.736h13.464q-.792-2.16-.792-4.608 0-4.392 2.934-6.804t7.434-2.412q1.368 0 2.502.63t1.98 1.782 1.458 2.268 1.332 2.592 1.188 2.232q1.26 1.98 3.6 4.644.072.108.504.612t.684.774.738.774.864.81.81.648.846.504.774.162h10.368q1.908 0 3.258 1.35t1.35 3.258z","HAND_O_UP":"M46.08-6.839q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm4.608-27.504q0-6.804-6.012-6.804-.936 0-2.016.18-.576-1.08-1.89-1.71t-2.646-.63-2.484.648q-1.8-1.908-4.284-1.908-.9 0-1.998.36t-1.71.9v-11.916q0-1.872-1.368-3.24t-3.24-1.368q-1.836 0-3.222 1.404t-1.386 3.204v20.736q-.72 0-1.746-.54t-1.98-1.188-2.448-1.188-3.042-.54q-2.412 0-3.51 1.602t-1.098 4.158q0 .864 5.004 3.24 1.584.864 2.34 1.332 2.304 1.44 5.22 4.032 2.916 2.556 3.816 3.636 2.052 2.484 2.052 5.04v1.152h23.04v-1.152q0-2.592 1.152-6.012t2.304-6.966 1.152-6.462zm4.608-.18q0 4.788-2.484 11.592-2.124 5.904-2.124 8.028v10.368q0 1.908-1.35 3.258t-3.258 1.35h-23.04q-1.908 0-3.258-1.35t-1.35-3.258v-10.368q0-.36-.162-.774t-.504-.846-.648-.81-.81-.864-.774-.738-.774-.684-.612-.504q-2.664-2.34-4.644-3.6-.756-.468-2.232-1.188t-2.592-1.332-2.268-1.458-1.782-1.98-.63-2.502q0-4.5 2.412-7.434t6.804-2.934q2.448 0 4.608.792v-13.464q0-3.744 2.736-6.48t6.444-2.736q3.78 0 6.516 2.718t2.736 6.498v6.084q2.232.144 4.284 1.332.756-.108 1.548-.108 3.636 0 6.408 2.16 5.004-.036 7.902 3.06t2.898 8.172z","HAND_O_DOWN":"M50.688-29.879q0-3.024-1.152-6.588t-2.304-6.984-1.152-6.012v-1.152h-23.04v1.152q0 1.26-.432 2.43t-1.332 2.25-1.656 1.8-1.944 1.764q-.324.288-.504.432-2.916 2.592-5.22 4.032-.792.504-2.448 1.368-.108.036-.81.378t-1.296.666-1.278.72-1.098.774-.414.666q0 2.556 1.098 4.158t3.51 1.602q1.548 0 3.042-.54t2.448-1.188 1.98-1.188 1.746-.54v20.736q0 1.8 1.386 3.204t3.222 1.404q1.872 0 3.24-1.368t1.368-3.24v-11.916q1.656 1.26 3.708 1.26 2.484 0 4.284-1.908 1.152.648 2.484.648t2.646-.63 1.89-1.71q.864.144 2.016.144 3.06 0 4.536-1.746t1.476-4.878zm-4.608-27.648q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm9.216 27.504q0 5.112-2.79 8.28t-7.83 3.132l-.18-.036q-2.736 2.196-6.408 2.196-.792 0-1.548-.108-1.944 1.08-4.284 1.332v6.084q0 3.78-2.736 6.498t-6.516 2.718q-3.708 0-6.444-2.736t-2.736-6.48v-13.464q-1.944.792-4.608.792-4.356 0-6.786-2.934t-2.43-7.434q0-1.368.63-2.502t1.782-1.98 2.268-1.458 2.592-1.332 2.232-1.188q1.98-1.26 4.644-3.6.108-.072.612-.504t.774-.684.774-.738.81-.864.648-.81.504-.846.162-.774v-10.368q0-1.908 1.35-3.258t3.258-1.35h23.04q1.908 0 3.258 1.35t1.35 3.258v10.368q0 2.124 2.124 8.028 2.484 6.84 2.484 11.412z","ARROW_CIRCLE_LEFT":"M46.08-29.879v-4.608q0-.936-.684-1.62t-1.62-.684h-18.072l6.804-6.804q.684-.684.684-1.62t-.684-1.62l-3.276-3.276q-.648-.648-1.62-.648t-1.62.648l-13.032 13.032-3.276 3.276q-.648.648-.648 1.62t.648 1.62l3.276 3.276 13.032 13.032q.648.648 1.62.648t1.62-.648l3.276-3.276q.648-.648.648-1.62t-.648-1.62l-6.804-6.804h18.072q.936 0 1.62-.684t.684-1.62zm9.216-2.304q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","ARROW_CIRCLE_RIGHT":"M46.26-32.183q0-.972-.648-1.62l-3.276-3.276-13.032-13.032q-.648-.648-1.62-.648t-1.62.648l-3.276 3.276q-.648.648-.648 1.62t.648 1.62l6.804 6.804h-18.072q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h18.072l-6.804 6.804q-.684.684-.684 1.62t.684 1.62l3.276 3.276q.648.648 1.62.648t1.62-.648l13.032-13.032 3.276-3.276q.648-.648.648-1.62zm9.036 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","ARROW_CIRCLE_UP":"M46.224-32.219q0-.972-.648-1.62l-13.032-13.032-3.276-3.276q-.648-.648-1.62-.648t-1.62.648l-3.276 3.276-13.032 13.032q-.648.648-.648 1.62t.648 1.62l3.276 3.276q.648.648 1.62.648t1.62-.648l6.804-6.804v18.072q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62v-18.072l6.804 6.804q.684.684 1.62.684t1.62-.684l3.276-3.276q.648-.648.648-1.62zm9.072.036q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","ARROW_CIRCLE_DOWN":"M46.224-32.147q0-.972-.648-1.62l-3.276-3.276q-.648-.648-1.62-.648t-1.62.648l-6.804 6.804v-18.072q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v18.072l-6.804-6.804q-.684-.684-1.62-.684t-1.62.684l-3.276 3.276q-.648.648-.648 1.62t.648 1.62l13.032 13.032 3.276 3.276q.648.648 1.62.648t1.62-.648l3.276-3.276 13.032-13.032q.648-.648.648-1.62zm9.072-.036q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","GLOBE":"M27.648-59.831q7.524 0 13.878 3.708t10.062 10.062 3.708 13.878-3.708 13.878-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708zm9.864 18.756q-.072.036-.342.342t-.486.342q.072 0 .162-.18t.18-.396.126-.252q.216-.252.792-.54.504-.216 1.872-.432 1.224-.288 1.836.396-.072-.072.342-.468t.522-.432q.108-.072.54-.162t.54-.27l.072-.792q-.432.036-.63-.252t-.234-.756q0 .072-.216.288 0-.252-.162-.288t-.414.036-.324.036q-.36-.108-.54-.27t-.288-.594-.144-.54q-.072-.18-.342-.378t-.342-.378l-.09-.198-.108-.234-.144-.198-.198-.09-.252.18-.27.36-.162.18q-.108-.072-.216-.054t-.162.036-.162.108-.18.126q-.108.072-.306.108t-.306.072q.54-.18-.036-.396-.36-.144-.576-.108.324-.144.27-.432t-.306-.504h.18q-.036-.144-.306-.306t-.63-.306-.468-.216q-.288-.18-1.224-.342t-1.188-.018q-.18.216-.162.378t.144.504.126.45q.036.216-.198.468t-.234.432q0 .252.504.558t.36.774q-.108.288-.576.576t-.576.432q-.18.288-.054.666t.378.594q.072.072.054.144t-.126.162-.198.144-.234.126l-.108.072q-.396.18-.738-.216t-.486-.936q-.252-.9-.576-1.08-.828-.288-1.044.036-.18-.468-1.476-.936-.9-.324-2.088-.144.216-.036 0-.54-.252-.54-.684-.432.108-.216.144-.63t.036-.486q.108-.468.432-.828.036-.036.252-.306t.342-.486.018-.216q1.26.144 1.8-.396.18-.18.414-.612t.378-.612q.324-.216.504-.198t.522.198.522.18q.504.036.558-.396t-.27-.72q.432.036.108-.612-.18-.252-.288-.324-.432-.144-.972.18-.288.144.072.288-.036-.036-.342.378t-.594.63-.576-.18q-.036-.036-.198-.486t-.342-.486q-.288 0-.576.54.108-.288-.396-.54t-.864-.288q.684-.432-.288-.972-.252-.144-.738-.18t-.702.144q-.18.252-.198.414t.18.288.378.198.414.144.306.108q.504.36.288.504l-.306.126-.414.162-.216.144q-.108.144 0 .504t-.072.504q-.18-.18-.324-.63t-.252-.594q.252.324-.9.216l-.36-.036q-.144 0-.576.072t-.738.036-.486-.288q-.144-.288 0-.72.036-.144.144-.072-.144-.108-.396-.342t-.36-.306q-1.656.54-3.384 1.476.216.036.432-.036.18-.072.468-.234t.36-.198q1.224-.504 1.512-.252l.18-.18q.504.576.72.9-.252-.144-1.08-.036-.72.216-.792.432.252.432.18.648-.144-.108-.414-.36t-.522-.396-.54-.18q-.576 0-.792.036-5.256 2.88-8.46 7.992.252.252.432.288.144.036.18.324t.09.396.414-.108q.324.288.108.684.036-.036 1.584.972.684.612.756.756.108.396-.36.648-.036-.072-.324-.324t-.324-.144q-.108.18.018.666t.378.45q-.252 0-.342.576t-.09 1.278-.036.846l.072.036q-.108.432.198 1.242t.774.702q-.468.108.72 1.548.216.288.288.324.108.072.432.27t.54.36.36.378q.144.18.36.81t.504.846q-.072.216.342.72t.378.828l-.09.036-.09.036q.108.252.558.504t.558.468q.036.108.072.36t.108.396.288.072q.072-.72-.864-2.232-.54-.9-.612-1.044-.108-.18-.198-.558t-.162-.522q.072 0 .216.054t.306.126.27.144.072.108q-.108.252.072.63t.432.666.612.684.432.468q.216.216.504.702t0 .486q.324 0 .72.36t.612.72q.18.288.288.936t.18.864q.072.252.306.486t.45.342l.576.288.468.252q.18.072.666.378t.774.414q.36.144.576.144t.522-.09.486-.126q.54-.072 1.044.54t.756.756q1.296.684 1.98.396-.072.036.018.27t.288.558.324.522.198.306q.18.216.648.54t.648.54q.216-.144.252-.324-.108.288.252.72t.648.36q.504-.108.504-1.152-1.116.54-1.764-.648l-.09-.198-.144-.306-.09-.306v-.27l.18-.108q.324 0 .36-.126t-.072-.45-.144-.468q-.036-.288-.396-.72t-.432-.54q-.18.324-.576.288t-.576-.324l-.054.198-.054.234q-.468 0-.54-.036.036-.108.09-.63t.126-.81q.036-.144.198-.432t.27-.522.144-.45-.162-.342-.63-.09q-.684.036-.936.72-.036.108-.108.378t-.18.414-.324.252q-.252.108-.864.072t-.864-.18q-.468-.288-.81-1.044t-.342-1.332q0-.36.09-.954t.108-.9-.198-.882q.108-.072.324-.342t.36-.378l.162-.054h.162l.144-.054.108-.216-.144-.108-.144-.108q.252.108 1.026-.054t.99.054q.54.396.792-.072 0-.036-.09-.342t-.018-.486q.18.972 1.044.324.108.108.558.18t.63.18l.252.198.198.162.18-.018.306-.234q.36.504.432.864.396 1.44.684 1.584.252.108.396.072t.162-.342 0-.504-.054-.45l-.036-.288v-.648l-.036-.288q-.54-.108-.666-.432t.054-.666.54-.666q.036-.036.288-.126t.558-.234.45-.288q.756-.684.54-1.26.252 0 .396-.324l-.18-.108-.27-.18-.162-.072q.324-.18.072-.576.18-.108.27-.396t.27-.36q.324.432.756.072.252-.288.036-.576.18-.252.738-.378t.666-.342q.252.072.288-.072t.036-.432.108-.432q.144-.18.54-.324t.468-.18l.612-.396q.108-.144 0-.144.648.072 1.116-.396.36-.396-.216-.72.108-.216-.108-.342t-.54-.198q.108-.036.414-.018t.378-.054q.54-.36-.252-.576-.612-.18-1.548.432zm-5.868 31.572q7.416-1.296 12.636-6.804-.108-.108-.45-.162t-.45-.126q-.648-.252-.864-.288.036-.252-.09-.468t-.288-.324-.45-.288-.396-.252l-.252-.216-.252-.198-.27-.162-.306-.072-.36.036-.108.036-.198.09-.198.108-.144.108v.09q-.756-.612-1.296-.792-.18-.036-.396-.198t-.378-.252-.36-.054-.414.252q-.18.18-.216.54t-.072.468q-.252-.18 0-.63t.072-.666q-.108-.216-.378-.162t-.432.162-.414.306-.324.234-.306.198-.306.27q-.108.144-.216.432t-.18.396q-.072-.144-.414-.234t-.342-.198q.072.36.144 1.26t.18 1.368q.252 1.116-.432 1.728-.972.9-1.044 1.44-.144.792.432.936 0 .252-.288.738t-.252.774q0 .216.072.576z","WRENCH":"M13.824-11.447q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm23.184-15.12l-24.552 24.552q-1.332 1.332-3.24 1.332-1.872 0-3.276-1.332l-3.816-3.888q-1.368-1.296-1.368-3.24 0-1.908 1.368-3.276l24.516-24.516q1.404 3.528 4.122 6.246t6.246 4.122zm22.824-15.66q0 1.404-.828 3.816-1.692 4.824-5.922 7.83t-9.306 3.006q-6.66 0-11.394-4.734t-4.734-11.394 4.734-11.394 11.394-4.734q2.088 0 4.374.594t3.87 1.674q.576.396.576 1.008t-.576 1.008l-10.548 6.084v8.064l6.948 3.852q.18-.108 2.844-1.746t4.878-2.916 2.538-1.278q.54 0 .846.36t.306.9z","TASKS":"M36.864-13.751h23.04v-4.608h-23.04v4.608zm-13.824-18.432h36.864v-4.608h-36.864v4.608zm23.04-18.432h13.824v-4.608h-13.824v4.608zm18.432 29.952v9.216q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62zm0-18.432v9.216q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62zm0-18.432v9.216q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h59.904q.936 0 1.62.684t.684 1.62z","FILTER":"M50.508-53.819q.612 1.476-.504 2.52l-17.748 17.748v26.712q0 1.512-1.404 2.124-.468.18-.9.18-.972 0-1.62-.684l-9.216-9.216q-.684-.684-.684-1.62v-17.496l-17.748-17.748q-1.116-1.044-.504-2.52.612-1.404 2.124-1.404h46.08q1.512 0 2.124 1.404z","BRIEFCASE":"M23.04-55.223h18.432v-4.608h-18.432v4.608zm41.472 23.04v17.28q0 2.376-1.692 4.068t-4.068 1.692h-52.992q-2.376 0-4.068-1.692t-1.692-4.068v-17.28h24.192v5.76q0 .936.684 1.62t1.62.684h11.52q.936 0 1.62-.684t.684-1.62v-5.76h24.192zm-27.648 0v4.608h-9.216v-4.608h9.216zm27.648-17.28v13.824h-64.512v-13.824q0-2.376 1.692-4.068t4.068-1.692h12.672v-5.76q0-1.44 1.008-2.448t2.448-1.008h20.736q1.44 0 2.448 1.008t1.008 2.448v5.76h12.672q2.376 0 4.068 1.692t1.692 4.068z","ARROWS_ALT":"M46.188-44.963l-12.78 12.78 12.78 12.78 5.184-5.184q1.044-1.116 2.52-.504 1.404.612 1.404 2.124v16.128q0 .936-.684 1.62t-1.62.684h-16.128q-1.512 0-2.124-1.44-.612-1.404.504-2.484l5.184-5.184-12.78-12.78-12.78 12.78 5.184 5.184q1.116 1.08.504 2.484-.612 1.44-2.124 1.44h-16.128q-.936 0-1.62-.684t-.684-1.62v-16.128q0-1.512 1.44-2.124 1.404-.612 2.484.504l5.184 5.184 12.78-12.78-12.78-12.78-5.184 5.184q-.684.684-1.62.684-.432 0-.864-.18-1.44-.612-1.44-2.124v-16.128q0-.936.684-1.62t1.62-.684h16.128q1.512 0 2.124 1.44.612 1.404-.504 2.484l-5.184 5.184 12.78 12.78 12.78-12.78-5.184-5.184q-1.116-1.08-.504-2.484.612-1.44 2.124-1.44h16.128q.936 0 1.62.684t.684 1.62v16.128q0 1.512-1.404 2.124-.468.18-.9.18-.936 0-1.62-.684z","USERS":"M21.348-32.183q-5.832.18-9.54 4.608h-4.824q-2.952 0-4.968-1.458t-2.016-4.266q0-12.708 4.464-12.708.216 0 1.566.756t3.51 1.53 4.284.774q2.412 0 4.788-.828-.18 1.332-.18 2.376 0 5.004 2.916 9.216zm38.556 22.932q0 4.32-2.628 6.822t-6.984 2.502h-31.464q-4.356 0-6.984-2.502t-2.628-6.822q0-1.908.126-3.726t.504-3.924.954-3.906 1.548-3.51 2.232-2.916 3.078-1.926 4.014-.72q.36 0 1.548.774t2.628 1.728 3.852 1.728 4.86.774 4.86-.774 3.852-1.728 2.628-1.728 1.548-.774q2.196 0 4.014.72t3.078 1.926 2.232 2.916 1.548 3.51.954 3.906.504 3.924.126 3.726zm-36.864-45.972q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516 2.7-6.516 6.516-2.7 6.516 2.7 2.7 6.516zm25.344 13.824q0 5.724-4.05 9.774t-9.774 4.05-9.774-4.05-4.05-9.774 4.05-9.774 9.774-4.05 9.774 4.05 4.05 9.774zm20.736 8.1q0 2.808-2.016 4.266t-4.968 1.458h-4.824q-3.708-4.428-9.54-4.608 2.916-4.212 2.916-9.216 0-1.044-.18-2.376 2.376.828 4.788.828 2.124 0 4.284-.774t3.51-1.53 1.566-.756q4.464 0 4.464 12.708zm-4.608-21.924q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516 2.7-6.516 6.516-2.7 6.516 2.7 2.7 6.516z","LINK":"M52.416-20.663q0-1.44-1.008-2.448l-7.488-7.488q-1.008-1.008-2.448-1.008-1.512 0-2.592 1.152.108.108.684.666t.774.774.54.684.468.918.126.99q0 1.44-1.008 2.448t-2.448 1.008q-.54 0-.99-.126t-.918-.468-.684-.54-.774-.774-.666-.684q-1.188 1.116-1.188 2.628 0 1.44 1.008 2.448l7.416 7.452q.972.972 2.448.972 1.44 0 2.448-.936l5.292-5.256q1.008-1.008 1.008-2.412zm-25.308-25.38q0-1.44-1.008-2.448l-7.416-7.452q-1.008-1.008-2.448-1.008-1.404 0-2.448.972l-5.292 5.256q-1.008 1.008-1.008 2.412 0 1.44 1.008 2.448l7.488 7.488q.972.972 2.448.972 1.512 0 2.592-1.116-.108-.108-.684-.666t-.774-.774-.54-.684-.468-.918-.126-.99q0-1.44 1.008-2.448t2.448-1.008q.54 0 .99.126t.918.468.684.54.774.774.666.684q1.188-1.116 1.188-2.628zm32.22 25.38q0 4.32-3.06 7.308l-5.292 5.256q-2.988 2.988-7.308 2.988-4.356 0-7.344-3.06l-7.416-7.452q-2.988-2.988-2.988-7.308 0-4.428 3.168-7.524l-3.168-3.168q-3.096 3.168-7.488 3.168-4.32 0-7.344-3.024l-7.488-7.488q-3.024-3.024-3.024-7.344t3.06-7.308l5.292-5.256q2.988-2.988 7.308-2.988 4.356 0 7.344 3.06l7.416 7.452q2.988 2.988 2.988 7.308 0 4.428-3.168 7.524l3.168 3.168q3.096-3.168 7.488-3.168 4.32 0 7.344 3.024l7.488 7.488q3.024 3.024 3.024 7.344z","CLOUD":"M69.12-22.967q0 5.724-4.05 9.774t-9.774 4.05h-39.168q-6.66 0-11.394-4.734t-4.734-11.394q0-4.752 2.556-8.694t6.732-5.886q-.072-1.008-.072-1.548 0-7.632 5.4-13.032t13.032-5.4q5.688 0 10.314 3.168t6.75 8.28q2.52-2.232 5.976-2.232 3.816 0 6.516 2.7t2.7 6.516q0 2.7-1.476 4.968 4.644 1.08 7.668 4.842t3.024 8.622z","FLASK":"M54.972-12.311q2.016 3.204.774 5.49t-5.058 2.286h-41.472q-3.816 0-5.058-2.286t.774-5.49l18.108-28.548v-14.364h-2.304q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h18.432q.936 0 1.62.684t.684 1.62-.684 1.62-1.62.684h-2.304v14.364zm-28.044-26.1l-9.792 15.444h25.632l-9.792-15.444-.72-1.116v-15.696000000000002h-4.608v15.696000000000002z","SCISSORS":"M34.56-32.183q.936 0 1.62.684t.684 1.62-.684 1.62-1.62.684-1.62-.684-.684-1.62.684-1.62 1.62-.684zm10.8 2.304l18.252 14.328q1.008.72.9 2.016-.18 1.26-1.26 1.836l-4.608 2.304q-.468.252-1.044.252-.612 0-1.116-.288l-24.84-13.932-3.96 2.376q-.288.144-.432.18.504 1.764.36 3.492-.252 2.772-2.016 5.31t-4.752 4.446q-4.752 3.024-9.972 3.024-4.896 0-7.992-2.808-3.24-3.024-2.844-7.452.252-2.736 2.016-5.292t4.716-4.464q4.752-3.024 10.008-3.024 2.988 0 5.436 1.116.324-.468.792-.792l4.392-2.628-4.392-2.628q-.468-.324-.792-.792-2.448 1.116-5.436 1.116-5.256 0-10.008-3.024-2.952-1.908-4.716-4.464t-2.016-5.292q-.18-2.124.558-4.068t2.286-3.348q3.06-2.844 7.992-2.844 5.22 0 9.972 3.024 2.988 1.872 4.752 4.428t2.016 5.328q.144 1.728-.36 3.492.144.036.432.18l3.96 2.376 24.84-13.932q.504-.288 1.116-.288.576 0 1.044.252l4.608 2.304q1.08.576 1.26 1.836.108 1.296-.9 2.016zm-24.516-9.36q1.656-1.512.756-3.888t-3.816-4.212q-3.312-2.124-6.912-2.124-2.664 0-4.068 1.296-1.656 1.512-.756 3.888t3.816 4.212q3.312 2.124 6.912 2.124 2.664 0 4.068-1.296zm-3.06 26.82q2.916-1.836 3.816-4.212t-.756-3.888q-1.404-1.296-4.068-1.296-3.6 0-6.912 2.124-2.916 1.836-3.816 4.212t.756 3.888q1.404 1.296 4.068 1.296 3.6 0 6.912-2.124zm6.408-22.068l3.456 2.088v-.396q0-1.296 1.188-2.016l.504-.288-2.844-1.692-.936.936q-.108.108-.36.396t-.432.432l-.144.126-.108.09zm8.064 8.064l3.456 1.152 26.496-20.736-4.608-2.304-27.648 15.516v4.068l-5.76 3.456.324.288.252.216q.144.144.396.432t.396.432l.936.936zm25.344 14.976l4.608-2.304-18.72-14.688-6.372 4.968q-.072.108-.468.252z","FILES_O":"M61.056-50.615q1.44 0 2.448 1.008t1.008 2.448v43.776q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-10.368h-19.584q-1.44 0-2.448-1.008t-1.008-2.448v-24.192q0-1.44.72-3.168t1.728-2.736l14.688-14.688q1.008-1.008 2.736-1.728t3.168-.72h14.976q1.44 0 2.448 1.008t1.008 2.448v11.808q2.448-1.44 4.608-1.44h14.976zm-19.584 7.668l-10.764 10.764h10.764v-10.764zm-23.04-13.824l-10.764 10.764h10.764v-10.764zm7.056 23.292l11.376-11.376v-14.976h-13.824v14.976q0 1.44-1.008 2.448t-2.448 1.008h-14.976v23.04h18.432v-9.216q0-1.44.72-3.168t1.728-2.736zm34.416 28.944v-41.472h-13.824v14.976q0 1.44-1.008 2.448t-2.448 1.008h-14.976v23.04h32.256z","PAPERCLIP":"M50.544-14.579q0 4.212-2.844 7.056t-7.056 2.844q-4.86 0-8.46-3.6l-27.972-27.936q-4.068-4.14-4.068-9.756 0-5.724 3.96-9.72t9.684-3.996q5.688 0 9.828 4.068l21.78 21.816q.36.36.36.792 0 .576-1.098 1.674t-1.674 1.098q-.468 0-.828-.36l-21.816-21.852q-2.844-2.772-6.516-2.772-3.816 0-6.444 2.7t-2.628 6.516q0 3.78 2.736 6.516l27.936 27.972q2.268 2.268 5.22 2.268 2.304 0 3.816-1.512t1.512-3.816q0-2.952-2.268-5.22l-20.916-20.916q-.936-.864-2.16-.864-1.044 0-1.728.684t-.684 1.728q0 1.152.9 2.124l14.76 14.76q.36.36.36.792 0 .576-1.116 1.692t-1.692 1.116q-.432 0-.792-.36l-14.76-14.76q-2.268-2.196-2.268-5.364 0-2.952 2.052-5.004t5.004-2.052q3.168 0 5.364 2.268l20.916 20.916q3.6 3.528 3.6 8.46z","SAVE":"M13.824-9.143h27.648v-13.824h-27.648v13.824zm32.256 0h4.608v-32.256q0-.504-.36-1.386t-.72-1.242l-10.116-10.116q-.36-.36-1.224-.72t-1.404-.36v14.976q0 1.44-1.008 2.448t-2.448 1.008h-20.736q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-4.608v46.08h4.608v-14.976q0-1.44 1.008-2.448t2.448-1.008h29.952q1.44 0 2.448 1.008t1.008 2.448v14.976zm-13.824-33.408v-11.52q0-.468-.342-.81t-.81-.342h-6.912q-.468 0-.81.342t-.342.81v11.52q0 .468.342.81t.81.342h6.912q.468 0 .81-.342t.342-.81zm23.04 1.152v33.408q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-48.384q0-1.44 1.008-2.448t2.448-1.008h33.408q1.44 0 3.168.72t2.736 1.728l10.08 10.08q1.008 1.008 1.728 2.736t.72 3.168z","SQUARE":"M55.296-49.463v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","REORDER":"M55.296-16.055v4.608q0 .936-.684 1.62t-1.62.684h-50.688q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h50.688q.936 0 1.62.684t.684 1.62zm0-18.432v4.608q0 .936-.684 1.62t-1.62.684h-50.688q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h50.688q.936 0 1.62.684t.684 1.62zm0-18.432v4.608q0 .936-.684 1.62t-1.62.684h-50.688q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h50.688q.936 0 1.62.684t.684 1.62z","LIST_UL":"M13.824-13.751q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm0-18.432q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm50.688 14.976v6.912q0 .468-.342.81t-.81.342h-43.776q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h43.776q.468 0 .81.342t.342.81zm-50.688-33.408q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm50.688 14.976v6.912q0 .468-.342.81t-.81.342h-43.776q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h43.776q.468 0 .81.342t.342.81zm0-18.432v6.912q0 .468-.342.81t-.81.342h-43.776q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h43.776q.468 0 .81.342t.342.81z","LIST_OL":"M13.716-6.119q0 2.88-1.962 4.536t-4.878 1.656q-3.816 0-6.192-2.376l2.052-3.168q1.764 1.62 3.816 1.62 1.044 0 1.818-.522t.774-1.53q0-2.304-3.78-2.016l-.936-2.016q.288-.36 1.17-1.566t1.53-1.944 1.332-1.386v-.036q-.576 0-1.746.036t-1.746.036v1.908h-3.816v-5.472h11.988v3.168l-3.42 4.14q1.836.432 2.916 1.764t1.08 3.168zm.072-22.572v5.724h-13.032q-.216-1.296-.216-1.944 0-1.836.846-3.348t2.034-2.448 2.376-1.71 2.034-1.566.846-1.62q0-.9-.522-1.386t-1.422-.486q-1.656 0-2.916 2.088l-3.06-2.124q.864-1.836 2.574-2.862t3.798-1.026q2.628 0 4.428 1.494t1.8 4.05q0 1.8-1.224 3.294t-2.7 2.322-2.718 1.818-1.278 1.89h4.572v-2.16h3.78zm50.724 11.484v6.912q0 .468-.342.81t-.81.342h-43.776q-.468 0-.81-.342t-.342-.81v-6.912q0-.504.324-.828t.828-.324h43.776q.468 0 .81.342t.342.81zm-50.688-32.364v3.564h-12.06v-3.564h3.852q0-1.476.018-4.392t.018-4.356v-.432h-.072q-.288.612-1.8 1.944l-2.556-2.736 4.896-4.572h3.816v14.544h3.888zm50.688 13.932v6.912q0 .468-.342.81t-.81.342h-43.776q-.468 0-.81-.342t-.342-.81v-6.912q0-.504.324-.828t.828-.324h43.776q.468 0 .81.342t.342.81zm0-18.432v6.912q0 .468-.342.81t-.81.342h-43.776q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h43.776q.468 0 .81.342t.342.81z","STRIKETHROUGH":"M63.36-32.183q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-62.208q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h62.208zm-45.972-2.304q-1.008-1.26-1.836-2.88-1.728-3.492-1.728-6.768 0-6.516 4.824-11.124 4.788-4.572 14.148-4.572 1.8 0 6.012.684 2.376.432 6.372 1.728.36 1.368.756 4.248.504 4.428.504 6.588 0 .648-.18 1.62l-.432.108-3.024-.216-.504-.072q-1.8-5.364-3.708-7.38-3.168-3.276-7.56-3.276-4.104 0-6.552 2.124-2.412 2.088-2.412 5.256 0 2.628 2.376 5.04t10.044 4.644q2.484.72 6.228 2.376 2.088 1.008 3.42 1.872h-26.748zm18.252 9.216h14.796q.252 1.404.252 3.312 0 3.996-1.476 7.632-.828 1.98-2.556 3.744-1.332 1.26-3.924 2.916-2.88 1.728-5.508 2.376-2.88.756-7.308.756-4.104 0-7.02-.828l-5.04-1.44q-2.052-.576-2.592-1.008-.288-.288-.288-.792v-.468q0-3.888-.072-5.616-.036-1.08 0-2.448l.072-1.332v-1.584l3.672-.072q.54 1.224 1.08 2.556t.81 2.016.45.972q1.26 2.052 2.88 3.384 1.548 1.296 3.78 2.052 2.124.792 4.752.792 2.304 0 5.004-.972 2.772-.936 4.392-3.096 1.692-2.196 1.692-4.644 0-3.024-2.916-5.652-1.224-1.044-4.932-2.556z","UNDERLINE":"M1.728-56.411q-1.332-.072-1.62-.144l-.108-3.168q.468-.036 1.44-.036 2.16 0 4.032.144 4.752.252 5.976.252 3.096 0 6.048-.108 4.176-.144 5.256-.18 2.016 0 3.096-.072l-.036.504.072 2.304v.324q-2.16.324-4.464.324-2.16 0-2.844.9-.468.504-.468 4.752 0 .468.018 1.17t.018.918l.036 8.244.504 10.08q.216 4.464 1.836 7.272 1.26 2.124 3.456 3.312 3.168 1.692 6.372 1.692 3.744 0 6.876-1.008 2.016-.648 3.564-1.836 1.728-1.296 2.34-2.304 1.296-2.016 1.908-4.104.756-2.628.756-8.244 0-2.844-.126-4.608t-.396-4.41-.486-5.742l-.144-2.124q-.18-2.412-.864-3.168-1.224-1.26-2.772-1.224l-3.6.072-.504-.108.072-3.096h3.024l7.38.36q2.736.108 7.056-.36l.648.072q.216 1.368.216 1.836 0 .252-.144 1.116-1.62.432-3.024.468-2.628.396-2.844.612-.54.54-.54 1.476 0 .252.054.972t.054 1.116q.288.684.792 14.256.216 7.02-.54 10.944-.54 2.736-1.476 4.392-1.368 2.34-4.032 4.428-2.7 2.052-6.552 3.204-3.924 1.188-9.18 1.188-6.012 0-10.224-1.656-4.284-1.692-6.444-4.392-2.196-2.736-2.988-7.02-.576-2.88-.576-8.532v-11.988q0-6.768-.612-7.668-.9-1.296-5.292-1.404zm53.568 50.724v-2.304q0-.504-.324-.828t-.828-.324h-52.992q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h52.992q.504 0 .828-.324t.324-.828z","TABLE":"M18.432-14.903v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm0-13.824v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm18.432 13.824v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm-18.432-27.648v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm18.432 13.824v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm18.432 13.824v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm-18.432-27.648v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm18.432 13.824v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm0-13.824v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm4.608-11.52v39.168q0 2.376-1.692 4.068t-4.068 1.692h-48.384q-2.376 0-4.068-1.692t-1.692-4.068v-39.168q0-2.376 1.692-4.068t4.068-1.692h48.384q2.376 0 4.068 1.692t1.692 4.068z","MAGIC":"M42.84-43.523l10.548-10.548-3.852-3.852-10.548 10.548zm16.092-10.548q0 .972-.648 1.62l-46.296 46.296q-.648.648-1.62.648t-1.62-.648l-7.128-7.128q-.648-.648-.648-1.62t.648-1.62l46.296-46.296q.648-.648 1.62-.648t1.62.648l7.128 7.128q.648.648.648 1.62zm-48.636-6.84l3.528 1.08-3.528 1.08-1.08 3.528-1.08-3.528-3.528-1.08 3.528-1.08 1.08-3.528zm12.6 5.832l7.056 2.16-7.056 2.16-2.16 7.056-2.16-7.056-7.056-2.16 7.056-2.16 2.16-7.056zm33.48 17.208l3.528 1.08-3.528 1.08-1.08 3.528-1.08-3.528-3.528-1.08 3.528-1.08 1.08-3.528zm-23.04-23.04l3.528 1.08-3.528 1.08-1.08 3.528-1.08-3.528-3.528-1.08 3.528-1.08 1.08-3.528z","TRUCK":"M23.04-13.751q0-1.872-1.368-3.24t-3.24-1.368-3.24 1.368-1.368 3.24 1.368 3.24 3.24 1.368 3.24-1.368 1.368-3.24zm-13.824-18.432h13.824v-9.216h-5.688q-.468 0-.792.324l-7.02 7.02q-.324.324-.324.792v1.08zm46.08 18.432q0-1.872-1.368-3.24t-3.24-1.368-3.24 1.368-1.368 3.24 1.368 3.24 3.24 1.368 3.24-1.368 1.368-3.24zm9.216-39.168v36.864q0 .54-.144.954t-.486.666-.594.414-.846.216-.81.072-.918 0-.81-.018q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516h-13.824q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516h-2.304q-.108 0-.81.018t-.918 0-.81-.072-.846-.216-.594-.414-.486-.666-.144-.954q0-.936.684-1.62t1.62-.684v-11.52q0-.288-.018-1.26t0-1.368.09-1.242.234-1.332.504-1.098.81-1.08l7.128-7.128q.684-.684 1.818-1.152t2.106-.468h5.76v-6.912q0-.936.684-1.62t1.62-.684h36.864q.936 0 1.62.684t.684 1.62z","PINTEREST":"M55.296-32.183q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708q-3.996 0-7.848-1.152 2.124-3.348 2.808-5.904.324-1.224 1.944-7.596.72 1.404 2.628 2.43t4.104 1.026q4.356 0 7.776-2.466t5.292-6.786 1.872-9.72q0-4.104-2.142-7.704t-6.21-5.868-9.18-2.268q-3.78 0-7.056 1.044t-5.562 2.772-3.924 3.978-2.412 4.662-.774 4.824q0 3.744 1.44 6.588t4.212 3.996q1.08.432 1.368-.72.072-.252.288-1.116t.288-1.08q.216-.828-.396-1.548-1.836-2.196-1.836-5.436 0-5.436 3.762-9.342t9.846-3.906q5.436 0 8.478 2.952t3.042 7.668q0 6.12-2.466 10.404t-6.318 4.284q-2.196 0-3.528-1.566t-.828-3.762q.288-1.26.954-3.366t1.08-3.708.414-2.718q0-1.8-.972-2.988t-2.772-1.188q-2.232 0-3.78 2.052t-1.548 5.112q0 2.628.9 4.392l-3.564 15.048q-.612 2.52-.468 6.372-7.416-3.276-11.988-10.116t-4.572-15.228q0-7.524 3.708-13.878t10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","PINTEREST_SQUARE":"M44.928-59.831q4.284 0 7.326 3.042t3.042 7.326v34.56q0 4.284-3.042 7.326t-7.326 3.042h-26.1q3.06-4.392 3.888-7.56.324-1.224 1.908-7.524.756 1.404 2.646 2.412t4.05 1.008q6.516 0 10.638-5.31t4.122-13.446q0-3.024-1.26-5.85t-3.474-5.004-5.49-3.492-7.092-1.314q-3.744 0-7.002 1.026t-5.508 2.754-3.87 3.942-2.394 4.608-.774 4.77q0 3.672 1.422 6.48t4.194 3.96q.468.18.846 0t.522-.684q.36-1.584.54-2.196.216-.828-.396-1.512-1.8-2.232-1.8-5.4 0-5.4 3.726-9.234t9.738-3.834q5.364 0 8.37 2.916t3.006 7.56q0 6.048-2.43 10.296t-6.246 4.248q-2.16 0-3.492-1.566t-.828-3.726q.288-1.224.954-3.33t1.062-3.672.396-2.682q0-1.764-.954-2.934t-2.718-1.17q-2.196 0-3.726 2.034t-1.53 5.022q0 2.592.864 4.356l-3.528 14.904q-.864 3.6-.252 9.144h-6.588q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56z","GOOGLE_PLUS_SQUARE":"M33.012-31.859q0-.936-.216-2.304h-13.032v4.752h7.812q-.108.864-.594 1.8t-1.35 1.908-2.394 1.602-3.474.63q-3.564 0-6.084-2.556t-2.52-6.156 2.52-6.156 6.084-2.556q3.312 0 5.508 2.124l3.744-3.636q-3.888-3.6-9.252-3.6-5.76 0-9.792 4.05t-4.032 9.774 4.032 9.774 9.792 4.05q5.94 0 9.594-3.78t3.654-9.72zm12.42 1.656h3.924v-3.96h-3.924v-3.96h-3.96v3.96h-3.96v3.96h3.96v3.96h3.96v-3.96zm9.864-19.26v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","GOOGLE_PLUS":"M51.732-31.571q0 7.488-3.132 13.338t-8.928 9.144-13.284 3.294q-5.364 0-10.26-2.088t-8.424-5.616-5.616-8.424-2.088-10.26 2.088-10.26 5.616-8.424 8.424-5.616 10.26-2.088q10.296 0 17.676 6.912l-7.164 6.876q-4.212-4.068-10.512-4.068-4.428 0-8.19 2.232t-5.958 6.066-2.196 8.37 2.196 8.37 5.958 6.066 8.19 2.232q2.988 0 5.49-.828t4.122-2.07 2.826-2.826 1.764-2.988.774-2.664h-14.976v-9.072h24.912q.432 2.268.432 4.392zm31.212-4.392v7.56h-7.524v7.524h-7.56v-7.524h-7.524v-7.56h7.524v-7.524h7.56v7.524h7.524z","MONEY":"M27.648-22.967h13.824v-3.456h-4.608v-16.128h-4.104l-5.328 4.932 2.772 2.88q1.512-1.332 1.98-2.052h.072v10.368h-4.608v3.456zm18.432-9.216q0 2.52-.756 5.112t-2.142 4.824-3.654 3.636-4.968 1.404-4.968-1.404-3.654-3.636-2.142-4.824-.756-5.112.756-5.112 2.142-4.824 3.654-3.636 4.968-1.404 4.968 1.404 3.654 3.636 2.142 4.824.756 5.112zm18.432 9.216v-18.432q-3.816 0-6.516-2.7t-2.7-6.516h-41.472q0 3.816-2.7 6.516t-6.516 2.7v18.432q3.816 0 6.516 2.7t2.7 6.516h41.472q0-3.816 2.7-6.516t6.516-2.7zm4.608-29.952v41.472q0 .936-.684 1.62t-1.62.684h-64.512q-.936 0-1.62-.684t-.684-1.62v-41.472q0-.936.684-1.62t1.62-.684h64.512q.936 0 1.62.684t.684 1.62z","CARET_DOWN":"M36.864-39.095q0 .936-.684 1.62l-16.128 16.128q-.684.684-1.62.684t-1.62-.684l-16.128-16.128q-.684-.684-.684-1.62t.684-1.62 1.62-.684h32.256q.936 0 1.62.684t.684 1.62z","CARET_UP":"M36.864-20.663q0 .936-.684 1.62t-1.62.684h-32.256q-.936 0-1.62-.684t-.684-1.62.684-1.62l16.128-16.128q.684-.684 1.62-.684t1.62.684l16.128 16.128q.684.684.684 1.62z","CARET_LEFT":"M23.04-48.311v32.256q0 .936-.684 1.62t-1.62.684-1.62-.684l-16.128-16.128q-.684-.684-.684-1.62t.684-1.62l16.128-16.128q.684-.684 1.62-.684t1.62.684.684 1.62z","CARET_RIGHT":"M20.736-32.183q0 .936-.684 1.62l-16.128 16.128q-.684.684-1.62.684t-1.62-.684-.684-1.62v-32.256q0-.936.684-1.62t1.62-.684 1.62.684l16.128 16.128q.684.684.684 1.62z","COLUMNS":"M5.76-9.143h21.888v-41.472h-23.04v40.32q0 .468.342.81t.81.342zm49.536-1.152v-40.32h-23.04v41.472h21.888q.468 0 .81-.342t.342-.81zm4.608-43.776v43.776q0 2.376-1.692 4.068t-4.068 1.692h-48.384q-2.376 0-4.068-1.692t-1.692-4.068v-43.776q0-2.376 1.692-4.068t4.068-1.692h48.384q2.376 0 4.068 1.692t1.692 4.068z","UNSORTED":"M36.864-25.271q0 .936-.684 1.62l-16.128 16.128q-.684.684-1.62.684t-1.62-.684l-16.128-16.128q-.684-.684-.684-1.62t.684-1.62 1.62-.684h32.256q.936 0 1.62.684t.684 1.62zm0-13.824q0 .936-.684 1.62t-1.62.684h-32.256q-.936 0-1.62-.684t-.684-1.62.684-1.62l16.128-16.128q.684-.684 1.62-.684t1.62.684l16.128 16.128q.684.684.684 1.62z","SORT_DOWN":"M36.864-25.271q0 .936-.684 1.62l-16.128 16.128q-.684.684-1.62.684t-1.62-.684l-16.128-16.128q-.684-.684-.684-1.62t.684-1.62 1.62-.684h32.256q.936 0 1.62.684t.684 1.62z","SORT_UP":"M36.864-39.095q0 .936-.684 1.62t-1.62.684h-32.256q-.936 0-1.62-.684t-.684-1.62.684-1.62l16.128-16.128q.684-.684 1.62-.684t1.62.684l16.128 16.128q.684.684.684 1.62z","ENVELOPE":"M64.512-38.879v28.584q0 2.376-1.692 4.068t-4.068 1.692h-52.992q-2.376 0-4.068-1.692t-1.692-4.068v-28.584q1.584 1.764 3.636 3.132 13.032 8.856 17.892 12.42 2.052 1.512 3.33 2.358t3.402 1.728 3.96.882h.072q1.836 0 3.96-.882t3.402-1.728 3.33-2.358q6.12-4.428 17.928-12.42 2.052-1.404 3.6-3.132zm0-10.584q0 2.844-1.764 5.436t-4.392 4.428q-13.536 9.396-16.848 11.7-.36.252-1.53 1.098t-1.944 1.368-1.872 1.17-2.07.972-1.8.324h-.072q-.828 0-1.8-.324t-2.07-.972-1.872-1.17-1.944-1.368-1.53-1.098q-3.276-2.304-9.432-6.57t-7.38-5.13q-2.232-1.512-4.212-4.158t-1.98-4.914q0-2.808 1.494-4.68t4.266-1.872h52.992q2.34 0 4.05 1.692t1.71 4.068z","LINKEDIN":"M12.564-41.939v35.676h-11.88v-35.676h11.88zm.756-11.016q.036 2.628-1.818 4.392t-4.878 1.764h-.072q-2.952 0-4.752-1.764t-1.8-4.392q0-2.664 1.854-4.41t4.842-1.746 4.788 1.746 1.836 4.41zm41.976 26.244v20.448h-11.844v-19.08q0-3.78-1.458-5.922t-4.554-2.142q-2.268 0-3.798 1.242t-2.286 3.078q-.396 1.08-.396 2.916v19.908h-11.844q.072-14.364.072-23.292t-.036-10.656l-.036-1.728h11.844v5.184h-.072q.72-1.152 1.476-2.016t2.034-1.872 3.132-1.566 4.122-.558q6.156 0 9.9 4.086t3.744 11.97z","UNDO":"M55.296-32.183q0 5.616-2.196 10.728t-5.904 8.82-8.82 5.904-10.728 2.196q-6.192 0-11.772-2.61t-9.504-7.362q-.252-.36-.234-.81t.306-.738l4.932-4.968q.36-.324.9-.324.576.072.828.432 2.628 3.42 6.444 5.292t8.1 1.872q3.744 0 7.146-1.458t5.886-3.942 3.942-5.886 1.458-7.146-1.458-7.146-3.942-5.886-5.886-3.942-7.146-1.458q-3.528 0-6.768 1.278t-5.76 3.654l4.932 4.968q1.116 1.08.504 2.484-.612 1.44-2.124 1.44h-16.128q-.936 0-1.62-.684t-.684-1.62v-16.128q0-1.512 1.44-2.124 1.404-.612 2.484.504l4.68 4.644q3.852-3.636 8.802-5.634t10.242-1.998q5.616 0 10.728 2.196t8.82 5.904 5.904 8.82 2.196 10.728z","LEGAL":"M63.756-9.143q0 1.908-1.332 3.24l-3.852 3.888q-1.404 1.332-3.276 1.332-1.908 0-3.24-1.332l-13.068-13.104q-1.368-1.296-1.368-3.24 0-1.908 1.548-3.456l-9.216-9.216-4.536 4.536q-.504.504-1.224.504t-1.224-.504q.072.072.45.432t.45.468.36.414.36.486.216.486.198.594.054.648q0 1.368-1.008 2.448-.108.108-.594.648t-.684.738-.666.594-.792.558-.792.324-.936.162q-1.44 0-2.448-1.008l-14.688-14.688q-1.008-1.008-1.008-2.448 0-.468.162-.936t.324-.792.558-.792.594-.666.738-.684.648-.594q1.08-1.008 2.448-1.008.36 0 .648.054t.594.198.486.216.486.36.414.36.468.45.432.45q-.504-.504-.504-1.224t.504-1.224l12.528-12.528q.504-.504 1.224-.504t1.224.504q-.072-.072-.45-.432t-.45-.468-.36-.414-.36-.486-.216-.486-.198-.594-.054-.648q0-1.368 1.008-2.448.108-.108.594-.648t.684-.738.666-.594.792-.558.792-.324.936-.162q1.44 0 2.448 1.008l14.688 14.688q1.008 1.008 1.008 2.448 0 .468-.162.936t-.324.792-.558.792-.594.666-.738.684-.648.594q-1.08 1.008-2.448 1.008-.36 0-.648-.054t-.594-.198-.486-.216-.486-.36-.414-.36-.468-.45-.432-.45q.504.504.504 1.224t-.504 1.224l-4.536 4.536 9.216 9.216q1.548-1.548 3.456-1.548 1.872 0 3.276 1.332l13.068 13.068q1.332 1.404 1.332 3.276z","TACHOMETER":"M13.824-22.967q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm6.912-16.128q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm15.408 17.316l3.636-13.752q.216-.936-.27-1.746t-1.386-1.062-1.728.234-1.08 1.422l-3.636 13.752q-2.16.18-3.852 1.566t-2.268 3.546q-.72 2.772.72 5.256t4.212 3.204 5.256-.72 3.204-4.212q.576-2.16-.216-4.212t-2.592-3.276zm23.76-1.188q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm-23.04-23.04q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm16.128 6.912q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm11.52 16.128q0 9.396-5.076 17.388-.684 1.044-1.944 1.044h-50.472q-1.26 0-1.944-1.044-5.076-7.956-5.076-17.388 0-6.552 2.556-12.528t6.876-10.296 10.296-6.876 12.528-2.556 12.528 2.556 10.296 6.876 6.876 10.296 2.556 12.528z","COMMENT_O":"M32.256-50.615q-7.344 0-13.734 2.502t-10.152 6.75-3.762 9.18q0 4.032 2.574 7.686t7.254 6.318l3.132 1.8-.972 3.456q-.864 3.276-2.52 6.192 5.472-2.268 9.9-6.156l1.548-1.368 2.052.216q2.484.288 4.68.288 7.344 0 13.734-2.502t10.152-6.75 3.762-9.18-3.762-9.18-10.152-6.75-13.734-2.502zm32.256 18.432q0 6.264-4.32 11.574t-11.736 8.388-16.2 3.078q-2.52 0-5.22-.288-7.128 6.3-16.56 8.712-1.764.504-4.104.792h-.18q-.54 0-.972-.378t-.576-.99v-.036q-.108-.144-.018-.432t.072-.36.162-.342l.216-.324.252-.306.288-.324q.252-.288 1.116-1.242t1.242-1.368 1.116-1.422 1.17-1.836.972-2.124.936-2.736q-5.652-3.204-8.91-7.92t-3.258-10.116q0-6.264 4.32-11.574t11.736-8.388 16.2-3.078 16.2 3.078 11.736 8.388 4.32 11.574z","COMMENTS_O":"M25.344-50.615q-5.508 0-10.296 1.872t-7.614 5.076-2.826 6.876q0 2.952 1.908 5.688t5.364 4.752l3.492 2.016-1.26 3.024q1.224-.72 2.232-1.404l1.584-1.116 1.908.36q2.808.504 5.508.504 5.508 0 10.296-1.872t7.614-5.076 2.826-6.876-2.826-6.876-7.614-5.076-10.296-1.872zm0-4.608q6.876 0 12.726 2.466t9.234 6.714 3.384 9.252-3.384 9.252-9.234 6.714-12.726 2.466q-3.096 0-6.336-.576-4.464 3.168-10.008 4.608-1.296.324-3.096.576h-.108q-.396 0-.738-.288t-.414-.756q-.036-.108-.036-.234t.018-.234.072-.216l.09-.18.126-.198.144-.18.162-.18.144-.162q.18-.216.828-.9t.936-1.062.81-1.044.9-1.386.738-1.584q-4.464-2.592-7.02-6.372t-2.556-8.064q0-5.004 3.384-9.252t9.234-6.714 12.726-2.466zm29.592 42.084q.36.864.738 1.584t.9 1.386.81 1.044.936 1.062.828.9l.144.162.162.18.144.18.126.198.09.18.072.216.018.234-.036.234q-.108.504-.468.792t-.792.252q-1.8-.252-3.096-.576-5.544-1.44-10.008-4.608-3.24.576-6.336.576-9.756 0-16.992-4.752 2.088.144 3.168.144 5.796 0 11.124-1.62t9.504-4.644q4.5-3.312 6.912-7.632t2.412-9.144q0-2.772-.828-5.472 4.644 2.556 7.344 6.408t2.7 8.28q0 4.32-2.556 8.082t-7.02 6.354z","FLASH":"M31.86-44.063q.648.72.252 1.584l-19.44 41.652q-.468.9-1.512.9-.144 0-.504-.072-.612-.18-.918-.684t-.162-1.08l7.092-29.088-14.616 3.636q-.144.036-.432.036-.648 0-1.116-.396-.648-.54-.468-1.404l7.236-29.7q.144-.504.576-.828t1.008-.324h11.808q.684 0 1.152.45t.468 1.062q0 .288-.18.648l-6.156 16.668 14.256-3.528q.288-.072.432-.072.684 0 1.224.54z","SITEMAP":"M64.512-19.511v11.52q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-11.52q0-1.44 1.008-2.448t2.448-1.008h3.456v-6.912h-18.432v6.912h3.456q1.44 0 2.448 1.008t1.008 2.448v11.52q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-11.52q0-1.44 1.008-2.448t2.448-1.008h3.456v-6.912h-18.432v6.912h3.456q1.44 0 2.448 1.008t1.008 2.448v11.52q0 1.44-1.008 2.448t-2.448 1.008h-11.52q-1.44 0-2.448-1.008t-1.008-2.448v-11.52q0-1.44 1.008-2.448t2.448-1.008h3.456v-6.912q0-1.872 1.368-3.24t3.24-1.368h18.432v-6.912h-3.456q-1.44 0-2.448-1.008t-1.008-2.448v-11.52q0-1.44 1.008-2.448t2.448-1.008h11.52q1.44 0 2.448 1.008t1.008 2.448v11.52q0 1.44-1.008 2.448t-2.448 1.008h-3.456v6.912h18.432q1.872 0 3.24 1.368t1.368 3.24v6.912h3.456q1.44 0 2.448 1.008t1.008 2.448z","UMBRELLA":"M32.256-34.631v20.88q0 3.744-2.736 6.48t-6.48 2.736-6.48-2.736-2.736-6.48q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62q0 1.8 1.404 3.204t3.204 1.404 3.204-1.404 1.404-3.204v-20.88q1.188-.396 2.304-.396t2.304.396zm27.648.972q0 .468-.342.81t-.81.342q-.396 0-.828-.36-1.764-1.656-3.348-2.484t-3.672-.828q-2.448 0-4.608 1.332t-3.708 3.492q-.252.36-.63 1.008t-.522.864q-.396.612-1.008.612-.648 0-1.044-.612-.144-.216-.522-.864t-.63-1.008q-1.548-2.16-3.69-3.492t-4.59-1.332-4.59 1.332-3.69 3.492q-.252.36-.63 1.008t-.522.864q-.396.612-1.044.612-.612 0-1.008-.612-.144-.216-.522-.864t-.63-1.008q-1.548-2.16-3.708-3.492t-4.608-1.332q-2.088 0-3.672.828t-3.348 2.484q-.432.36-.828.36-.468 0-.81-.342t-.342-.81q0-.18.036-.252 1.62-6.588 6.21-11.502t10.728-7.362 12.978-2.448q5.04 0 9.882 1.44t8.874 4.086 7.002 6.732 4.158 9.054q.036.072.036.252zm-27.648-26.172v3.528q-1.512-.072-2.304-.072t-2.304.072v-3.528q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62z","PASTE":"M27.648-4.535h32.256v-23.04h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-13.824v41.472zm9.216-51.84v-2.304q0-.468-.342-.81t-.81-.342h-25.344q-.468 0-.81.342t-.342.81v2.304q0 .468.342.81t.81.342h25.344q.468 0 .81-.342t.342-.81zm9.216 24.192h10.764l-10.764-10.764v10.764zm18.432 4.608v24.192q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-5.76h-19.584q-1.44 0-2.448-1.008t-1.008-2.448v-48.384q0-1.44 1.008-2.448t2.448-1.008h39.168q1.44 0 2.448 1.008t1.008 2.448v11.808q.756.468 1.296 1.008l14.688 14.688q1.008 1.008 1.728 2.736t.72 3.168z","LIGHTBULB_O":"M26.496-43.703q0 .468-.342.81t-.81.342-.81-.342-.342-.81q0-1.656-1.944-2.556t-3.816-.9q-.468 0-.81-.342t-.342-.81.342-.81.81-.342q1.8 0 3.582.576t3.132 1.944 1.35 3.24zm5.76 0q0-2.592-1.242-4.824t-3.24-3.654-4.428-2.232-4.914-.81-4.914.81-4.428 2.232-3.24 3.654-1.242 4.824q0 3.636 2.448 6.48.36.396 1.098 1.188t1.098 1.188q4.608 5.508 5.076 10.728h8.208q.468-5.22 5.076-10.728.36-.396 1.098-1.188t1.098-1.188q2.448-2.844 2.448-6.48zm4.608 0q0 5.58-3.708 9.648-1.62 1.764-2.682 3.132t-2.142 3.438-1.224 3.87q1.692 1.008 1.692 2.952 0 1.332-.9 2.304.9.972.9 2.304 0 1.872-1.62 2.916.468.828.468 1.692 0 1.656-1.134 2.556t-2.79.9q-.72 1.584-2.16 2.52t-3.132.936-3.132-.936-2.16-2.52q-1.656 0-2.79-.9t-1.134-2.556q0-.864.468-1.692-1.62-1.044-1.62-2.916 0-1.332.9-2.304-.9-.972-.9-2.304 0-1.944 1.692-2.952-.144-1.8-1.224-3.87t-2.142-3.438-2.682-3.132q-3.708-4.068-3.708-9.648 0-3.564 1.602-6.642t4.212-5.112 5.904-3.204 6.714-1.17 6.714 1.17 5.904 3.204 4.212 5.112 1.602 6.642z","EXCHANGE":"M64.512-21.815v6.912q0 .468-.342.81t-.81.342h-49.536v6.912q0 .468-.342.81t-.81.342q-.432 0-.864-.36l-11.484-11.52q-.324-.324-.324-.792 0-.504.324-.828l11.52-11.52q.324-.324.828-.324.468 0 .81.342t.342.81v6.912h49.536q.468 0 .81.342t.342.81zm0-19.584q0 .504-.324.828l-11.52 11.52q-.324.324-.828.324-.468 0-.81-.342t-.342-.81v-6.912h-49.536q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h49.536v-6.912q0-.504.324-.828t.828-.324q.432 0 .864.36l11.484 11.484q.324.324.324.828z","CLOUD_DOWNLOAD":"M46.08-31.031q0-.504-.324-.828t-.828-.324h-8.064v-12.672q0-.468-.342-.81t-.81-.342h-6.912q-.468 0-.81.342t-.342.81v12.672h-8.064q-.468 0-.81.342t-.342.81q0 .504.324.828l12.672 12.672q.324.324.828.324t.828-.324l12.636-12.636q.36-.432.36-.864zm23.04 8.064q0 5.724-4.05 9.774t-9.774 4.05h-39.168q-6.66 0-11.394-4.734t-4.734-11.394q0-4.68 2.52-8.64t6.768-5.94q-.072-1.08-.072-1.548 0-7.632 5.4-13.032t13.032-5.4q5.616 0 10.278 3.132t6.786 8.316q2.556-2.232 5.976-2.232 3.816 0 6.516 2.7t2.7 6.516q0 2.736-1.476 4.968 4.68 1.116 7.686 4.878t3.006 8.586z","CLOUD_UPLOAD":"M46.08-33.335q0-.504-.324-.828l-12.672-12.672q-.324-.324-.828-.324t-.828.324l-12.636 12.636q-.36.432-.36.864 0 .504.324.828t.828.324h8.064v12.672q0 .468.342.81t.81.342h6.912q.468 0 .81-.342t.342-.81v-12.672h8.064q.468 0 .81-.342t.342-.81zm23.04 10.368q0 5.724-4.05 9.774t-9.774 4.05h-39.168q-6.66 0-11.394-4.734t-4.734-11.394q0-4.68 2.52-8.64t6.768-5.94q-.072-1.08-.072-1.548 0-7.632 5.4-13.032t13.032-5.4q5.616 0 10.278 3.132t6.786 8.316q2.556-2.232 5.976-2.232 3.816 0 6.516 2.7t2.7 6.516q0 2.736-1.476 4.968 4.68 1.116 7.686 4.878t3.006 8.586z","USER_MD":"M13.824-16.055q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62.684-1.62 1.62-.684 1.62.684.684 1.62zm36.864 2.196q0 4.356-2.628 6.84t-6.984 2.484h-31.464q-4.356 0-6.984-2.484t-2.628-6.84q0-2.448.198-4.716t.864-4.968 1.71-4.77 2.916-3.708 4.32-2.178q-.792 1.872-.792 4.32v7.308q-2.088.72-3.348 2.52t-1.26 3.996q0 2.88 2.016 4.896t4.896 2.016 4.896-2.016 2.016-4.896q0-2.196-1.278-3.996t-3.33-2.52v-7.308q0-2.232.9-3.348 4.752 3.744 10.62 3.744t10.62-3.744q.9 1.116.9 3.348v2.304q-3.816 0-6.516 2.7t-2.7 6.516v3.204q-1.152 1.044-1.152 2.556 0 1.44 1.008 2.448t2.448 1.008 2.448-1.008 1.008-2.448q0-1.512-1.152-2.556v-3.204q0-1.872 1.368-3.24t3.24-1.368 3.24 1.368 1.368 3.24v3.204q-1.152 1.044-1.152 2.556 0 1.44 1.008 2.448t2.448 1.008 2.448-1.008 1.008-2.448q0-1.512-1.152-2.556v-3.204q0-2.448-1.242-4.59t-3.366-3.366q0-.36.018-1.53t0-1.728-.09-1.494-.252-1.692-.468-1.44q2.448.54 4.32 2.178t2.916 3.708 1.71 4.77.864 4.968.198 4.716zm-11.52-32.148q0 5.724-4.05 9.774t-9.774 4.05-9.774-4.05-4.05-9.774 4.05-9.774 9.774-4.05 9.774 4.05 4.05 9.774z","STETHOSCOPE":"M46.08-39.095q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm4.608 0q0 2.232-1.278 3.996t-3.33 2.52v14.22q0 5.724-4.734 9.774t-11.394 4.05-11.394-4.05-4.734-9.774v-4.752q-5.904-.72-9.864-4.608t-3.96-9.072v-18.432q0-.936.684-1.62t1.62-.684q.216 0 .576.072.612-1.08 1.692-1.728t2.34-.648q1.908 0 3.258 1.35t1.35 3.258-1.35 3.258-3.258 1.35q-1.188 0-2.304-.648v14.472q0 3.816 3.384 6.516t8.136 2.7 8.136-2.7 3.384-6.516v-14.472q-1.116.648-2.304.648-1.908 0-3.258-1.35t-1.35-3.258 1.35-3.258 3.258-1.35q1.26 0 2.34.648t1.692 1.728q.36-.072.576-.072.936 0 1.62.684t.684 1.62v18.432q0 5.184-3.96 9.072t-9.864 4.608v4.752q0 3.816 3.384 6.516t8.136 2.7 8.136-2.7 3.384-6.516v-14.22q-2.052-.756-3.33-2.52t-1.278-3.996q0-2.88 2.016-4.896t4.896-2.016 4.896 2.016 2.016 4.896z","SUITCASE":"M23.04-50.615h18.432v-4.608h-18.432v4.608zm-12.672 0v46.08h-2.304q-3.312 0-5.688-2.376t-2.376-5.688v-29.952q0-3.312 2.376-5.688t5.688-2.376h2.304zm40.32 0v46.08h-36.864v-46.08h4.608v-5.76q0-1.44 1.008-2.448t2.448-1.008h20.736q1.44 0 2.448 1.008t1.008 2.448v5.76h4.608zm13.824 8.064v29.952q0 3.312-2.376 5.688t-5.688 2.376h-2.304v-46.08h2.304q3.312 0 5.688 2.376t2.376 5.688z","BELL":"M32.832-3.383q0-.576-.576-.576-2.124 0-3.654-1.53t-1.53-3.654q0-.576-.576-.576t-.576.576q0 2.628 1.854 4.482t4.482 1.854q.576 0 .576-.576zm29.376-10.368q0 1.872-1.368 3.24t-3.24 1.368h-16.128q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516h-16.128q-1.872 0-3.24-1.368t-1.368-3.24q1.8-1.512 3.276-3.168t3.06-4.302 2.682-5.706 1.8-7.416.702-9.36q0-5.472 4.212-10.17t11.052-5.706q-.288-.684-.288-1.404 0-1.44 1.008-2.448t2.448-1.008 2.448 1.008 1.008 2.448q0 .72-.288 1.404 6.84 1.008 11.052 5.706t4.212 10.17q0 5.004.702 9.36t1.8 7.416 2.682 5.706 3.06 4.302 3.276 3.168z","COFFEE":"M59.904-41.399q0-2.88-2.016-4.896t-4.896-2.016h-2.304v13.824h2.304q2.88 0 4.896-2.016t2.016-4.896zm-59.904 27.648h64.512q0 3.816-2.7 6.516t-6.516 2.7h-46.08q-3.816 0-6.516-2.7t-2.7-6.516zm66.816-27.648q0 5.724-4.05 9.774t-9.774 4.05h-2.304v1.152q0 3.312-2.376 5.688t-5.688 2.376h-25.344q-3.312 0-5.688-2.376t-2.376-5.688v-26.496q0-.936.684-1.62t1.62-.684h41.472q5.724 0 9.774 4.05t4.05 9.774z","CUTLERY":"M23.04-62.135v23.04q0 2.196-1.278 3.996t-3.33 2.52v28.044q0 1.872-1.368 3.24t-3.24 1.368h-4.608q-1.872 0-3.24-1.368t-1.368-3.24v-28.044q-2.052-.72-3.33-2.52t-1.278-3.996v-23.04q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62v14.976q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62v-14.976q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62v14.976q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62v-14.976q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62zm27.648 0v57.6q0 1.872-1.368 3.24t-3.24 1.368h-4.608q-1.872 0-3.24-1.368t-1.368-3.24v-18.432h-8.064q-.468 0-.81-.342t-.342-.81v-28.8q0-4.752 3.384-8.136t8.136-3.384h9.216q.936 0 1.62.684t.684 1.62z","FILE_TEXT_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-36.864-31.104q0-.504.324-.828t.828-.324h25.344q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-25.344q-.504 0-.828-.324t-.324-.828v-2.304zm26.496 8.064q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-25.344q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h25.344zm0 9.216q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-25.344q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h25.344z","BUILDING_O":"M13.824-17.207v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm0-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm9.216 0v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm27.648 18.432v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm27.648 18.432v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm27.648 18.432v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm18.432 9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm9.216 0v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216 49.536h13.824v-55.296h-41.472v55.296h13.824v-8.064q0-.468.342-.81t.81-.342h11.52q.468 0 .81.342t.342.81v8.064zm18.432-57.6v59.904q0 .936-.684 1.62t-1.62.684h-46.08q-.936 0-1.62-.684t-.684-1.62v-59.904q0-.936.684-1.62t1.62-.684h46.08q.936 0 1.62.684t.684 1.62z","HOSPITAL_O":"M13.824-17.207v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm0-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm9.216 0v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm27.648 18.432v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm18.432 9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216-9.216v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm9.216 0v2.304q0 .468-.342.81t-.81.342h-2.304q-.468 0-.81-.342t-.342-.81v-2.304q0-.468.342-.81t.81-.342h2.304q.468 0 .81.342t.342.81zm-9.216 31.104h13.824v-41.472h-9.216v1.152q0 1.44-1.008 2.448t-2.448 1.008h-16.128q-1.44 0-2.448-1.008t-1.008-2.448v-1.152h-9.216v41.472h13.824v-8.064q0-.468.342-.81t.81-.342h11.52q.468 0 .81.342t.342.81v8.064zm0-42.624v-11.52q0-.468-.342-.81t-.81-.342h-2.304q-.468 0-.81.342t-.342.81v3.456h-4.608v-3.456q0-.468-.342-.81t-.81-.342h-2.304q-.468 0-.81.342t-.342.81v11.52q0 .468.342.81t.81.342h2.304q.468 0 .81-.342t.342-.81v-3.456h4.608v3.456q0 .468.342.81t.81.342h2.304q.468 0 .81-.342t.342-.81zm18.432-1.152v46.08q0 .936-.684 1.62t-1.62.684h-46.08q-.936 0-1.62-.684t-.684-1.62v-46.08q0-.936.684-1.62t1.62-.684h11.52v-10.368q0-1.44 1.008-2.448t2.448-1.008h16.128q1.44 0 2.448 1.008t1.008 2.448v10.368h11.52q.936 0 1.62.684t.684 1.62z","AMBULANCE":"M23.04-13.751q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm-13.824-18.432h13.824v-9.216h-5.688q-.504.072-.792.324l-7.02 7.02q-.252.432-.324.792v1.08zm46.08 18.432q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm4.608-24.192v-6.912q0-.504-.324-.828t-.828-.324h-8.064v-8.064q0-.504-.324-.828t-.828-.324h-6.912q-.504 0-.828.324t-.324.828v8.064h-8.064q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h8.064v8.064q0 .504.324.828t.828.324h6.912q.504 0 .828-.324t.324-.828v-8.064h8.064q.504 0 .828-.324t.324-.828zm9.216-19.584v41.472q0 .936-.684 1.62t-1.62.684h-6.912q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516h-13.824q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516h-4.608q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684v-14.976q0-.936.468-2.088t1.152-1.836l7.128-7.128q.684-.684 1.836-1.152t2.088-.468h5.76v-11.52q0-.936.684-1.62t1.62-.684h41.472q.936 0 1.62.684t.684 1.62z","MEDKIT":"M46.08-24.119v-6.912q0-.504-.324-.828t-.828-.324h-8.064v-8.064q0-.504-.324-.828t-.828-.324h-6.912q-.504 0-.828.324t-.324.828v8.064h-8.064q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h8.064v8.064q0 .504.324.828t.828.324h6.912q.504 0 .828-.324t.324-.828v-8.064h8.064q.504 0 .828-.324t.324-.828zm-23.04-26.496h18.432v-4.608h-18.432v4.608zm-13.824 0v46.08h-1.152q-3.312 0-5.688-2.376t-2.376-5.688v-29.952q0-3.312 2.376-5.688t5.688-2.376h1.152zm42.624 0v46.08h-39.168v-46.08h5.76v-5.76q0-1.44 1.008-2.448t2.448-1.008h20.736q1.44 0 2.448 1.008t1.008 2.448v5.76h5.76zm12.672 8.064v29.952q0 3.312-2.376 5.688t-5.688 2.376h-1.152v-46.08h1.152q3.312 0 5.688 2.376t2.376 5.688z","FIGHTER_JET":"M69.12-29.879q-.036 1.152-10.368 3.456l-12.672 1.152-8.064 2.304h-2.304l-10.548 12.672h2.484q.936 0 1.62.162t.684.414-.684.414-1.62.162h-11.52v-1.152h2.304v-14.976h-5.76l-6.912 8.064h-3.456l-1.152-1.152v-6.912h1.152v-1.152h4.608v-.288l-6.912-.864v-4.608l6.912-.864v-.288h-4.608v-1.152h-1.152v-6.912l1.152-1.152h3.456l6.912 8.064h5.76v-14.976h-2.304v-1.152h11.52q.936 0 1.62.162t.684.414-.684.414-1.62.162h-2.484l10.548 12.672h2.304l8.064 2.304 12.672 1.152q9.396 2.088 10.332 3.348z","BEER":"M23.04-32.183v-13.824h-9.216v9.216q0 1.908 1.35 3.258t3.258 1.35h4.608zm36.864 16.128v6.912h-41.472v-6.912l4.608-6.912h-4.608q-5.724 0-9.774-4.05t-4.05-9.774v-11.52l-2.304-2.304 1.152-4.608h17.28l1.152-4.608h34.56l1.152 6.912-2.304 1.152v28.8z","H_SQUARE":"M46.08-16.055v-32.256q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v11.52h-18.432v-11.52q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v32.256q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62v-11.52h18.432v11.52q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62zm9.216-33.408v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","PLUS_SQUARE":"M46.08-29.879v-4.608q0-.936-.684-1.62t-1.62-.684h-11.52v-11.52q0-.936-.684-1.62t-1.62-.684h-4.608q-.936 0-1.62.684t-.684 1.62v11.52h-11.52q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h11.52v11.52q0 .936.684 1.62t1.62.684h4.608q.936 0 1.62-.684t.684-1.62v-11.52h11.52q.936 0 1.62-.684t.684-1.62zm9.216-19.584v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","ANGLE_DOUBLE_LEFT":"M22.572-14.903q0 .468-.36.828l-1.8 1.8q-.36.36-.828.36t-.828-.36l-16.776-16.776q-.36-.36-.36-.828t.36-.828l16.776-16.776q.36-.36.828-.36t.828.36l1.8 1.8q.36.36.36.828t-.36.828l-14.148 14.148 14.148 14.148q.36.36.36.828zm13.824 0q0 .468-.36.828l-1.8 1.8q-.36.36-.828.36t-.828-.36l-16.776-16.776q-.36-.36-.36-.828t.36-.828l16.776-16.776q.36-.36.828-.36t.828.36l1.8 1.8q.36.36.36.828t-.36.828l-14.148 14.148 14.148 14.148q.36.36.36.828z","ANGLE_DOUBLE_RIGHT":"M21.42-29.879q0 .468-.36.828l-16.776 16.776q-.36.36-.828.36t-.828-.36l-1.8-1.8q-.36-.36-.36-.828t.36-.828l14.148-14.148-14.148-14.148q-.36-.36-.36-.828t.36-.828l1.8-1.8q.36-.36.828-.36t.828.36l16.776 16.776q.36.36.36.828zm13.824 0q0 .468-.36.828l-16.776 16.776q-.36.36-.828.36t-.828-.36l-1.8-1.8q-.36-.36-.36-.828t.36-.828l14.148-14.148-14.148-14.148q-.36-.36-.36-.828t.36-.828l1.8-1.8q.36-.36.828-.36t.828.36l16.776 16.776q.36.36.36.828z","ANGLE_DOUBLE_UP":"M38.7-17.207q0 .468-.36.828l-1.8 1.8q-.36.36-.828.36t-.828-.36l-14.148-14.148-14.148 14.148q-.36.36-.828.36t-.828-.36l-1.8-1.8q-.36-.36-.36-.828t.36-.828l16.776-16.776q.36-.36.828-.36t.828.36l16.776 16.776q.36.36.36.828zm0-13.824q0 .468-.36.828l-1.8 1.8q-.36.36-.828.36t-.828-.36l-14.148-14.148-14.148 14.148q-.36.36-.828.36t-.828-.36l-1.8-1.8q-.36-.36-.36-.828t.36-.828l16.776-16.776q.36-.36.828-.36t.828.36l16.776 16.776q.36.36.36.828z","ANGLE_DOUBLE_DOWN":"M38.7-33.335q0 .468-.36.828l-16.776 16.776q-.36.36-.828.36t-.828-.36l-16.776-16.776q-.36-.36-.36-.828t.36-.828l1.8-1.8q.36-.36.828-.36t.828.36l14.148 14.148 14.148-14.148q.36-.36.828-.36t.828.36l1.8 1.8q.36.36.36.828zm0-13.824q0 .468-.36.828l-16.776 16.776q-.36.36-.828.36t-.828-.36l-16.776-16.776q-.36-.36-.36-.828t.36-.828l1.8-1.8q.36-.36.828-.36t.828.36l14.148 14.148 14.148-14.148q.36-.36.828-.36t.828.36l1.8 1.8q.36.36.36.828z","ANGLE_LEFT":"M22.572-44.855q0 .468-.36.828l-14.148 14.148 14.148 14.148q.36.36.36.828t-.36.828l-1.8 1.8q-.36.36-.828.36t-.828-.36l-16.776-16.776q-.36-.36-.36-.828t.36-.828l16.776-16.776q.36-.36.828-.36t.828.36l1.8 1.8q.36.36.36.828z","ANGLE_RIGHT":"M21.42-29.879q0 .468-.36.828l-16.776 16.776q-.36.36-.828.36t-.828-.36l-1.8-1.8q-.36-.36-.36-.828t.36-.828l14.148-14.148-14.148-14.148q-.36-.36-.36-.828t.36-.828l1.8-1.8q.36-.36.828-.36t.828.36l16.776 16.776q.36.36.36.828z","ANGLE_UP":"M38.7-21.815q0 .468-.36.828l-1.8 1.8q-.36.36-.828.36t-.828-.36l-14.148-14.148-14.148 14.148q-.36.36-.828.36t-.828-.36l-1.8-1.8q-.36-.36-.36-.828t.36-.828l16.776-16.776q.36-.36.828-.36t.828.36l16.776 16.776q.36.36.36.828z","ANGLE_DOWN":"M38.7-37.943q0 .468-.36.828l-16.776 16.776q-.36.36-.828.36t-.828-.36l-16.776-16.776q-.36-.36-.36-.828t.36-.828l1.8-1.8q.36-.36.828-.36t.828.36l14.148 14.148 14.148-14.148q.36-.36.828-.36t.828.36l1.8 1.8q.36.36.36.828z","DESKTOP":"M64.512-28.727v-29.952q0-.468-.342-.81t-.81-.342h-57.6q-.468 0-.81.342t-.342.81v29.952q0 .468.342.81t.81.342h57.6q.468 0 .81-.342t.342-.81zm4.608-29.952v39.168q0 2.376-1.692 4.068t-4.068 1.692h-19.584q0 1.332.576 2.79t1.152 2.556.576 1.566q0 .936-.684 1.62t-1.62.684h-18.432q-.936 0-1.62-.684t-.684-1.62q0-.504.576-1.584t1.152-2.52.576-2.808h-19.584q-2.376 0-4.068-1.692t-1.692-4.068v-39.168q0-2.376 1.692-4.068t4.068-1.692h57.6q2.376 0 4.068 1.692t1.692 4.068z","LAPTOP":"M14.976-18.359q-2.376 0-4.068-1.692t-1.692-4.068v-25.344q0-2.376 1.692-4.068t4.068-1.692h39.168q2.376 0 4.068 1.692t1.692 4.068v25.344q0 2.376-1.692 4.068t-4.068 1.692h-39.168zm-1.152-31.104v25.344q0 .468.342.81t.81.342h39.168q.468 0 .81-.342t.342-.81v-25.344q0-.468-.342-.81t-.81-.342h-39.168q-.468 0-.81.342t-.342.81zm49.536 33.408h5.76v3.456q0 1.44-1.692 2.448t-4.068 1.008h-57.6q-2.376 0-4.068-1.008t-1.692-2.448v-3.456h63.36zm-25.92 3.456q.576 0 .576-.576t-.576-.576h-5.76q-.576 0-.576.576t.576.576h5.76z","TABLET":"M23.04-13.751q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm13.824-5.76v-34.56q0-.468-.342-.81t-.81-.342h-29.952q-.468 0-.81.342t-.342.81v34.56q0 .468.342.81t.81.342h29.952q.468 0 .81-.342t.342-.81zm4.608-34.56v39.168q0 2.376-1.692 4.068t-4.068 1.692h-29.952q-2.376 0-4.068-1.692t-1.692-4.068v-39.168q0-2.376 1.692-4.068t4.068-1.692h29.952q2.376 0 4.068 1.692t1.692 4.068z","MOBILE_PHONE":"M16.704-13.751q0-1.188-.846-2.034t-2.034-.846-2.034.846-.846 2.034.846 2.034 2.034.846 2.034-.846.846-2.034zm7.488-5.76v-25.344q0-.468-.342-.81t-.81-.342h-18.432q-.468 0-.81.342t-.342.81v25.344q0 .468.342.81t.81.342h18.432q.468 0 .81-.342t.342-.81zm-6.912-30.528q0-.576-.576-.576h-5.76q-.576 0-.576.576t.576.576h5.76q.576 0 .576-.576zm10.368-.576v36.864q0 1.872-1.368 3.24t-3.24 1.368h-18.432q-1.872 0-3.24-1.368t-1.368-3.24v-36.864q0-1.872 1.368-3.24t3.24-1.368h18.432q1.872 0 3.24 1.368t1.368 3.24z","CIRCLE_O":"M27.648-51.767q-5.328 0-9.828 2.628t-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828-2.628-9.828-7.128-7.128-9.828-2.628zm27.648 19.584q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","QUOTE_LEFT":"M27.648-29.879v13.824q0 2.88-2.016 4.896t-4.896 2.016h-13.824q-2.88 0-4.896-2.016t-2.016-4.896v-25.344q0-3.744 1.458-7.146t3.942-5.886 5.886-3.942 7.146-1.458h2.304q.936 0 1.62.684t.684 1.62v4.608q0 .936-.684 1.62t-1.62.684h-2.304q-3.816 0-6.516 2.7t-2.7 6.516v1.152q0 1.44 1.008 2.448t2.448 1.008h8.064q2.88 0 4.896 2.016t2.016 4.896zm32.256 0v13.824q0 2.88-2.016 4.896t-4.896 2.016h-13.824q-2.88 0-4.896-2.016t-2.016-4.896v-25.344q0-3.744 1.458-7.146t3.942-5.886 5.886-3.942 7.146-1.458h2.304q.936 0 1.62.684t.684 1.62v4.608q0 .936-.684 1.62t-1.62.684h-2.304q-3.816 0-6.516 2.7t-2.7 6.516v1.152q0 1.44 1.008 2.448t2.448 1.008h8.064q2.88 0 4.896 2.016t2.016 4.896z","QUOTE_RIGHT":"M27.648-52.919v25.344q0 3.744-1.458 7.146t-3.942 5.886-5.886 3.942-7.146 1.458h-2.304q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h2.304q3.816 0 6.516-2.7t2.7-6.516v-1.152q0-1.44-1.008-2.448t-2.448-1.008h-8.064q-2.88 0-4.896-2.016t-2.016-4.896v-13.824q0-2.88 2.016-4.896t4.896-2.016h13.824q2.88 0 4.896 2.016t2.016 4.896zm32.256 0v25.344q0 3.744-1.458 7.146t-3.942 5.886-5.886 3.942-7.146 1.458h-2.304q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h2.304q3.816 0 6.516-2.7t2.7-6.516v-1.152q0-1.44-1.008-2.448t-2.448-1.008h-8.064q-2.88 0-4.896-2.016t-2.016-4.896v-13.824q0-2.88 2.016-4.896t4.896-2.016h13.824q2.88 0 4.896 2.016t2.016 4.896z","SPINNER":"M18.936-14.255q0 1.908-1.35 3.258t-3.258 1.35q-1.872 0-3.24-1.368t-1.368-3.24q0-1.908 1.35-3.258t3.258-1.35 3.258 1.35 1.35 3.258zm17.928 7.416q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm-25.344-25.344q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm43.272 17.928q0 1.872-1.368 3.24t-3.24 1.368q-1.908 0-3.258-1.35t-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm-34.704-35.856q0 2.376-1.692 4.068t-4.068 1.692-4.068-1.692-1.692-4.068 1.692-4.068 4.068-1.692 4.068 1.692 1.692 4.068zm42.12 17.928q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm-23.04-25.344q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm19.08 7.416q0 3.348-2.376 5.706t-5.688 2.358q-3.348 0-5.706-2.358t-2.358-5.706q0-3.312 2.358-5.688t5.706-2.376q3.312 0 5.688 2.376t2.376 5.688z","CIRCLE":"M55.296-32.183q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","REPLY":"M64.512-24.119q0 5.976-4.572 16.236-.108.252-.378.864t-.486 1.08-.468.792q-.432.612-1.008.612-.54 0-.846-.36t-.306-.9q0-.324.09-.954t.09-.846q.18-2.448.18-4.428 0-3.636-.63-6.516t-1.746-4.986-2.88-3.636-3.798-2.502-4.788-1.53-5.544-.774-6.318-.216h-8.064v9.216q0 .936-.684 1.62t-1.62.684-1.62-.684l-18.432-18.432q-.684-.684-.684-1.62t.684-1.62l18.432-18.432q.684-.684 1.62-.684t1.62.684.684 1.62v9.216h8.064q25.668 0 31.5 14.508 1.908 4.824 1.908 11.988z","GITHUB_ALT":"M23.04-20.663q0 1.44-.45 2.952t-1.548 2.736-2.61 1.224-2.61-1.224-1.548-2.736-.45-2.952.45-2.952 1.548-2.736 2.61-1.224 2.61 1.224 1.548 2.736.45 2.952zm23.04 0q0 1.44-.45 2.952t-1.548 2.736-2.61 1.224-2.61-1.224-1.548-2.736-.45-2.952.45-2.952 1.548-2.736 2.61-1.224 2.61 1.224 1.548 2.736.45 2.952zm5.76 0q0-4.32-2.484-7.344t-6.732-3.024q-1.476 0-7.02.756-2.556.396-5.652.396t-5.652-.396q-5.472-.756-7.02-.756-4.248 0-6.732 3.024t-2.484 7.344q0 3.168 1.152 5.526t2.916 3.708 4.392 2.16 5.04 1.062 5.364.252h6.048q2.952 0 5.364-.252t5.04-1.062 4.392-2.16 2.916-3.708 1.152-5.526zm8.064-6.336q0 7.452-2.196 11.916-1.368 2.772-3.798 4.788t-5.076 3.096-6.12 1.71-6.174.792-6.012.162q-2.808 0-5.112-.108t-5.31-.45-5.49-1.08-4.932-1.854-4.356-2.916-3.096-4.14q-2.232-4.428-2.232-11.916 0-8.532 4.896-14.256-.972-2.952-.972-6.12 0-4.176 1.836-7.848 3.888 0 6.84 1.422t6.804 4.446q5.292-1.26 11.124-1.26 5.328 0 10.08 1.152 3.78-2.952 6.732-4.356t6.804-1.404q1.836 3.672 1.836 7.848 0 3.132-.972 6.048 4.896 5.76 4.896 14.328z","FOLDER_O":"M55.296-17.207v-25.344q0-1.44-1.008-2.448t-2.448-1.008h-25.344q-1.44 0-2.448-1.008t-1.008-2.448v-2.304q0-1.44-1.008-2.448t-2.448-1.008h-11.52q-1.44 0-2.448 1.008t-1.008 2.448v34.56q0 1.44 1.008 2.448t2.448 1.008h43.776q1.44 0 2.448-1.008t1.008-2.448zm4.608-25.344v25.344q0 3.312-2.376 5.688t-5.688 2.376h-43.776q-3.312 0-5.688-2.376t-2.376-5.688v-34.56q0-3.312 2.376-5.688t5.688-2.376h11.52q3.312 0 5.688 2.376t2.376 5.688v1.152h24.192q3.312 0 5.688 2.376t2.376 5.688z","FOLDER_OPEN_O":"M64.116-30.923q0-1.26-1.908-1.26h-39.168q-1.44 0-3.078.774t-2.574 1.89l-10.584 13.068q-.648.864-.648 1.44 0 1.26 1.908 1.26h39.168q1.44 0 3.096-.792t2.556-1.908l10.584-13.068q.648-.792.648-1.404zm-41.076-5.868h27.648v-5.76q0-1.44-1.008-2.448t-2.448-1.008h-20.736q-1.44 0-2.448-1.008t-1.008-2.448v-2.304q0-1.44-1.008-2.448t-2.448-1.008h-11.52q-1.44 0-2.448 1.008t-1.008 2.448v30.708l9.216-11.34q1.584-1.908 4.176-3.15t5.04-1.242zm45.684 5.868q0 2.232-1.656 4.32l-10.62 13.068q-1.548 1.908-4.176 3.15t-5.04 1.242h-39.168q-3.312 0-5.688-2.376t-2.376-5.688v-34.56q0-3.312 2.376-5.688t5.688-2.376h11.52q3.312 0 5.688 2.376t2.376 5.688v1.152h19.584q3.312 0 5.688 2.376t2.376 5.688v5.76h6.912q1.944 0 3.564.882t2.412 2.538q.54 1.152.54 2.448z","SMILE_O":"M40.824-25.739q-1.332 4.356-4.968 7.02t-8.208 2.664-8.208-2.664-4.968-7.02q-.288-.9.144-1.746t1.368-1.134q.9-.288 1.746.144t1.134 1.368q.9 2.88 3.33 4.662t5.454 1.782 5.454-1.782 3.33-4.662q.288-.936 1.152-1.368t1.764-.144 1.332 1.134.144 1.746zm-17.784-15.66q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm18.432 0q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm9.216 9.216q0-4.68-1.836-8.946t-4.914-7.344-7.344-4.914-8.946-1.836-8.946 1.836-7.344 4.914-4.914 7.344-1.836 8.946 1.836 8.946 4.914 7.344 7.344 4.914 8.946 1.836 8.946-1.836 7.344-4.914 4.914-7.344 1.836-8.946zm4.608 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","FROWN_O":"M40.824-20.195q.288.9-.144 1.746t-1.332 1.134-1.764-.144-1.152-1.368q-.9-2.88-3.33-4.662t-5.454-1.782-5.454 1.782-3.33 4.662q-.288.936-1.134 1.368t-1.746.144q-.936-.288-1.368-1.134t-.144-1.746q1.332-4.356 4.968-7.02t8.208-2.664 8.208 2.664 4.968 7.02zm-17.784-21.204q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm18.432 0q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm9.216 9.216q0-4.68-1.836-8.946t-4.914-7.344-7.344-4.914-8.946-1.836-8.946 1.836-7.344 4.914-4.914 7.344-1.836 8.946 1.836 8.946 4.914 7.344 7.344 4.914 8.946 1.836 8.946-1.836 7.344-4.914 4.914-7.344 1.836-8.946zm4.608 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","MEH_O":"M41.472-25.271q0 .936-.684 1.62t-1.62.684h-23.04q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h23.04q.936 0 1.62.684t.684 1.62zm-18.432-16.128q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm18.432 0q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm9.216 9.216q0-4.68-1.836-8.946t-4.914-7.344-7.344-4.914-8.946-1.836-8.946 1.836-7.344 4.914-4.914 7.344-1.836 8.946 1.836 8.946 4.914 7.344 7.344 4.914 8.946 1.836 8.946-1.836 7.344-4.914 4.914-7.344 1.836-8.946zm4.608 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","GAMEPAD":"M29.952-25.271v-4.608q0-.504-.324-.828t-.828-.324h-6.912v-6.912q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v6.912h-6.912q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h6.912v6.912q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828v-6.912h6.912q.504 0 .828-.324t.324-.828zm20.736 2.304q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm9.216-9.216q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm9.216 4.608q0 7.632-5.4 13.032t-13.032 5.4q-6.912 0-12.168-4.608h-7.92q-5.256 4.608-12.168 4.608-7.632 0-13.032-5.4t-5.4-13.032 5.4-13.032 13.032-5.4h32.256q7.632 0 13.032 5.4t5.4 13.032z","KEYBOARD_O":"M13.824-22.391v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm4.608-9.216v3.456q0 .576-.576.576h-8.064q-.576 0-.576-.576v-3.456q0-.576.576-.576h8.064q.576 0 .576.576zm-4.608-9.216v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm36.864 18.432v3.456q0 .576-.576.576h-31.104q-.576 0-.576-.576v-3.456q0-.576.576-.576h31.104q.576 0 .576.576zm-23.04-9.216v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm-4.608-9.216v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm13.824 9.216v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm-4.608-9.216v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm13.824 9.216v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm13.824 9.216v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm-18.432-18.432v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm9.216 0v3.456q0 .576-.576.576h-3.456q-.576 0-.576-.576v-3.456q0-.576.576-.576h3.456q.576 0 .576.576zm9.216 0v12.672q0 .576-.576.576h-8.064q-.576 0-.576-.576v-3.456q0-.576.576-.576h4.032v-8.64q0-.576.576-.576h3.456q.576 0 .576.576zm4.608 27.072v-32.256h-59.904v32.256h59.904zm4.608-32.256v32.256q0 1.908-1.35 3.258t-3.258 1.35h-59.904q-1.908 0-3.258-1.35t-1.35-3.258v-32.256q0-1.908 1.35-3.258t3.258-1.35h59.904q1.908 0 3.258 1.35t1.35 3.258z","FLAG_O":"M59.904-26.819v-22.176q-6.084 3.276-11.016 3.276-2.952 0-5.22-1.152-3.6-1.764-6.624-2.754t-6.408-.99q-6.228 0-14.508 4.572v21.564q8.82-4.068 15.588-4.068 1.98 0 3.726.27t3.528.936 2.772 1.116 2.97 1.422l1.008.504q1.584.792 3.636.792 4.32 0 10.548-3.312zm-48.384-28.404q0 1.26-.63 2.304t-1.674 1.656v45.576q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-45.576q-1.044-.612-1.674-1.656t-.63-2.304q0-1.908 1.35-3.258t3.258-1.35 3.258 1.35 1.35 3.258zm52.992 2.304v27.468q0 1.404-1.26 2.052-.36.18-.612.324-7.848 4.176-13.284 4.176-3.168 0-5.688-1.26l-1.008-.504q-2.304-1.188-3.564-1.728t-3.276-1.044-4.104-.504q-3.672 0-8.478 1.584t-8.226 3.672q-.54.324-1.188.324-.576 0-1.152-.288-1.152-.684-1.152-2.016v-26.712q0-1.26 1.116-1.98 1.26-.756 2.826-1.53t4.104-1.872 5.49-1.782 5.58-.684q4.032 0 7.524 1.116t7.524 3.096q1.368.684 3.204.684 4.392 0 11.16-4.032l1.116-.612q1.116-.576 2.232.072 1.116.72 1.116 1.98z","FLAG_CHECKERED":"M29.952-28.439v-6.912q-6.516.576-13.824 4.212v6.66q7.38-3.456 13.824-3.96zm0-15.048v-7.092q-6.192.288-13.824 4.536v6.804q7.74-3.996 13.824-4.248zm29.952 16.668v-6.624q-8.46 4.176-13.824 2.556v-8.064q-.72-.216-1.404-.54-.18-.108-1.188-.612t-1.242-.612-1.134-.54-1.242-.558-1.17-.468-1.296-.45-1.26-.306-1.422-.27-1.422-.144-1.584-.072q-.828 0-1.764.108v7.992h.684q3.672 0 6.93 1.044t7.11 2.952q.684.324 1.404.54v6.768q1.512.612 3.276.612 4.32 0 10.548-3.312zm0-15.372v-6.804q-6.084 3.276-11.016 3.276-1.62 0-2.808-.288v7.056q5.328 1.512 13.824-3.24zm-48.384-13.032q0 1.26-.63 2.304t-1.674 1.656v45.576q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-45.576q-1.044-.612-1.674-1.656t-.63-2.304q0-1.908 1.35-3.258t3.258-1.35 3.258 1.35 1.35 3.258zm52.992 2.304v27.468q0 1.404-1.26 2.052-.36.18-.612.324-7.848 4.176-13.284 4.176-3.168 0-5.688-1.26l-1.008-.504q-2.304-1.188-3.564-1.728t-3.276-1.044-4.104-.504q-3.672 0-8.478 1.584t-8.226 3.672q-.54.324-1.188.324-.576 0-1.152-.288-1.152-.684-1.152-2.016v-26.712q0-1.26 1.116-1.98 1.26-.756 2.826-1.53t4.104-1.872 5.49-1.782 5.58-.684q4.032 0 7.524 1.116t7.524 3.096q1.368.684 3.204.684 4.392 0 11.16-4.032l1.116-.612q1.116-.576 2.232.072 1.116.72 1.116 1.98z","TERMINAL":"M21.06-29.051l-16.776 16.776q-.36.36-.828.36t-.828-.36l-1.8-1.8q-.36-.36-.36-.828t.36-.828l14.148-14.148-14.148-14.148q-.36-.36-.36-.828t.36-.828l1.8-1.8q.36-.36.828-.36t.828.36l16.776 16.776q.36.36.36.828t-.36.828zm38.844 16.452v2.304q0 .504-.324.828t-.828.324h-34.56q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h34.56q.504 0 .828.324t.324.828z","CODE":"M22.212-14.075l-1.8 1.8q-.36.36-.828.36t-.828-.36l-16.776-16.776q-.36-.36-.36-.828t.36-.828l16.776-16.776q.36-.36.828-.36t.828.36l1.8 1.8q.36.36.36.828t-.36.828l-14.148 14.148 14.148 14.148q.36.36.36.828t-.36.828zm21.276-38.412l-13.428 46.476q-.144.468-.558.702t-.846.09l-2.232-.612q-.468-.144-.702-.558t-.09-.882l13.428-46.476q.144-.468.558-.702t.846-.09l2.232.612q.468.144.702.558t.09.882zm23.652 23.436l-16.776 16.776q-.36.36-.828.36t-.828-.36l-1.8-1.8q-.36-.36-.36-.828t.36-.828l14.148-14.148-14.148-14.148q-.36-.36-.36-.828t.36-.828l1.8-1.8q.36-.36.828-.36t.828.36l16.776 16.776q.36.36.36.828t-.36.828z","REPLY_ALL":"M23.04-25.487v2.52q0 1.512-1.404 2.124-.468.18-.9.18-.972 0-1.62-.684l-18.432-18.432q-.684-.684-.684-1.62t.684-1.62l18.432-18.432q1.044-1.116 2.52-.504 1.404.612 1.404 2.124v2.484l-14.292 14.328q-.684.684-.684 1.62t.684 1.62zm41.472 1.368q0 2.088-.612 4.806t-1.386 4.968-1.728 4.5-1.458 3.258l-.72 1.44q-.288.612-1.008.612-.216 0-.324-.036-.9-.288-.828-1.224 1.548-14.4-3.816-20.34-2.304-2.556-6.138-3.978t-9.63-1.89v9.036q0 1.512-1.404 2.124-.468.18-.9.18-.972 0-1.62-.684l-18.432-18.432q-.684-.684-.684-1.62t.684-1.62l18.432-18.432q1.044-1.116 2.52-.504 1.404.612 1.404 2.124v9.432q14.796 1.008 21.564 7.956 6.084 6.228 6.084 18.324z","STAR_HALF_O":"M42.696-29.987l9.252-9-12.816-1.872-2.376-.36-1.08-2.16-5.724-11.592v34.668l2.124 1.116 11.448 6.048-2.16-12.78-.432-2.376zm16.272-9.432l-13.068 12.744 3.096 18q.18 1.188-.216 1.854t-1.224.666q-.612 0-1.44-.432l-16.164-8.496-16.164 8.496q-.828.432-1.44.432-.828 0-1.224-.666t-.216-1.854l3.096-18-13.104-12.744q-1.152-1.152-.828-2.142t1.944-1.242l18.072-2.628 8.1-16.38q.72-1.476 1.764-1.476 1.008 0 1.764 1.476l8.1 16.38 18.072 2.628q1.62.252 1.944 1.242t-.864 2.142z","LOCATION_ARROW":"M50.436-51.875l-23.04 46.08q-.612 1.26-2.052 1.26-.18 0-.54-.072-.792-.18-1.278-.81t-.486-1.422v-20.736h-20.736q-.792 0-1.422-.486t-.81-1.278.144-1.512 1.044-1.08l46.08-23.04q.468-.252 1.044-.252.972 0 1.62.684.54.504.666 1.242t-.234 1.422z","CROP":"M20.052-18.359h21.42v-21.42zm-1.62-1.62l21.42-21.42h-21.42v21.42zm41.472 2.772v6.912q0 .504-.324.828t-.828.324h-8.064v8.064q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-8.064h-31.104q-.504 0-.828-.324t-.324-.828v-31.104h-8.064q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h8.064v-8.064q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v8.064h30.636l8.856-8.892q.36-.324.828-.324t.828.324q.324.36.324.828t-.324.828l-8.892 8.856v30.636h8.064q.504 0 .828.324t.324.828z","CODE_FORK":"M10.368-11.447q0-1.44-1.008-2.448t-2.448-1.008-2.448 1.008-1.008 2.448 1.008 2.448 2.448 1.008 2.448-1.008 1.008-2.448zm0-41.472q0-1.44-1.008-2.448t-2.448-1.008-2.448 1.008-1.008 2.448 1.008 2.448 2.448 1.008 2.448-1.008 1.008-2.448zm23.04 4.608q0-1.44-1.008-2.448t-2.448-1.008-2.448 1.008-1.008 2.448 1.008 2.448 2.448 1.008 2.448-1.008 1.008-2.448zm3.456 0q0 1.872-.936 3.474t-2.52 2.502q-.072 10.332-8.136 14.904-2.448 1.368-7.308 2.916-4.608 1.44-6.102 2.556t-1.494 3.6v.936q1.584.9 2.52 2.502t.936 3.474q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896q0-1.872.936-3.474t2.52-2.502v-29.52q-1.584-.9-2.52-2.502t-.936-3.474q0-2.88 2.016-4.896t4.896-2.016 4.896 2.016 2.016 4.896q0 1.872-.936 3.474t-2.52 2.502v17.892q1.944-.936 5.544-2.052 1.98-.612 3.15-1.062t2.538-1.116 2.124-1.422 1.458-1.836 1.008-2.502.306-3.294q-1.584-.9-2.52-2.502t-.936-3.474q0-2.88 2.016-4.896t4.896-2.016 4.896 2.016 2.016 4.896z","UNLINK":"M15.804-18.683l-9.216 9.216q-.36.324-.828.324-.432 0-.828-.324-.324-.36-.324-.828t.324-.828l9.216-9.216q.36-.324.828-.324t.828.324q.324.36.324.828t-.324.828zm6.084 1.476v11.52q0 .504-.324.828t-.828.324-.828-.324-.324-.828v-11.52q0-.504.324-.828t.828-.324.828.324.324.828zm-8.064-8.064q0 .504-.324.828t-.828.324h-11.52q-.504 0-.828-.324t-.324-.828.324-.828.828-.324h11.52q.504 0 .828.324t.324.828zm45.504 4.608q0 4.32-3.06 7.308l-5.292 5.256q-2.988 2.988-7.308 2.988-4.356 0-7.344-3.06l-12.024-12.06q-.756-.756-1.512-2.016l8.604-.648 9.828 9.864q.972.972 2.448.99t2.448-.954l5.292-5.256q1.008-1.008 1.008-2.412 0-1.44-1.008-2.448l-9.864-9.9.648-8.604q1.26.756 2.016 1.512l12.096 12.096q3.024 3.096 3.024 7.344zm-22.212-26.064l-8.604.648-9.828-9.864q-1.008-1.008-2.448-1.008-1.404 0-2.448.972l-5.292 5.256q-1.008 1.008-1.008 2.412 0 1.44 1.008 2.448l9.864 9.864-.648 8.64q-1.26-.756-2.016-1.512l-12.096-12.096q-3.024-3.096-3.024-7.344 0-4.32 3.06-7.308l5.292-5.256q2.988-2.988 7.308-2.988 4.356 0 7.344 3.06l12.024 12.06q.756.756 1.512 2.016zm22.788 3.024q0 .504-.324.828t-.828.324h-11.52q-.504 0-.828-.324t-.324-.828.324-.828.828-.324h11.52q.504 0 .828.324t.324.828zm-19.584-19.584v11.52q0 .504-.324.828t-.828.324-.828-.324-.324-.828v-11.52q0-.504.324-.828t.828-.324.828.324.324.828zm14.652 5.436l-9.216 9.216q-.396.324-.828.324t-.828-.324q-.324-.36-.324-.828t.324-.828l9.216-9.216q.36-.324.828-.324t.828.324q.324.36.324.828t-.324.828z","QUESTION":"M25.344-19.223v8.64q0 .576-.432 1.008t-1.008.432h-8.64q-.576 0-1.008-.432t-.432-1.008v-8.64q0-.576.432-1.008t1.008-.432h8.64q.576 0 1.008.432t.432 1.008zm11.376-21.6q0 1.944-.558 3.636t-1.26 2.754-1.98 2.142-2.07 1.566-2.196 1.278q-1.476.828-2.466 2.34t-.99 2.412q0 .612-.432 1.17t-1.008.558h-8.64q-.54 0-.918-.666t-.378-1.35v-1.62q0-2.988 2.34-5.634t5.148-3.906q2.124-.972 3.024-2.016t.9-2.736q0-1.512-1.674-2.664t-3.87-1.152q-2.34 0-3.888 1.044-1.26.9-3.852 4.14-.468.576-1.116.576-.432 0-.9-.288l-5.904-4.5q-.468-.36-.558-.9t.198-1.008q5.76-9.576 16.704-9.576 2.88 0 5.796 1.116t5.256 2.988 3.816 4.59 1.476 5.706z","INFO":"M23.04-16.055v4.608q0 .936-.684 1.62t-1.62.684h-18.432q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h2.304v-13.824h-2.304q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h13.824q.936 0 1.62.684t.684 1.62v20.736h2.304q.936 0 1.62.684t.684 1.62zm-4.608-41.472v6.912q0 .936-.684 1.62t-1.62.684h-9.216q-.936 0-1.62-.684t-.684-1.62v-6.912q0-.936.684-1.62t1.62-.684h9.216q.936 0 1.62.684t.684 1.62z","EXCLAMATION":"M18.432-19.511v8.064q0 .936-.684 1.62t-1.62.684h-9.216q-.936 0-1.62-.684t-.684-1.62v-8.064q0-.936.684-1.62t1.62-.684h9.216q.936 0 1.62.684t.684 1.62zm1.08-38.016l-1.008 27.648q-.036.936-.738 1.62t-1.638.684h-9.216q-.936 0-1.638-.684t-.738-1.62l-1.008-27.648q-.036-.936.63-1.62t1.602-.684h11.52q.936 0 1.602.684t.63 1.62z","SUPERSCRIPT":"M32.292-15.155v6.012h-8.928l-5.724-9.072-.864-1.512q-.288-.324-.396-.756h-.108l-.324.756q-.36.72-.9 1.584l-5.58 9h-9.288v-6.012h4.608l7.092-10.476-6.66-9.792h-4.932v-6.048h9.936l5.004 8.208q.072.144.828 1.512.288.324.396.756h.108q.108-.324.396-.756l.9-1.512 5.04-8.208h9.252v6.048h-4.5l-6.624 9.612 7.344 10.656h3.924zm22.932-24.444v7.416h-18.504l-.108-.972q-.144-1.008-.144-1.656 0-2.304.936-4.212t2.34-3.114 3.024-2.34 3.024-1.962 2.34-1.944.936-2.304q0-1.368-1.062-2.25t-2.538-.882q-1.836 0-3.492 1.404-.504.396-1.296 1.368l-3.78-3.312q.936-1.332 2.268-2.376 2.988-2.34 6.768-2.34 3.96 0 6.408 2.142t2.448 5.706q0 2.016-.882 3.708t-2.232 2.754-2.934 2.106-2.952 1.818-2.358 1.854-1.098 2.268h8.352v-2.88h4.536z","SUBSCRIPT":"M32.292-15.155v6.012h-8.928l-5.724-9.072-.864-1.512q-.288-.324-.396-.756h-.108l-.324.756q-.36.72-.9 1.584l-5.58 9h-9.288v-6.012h4.608l7.092-10.476-6.66-9.792h-4.932v-6.048h9.936l5.004 8.208q.072.144.828 1.512.288.324.396.756h.108q.108-.324.396-.756l.9-1.512 5.04-8.208h9.252v6.048h-4.5l-6.624 9.612 7.344 10.656h3.924zm23.004 7.812v7.416h-18.504l-.144-.972-.108-1.656q0-2.304.936-4.212t2.34-3.114 3.024-2.34 3.024-1.962 2.34-1.944.936-2.304q0-1.368-1.062-2.25t-2.538-.882q-1.836 0-3.492 1.404-.504.396-1.296 1.368l-3.78-3.312q.936-1.332 2.268-2.376 2.88-2.34 6.768-2.34 3.96 0 6.408 2.142t2.448 5.706q0 2.376-1.242 4.266t-3.024 3.096-3.582 2.25-3.132 2.268-1.476 2.628h8.352v-2.88h4.536z","ERASER":"M32.256-13.751l12.096-13.824h-27.648l-12.096 13.824h27.648zm36.468-38.772q.54 1.224.342 2.574t-1.098 2.358l-32.256 36.864q-1.368 1.584-3.456 1.584h-27.648q-1.368 0-2.502-.738t-1.71-1.962q-.54-1.224-.342-2.574t1.098-2.358l32.256-36.864q1.368-1.584 3.456-1.584h27.648q1.368 0 2.502.738t1.71 1.962z","PUZZLE_PIECE":"M59.904-24.911q0 2.916-1.602 4.86t-4.446 1.944q-1.476 0-2.79-.63t-2.124-1.368-2.034-1.368-2.556-.63q-3.96 0-3.96 4.464 0 1.404.576 4.14t.54 4.14v.18q-.792 0-1.188.036-1.224.108-3.51.414t-4.158.486-3.528.18q-2.196 0-3.708-.954t-1.512-3.006q0-1.332.63-2.556t1.368-2.034 1.368-2.124.63-2.79q0-2.844-1.944-4.446t-4.86-1.602q-3.024 0-5.148 1.638t-2.124 4.59q0 1.548.54 2.988t1.206 2.322 1.206 1.908.54 1.818q0 1.62-1.656 3.204-1.332 1.26-4.212 1.26-3.42 0-8.82-.864-.324-.072-.99-.144t-.99-.144l-.468-.072-.108-.036-.072-.036v-36.864q.072.036.63.126t1.224.18.774.126q5.4.864 8.82.864 2.88 0 4.212-1.26 1.656-1.584 1.656-3.204 0-.792-.54-1.818t-1.206-1.908-1.206-2.322-.54-2.988q0-2.952 2.124-4.59t5.184-1.638q2.88 0 4.824 1.602t1.944 4.446q0 1.476-.63 2.79t-1.368 2.124-1.368 2.034-.63 2.556q0 2.052 1.512 3.006t3.708.954q2.304 0 6.48-.54t5.868-.612v.072q-.036.072-.126.63t-.18 1.224-.126.774q-.864 5.4-.864 8.82 0 2.88 1.26 4.212 1.584 1.656 3.204 1.656.792 0 1.818-.54t1.908-1.206 2.322-1.206 2.988-.54q2.952 0 4.59 2.124t1.638 5.148z","MICROPHONE":"M41.472-39.095v4.608q0 7.956-5.31 13.842t-13.122 6.75v4.752h9.216q.936 0 1.62.684t.684 1.62-.684 1.62-1.62.684h-23.04q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h9.216v-4.752q-7.812-.864-13.122-6.75t-5.31-13.842v-4.608q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62v4.608q0 6.66 4.734 11.394t11.394 4.734 11.394-4.734 4.734-11.394v-4.608q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62zm-9.216-13.824v18.432q0 4.752-3.384 8.136t-8.136 3.384-8.136-3.384-3.384-8.136v-18.432q0-4.752 3.384-8.136t8.136-3.384 8.136 3.384 3.384 8.136z","MICROPHONE_SLASH":"M9.756-30.419l-3.636 3.636q-1.512-3.708-1.512-7.704v-4.608q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62v4.608q0 1.908.54 4.068zm40.104-21.672l-12.996 12.996v4.608q0 4.752-3.384 8.136t-8.136 3.384q-1.98 0-3.924-.684l-3.456 3.456q3.492 1.836 7.38 1.836 6.66 0 11.394-4.734t4.734-11.394v-4.608q0-.936.684-1.62t1.62-.684 1.62.684.684 1.62v4.608q0 7.956-5.31 13.842t-13.122 6.75v4.752h9.216q.936 0 1.62.684t.684 1.62-.684 1.62-1.62.684h-23.04q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h9.216v-4.752q-4.5-.468-8.46-2.916l-9.144 9.144q-.36.36-.828.36t-.828-.36l-2.952-2.952q-.36-.36-.36-.828t.36-.828l44.424-44.424q.36-.36.828-.36t.828.36l2.952 2.952q.36.36.36.828t-.36.828zm-13.68-4.752l-22.356 22.356v-18.432q0-4.752 3.384-8.136t8.136-3.384q3.672 0 6.642 2.124t4.194 5.472z","SHIELD":"M39.168-29.879v-23.04h-16.128v40.932q4.284-2.268 7.668-4.932 8.46-6.624 8.46-12.96zm6.912-27.648v27.648q0 3.096-1.206 6.138t-2.988 5.4-4.248 4.59-4.554 3.708-4.356 2.79-3.222 1.782-1.53.72q-.432.216-.936.216t-.936-.216q-.576-.252-1.53-.72t-3.222-1.782-4.356-2.79-4.554-3.708-4.248-4.59-2.988-5.4-1.206-6.138v-27.648q0-.936.684-1.62t1.62-.684h41.472q.936 0 1.62.684t.684 1.62z","CALENDAR_O":"M4.608-4.535h50.688v-36.864h-50.688v36.864zm13.824-43.776v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm27.648 0v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm13.824-2.304v46.08q0 1.872-1.368 3.24t-3.24 1.368h-50.688q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h4.608v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h13.824v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h4.608q1.872 0 3.24 1.368t1.368 3.24z","FIRE_EXTINGUISHER":"M18.432-57.527q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm32.256-1.152v11.52q0 .576-.432.9-.288.252-.72.252-.144 0-.252-.036l-16.128-3.456q-.396-.072-.648-.396t-.252-.72h-9.216v3.672q3.996.828 6.606 3.996t2.61 7.308v28.8q0 .936-.684 1.62t-1.62.684h-18.432q-.936 0-1.62-.684t-.684-1.62v-28.8q0-3.816 2.25-6.858t5.814-4.122v-3.996h-1.152q-2.124 0-4.14.846t-3.294 1.908-2.376 2.394-1.458 1.926-.504.882q-.612 1.26-2.052 1.26-.576 0-1.044-.252-.828-.432-1.134-1.332t.126-1.764q.18-.36.522-.936t1.35-1.926 2.178-2.52 3.06-2.412 3.906-1.89q-.9-1.512-.9-3.096 0-2.376 1.692-4.068t4.068-1.692 4.068 1.692 1.692 4.068q0 1.188-.504 2.304h10.872q0-.396.252-.72t.648-.396l16.128-3.456q.108-.036.252-.036.432 0 .72.252.432.324.432.9z","ROCKET":"M51.84-48.311q0-1.44-1.008-2.448t-2.448-1.008-2.448 1.008-1.008 2.448 1.008 2.448 2.448 1.008 2.448-1.008 1.008-2.448zm8.064-10.368q0 8.964-2.718 15.498t-9.126 12.978q-2.916 2.88-7.02 6.336l-.72 13.644q-.072.576-.576.936l-13.824 8.064q-.252.144-.576.144-.432 0-.828-.324l-2.304-2.304q-.468-.504-.288-1.152l3.06-9.936-10.116-10.116-9.936 3.06q-.108.036-.324.036-.504 0-.828-.324l-2.304-2.304q-.612-.684-.18-1.404l8.064-13.824q.36-.504.936-.576l13.644-.72q3.456-4.104 6.336-7.02 6.768-6.732 12.888-9.288t15.516-2.556q.504 0 .864.342t.36.81z","MAXCDN":"M62.82-36.611l-5.904 27.468h-12.024l6.408-29.952q.468-2.016-.54-3.168-.972-1.188-2.988-1.188h-6.084l-7.344 34.308h-12.024l7.344-34.308h-10.296l-7.344 34.308h-12.024l7.344-34.308-5.508-11.772h45.936q3.636 0 6.822 1.458t5.31 4.086q2.16 2.628 2.916 6.066t0 7.002z","CHEVRON_CIRCLE_LEFT":"M32.724-14.219l3.672-3.672q.684-.684.684-1.62t-.684-1.62l-11.052-11.052 11.052-11.052q.684-.684.684-1.62t-.684-1.62l-3.672-3.672q-.684-.684-1.62-.684t-1.62.684l-16.344 16.344q-.684.684-.684 1.62t.684 1.62l16.344 16.344q.684.684 1.62.684t1.62-.684zm22.572-17.964q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","CHEVRON_CIRCLE_RIGHT":"M25.812-14.219l16.344-16.344q.684-.684.684-1.62t-.684-1.62l-16.344-16.344q-.684-.684-1.62-.684t-1.62.684l-3.672 3.672q-.684.684-.684 1.62t.684 1.62l11.052 11.052-11.052 11.052q-.684.684-.684 1.62t.684 1.62l3.672 3.672q.684.684 1.62.684t1.62-.684zm29.484-17.964q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","CHEVRON_CIRCLE_UP":"M41.94-23.435l3.672-3.672q.684-.684.684-1.62t-.684-1.62l-16.344-16.344q-.684-.684-1.62-.684t-1.62.684l-16.344 16.344q-.684.684-.684 1.62t.684 1.62l3.672 3.672q.684.684 1.62.684t1.62-.684l11.052-11.052 11.052 11.052q.684.684 1.62.684t1.62-.684zm13.356-8.748q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","CHEVRON_CIRCLE_DOWN":"M29.268-17.675l16.344-16.344q.684-.684.684-1.62t-.684-1.62l-3.672-3.672q-.684-.684-1.62-.684t-1.62.684l-11.052 11.052-11.052-11.052q-.684-.684-1.62-.684t-1.62.684l-3.672 3.672q-.684.684-.684 1.62t.684 1.62l16.344 16.344q.684.684 1.62.684t1.62-.684zm26.028-14.508q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","HTML5":"M40.68-42.947l.576-6.3h-31.824l1.692 19.224h22.032l-.792 8.208-7.092 1.908-7.056-1.908-.468-5.04h-6.3l.792 10.008 13.032 3.6h.144v-.036l12.924-3.564 1.8-19.584h-23.184l-.54-6.516h24.264zm-40.68-16.884h50.688l-4.608 51.768-20.808 5.832-20.664-5.832z","CSS3":"M9.9-59.831h54.18l-9.576 47.988-28.944 9.612-25.128-9.612 2.556-12.816h10.692l-1.044 5.292 15.192 5.796 17.496-5.796 2.448-12.204h-43.488l2.088-10.692h43.524l1.368-6.876h-43.488z","ANCHOR":"M34.56-55.223q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62.684 1.62 1.62.684 1.62-.684.684-1.62zm29.952 33.408v12.672q0 .792-.72 1.08-.288.072-.432.072-.468 0-.828-.324l-3.348-3.348q-4.284 5.148-11.466 8.154t-15.462 3.006-15.462-3.006-11.466-8.154l-3.348 3.348q-.324.324-.828.324-.144 0-.432-.072-.72-.288-.72-1.08v-12.672q0-.504.324-.828t.828-.324h12.672q.792 0 1.08.72.288.684-.252 1.26l-3.6 3.6q2.412 3.276 6.822 5.526t9.774 2.97v-23.292h-6.912q-.936 0-1.62-.684t-.684-1.62v-4.608q0-.936.684-1.62t1.62-.684h6.912v-5.868q-2.088-1.224-3.348-3.33t-1.26-4.626q0-3.816 2.7-6.516t6.516-2.7 6.516 2.7 2.7 6.516q0 2.52-1.26 4.626t-3.348 3.33v5.868h6.912q.936 0 1.62.684t.684 1.62v4.608q0 .936-.684 1.62t-1.62.684h-6.912v23.292q5.364-.72 9.774-2.97t6.822-5.526l-3.6-3.6q-.54-.576-.252-1.26.288-.72 1.08-.72h12.672q.504 0 .828.324t.324.828z","UNLOCK_ALT":"M38.016-36.791q1.44 0 2.448 1.008t1.008 2.448v20.736q0 1.44-1.008 2.448t-2.448 1.008h-34.56q-1.44 0-2.448-1.008t-1.008-2.448v-20.736q0-1.44 1.008-2.448t2.448-1.008h1.152v-11.52q0-6.66 4.734-11.394t11.394-4.734 11.394 4.734 4.734 11.394q0 .936-.684 1.62t-1.62.684h-2.304q-.936 0-1.62-.684t-.684-1.62q0-3.816-2.7-6.516t-6.516-2.7-6.516 2.7-2.7 6.516v11.52h26.496z","BULLSEYE":"M36.864-32.183q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516 2.7-6.516 6.516-2.7 6.516 2.7 2.7 6.516zm4.608 0q0-5.724-4.05-9.774t-9.774-4.05-9.774 4.05-4.05 9.774 4.05 9.774 9.774 4.05 9.774-4.05 4.05-9.774zm4.608 0q0 7.632-5.4 13.032t-13.032 5.4-13.032-5.4-5.4-13.032 5.4-13.032 13.032-5.4 13.032 5.4 5.4 13.032zm4.608 0q0-4.68-1.836-8.946t-4.914-7.344-7.344-4.914-8.946-1.836-8.946 1.836-7.344 4.914-4.914 7.344-1.836 8.946 1.836 8.946 4.914 7.344 7.344 4.914 8.946 1.836 8.946-1.836 7.344-4.914 4.914-7.344 1.836-8.946zm4.608 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","ELLIPSIS_H":"M13.824-37.943v6.912q0 1.44-1.008 2.448t-2.448 1.008h-6.912q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h6.912q1.44 0 2.448 1.008t1.008 2.448zm18.432 0v6.912q0 1.44-1.008 2.448t-2.448 1.008h-6.912q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h6.912q1.44 0 2.448 1.008t1.008 2.448zm18.432 0v6.912q0 1.44-1.008 2.448t-2.448 1.008h-6.912q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h6.912q1.44 0 2.448 1.008t1.008 2.448z","ELLIPSIS_V":"M13.824-19.511v6.912q0 1.44-1.008 2.448t-2.448 1.008h-6.912q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h6.912q1.44 0 2.448 1.008t1.008 2.448zm0-18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-6.912q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h6.912q1.44 0 2.448 1.008t1.008 2.448zm0-18.432v6.912q0 1.44-1.008 2.448t-2.448 1.008h-6.912q-1.44 0-2.448-1.008t-1.008-2.448v-6.912q0-1.44 1.008-2.448t2.448-1.008h6.912q1.44 0 2.448 1.008t1.008 2.448z","RSS_SQUARE":"M18.432-18.359q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm12.636 3.384q-.468-8.352-6.372-14.256t-14.256-6.372q-.504-.036-.864.324t-.36.828v4.608q0 .468.306.792t.774.36q5.544.396 9.504 4.356t4.356 9.504q.036.468.36.774t.792.306h4.608q.468 0 .828-.36t.324-.864zm13.824.036q-.18-5.544-2.016-10.71t-5.022-9.36-7.38-7.38-9.36-5.022-10.71-2.016q-.504-.036-.828.324-.36.36-.36.828v4.608q0 .468.324.792t.792.36q7.344.252 13.608 4.014t10.026 10.026 4.014 13.608q.036.468.36.792t.792.324h4.608q.468 0 .828-.36.396-.324.324-.828zm10.404-34.524v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","PLAY_CIRCLE":"M27.648-59.831q7.524 0 13.878 3.708t10.062 10.062 3.708 13.878-3.708 13.878-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708zm13.824 29.628q1.152-.648 1.152-1.98t-1.152-1.98l-19.584-11.52q-1.116-.684-2.304-.036-1.152.684-1.152 2.016v23.04q0 1.332 1.152 2.016.576.288 1.152.288.612 0 1.152-.324z","TICKET":"M36.864-48.167l11.376 11.376-20.592 20.592-11.376-11.376zm-7.596 35.244l22.248-22.248q.684-.684.684-1.62t-.684-1.62l-13.032-13.032q-.648-.648-1.62-.648t-1.62.648l-22.248 22.248q-.684.684-.684 1.62t.684 1.62l13.032 13.032q.648.648 1.62.648t1.62-.648zm32.004-22.932l-32.652 32.688q-1.332 1.332-3.258 1.332t-3.258-1.332l-4.536-4.536q2.016-2.016 2.016-4.896t-2.016-4.896-4.896-2.016-4.896 2.016l-4.5-4.536q-1.332-1.332-1.332-3.258t1.332-3.258l32.652-32.616q1.332-1.332 3.258-1.332t3.258 1.332l4.5 4.5q-2.016 2.016-2.016 4.896t2.016 4.896 4.896 2.016 4.896-2.016l4.536 4.5q1.332 1.332 1.332 3.258t-1.332 3.258z","MINUS_SQUARE":"M46.08-29.879v-4.608q0-.936-.684-1.62t-1.62-.684h-32.256q-.936 0-1.62.684t-.684 1.62v4.608q0 .936.684 1.62t1.62.684h32.256q.936 0 1.62-.684t.684-1.62zm9.216-19.584v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","MINUS_SQUARE_O":"M41.472-35.639v2.304q0 .504-.324.828t-.828.324h-29.952q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h29.952q.504 0 .828.324t.324.828zm4.608 16.128v-29.952q0-2.376-1.692-4.068t-4.068-1.692h-29.952q-2.376 0-4.068 1.692t-1.692 4.068v29.952q0 2.376 1.692 4.068t4.068 1.692h29.952q2.376 0 4.068-1.692t1.692-4.068zm4.608-29.952v29.952q0 4.284-3.042 7.326t-7.326 3.042h-29.952q-4.284 0-7.326-3.042t-3.042-7.326v-29.952q0-4.284 3.042-7.326t7.326-3.042h29.952q4.284 0 7.326 3.042t3.042 7.326z","LEVEL_UP":"M36.648-42.731q-.648 1.332-2.088 1.332h-6.912v31.104q0 .504-.324.828t-.828.324h-25.344q-.756 0-1.044-.648-.288-.72.144-1.26l5.76-6.912q.324-.396.9-.396h11.52v-23.04h-6.912q-1.44 0-2.088-1.332-.612-1.332.324-2.448l11.52-13.824q.648-.792 1.764-.792t1.764.792l11.52 13.824q.972 1.152.324 2.448z","LEVEL_DOWN":"M1.152-55.223h25.344q.468 0 .81.342t.342.846v31.068h6.912q1.44 0 2.088 1.332t-.324 2.484l-11.52 13.824q-.648.792-1.764.792t-1.764-.792l-11.52-13.824q-.936-1.116-.324-2.484.648-1.332 2.088-1.332h6.912v-23.04h-11.52q-.504 0-.9-.396l-5.76-6.912q-.468-.504-.144-1.224.324-.684 1.044-.684z","CHECK_SQUARE":"M24.66-17.675l22.104-22.104q.684-.684.684-1.62t-.684-1.62l-3.672-3.672q-.684-.684-1.62-.684t-1.62.684l-16.812 16.812-7.596-7.596q-.684-.684-1.62-.684t-1.62.684l-3.672 3.672q-.684.684-.684 1.62t.684 1.62l12.888 12.888q.684.684 1.62.684t1.62-.684zm30.636-31.788v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","PENCIL_SQUARE":"M14.544-24.551l5.472 5.472-1.872 1.872h-2.016v-3.456h-3.456v-2.016zm14.904-14.04q.504.468-.108 1.08l-10.476 10.476q-.612.612-1.08.108-.504-.468.108-1.08l10.476-10.476q.612-.612 1.08-.108zm-9.864 24.84l19.584-19.584-10.368-10.368-19.584 19.584v10.368h10.368zm21.888-21.888l3.312-3.312q1.008-1.008 1.008-2.448t-1.008-2.448l-5.472-5.472q-1.008-1.008-2.448-1.008t-2.448 1.008l-3.312 3.312zm13.824-13.824v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","EXTERNAL_LINK_SQUARE":"M46.08-31.031v-17.28q0-.936-.684-1.62t-1.62-.684h-17.28q-1.512 0-2.124 1.404-.612 1.476.504 2.52l5.184 5.184-19.224 19.224q-.684.684-.684 1.62t.684 1.62l3.672 3.672q.684.684 1.62.684t1.62-.684l19.224-19.224 5.184 5.184q.648.684 1.62.684.432 0 .9-.18 1.404-.612 1.404-2.124zm9.216-18.432v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","SHARE_SQUARE":"M36.18-24.803l12.672-12.672q.684-.684.684-1.62t-.684-1.62l-12.672-12.672q-1.08-1.116-2.484-.504-1.44.612-1.44 2.124v5.76q-4.284 0-7.776.702t-5.85 1.836-4.104 2.844-2.754 3.438-1.602 3.924-.774 4.014-.18 3.978q0 6.516 6.012 14.544.36.432.9.432.252 0 .468-.108.792-.324.684-1.188-1.584-12.744 2.232-17.028 1.656-1.872 4.68-2.718t8.064-.846v5.76q0 1.512 1.44 2.124.432.18.864.18.936 0 1.62-.684zm19.116-24.66v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","COMPASS":"M23.04-25.271l9.216-4.608-9.216-4.608v9.216zm13.824-21.276v19.512l-18.432 9.216v-19.512zm10.368 14.364q0-5.328-2.628-9.828t-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828zm8.064 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","TOGGLE_DOWN":"M41.22-40.139q.648 1.26-.18 2.376l-11.52 16.128q-.684.972-1.872.972t-1.872-.972l-11.52-16.128q-.828-1.116-.18-2.376.612-1.26 2.052-1.26h23.04q1.44 0 2.052 1.26zm4.86 25.236v-34.56q0-.468-.342-.81t-.81-.342h-34.56q-.468 0-.81.342t-.342.81v34.56q0 .468.342.81t.81.342h34.56q.468 0 .81-.342t.342-.81zm9.216-34.56v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","TOGGLE_UP":"M41.22-24.227q-.612 1.26-2.052 1.26h-23.04q-1.44 0-2.052-1.26-.648-1.26.18-2.376l11.52-16.128q.684-.972 1.872-.972t1.872.972l11.52 16.128q.828 1.116.18 2.376zm4.86 9.324v-34.56q0-.468-.342-.81t-.81-.342h-34.56q-.468 0-.81.342t-.342.81v34.56q0 .468.342.81t.81.342h34.56q.468 0 .81-.342t.342-.81zm9.216-34.56v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","TOGGLE_RIGHT":"M39.168-32.183q0 1.188-.972 1.872l-16.128 11.52q-1.116.828-2.376.18-1.26-.612-1.26-2.052v-23.04q0-1.44 1.26-2.052 1.26-.648 2.376.18l16.128 11.52q.972.684.972 1.872zm6.912 17.28v-34.56q0-.504-.324-.828t-.828-.324h-34.56q-.504 0-.828.324t-.324.828v34.56q0 .504.324.828t.828.324h34.56q.504 0 .828-.324t.324-.828zm9.216-34.56v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","EURO":"M35.136-17.387l1.26 5.724q.108.432-.108.81t-.612.522l-.18.036q-.144.072-.378.126t-.576.162-.774.198-.918.18-1.08.18-1.206.162-1.314.108-1.386.036q-8.424 0-14.724-4.698t-8.568-12.654h-3.42q-.468 0-.81-.342t-.342-.81v-4.068q0-.468.342-.81t.81-.342h2.376q-.072-2.052.036-3.78h-2.412q-.504 0-.828-.324t-.324-.828v-4.104q0-.504.324-.828t.828-.324h3.528q2.412-7.56 8.766-12.168t14.418-4.608q3.672 0 6.984.828.396.108.72.54.216.396.108.864l-1.548 5.724q-.108.468-.504.702t-.864.09l-.144-.036-.414-.09-.63-.126-.81-.126-.936-.108-1.044-.09-1.062-.036q-4.536 0-8.136 2.304t-5.4 6.336h16.848q.576 0 .9.432.36.432.252.936l-.864 4.104q-.18.936-1.152.936h-17.568q-.108 1.332 0 3.78h16.524q.54 0 .9.432.324.432.216.972l-.864 4.032q-.072.396-.396.666t-.72.27h-13.932q1.728 4.212 5.382 6.678t8.226 2.466q.648 0 1.296-.054t1.206-.126 1.062-.162.882-.18.666-.162l.432-.108.18-.072q.468-.18.936.072.432.252.54.756z","GBP":"M36.72-23.507v13.212q0 .504-.324.828t-.828.324h-34.416q-.504 0-.828-.324t-.324-.828v-5.4q0-.468.342-.81t.81-.342h3.492v-13.788h-3.42q-.504 0-.828-.342t-.324-.81v-4.716q0-.504.324-.828t.828-.324h3.42v-8.028q0-6.156 4.446-10.152t11.322-3.996q6.66 0 12.06 4.5.324.288.36.738t-.252.81l-3.708 4.572q-.324.396-.792.432-.468.072-.828-.252-.18-.18-.936-.684t-2.484-1.152-3.348-.648q-3.06 0-4.932 1.692t-1.872 4.428v7.74h10.98q.468 0 .81.324t.342.828v4.716q0 .468-.342.81t-.81.342h-10.98v13.644h14.904v-6.516q0-.468.324-.81t.828-.342h5.832q.504 0 .828.342t.324.81z","USD":"M35.208-21.779q0 5.508-3.582 9.486t-9.306 4.914v6.3q0 .504-.324.828t-.828.324h-4.86q-.468 0-.81-.342t-.342-.81v-6.3q-2.376-.324-4.59-1.116t-3.654-1.602-2.664-1.728-1.674-1.35-.63-.648q-.612-.756-.072-1.476l3.708-4.86q.252-.36.828-.432.54-.072.864.324l.072.072q4.068 3.564 8.748 4.5 1.332.288 2.664.288 2.916 0 5.13-1.548t2.214-4.392q0-1.008-.54-1.908t-1.206-1.512-2.106-1.35-2.376-1.152-2.88-1.17q-1.404-.576-2.214-.9t-2.214-.954-2.25-1.116-2.034-1.278-1.926-1.53-1.566-1.764-1.278-2.088-.756-2.394-.306-2.808q0-4.968 3.528-8.712t9.18-4.824v-6.48q0-.468.342-.81t.81-.342h4.86q.504 0 .828.324t.324.828v6.336q2.052.216 3.978.828t3.132 1.206 2.286 1.35 1.404 1.044.54.504q.612.648.18 1.368l-2.916 5.256q-.288.54-.828.576-.504.108-.972-.252-.108-.108-.522-.432t-1.404-.954-2.106-1.152-2.682-.936-3.078-.414q-3.42 0-5.58 1.548t-2.16 3.996q0 .936.306 1.728t1.062 1.494 1.422 1.188 2.016 1.116 2.178.972 2.52.99q1.908.72 2.916 1.134t2.736 1.26 2.718 1.53 2.232 1.8 1.908 2.286 1.134 2.754.468 3.384z","RUPEE":"M32.328-47.519v3.672q0 .504-.324.828t-.828.324h-6.048q-.828 5.184-4.644 8.424t-9.936 3.96q6.012 6.408 16.524 19.296.504.576.144 1.224-.288.648-1.044.648h-7.02q-.576 0-.9-.432-11.016-13.212-17.928-20.556-.324-.324-.324-.792v-4.572q0-.468.342-.81t.81-.342h4.032q4.752 0 7.65-1.548t3.69-4.5h-15.372q-.504 0-.828-.324t-.324-.828v-3.672q0-.504.324-.828t.828-.324h14.868q-2.052-4.068-9.648-4.068h-5.22q-.468 0-.81-.342t-.342-.81v-4.788q0-.504.324-.828t.828-.324h29.952q.504 0 .828.324t.324.828v3.672q0 .504-.324.828t-.828.324h-8.388q1.692 2.196 2.304 5.184h6.156q.504 0 .828.324t.324.828z","YEN":"M21.708-9.143h-6.192q-.468 0-.81-.324t-.342-.828v-11.88h-10.368q-.468 0-.81-.324t-.342-.828v-3.708q0-.468.342-.81t.81-.342h10.368v-3.06h-10.368q-.468 0-.81-.324t-.342-.828v-3.744q0-.468.342-.81t.81-.342h7.704l-11.556-20.808q-.288-.576 0-1.152.36-.576 1.008-.576h6.984q.684 0 1.044.648l7.74 15.3q.684 1.368 2.016 4.5.36-.864 1.098-2.448t.99-2.196l6.876-15.12q.288-.684 1.044-.684h6.876q.612 0 .972.576.324.504.036 1.116l-11.268 20.844h7.74q.468 0 .81.342t.342.81v3.744q0 .504-.342.828t-.81.324h-10.44v3.06h10.44q.468 0 .81.342t.342.81v3.708q0 .504-.342.828t-.81.324h-10.44v11.88q0 .468-.342.81t-.81.342z","RUBLE":"M37.548-44.099q0-3.6-2.34-5.832t-6.156-2.232h-11.52v16.128h11.52q3.816 0 6.156-2.232t2.34-5.832zm8.532 0q0 6.948-4.554 11.34t-11.754 4.392h-12.24v4.248h18.18q.504 0 .828.324t.324.828v4.608q0 .504-.324.828t-.828.324h-18.18v6.912q0 .504-.342.828t-.81.324h-6.012q-.504 0-.828-.324t-.324-.828v-6.912h-8.064q-.504 0-.828-.324t-.324-.828v-4.608q0-.504.324-.828t.828-.324h8.064v-4.248h-8.064q-.504 0-.828-.324t-.324-.828v-5.364q0-.468.324-.81t.828-.342h8.064v-22.644q0-.504.324-.828t.828-.324h19.404q7.2 0 11.754 4.392t4.554 11.34z","WON":"M18.504-21.419l2.916-10.764h-5.724l2.7 10.8.036.108.036.108.018-.126.018-.126zm4.176-15.372l1.26-4.608h-10.512l1.152 4.608h8.1zm6.912 0h5.004l-1.26-4.608h-2.52zm16.164 15.408l2.808-10.8h-5.832l2.916 10.764.018.126.054.126.018-.108.018-.108zm3.996-15.408l1.188-4.608h-10.692l1.224 4.608h8.28zm14.76 1.152v2.304q0 .504-.324.828t-.828.324h-7.668l-5.904 22.176q-.252.864-1.116.864h-5.724q-.864 0-1.116-.864l-5.976-22.176h-7.524l-6.012 22.176q-.252.864-1.116.864h-5.724q-.396 0-.702-.252t-.378-.612l-5.76-22.176h-7.488q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h6.3l-1.188-4.608h-5.112q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.924l-3.204-12.384q-.18-.54.18-1.008.36-.432.936-.432h4.932q.936 0 1.116.864l3.24 12.96h12.924l3.492-12.96q.252-.864 1.116-.864h4.536q.864 0 1.116.864l3.528 12.96h13.14l3.348-12.96q.18-.864 1.116-.864h4.932q.576 0 .936.432.36.468.18 1.008l-3.276 12.384h3.996q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-5.22l-1.224 4.608h6.444q.504 0 .828.324t.324.828z","BTC":"M42.012-41.399q.648 6.552-4.716 9.288 4.212 1.008 6.3 3.708t1.62 7.704q-.252 2.556-1.17 4.5t-2.322 3.204-3.492 2.106-4.374 1.242-5.238.54v9.18h-5.544v-9.036q-2.88 0-4.392-.036v9.072h-5.544v-9.18q-.648 0-1.944-.018t-1.98-.018h-7.2l1.116-6.588h3.996q1.8 0 2.088-1.836v-14.472h.576q-.216-.036-.576-.036v-10.332q-.468-2.448-3.204-2.448h-3.996v-5.904l7.632.036q2.304 0 3.492-.036v-9.072h5.544v8.892q2.952-.072 4.392-.072v-8.82h5.544v9.072q2.844.252 5.04.81t4.068 1.62 2.97 2.808 1.314 4.122zm-7.74 19.62q0-1.296-.54-2.304t-1.332-1.656-2.07-1.098-2.358-.666-2.664-.324-2.484-.108-2.322.036-1.71.036v12.168q.288 0 1.332.018t1.728.018 1.908-.054 2.106-.144 2.052-.306 1.998-.504 1.71-.756 1.422-1.08.882-1.44.342-1.836zm-2.556-17.136q0-1.188-.45-2.106t-1.098-1.512-1.728-1.008-1.98-.594-2.214-.288-2.088-.09-1.944.036-1.422.018v11.052q.18 0 1.242.018t1.674 0 1.8-.072 1.98-.198 1.854-.396 1.746-.666 1.332-.972.972-1.386.324-1.836z","FILE":"M36.864-46.007v-16.992q.792.504 1.296 1.008l14.688 14.688q.504.504 1.008 1.296h-16.992zm-4.608 1.152q0 1.44 1.008 2.448t2.448 1.008h19.584v38.016q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h28.8v19.584z","FILE_TEXT":"M52.848-47.303q.504.504 1.008 1.296h-16.992v-16.992q.792.504 1.296 1.008zm-17.136 5.904h19.584v38.016q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h28.8v19.584q0 1.44 1.008 2.448t2.448 1.008zm5.76 26.496v-2.304q0-.504-.324-.828t-.828-.324h-25.344q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h25.344q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-25.344q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h25.344q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-25.344q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h25.344q.504 0 .828-.324t.324-.828z","SORT_ALPHA_ASC":"M42.876-49.751h6.372l-2.592-7.848-.432-1.692q-.072-.576-.072-.72h-.144l-.108.72q0 .036-.126.648t-.27 1.044zm-16.38 37.152q0 .432-.36.864l-11.484 11.484q-.36.324-.828.324-.432 0-.828-.324l-11.52-11.52q-.54-.576-.252-1.26.288-.72 1.08-.72h6.912v-49.536q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v49.536h6.912q.504 0 .828.324t.324.828zm30.096 4.284v8.388h-21.024v-3.24l13.284-19.044q.432-.648.756-.972l.396-.324v-.108l-.234.018-.27.018q-.432.108-1.08.108h-8.352v4.14h-4.32v-8.244h20.412v3.204l-13.284 19.08q-.216.288-.756.936l-.396.396v.072l.504-.072q.324-.072 1.08-.072h8.928v-4.284h4.356zm3.204-32.292v3.816h-10.368v-3.816h2.7l-1.692-5.184h-8.748l-1.692 5.184h2.7v3.816h-10.332v-3.816h2.52l8.28-23.832h5.832l8.28 23.832h2.52z","SORT_ALPHA_DESC":"M42.876-12.887h6.372l-2.592-7.848-.432-1.692q-.072-.576-.072-.72h-.144l-.108.72q0 .036-.126.648t-.27 1.044zm-16.38.288q0 .432-.36.864l-11.484 11.484q-.36.324-.828.324-.432 0-.828-.324l-11.52-11.52q-.54-.576-.252-1.26.288-.72 1.08-.72h6.912v-49.536q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v49.536h6.912q.504 0 .828.324t.324.828zm33.3 8.856v3.816h-10.368v-3.816h2.7l-1.692-5.184h-8.748l-1.692 5.184h2.7v3.816h-10.332v-3.816h2.52l8.28-23.832h5.832l8.28 23.832h2.52zm-3.204-41.436v8.388h-21.024v-3.24l13.284-19.044q.432-.648.756-.972l.396-.324v-.108l-.234.018-.27.018q-.432.108-1.08.108h-8.352v4.14h-4.32v-8.244h20.412v3.204l-13.284 19.08q-.216.288-.756.936l-.396.36v.108l.504-.108q.324-.036 1.08-.036h8.928v-4.284h4.356z","SORT_AMOUNT_ASC":"M26.496-12.599q0 .432-.36.864l-11.484 11.484q-.36.324-.828.324-.432 0-.828-.324l-11.52-11.52q-.54-.576-.252-1.26.288-.72 1.08-.72h6.912v-49.536q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v49.536h6.912q.504 0 .828.324t.324.828zm38.016 4.608v6.912q0 .504-.324.828t-.828.324h-29.952q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h29.952q.504 0 .828.324t.324.828zm-6.912-18.432v6.912q0 .504-.324.828t-.828.324h-23.04q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h23.04q.504 0 .828.324t.324.828zm-6.912-18.432v6.912q0 .504-.324.828t-.828.324h-16.128q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h16.128q.504 0 .828.324t.324.828zm-6.912-18.432v6.912q0 .504-.324.828t-.828.324h-9.216q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h9.216q.504 0 .828.324t.324.828z","SORT_AMOUNT_DESC":"M43.776-7.991v6.912q0 .504-.324.828t-.828.324h-9.216q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h9.216q.504 0 .828.324t.324.828zm-17.28-4.608q0 .432-.36.864l-11.484 11.484q-.36.324-.828.324-.432 0-.828-.324l-11.52-11.52q-.54-.576-.252-1.26.288-.72 1.08-.72h6.912v-49.536q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v49.536h6.912q.504 0 .828.324t.324.828zm24.192-13.824v6.912q0 .504-.324.828t-.828.324h-16.128q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h16.128q.504 0 .828.324t.324.828zm6.912-18.432v6.912q0 .504-.324.828t-.828.324h-23.04q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h23.04q.504 0 .828.324t.324.828zm6.912-18.432v6.912q0 .504-.324.828t-.828.324h-29.952q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h29.952q.504 0 .828.324t.324.828z","SORT_NUMERIC_ASC":"M48.456-17.171q0-2.268-1.584-4.176t-3.708-1.908q-1.872 0-2.988 1.332t-1.116 3.384 1.314 3.42 3.762 1.368q1.8 0 3.06-.972t1.26-2.448zm-21.96 4.572q0 .432-.36.864l-11.484 11.484q-.36.324-.828.324-.432 0-.828-.324l-11.52-11.52q-.54-.576-.252-1.26.288-.72 1.08-.72h6.912v-49.536q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v49.536h6.912q.504 0 .828.324t.324.828zm27-2.484q0 2.232-.468 4.374t-1.476 4.104-2.448 3.438-3.546 2.358-4.59.882q-2.232 0-3.888-.576-.864-.288-1.512-.54l1.404-4.068q.54.252 1.116.396 1.332.468 2.7.468 3.024 0 4.842-2.106t2.394-5.238h-.072q-.756.828-2.214 1.332t-3.042.504q-3.816 0-6.228-2.574t-2.412-6.21q0-3.78 2.592-6.408t6.516-2.628q4.428 0 7.38 3.402t2.952 9.09zm-1.08-25.812v4.104h-16.884v-4.104h6.012v-15.552l.018-.684.018-.612v-.576h-.072l-.252.432q-.288.468-.936 1.116l-2.232 2.088-2.952-3.096 6.912-6.66h4.428v23.544h5.94z","SORT_NUMERIC_DESC":"M48.456-54.035q0-2.268-1.584-4.176t-3.708-1.908q-1.872 0-2.988 1.332t-1.116 3.384 1.314 3.42 3.762 1.368q1.8 0 3.06-.972t1.26-2.448zm-21.96 41.436q0 .432-.36.864l-11.484 11.484q-.36.324-.828.324-.432 0-.828-.324l-11.52-11.52q-.54-.576-.252-1.26.288-.72 1.08-.72h6.912v-49.536q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v49.536h6.912q.504 0 .828.324t.324.828zm25.92 8.568v4.104h-16.884v-4.104h6.012v-15.552l.018-.684.018-.612v-.576h-.072l-.252.432q-.288.468-.936 1.116l-2.232 2.088-2.952-3.096 6.912-6.66h4.428v23.544h5.94zm1.08-47.916q0 2.232-.468 4.374t-1.476 4.104-2.448 3.438-3.546 2.358-4.59.882q-2.232 0-3.888-.576-.864-.288-1.512-.54l1.404-4.068q.54.252 1.116.396 1.332.468 2.7.468 3.024 0 4.842-2.106t2.394-5.238h-.072q-.756.828-2.214 1.332t-3.042.504q-3.816 0-6.228-2.574t-2.412-6.21q0-3.78 2.592-6.408t6.516-2.628q4.428 0 7.38 3.402t2.952 9.09z","THUMBS_UP":"M9.216-16.055q0-.936-.684-1.62t-1.62-.684q-.972 0-1.638.684t-.666 1.62q0 .972.666 1.638t1.638.666q.936 0 1.62-.666t.684-1.638zm5.76-18.432v23.04q0 .936-.684 1.62t-1.62.684h-10.368q-.936 0-1.62-.684t-.684-1.62v-23.04q0-.936.684-1.62t1.62-.684h10.368q.936 0 1.62.684t.684 1.62zm42.624 0q0 3.096-1.98 5.364.54 1.584.54 2.736.108 2.736-1.548 4.932.612 2.016 0 4.212-.54 2.052-1.944 3.384.324 4.032-1.764 6.516-2.304 2.736-7.092 2.808h-4.644q-2.376 0-5.184-.558t-4.374-1.044-4.338-1.422q-4.428-1.548-5.688-1.584-.936-.036-1.62-.702t-.684-1.602v-23.076q0-.9.648-1.566t1.548-.738q.864-.072 2.736-2.124t3.636-4.356q2.448-3.132 3.636-4.32.648-.648 1.116-1.728t.63-1.746.486-2.178q.252-1.404.45-2.196t.702-1.872 1.224-1.8q.684-.684 1.62-.684 1.656 0 2.97.378t2.16.936 1.44 1.458.864 1.62.432 1.8.18 1.62.018 1.404q0 1.368-.342 2.736t-.684 2.16-.99 2.016q-.108.216-.36.648t-.396.792-.288.864h9.972q2.808 0 4.86 2.052t2.052 4.86z","THUMBS_DOWN":"M9.216-43.703q0 .936-.684 1.62t-1.62.684q-.972 0-1.638-.684t-.666-1.62q0-.972.666-1.638t1.638-.666q.936 0 1.62.666t.684 1.638zm5.76 18.432v-23.04q0-.936-.684-1.62t-1.62-.684h-10.368q-.936 0-1.62.684t-.684 1.62v23.04q0 .936.684 1.62t1.62.684h10.368q.936 0 1.62-.684t.684-1.62zm40.644-5.364q1.98 2.196 1.98 5.364-.036 2.808-2.07 4.86t-4.842 2.052h-9.972q.144.504.288.864t.396.792.36.648q.648 1.332.972 2.052t.684 2.106.36 2.754q0 .864-.018 1.404t-.18 1.62-.432 1.8-.864 1.62-1.44 1.458-2.16.936-2.97.378q-.936 0-1.62-.684-.72-.72-1.224-1.8t-.702-1.872-.45-2.196q-.324-1.512-.486-2.178t-.63-1.746-1.116-1.728q-1.188-1.188-3.636-4.32-1.764-2.304-3.636-4.356t-2.736-2.124q-.9-.072-1.548-.738t-.648-1.566v-23.076q0-.936.684-1.602t1.62-.702q1.26-.036 5.688-1.584 2.772-.936 4.338-1.422t4.374-1.044 5.184-.558h4.644q4.788.072 7.092 2.808 2.088 2.484 1.764 6.516 1.404 1.332 1.944 3.384.612 2.196 0 4.212 1.656 2.196 1.548 4.932 0 1.152-.54 2.736z","YOUTUBE_SQUARE":"M33.084-17.531v-5.652q0-1.8-1.044-1.8-.612 0-1.188.576v8.064q.576.576 1.188.576 1.044 0 1.044-1.764zm6.624-4.392h2.376v-1.224q0-1.836-1.188-1.836t-1.188 1.836v1.224zm-20.556-9.576v2.52h-2.88v15.228h-2.664v-15.228h-2.808v-2.52h8.352zm7.236 4.536v13.212h-2.412v-1.44q-1.404 1.62-2.736 1.62-1.188 0-1.512-1.008-.216-.576-.216-1.944v-10.44h2.376v9.72q0 .864.036.936.036.54.54.54.72 0 1.512-1.116v-10.08h2.412zm9.072 3.996v5.256q0 1.872-.252 2.628-.432 1.512-1.908 1.512-1.26 0-2.448-1.476v1.296h-2.412v-17.748h2.412v5.796q1.152-1.44 2.448-1.44 1.476 0 1.908 1.512.252.756.252 2.664zm9.036 4.644v.324q0 1.044-.072 1.548-.108.792-.54 1.44-.972 1.44-2.88 1.44-1.872 0-2.916-1.368-.756-.972-.756-3.096v-4.644q0-2.124.72-3.096 1.044-1.368 2.88-1.368t2.808 1.368q.756 1.008.756 3.096v2.736h-4.788v2.34q0 1.836 1.224 1.836.864 0 1.08-.936 0-.036.018-.252t.018-.594v-.774h2.448zm-16.236-29.664v5.616q0 1.836-1.152 1.836t-1.152-1.836v-5.616q0-1.872 1.152-1.872t1.152 1.872zm19.188 25.668q0-6.372-.684-9.36-.36-1.584-1.548-2.646t-2.736-1.242q-4.896-.54-14.832-.54-9.9 0-14.796.54-1.584.18-2.754 1.242t-1.53 2.646q-.72 3.132-.72 9.36 0 6.336.72 9.36.36 1.548 1.53 2.628t2.718 1.26q4.932.54 14.832.54t14.832-.54q1.548-.18 2.718-1.26t1.53-2.628q.72-3.024.72-9.36zm-27.18-23.436l3.24-10.656h-2.7l-1.836 7.02-1.908-7.02h-2.808l.864 2.484.828 2.484q1.26 3.708 1.656 5.688v7.236h2.664v-7.236zm10.404 2.916v-4.68q0-2.088-.756-3.132-1.044-1.368-2.808-1.368-1.836 0-2.808 1.368-.756 1.044-.756 3.132v4.68q0 2.088.756 3.132.972 1.368 2.808 1.368 1.764 0 2.808-1.368.756-.972.756-3.132zm6.516 4.32h2.412v-13.32h-2.412v10.188q-.792 1.116-1.512 1.116-.54 0-.576-.576-.036-.072-.036-.936v-9.792h-2.412v10.548q0 1.332.216 1.98.396.972 1.548.972 1.296 0 2.772-1.62v1.44zm18.108-10.944v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","YOUTUBE":"M34.956-19.655v7.596q0 2.412-1.404 2.412-.828 0-1.62-.792v-10.836q.792-.792 1.62-.792 1.404 0 1.404 2.412zm12.168.036v1.656h-3.24v-1.656q0-2.448 1.62-2.448t1.62 2.448zm-34.776-7.848h3.852v-3.384h-11.232v3.384h3.78v20.484h3.6v-20.484zm10.368 20.484h3.204v-17.784h-3.204v13.608q-1.08 1.512-2.052 1.512-.648 0-.756-.756-.036-.108-.036-1.26v-13.104h-3.204v14.076q0 1.764.288 2.628.432 1.332 2.088 1.332 1.728 0 3.672-2.196v1.944zm15.444-5.328v-7.092q0-2.628-.324-3.564-.612-2.016-2.556-2.016-1.8 0-3.348 1.944v-7.812h-3.204v23.868h3.204v-1.728q1.62 1.98 3.348 1.98 1.944 0 2.556-1.98.324-.972.324-3.6zm12.168-.36v-.468h-3.276q0 1.836-.072 2.196-.252 1.296-1.44 1.296-1.656 0-1.656-2.484v-3.132h6.444v-3.708q0-2.844-.972-4.176-1.404-1.836-3.816-1.836-2.448 0-3.852 1.836-1.008 1.332-1.008 4.176v6.228q0 2.844 1.044 4.176 1.404 1.836 3.888 1.836 2.592 0 3.888-1.908.648-.972.756-1.944.072-.324.072-2.088zm-21.888-32.868v-7.56q0-2.484-1.548-2.484t-1.548 2.484v7.56q0 2.52 1.548 2.52t1.548-2.52zm25.884 27.036q0 8.424-.936 12.6-.504 2.124-2.088 3.564t-3.672 1.656q-6.624.756-19.98.756t-19.98-.756q-2.088-.216-3.69-1.656t-2.07-3.564q-.936-4.032-.936-12.6 0-8.424.936-12.6.504-2.124 2.088-3.564t3.708-1.692q6.588-.72 19.944-.72t19.98.72q2.088.252 3.69 1.692t2.07 3.564q.936 4.032.936 12.6zm-35.928-45.936h3.672l-4.356 14.364v9.756h-3.6v-9.756q-.504-2.664-2.196-7.632-1.332-3.708-2.34-6.732h3.816l2.556 9.468zm13.32 11.988v6.3q0 2.916-1.008 4.248-1.332 1.836-3.816 1.836-2.412 0-3.78-1.836-1.008-1.368-1.008-4.248v-6.3q0-2.88 1.008-4.212 1.368-1.836 3.78-1.836 2.484 0 3.816 1.836 1.008 1.332 1.008 4.212zm12.06-5.832v17.964h-3.276v-1.98q-1.908 2.232-3.708 2.232-1.656 0-2.124-1.332-.288-.864-.288-2.7v-14.184h3.276v13.212q0 1.188.036 1.26.108.792.756.792.972 0 2.052-1.548v-13.716h3.276z","XING":"M21.492-40.427q-.36.648-9.252 16.416-.972 1.656-2.34 1.656h-8.604q-.756 0-1.116-.612t0-1.296l9.108-16.128v-.036l-5.796-10.044q-.432-.792-.036-1.332.324-.54 1.152-.54h8.604q1.44 0 2.376 1.62zm29.016-23.112q.396.576 0 1.332l-19.008 33.624v.036l12.096 22.14q.396.72.036 1.332-.36.54-1.152.54h-8.604q-1.512 0-2.376-1.62l-12.204-22.392q.648-1.152 19.116-33.912.9-1.62 2.304-1.62h8.676q.792 0 1.116.54z","XING_SQUARE":"M24.66-36.899q0-.036-4.536-7.992-.756-1.224-1.872-1.224h-6.624q-.648 0-.936.396-.252.432.036 1.044l4.5 7.776v.036l-7.056 12.456q-.324.504 0 1.008.288.468.864.468h6.66q1.116 0 1.8-1.296zm22.464-17.892q-.252-.432-.864-.432h-6.732q-1.08 0-1.764 1.26l-14.796 26.244q.036.072 9.432 17.316.72 1.26 1.872 1.26h6.624q.648 0 .9-.432.288-.468-.036-1.008l-9.36-17.136v-.036l14.724-26.028q.288-.576 0-1.008zm8.172 5.328v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","YOUTUBE_PLAY":"M46.08-32.183q0-1.332-1.08-1.944l-18.432-11.52q-1.116-.72-2.34-.072-1.188.648-1.188 2.016v23.04q0 1.368 1.188 2.016.576.288 1.116.288.72 0 1.224-.36l18.432-11.52q1.08-.612 1.08-1.944zm18.432 0q0 3.456-.036 5.4t-.306 4.914-.81 5.31q-.576 2.628-2.484 4.428t-4.464 2.088q-7.992.9-24.156.9t-24.156-.9q-2.556-.288-4.482-2.088t-2.502-4.428q-.504-2.34-.774-5.31t-.306-4.914-.036-5.4.036-5.4.306-4.914.81-5.31q.576-2.628 2.484-4.428t4.464-2.088q7.992-.9 24.156-.9t24.156.9q2.556.288 4.482 2.088t2.502 4.428q.504 2.34.774 5.31t.306 4.914.036 5.4z","DROPBOX":"M14.472-38.987l17.784 10.98-12.312 10.26-17.64-11.484zm35.496 19.98v3.888l-17.64 10.548v.036l-.036-.036-.036.036v-.036l-17.604-10.548v-3.888l5.292 3.456 12.312-10.224v-.072l.036.036.036-.036v.072l12.348 10.224zm-30.024-41.184l12.312 10.26-17.784 10.944-12.168-9.72zm30.096 21.204l12.168 9.756-17.604 11.484-12.348-10.26zm-5.436-21.204l17.604 11.484-12.168 9.72-17.784-10.944z","STACK_OVERFLOW":"M46.404-5.687h-40.248v-17.28h-5.76v23.04h51.768v-23.04h-5.76v17.28zm-33.912-18.864l1.188-5.652 28.188 5.94-1.188 5.616zm3.708-13.464l2.412-5.256 26.1 12.204-2.412 5.22zm7.236-12.816l3.672-4.428 22.104 18.468-3.672 4.428zm14.292-13.608l17.172 23.076-4.608 3.456-17.172-23.076zm-25.848 52.956v-5.724h28.8v5.724h-28.8z","INSTAGRAM":"M49.032-13.103v-23.328h-4.86q.72 2.268.72 4.716 0 4.536-2.304 8.37t-6.264 6.066-8.64 2.232q-7.092 0-12.132-4.878t-5.04-11.79q0-2.448.72-4.716h-5.076v23.328q0 .936.63 1.566t1.566.63h38.484q.9 0 1.548-.63t.648-1.566zm-10.224-19.188q0-4.464-3.258-7.614t-7.866-3.15q-4.572 0-7.83 3.15t-3.258 7.614 3.258 7.614 7.83 3.15q4.608 0 7.866-3.15t3.258-7.614zm10.224-12.96v-5.94q0-1.008-.72-1.746t-1.764-.738h-6.264q-1.044 0-1.764.738t-.72 1.746v5.94q0 1.044.72 1.764t1.764.72h6.264q1.044 0 1.764-.72t.72-1.764zm6.264-7.488v41.112q0 2.916-2.088 5.004t-5.004 2.088h-41.112q-2.916 0-5.004-2.088t-2.088-5.004v-41.112q0-2.916 2.088-5.004t5.004-2.088h41.112q2.916 0 5.004 2.088t2.088 5.004z","FLICKR":"M44.928-59.831q4.284 0 7.326 3.042t3.042 7.326v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56zm-19.8 27.648q0-3.168-2.232-5.4t-5.4-2.232-5.4 2.232-2.232 5.4 2.232 5.4 5.4 2.232 5.4-2.232 2.232-5.4zm20.304 0q0-3.168-2.232-5.4t-5.4-2.232-5.4 2.232-2.232 5.4 2.232 5.4 5.4 2.232 5.4-2.232 2.232-5.4z","ADN":"M27.648-42.047l7.236 11.016h-14.472zm13.14 19.08h3.384l-16.524-24.876-16.524 24.876h3.384l3.744-5.76h18.792zm14.508-9.216q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","BITBUCKET":"M29.34-33.515q.288 2.268-1.818 3.636t-4.014.216q-1.404-.612-1.926-2.088t-.018-2.952 1.872-2.088q1.296-.648 2.61-.432t2.304 1.278.99 2.43zm3.996-.756q-.504-3.852-4.068-5.904t-7.092-.468q-2.268 1.008-3.618 3.186t-1.242 4.662q.144 3.276 2.79 5.58t5.958 2.016q3.276-.288 5.472-3.024t1.8-6.048zm8.604-19.512q-.72-.972-2.016-1.602t-2.088-.792-2.556-.45q-10.476-1.692-20.376.072-1.548.252-2.376.432t-1.98.792-1.8 1.548q1.08 1.008 2.736 1.638t2.646.792 3.15.414q8.208 1.044 16.128.036 2.268-.288 3.222-.432t2.61-.774 2.7-1.674zm2.052 37.26q-.288.936-.558 2.754t-.504 3.024-1.026 2.52-2.088 2.034q-3.096 1.728-6.822 2.574t-7.272.792-7.254-.666q-1.656-.288-2.934-.648t-2.754-.972-2.628-1.566-1.872-2.214q-.9-3.456-2.052-10.512l.216-.576.648-.324q8.028 5.328 18.234 5.328t18.27-5.328q.756.216.864.828t-.18 1.62-.288 1.332zm6.516-34.596q-.936 6.012-3.996 23.58-.18 1.08-.972 2.016t-1.566 1.44-1.962 1.116q-9.072 4.536-21.96 3.168-8.928-.972-14.184-5.004-.54-.432-.918-.954t-.612-1.26-.324-1.224-.216-1.422-.198-1.26q-.324-1.8-.954-5.4t-1.008-5.814-.846-5.31-.792-5.688q.108-.936.63-1.746t1.134-1.35 1.62-1.08 1.656-.81 1.728-.666q4.5-1.656 11.268-2.304 13.644-1.332 24.336 1.8 5.58 1.656 7.74 4.392.576.72.594 1.836t-.198 1.944z","BITBUCKET_SQUARE":"M30.528-33.119q0-1.548-1.476-2.376t-2.772-.036q-1.548.72-1.53 2.61t1.566 2.538q1.404.828 2.916-.144t1.296-2.592zm2.88-.576q.288 2.376-1.296 4.356t-3.96 2.196-4.284-1.44-2.016-4.068q-.072-1.764.918-3.348t2.61-2.304q2.52-1.116 5.094.36t2.934 4.248zm6.192-14.076q-.72.756-1.926 1.224t-1.908.576-2.286.288q-5.58.72-11.664 0-1.584-.216-2.268-.342t-1.89-.576-1.962-1.17q.468-.684 1.296-1.116t1.44-.558 1.692-.306q7.128-1.26 14.688-.036 1.188.18 1.836.306t1.548.576 1.404 1.134zm1.512 26.856q0-.252.198-.954t.108-1.152-.63-.594q-5.796 3.816-13.14 3.816t-13.176-3.816l-.432.216-.18.432q.936 5.544 1.476 7.56 1.692 2.916 7.344 3.888 8.964 1.656 15.408-1.908 1.224-.684 1.764-1.854t.81-3.078.45-2.556zm4.68-24.948q.324-1.908-.288-2.7-1.548-1.98-5.58-3.168-7.776-2.268-17.532-1.296-4.752.432-8.136 1.656-1.368.54-2.142.9t-1.692 1.224-1.062 1.944q.288 2.448.684 4.968t1.044 6.156.864 4.932q.036.18.18 1.116t.252 1.296.432.972.792 1.008q3.78 2.88 10.224 3.6 9.324 1.008 15.84-2.268.864-.468 1.422-.828t1.116-1.044.702-1.44q1.728-9.612 2.88-17.028zm9.504-3.6v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","TUMBLR":"M33.984-16.595l2.88 8.532q-.828 1.26-3.996 2.376t-6.372 1.152q-3.744.072-6.858-.936t-5.13-2.664-3.42-3.816-1.998-4.32-.594-4.248v-19.584h-6.048v-7.74q2.592-.936 4.644-2.502t3.276-3.24 2.088-3.672 1.224-3.564.54-3.186q.036-.18.162-.306t.27-.126h8.784v15.264h11.988v9.072h-12.024v18.648q0 1.08.234 2.016t.81 1.89 1.782 1.494 2.934.504q2.808-.072 4.824-1.044z","TUMBLR_SQUARE":"M40.896-11.843l-2.232-6.588q-1.584.792-3.708.792-1.296.036-2.232-.378t-1.386-1.134-.63-1.458-.18-1.566v-14.328h9.252v-6.984h-9.216v-11.736h-6.768q-.288 0-.324.36-.18 1.584-.63 3.132t-1.404 3.42-2.772 3.42-4.266 2.448v5.94h4.68v15.048q0 2.052.774 4.14t2.34 3.996 4.356 3.078 6.354 1.098q2.484-.036 4.914-.9t3.078-1.8zm14.4-37.62v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","LONG_ARROW_DOWN":"M27.54-17.675q.288.684-.18 1.26l-12.6 13.824q-.36.36-.828.36-.504 0-.864-.36l-12.78-13.824q-.468-.576-.18-1.26.324-.684 1.044-.684h8.064v-44.928q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v44.928h8.064q.756 0 1.044.684z","LONG_ARROW_UP":"M27.54-46.691q-.324.684-1.044.684h-8.064v44.928q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-44.928h-8.064q-.756 0-1.044-.684t.18-1.26l12.6-13.824q.36-.36.828-.36.504 0 .864.36l12.78 13.824q.468.576.18 1.26z","LONG_ARROW_LEFT":"M64.512-35.639v6.912q0 .504-.324.828t-.828.324h-44.928v8.064q0 .756-.684 1.044t-1.26-.18l-13.824-12.6q-.36-.36-.36-.828 0-.504.36-.864l13.824-12.744q.576-.504 1.26-.216.684.324.684 1.044v8.064h44.928q.504 0 .828.324t.324.828z","LONG_ARROW_RIGHT":"M62.208-32.291q0 .504-.36.864l-13.824 12.744q-.576.504-1.26.216-.684-.324-.684-1.044v-8.064h-44.928q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h44.928v-8.064q0-.756.684-1.044t1.26.18l13.824 12.6q.36.36.36.828z","APPLE":"M50.148-20.699q-1.404 4.5-4.428 9-4.644 7.056-9.252 7.056-1.764 0-5.04-1.152-3.096-1.152-5.436-1.152-2.196 0-5.112 1.188-2.916 1.224-4.752 1.224-5.472 0-10.836-9.324-5.292-9.396-5.292-18.108 0-8.208 4.068-13.464 4.032-5.184 10.224-5.184 2.592 0 6.372 1.08 3.744 1.08 4.968 1.08 1.62 0 5.148-1.224 3.672-1.224 6.228-1.224 4.284 0 7.668 2.34 1.872 1.296 3.744 3.6-2.844 2.412-4.104 4.248-2.34 3.384-2.34 7.452 0 4.464 2.484 8.028t5.688 4.536zm-13.536-42.228q0 2.196-1.044 4.896-1.08 2.7-3.348 4.968-1.944 1.944-3.888 2.592-1.332.396-3.744.612.108-5.364 2.808-9.252 2.664-3.852 9-5.328l.09.396.09.396.018.36.018.36z","WINDOWS":"M24.552-28.223v23.436l-24.552-3.384v-20.052h24.552zm0-26.748v23.724h-24.552v-20.34zm35.352 26.748v28.296l-32.652-4.5v-23.796h32.652zm0-31.608v28.584h-32.652v-24.084z","ANDROID":"M17.748-47.051q.576 0 .99-.414t.414-.99-.414-.99-.99-.414-.972.414-.396.99.396.99.972.414zm15.192 0q.576 0 .972-.414t.396-.99-.396-.99-.972-.414-.99.414-.414.99.414.99.99.414zm-29.232 6.624q1.512 0 2.592 1.08t1.08 2.592v15.48q0 1.548-1.062 2.628t-2.61 1.08-2.628-1.08-1.08-2.628v-15.48q0-1.512 1.08-2.592t2.628-1.08zm38.16.684v23.976q0 1.656-1.152 2.808t-2.772 1.152h-2.7v8.172q0 1.548-1.08 2.628t-2.628 1.08-2.628-1.08-1.08-2.628v-8.172h-4.968v8.172q0 1.548-1.08 2.628t-2.628 1.08q-1.512 0-2.592-1.08t-1.08-2.628l-.036-8.172h-2.664q-1.656 0-2.808-1.152t-1.152-2.808v-23.976h33.048zm-8.352-14.58q3.852 1.98 6.156 5.526t2.304 7.758h-33.3q0-4.212 2.304-7.758t6.192-5.526l-2.556-4.716q-.252-.468.18-.72.468-.216.72.216l2.592 4.752q3.42-1.512 7.236-1.512t7.236 1.512l2.592-4.752q.252-.432.72-.216.432.252.18.72zm17.172 17.568v15.48q0 1.548-1.08 2.628t-2.628 1.08q-1.512 0-2.592-1.08t-1.08-2.628v-15.48q0-1.548 1.08-2.61t2.592-1.062q1.548 0 2.628 1.062t1.08 2.61z","LINUX":"M23.868-49.643q-.396.036-.558.378t-.306.342q-.18.036-.18-.18 0-.432.684-.54h.36zm3.132.504q-.144.036-.414-.234t-.63-.162q.864-.396 1.152.072.108.216-.108.324zm-12.636 15.372q-.144-.036-.216.108t-.162.45-.198.486-.36.468q-.252.36-.036.432.144.036.45-.252t.45-.648l.072-.252.072-.216.054-.162.018-.144v-.108l-.036-.09-.108-.072zm30.78 12.924q0-.648-1.98-1.512.144-.54.27-.99t.18-.936.108-.774.018-.81-.036-.702-.126-.792-.144-.738-.18-.9-.198-.954q-.36-1.728-1.692-3.708t-2.592-2.7q.864.72 2.052 2.988 3.132 5.832 1.944 10.008-.396 1.44-1.8 1.512-1.116.144-1.386-.666t-.288-3.006-.414-3.852q-.324-1.404-.702-2.484t-.702-1.638-.558-.882-.468-.54-.27-.252q-.504-2.232-1.116-3.708t-1.062-2.016-.846-1.188-.54-1.44q-.144-.756.216-1.926t.162-1.782-1.602-.9q-.54-.108-1.602-.648t-1.278-.576q-.288-.036-.396-.936t.288-1.836 1.296-.972q1.332-.108 1.836 1.08t.144 2.088q-.396.684-.072.954t1.08.018q.468-.144.468-1.296v-1.332q-.18-1.08-.486-1.8t-.756-1.098-.846-.54-.972-.27q-3.852.288-3.204 4.824 0 .54-.036.54-.324-.324-1.062-.378t-1.188.018-.558-.18q.036-2.052-.576-3.24t-1.62-1.224q-.972-.036-1.494.99t-.594 2.142q-.036.54.126 1.332t.468 1.35.558.486q.36-.108.576-.504.144-.324-.252-.288-.252 0-.558-.522t-.342-1.206q-.036-.792.324-1.332t1.224-.504q.612 0 .972.756t.342 1.404-.054.792q-.792.54-1.116 1.044-.288.432-.99.846t-.738.45q-.468.504-.558.972t.27.648q.504.288.9.702t.576.684.666.468 1.278.234q1.692.072 3.672-.54.072-.036.828-.252t1.242-.378 1.062-.468.756-.63q.324-.504.72-.288.18.108.234.306t-.108.432-.594.342q-.72.216-2.034.774t-1.638.702q-1.584.684-2.52.828-.9.18-2.844-.072-.36-.072-.324.072t.612.684q.9.828 2.412.792.612-.036 1.296-.252t1.296-.504 1.206-.63 1.08-.612.882-.432.63-.09.306.396q0 .072-.036.162t-.144.18-.216.162-.306.18-.324.162-.36.18-.342.162q-1.008.504-2.43 1.584t-2.394 1.548-1.764.036q-.756-.396-2.268-2.628-.792-1.116-.9-.792-.036.108-.036.36 0 .9-.54 2.034t-1.062 1.998-.756 2.088.414 2.268q-.828.216-2.25 3.24t-1.71 5.076q-.072.648-.054 2.484t-.198 2.124q-.288.864-1.044.108-1.152-1.116-1.296-3.384-.072-1.008.144-2.016.144-.684-.036-.648l-.144.18q-1.296 2.34.36 5.976.18.432.9 1.008t.864.72q.72.828 3.744 3.258t3.348 2.754q.576.54.63 1.368t-.504 1.548-1.638.828q.288.54 1.044 1.602t1.008 1.944.252 2.538q1.656-.864.252-3.312-.144-.288-.378-.576t-.342-.432-.072-.216q.108-.18.468-.342t.72.09q1.656 1.872 5.976 1.296 4.788-.54 6.372-3.132.828-1.368 1.224-1.08.432.216.36 1.872-.036.9-.828 3.312-.324.828-.216 1.35t.864.558q.108-.684.522-2.772t.486-3.24q.072-.756-.234-2.646t-.27-3.492.828-2.538q.54-.648 1.836-.648.036-1.332 1.242-1.908t2.61-.378 2.16.81zm-22.608-29.772q.108-.612-.09-1.08t-.414-.54q-.324-.072-.324.252.072.18.18.216.36 0 .252.54-.108.72.288.72.108 0 .108-.108zm15.084 7.092q-.072-.288-.234-.414t-.468-.18-.522-.198q-.18-.108-.342-.288t-.252-.288-.198-.234-.144-.144-.144.054q-.504.576.252 1.566t1.404 1.134q.324.036.522-.288t.126-.72zm-6.408-7.668q0-.396-.18-.702t-.396-.45-.324-.108q-.504.036-.252.252l.144.072q.504.144.648 1.116 0 .108.288-.072zm1.944-8.388q0-.072-.09-.18t-.324-.252-.342-.216q-.54-.54-.864-.54-.324.036-.414.27t-.036.468-.018.45q-.036.144-.216.378t-.216.324.108.306q.144.108.288 0t.396-.324.54-.324q.036-.036.324-.036t.54-.072.324-.252zm20.34 48.276q.72.432 1.116.882t.432.864-.09.81-.558.792-.846.702-1.08.666-1.134.594-1.152.558-.972.468q-1.368.684-3.078 2.016t-2.718 2.304q-.612.576-2.448.702t-3.204-.522q-.648-.324-1.062-.846t-.594-.918-.792-.702-1.692-.342q-1.584-.036-4.68-.036-.684 0-2.052.054t-2.088.09q-1.584.036-2.862.54t-1.926 1.08-1.566 1.026-1.926.414q-1.044-.036-3.996-1.116t-5.256-1.548q-.684-.144-1.836-.342t-1.8-.324-1.422-.342-1.206-.522-.612-.702q-.36-.828.252-2.394t.648-1.962q.036-.576-.144-1.44t-.36-1.53-.162-1.314.378-.972q.504-.432 2.052-.504t2.16-.432q1.08-.648 1.512-1.26t.432-1.836q.756 2.628-1.152 3.816-1.152.72-2.988.54-1.224-.108-1.548.36-.468.54.18 2.052.072.216.288.648t.306.648.162.612.036.792q0 .54-.612 1.764t-.504 1.728q.108.612 1.332.936.72.216 3.042.666t3.582.738q.864.216 2.664.792t2.97.828 1.998.144q1.548-.216 2.322-1.008t.828-1.728-.27-2.106-.684-1.872-.72-1.314q-4.356-6.84-6.084-8.712-2.448-2.664-4.068-1.44-.396.324-.54-.54-.108-.576-.072-1.368.036-1.044.36-1.872t.864-1.692.792-1.512q.288-.756.954-2.592t1.062-2.808 1.08-2.196 1.404-1.944q3.96-5.148 4.464-7.02-.432-4.032-.576-11.16-.072-3.24.864-5.454t3.816-3.762q1.404-.756 3.744-.756 1.908-.036 3.816.486t3.204 1.494q2.052 1.512 3.294 4.374t1.062 5.31q-.18 3.42 1.08 7.704 1.224 4.068 4.788 7.848 1.98 2.124 3.582 5.868t2.142 6.876q.288 1.764.18 3.042t-.432 1.998-.72.792q-.36.072-.846.684t-.972 1.278-1.458 1.206-2.196.504q-.648-.036-1.134-.18t-.81-.486-.486-.558-.414-.738-.324-.702q-.792-1.332-1.476-1.08t-1.008 1.764.252 3.492q.72 2.52.036 7.02-.36 2.34.648 3.618t2.628 1.188 3.06-1.278q2.124-1.764 3.222-2.394t3.726-1.53q1.908-.648 2.772-1.314t.666-1.242-.9-1.026-1.854-.846q-1.188-.396-1.782-1.728t-.54-2.61.558-1.71q.036 1.116.288 2.034t.522 1.458.738 1.026.756.684.774.468.594.342z","DRIBBBLE":"M36.864-10.439q-1.512-8.676-5.04-17.928h-.072l-.072.036q-.576.216-1.548.594t-3.636 1.764-4.932 2.952-4.716 4.122-3.708 5.328l-.54-.396q6.624 5.4 15.048 5.4 4.752 0 9.216-1.872zm-6.66-21.852q-.756-1.764-1.908-3.996-11.196 3.348-24.228 3.348-.036.252-.036.756 0 4.464 1.584 8.514t4.464 7.254q1.8-3.204 4.446-5.994t5.13-4.482 4.698-2.916 3.582-1.728l1.332-.468q.144-.036.468-.126t.468-.162zm-3.852-7.632q-4.32-7.668-8.784-13.608-4.968 2.34-8.424 6.696t-4.608 9.792q10.872 0 21.816-2.88zm24.624 11.484q-7.56-2.16-14.724-1.044 3.132 8.604 4.608 16.884 3.996-2.7 6.66-6.822t3.456-9.018zm-28.98-26.676l-.072.036.072-.036zm21.24 5.22q-6.66-5.904-15.588-5.904-2.736 0-5.58.684 4.716 6.12 8.856 13.752 2.484-.936 4.68-2.178t3.474-2.214 2.358-2.052 1.35-1.458zm8.028 17.46q-.108-8.352-5.364-14.76l-.036.036q-.324.432-.684.882t-1.566 1.602-2.556 2.178-3.6 2.34-4.734 2.322q.9 1.908 1.584 3.42.072.216.234.63t.27.594q1.296-.18 2.682-.252t2.646-.072 2.484.054 2.304.144 2.034.198 1.728.234 1.314.216.9.162zm4.032.252q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","SKYPE":"M42.228-26.171q0-1.8-.702-3.294t-1.746-2.466-2.628-1.764-2.97-1.224-3.15-.828l-3.744-.864q-1.08-.252-1.584-.378t-1.26-.414-1.08-.576-.594-.756-.27-1.08q0-2.772 5.184-2.772 1.548 0 2.772.432t1.944 1.026 1.368 1.206 1.44 1.044 1.728.432q1.692 0 2.718-1.152t1.026-2.772q0-1.98-2.016-3.582t-5.112-2.43-6.552-.828q-2.448 0-4.752.558t-4.302 1.692-3.204 3.132-1.206 4.626q0 2.196.684 3.834t2.016 2.718 2.88 1.746 3.708 1.17l5.256 1.296q3.24.792 4.032 1.296 1.152.72 1.152 2.16 0 1.404-1.44 2.322t-3.78.918q-1.836 0-3.294-.576t-2.34-1.386-1.638-1.62-1.656-1.386-1.944-.576q-1.8 0-2.718 1.08t-.918 2.7q0 3.312 4.392 5.67t10.476 2.358q2.628 0 5.04-.666t4.41-1.926 3.186-3.366 1.188-4.734zm13.068 7.812q0 5.724-4.05 9.774t-9.774 4.05q-4.68 0-8.424-2.88-2.772.576-5.4.576-5.148 0-9.846-1.998t-8.1-5.4-5.4-8.1-1.998-9.846q0-2.628.576-5.4-2.88-3.744-2.88-8.424 0-5.724 4.05-9.774t9.774-4.05q4.68 0 8.424 2.88 2.772-.576 5.4-.576 5.148 0 9.846 1.998t8.1 5.4 5.4 8.1 1.998 9.846q0 2.628-.576 5.4 2.88 3.744 2.88 8.424z","FOURSQUARE":"M36-48.815l1.332-6.984q.18-.828-.324-1.44t-1.26-.612h-25.632q-.828 0-1.386.612t-.558 1.332v39.636q0 .252.216.036l10.476-12.672q.828-.936 1.368-1.206t1.728-.27h8.604q.792 0 1.332-.522t.648-1.062q.864-4.68 1.332-6.876.144-.756-.414-1.44t-1.314-.684h-10.584q-1.044 0-1.728-.684t-.684-1.728v-1.512q0-1.044.684-1.71t1.728-.666h12.456q.648 0 1.26-.486t.72-1.062zm8.172-7.992q-.54 2.628-1.926 9.594t-2.502 12.6-1.26 6.246q-.216.792-.324 1.17t-.504 1.17-.882 1.188-1.386.756-2.088.36h-9.756q-.468 0-.792.36-.288.324-15.336 17.784-.792.9-2.106 1.026t-1.746-.198q-1.98-.792-1.98-3.528v-50.76q0-1.98 1.368-3.69t4.32-1.71h31.968q3.42 0 4.572 1.908t.36 5.724zm0 0l-5.688 28.44q.144-.612 1.26-6.246t2.502-12.6 1.926-9.594z","TRELLO":"M25.344-16.055v-36.864q0-.504-.324-.828t-.828-.324h-17.28q-.504 0-.828.324t-.324.828v36.864q0 .504.324.828t.828.324h17.28q.504 0 .828-.324t.324-.828zm24.192-13.824v-23.04q0-.504-.324-.828t-.828-.324h-17.28q-.504 0-.828.324t-.324.828v23.04q0 .504.324.828t.828.324h17.28q.504 0 .828-.324t.324-.828zm5.76-27.648v50.688q0 .936-.684 1.62t-1.62.684h-50.688q-.936 0-1.62-.684t-.684-1.62v-50.688q0-.936.684-1.62t1.62-.684h50.688q.936 0 1.62.684t.684 1.62z","FEMALE":"M46.08-26.423q0 1.44-1.008 2.448t-2.448 1.008q-1.836 0-2.88-1.548l-8.172-12.276h-1.62v4.752l8.892 14.796q.324.54.324 1.188 0 .936-.684 1.62t-1.62.684h-6.912v9.792q0 1.656-1.188 2.844t-2.844 1.188h-5.76q-1.656 0-2.844-1.188t-1.188-2.844v-9.792h-6.912q-.936 0-1.62-.684t-.684-1.62q0-.648.324-1.188l8.892-14.796v-4.752h-1.62l-8.172 12.276q-1.044 1.548-2.88 1.548-1.44 0-2.448-1.008t-1.008-2.448q0-1.044.576-1.908l9.216-13.824q2.628-3.852 6.336-3.852h13.824q3.708 0 6.336 3.852l9.216 13.824q.576.864.576 1.908zm-14.976-28.8q0 3.348-2.358 5.706t-5.706 2.358-5.706-2.358-2.358-5.706 2.358-5.706 5.706-2.358 5.706 2.358 2.358 5.706z","MALE":"M36.864-39.095v14.976q0 1.44-1.008 2.448t-2.448 1.008-2.448-1.008-1.008-2.448v-12.672h-2.304v32.832q0 1.656-1.188 2.844t-2.844 1.188-2.844-1.188-1.188-2.844v-16.704h-2.304v16.704q0 1.656-1.188 2.844t-2.844 1.188-2.844-1.188-1.188-2.844v-32.832h-2.304v12.672q0 1.44-1.008 2.448t-2.448 1.008-2.448-1.008-1.008-2.448v-14.976q0-2.88 2.016-4.896t4.896-2.016h23.04q2.88 0 4.896 2.016t2.016 4.896zm-10.368-16.128q0 3.348-2.358 5.706t-5.706 2.358-5.706-2.358-2.358-5.706 2.358-5.706 5.706-2.358 5.706 2.358 2.358 5.706z","GRATIPAY":"M27.828-17.567l12.6-17.028q.576-.792.882-2.124t-.216-3.06-2.214-2.844q-1.44-.936-2.988-.918t-2.646.63-1.962 1.62q-1.296 1.44-3.456 1.44-2.124 0-3.42-1.44-.864-1.008-1.962-1.62t-2.646-.63-3.024.918q-1.656 1.116-2.178 2.844t-.216 3.06.882 2.124zm27.468-14.616q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","SUN_O":"M52.992-32.183q0-4.212-1.638-8.046t-4.428-6.624-6.624-4.428-8.046-1.638-8.046 1.638-6.624 4.428-4.428 6.624-1.638 8.046 1.638 8.046 4.428 6.624 6.624 4.428 8.046 1.638 8.046-1.638 6.624-4.428 4.428-6.624 1.638-8.046zm9.936 9.972q-.144.54-.72.72l-10.512 3.456v11.016q0 .576-.468.936-.54.36-1.044.144l-10.512-3.384-6.48 8.928q-.36.468-.936.468t-.936-.468l-6.48-8.928-10.512 3.384q-.504.216-1.044-.144-.468-.36-.468-.936v-11.016l-10.512-3.456q-.576-.18-.72-.72-.18-.612.144-1.044l6.48-8.928-6.48-8.928q-.324-.468-.144-1.044.144-.54.72-.72l10.512-3.456v-11.016q0-.576.468-.936.54-.36 1.044-.144l10.512 3.384 6.48-8.928q.324-.432.936-.432t.936.432l6.48 8.928 10.512-3.384q.504-.216 1.044.144.468.36.468.936v11.016l10.512 3.456q.576.18.72.72.18.576-.144 1.044l-6.48 8.928 6.48 8.928q.324.432.144 1.044z","MOON_O":"M45.432-17.531q-1.944.324-3.96.324-6.552 0-12.132-3.24t-8.82-8.82-3.24-12.132q0-6.912 3.744-12.852-7.236 2.16-11.826 8.244t-4.59 13.824q0 4.68 1.836 8.946t4.914 7.344 7.344 4.914 8.946 1.836q5.184 0 9.846-2.214t7.938-6.174zm7.308-3.06q-3.384 7.308-10.206 11.682t-14.886 4.374q-5.616 0-10.728-2.196t-8.82-5.904-5.904-8.82-2.196-10.728q0-5.508 2.07-10.53t5.616-8.694 8.478-5.922 10.44-2.466q1.584-.072 2.196 1.404.648 1.476-.54 2.592-3.096 2.808-4.734 6.534t-1.638 7.866q0 5.328 2.628 9.828t7.128 7.128 9.828 2.628q4.248 0 8.208-1.836 1.476-.648 2.592.468.504.504.63 1.224t-.162 1.368z","ARCHIVE":"M39.168-34.487q0-.936-.684-1.62t-1.62-.684h-9.216q-.936 0-1.62.684t-.684 1.62.684 1.62 1.62.684h9.216q.936 0 1.62-.684t.684-1.62zm20.736-6.912v34.56q0 .936-.684 1.62t-1.62.684h-50.688q-.936 0-1.62-.684t-.684-1.62v-34.56q0-.936.684-1.62t1.62-.684h50.688q.936 0 1.62.684t.684 1.62zm2.304-16.128v9.216q0 .936-.684 1.62t-1.62.684h-55.296q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h55.296q.936 0 1.62.684t.684 1.62z","BUG":"M58.752-29.879q0 .936-.684 1.62t-1.62.684h-8.064q0 6.156-2.412 10.44l7.488 7.524q.684.684.684 1.62t-.684 1.62q-.648.684-1.62.684t-1.62-.684l-7.128-7.092q-.18.18-.54.468t-1.512 1.026-2.34 1.314-2.952 1.044-3.492.468v-32.256h-4.608v32.256q-1.836 0-3.654-.486t-3.132-1.188-2.376-1.404-1.566-1.17l-.54-.504-6.588 7.452q-.72.756-1.728.756-.864 0-1.548-.576-.684-.648-.738-1.602t.558-1.674l7.272-8.172q-2.088-4.104-2.088-9.864h-8.064q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h8.064v-10.584l-6.228-6.228q-.684-.684-.684-1.62t.684-1.62 1.62-.684 1.62.684l6.228 6.228h30.384l6.228-6.228q.684-.684 1.62-.684t1.62.684.684 1.62-.684 1.62l-6.228 6.228v10.584h8.064q.936 0 1.62.684t.684 1.62zm-17.28-20.736h-23.04q0-4.788 3.366-8.154t8.154-3.366 8.154 3.366 3.366 8.154z","VK":"M69.012-45.719q.828 2.304-5.4 10.584-.864 1.152-2.34 3.06-2.808 3.6-3.24 4.716-.612 1.476.504 2.916.612.756 2.916 2.952h.036l.036.036.036.036.072.072q5.076 4.716 6.876 7.956.108.18.234.45t.252.954-.018 1.224-.9.99-2.124.45l-9.216.144q-.864.18-2.016-.18t-1.872-.792l-.72-.432q-1.08-.756-2.52-2.304t-2.466-2.79-2.196-2.088-2.034-.558q-.108.036-.288.126t-.612.522-.774 1.062-.612 1.872-.234 2.79q0 .54-.126.99t-.27.666l-.144.18q-.648.684-1.908.792h-4.14q-2.556.144-5.256-.594t-4.734-1.908-3.708-2.376-2.538-2.07l-.9-.864q-.36-.36-.99-1.08t-2.574-3.276-3.816-5.436-4.41-7.596-4.698-9.792q-.216-.576-.216-.972t.108-.576l.144-.216q.54-.684 2.052-.684l9.864-.072q.432.072.828.234t.576.306l.18.108q.576.396.864 1.152.72 1.8 1.656 3.726t1.476 2.934l.576 1.044q1.044 2.16 2.016 3.744t1.746 2.466 1.494 1.386 1.224.504.972-.18q.072-.036.18-.18t.432-.792.486-1.692.342-2.916 0-4.5q-.072-1.44-.324-2.628t-.504-1.656l-.216-.432q-.9-1.224-3.06-1.548-.468-.072.18-.864.612-.684 1.368-1.08 1.908-.936 8.604-.864 2.952.036 4.86.468.72.18 1.206.486t.738.864.378 1.152.126 1.638-.036 1.98-.09 2.538-.054 2.97q0 .396-.036 1.512t-.018 1.728.126 1.458.414 1.404.81.882q.288.072.612.144t.936-.396 1.368-1.242 1.872-2.412 2.448-3.87q2.16-3.744 3.852-8.1.144-.36.36-.63t.396-.378l.144-.108.18-.09.468-.108.72-.018 10.368-.072q1.404-.18 2.304.09t1.116.594z","WEIBO":"M24.3-18.215q.756-1.224.396-2.484t-1.62-1.8q-1.224-.504-2.628-.036t-2.16 1.656q-.792 1.224-.468 2.466t1.548 1.818 2.682.09 2.25-1.71zm3.384-4.356q.288-.468.126-.954t-.63-.666q-.504-.18-1.026.018t-.774.666q-.612 1.116.468 1.62.504.18 1.044-.018t.792-.666zm6.264 3.852q-1.62 3.672-5.688 5.4t-8.064.432q-3.852-1.224-5.31-4.554t.234-6.75q1.692-3.348 5.454-5.004t7.578-.684q3.996 1.044 5.706 4.302t.09 6.858zm11.232-5.76q-.324-3.456-3.204-6.12t-7.506-3.924-9.882-.756q-8.028.828-13.302 5.094t-4.77 9.522q.324 3.456 3.204 6.12t7.506 3.924 9.882.756q8.028-.828 13.302-5.094t4.77-9.522zm11.088.144q0 2.448-1.332 5.022t-3.924 4.932-6.066 4.23-8.136 2.988-9.738 1.116-9.9-1.206-8.658-3.348-6.174-5.436-2.34-7.182q0-4.14 2.502-8.82t7.11-9.288q6.084-6.084 12.294-8.496t8.874.252q2.34 2.304.72 7.524-.144.504-.036.72t.36.252.522-.018.486-.126l.216-.072q5.004-2.124 8.856-2.124t5.508 2.196q1.62 2.268 0 6.408-.072.468-.162.72t.162.45.432.27.612.216q2.052.648 3.708 1.692t2.88 2.934 1.224 4.194zm-2.664-22.464q1.512 1.692 1.962 3.906t-.234 4.23q-.288.828-1.062 1.224t-1.602.144q-.828-.288-1.224-1.062t-.144-1.602q.72-2.268-.864-3.996t-3.852-1.26q-.864.18-1.62-.288t-.9-1.332q-.18-.864.288-1.602t1.332-.918q2.16-.468 4.284.198t3.636 2.358zm6.516-5.868q3.132 3.456 4.05 8.01t-.486 8.694q-.324.972-1.224 1.44t-1.872.144-1.44-1.224-.18-1.872q1.008-2.952.36-6.192t-2.88-5.688q-2.232-2.484-5.328-3.438t-6.228-.306q-1.008.216-1.872-.342t-1.08-1.566.342-1.854 1.566-1.062q4.428-.936 8.784.414t7.488 4.842z","RENREN":"M40.788-7.919q-6.156 3.384-13.248 3.384-7.056 0-13.212-3.384 4.968-3.132 8.478-7.596t4.734-9.648q1.26 5.184 4.77 9.648t8.478 7.596zm-17.82-51.408v17.46q0 9.072-4.554 16.542t-11.898 11.034q-6.516-7.74-6.516-17.82 0-6.732 3.006-12.582t8.262-9.702 11.7-4.932zm32.328 27.216q0 10.08-6.516 17.82-7.344-3.564-11.898-11.034t-4.554-16.542v-17.46q6.444 1.08 11.7 4.932t8.262 9.702 3.006 12.582z","PAGELINES":"M50.472-24.731q-1.152 2.88-2.736 4.968t-3.276 3.186-3.564 1.674-3.654.522-3.474-.306-3.114-.792-2.502-.99-1.656-.81l-.612-.36q-4.068 8.208-10.422 12.942t-13.842 4.77q-.684 0-1.152-.468t-.468-1.152.468-1.134 1.152-.45q6.228-.036 11.61-3.87t9.054-10.602q-1.296.504-2.592.828t-2.988.468-3.276-.09-3.348-1.026-3.312-2.124-3.042-3.6-2.682-5.256q4.104-1.692 7.704-2.052t6.03.27 4.482 2.034 3.186 2.772 2.034 2.952q1.908-4.716 2.844-10.476-.252.036-.648.09t-1.674.09-2.502-.018-2.934-.36-3.186-.828-3.024-1.53-2.7-2.34-1.962-3.402-1.026-4.59q2.52-1.008 4.806-1.314t4.05.036 3.312 1.08 2.646 1.8 2.016 2.196 1.512 2.268.99 2.016.576 1.422l.144.576q.432-4.392.432-7.02-.288-.216-.774-.576t-1.764-1.602-2.286-2.574-1.944-3.348-1.188-4.05.432-4.572 2.52-4.986q2.628.9 4.59 2.214t3.042 2.754 1.728 3.06.738 3.204-.018 3.078-.468 2.754-.684 2.232-.612 1.512l-.252.54q.036.18.036 1.818t-.036 2.574q.108-.252.36-.666t1.098-1.548 1.818-2.088 2.556-1.998 3.294-1.602 4.032-.522 4.77.864q-.072 2.808-.774 5.094t-1.8 3.762-2.502 2.574-2.934 1.638-3.042.864-2.88.342-2.43-.036-1.674-.162l-.612-.108q-.828 5.292-2.628 10.188.216-.252.648-.666t1.782-1.476 2.79-1.89 3.582-1.512 4.23-.72 4.644.846 4.932 2.79z","STACK_EXCHANGE":"M45.324-19.331v2.376q0 3.06-2.07 5.202t-4.986 2.142h-2.052l-9.36 9.684v-9.684h-19.044q-2.916 0-4.986-2.142t-2.07-5.202v-2.376h44.568zm0-11.736v9.18h-44.568v-9.18h44.568zm0-11.808v9.18h-44.568v-9.18h44.568zm0-5.04v2.412h-44.568v-2.412q0-3.024 2.07-5.166t4.986-2.142h30.456q2.916 0 4.986 2.142t2.07 5.166z","ARROW_CIRCLE_O_RIGHT":"M41.472-32.183q0 .504-.324.828l-11.52 11.52q-.324.324-.828.324-.468 0-.81-.342t-.342-.81v-6.912h-12.672q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h12.672v-6.912q0-.504.324-.828t.828-.324q.432 0 .864.36l11.484 11.484q.324.324.324.828zm5.76 0q0-5.328-2.628-9.828t-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828zm8.064 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","ARROW_CIRCLE_O_LEFT":"M41.472-35.639v6.912q0 .468-.342.81t-.81.342h-12.672v6.912q0 .504-.324.828t-.828.324q-.432 0-.864-.36l-11.484-11.484q-.324-.324-.324-.828t.324-.828l11.52-11.52q.324-.324.828-.324.468 0 .81.342t.342.81v6.912h12.672q.468 0 .81.342t.342.81zm5.76 3.456q0-5.328-2.628-9.828t-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828zm8.064 0q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","TOGGLE_LEFT":"M36.864-43.703v23.04q0 .936-.684 1.62t-1.62.684q-.72 0-1.332-.432l-16.128-11.52q-.972-.684-.972-1.872t.972-1.872l16.128-11.52q.612-.432 1.332-.432.936 0 1.62.684t.684 1.62zm9.216 28.8v-34.56q0-.468-.342-.81t-.81-.342h-34.56q-.468 0-.81.342t-.342.81v34.56q0 .468.342.81t.81.342h34.56q.468 0 .81-.342t.342-.81zm9.216-34.56v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","DOT_CIRCLE_O":"M36.864-32.183q0 3.816-2.7 6.516t-6.516 2.7-6.516-2.7-2.7-6.516 2.7-6.516 6.516-2.7 6.516 2.7 2.7 6.516zm-9.216-19.584q-5.328 0-9.828 2.628t-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628 9.828-2.628 7.128-7.128 2.628-9.828-2.628-9.828-7.128-7.128-9.828-2.628zm27.648 19.584q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","WHEELCHAIR":"M36.828-21.707l3.672 7.344q-2.088 6.444-7.56 10.44t-12.204 3.996q-5.616 0-10.386-2.79t-7.56-7.56-2.79-10.386q0-6.516 3.762-11.88t9.882-7.596l.612 4.716q-4.392 1.944-7.02 5.958t-2.628 8.802q0 6.66 4.734 11.394t11.394 4.734q4.536 0 8.37-2.34t5.94-6.318 1.782-8.514zm19.728 3.6l2.088 4.104-9.216 4.608q-.468.252-1.044.252-1.44 0-2.052-1.26l-8.604-17.172h-16.992q-.864 0-1.53-.594t-.774-1.458l-3.456-28.044q-.072-.576.216-1.512.504-1.836 2.052-2.97t3.492-1.134q2.376 0 4.068 1.692t1.692 4.068q0 2.484-1.872 4.23t-4.32 1.494l1.332 10.404h15.228v4.608h-14.652l.576 4.608h16.38q1.44 0 2.052 1.26l8.208 16.38z","VIMEO_SQUARE":"M46.512-41.471q.36-7.776-5.796-7.992-8.316-.288-11.232 9.396 1.584-.684 2.952-.684 3.06 0 2.664 3.456-.144 2.052-2.664 6.012t-3.78 3.96q-1.548 0-2.952-6.084-.468-1.944-1.62-9.18-1.08-6.804-5.76-6.372-2.124.252-5.904 3.6l-2.916 2.592-2.916 2.592 1.872 2.412q2.736-1.872 3.132-1.872 2.052 0 3.852 6.444.54 1.98 1.62 5.922t1.62 5.922q2.448 6.444 5.904 6.444 5.652 0 13.788-10.584 7.92-10.188 8.136-15.984zm8.784-7.992v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","TURKISH_LIRA":"M41.472-34.487q0 6.876-3.402 12.708t-9.234 9.234-12.708 3.402h-5.76q-.504 0-.828-.324t-.324-.828v-21.996l-7.74 2.376q-.108.036-.324.036-.36 0-.684-.216-.468-.36-.468-.936v-4.608q0-.828.828-1.116l8.388-2.556v-3.348l-7.74 2.376q-.108.036-.324.036-.36 0-.684-.216-.468-.36-.468-.936v-4.608q0-.828.828-1.116l8.388-2.556v-9q0-.504.324-.828t.828-.324h5.76q.504 0 .828.324t.324.828v6.516l13.5-4.176q.54-.18 1.008.18t.468.936v4.608q0 .828-.828 1.116l-14.148 4.356v3.348l13.5-4.176q.54-.18 1.008.18t.468.936v4.608q0 .828-.828 1.116l-14.148 4.356v17.532q6.768-.468 11.448-5.436t4.68-11.808q0-.504.324-.828t.828-.324h5.76q.504 0 .828.324t.324.828z","PLUS_SQUARE_O":"M41.472-35.639v2.304q0 .504-.324.828t-.828.324h-12.672v12.672q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-12.672h-12.672q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h12.672v-12.672q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828v12.672h12.672q.504 0 .828.324t.324.828zm4.608 16.128v-29.952q0-2.376-1.692-4.068t-4.068-1.692h-29.952q-2.376 0-4.068 1.692t-1.692 4.068v29.952q0 2.376 1.692 4.068t4.068 1.692h29.952q2.376 0 4.068-1.692t1.692-4.068zm4.608-29.952v29.952q0 4.284-3.042 7.326t-7.326 3.042h-29.952q-4.284 0-7.326-3.042t-3.042-7.326v-29.952q0-4.284 3.042-7.326t7.326-3.042h29.952q4.284 0 7.326 3.042t3.042 7.326z","SPACE_SHUTTLE":"M22.32-24.119q-3.96 2.304-9.648 2.304h-4.608v-2.304h-2.304q-.468 0-.81-.846t-.342-2.034q0-.864.252-1.764-2.088-.072-3.474-.378t-1.386-.738 1.386-.738 3.474-.378q-.252-.9-.252-1.764 0-1.188.342-2.034t.81-.846h2.304v-2.304h4.608q5.688 0 9.648 2.304h40.068q1.512.252 3.834.648t2.898.504q3.204.54 5.4 1.458t3.006 1.71.81 1.44-.81 1.44-3.006 1.71-5.4 1.458q-.576.108-2.898.504t-3.834.648h-40.068zm40.284-9.072q1.908 1.296 1.908 3.312t-1.908 3.312l2.916 1.08q2.448-1.728 2.448-4.392t-2.448-4.392zm-40.104 9.648h36.54q-7.812 1.368-16.416 2.88-2.052 0-4.068.864t-2.988 1.728l-1.008.864-10.368 10.368q-.936.936-2.538 1.62t-3.222.684h-3.456l-3.348-16.704h1.044q5.652 0 9.828-2.304zm-9.828-14.976h-1.044l3.348-16.704h3.456q1.656 0 3.24.684t2.52 1.62l10.368 10.368q.144.144.396.378t1.098.828 1.746 1.044 2.214.828 2.61.378l16.416 2.88h-36.54q-4.176-2.304-9.828-2.304z","SLACK":"M54.684-36.503q2.232 0 3.726 1.458t1.494 3.654q0 3.492-3.348 4.68l-6.192 2.124 2.016 6.012q.252.756.252 1.692 0 2.124-1.512 3.672t-3.636 1.548q-1.692 0-3.078-.972t-1.926-2.592l-1.98-5.94-11.16 3.816 1.98 5.904q.288.864.288 1.692 0 2.124-1.512 3.672t-3.672 1.548q-1.692 0-3.06-.972t-1.908-2.592l-1.98-5.868-5.508 1.908q-1.044.324-1.8.324-2.196 0-3.654-1.44t-1.458-3.636q0-1.692.99-3.06t2.574-1.908l5.616-1.908-3.78-11.268-5.616 1.944q-.936.288-1.728.288-2.16 0-3.636-1.458t-1.476-3.618q0-1.692.99-3.06t2.574-1.908l5.652-1.908-1.908-5.724q-.288-.864-.288-1.692 0-2.16 1.512-3.69t3.672-1.53q1.692 0 3.06.972t1.908 2.592l1.944 5.76 11.16-3.78-1.944-5.76q-.288-.864-.288-1.692 0-2.124 1.53-3.672t3.654-1.548q1.692 0 3.078.99t1.926 2.574l1.908 5.796 5.832-1.98q.756-.216 1.548-.216 2.16 0 3.69 1.422t1.53 3.546q0 1.62-1.08 2.934t-2.664 1.854l-5.652 1.944 3.78 11.376 5.904-2.016q.864-.288 1.656-.288zm-28.584 9.432l11.16-3.78-3.78-11.34-11.16 3.852z","ENVELOPE_SQUARE":"M44.928-59.831q4.284 0 7.326 3.042t3.042 7.326v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56zm1.152 38.016v-15.696q-1.116 1.26-2.304 1.98-1.224.792-4.77 3.06t-5.454 3.564q-3.528 2.484-5.904 2.484t-5.904-2.484q-1.656-1.152-5.094-3.33t-5.13-3.33q-.432-.288-1.188-.972t-1.116-.972v15.696q0 1.44 1.008 2.448t2.448 1.008h29.952q1.44 0 2.448-1.008t1.008-2.448zm0-20.628q0-1.476-.99-2.52t-2.466-1.044h-29.952q-1.44 0-2.448 1.008t-1.008 2.448q0 1.332 1.098 2.754t2.43 2.322q1.692 1.152 4.95 3.204t4.662 2.988l.612.414.756.504.756.468.846.468.774.342.81.27.738.09.738-.09.81-.27.774-.342.846-.468.756-.468.756-.504.612-.414 9.612-6.264q1.26-.828 2.394-2.25t1.134-2.646z","WORDPRESS":"M4.572-32.183q0-5.868 2.412-11.268l13.212 36.18q-7.056-3.42-11.34-10.116t-4.284-14.796zm46.368-1.404q0 .684-.09 1.386t-.36 1.782-.414 1.584-.63 2.124-.63 2.088l-2.736 9.216-10.008-29.736q1.656-.108 3.168-.288.684-.072.936-.666t-.09-1.116-1.026-.486l-7.38.36q-2.7-.036-7.272-.36-.432-.036-.738.18t-.414.54-.054.666.324.594.702.288l2.88.288 4.32 11.808-6.048 18.144-10.08-29.952q1.656-.108 3.168-.288.684-.072.936-.666t-.09-1.116-1.026-.486l-7.38.36-.828-.018-.936-.018q3.78-5.76 9.882-9.126t13.23-3.366q5.292 0 10.098 1.908t8.586 5.364h-.36q-1.98 0-3.312 1.458t-1.332 3.438q0 .432.072.864t.144.774.288.828.324.756.432.81.45.756.522.864.504.828q2.268 3.852 2.268 7.632zm-18.216 3.816l8.532 23.292q.036.216.18.396-4.536 1.584-9.18 1.584-4.032 0-7.812-1.152zm23.796-15.696q3.42 6.264 3.42 13.284 0 7.524-3.744 13.878t-10.044 10.026l8.46-24.408q2.124-6.084 2.124-9.936 0-1.512-.216-2.844zm-24.264-18.972q6.552 0 12.528 2.556t10.296 6.876 6.876 10.296 2.556 12.528-2.556 12.528-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556zm0 63.036q6.228 0 11.934-2.448t9.828-6.57 6.57-9.828 2.448-11.934-2.448-11.934-6.57-9.828-9.828-6.57-11.934-2.448-11.934 2.448-9.828 6.57-6.57 9.828-2.448 11.934 2.448 11.934 6.57 9.828 9.828 6.57 11.934 2.448z","OPENID":"M39.096-64.439v55.296l-9.792 4.608q-8.208-.72-14.904-3.672t-10.548-7.506-3.852-9.81q0-5.04 3.618-9.486t9.9-7.398 14.094-3.888v6.192q-7.812 1.368-12.834 5.4t-5.022 9.18q0 5.472 5.562 9.612t13.986 5.22v-48.96zm24.084 20.952l1.332 14.04-18.9-4.104 5.292-2.988q-4.284-2.52-10.08-3.564v-6.192q9.972 1.188 17.316 5.652z","UNIVERSITY":"M34.56-64.439l34.56 13.824v4.608h-4.608q0 .936-.738 1.62t-1.746.684h-54.936q-1.008 0-1.746-.684t-.738-1.62h-4.608v-4.608zm-25.344 23.04h9.216v27.648h4.608v-27.648h9.216v27.648h4.608v-27.648h9.216v27.648h4.608v-27.648h9.216v27.648h2.124q1.008 0 1.746.684t.738 1.62v2.304h-59.904v-2.304q0-.936.738-1.62t1.746-.684h2.124v-27.648zm57.42 34.56q1.008 0 1.746.684t.738 1.62v4.608h-69.12v-4.608q0-.936.738-1.62t1.746-.684h64.152z","MORTAR_BOARD":"M63.864-34.343l.648 11.376q.144 2.484-2.952 4.608t-8.46 3.366-11.628 1.242-11.628-1.242-8.46-3.366-2.952-4.608l.648-11.376 20.664 6.516q.792.252 1.728.252t1.728-.252zm19.08-11.664q0 .828-.792 1.116l-40.32 12.672q-.144.036-.36.036t-.36-.036l-23.472-7.416q-1.548 1.224-2.556 4.014t-1.224 6.426q2.268 1.296 2.268 3.924 0 2.484-2.088 3.852l2.088 15.588q.072.504-.288.9-.324.396-.864.396h-6.912q-.54 0-.864-.396-.36-.396-.288-.9l2.088-15.588q-2.088-1.368-2.088-3.852 0-2.628 2.34-3.996.396-7.452 3.528-11.88l-11.988-3.744q-.792-.288-.792-1.116t.792-1.116l40.32-12.672q.144-.036.36-.036t.36.036l40.32 12.672q.792.288.792 1.116z","YAHOO":"M30.924-29.987l.468 25.452q-2.232-.396-3.78-.396-1.476 0-3.78.396l.468-25.452q-1.44-2.484-6.066-10.638t-7.794-13.482-6.516-10.332q2.088.54 3.888.54 1.548 0 3.996-.54 2.268 3.996 4.806 8.262t6.012 9.954 4.986 8.172q1.332-2.196 3.942-6.39t4.23-6.84 3.78-6.336 3.852-6.822q1.944.504 3.852.504 2.016 0 4.104-.504-1.008 1.404-2.16 3.186t-1.782 2.826-2.034 3.456-1.764 3.024q-5.256 8.928-12.708 21.96z","GOOGLE":"M27.648-36.143h26.1q.432 2.412.432 4.608 0 7.812-3.276 13.95t-9.342 9.594-13.914 3.456q-5.652 0-10.764-2.178t-8.82-5.886-5.886-8.82-2.178-10.764 2.178-10.764 5.886-8.82 8.82-5.886 10.764-2.178q10.8 0 18.54 7.236l-7.524 7.236q-4.428-4.284-11.016-4.284-4.644 0-8.586 2.34t-6.246 6.354-2.304 8.766 2.304 8.766 6.246 6.354 8.586 2.34q3.132 0 5.76-.864t4.32-2.16 2.952-2.952 1.854-3.132.81-2.808h-15.696v-9.504z","REDDIT":"M39.42-22.427q.576.576 0 1.116-2.232 2.232-7.164 2.232t-7.164-2.232q-.576-.54 0-1.116.216-.216.54-.216t.54.216q1.728 1.764 6.084 1.764 4.32 0 6.084-1.764.216-.216.54-.216t.54.216zm-11.052-6.516q0 1.332-.936 2.268t-2.268.936-2.286-.936-.954-2.268q0-1.368.954-2.304t2.286-.936 2.268.954.936 2.286zm14.22 0q0 1.332-.954 2.268t-2.286.936-2.268-.936-.936-2.268.936-2.286 2.268-.954 2.286.936.954 2.304zm9.036-4.32q0-1.764-1.26-3.024t-3.06-1.26-3.096 1.296q-4.68-3.24-11.196-3.456l2.268-10.188 7.2 1.62q0 1.332.936 2.268t2.268.936 2.286-.954.954-2.286-.954-2.286-2.286-.954q-1.944 0-2.88 1.8l-7.956-1.764q-.684-.18-.9.576l-2.484 11.232q-6.48.252-11.124 3.492-1.26-1.332-3.132-1.332-1.8 0-3.06 1.26t-1.26 3.024q0 1.26.666 2.304t1.782 1.584q-.216.972-.216 2.016 0 5.112 5.04 8.748t12.132 3.636q7.128 0 12.168-3.636t5.04-8.748q0-1.152-.252-2.052 1.08-.54 1.728-1.566t.648-2.286zm12.888 1.08q0 6.552-2.556 12.528t-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556 12.528 2.556 10.296 6.876 6.876 10.296 2.556 12.528z","REDDIT_SQUARE":"M33.804-23.795q.468.468 0 .936-1.908 1.908-6.156 1.908t-6.156-1.908q-.468-.468 0-.936.18-.216.468-.216t.468.216q1.512 1.512 5.22 1.512t5.22-1.512q.18-.216.468-.216t.468.216zm-9.468-5.616q0 1.116-.828 1.944t-1.944.828-1.944-.828-.828-1.944q0-1.152.81-1.962t1.962-.81 1.962.81.81 1.962zm12.168 0q0 1.116-.828 1.944t-1.944.828-1.944-.828-.828-1.944q0-1.152.81-1.962t1.962-.81 1.962.81.81 1.962zm7.74-3.708q0-1.512-1.08-2.592t-2.628-1.08q-1.512 0-2.628 1.116-4.068-2.808-9.612-2.952l1.944-8.748 6.156 1.404q.036 1.152.846 1.944t1.926.792q1.152 0 1.962-.81t.81-1.962-.81-1.962-1.962-.81q-1.728 0-2.484 1.548l-6.804-1.512q-.612-.18-.756.468l-2.16 9.648q-5.544.216-9.54 2.988-1.08-1.152-2.664-1.152-1.548 0-2.628 1.08t-1.08 2.592q0 1.08.576 1.98t1.512 1.368q-.18.9-.18 1.728 0 4.392 4.32 7.506t10.404 3.114q6.12 0 10.44-3.114t4.32-7.506q0-.9-.216-1.764.9-.468 1.458-1.35t.558-1.962zm11.052-16.344v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","STUMBLEUPON_CIRCLE":"M31.176-34.235l3.24-.972v-2.232q0-2.844-2.088-4.86t-4.968-2.016-4.968 1.998-2.088 4.842v10.188q0 .72-.504 1.206t-1.188.486-1.17-.486-.486-1.206v-4.32h-5.436v4.392q0 2.952 2.07 5.004t5.022 2.052q2.916 0 4.986-2.034t2.07-4.914v-10.08q0-.684.486-1.188t1.206-.504q.684 0 1.17.504t.486 1.188v1.944zm11.988 7.02v-4.392h-5.4v4.536q0 .72-.486 1.206t-1.206.486q-.684 0-1.17-.504t-.486-1.188v-4.428l-3.24.936-2.16-1.008v4.428q0 2.88 2.088 4.932t5.004 2.052 4.986-2.052 2.07-5.004zm12.132-4.968q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","STUMBLEUPON":"M38.232-38.807v-4.248q0-1.512-1.08-2.592t-2.592-1.08-2.592 1.08-1.08 2.592v22.032q0 6.3-4.536 10.764t-10.908 4.464q-6.408 0-10.926-4.518t-4.518-10.926v-9.576h11.808v9.432q0 1.548 1.08 2.61t2.592 1.062 2.592-1.062 1.08-2.61v-22.32q0-6.156 4.554-10.512t10.854-4.356q6.336 0 10.872 4.392t4.536 10.584v4.896l-7.02 2.088zm19.08 7.992h11.808v9.576q0 6.408-4.518 10.926t-10.926 4.518q-6.372 0-10.908-4.482t-4.536-10.818v-9.648l4.716 2.196 7.02-2.088v9.72q0 1.512 1.08 2.574t2.592 1.062 2.592-1.062 1.08-2.574v-9.9z","DELICIOUS":"M52.992-14.903v-17.28h-25.344v-25.344h-17.28q-3.348 0-5.706 2.358t-2.358 5.706v17.28h25.344v25.344h17.28q3.348 0 5.706-2.358t2.358-5.706zm2.304-34.56v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","DIGG":"M11.808-54.287h7.344v35.388h-19.152v-25.092h11.808v-10.296zm0 29.484v-13.284h-4.428v13.284h4.428zm10.296-19.188v25.092h7.38v-25.092h-7.38zm0-10.296v7.344h7.38v-7.344h-7.38zm10.332 10.296h19.188v33.912h-19.188v-5.868h11.808v-2.952h-11.808v-25.092zm11.808 19.188v-13.284h-4.428v13.284h4.428zm10.332-19.188h19.152v33.912h-19.152v-5.868h11.772v-2.952h-11.772v-25.092zm11.772 19.188v-13.284h-4.428v13.284h4.428z","PIED_PIPER":"M37.656-27.719q0 2.304-1.368 3.924t-3.276 1.62q-1.548 0-2.52-.54v-9.972q1.008-.612 2.52-.612 1.908 0 3.276 1.638t1.368 3.942zm-12.348-15.408q0 2.304-1.368 3.942t-3.276 1.638q-1.548 0-2.52-.54v-9.972q1.008-.612 2.52-.612 1.908 0 3.276 1.62t1.368 3.924zm20.232 15.516q0-4.824-3.168-8.244t-7.668-3.42q-.72 0-1.404.108-.828 2.808-2.808 4.896-3.132 3.42-7.596 3.636v22.896l7.596-1.476v-7.416q1.836.684 4.212.684 4.5 0 7.668-3.42t3.168-8.244zm-12.348-15.372q0-4.824-3.186-8.244t-7.686-3.42q-2.664 0-5.076 1.296h-6.696v30.24l7.596-1.476v-7.416q1.98.684 4.176.684 4.5 0 7.686-3.42t3.186-8.244zm22.104-6.48v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","PIED_PIPER_ALT":"M43.992-30.995q2.7-.108 5.166.738t4.248 2.106 3.636 3.402 3.024 3.888 2.718 4.338q1.188 2.016 2.826 3.924t2.718 2.898 3.564 3.186q-1.728 1.08-3.906 2.07t-4.986 2.124-4.104 1.71q-1.584-1.332-2.664-4.14t-1.566-5.922-1.188-6.498-1.53-6.066-2.61-4.428-4.41-1.746l-.36.072-.216.144q.144.18.468.504.216.18 1.008.846t.918.792.684.648.648.738.414.756.378.99.162 1.116.144 1.458l.036 1.188q.036.936-.09 2.07t-.27 1.872-.45 2.106-.414 1.908q-1.26-.036-3.636.342t-3.528.378q-1.404 0-2.592-.36-.072-.576-.072-1.692 0-2.664.108-3.456.072-.468 1.134-1.494t2.052-2.124.954-1.854q-.864-.072-1.548.864-1.296 1.908-4.014 3.582t-4.914 1.674q-.9 0-2.718-2.268t-3.834-5.022-3.024-3.474q-.216-.144-.972-1.08-17.352 4.032-18.468 4.032-.576 0-1.008-.396t-.432-.972q0-.54.306-.954t.81-.522l17.496-3.816q-.288-.504-.288-.9t.198-.63.576-.414.72-.252.828-.162.666-.162q.144-.036.558-.27t.63-.234q.54 0 1.008.576t.72 1.188q5.868-1.332 6.192-1.332.612 0 1.062.396t.45 1.008q0 .54-.306.936t-.846.504l-6.552 1.44-.036.576q-.036.936 2.934 4.23t3.762 3.294q1.692 0 4.284-2.88t2.592-4.644q0-1.296-.846-1.908t-1.836-.666-1.836-.414-.846-1.224q0-.576.36-1.224l-2.448-.684q1.548-1.584 1.548-4.212 0-.936-.18-2.088 2.952-.576 5.184-.576 1.584 0 2.574.054t1.746.306 1.116.486.738.882.558 1.206.612 1.71.864 2.16l1.8-.9q-.108 1.44-.828 2.16t-1.53.756-1.44.234-.594.738zm2.16-8.46q-.18-.18-.486-.558t-.432-.522-.378-.414-.36-.378l-.288-.288-.306-.27-.288-.18-.306-.162q-.252-.108-.522-.18t-.738-.09-.792-.018h-2.52q-4.536 0-7.812 1.548.576-1.08 1.296-1.674t1.944-1.062 2.358-1.296 1.656-1.314 1.8-1.98 1.566-1.818q.432.324 1.008 1.134t1.152 1.314 1.368.468l.432-.036v2.736l.792.036q8.892-3.42 13.356-6.84 1.008-.756 1.8-1.404t1.53-1.35 1.188-1.116 1.062-1.224.864-1.116.882-1.332.828-1.368.972-1.71 1.062-1.908l.252-.324q-.072 1.908-1.548 5.004-2.844 5.94-7.38 9.504t-11.016 5.112q-.504.108-1.512.27t-1.8.342-1.404.504q.108.684.882 1.656t.774 1.224q0 .396-.936 1.08zm-7.956 33.156q1.404-.936 4.734-1.71t5.274-.774q.324 0 .81.558t1.008 1.53.936 1.8.864 1.836.522 1.188q-4.356 1.62-8.784 1.62-2.196 0-4.5-.396zm-8.604-23.292l1.728-.432 3.924 6.372-2.628 1.728zm18.036 18.612l.108.576q0 .252-.63.522t-1.656.468-1.944.342-1.926.27-1.152.162l-.252-1.548q.756-.072 2.178-.306t2.592-.36 2.178-.126h.504zm-16.452-22.608l-3.456.72-.216-.612q.36-.036 1.17-.252t1.242-.216q.684 0 1.26.36zm7.02 22.824h1.116l.36 2.988-1.476.432v-3.42zm32.004-53.64v0zm0 0l-.036.18-.072.072.036-.108zm0 0l.036-.036z","DRUPAL":"M42.012-7.343q-.18-.684-.864-.18-1.08.792-3.132 1.404t-4.716.612q-4.644 0-6.948-1.764-.18-.144-.468-.144-.396 0-.936.432-.252.216-.27.576t.27.72q1.224 1.152 3.15 1.656t3.69.45 3.564-.162q1.476-.144 3.042-.738t2.34-1.08 1.026-.738q.432-.432.252-1.044zm-1.404-4.14q-.684-1.692-1.404-2.196-.828-.54-2.736-.54-1.692 0-2.556.36-1.044.432-2.808 2.016-.936.864-.432 1.584.324.288.63.162t1.134-.846q.108-.072.378-.306t.378-.306.36-.252.414-.252.45-.18.54-.162.594-.09.738-.036q.972 0 1.602.27t.828.522.486.792q.36.612.45.72t.45-.036q.828-.432.504-1.224zm12.78-10.116q0-.792-.18-1.602t-.594-1.62-1.224-1.314-1.89-.504q-1.188 0-3.492 1.494t-4.644 3.006-3.636 1.512q-.972.036-2.286-.684t-2.736-1.764-3.006-2.088-3.6-1.764-3.996-.684q-4.14.036-7.092 2.826t-3.024 6.426q-.072 4.032 2.664 5.904 1.044.72 2.25 1.026t3.726.306q2.052 0 4.752-1.17t4.824-2.556 4.32-2.538 3.348-1.116q.936.036 2.34 1.134t2.574 2.412 2.448 2.43 1.998 1.152q1.26.108 2.106-.504t1.998-2.268q1.008-1.476 1.53-3.636t.522-3.816zm1.908-5.76q0 5.904-2.232 10.962t-5.976 8.496-8.73 5.382-10.458 1.944-10.548-2.07-8.91-5.652-6.138-8.694-2.304-10.872q0-3.204.702-6.21t1.764-5.238 2.538-4.266 2.826-3.384 2.826-2.502 2.322-1.674 1.53-.882q.504-.288 1.836-.954t1.962-1.026 1.728-1.08 2.178-1.584q1.296-1.008 2.088-2.61t1.08-4.518q4.644 5.58 6.696 6.948 1.584 1.044 4.68 2.448t4.644 2.376q.756.468 1.404.9t2.178 1.674 2.736 2.538 2.7 3.42 2.484 4.392 1.692 5.346.702 6.39z","JOOMLA":"M38.52-25.811l-5.76 5.76-5.436 5.472-1.08 1.08q-2.34 2.304-5.454 3.132t-6.174.072q-.576 2.52-2.592 4.14t-4.644 1.62q-3.06 0-5.22-2.178t-2.16-5.238q0-2.592 1.602-4.608t4.086-2.592q-.792-3.096.036-6.228t3.168-5.472l.432-.432 5.436 5.472-.396.396q-1.332 1.332-1.332 3.204t1.332 3.24q1.332 1.332 3.204 1.332t3.204-1.332l1.08-1.08 5.436-5.472 5.796-5.76zm-12.276-24.552l.432.432-5.472 5.472-.432-.432q-1.332-1.332-3.204-1.332t-3.204 1.332-1.332 3.222 1.332 3.222l1.044 1.044 5.472 5.472 5.76 5.76-5.436 5.472-5.796-5.76-5.436-5.472-1.08-1.08q-2.448-2.412-3.24-5.742t.18-6.462q-2.52-.54-4.14-2.556t-1.62-4.644q0-3.06 2.16-5.238t5.22-2.178q2.736 0 4.806 1.764t2.502 4.428q3.024-.72 6.102.126t5.382 3.15zm29.052 38.412q0 3.06-2.16 5.238t-5.22 2.178q-2.664 0-4.716-1.692t-2.556-4.248q-3.096 1.008-6.462.216t-5.814-3.24l-.396-.432 5.436-5.472.432.432q1.332 1.332 3.204 1.332t3.204-1.332 1.332-3.204-1.332-3.204l-1.08-1.08-5.472-5.472-5.76-5.76 5.472-5.472 5.76 5.76 5.472 5.472 1.044 1.08q2.304 2.304 3.15 5.418t.09 6.174q2.736.396 4.554 2.466t1.818 4.842zm-.072-40.464q0 2.772-1.836 4.86t-4.572 2.484q.936 3.06.108 6.354t-3.24 5.706l-.432.432-5.436-5.472.432-.432q1.332-1.332 1.332-3.204t-1.332-3.204-3.204-1.332-3.204 1.332l-1.08 1.08-5.472 5.472-5.76 5.76-5.472-5.472 5.796-5.76 5.472-5.472 1.044-1.08q2.412-2.412 5.724-3.222t6.408.126q.396-2.7 2.466-4.536t4.878-1.836q3.06 0 5.22 2.178t2.16 5.238z","LANGUAGE":"M23.544-25.631q-.036.108-.45-.018t-1.134-.414l-.72-.324q-1.584-.72-3.132-1.764-.252-.18-1.476-1.134t-1.368-1.026q-2.412 3.708-4.824 6.516-2.916 3.42-3.78 3.96-.144.072-.702.144t-.666 0q.216-.144 2.952-3.312.756-.864 3.078-4.14t2.826-4.248q.612-1.08 1.836-3.546t1.296-2.79q-.288-.036-3.96 1.188-.288.072-.99.27t-1.242.342-.612.18q-.072.072-.072.378t-.036.342q-.18.36-1.116.54-.828.252-1.692 0-.648-.144-1.008-.756-.144-.216-.18-.828.216-.072.882-.18t1.062-.216q2.088-.576 3.78-1.152 3.6-1.26 3.672-1.26.36-.072 1.548-.702t1.584-.774q.324-.108.774-.288t.522-.198.216.018q.072.432-.036 1.188 0 .072-.45.972t-.954 1.926-.612 1.206q-.9 1.8-2.772 4.716l2.304 1.008q.432.216 2.682 1.152t2.43 1.008q.144.036.378.918t.162 1.098zm-7.38-17.496q.108.54-.144 1.008-.432.828-1.8 1.368-1.08.432-2.16.432-.936-.108-1.764-.936-.504-.54-.648-1.476l.036-.108q.108.108.702.18t.954 0 2.088-.576q1.296-.432 1.98-.504.612 0 .756.612zm25.128 4.644l2.268 8.172-5.004-1.512zm-39.888 28.8l24.984-8.352v-37.152l-24.984 8.388v37.116zm44.676-11.412l3.672 1.116-6.516-23.652-3.6-1.116-7.776 19.296 3.672 1.116 1.62-3.96 7.596 2.34zm-18.108-34.632l20.628 6.624v-13.68zm11.196 47.628l5.688.468-1.944 5.76-1.44-2.376q-4.68 2.988-9.936 3.888-2.088.432-3.276.432h-3.024q-2.844 0-7.182-1.404t-6.606-3.06q-.288-.252-.288-.576 0-.288.18-.486t.468-.198q.144 0 .648.27t1.098.594.738.396q2.628 1.332 5.742 2.214t5.67.882q3.42 0 6.012-.522t5.652-1.818q.54-.252 1.098-.558t1.224-.684 1.026-.594zm16.128-38.844v38.844l-27.864-8.856q-.504.216-13.5 4.59t-13.248 4.374q-.468 0-.648-.468l-.036-.108v-38.808q.108-.324.144-.36.18-.216.72-.396 3.816-1.26 5.364-1.8v-13.824l20.088 7.128q.072 0 5.778-1.98t11.376-3.906 5.814-1.926q.72 0 .72.756v15.048z","FAX":"M10.368-50.615q2.376 0 4.068 1.692t1.692 4.068v39.168q0 2.376-1.692 4.068t-4.068 1.692h-4.608q-2.376 0-4.068-1.692t-1.692-4.068v-39.168q0-2.376 1.692-4.068t4.068-1.692h4.608zm49.536 5.868q2.088 1.224 3.348 3.348t1.26 4.608v27.648q0 3.816-2.7 6.516t-6.516 2.7h-31.104q-2.376 0-4.068-1.692t-1.692-4.068v-55.296q0-1.44 1.008-2.448t2.448-1.008h24.192q1.44 0 3.168.72t2.736 1.728l5.472 5.472q1.008 1.008 1.728 2.736t.72 3.168v5.868zm-26.496 35.604v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm0-9.216v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm0-9.216v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm9.216 18.432v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm0-9.216v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm0-9.216v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm9.216 18.432v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm0-9.216v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm0-9.216v-4.608q0-.504-.324-.828t-.828-.324h-4.608q-.504 0-.828.324t-.324.828v4.608q0 .504.324.828t.828.324h4.608q.504 0 .828-.324t.324-.828zm3.456-13.824v-9.216h-5.76q-1.44 0-2.448-1.008t-1.008-2.448v-5.76h-23.04v18.432h32.256z","BUILDING":"M48.384-64.439q.936 0 1.62.684t.684 1.62v59.904q0 .936-.684 1.62t-1.62.684h-46.08q-.936 0-1.62-.684t-.684-1.62v-59.904q0-.936.684-1.62t1.62-.684h46.08zm-29.952 10.368v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828zm0 9.216v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828zm0 9.216v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828zm0 9.216v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828zm-4.608 11.52v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm18.432 46.08v-6.912q0-.504-.324-.828t-.828-.324h-11.52q-.504 0-.828.324t-.324.828v6.912q0 .504.324.828t.828.324h11.52q.504 0 .828-.324t.324-.828zm0-18.432v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm9.216 36.864v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm0-9.216v-2.304q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v2.304q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828z","CHILD":"M42.768-44.711l-10.512 10.512v29.664q0 1.656-1.188 2.844t-2.844 1.188-2.844-1.188-1.188-2.844v-13.824h-2.304v13.824q0 1.656-1.188 2.844t-2.844 1.188-2.844-1.188-1.188-2.844v-29.664l-10.512-10.512q-1.008-1.008-1.008-2.448t1.008-2.448 2.448-1.008 2.448 1.008l8.208 8.208h13.248l8.208-8.208q1.008-1.008 2.448-1.008t2.448 1.008 1.008 2.448-1.008 2.448zm-11.664-5.904q0 3.348-2.358 5.706t-5.706 2.358-5.706-2.358-2.358-5.706 2.358-5.706 5.706-2.358 5.706 2.358 2.358 5.706z","PAW":"M28.08-47.447q0 2.16-.684 4.086t-2.268 3.33-3.78 1.404q-2.736 0-4.968-2.07t-3.312-4.878-1.08-5.436q0-2.16.684-4.086t2.268-3.33 3.78-1.404q2.772 0 4.986 2.07t3.294 4.86 1.08 5.454zm-12.312 17.388q0 2.88-1.512 5.004t-4.284 2.124q-2.736 0-5.094-1.998t-3.618-4.806-1.26-5.472q0-2.88 1.512-5.022t4.284-2.142q2.736 0 5.094 1.998t3.618 4.824 1.26 5.49zm14.184-.972q4.248 0 9.18 3.51t8.244 8.532 3.312 9.162q0 1.656-.612 2.754t-1.746 1.62-2.322.72-2.736.198q-2.448 0-6.75-1.62t-6.57-1.62q-2.376 0-6.93 1.602t-7.218 1.602q-6.588 0-6.588-5.256 0-3.096 2.016-6.894t5.022-6.93 6.75-5.256 6.948-2.124zm8.604-7.596q-2.196 0-3.78-1.404t-2.268-3.33-.684-4.086q0-2.664 1.08-5.454t3.294-4.86 4.986-2.07q2.196 0 3.78 1.404t2.268 3.33.684 4.086q0 2.628-1.08 5.436t-3.312 4.878-4.968 2.07zm15.552-3.744q2.772 0 4.284 2.142t1.512 5.022q0 2.664-1.26 5.472t-3.618 4.806-5.094 1.998q-2.772 0-4.284-2.124t-1.512-5.004q0-2.664 1.26-5.49t3.618-4.824 5.094-1.998z","SPOON":"M25.344-45.431q0 5.22-2.052 8.766t-5.472 4.878l1.62 29.556q.072.936-.576 1.62t-1.584.684h-6.912q-.936 0-1.584-.684t-.576-1.62l1.62-29.556q-3.42-1.332-5.472-4.878t-2.052-8.766q0-4.608 1.53-8.982t4.23-7.2 5.76-2.826 5.76 2.826 4.23 7.2 1.53 8.982z","CUBE":"M32.256-5.795l23.04-12.564v-22.896l-23.04 8.388v27.072zm-2.304-31.14l25.128-9.144-25.128-9.144-25.128 9.144zm29.952-9.072v27.648q0 1.26-.648 2.34t-1.764 1.692l-25.344 13.824q-1.008.576-2.196.576t-2.196-.576l-25.344-13.824q-1.116-.612-1.764-1.692t-.648-2.34v-27.648q0-1.44.828-2.628t2.196-1.692l25.344-9.216q.792-.288 1.584-.288t1.584.288l25.344 9.216q1.368.504 2.196 1.692t.828 2.628z","CUBES":"M23.04-5.687l13.824-6.912v-11.304l-13.824 5.904v12.312zm-2.304-16.344l14.544-6.228-14.544-6.228-14.544 6.228zm39.168 16.344l13.824-6.912v-11.304l-13.824 5.904v12.312zm-2.304-16.344l14.544-6.228-14.544-6.228-14.544 6.228zm-16.128-10.548l13.824-5.94v-9.576l-13.824 5.904v9.612zm-2.304-13.644l15.876-6.804-15.876-6.804-15.876 6.804zm39.168 18.648v14.976q0 1.296-.684 2.412t-1.872 1.692l-16.128 8.064q-.9.504-2.052.504t-2.052-.504l-16.128-8.064q-.18-.072-.252-.144-.072.072-.252.144l-16.128 8.064q-.9.504-2.052.504t-2.052-.504l-16.128-8.064q-1.188-.576-1.872-1.692t-.684-2.412v-14.976q0-1.368.774-2.52t2.034-1.728l15.624-6.696v-14.4q0-1.368.774-2.52t2.034-1.728l16.128-6.912q.828-.36 1.8-.36t1.8.36l16.128 6.912q1.26.576 2.034 1.728t.774 2.52v14.4l15.624 6.696q1.296.576 2.052 1.728t.756 2.52z","BEHANCE":"M66.528-52.235h-18.396v4.464h18.396v-4.464zm-9.072 15.336q-3.24 0-5.256 1.89t-2.232 5.13h14.688q-.648-7.02-7.2-7.02zm.576 21.06q2.268 0 4.392-1.152t2.736-3.132h7.956q-3.6 11.052-15.372 11.052-7.704 0-12.258-4.752t-4.554-12.492q0-7.488 4.698-12.438t12.114-4.95q4.968 0 8.658 2.448t5.508 6.444 1.818 8.928q0 .612-.072 1.692h-23.688q0 3.996 2.07 6.174t5.994 2.178zm-48.06-1.8h10.656q7.38 0 7.38-6.012 0-6.48-7.164-6.48h-10.872v12.492zm0-19.332h10.116q2.808 0 4.446-1.314t1.638-4.086q0-5.184-6.84-5.184h-9.36v10.584zm-9.972-18.324h21.384q3.132 0 5.58.504t4.554 1.71 3.24 3.474 1.134 5.544q0 6.516-6.192 9.468 4.104 1.152 6.192 4.14t2.088 7.344q0 2.7-.882 4.914t-2.376 3.726-3.546 2.556-4.356 1.512-4.824.468h-21.996v-45.36z","BEHANCE_SQUARE":"M44.928-59.831q4.284 0 7.326 3.042t3.042 7.326v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56zm-26.964 13.212h-13.356v28.332h13.752q4.212 0 7.092-2.07t2.88-6.138q0-5.688-5.148-7.2 3.852-1.872 3.852-5.904 0-2.052-.702-3.474t-2.034-2.178-2.844-1.062-3.492-.306zm-.792 11.448h-6.336v-6.624h5.868q4.284 0 4.284 3.24 0 3.384-3.816 3.384zm.324 12.06h-6.66v-7.812h6.804q4.464 0 4.464 4.068 0 3.744-4.608 3.744zm23.4 1.152q-2.448 0-3.744-1.368t-1.296-3.852h14.796q.036-.36.036-1.08 0-4.752-2.682-7.938t-7.326-3.186q-4.608 0-7.56 3.096t-2.952 7.776q0 4.86 2.844 7.812t7.668 2.952q7.38 0 9.612-6.876h-4.968q-.396 1.224-1.71 1.944t-2.718.72zm-.36-13.176q4.068 0 4.464 4.392h-9.144q.144-2.016 1.404-3.204t3.276-1.188zm-5.832-9.576h11.484v2.772h-11.484v-2.772z","STEAM":"M56.952-43.487q0 3.636-2.574 6.21t-6.21 2.574-6.21-2.574-2.574-6.21 2.574-6.21 6.21-2.574 6.21 2.574 2.574 6.21zm-27.72 26.712q0-3.744-2.628-6.372t-6.372-2.628q-.972 0-1.944.216l3.744 1.512q2.772 1.116 3.942 3.834t.054 5.454q-1.116 2.772-3.852 3.924t-5.472.036q-.756-.288-2.232-.882t-2.196-.882q1.152 2.16 3.276 3.474t4.68 1.314q3.744 0 6.372-2.628t2.628-6.372zm29.88-26.676q0-4.536-3.222-7.758t-7.758-3.222q-4.572 0-7.794 3.222t-3.222 7.758q0 4.572 3.222 7.776t7.794 3.204q4.536 0 7.758-3.204t3.222-7.776zm5.4 0q0 6.804-4.806 11.592t-11.574 4.788l-15.732 11.484q-.432 4.644-3.924 7.848t-8.244 3.204q-4.356 0-7.704-2.736t-4.248-6.912l-8.28-3.312v-15.444l14.004 5.652q2.844-1.728 6.228-1.728.468 0 1.26.072l10.224-14.652q.072-6.732 4.878-11.484t11.538-4.752q6.768 0 11.574 4.806t4.806 11.574z","STEAM_SQUARE":"M44.712-41.147q0-2.88-2.052-4.914t-4.932-2.034-4.914 2.052-2.034 4.896q0 2.88 2.034 4.914t4.914 2.034 4.932-2.034 2.052-4.914zm-21.96 21.168q0 2.988-2.088 5.058t-5.04 2.07q-2.016 0-3.708-1.044t-2.592-2.772q1.872.72 3.528 1.44 2.16.864 4.32-.054t3.06-3.114q.864-2.16-.054-4.32t-3.114-3.024l-2.952-1.188q.792-.18 1.512-.18 2.952 0 5.04 2.07t2.088 5.058zm32.544-29.484v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-5.508l6.192 2.484q.72 3.312 3.366 5.472t6.066 2.16q3.744 0 6.516-2.52t3.132-6.228l12.42-9.072q5.4 0 9.198-3.798t3.798-9.162q0-5.4-3.798-9.198t-9.198-3.798q-5.328 0-9.108 3.762t-3.852 9.09l-8.1 11.592q-.324-.036-1.008-.036-2.7 0-4.932 1.332l-10.692-4.284v-16.848q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326zm-8.892 8.388q0 3.6-2.556 6.138t-6.156 2.538-6.138-2.538-2.538-6.138 2.538-6.156 6.138-2.556q3.636 0 6.174 2.538t2.538 6.174z","RECYCLE":"M30.096-22.355l-.54 13.248-.072.792-15.12-1.044q-1.296-.108-2.412-1.134t-1.692-2.358q-.396-.972-.522-1.98t.144-2.34.432-1.98.774-2.304.684-1.908q2.808.432 18.324 1.008zm-13.932-21.096l6.48 13.644-5.292-3.312q-2.268 2.592-4.014 5.202t-2.61 4.5-1.422 3.402-.666 2.268l-.144.756-6.84-12.852q-.612-.936-.648-2.016t.216-1.692l.288-.648q1.26-2.268 4.104-6.768l-5.04-3.096zm44.316 18.612l-6.768 12.924q-.432 1.044-1.314 1.674t-1.566.738l-.648.144q-2.556.252-7.884.432l.288 5.904-8.28-13.212 7.596-13.032.252 6.228q6.12.576 10.188.18t6.12-1.188zm-28.26-33.264q-1.692 2.268-9.54 15.66l-11.412-6.732-.684-.432 8.1-12.816q.72-1.116 2.16-1.62t2.88-.36q.864.072 1.746.432t1.512.756 1.494 1.188 1.296 1.242 1.296 1.422 1.152 1.26zm23.58 11.052l7.632 13.068q.648 1.332.45 2.736t-.99 2.664q-.468.72-1.188 1.332t-1.368 1.008-1.746.792-1.692.576-1.854.504-1.656.432q-1.224-2.592-9.54-15.696l11.268-7.02zm-5.148-8.136l5.112-2.988-7.92 13.428-15.084-.72 5.436-3.096q-1.224-3.204-2.7-5.976t-2.718-4.446-2.322-2.88-1.692-1.674l-.612-.468 14.58.036q1.116-.108 2.088.378t1.404 1.026l.396.54q1.404 2.196 4.032 6.84z","CAR":"M17.28-25.271q0-2.376-1.692-4.068t-4.068-1.692-4.068 1.692-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068zm1.296-11.52h36.576l-3.204-12.852q-.072-.288-.504-.63t-.756-.342h-27.648q-.324 0-.756.342t-.504.63zm49.392 11.52q0-2.376-1.692-4.068t-4.068-1.692-4.068 1.692-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068zm5.76-3.456v13.824q0 .504-.324.828t-.828.324h-3.456v4.608q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896v-4.608h-36.864v4.608q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896v-4.608h-3.456q-.504 0-.828-.324t-.324-.828v-13.824q0-3.348 2.358-5.706t5.706-2.358h1.008l3.78-15.084q.828-3.384 3.744-5.67t6.444-2.286h27.648q3.528 0 6.444 2.286t3.744 5.67l3.78 15.084h1.008q3.348 0 5.706 2.358t2.358 5.706z","TAXI":"M65.664-32.183q3.348 0 5.706 2.358t2.358 5.706v13.824q0 .504-.324.828t-.828.324h-3.456v2.304q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896v-2.304h-36.864v2.304q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896v-2.304h-3.456q-.504 0-.828-.324t-.324-.828v-13.824q0-3.348 2.358-5.706t5.706-2.358h1.008l3.78-15.084q.828-3.384 3.744-5.67t6.444-2.286h4.608v-8.064q0-.504.324-.828t.828-.324h16.128q.504 0 .828.324t.324.828v8.064h4.608q3.528 0 6.444 2.286t3.744 5.67l3.78 15.084h1.008zm-54.144 17.28q2.376 0 4.068-1.692t1.692-4.068-1.692-4.068-4.068-1.692-4.068 1.692-1.692 4.068 1.692 4.068 4.068 1.692zm7.056-17.28h36.576l-3.204-12.852q-.072-.288-.504-.63t-.756-.342h-27.648q-.324 0-.756.342t-.504.63zm43.632 17.28q2.376 0 4.068-1.692t1.692-4.068-1.692-4.068-4.068-1.692-4.068 1.692-1.692 4.068 1.692 4.068 4.068 1.692z","TREE":"M54.144-11.447q0 .936-.684 1.62t-1.62.684h-16.632q.036.612.216 3.15t.18 3.906q0 .9-.648 1.53t-1.548.63h-11.52q-.9 0-1.548-.63t-.648-1.53q0-1.368.18-3.906t.216-3.15h-16.632q-.936 0-1.62-.684t-.684-1.62.684-1.62l14.472-14.508h-8.244q-.936 0-1.62-.684t-.684-1.62.684-1.62l14.472-14.508h-7.092q-.936 0-1.62-.684t-.684-1.62.684-1.62l13.824-13.824q.684-.684 1.62-.684t1.62.684l13.824 13.824q.684.684.684 1.62t-.684 1.62-1.62.684h-7.092l14.472 14.508q.684.684.684 1.62t-.684 1.62-1.62.684h-8.244l14.472 14.508q.684.684.684 1.62z","SPOTIFY":"M40.572-20.879q0-1.152-1.08-1.836-6.948-4.14-16.092-4.14-4.788 0-10.332 1.224-1.512.324-1.512 1.872 0 .72.486 1.242t1.278.522q.18 0 1.332-.288 4.752-.972 8.748-.972 8.136 0 14.292 3.708.684.396 1.188.396.684 0 1.188-.486t.504-1.242zm3.456-7.74q0-1.44-1.26-2.196-8.532-5.076-19.728-5.076-5.508 0-10.908 1.512-1.728.468-1.728 2.304 0 .9.63 1.53t1.53.63q.252 0 1.332-.288 4.392-1.188 9.036-1.188 10.044 0 17.568 4.464.864.468 1.368.468.9 0 1.53-.63t.63-1.53zm3.888-8.928q0-1.692-1.44-2.52-4.536-2.628-10.548-3.978t-12.348-1.35q-7.344 0-13.104 1.692-.828.252-1.386.918t-.558 1.746q0 1.116.738 1.872t1.854.756q.396 0 1.44-.288 4.788-1.332 11.052-1.332 5.724 0 11.142 1.224t9.126 3.42q.756.432 1.44.432 1.044 0 1.818-.738t.774-1.854zm7.38 5.364q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","DEVIANTART":"M36.864-53.531l-10.908 20.952.864 1.116h10.044v14.94h-18.252l-1.584 1.08-5.112 9.828-1.08 1.08h-10.836v-10.908l10.908-20.988-.864-1.08h-10.044v-14.94h18.252l1.584-1.08 5.112-9.828 1.08-1.08h10.836v10.908z","SOUNDCLOUD":"M28.224-15.047l.576-8.676-.576-18.828q-.036-.36-.27-.612t-.594-.252q-.324 0-.576.252t-.252.612l-.504 18.828.504 8.676q.036.36.27.594t.558.234q.792 0 .864-.828zm10.656-1.044l.396-7.596-.432-21.096q0-.576-.468-.864-.288-.18-.576-.18t-.576.18q-.468.288-.468.864l-.036.216-.36 20.844q0 .036.396 8.496v.036q0 .36.216.612.324.396.828.396.396 0 .72-.324.324-.252.324-.72zm-37.62-12.24l.72 4.608-.72 4.536q-.072.324-.324.324t-.324-.324l-.612-4.536.612-4.608q.072-.324.324-.324t.324.324zm3.096-2.844l.936 7.452-.936 7.308q-.072.324-.36.324-.324 0-.324-.36l-.828-7.272.828-7.452q0-.324.324-.324.288 0 .36.324zm10.08 16.308zm-6.768-17.676l.9 8.82-.9 8.532q0 .396-.396.396-.36 0-.432-.396l-.756-8.532.756-8.82q.072-.432.432-.432.396 0 .396.432zm3.384-.252l.828 9.072-.828 8.784q-.072.468-.504.468-.468 0-.468-.468l-.756-8.784.756-9.072q0-.468.468-.468.432 0 .504.468zm3.384.648l.756 8.424-.756 8.856q-.072.576-.576.576-.216 0-.378-.162t-.162-.414l-.72-8.856.72-8.424q0-.216.162-.378t.378-.162q.504 0 .576.54zm13.788 17.1zm-10.404-22.356l.756 13.68-.756 8.856q0 .252-.18.45t-.432.198q-.576 0-.648-.648l-.648-8.856.648-13.68q.072-.648.648-.648.252 0 .432.198t.18.45zm3.384-3.096l.684 16.848-.684 8.784q0 .288-.198.486t-.486.198q-.648 0-.72-.684l-.576-8.784.576-16.848q.072-.684.72-.684.288 0 .486.198t.198.486zm3.528-1.44l.648 18.216-.648 8.712q-.072.756-.792.756-.684 0-.756-.756l-.576-8.712.576-18.216q0-.324.234-.558t.522-.234q.324 0 .54.234t.252.558zm14.112 26.712zm-7.128-26.856l.54 18.36-.54 8.604q0 .36-.27.63t-.63.27-.612-.252-.288-.648l-.504-8.604.504-18.36q0-.396.27-.648t.63-.252.63.252.27.648zm3.564.684l.504 17.712-.504 8.496q0 .396-.288.684t-.684.288-.684-.288-.324-.684l-.432-8.496.432-17.712q.036-.432.324-.72t.684-.288.666.288.306.72zm7.632 17.712l-.504 8.316q0 .468-.324.792t-.792.324-.792-.324-.36-.792l-.216-4.104-.216-4.212.432-22.896v-.108q.072-.54.432-.864.324-.252.72-.252.288 0 .54.18.504.288.576.936zm40.032-.684q0 4.212-2.988 7.182t-7.2 2.97h-28.296q-.468-.072-.792-.396t-.324-.792v-32.364q0-.828 1.008-1.188 3.06-1.224 6.516-1.224 7.02 0 12.168 4.734t5.76 11.646q1.908-.792 3.96-.792 4.212 0 7.2 2.988t2.988 7.236z","DATABASE":"M27.648-36.791q8.532 0 15.948-1.548t11.7-4.572v6.12q0 2.484-3.708 4.608t-10.08 3.366-13.86 1.242-13.86-1.242-10.08-3.366-3.708-4.608v-6.12q4.284 3.024 11.7 4.572t15.948 1.548zm0 27.648q8.532 0 15.948-1.548t11.7-4.572v6.12q0 2.484-3.708 4.608t-10.08 3.366-13.86 1.242-13.86-1.242-10.08-3.366-3.708-4.608v-6.12q4.284 3.024 11.7 4.572t15.948 1.548zm0-13.824q8.532 0 15.948-1.548t11.7-4.572v6.12q0 2.484-3.708 4.608t-10.08 3.366-13.86 1.242-13.86-1.242-10.08-3.366-3.708-4.608v-6.12q4.284 3.024 11.7 4.572t15.948 1.548zm0-41.472q7.488 0 13.86 1.242t10.08 3.366 3.708 4.608v4.608q0 2.484-3.708 4.608t-10.08 3.366-13.86 1.242-13.86-1.242-10.08-3.366-3.708-4.608v-4.608q0-2.484 3.708-4.608t10.08-3.366 13.86-1.242z","FILE_PDF_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-18.504-21.348q1.188.936 3.024 2.016 2.124-.252 4.212-.252 5.292 0 6.372 1.764.576.792.072 1.872l-.036.072-.072.072v.036q-.216 1.368-2.556 1.368-1.728 0-4.14-.72t-4.68-1.908q-7.956.864-14.112 2.988-5.508 9.432-8.712 9.432-.54 0-1.008-.252l-.864-.432-.216-.18q-.36-.36-.216-1.296.324-1.44 2.016-3.294t4.752-3.474q.504-.324.828.216.072.072.072.144 1.872-3.06 3.852-7.092 2.448-4.896 3.744-9.432-.864-2.952-1.098-5.742t.234-4.59q.396-1.44 1.512-1.44h.792q.828 0 1.26.54.648.756.324 2.448-.072.216-.144.288.036.108.036.288v1.08q-.072 4.428-.504 6.912 1.98 5.904 5.256 8.568zm-20.736 14.796q1.872-.864 4.932-5.688-1.836 1.44-3.15 3.024t-1.782 2.664zm14.328-33.12q-.54 1.512-.072 4.752.036-.252.252-1.584 0-.108.252-1.548.036-.144.144-.288l-.036-.072-.018-.054-.018-.054q-.036-.792-.468-1.296l-.036.072v.072zm-4.464 23.796q4.86-1.944 10.224-2.916-.072-.036-.468-.342t-.576-.486q-2.736-2.412-4.572-6.336-.972 3.096-2.988 7.092-1.08 2.016-1.62 2.988zm23.256-.576q-.864-.864-5.04-.864 2.736 1.008 4.464 1.008.504 0 .648-.036l-.072-.108z","FILE_WORD_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-42.3-32.256v3.852h2.52l5.904 23.796h5.724l4.608-17.46q.252-.72.36-1.656.072-.576.072-.864h.144l.108.864q.036.108.126.72t.198.936l4.608 17.46h5.724l5.904-23.796h2.52v-3.852h-10.8v3.852h3.24l-3.564 15.768q-.18.72-.252 1.656l-.072.756h-.144l-.108-.756q-.036-.18-.144-.756t-.18-.9l-5.184-19.62h-4.104l-5.184 19.62q-.072.324-.162.882t-.126.774l-.144.756h-.144l-.072-.756q-.072-.936-.252-1.656l-3.564-15.768h3.24v-3.852h-10.8z","FILE_EXCEL_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-35.244-8.424v3.816h10.116v-3.816h-2.7l3.708-5.796q.18-.252.36-.594t.27-.486.126-.144h.072q.036.144.18.36.072.144.162.27t.216.288.234.306l3.852 5.796h-2.736v3.816h10.476v-3.816h-2.448l-6.912-9.828 7.02-10.152h2.412v-3.852h-10.044v3.852h2.664l-3.708 5.724q-.144.252-.36.594t-.324.486l-.072.108h-.072q-.036-.144-.18-.36-.216-.396-.612-.828l-3.816-5.724h2.736v-3.852h-10.44v3.852h2.448l6.804 9.792-6.984 10.188h-2.448z","FILE_POWERPOINT_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-35.712-8.424v3.816h11.772v-3.816h-3.348v-6.012h4.932q2.736 0 4.248-.54 2.412-.828 3.834-3.132t1.422-5.256q0-2.916-1.332-5.076t-3.6-3.132q-1.728-.684-4.68-.684h-13.248v3.852h3.312v19.98h-3.312zm12.708-10.08h-4.284v-9.648h4.32q1.872 0 2.988.648 2.016 1.188 2.016 4.14 0 3.204-2.232 4.32-1.116.54-2.808.54z","FILE_PICTURE_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-4.608-16.128v11.52h-36.864v-6.912l6.912-6.912 4.608 4.608 13.824-13.824zm-29.952-6.912q-2.88 0-4.896-2.016t-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896-2.016 4.896-4.896 2.016z","FILE_ZIP_O":"M23.04-50.615v-4.608h-4.608v4.608h4.608zm4.608 4.608v-4.608h-4.608v4.608h4.608zm-4.608 4.608v-4.608h-4.608v4.608h4.608zm4.608 4.608v-4.608h-4.608v4.608h4.608zm25.2-13.968q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-4.608v4.608h-4.608v-4.608h-18.432v55.296h46.08zm-22.572-25.956l3.852 12.564q.288.972.288 1.872 0 2.988-2.61 4.95t-6.606 1.962-6.606-1.962-2.61-4.95q0-.9.288-1.872.756-2.268 4.32-14.256v-4.608h4.608v4.608h2.844q.792 0 1.404.468t.828 1.224zm-5.076 16.74q1.908 0 3.258-.684t1.35-1.62-1.35-1.62-3.258-.684-3.258.684-1.35 1.62 1.35 1.62 3.258.684z","FILE_SOUND_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-28.368-29.304q.72.288.72 1.08v19.584q0 .792-.72 1.08-.288.072-.432.072-.432 0-.828-.324l-5.976-6.012h-4.716q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h4.716l5.976-6.012q.576-.54 1.26-.252zm15.012 24.804q1.116 0 1.8-.864 4.644-5.724 4.644-13.068t-4.644-13.068q-.576-.756-1.548-.864t-1.692.504q-.756.612-.846 1.566t.522 1.71q3.6 4.428 3.6 10.152t-3.6 10.152q-.612.756-.522 1.71t.846 1.53q.648.54 1.44.54zm-7.596-5.328q.972 0 1.692-.72 3.132-3.348 3.132-7.884t-3.132-7.884q-.648-.684-1.62-.72t-1.656.612-.72 1.602.648 1.674q1.872 2.052 1.872 4.716t-1.872 4.716q-.684.72-.648 1.674t.72 1.602q.72.612 1.584.612z","FILE_VIDEO_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-23.04-32.256q1.872 0 3.24 1.368t1.368 3.24v13.824q0 1.872-1.368 3.24t-3.24 1.368h-13.824q-1.872 0-3.24-1.368t-1.368-3.24v-13.824q0-1.872 1.368-3.24t3.24-1.368h13.824zm17.712.072q.72.288.72 1.08v20.736q0 .792-.72 1.08-.288.072-.432.072-.504 0-.828-.324l-9.54-9.576v-3.24l9.54-9.576q.324-.324.828-.324.144 0 .432.072z","FILE_CODE_O":"M52.848-50.759q1.008 1.008 1.728 2.736t.72 3.168v41.472q0 1.44-1.008 2.448t-2.448 1.008h-48.384q-1.44 0-2.448-1.008t-1.008-2.448v-57.6q0-1.44 1.008-2.448t2.448-1.008h32.256q1.44 0 3.168.72t2.736 1.728zm-15.984-8.784v13.536h13.536q-.36-1.044-.792-1.476l-11.268-11.268q-.432-.432-1.476-.792zm13.824 55.008v-36.864h-14.976q-1.44 0-2.448-1.008t-1.008-2.448v-14.976h-27.648v55.296h46.08zm-33.408-32.256q.288-.396.756-.45t.864.234l1.836 1.368q.396.288.45.756t-.234.864l-6.552 8.748 6.552 8.748q.288.396.234.864t-.45.756l-1.836 1.368q-.396.288-.864.234t-.756-.45l-8.136-10.836q-.504-.684 0-1.368zm28.872 10.836q.504.684 0 1.368l-8.136 10.836q-.288.396-.756.45t-.864-.234l-1.836-1.368q-.396-.288-.45-.756t.234-.864l6.552-8.748-6.552-8.748q-.288-.396-.234-.864t.45-.756l1.836-1.368q.396-.288.864-.234t.756.45zm-22.32 16.596q-.468-.072-.738-.468t-.198-.864l4.968-29.916q.072-.468.468-.738t.864-.198l2.268.36q.468.072.738.468t.198.864l-4.968 29.916q-.072.468-.468.738t-.864.198z","VINE":"M53.892-34.667v7.128q-3.636.828-7.128.828-2.34 4.896-5.958 9.756t-6.534 7.758-4.608 3.834q-2.88 1.62-5.832-.108-1.008-.612-2.178-1.566t-3.06-3.006-3.69-4.626-3.87-6.624-3.798-8.784-3.294-11.322-2.538-14.04h10.188q.936 7.848 2.52 14.346t3.762 11.412 4.374 8.478 5.04 7.02q6.084-6.084 10.332-14.616-5.112-2.592-8.028-7.92t-2.916-11.988q0-6.912 3.744-11.322t10.224-4.41q6.408 0 9.828 3.798t3.42 10.71q0 5.724-2.088 10.296-.252.036-.702.108t-1.656.072-2.268-.216-2.232-.918-1.818-1.854q1.116-3.708 1.116-6.624 0-3.132-1.044-4.752t-2.844-1.62q-1.908 0-3.06 1.782t-1.152 5.058q0 6.696 3.78 10.566t9.612 3.87q2.232 0 4.356-.504z","CODEPEN":"M7.776-22.355l21.708 14.472v-12.924l-12.024-8.028zm-2.232-5.184l6.948-4.644-6.948-4.644v9.288zm29.484 19.656l21.708-14.472-9.684-6.48-12.024 8.028v12.924zm-2.772-17.748l9.792-6.552-9.792-6.552-9.792 6.552zm-14.796-9.9l12.024-8.028v-12.924l-21.708 14.472zm34.56 3.348l6.948 4.644v-9.288zm-4.968-3.348l9.684-6.48-21.708-14.472v12.924zm17.46-6.48v19.656q0 1.476-1.224 2.304l-29.484 19.656q-.756.468-1.548.468t-1.548-.468l-29.484-19.656q-1.224-.828-1.224-2.304v-19.656q0-1.476 1.224-2.304l29.484-19.656q.756-.468 1.548-.468t1.548.468l29.484 19.656q1.224.828 1.224 2.304z","JSFIDDLE":"M64.8-36.647q3.996 1.656 6.462 5.238t2.466 7.974q0 5.904-4.248 10.098t-10.26 4.194l-.414-.018-.378-.018h-43.812000000000005q-6.12-.36-10.368-4.518t-4.248-10.098q0-3.96 1.98-7.308t5.292-5.292q-.432-1.404-.432-2.952 0-4.14 2.952-7.056t7.164-2.916q3.42 0 6.192 2.088 2.7-5.544 8.01-8.928t11.754-3.384q5.976 0 11.016 2.898t7.974 7.866 2.934 10.836l-.018.648-.018.648zm-47.952 9.576q0 4.392 3.024 6.948t7.488 2.556q4.932 0 8.64-3.564-.576-.72-1.71-2.034t-1.566-1.818q-2.412 2.34-5.184 2.34-1.98 0-3.366-1.206t-1.386-3.15q0-1.908 1.386-3.132t3.294-1.224q1.584 0 3.042.756t2.628 1.98 2.34 2.7 2.484 2.952 2.772 2.7 3.492 1.98 4.374.756q4.356 0 7.362-2.574t3.006-6.858q0-4.356-3.024-6.912t-7.452-2.556q-5.148 0-8.676 3.492.504.576 1.062 1.224t1.242 1.44 1.044 1.224q2.376-2.304 5.112-2.304 1.872 0 3.312 1.188t1.44 3.024q0 2.052-1.332 3.294t-3.384 1.242q-1.548 0-2.97-.756t-2.592-1.98-2.358-2.7-2.502-2.952-2.79-2.7-3.474-1.98-4.266-.756q-4.392 0-7.452 2.538t-3.06 6.822z","SUPPORT":"M32.256-64.439q6.552 0 12.528 2.556t10.296 6.876 6.876 10.296 2.556 12.528-2.556 12.528-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556zm0 4.608q-6.84 0-12.996 3.24l6.984 6.984q2.952-1.008 6.012-1.008t6.012 1.008l6.984-6.984q-6.156-3.24-12.996-3.24zm-24.408 40.644l6.984-6.984q-1.008-2.952-1.008-6.012t1.008-6.012l-6.984-6.984q-3.24 6.156-3.24 12.996t3.24 12.996zm24.408 14.652q6.84 0 12.996-3.24l-6.984-6.984q-2.952 1.008-6.012 1.008t-6.012-1.008l-6.984 6.984q6.156 3.24 12.996 3.24zm0-13.824q5.724 0 9.774-4.05t4.05-9.774-4.05-9.774-9.774-4.05-9.774 4.05-4.05 9.774 4.05 9.774 9.774 4.05zm17.424-7.812l6.984 6.984q3.24-6.156 3.24-12.996t-3.24-12.996l-6.984 6.984q1.008 2.952 1.008 6.012t-1.008 6.012z","CIRCLE_O_NOTCH":"M63.36-32.183q0 6.336-2.466 12.096t-6.624 9.918-9.918 6.624-12.096 2.466-12.096-2.466-9.918-6.624-6.624-9.918-2.466-12.096q0-7.668 3.492-14.346t9.54-10.998 13.464-5.436v8.208q-7.956 1.62-13.194 7.956t-5.238 14.616q0 4.68 1.836 8.946t4.914 7.344 7.344 4.914 8.946 1.836 8.946-1.836 7.344-4.914 4.914-7.344 1.836-8.946q0-8.28-5.238-14.616t-13.194-7.956v-8.208q7.416 1.116 13.464 5.436t9.54 10.998 3.492 14.346z","REBEL":"M.684-32.975q.288-7.812 4.176-14.616t10.98-11.448h.18l-.036.108q-.288.288-1.008 1.206t-1.872 2.754-2.16 3.978-1.602 4.878-.504 5.418 1.404 5.67 3.906 5.544q1.8 1.8 3.672 2.502t3.258.414 2.502-.846 1.692-1.17l.576-.576q1.404-1.836 1.908-4.194t.234-4.41-.756-3.852-.954-2.88l-.504-1.044q-.36-.9-1.098-1.782t-1.548-1.476-1.566-1.062-1.26-.684l-.468-.216 3.744-4.14q1.404.612 2.808 1.872t2.124 2.196l.684.972q.036-1.728-.666-3.726t-1.458-3.15l-.72-1.116 5.796-6.588 5.76 6.516q-1.188 1.656-1.89 3.69t-.81 3.258l-.144 1.188q.792-1.332 2.214-2.61t2.43-1.89l1.008-.612 3.708 4.14q-1.584.504-3.06 1.8t-2.16 2.34l-.684 1.044q-1.116 2.016-1.728 4.806t-.252 6.12 2.052 5.634q1.188 1.62 2.79 2.178t3.06.198 2.736-.954 2.07-1.206l.756-.576q2.16-1.908 3.474-4.14t1.746-4.374.36-4.374-.648-4.248-1.332-3.87-1.638-3.348-1.62-2.592-1.242-1.71l-.468-.612q-.504-.468-.252-.468l.36.108q1.44 1.044 2.25 1.656t2.232 1.8 2.304 2.088 2.106 2.34 1.998 2.772 1.638 3.168 1.368 3.708.846 4.212.378 4.896q.108 9.324-3.888 16.74t-11.232 11.556-16.416 4.14q-6.66 0-12.636-2.664t-10.206-7.128-6.624-10.548-2.178-12.708z","GE":"M31.464-5.471v2.376q-7.488-.216-13.86-3.942t-10.188-9.918l2.088-1.224q1.044 1.764 2.628 3.564l2.34-2.052q5.328 6.048 13.248 7.632l-.612 3.096q2.34.432 4.356.468zm-21.528-19.08l-2.988 1.008q.792 2.16 1.764 4.032l-2.052 1.188q-3.528-6.48-3.528-13.86t3.528-13.86l2.052 1.188q-1.08 2.016-1.764 4.032l2.952 1.008q-1.26 3.6-1.26 7.632 0 3.924 1.296 7.632zm45.072 6.372l2.088 1.224q-3.816 6.192-10.188 9.918t-13.86 3.942v-2.376q2.016-.036 4.356-.468l-.612-3.096q7.92-1.584 13.248-7.632l2.34 2.052q1.584-1.8 2.628-3.564zm-5.436-19.944l-8.388 2.88q.504 1.512.504 3.06t-.504 3.06l8.352 2.88q-1.116 3.312-3.528 6.084l-6.66-5.832q-2.052 2.412-5.292 3.06l1.728 8.676q-1.872.36-3.528.36t-3.528-.36l1.728-8.676q-3.24-.648-5.292-3.06l-6.66 5.832q-2.412-2.772-3.528-6.084l8.352-2.88q-.504-1.512-.504-3.06t.504-3.06l-8.388-2.88q1.188-3.348 3.564-6.084l6.66 5.832q2.124-2.448 5.292-3.096l-1.728-8.64q1.584-.36 3.528-.36t3.528.36l-1.728 8.64q3.168.648 5.292 3.096l6.66-5.832q2.376 2.736 3.564 6.084zm-18.108-23.148v2.376q-2.34.072-4.356.468l.612 3.096q-7.92 1.512-13.248 7.596l-2.34-2.016q-1.368 1.512-2.628 3.528l-2.052-1.188q3.816-6.192 10.152-9.918t13.86-3.942zm29.916 29.088q0 7.38-3.528 13.86l-2.052-1.188q.972-1.872 1.764-4.032l-2.988-1.008q1.296-3.708 1.296-7.632 0-4.032-1.26-7.632l2.952-1.008q-.684-2.016-1.764-4.032l2.052-1.188q3.528 6.48 3.528 13.86zm-4.32-15.228l-2.052 1.188q-1.26-2.016-2.628-3.528l-2.34 2.016q-5.328-6.084-13.248-7.596l.612-3.096q-2.016-.396-4.356-.468v-2.376q7.524.216 13.86 3.942t10.152 9.918zm5.868 15.228q0-6.228-2.43-11.916t-6.534-9.792-9.792-6.534-11.916-2.43-11.916 2.43-9.792 6.534-6.534 9.792-2.43 11.916 2.43 11.916 6.534 9.792 9.792 6.534 11.916 2.43 11.916-2.43 9.792-6.534 6.534-9.792 2.43-11.916zm1.584 0q0 6.552-2.556 12.528t-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556 12.528 2.556 10.296 6.876 6.876 10.296 2.556 12.528z","GIT_SQUARE":"M20.952-17.351q0 2.376-3.348 2.376-3.852 0-3.852-2.268 0-2.304 3.528-2.304 3.672 0 3.672 2.196zm-1.296-16.776q0 3.06-2.664 3.06-2.772 0-2.772-3.024 0-3.24 2.772-3.24 1.296 0 1.98.918t.684 2.286zm5.976-2.7v-4.5q-2.808 1.044-4.86 1.044-1.8-1.044-3.96-1.044-3.096 0-5.22 2.052t-2.124 5.148q0 1.8 1.062 3.672t2.646 2.412v.108q-1.368.612-1.368 3.06 0 1.908 1.476 2.772v.108q-4.068 1.332-4.068 5.004 0 1.62.72 2.826t1.944 1.836 2.592.918 2.916.288q8.064 0 8.064-6.768 0-2.412-1.728-3.564t-4.536-1.656q-.972-.18-1.854-.738t-.882-1.422q0-1.584 1.764-1.872 2.772-.54 4.392-2.52t1.62-4.824q0-.864-.36-1.872 1.332-.324 1.764-.468zm2.124 15.084h4.932q-.072-.972-.072-2.952v-13.932q0-1.656.072-2.484h-4.932q.108.828.108 2.556v14.112q0 1.8-.108 2.7zm18.324-.576v-4.356q-1.08.756-2.448.756-1.908 0-1.908-2.952v-8.1h1.872q.324 0 .954.036t.954.036v-4.212h-3.78q0-2.952.108-3.672h-5.04q.144.864.144 1.98v1.692h-2.16v4.212l1.332-.108.396.018.432.018v.072h-.072v7.812q0 1.332.09 2.304t.414 2.034.882 1.746 1.566 1.116 2.376.432q2.304 0 3.888-.864zm-12.816-25.416q0-1.296-.864-2.286t-2.16-.99-2.178.972-.882 2.304q0 1.296.9 2.25t2.16.954 2.142-.972.882-2.232zm22.032-1.728v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","GIT":"M21.42-9.935q0-3.6-5.94-3.6-5.688 0-5.688 3.744 0 3.636 6.192 3.636 5.436 0 5.436-3.78zm-2.124-27.18q0-2.196-1.08-3.672t-3.204-1.476q-4.464 0-4.464 5.22 0 4.86 4.464 4.86 4.284 0 4.284-4.932zm9.684-11.664v7.272q-1.296.432-2.844.792.576 1.548.576 3.024 0 4.572-2.628 7.794t-7.092 4.05q-1.44.288-2.142.972t-.702 2.088q0 1.116.81 1.854t2.088 1.152 2.826.792 3.096.918 2.826 1.35 2.088 2.304.81 3.546q0 10.944-13.068 10.944-2.484 0-4.68-.45t-4.176-1.476-3.15-2.952-1.17-4.59q0-5.94 6.552-8.1v-.144q-2.412-1.476-2.412-4.536 0-3.924 2.268-4.932v-.144q-2.592-.864-4.302-3.906t-1.71-5.958q0-5.004 3.42-8.334t8.46-3.33q3.456 0 6.408 1.692 3.528 0 7.848-1.692zm11.448 31.716h-7.992q.144-1.62.144-4.824v-21.924q0-3.384-.144-4.608h7.992q-.144 1.188-.144 4.464v22.068q0 3.204.144 4.824zm21.636-7.992v7.056q-2.556 1.404-6.264 1.404-2.232 0-3.852-.72t-2.52-1.8-1.422-2.808-.666-3.312-.144-3.708v-12.636h.072v-.144q-.252 0-.684-.036t-.648-.036q-.756 0-2.124.216v-6.84h3.456v-2.736q0-1.944-.216-3.204h8.172q-.216 1.476-.216 5.94h6.156v6.84q-.54 0-1.566-.072t-1.53-.072h-3.06v13.14q0 4.716 3.132 4.716 2.196 0 3.924-1.188zm-20.736-34.092q0 2.088-1.404 3.654t-3.456 1.566q-2.088 0-3.528-1.566t-1.44-3.654q0-2.124 1.422-3.708t3.546-1.584q2.088 0 3.474 1.602t1.386 3.69z","YC_SQUARE":"M29.124-28.295l9.576-17.964h-4.032l-5.652 11.232q-.864 1.728-1.584 3.312l-1.512-3.312-5.58-11.232h-4.32l9.468 17.748v11.664h3.636v-11.448zm26.172-21.168v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","TENCENT_WEIBO":"M30.312-43.847q0 2.88-2.052 4.914t-4.896 2.034q-2.16 0-3.996-1.26-2.232 2.412-4.14 5.256-8.892 13.356-7.272 30.924.036.792-.45 1.386t-1.242.666h-.18q-.72 0-1.26-.486t-.612-1.206q-.504-4.536-.126-8.91t1.062-7.812 1.944-6.696 2.484-5.598 2.664-4.5q2.196-3.24 4.752-5.94-.576-1.26-.576-2.772 0-2.88 2.034-4.914t4.914-2.034 4.914 2.034 2.034 4.914zm13.716.396q0 5.688-2.808 10.512t-7.65 7.632-10.53 2.808q-2.304 0-4.716-.504-.756-.18-1.17-.846t-.234-1.422q.18-.72.828-1.134t1.404-.27q1.836.468 3.888.468 3.492 0 6.696-1.368t5.508-3.672 3.672-5.508 1.368-6.696-1.368-6.696-3.672-5.508-5.508-3.672-6.696-1.368-6.696 1.368-5.508 3.672-3.672 5.508-1.368 6.696q0 4.104 1.872 7.848.36.72.126 1.44t-.918 1.08-1.422.108-1.098-.936q-2.304-4.428-2.304-9.54 0-4.284 1.674-8.172t4.482-6.696 6.696-4.464 8.136-1.656q5.688 0 10.53 2.808t7.65 7.65 2.808 10.53z","QQ":"M9.72-35.423q-.288-.684-.288-1.872 0-.72.396-1.764t.864-1.62q-.036-.792.27-1.908t.81-1.548q0-5.004 3.33-10.386t7.83-7.542q5.004-2.376 11.664-2.376 4.788 0 9.576 1.98 1.764.756 3.24 1.728t2.556 2.016 1.98 2.448 1.512 2.664 1.17 3.042.918 3.222.792 3.528l.036.18q1.98 2.988 1.98 5.4 0 .504-.324 1.44t-.324 1.368l.054.126.126.18.072.126q2.772 4.104 4.338 7.722t1.566 7.506q0 1.548-.702 3.6t-1.998 2.052q-.324 0-.702-.27t-.684-.63-.684-.936-.576-.954-.486-.936-.324-.63l-.108-.036-.18.144q-2.124 5.544-4.752 8.028.72.72 2.214 1.386t2.484 1.494 1.278 2.34q-.072.144-.144.576t-.252.648q-2.304 3.492-10.872 3.492-1.908 0-3.978-.324t-3.528-.72-3.762-1.08q-.54-.18-.828-.252-.504-.144-1.656-.162t-1.44-.054q-1.476 1.62-4.59 2.34t-6.066.72q-1.26 0-2.484-.054t-3.348-.324-3.636-.738-2.682-1.44-1.17-2.304q0-1.44.36-2.142t1.476-1.746q.396-.072 1.458-.468t1.782-.432q.144 0 .504-.072.072-.072.072-.144l-.072-.108q-1.728-.396-3.888-3.798t-2.628-5.634l-.18-.108q-.144 0-.432.72-.648 1.476-1.962 2.682t-2.79 1.35h-.036q-.144 0-.216-.162t-.18-.198q-.828-1.944-.828-3.6 0-9.9 9.072-16.776z","WEIXIN":"M20.88-47.843q0-1.476-.9-2.376t-2.376-.9q-1.548 0-2.736.918t-1.188 2.358q0 1.404 1.188 2.322t2.736.918q1.476 0 2.376-.882t.9-2.358zm26.748 18.252q0-1.008-.918-1.8t-2.358-.792q-.972 0-1.782.81t-.81 1.782q0 1.008.81 1.818t1.782.81q1.44 0 2.358-.792t.918-1.836zm-8.496-18.252q0-1.476-.882-2.376t-2.358-.9q-1.548 0-2.736.918t-1.188 2.358q0 1.404 1.188 2.322t2.736.918q1.476 0 2.358-.882t.882-2.358zm22.86 18.252q0-1.008-.936-1.8t-2.34-.792q-.972 0-1.782.81t-.81 1.782q0 1.008.81 1.818t1.782.81q1.404 0 2.34-.792t.936-1.836zm-9.576-14.292q-1.116-.144-2.52-.144-6.084 0-11.196 2.772t-8.046 7.506-2.934 10.35q0 2.808.828 5.472-1.26.108-2.448.108-.936 0-1.8-.054t-1.98-.234-1.602-.252-1.962-.378-1.8-.378l-9.108 4.572 2.592-7.848q-10.44-7.308-10.44-17.64 0-6.084 3.51-11.196t9.504-8.046 13.086-2.934q6.336 0 11.97 2.376t9.432 6.57 4.914 9.378zm21.312 20.196q0 4.212-2.466 8.046t-6.678 6.966l1.98 6.516-7.164-3.924q-5.4 1.332-7.848 1.332-6.084 0-11.196-2.538t-8.046-6.894-2.934-9.504 2.934-9.504 8.046-6.894 11.196-2.538q5.796 0 10.908 2.538t8.19 6.912 3.078 9.486z","SEND":"M63.504-64.043q1.188.864.972 2.304l-9.216 55.296q-.18 1.044-1.152 1.62-.504.288-1.116.288-.396 0-.864-.18l-16.308-6.66-8.712 10.62q-.648.828-1.764.828-.468 0-.792-.144-.684-.252-1.098-.846t-.414-1.314v-12.564l31.104-38.124-38.484 33.3-14.22-5.832q-1.332-.504-1.44-1.98-.072-1.44 1.152-2.124l59.904-34.56q.54-.324 1.152-.324.72 0 1.296.396z","SEND_O":"M63.504-64.043q1.188.864.972 2.304l-9.216 55.296q-.18 1.044-1.152 1.62-.504.288-1.116.288-.396 0-.864-.18l-18.972-7.74-10.728 11.772q-.648.756-1.692.756-.504 0-.828-.144-.684-.252-1.08-.846t-.396-1.314v-16.272l-16.992-6.948q-1.332-.504-1.44-1.98-.108-1.404 1.152-2.124l59.904-34.56q1.26-.756 2.448.072zm-12.312 53.964l7.956-47.628-51.624 29.772 12.096 4.932 31.068-23.004-17.208 28.692z","HISTORY":"M55.296-32.183q0 5.616-2.196 10.728t-5.904 8.82-8.82 5.904-10.728 2.196q-6.192 0-11.772-2.61t-9.504-7.362q-.252-.36-.234-.81t.306-.738l4.932-4.968q.36-.324.9-.324.576.072.828.432 2.628 3.42 6.444 5.292t8.1 1.872q3.744 0 7.146-1.458t5.886-3.942 3.942-5.886 1.458-7.146-1.458-7.146-3.942-5.886-5.886-3.942-7.146-1.458q-3.528 0-6.768 1.278t-5.76 3.654l4.932 4.968q1.116 1.08.504 2.484-.612 1.44-2.124 1.44h-16.128q-.936 0-1.62-.684t-.684-1.62v-16.128q0-1.512 1.44-2.124 1.404-.612 2.484.504l4.68 4.644q3.852-3.636 8.802-5.634t10.242-1.998q5.616 0 10.728 2.196t8.82 5.904 5.904 8.82 2.196 10.728zm-23.04-10.368v16.128q0 .504-.324.828t-.828.324h-11.52q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h8.064v-12.672q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828z","CIRCLE_THIN":"M27.648-55.223q-4.68 0-8.946 1.836t-7.344 4.914-4.914 7.344-1.836 8.946 1.836 8.946 4.914 7.344 7.344 4.914 8.946 1.836 8.946-1.836 7.344-4.914 4.914-7.344 1.836-8.946-1.836-8.946-4.914-7.344-7.344-4.914-8.946-1.836zm27.648 23.04q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","HEADER":"M60.552-4.535q-1.584 0-4.77-.126t-4.806-.126q-1.584 0-4.752.126t-4.752.126q-.864 0-1.332-.738t-.468-1.638q0-1.116.612-1.656t1.404-.612 1.836-.252 1.62-.54q1.188-.756 1.188-5.04l-.036-14.076q0-.756-.036-1.116-.468-.144-1.8-.144h-24.3q-1.368 0-1.836.144-.036.36-.036 1.116l-.036 13.356q0 5.112 1.332 5.904.576.36 1.728.468t2.052.126 1.62.54.72 1.638q0 .936-.45 1.728t-1.314.792q-1.692 0-5.022-.126t-4.986-.126q-1.548 0-4.608.126t-4.572.126q-.828 0-1.278-.756t-.45-1.62q0-1.08.558-1.62t1.296-.63 1.71-.27 1.512-.54q1.188-.828 1.188-5.148l-.036-2.052v-29.268q0-.108.018-.936t0-1.314-.054-1.386-.126-1.512-.234-1.314-.396-1.134-.576-.648q-.54-.36-1.62-.432t-1.908-.072-1.476-.504-.648-1.62q0-.936.432-1.728t1.296-.792q1.656 0 4.986.126t4.986.126q1.512 0 4.554-.126t4.554-.126q.9 0 1.35.792t.45 1.728q0 1.08-.612 1.566t-1.386.522-1.782.144-1.548.468q-1.26.756-1.26 5.76l.036 11.52q0 .756.036 1.152.468.108 1.404.108h25.164q.9 0 1.368-.108.036-.396.036-1.152l.036-11.52q0-5.004-1.26-5.76-.648-.396-2.106-.45t-2.376-.468-.918-1.782q0-.936.45-1.728t1.35-.792q1.584 0 4.752.126t4.752.126q1.548 0 4.644-.126t4.644-.126q.9 0 1.35.792t.45 1.728q0 1.08-.63 1.584t-1.44.522-1.854.108-1.584.45q-1.26.828-1.26 5.796l.036 33.948q0 4.284 1.224 5.04.576.36 1.656.486t1.926.162 1.494.558.648 1.602q0 .936-.432 1.728t-1.296.792z","PARAGRAPH":"M46.008-57.635v2.628q0 1.044-.666 2.196t-1.53 1.152q-1.8 0-1.944.036-.936.216-1.152 1.116-.108.396-.108 2.304v41.472q0 .9-.648 1.548t-1.548.648h-3.888q-.9 0-1.548-.648t-.648-1.548v-43.848h-5.148v43.848q0 .9-.63 1.548t-1.566.648h-3.888q-.936 0-1.566-.648t-.63-1.548v-17.856q-5.292-.432-8.82-2.124-4.536-2.088-6.912-6.444-2.304-4.212-2.304-9.324 0-5.976 3.168-10.296 3.168-4.248 7.524-5.724 3.996-1.332 15.012-1.332h17.244q.9 0 1.548.648t.648 1.548z","SLIDERS":"M12.672-13.751v4.608h-12.672v-4.608h12.672zm12.672-4.608q.936 0 1.62.684t.684 1.62v9.216q0 .936-.684 1.62t-1.62.684h-9.216q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h9.216zm5.76-13.824v4.608h-31.104v-4.608h31.104zm-23.04-18.432v4.608h-8.064v-4.608h8.064zm47.232 36.864v4.608h-26.496v-4.608h26.496zm-34.56-41.472q.936 0 1.62.684t.684 1.62v9.216q0 .936-.684 1.62t-1.62.684h-9.216q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h9.216zm23.04 18.432q.936 0 1.62.684t.684 1.62v9.216q0 .936-.684 1.62t-1.62.684h-9.216q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h9.216zm11.52 4.608v4.608h-8.064v-4.608h8.064zm0-18.432v4.608h-31.104v-4.608h31.104z","SHARE_ALT":"M43.776-27.575q4.788 0 8.154 3.366t3.366 8.154-3.366 8.154-8.154 3.366-8.154-3.366-3.366-8.154q0-.432.072-1.224l-12.96-6.48q-3.312 3.096-7.848 3.096-4.788 0-8.154-3.366t-3.366-8.154 3.366-8.154 8.154-3.366q4.536 0 7.848 3.096l12.96-6.48q-.072-.792-.072-1.224 0-4.788 3.366-8.154t8.154-3.366 8.154 3.366 3.366 8.154-3.366 8.154-8.154 3.366q-4.536 0-7.848-3.096l-12.96 6.48q.072.792.072 1.224t-.072 1.224l12.96 6.48q3.312-3.096 7.848-3.096z","SHARE_ALT_SQUARE":"M46.08-21.419q0-3.168-2.25-5.436t-5.418-2.268q-3.024 0-5.22 2.088l-8.676-4.32q.072-.576.072-.828t-.072-.828l8.676-4.32q2.196 2.088 5.22 2.088 3.168 0 5.418-2.268t2.25-5.436-2.25-5.418-5.418-2.25-5.436 2.25-2.268 5.418q0 .252.072.828l-8.676 4.32q-2.232-2.052-5.22-2.052-3.168 0-5.418 2.25t-2.25 5.418 2.25 5.418 5.418 2.25q2.988 0 5.22-2.052l8.676 4.32q-.072.576-.072.828 0 3.168 2.268 5.418t5.436 2.25 5.418-2.25 2.25-5.418zm9.216-28.044v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","BOMB":"M20.556-43.235q-.36-.9-1.224-1.26t-1.764 0q-3.888 1.584-6.876 4.572t-4.572 6.876q-.36.9 0 1.764t1.26 1.224q.468.18.864.18 1.512 0 2.16-1.44 1.224-3.024 3.546-5.346t5.346-3.546q.9-.396 1.26-1.26t0-1.764zm33.912-12.816l1.656 1.656-8.784 8.748 2.448 2.448q.684.684.684 1.638t-.684 1.638l-2.304 2.304q3.204 5.796 3.204 12.348 0 5.148-1.998 9.846t-5.4 8.1-8.1 5.4-9.846 1.998-9.846-1.998-8.1-5.4-5.4-8.1-1.998-9.846 1.998-9.846 5.4-8.1 8.1-5.4 9.846-1.998q6.552 0 12.348 3.204l2.304-2.304q.684-.684 1.638-.684t1.638.684l2.448 2.448zm.288-2.016q-.36.36-.792.36-.468 0-.828-.36l-3.276-3.24q-.324-.36-.324-.828t.324-.828q.36-.324.828-.324t.828.324l3.24 3.276q.36.324.36.81t-.36.81zm8.28 8.28q-.396.324-.828.324t-.828-.324l-3.24-3.276q-.36-.324-.36-.81t.36-.81q.324-.36.81-.36t.81.36l3.276 3.24q.324.36.324.828t-.324.828zm1.476-6.588q0 .504-.324.828t-.828.324h-3.456q-.504 0-.828-.324t-.324-.828.324-.828.828-.324h3.456q.504 0 .828.324t.324.828zm-6.912-6.912v3.456q0 .504-.324.828t-.828.324-.828-.324-.324-.828v-3.456q0-.504.324-.828t.828-.324.828.324.324.828zm5.436 1.98l-3.276 3.24q-.36.36-.792.36-.468 0-.828-.36-.36-.324-.36-.81t.36-.81l3.24-3.276q.36-.324.828-.324t.828.324q.324.36.324.828t-.324.828z","SOCCER_BALL_O":"M21.924-35.063l10.332-7.488 10.332 7.488-3.924 12.096h-12.78zm10.332-29.376q6.552 0 12.528 2.556t10.296 6.876 6.876 10.296 2.556 12.528-2.556 12.528-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556zm22.284 48.6q5.364-7.308 5.364-16.344v-.108l-3.672 3.204-8.64-8.064 2.268-11.628 4.824.432q-5.4-7.416-14.004-10.152l1.908 4.464-10.332 5.724-10.332-5.724 1.908-4.464q-8.604 2.736-14.004 10.152l4.86-.432 2.232 11.628-8.64 8.064-3.672-3.204v.108q0 9.036 5.364 16.344l1.08-4.752 11.736 1.44 5.004 10.728-4.176 2.484q4.212 1.404 8.64 1.404t8.64-1.404l-4.176-2.484 5.004-10.728 11.736-1.44z","TTY":"M16.128-17.207v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm-6.912-13.824v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm20.736 13.824v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm-6.912-13.824v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm-20.664-5.76q-1.008 0-1.692-.684t-.684-1.656v-4.644h18.504v4.644q0 .972-.684 1.656t-1.656.684h-13.788zm41.4 19.584v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm-6.912-13.824v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm20.736 13.824v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm-6.912-13.824v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm13.824-14.688v.468h-18.504v-.36q0-3.744-13.752-3.672-13.752.036-13.752 3.672v.36h-18.504v-.468q0-.612.306-1.548t1.224-2.304 2.358-2.718 3.978-2.736 5.76-2.43 8.064-1.71 10.566-.666 10.548.666 8.064 1.71 5.778 2.43 3.978 2.736 2.358 2.718 1.224 2.304.306 1.548zm0 14.688v6.912q0 .504-.324.828t-.828.324h-6.912q-.504 0-.828-.324t-.324-.828v-6.912q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828zm0-12.744v4.644q0 .972-.684 1.656t-1.656.684h-13.824q-.972 0-1.656-.684t-.684-1.656v-4.644h18.504z","BINOCULARS":"M25.344-52.919v27.648q0 .936-.684 1.62t-1.62.684v20.736q0 .936-.684 1.62t-1.62.684h-18.432q-.936 0-1.62-.684t-.684-1.62v-18.432l8.964-31.428q.252-.828 1.116-.828h15.264zm11.52 0v25.344h-9.216v-25.344h9.216zm27.648 32.256v18.432q0 .936-.684 1.62t-1.62.684h-18.432q-.936 0-1.62-.684t-.684-1.62v-20.736q-.936 0-1.62-.684t-.684-1.62v-27.648h15.264q.864 0 1.116.828zm-38.016-42.624v8.064h-12.672v-8.064q0-.504.324-.828t.828-.324h10.368q.504 0 .828.324t.324.828zm24.192 0v8.064h-12.672v-8.064q0-.504.324-.828t.828-.324h10.368q.504 0 .828.324t.324.828z","PLUG":"M63.18-48.131q1.332 1.332 1.332 3.24t-1.332 3.276l-14.436 14.4 5.4 5.4-5.76 5.76q-5.868 5.868-14.022 6.714t-14.814-3.618l-13.032 13.032h-6.516v-6.516l13.032-13.032q-4.464-6.66-3.618-14.814t6.714-14.022l5.76-5.76 5.4 5.4 14.4-14.436q1.368-1.332 3.276-1.332t3.24 1.332 1.332 3.258-1.332 3.258l-14.4 14.436 8.424 8.424 14.436-14.4q1.368-1.332 3.276-1.332t3.24 1.332z","SLIDESHARE":"M31.428-37.799q0 2.988-2.286 5.13t-5.49 2.142-5.49-2.142-2.286-5.13q0-3.024 2.286-5.148t5.49-2.124 5.49 2.124 2.286 5.148zm18.072 0q0 2.988-2.268 5.13t-5.508 2.142q-3.204 0-5.49-2.142t-2.286-5.13q0-3.024 2.286-5.148t5.49-2.124q3.24 0 5.508 2.124t2.268 5.148zm8.1 6.48v-24.012q0-3.132-1.152-4.446t-3.996-1.314h-40.032q-2.988 0-4.05 1.224t-1.062 4.536v24.228q1.548.828 3.186 1.44t2.916 1.008 2.916.666 2.556.396 2.52.144 2.106.018 2.034-.072 1.602-.072q2.448-.036 3.42.972.216.216.36.324.936.9 2.196 1.836.252-3.276 4.248-3.132.18 0 1.314.054t1.548.072 1.638.036 1.908-.036 1.962-.162 2.196-.306 2.232-.486 2.412-.702 2.43-.972 2.592-1.242zm5.868-.18q-4.356 5.364-13.392 9.072 3.024 10.26-.828 16.74-2.376 4.068-6.588 5.328-3.744 1.152-6.552-.54-3.096-1.836-2.952-5.904l-.036-11.736v-.036q-.288-.072-.882-.216t-.846-.18l-.036 12.168q.144 4.104-2.988 5.904-2.844 1.692-6.588.54-4.212-1.296-6.552-5.4-3.78-6.48-.792-16.668-9.036-3.708-13.392-9.072-.9-1.332-.144-2.268t2.16.036q.108.072.396.252t.396.288v-24.984q0-2.592 1.692-4.428t4.104-1.836h45.252q2.412 0 4.104 1.836t1.692 4.428v24.984l.756-.54q1.404-.972 2.16-.036t-.144 2.268z","TWITCH":"M32.256-48.815v15.624h-5.22v-15.624h5.22zm14.328 0v15.624h-5.22v-15.624h5.22zm0 27.36l9.108-9.144v-28.62h-42.984v37.764h11.736v7.812l7.812-7.812h14.328zm14.328-42.984v36.468l-15.624 15.624h-11.736l-7.812 7.812h-7.812v-7.812h-14.328v-41.688l3.924-10.404h53.388z","YELP":"M27.828-16.955v4.572q-.036 10.512-.216 10.98-.432 1.152-1.836 1.44-1.944.324-6.534-1.368t-5.85-3.204q-.468-.54-.612-1.296-.036-.432.144-.936.144-.36 1.224-1.692t6.516-7.776q.036 0 2.16-2.52.54-.684 1.422-.882t1.782.126q.864.36 1.35 1.044t.45 1.512zm-5.364-9.036q-.108 1.98-1.872 2.52l-4.32 1.404q-9.9 3.168-10.512 3.168-1.26-.072-1.944-1.296-.432-.9-.612-2.7-.288-2.736.036-5.994t1.08-4.482 2.016-1.152q.468 0 7.272 2.772 2.52 1.044 4.14 1.692l3.024 1.224q.828.324 1.278 1.098t.414 1.746zm29.736 10.692q-.252 1.944-3.294 5.796t-4.878 4.572q-1.332.504-2.268-.252-.504-.36-6.624-10.332l-1.692-2.772q-.504-.756-.414-1.656t.702-1.656q1.26-1.548 2.988-.936.036.036 4.284 1.44 7.308 2.376 8.712 2.862t1.692.738q1.008.792.792 2.196zm-24.192-22.752q.18 3.672-1.944 4.392-2.088.612-4.104-2.556l-13.608-21.528q-.288-1.26.684-2.232 1.476-1.548 7.47-3.222t8.082-1.134q1.44.36 1.764 1.62.108.648.792 10.998t.864 13.662zm23.832 3.888q.108 1.404-.936 2.124-.54.36-11.844 3.096-2.412.54-3.276.828l.036-.072q-.828.216-1.656-.144t-1.332-1.152q-1.08-1.692 0-3.132.036-.036 2.7-3.672 4.5-6.156 5.4-7.344t1.224-1.404q1.008-.684 2.34-.072 1.728.828 4.428 4.806t2.916 6.03v.108z","NEWSPAPER_O":"M36.864-46.007h-13.824v13.824h13.824v-13.824zm4.608 23.04v4.608h-23.04v-4.608h23.04zm0-27.648v23.04h-23.04v-23.04h23.04zm23.04 27.648v4.608h-18.432v-4.608h18.432zm0-9.216v4.608h-18.432v-4.608h18.432zm0-9.216v4.608h-18.432v-4.608h18.432zm0-9.216v4.608h-18.432v-4.608h18.432zm-55.296 34.56v-34.56h-4.608v34.56q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62zm59.904 0v-39.168h-55.296v39.168q0 1.188-.396 2.304h53.388q.936 0 1.62-.684t.684-1.62zm4.608-43.776v43.776q0 2.88-2.016 4.896t-4.896 2.016h-59.904q-2.88 0-4.896-2.016t-2.016-4.896v-39.168h9.216v-4.608h64.512z","WIFI":"M36.864-9.611q-.72 0-3.348-2.646t-2.628-3.366q0-1.152 2.25-1.944t3.726-.792 3.726.792 2.25 1.944q0 .72-2.628 3.366t-3.348 2.646zm9.72-9.756q-.072 0-1.44-.9t-3.654-1.8-4.626-.9-4.626.9-3.636 1.8-1.458.9q-.648 0-3.366-2.7t-2.718-3.348q0-.468.36-.828 2.808-2.772 7.056-4.356t8.388-1.584 8.388 1.584 7.056 4.356q.36.36.36.828 0 .648-2.718 3.348t-3.366 2.7zm9.828-9.792q-.396 0-.828-.288-4.896-3.78-9.072-5.562t-9.648-1.782q-3.06 0-6.138.792t-5.364 1.908-4.086 2.232-2.844 1.908-1.116.792q-.612 0-3.312-2.7t-2.7-3.348q0-.432.36-.792 4.752-4.752 11.52-7.38t13.68-2.628 13.68 2.628 11.52 7.38q.36.36.36.792 0 .648-2.7 3.348t-3.312 2.7zm9.756-9.756q-.396 0-.792-.324-6.444-5.652-13.374-8.514t-15.138-2.862-15.138 2.862-13.374 8.514q-.396.324-.792.324-.612 0-3.33-2.7t-2.718-3.348q0-.468.36-.828 6.732-6.696 16.02-10.368t18.972-3.672 18.972 3.672 16.02 10.368q.36.36.36.828 0 .648-2.718 3.348t-3.33 2.7z","CALCULATOR":"M13.824-9.143q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm13.824 0q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm-13.824-13.824q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm27.648 13.824q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm-13.824-13.824q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm-13.824-13.824q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm27.648 13.824q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm-13.824-13.824q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm27.648 27.648v-13.824q0-1.872-1.368-3.24t-3.24-1.368-3.24 1.368-1.368 3.24v13.824q0 1.872 1.368 3.24t3.24 1.368 3.24-1.368 1.368-3.24zm-13.824-27.648q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm13.824-11.52v-9.216q0-.936-.684-1.62t-1.62-.684h-46.08q-.936 0-1.62.684t-.684 1.62v9.216q0 .936.684 1.62t1.62.684h46.08q.936 0 1.62-.684t.684-1.62zm0 11.52q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm4.608-23.04v55.296q0 1.872-1.368 3.24t-3.24 1.368h-50.688q-1.872 0-3.24-1.368t-1.368-3.24v-55.296q0-1.872 1.368-3.24t3.24-1.368h50.688q1.872 0 3.24 1.368t1.368 3.24z","PAYPAL":"M54.684-41.183q.648 3.024-.144 7.344-3.132 15.984-20.34 15.984h-1.584q-.9 0-1.584.594t-.864 1.53l-.144.684-1.98 12.456-.072.54q-.18.936-.882 1.53t-1.602.594h-9.036q-.756 0-1.188-.54t-.324-1.296q.324-2.016.954-6.048t.954-6.048.972-6.03.972-6.03q.18-1.332 1.548-1.332h4.716q4.788.072 8.496-.756 6.3-1.404 10.332-5.184 3.672-3.42 5.58-8.856.864-2.52 1.26-4.788.036-.216.09-.27t.126-.036.216.126q2.844 2.124 3.528 5.832zm-6.192-10.152q0 3.852-1.656 8.496-2.88 8.388-10.872 11.34-4.068 1.44-9.072 1.512 0 .036-3.24.036l-3.24-.036q-3.6 0-4.248 3.456-.072.288-3.06 19.08-.036.36-.432.36h-10.62q-.792 0-1.314-.594t-.414-1.386l8.352-52.956q.18-1.044.99-1.728t1.854-.684h21.528q1.224 0 3.51.468t4.014 1.152q3.852 1.476 5.886 4.428t2.034 7.056z","GOOGLE_WALLET":"M15.876-40.247q1.152 0 1.872.936 9.576 13.104 13.032 27.864h-16.056q-4.572-15.876-13.212-26.964-.432-.576-.108-1.206t1.044-.63h13.428zm20.124 12.852q-1.764 7.164-4.5 14.148-2.844-11.16-9.216-21.384 1.44-7.956 1.584-16.164 7.596 12.24 12.132 23.4zm3.564-25.524q8.46 11.664 13.842 25.146t6.642 27.846h-16.236q-1.476-23.94-19.908-52.992h15.66zm24.948 20.736q0 15.264-3.636 29.232-2.412-20.16-12.924-38.988-.9-10.836-3.816-21.024-.144-.576.198-1.026t.918-.45h12.924q.756 0 1.386.468t.81 1.188q4.14 14.724 4.14 30.6z","CC_VISA":"M71.1-28.799h-4.968q.504-1.332 2.376-6.444l.108-.324q.144-.36.36-.936t.324-.936l.432 1.98zm-51.984-2.34l-2.088-10.62q-.396-1.944-2.7-1.944h-9.648l-.072.468q11.196 2.844 14.508 12.096zm6.444-12.564l-5.832 15.768-.612-3.204q-.936-2.52-3.06-4.662t-4.716-3.186l4.86 18.36h6.3l9.396-23.076h-6.336zm5.004 23.112h5.976l3.744-23.112h-5.976zm27.648-22.536q-2.484-.972-5.364-.972-4.428 0-7.236 2.124t-2.844 5.508q-.036 3.672 5.22 6.264 1.728.828 2.412 1.476t.684 1.404q0 1.08-1.08 1.656t-2.484.576q-3.096 0-5.616-1.188l-.792-.396-.828 5.184q2.664 1.224 6.66 1.224 4.68.036 7.506-2.124t2.898-5.76q0-3.816-5.04-6.264-1.764-.9-2.556-1.512t-.792-1.368q0-.792.882-1.386t2.538-.594q2.52-.036 4.464.864l.54.288zm15.3-.576h-4.608q-2.34 0-3.132 1.944l-8.856 21.168h6.264l1.26-3.456h7.632q.18.792.72 3.456h5.544zm9.432-11.52v46.08q0 1.872-1.368 3.24t-3.24 1.368h-73.728q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h73.728q1.872 0 3.24 1.368t1.368 3.24z","CC_MASTERCARD":"M24.156-30.851h-.468q-1.692 0-1.692 1.152 0 .792.72.792.612 0 1.008-.54t.432-1.404zm14.22-1.296h2.232v-.108q.036-.144.018-.234t-.036-.252-.072-.288-.162-.234-.27-.18-.414-.072q-1.008 0-1.296 1.368zm19.44 1.296h-.432q-1.728 0-1.728 1.152 0 .792.72.792.612 0 1.008-.54t.432-1.404zm11.484-.936q0-1.476-1.08-1.476-.684 0-1.116.72t-.432 1.836q0 1.512 1.008 1.512.72 0 1.17-.72t.45-1.872zm-52.02-5.076h3.132l-1.584 9.432h-2.016l1.152-7.236-2.556 7.236h-1.404l-.144-7.2-1.224 7.2h-1.908l1.584-9.432h2.916l.072 5.868zm9.108 3.852q0 .216-.144 1.512-.576 3.636-.612 4.068h-1.692l.036-.792q-.72.936-2.088.936-.828 0-1.35-.576t-.522-1.512q0-1.404.936-2.178t2.628-.774q.504 0 .828.036l.018-.198.036-.162.018-.108q0-.72-1.296-.72-1.044 0-2.124.36 0-.144.252-1.728 1.368-.396 2.412-.396 2.664 0 2.664 2.232zm5.616-2.088l-.288 1.764q-.792-.108-1.476-.108-.972 0-.972.612 0 .288.162.432t.774.396q1.44.684 1.44 2.16 0 2.592-3.132 2.556-1.224 0-2.088-.216 0-.072.252-1.764 1.044.288 1.836.288 1.152 0 1.152-.684 0-.252-.162-.414t-.774-.45q-1.548-.72-1.548-2.124 0-2.592 3.024-2.592 1.08 0 1.8.144zm3.168 0h1.008l-.252 1.872h-1.044q-.072.612-.234 1.458t-.252 1.386-.09.648q0 .576.684.576.288 0 .576-.072l-.288 1.692q-.756.252-1.44.252-1.548 0-1.62-1.692 0-.432.288-2.016.108-.72.9-5.256h1.98zm7.308 2.628q0 .828-.252 1.872h-3.996q-.108.792.36 1.188t1.368.396q1.08 0 2.088-.504l-.324 1.944q-1.08.288-2.052.288-3.42 0-3.42-3.42 0-1.98.99-3.258t2.502-1.278q1.26 0 1.998.756t.738 2.016zm5.004-2.664q-.468.828-.792 2.232-.792-.072-1.116.864t-.9 4.608h-2.016l.108-.504q.792-4.68 1.044-7.164h1.836l-.108 1.188q.504-.756.918-1.062t1.026-.162zm6.732-1.476l-.324 2.052q-1.008-.504-1.8-.504-1.116 0-1.836.99t-.72 2.538q0 1.08.486 1.692t1.386.612q.756 0 1.728-.468l-.36 2.124q-1.008.288-1.8.288-1.62 0-2.574-1.098t-.954-2.97q0-2.52 1.278-4.122t3.294-1.602q.936 0 2.196.468zm5.832 3.6q0 .648-.144 1.512-.468 2.844-.612 4.068h-1.656l.036-.792q-.72.936-2.124.936-.828 0-1.332-.576t-.504-1.512q0-1.404.918-2.178t2.61-.774q.54 0 .828.036.072-.252.072-.468 0-.72-1.296-.72-1.044 0-2.124.36 0-.144.288-1.728 1.368-.396 2.412-.396 2.628 0 2.628 2.232zm5.076-2.124q-.504.864-.756 2.232-.828-.072-1.134.828t-.918 4.644h-2.016l.108-.504q.684-3.744 1.044-7.164h1.872q0 .396-.144 1.188.54-.756.954-1.062t.99-.162zm5.076-1.728h2.016l-1.548 9.432h-1.908l.108-.684q-.828.828-1.872.828-1.116 0-1.782-.864t-.666-2.304q0-1.908.99-3.312t2.322-1.404q1.116 0 1.908 1.044zm3.996 4.68q0-5.328-2.61-9.828t-7.128-7.128-9.846-2.628q-6.516 0-11.808 3.96 4.572 4.176 6.156 10.224h-1.8q-1.584-5.4-5.688-9.108-4.104 3.708-5.688 9.108h-1.8q1.584-6.048 6.156-10.224-5.292-3.96-11.808-3.96-5.328 0-9.846 2.628t-7.128 7.128-2.61 9.828 2.61 9.828 7.128 7.128 9.846 2.628q6.516 0 11.808-3.96-4.32-3.996-5.94-9.504h1.8q1.656 4.968 5.472 8.388 3.816-3.42 5.472-8.388h1.8q-1.62 5.508-5.94 9.504 5.292 3.96 11.808 3.96 5.328 0 9.846-2.628t7.128-7.128 2.61-9.828zm8.748-23.04v46.08q0 1.872-1.368 3.24t-3.24 1.368h-73.728q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h73.728q1.872 0 3.24 1.368t1.368 3.24z","CC_DISCOVER":"M11.268-36.467q0 1.836-1.296 3.024-1.044.936-3.204.936h-.612v-7.92h.612q2.196 0 3.204.972 1.296 1.116 1.296 2.988zm63.936-2.34q0 1.872-2.304 1.872h-.684v-3.636h.72q2.268 0 2.268 1.764zm-61.524 2.34q0-2.664-1.8-4.338t-4.644-1.674h-3.42v11.988h3.42q2.664 0 4.284-1.368 2.16-1.836 2.16-4.608zm1.08 5.976h2.34v-11.988h-2.34v11.988zm11.52-3.636q0-1.44-.738-2.232t-2.718-1.512q-1.044-.36-1.422-.684t-.378-.828q0-.576.486-.954t1.242-.378q1.044 0 1.908.972l1.224-1.584q-1.476-1.332-3.528-1.332-1.584 0-2.664.99t-1.08 2.43q0 1.26.648 1.998t2.304 1.314q1.332.468 1.62.684.684.432.684 1.224 0 .72-.504 1.206t-1.296.486q-1.728 0-2.556-1.584l-1.512 1.44q1.584 2.304 4.14 2.304 1.836 0 2.988-1.098t1.152-2.862zm10.008 3.24v-2.772q-1.332 1.332-2.808 1.332-1.764 0-2.898-1.17t-1.134-2.97q0-1.728 1.134-2.934t2.79-1.206q1.548 0 2.916 1.368v-2.772q-1.44-.72-2.88-.72-2.664 0-4.518 1.818t-1.854 4.446 1.836 4.446 4.5 1.818q1.512 0 2.916-.684zm44.352 21.744v-18.972q-2.34 1.44-5.202 3.024t-8.55 4.212-11.862 4.95-15.03 4.842-18.144 4.248h56.484q.936 0 1.62-.684t.684-1.62zm-30.636-27.252q0-2.7-1.908-4.608t-4.608-1.908-4.608 1.908-1.908 4.608 1.908 4.608 4.608 1.908 4.608-1.908 1.908-4.608zm5.472 6.228l5.184-12.312h-2.556l-3.24 8.064-3.204-8.064h-2.556l5.112 12.312h1.26zm6.228-.324h6.624v-2.016h-4.284v-3.24h4.14v-2.016h-4.14v-2.664h4.284v-2.052h-6.624v11.988zm14.076 0h2.88l-3.78-5.04q2.736-.576 2.736-3.384 0-1.692-1.116-2.628t-3.132-.936h-3.492v11.988h2.34v-4.788h.324zm7.164-24.516v45.648q0 2.016-1.386 3.42t-3.366 1.404h-73.44q-1.98 0-3.366-1.404t-1.386-3.42v-45.648q0-2.016 1.386-3.42t3.366-1.404h73.44q1.98 0 3.366 1.404t1.386 3.42z","CC_AMEX":"M4.284-39.887h3.204l-1.62-3.888zm22.356 18.936l2.664-2.844-2.52-2.844h-5.868v1.764h5.112v1.98h-5.112v1.944h5.724zm5.688-2.808l3.564 3.96v-7.812zm10.368-1.692q0-1.188-1.44-1.188h-3.024v2.484h2.988q1.476 0 1.476-1.296zm10.404-.144q0-1.044-1.512-1.044h-2.952v2.196h2.916q1.548 0 1.548-1.152zm-10.008-16.776q0-1.044-1.512-1.044h-2.952v2.16h2.916q1.548 0 1.548-1.116zm16.524 2.484h3.204l-1.584-3.888zm-34.452-5.58v9.756h-2.376v-7.632l-3.384 7.632h-2.052l-3.384-7.632v7.632h-4.752l-.9-2.16h-4.86l-.9 2.16h-2.52l4.176-9.756h3.456l3.96 9.252v-9.252h3.816l3.06 6.624 2.772-6.624h3.888zm20.016 20.016q0 .72-.198 1.26t-.504.9-.81.594-.936.36-1.134.162-1.134.036-1.17-.018-1.062-.018v3.276h-4.536l-2.88-3.24-2.988 3.24h-9.216v-9.756h9.36l2.88 3.204 2.952-3.204h7.452q3.924 0 3.924 3.204zm-10.476-12.276v2.016h-7.812v-9.756h7.812v2.052h-5.472v1.764h5.328v1.98h-5.328v1.944h5.472zm48.24 20.124v8.244q0 1.98-1.386 3.402t-3.366 1.422h-73.44q-1.98 0-3.366-1.422t-1.386-3.402v-24.408h3.996l.9-2.196h1.98l.9 2.196h7.848v-1.656l.684 1.656h4.068l.72-1.692v1.692h19.476v-3.564l.36-.036q.36 0 .36.504v3.096h10.044v-.828q.828.432 1.98.648t1.89.234 2.268-.018 1.854-.036l.9-2.196h2.016l.9 2.196h8.172v-2.088l1.224 2.088h6.552v-13.608h-6.48v1.584l-.9-1.584h-6.66v1.584l-.828-1.584h-8.964q-2.484 0-3.924.792v-.792h-6.192v.792q-.864-.792-2.628-.792h-22.608l-1.548 3.492-1.548-3.492h-7.128v1.584l-.792-1.584h-6.084l-2.808 6.444v-14.076q0-1.98 1.386-3.402t3.366-1.422h73.44q1.98 0 3.366 1.422t1.386 3.402v24.408h-4.32q-1.836 0-2.916.792v-.792h-6.372q-1.98 0-2.808.792v-.792h-11.376v.792q-1.116-.792-3.132-.792h-7.524v.792q-.828-.792-3.276-.792h-8.424l-1.944 2.088-1.8-2.088h-12.564v13.608h12.348l1.98-2.124 1.872 2.124h7.596v-3.204h.756q2.124 0 3.24-.468v3.672h6.264v-3.564h.288q.288 0 .36.072t.072.36v3.132h19.044q2.052 0 3.168-.864v.864h6.048q2.16 0 3.42-.612zm-27.288-8.424q0 .828-.432 1.548t-1.224 1.044q.9.324 1.224.936t.324 1.656v1.944h-2.34v-1.62q0-1.188-.432-1.566t-1.656-.378h-2.484v3.564h-2.34v-9.756h5.544q1.728 0 2.772.54t1.044 2.088zm-9.972-16.812q0 .864-.45 1.584t-1.206 1.044q.936.324 1.242.918t.306 1.674v1.908h-2.34q0-.324.018-.954t0-.9-.108-.666-.306-.576-.63-.306-1.062-.126h-2.52v3.528h-2.304v-9.756l5.508.036q1.764 0 2.808.522t1.044 2.07zm19.044 21.924v2.016h-7.776v-9.756h7.776v2.016h-5.436v1.764h5.328v1.98h-5.328v1.944zm-15.336-24.552v9.756h-2.376v-9.756h2.376zm24.948 23.472q0 3.096-3.672 3.096h-4.536v-2.088h4.536q1.224 0 1.224-.9 0-.576-.612-.756t-1.494-.18-1.782-.126-1.512-.81-.612-1.98q0-1.404.936-2.16t2.376-.756h4.68v2.052h-4.284q-1.296 0-1.296.9 0 .576.63.738t1.512.144 1.764.09 1.512.774.63 1.962zm8.604-1.8v3.636q-.864 1.26-3.168 1.26h-4.5v-2.088h4.5q1.188 0 1.188-.9 0-.468-.45-.684t-1.116-.198-1.44-.072-1.44-.288-1.116-.864-.45-1.746q0-1.404.954-2.16t2.394-.756h4.644v2.052h-4.248q-1.296 0-1.296.9 0 .72 1.044.792t2.466.18 2.034.936zm-5.94-21.636v9.72h-3.312l-4.392-7.308v7.308h-4.752l-.936-2.16h-4.824l-.9 2.16h-2.7q-4.644 0-4.644-4.788 0-4.968 4.788-4.968h2.268v2.124q-.252 0-1.008-.036t-1.026-.018-.828.072-.774.234-.522.486-.414.828-.108 1.206q0 1.368.486 2.088t1.782.72h1.044l3.312-7.668h3.492l3.924 9.216v-9.216h3.564l4.104 6.768v-6.768h2.376z","CC_PAYPAL":"M26.82-31.823q0 1.332-.918 2.214t-2.25.882q-1.044 0-1.674-.576t-.63-1.584q0-1.332.9-2.25t2.232-.918q1.008 0 1.674.594t.666 1.638zm28.26-5.364q0 1.512-.792 2.052t-2.376.54l-1.152.036.612-3.852q.072-.396.468-.396h.648q.792 0 1.26.072t.9.45.432 1.098zm12.636 5.364q0 1.296-.918 2.196t-2.214.9q-1.044 0-1.692-.576t-.648-1.584q0-1.332.9-2.25t2.232-.918q1.008 0 1.674.594t.666 1.638zm-49.248-6.156q0-2.124-1.386-3.078t-3.618-.954h-5.76q-.684 0-.756.684l-2.34 14.688q-.036.216.108.396t.36.18h2.736q.72 0 .792-.684l.648-3.96q.036-.288.252-.468t.54-.234.612-.054.684.036.504.036q3.096 0 4.86-1.746t1.764-4.842zm11.124 11.232l1.476-9.396q.036-.216-.108-.396t-.36-.18h-2.736q-.504 0-.612 1.188-.972-1.44-3.42-1.44-2.592 0-4.41 1.944t-1.818 4.572q0 2.124 1.242 3.384t3.33 1.26q1.008 0 2.088-.432t1.728-1.152q-.144.432-.144.756 0 .576.468.576h2.484q.684 0 .792-.684zm16.092-9.468q0-.18-.144-.342t-.324-.162h-2.772q-.396 0-.648.36l-3.816 5.616-1.584-5.4q-.18-.576-.792-.576h-2.7q-.18 0-.324.162t-.144.342q0 .072.702 2.124t1.512 4.428.846 2.52q-2.952 4.032-2.952 4.32 0 .468.468.468h2.772q.396 0 .648-.36l9.18-13.248q.072-.072.072-.252zm13.68-1.764q0-2.124-1.386-3.078t-3.618-.954h-5.724q-.72 0-.792.684l-2.34 14.688q-.036.216.108.396t.36.18h2.952q.432 0 .576-.468l.648-4.176q.036-.288.252-.468t.54-.234.612-.054.684.036.504.036q3.096 0 4.86-1.746t1.764-4.842zm11.124 11.232l1.476-9.396q.036-.216-.108-.396t-.36-.18h-2.736q-.504 0-.612 1.188-.936-1.44-3.42-1.44-2.592 0-4.41 1.944t-1.818 4.572q0 2.124 1.242 3.384t3.33 1.26q1.044 0 2.124-.432t1.692-1.152q0 .036-.072.324t-.072.432q0 .576.468.576h2.484q.684 0 .792-.684zm7.848-14.724v-.036q0-.504-.468-.504h-2.664q-.396 0-.468.396l-2.34 14.976-.036.072q0 .18.144.342t.36.162h2.376q.684 0 .756-.684zm-64.224 4.824q-.18 1.26-.936 1.656t-2.16.396l-1.188.036.612-3.852q.072-.396.468-.396h.684q1.44 0 2.088.414t.432 1.746zm68.832-18.576v46.08q0 1.872-1.368 3.24t-3.24 1.368h-73.728q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h73.728q1.872 0 3.24 1.368t1.368 3.24z","CC_STRIPE":"M57.492-31.931q0 2.484-.756 3.816-.684 1.26-1.872 1.26-.828 0-1.476-.324v-8.064q1.044-1.08 2.052-1.08 2.052 0 2.052 4.392zm15.768-1.296h-3.96q.216-3.528 2.016-3.528 1.836 0 1.944 3.528zm-56.124 4.86q0-2.124-1.188-3.294t-3.636-2.07q-1.296-.468-1.872-.864t-.576-.9q0-.936 1.368-.936 2.088 0 4.464 1.188l.648-4.032q-2.412-1.152-5.364-1.152-2.772 0-4.428 1.368-1.728 1.404-1.728 3.924 0 2.088 1.17 3.258t3.582 2.034q1.404.504 1.962.918t.558.99q0 1.116-1.728 1.116-1.044 0-2.52-.45t-2.592-1.098l-.648 4.068q2.592 1.476 6.048 1.476 2.916 0 4.644-1.332 1.836-1.476 1.836-4.212zm10.62-7.74l.684-3.996h-3.456v-4.86l-4.644.756-.648 4.104-1.656.288-.612 3.708h2.232v7.884q0 3.024 1.584 4.32 1.368 1.08 3.996 1.08 1.152 0 2.844-.396v-4.248q-1.152.252-1.584.252-1.512 0-1.512-1.8v-7.092h2.772zm11.376.9v-5.004q-.54-.108-1.008-.108-1.152 0-1.998.576t-1.206 1.656l-.36-2.016h-4.716v16.956h5.4v-11.016q.936-1.116 2.952-1.116.576 0 .936.072zm1.332 12.06h5.4v-16.956h-5.4v16.956zm22.392-8.964q0-4.392-1.62-6.444-1.44-1.872-3.996-1.872-2.304 0-4.212 2.016l-.288-1.692h-4.752v23.22l5.4-.9v-5.436q1.296.396 2.448.396 2.988 0 4.824-2.016 2.196-2.34 2.196-7.272zm-16.848-12.528q0-1.188-.828-2.016t-2.016-.828-2.016.828-.828 2.016.828 2.034 2.016.846 2.016-.846.828-2.034zm32.328 12.852q0-4.068-1.728-6.336-1.8-2.304-5.184-2.304-3.456 0-5.454 2.376t-1.998 6.48q0 4.608 2.268 6.768 1.98 1.98 5.796 1.98 3.636 0 5.76-1.44l-.576-3.708q-2.052 1.116-4.608 1.116-1.548 0-2.268-.684-.828-.684-1.008-2.376h8.928q.072-.504.072-1.872zm4.608-23.436v46.08q0 1.872-1.368 3.24t-3.24 1.368h-73.728q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h73.728q1.872 0 3.24 1.368t1.368 3.24z","BELL_SLASH":"M56.088-33.767q2.196 12.816 10.728 20.016 0 1.872-1.368 3.24t-3.24 1.368h-16.128q0 3.816-2.7 6.516t-6.516 2.7-6.498-2.682-2.718-6.498zm-19.224 30.96q.576 0 .576-.576t-.576-.576q-2.124 0-3.654-1.53t-1.53-3.654q0-.576-.576-.576t-.576.576q0 2.628 1.854 4.482t4.482 1.854zm36.072-57.6q.288.36.27.846t-.378.81l-67.392 58.392q-.36.288-.846.252t-.774-.396l-3.024-3.456q-.288-.36-.27-.846t.378-.774l6.696-5.796q-.684-1.152-.684-2.376 1.8-1.512 3.276-3.168t3.06-4.302 2.682-5.706 1.8-7.416.702-9.36q0-5.472 4.212-10.17t11.052-5.706q-.288-.684-.288-1.404 0-1.44 1.008-2.448t2.448-1.008 2.448 1.008 1.008 2.448q0 .72-.288 1.404 4.464.648 7.884 2.97t5.328 5.67l15.048-13.068q.36-.288.846-.252t.774.396z","BELL_SLASH_O":"M37.44-3.383q0-.576-.576-.576-2.124 0-3.654-1.53t-1.53-3.654q0-.576-.576-.576t-.576.576q0 2.628 1.854 4.482t4.482 1.854q.576 0 .576-.576zm-19.332-17.1l31.572-27.36q-1.512-3.168-4.77-5.274t-8.046-2.106q-3.348 0-6.102 1.134t-4.374 2.898-2.484 3.708-.864 3.78q0 13.824-4.932 23.22zm48.708 6.732q0 1.872-1.368 3.24t-3.24 1.368h-16.128q0 3.816-2.7 6.516t-6.516 2.7-6.498-2.682-2.718-6.498l5.364-4.644h27.252q-5.976-6.732-8.172-16.524l3.996-3.492q2.196 12.816 10.728 20.016zm3.096-50.112l3.024 3.456q.288.36.27.846t-.378.81l-67.392 58.392q-.36.288-.846.252t-.774-.396l-3.024-3.456q-.288-.36-.27-.846t.378-.774l6.696-5.796q-.684-1.152-.684-2.376 1.8-1.512 3.276-3.168t3.06-4.302 2.682-5.706 1.8-7.416.702-9.36q0-5.472 4.212-10.17t11.052-5.706q-.288-.684-.288-1.404 0-1.44 1.008-2.448t2.448-1.008 2.448 1.008 1.008 2.448q0 .72-.288 1.404 4.464.648 7.884 2.97t5.328 5.67l15.048-13.068q.36-.288.846-.252t.774.396z","TRASH":"M18.432-14.903v-25.344q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v25.344q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm9.216 0v-25.344q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v25.344q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm9.216 0v-25.344q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v25.344q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm-19.584-35.712h16.128l-1.728-4.212q-.252-.324-.612-.396h-11.412q-.36.072-.612.396zm33.408 1.152v2.304q0 .504-.324.828t-.828.324h-3.456v34.128q0 2.988-1.692 5.166t-4.068 2.178h-29.952q-2.376 0-4.068-2.106t-1.692-5.094v-34.272h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h11.124l2.52-6.012q.54-1.332 1.944-2.268t2.844-.936h11.52q1.44 0 2.844.936t1.944 2.268l2.52 6.012h11.124q.504 0 .828.324t.324.828z","COPYRIGHT":"M41.4-25.775v3.924q0 1.8-1.314 3.204t-3.384 2.178-4.248 1.17-4.23.396q-7.38 0-12.33-5.004t-4.95-12.456q0-7.308 4.896-12.204t12.204-4.896q1.224 0 2.718.162t3.348.648 3.33 1.224 2.484 2.034 1.008 2.916v3.924q0 .576-.576.576h-4.248q-.576 0-.576-.576v-2.52q0-1.548-2.358-2.43t-4.95-.882q-5.04 0-8.226 3.294t-3.186 8.55q0 5.436 3.294 8.982t8.406 3.546q2.448 0 4.968-.864t2.52-2.376v-2.52q0-.252.162-.414t.378-.162h4.284q.216 0 .396.162t.18.414zm-13.752-29.448q-4.68 0-8.946 1.836t-7.344 4.914-4.914 7.344-1.836 8.946 1.836 8.946 4.914 7.344 7.344 4.914 8.946 1.836 8.946-1.836 7.344-4.914 4.914-7.344 1.836-8.946-1.836-8.946-4.914-7.344-7.344-4.914-8.946-1.836zm27.648 23.04q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","AT":"M34.992-36.539q0-3.888-1.926-6.084t-5.31-2.196q-2.268 0-4.464 1.098t-3.96 3.042-2.862 4.932-1.098 6.48q0 4.032 1.926 6.228t5.418 2.196q3.456 0 6.336-2.394t4.41-5.976 1.53-7.326zm20.304 4.356q0 3.996-1.332 7.092t-3.546 4.86-4.734 2.682-5.22.99l-.558.018-.594.018q-3.42 0-5.112-1.908-1.008-1.188-1.188-2.988-1.872 2.376-4.734 3.96t-6.246 1.584q-5.796 0-8.982-3.438t-3.186-9.702q0-5.652 2.376-10.44t6.444-7.578 8.856-2.79q3.132 0 5.58 1.278t3.816 3.582l.072-.684.396-2.016q.036-.216.198-.432t.342-.216h4.248q.18 0 .468.396.18.18.108.576l-4.32 22.104q-.18.864-.18 1.728 0 1.404.45 1.872t1.602.468q1.008-.036 2.052-.198t2.628-.864 2.772-1.8 2.052-3.222.864-4.932q0-10.512-6.264-16.776t-16.776-6.264q-4.68 0-8.946 1.836t-7.344 4.914-4.914 7.344-1.836 8.946 1.836 8.946 4.914 7.344 7.344 4.914 8.946 1.836q8.208 0 14.58-5.184.396-.324.864-.288t.756.432l1.476 1.764q.288.432.252.864-.072.468-.432.792-3.672 2.988-8.19 4.608t-9.306 1.62q-5.616 0-10.728-2.196t-8.82-5.904-5.904-8.82-2.196-10.728 2.196-10.728 5.904-8.82 8.82-5.904 10.728-2.196q12.384 0 20.016 7.632t7.632 20.016z","EYEDROPPER":"M61.128-61.055q3.384 3.384 3.384 8.154t-3.384 8.118l-8.1 8.028 3.744 3.744q.36.36.36.828t-.36.828l-7.56 7.56q-.36.36-.828.36t-.828-.36l-3.78-3.78-21.708 21.708q-1.332 1.332-3.24 1.332h-7.308l-9.216 4.608-2.304-2.304 4.608-9.216v-7.308q0-1.908 1.332-3.24l21.708-21.708-3.78-3.78q-.36-.36-.36-.828t.36-.828l7.56-7.56q.36-.36.828-.36t.828.36l3.744 3.744 8.028-8.1q3.348-3.384 8.118-3.384t8.154 3.384zm-42.696 49.608l20.736-20.736-6.912-6.912-20.736 20.736v6.912h6.912z","PAINT_BRUSH":"M58.14-64.439q2.52 0 4.41 1.674t1.89 4.194q0 2.268-1.62 5.436-11.952 22.644-16.74 27.072-3.492 3.276-7.848 3.276-4.536 0-7.794-3.33t-3.258-7.902q0-4.608 3.312-7.632l22.968-20.844q2.124-1.944 4.68-1.944zm-32.724 37.224q1.404 2.736 3.834 4.68t5.418 2.736l.036 2.556q.144 7.668-4.662 12.492t-12.546 4.824q-4.428 0-7.848-1.674t-5.49-4.59-3.114-6.588-1.044-7.92q.252.18 1.476 1.08t2.232 1.602 2.124 1.314 1.656.612q1.476 0 1.98-1.332.9-2.376 2.07-4.05t2.502-2.736 3.168-1.71 3.708-.918 4.5-.378z","BIRTHDAY_CAKE":"M64.512-13.751v13.824h-64.512v-13.824q1.62 0 3.06-.504t2.124-.99 1.692-1.35q1.08-.972 1.854-1.368t2.034-.396 1.998.396 1.89 1.368q1.044.9 1.692 1.368t2.088.972 3.096.504q1.62 0 3.06-.522t2.088-.972 1.728-1.35q.756-.684 1.17-.972t1.116-.54 1.566-.252q1.26 0 2.034.396t1.854 1.368q1.008.864 1.692 1.35t2.124.99 3.06.504 3.06-.504 2.124-.99 1.692-1.35q1.08-.972 1.854-1.368t2.034-.396q1.224 0 1.998.396t1.854 1.368q1.008.864 1.692 1.35t2.124.99 3.06.504zm0-11.52v6.912q-1.26 0-1.998-.396t-1.89-1.368q-1.044-.9-1.692-1.368t-2.088-.972-3.06-.504q-1.656 0-3.096.504t-2.088.972-1.692 1.368q-.792.684-1.188.972t-1.116.54-1.584.252q-1.26 0-2.034-.396t-1.854-1.368q-1.044-.9-1.692-1.368t-2.088-.972-3.096-.504q-1.62 0-3.06.522t-2.088.972-1.728 1.35q-.756.684-1.17.972t-1.116.54-1.566.252q-1.26 0-2.034-.396t-1.854-1.368q-1.008-.864-1.692-1.35t-2.124-.99-3.06-.504q-1.656 0-3.096.504t-2.088.972-1.692 1.368q-1.08.972-1.854 1.368t-2.034.396v-6.912q0-2.88 2.016-4.896t4.896-2.016h2.304v-16.128h9.216v16.128h9.216v-16.128h9.216v16.128h9.216v-16.128h9.216v16.128h2.304q2.88 0 4.896 2.016t2.016 4.896zm-46.08-31.104q0 2.772-1.296 4.266t-3.312 1.494q-1.908 0-3.258-1.35t-1.35-3.258q0-1.044.342-1.836t.846-1.224 1.116-1.008 1.116-1.134.846-1.602.342-2.412q1.368 0 2.988 2.664t1.62 5.4zm18.432 0q0 2.772-1.296 4.266t-3.312 1.494q-1.908 0-3.258-1.35t-1.35-3.258q0-1.044.342-1.836t.846-1.224 1.116-1.008 1.116-1.134.846-1.602.342-2.412q1.368 0 2.988 2.664t1.62 5.4zm18.432 0q0 2.772-1.296 4.266t-3.312 1.494q-1.908 0-3.258-1.35t-1.35-3.258q0-1.044.342-1.836t.846-1.224 1.116-1.008 1.116-1.134.846-1.602.342-2.412q1.368 0 2.988 2.664t1.62 5.4z","AREA_CHART":"M73.728-9.143v4.608h-73.728v-55.296h4.608v50.688h69.12zm-13.824-36.864l9.216 32.256h-59.904v-20.736l16.128-20.736 20.736 20.736z","PIE_CHART":"M27.648-32.399l19.656 19.656q-3.816 3.888-8.91 6.048t-10.746 2.16q-7.524 0-13.878-3.708t-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708v27.432zm6.732.216h27.828q0 5.652-2.16 10.746t-6.048 8.91zm25.524-4.608h-27.648v-27.648q7.524 0 13.878 3.708t10.062 10.062 3.708 13.878z","LINE_CHART":"M73.728-9.143v4.608h-73.728v-55.296h4.608v50.688h69.12zm-4.608-44.928v15.66q0 .756-.702 1.062t-1.278-.27l-4.356-4.356-22.788 22.788q-.36.36-.828.36t-.828-.36l-8.388-8.388-14.976 14.976-6.912-6.912 21.06-21.06q.36-.36.828-.36t.828.36l8.388 8.388 16.704-16.704-4.356-4.356q-.576-.576-.27-1.278t1.062-.702h15.66q.504 0 .828.324t.324.828z","LASTFM":"M46.512-39.095q0 .216.36 1.476.36 1.044.9 1.782t1.476 1.224 1.584.72 1.98.594q11.7 3.276 11.7 11.952 0 5.256-3.798 8.73t-9.162 3.474q-2.124 0-4.014-.666t-3.294-1.638-2.772-2.682-2.268-3.15-1.926-3.726-1.566-3.708-1.422-3.834-1.278-3.42q-1.152-2.916-2.214-4.806t-2.646-3.474-3.744-2.304-5.112-.72q-3.456 0-6.588 1.998t-4.968 5.202-1.836 6.66q0 5.76 3.834 10.062t9.486 4.302q6.372 0 9.288-3.42 2.016-2.268 2.988-4.176l3.024 5.472q-.54 1.224-1.584 2.52l.036.036q-4.716 5.472-13.968 5.472-5.292 0-9.702-2.844t-6.858-7.47-2.448-9.882q0-3.78 1.566-7.416t4.176-6.354 6.192-4.374 7.362-1.656q3.132 0 5.724.684t4.446 1.8 3.42 2.88 2.61 3.564 2.106 4.212 1.818 4.482 1.8 4.698 1.98 4.572q3.456 7.2 8.388 7.2 2.916 0 4.986-1.746t2.07-4.626q0-1.512-.684-2.592t-1.818-1.656-2.61-1.134-3.042-.972-3.15-1.224-2.916-1.872-2.34-2.952-1.404-4.41q-.108-.576-.108-1.188 0-3.96 3.15-6.912t7.146-2.808q2.808.108 4.338.522t3.258 1.926h-.036q.432.396.828.882t.936 1.296.684.99l-4.644 3.564q-.936-1.764-1.944-2.52v-.036q-.828-.756-3.492-.756-1.764 0-3.024 1.188t-1.26 2.988z","LASTFM_SQUARE":"M51.552-26.567q0-6.228-8.424-8.604-1.26-.36-1.908-.594t-1.368-.9-1.044-1.674q0-.072-.072-.306t-.108-.432-.036-.27q0-1.296.882-2.142t2.178-.846q1.944 0 2.556.54h-.036q.72.54 1.404 1.836l3.348-2.556q-1.404-1.944-1.764-2.304-1.188-1.044-2.43-1.404t-3.078-.36q-2.88 0-5.112 2.07t-2.232 4.95q0 .252.072.828.576 3.456 2.322 5.04t5.346 2.628q1.044.288 1.764.558t1.62.774 1.386 1.242.486 1.674v.18q.036 2.088-1.458 3.348t-3.618 1.26q-3.492 0-6.012-5.184-.828-1.692-1.854-4.374t-1.728-4.518-1.944-3.978-2.664-3.438-3.726-2.178-5.292-.882q-3.636 0-6.912 2.016t-5.184 5.328-1.8 6.912v.036q.144 3.888 1.818 7.164t4.806 5.31 7.056 2.034q6.696 0 10.044-3.96.72-.972 1.116-1.836l-2.16-3.924q-1.512 2.88-3.564 4.176t-5.256 1.296q-4.14 0-6.876-3.132t-2.736-7.344q0-3.78 2.952-6.804t6.696-3.024q4.032 0 6.12 1.926t3.744 6.21q.288.756.918 2.466t1.026 2.754 1.134 2.682 1.386 2.664 1.638 2.25 1.998 1.926 2.376 1.188 2.88.486q3.852 0 6.588-2.502t2.736-6.282zm3.744-22.896v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","TOGGLE_OFF":"M41.472-32.183q0-3.744-1.458-7.146t-3.942-5.886-5.886-3.942-7.146-1.458-7.146 1.458-5.886 3.942-3.942 5.886-1.458 7.146 1.458 7.146 3.942 5.886 5.886 3.942 7.146 1.458 7.146-1.458 5.886-3.942 3.942-5.886 1.458-7.146zm27.648 0q0-3.744-1.458-7.146t-3.942-5.886-5.886-3.942-7.146-1.458h-13.896q4.284 3.24 6.786 8.064t2.502 10.368-2.502 10.368-6.786 8.064h13.896q3.744 0 7.146-1.458t5.886-3.942 3.942-5.886 1.458-7.146zm4.608 0q0 4.68-1.836 8.946t-4.914 7.344-7.344 4.914-8.946 1.836h-27.648q-4.68 0-8.946-1.836t-7.344-4.914-4.914-7.344-1.836-8.946 1.836-8.946 4.914-7.344 7.344-4.914 8.946-1.836h27.648q4.68 0 8.946 1.836t7.344 4.914 4.914 7.344 1.836 8.946z","TOGGLE_ON":"M0-32.183q0-4.68 1.836-8.946t4.914-7.344 7.344-4.914 8.946-1.836h27.648q4.68 0 8.946 1.836t7.344 4.914 4.914 7.344 1.836 8.946-1.836 8.946-4.914 7.344-7.344 4.914-8.946 1.836h-27.648q-4.68 0-8.946-1.836t-7.344-4.914-4.914-7.344-1.836-8.946zm50.688 18.432q3.744 0 7.146-1.458t5.886-3.942 3.942-5.886 1.458-7.146-1.458-7.146-3.942-5.886-5.886-3.942-7.146-1.458-7.146 1.458-5.886 3.942-3.942 5.886-1.458 7.146 1.458 7.146 3.942 5.886 5.886 3.942 7.146 1.458z","BICYCLE":"M27.432-22.967h-11.304q-1.44 0-2.07-1.26t.234-2.412l6.768-9.036q-2.34-1.116-4.932-1.116-4.752 0-8.136 3.384t-3.384 8.136 3.384 8.136 8.136 3.384q4.14 0 7.308-2.61t3.996-6.606zm-6.696-4.608h6.696q-.648-3.06-2.7-5.328zm17.28 0l10.368-13.824h-17.28l-3.564 4.752q3.78 3.708 4.536 9.072h5.94zm40.32 2.304q0-4.752-3.384-8.136t-8.136-3.384q-2.16 0-4.356.864l6.264 9.36q.54.828.36 1.764t-.972 1.44q-.54.396-1.296.396-1.26 0-1.908-1.044l-6.264-9.36q-3.348 3.42-3.348 8.1 0 4.752 3.384 8.136t8.136 3.384 8.136-3.384 3.384-8.136zm4.608 0q0 6.66-4.734 11.394t-11.394 4.734-11.394-4.734-4.734-11.394q0-3.492 1.422-6.606t3.942-5.382l-2.34-3.528-12.708 16.884q-.648.936-1.836.936h-7.092q-.828 5.904-5.364 9.864t-10.584 3.96q-6.66 0-11.394-4.734t-4.734-11.394 4.734-11.394 11.394-4.734q4.104 0 7.74 1.98l4.932-6.588h-8.064q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h13.824v4.608h15.66l-3.06-4.608h-7.992q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h9.216q1.188 0 1.908 1.008l9.612 14.4q3.276-1.584 6.912-1.584 6.66 0 11.394 4.734t4.734 11.394z","BUS":"M13.824-20.663q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm36.864 0q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm-1.656-14.256l-2.592-13.824q-.18-.828-.81-1.35t-1.458-.522h-33.048q-.828 0-1.458.522t-.81 1.35l-2.592 13.824q-.18 1.08.504 1.908t1.764.828h38.232q1.08 0 1.764-.828t.504-1.908zm-8.136-22.032q0-.72-.504-1.224t-1.224-.504h-23.04q-.72 0-1.224.504t-.504 1.224.504 1.224 1.224.504h23.04q.72 0 1.224-.504t.504-1.224zm14.4 26.1v21.708h-4.608v4.608q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258v-4.608h-27.648v4.608q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258v-4.608h-4.608v-21.708q0-4.032.9-8.028l3.708-16.344q.324-2.808 3.51-4.932t8.28-3.204 11.25-1.08 11.25 1.08 8.28 3.204 3.51 4.932l3.78 16.344q.828 3.672.828 8.028z","IOXHOST":"M52.668-34.487q0 1.26-.9 2.178t-2.196.918h-25.272q-1.296 0-2.196-.918t-.9-2.178.9-2.178 2.196-.918h25.272q1.296 0 2.196.918t.9 2.178zm7.704 0q0-3.096-.828-6.12h-35.352q-1.296 0-2.196-.9t-.9-2.16q0-1.296.9-2.196t2.196-.9h32.688q-3.168-5.148-8.46-8.172t-11.52-3.024q-6.372 0-11.79 3.15t-8.568 8.55-3.15 11.772q0 3.096.828 6.12h35.352q1.296 0 2.196.9t.9 2.16q0 1.296-.9 2.196t-2.196.9h-32.688q3.168 5.148 8.478 8.172t11.538 3.024q4.752 0 9.108-1.854t7.488-5.004 5.004-7.488 1.872-9.126zm13.356-9.18q0 1.26-.9 2.16t-2.196.9h-4.716q.612 3.06.612 6.12 0 6.012-2.358 11.502t-6.318 9.468-9.45 6.336-11.502 2.358q-8.856 0-16.146-4.788t-10.854-12.6h-6.804q-1.296 0-2.196-.9t-.9-2.196q0-1.26.9-2.16t2.196-.9h4.752q-.612-3.06-.612-6.12 0-6.012 2.358-11.502t6.318-9.468 9.45-6.336 11.538-2.358q8.82 0 16.11 4.788t10.854 12.6h6.768q1.296 0 2.196.9t.9 2.196z","ANGELLIST":"M34.308-50.831l-4.104 11.808 4.212.756q5.94-16.236 5.94-18.648 0-2.016-1.368-2.016-2.052 0-4.68 8.1zm-10.764 24.732l1.188 3.168q1.332-1.512 2.556-2.412l-1.188-.198-1.386-.252-1.17-.306zm-10.512-32.256q0 3.528 5.724 18.756.648-.36 1.764-.36.54 0 2.7.18l-4.356-12.636q-2.7-7.92-4.428-7.92-.684 0-1.044.63t-.36 1.35zm-2.844 27.324q0 1.296 1.854 4.284t4.23 5.508 3.6 2.52q.504 0 .918-.468t.414-.972q0-.864-1.152-3.672-.468-1.152-1.152-2.592t-1.71-3.204-2.214-2.916-2.232-1.152q-.72 0-1.638.972t-.918 1.692zm-5.688 12.06q0 1.476.9 3.744 2.124 5.22 6.606 8.172t10.134 2.952q8.172 0 13.752-6.12 5.472-6.084 5.472-15.372 0-1.548-.036-2.412t-.414-2.232-1.098-2.016q-2.016-1.764-7.614-2.718t-9.738-.954q-1.332 0-1.764.396-.432.18-.432 1.26 0 1.224.774 2.16t1.998 1.44 2.79.846 3.15.414 3.06.144 2.52 0h.828q.864 0 1.44.684.54.684.684 1.98-1.008 1.008-3.456 1.944-2.196.792-3.348 1.656-2.304 1.656-3.906 4.104t-1.602 4.932q0 1.116.666 3.186t.666 3.15l-.108.432q-.144.432-.144.504-4.932-.36-5.256-7.776-.288.072-1.476.072.072.252.072.756 0 1.908-1.458 3.222t-3.402 1.314q-2.952 0-5.994-2.808t-3.042-5.724q0-1.224 1.188-2.412 1.872 2.304 2.16 2.736 2.772 3.744 4.788 3.744.432 0 .954-.306t.522-.738q0-1.224-3.15-5.22t-4.194-3.996q-1.548 0-2.52 1.602t-.972 3.258zm-4.104.324q0-3.636 1.53-5.868t4.914-3.168q-1.008-2.664-1.008-3.744 0-2.232 2.196-4.428t4.392-2.196q1.044 0 2.52.54-5.868-16.632-5.868-20.412 0-2.88 1.476-4.698t4.284-1.818q4.716 0 11.7 20.916l.288.828q.216-.576 1.044-2.862t1.566-4.266 1.944-4.59 2.322-4.428 2.538-3.114 2.754-1.296q2.556 0 4.032 1.764t1.476 4.392q0 3.888-5.724 19.8 2.196.54 3.618 1.656t2.106 2.808.936 3.366.252 3.978q0 5.4-1.692 10.08t-4.752 8.1-7.596 5.4-10.008 1.98q-3.996 0-8.028-1.512-5.364-2.052-9.288-6.894t-3.924-10.314z","CC":"M28.26-28.151h7.452q-.504 5.688-3.546 8.946t-7.722 3.258q-5.832 0-9.162-4.176t-3.33-11.376q0-6.984 3.348-11.214t8.388-4.23q5.328 0 8.352 3.132t3.492 8.892h-7.308q-.18-2.304-1.278-3.564t-2.934-1.26q-2.052 0-3.186 2.178t-1.134 6.39q0 1.728.18 3.024t.648 2.502 1.44 1.854 2.376.648q3.42 0 3.924-5.004zm25.632 0h7.416q-.504 5.688-3.528 8.946t-7.704 3.258q-5.832 0-9.162-4.176t-3.33-11.376q0-6.984 3.348-11.214t8.388-4.23q5.328 0 8.352 3.132t3.492 8.892h-7.344q-.144-2.304-1.26-3.564t-2.916-1.26q-2.052 0-3.186 2.178t-1.134 6.39q0 1.728.18 3.024t.648 2.502 1.422 1.854 2.358.648q1.764 0 2.754-1.368t1.206-3.636zm12.924-4.284q0-7.452-.558-11.052t-2.178-5.796q-.216-.288-.486-.504t-.774-.54-.576-.396q-3.096-2.268-25.092-2.268-22.5 0-25.56 2.268-.18.144-.63.414t-.756.504-.522.522q-1.62 2.16-2.16 5.742t-.54 11.106q0 7.488.54 11.07t2.16 5.778q.216.288.54.54t.738.504.63.432q1.584 1.188 8.622 1.764t16.938.576q21.96 0 25.092-2.34.18-.144.612-.396t.738-.504.486-.576q1.656-2.16 2.196-5.724t.54-11.124zm6.912-27.396v55.296h-73.728v-55.296h73.728z","SHEQEL":"M35.712-41.975v17.856q0 .504-.324.828t-.828.324h-5.76q-.504 0-.828-.324t-.324-.828v-17.856q0-4.032-2.88-6.912t-6.912-2.88h-9.792v41.472q0 .504-.324.828t-.828.324h-5.76q-.504 0-.828-.324t-.324-.828v-48.384q0-.504.324-.828t.828-.324h16.704q4.86 0 8.964 2.394t6.498 6.498 2.394 8.964zm13.824-16.704v31.68q0 4.86-2.394 8.964t-6.498 6.498-8.964 2.394h-16.704q-.504 0-.828-.324t-.324-.828v-34.56q0-.504.324-.828t.828-.324h5.76q.504 0 .828.324t.324.828v27.648h9.792q4.032 0 6.912-2.88t2.88-6.912v-31.68q0-.504.324-.828t.828-.324h5.76q.504 0 .828.324t.324.828z","MEANPATH":"M47.196-34.127v4.104q0 .864-.486 1.368t-1.35.504h-7.272q-.864 0-1.368-.504t-.504-1.368v-4.104q0-.864.504-1.368t1.368-.504h7.272q.864 0 1.35.504t.486 1.368zm-17.64 8.28v-9q0-1.908-1.17-3.078t-3.078-1.17h-4.788q-2.448 0-3.456 1.872-1.008-1.872-3.456-1.872h-4.68q-1.908 0-3.078 1.17t-1.17 3.078v9q0 .792.756.792h1.98q.792 0 .792-.792v-8.28q0-.864.486-1.368t1.386-.504h3.384q.864 0 1.368.504t.504 1.368v8.28q0 .792.756.792h1.944q.792 0 .792-.792v-8.28q0-.864.504-1.368t1.368-.504h3.492q.864 0 1.35.504t.486 1.368v8.28q0 .792.792.792h1.98q.756 0 .756-.792zm21.204-3.456v-5.544q0-1.908-1.188-3.078t-3.096-1.17h-9.504q-1.908 0-3.096 1.17t-1.188 3.078v14.76q0 .756.792.756h1.98q.756 0 .756-.756v-6.48q1.116 1.512 3.384 1.512h6.876q1.908 0 3.096-1.17t1.188-3.078zm4.536-22.176v38.592q0 3.456-2.448 5.904t-5.904 2.448h-38.592q-3.456 0-5.904-2.448t-2.448-5.904v-38.592q0-3.456 2.448-5.904t5.904-2.448h38.592q3.456 0 5.904 2.448t2.448 5.904z","BUYSELLADS":"M32.94-25.343h-10.584l5.292-19.836zm3.096 11.592h11.196l-11.664-36.864h-15.84l-11.664 36.864h11.196l13.788-11.304zm19.26-35.712v34.56q0 4.248-3.06 7.308t-7.308 3.06h-34.56q-4.248 0-7.308-3.06t-3.06-7.308v-34.56q0-4.248 3.06-7.308t7.308-3.06h34.56q4.248 0 7.308 3.06t3.06 7.308z","CONNECTDEVELOP":"M73.728-32.219q0 .756-.468 1.314t-1.188.702l-7.38 12.816q.108.324.108.648 0 .72-.45 1.278t-1.17.702l-6.948 12.132q.108.288.108.576 0 .828-.594 1.44t-1.458.612q-.9 0-1.476-.648h-14.4q-.612.72-1.548.72t-1.548-.72h-14.364q-.612.72-1.548.72-.828 0-1.44-.594t-.612-1.458q0-.288.144-.72l-6.948-12.06q-.72-.144-1.17-.702t-.45-1.278q0-.324.108-.648l-7.416-12.816q-.72-.18-1.17-.738t-.45-1.278q0-.756.486-1.314t1.206-.702l7.164-12.384-.018-.108-.018-.108q0-1.296 1.224-1.836l7.524-13.068q-.144-.36-.144-.648 0-.864.612-1.458t1.44-.594q.936 0 1.584.756h14.256q.576-.756 1.548-.756t1.548.756h14.328q.648-.756 1.584-.756.828 0 1.44.594t.612 1.458q0 .216-.144.648l7.452 12.888q.828.036 1.404.63t.576 1.386q0 .468-.252.972l6.732 11.664q.684.144 1.134.702t.45 1.278zm-35.46 28.764h14.004l-12.312-12.744h-5.148l-12.312 12.744h12.96q.648-.576 1.404-.576t1.404.576zm-34.236-29.232q.036.144.036.468 0 .36-.072.54l7.488 12.96.162.036.198.09.18.09 6.768-7.164v-12.492l-6.732-6.984q-.468.288-1.044.36zm31.464-28.224h-13.968l6.84 7.2 19.944-7.2h-10.08q-.576.576-1.368.576t-1.368-.576zm25.308 43.632q.036-.216.18-.396l-2.304-2.448-.612 2.844h2.736zm-3.816 0l.792-3.78-9.072-9.576-10.656 11.052 2.268 2.304h16.668zm-3.168 13.248l.576-1.008 2.34-11.16h-15.372l11.988 12.348q.288-.144.468-.18zm-33.012.576h.18l12.312-12.744h-13.428v12.06l.144.216q.504.18.792.468zm-.936-13.824h14.472l2.304-2.376-11.124-11.556-5.652 5.976v7.956zm-6.948 0h5.868v-6.804l-6.048 6.372q.144.288.18.432zm-.036-29.7l.018.072.018.072q0 .576-.288 1.044l6.156 6.372v-9.684zm6.984-2.52v11.196l5.508 5.652 10.692-11.304-8.028-8.496zm.144-10.944l-.144.288v9.504l7.38-2.664-6.876-7.236-.36.108zm32.076-.468h-.576l-22.356 8.064 7.668 8.1zm-15.264 17.712l-10.692 11.34 11.196 11.484 10.656-11.052zm-12.06 11.232l-4.896-5.076v10.224zm12.6 13.104l-1.512 1.584h3.06zm12.096-12.528l8.568 9.036 4.752-22.464-.108-.18-.036-.036zm12.384-14.4q-.288-.468-.288-1.044v-.072l-7.776-13.536q-.18-.036-.468-.18l-15.732 16.668 11.16 11.772zm-43.056-4.464v-8.028l-5.868 10.152zm0 34.056h-5.868l5.868 10.188v-10.188zm39.06 0l-1.728 8.172 4.68-8.172h-2.952zm4.392-2.52l7.452-12.996q-.072-.36-.072-.504l.108-.576-6.156-10.656-4.644 22.032 2.772 2.952q.18-.108.54-.252z","DASHCUBE":"M0-39.959q0-4.716 3.294-8.154t8.01-3.438h26.712l12.672-12.888v52.92q0 4.752-3.294 8.172t-8.01 3.42h-28.08q-4.716 0-8.01-3.42t-3.294-8.172v-28.44zm44.352 27.144l-6.336-6.48v-15.3q0-1.656-1.152-2.844t-2.808-1.188h-17.424q-1.656 0-2.808 1.188t-1.152 2.844v17.712q0 1.656 1.17 2.862t2.79 1.206h27.72z","FORUMBEE":"M33.624-59.039q-11.412 4.356-20.016 13.05t-12.888 20.178q-.72-3.204-.72-6.336 0-7.488 3.69-13.842t10.026-10.044 13.824-3.69q2.952 0 6.084.684zm9.684 4.284q3.348 2.34 5.904 5.58-14.004 4.068-24.282 14.418t-14.274 24.354q-3.348-2.592-5.58-5.832 4.032-13.896 14.22-24.156t24.012-14.364zm-26.388 48.024q4.14-12.816 13.662-22.392t22.302-13.824q1.44 3.312 1.944 7.02-10.512 4.32-18.576 12.42t-12.348 18.648q-3.708-.504-6.984-1.872zm38.376 2.088q-6.948-1.8-13.212-4.14-4.86 3.024-10.44 3.852 3.924-7.38 9.864-13.338t13.284-9.918q-.756 5.472-3.636 10.224 2.34 6.3 4.14 13.32z","LEANPUB":"M68.148-50.327l5.58 45.792q-4.716 0-9.252-2.052-7.2-3.276-14.148-3.276-8.136 0-13.464 5.328-5.328-5.328-13.464-5.328-6.948 0-14.148 3.276-4.608 2.052-9.072 2.052h-.18l5.58-45.792q8.064-4.572 17.352-4.572 8.388 0 13.932 3.816 5.544-3.816 13.932-3.816 9.288 0 17.352 4.572zm-17.82 35.532q4.644 0 8.352 1.026t9.36 3.366l-4.464-36.756q-6.156-2.808-13.248-2.808-8.064 0-13.464 5.076-5.4-5.076-13.464-5.076-7.092 0-13.248 2.808l-4.464 36.756q3.78-1.548 5.958-2.34t5.346-1.422 6.408-.63q7.272 0 13.464 3.888 6.192-3.888 13.464-3.888zm1.44-1.224l-1.98-32.652q-7.596.144-12.924 5.58-5.472-5.58-13.464-5.58-6.336 0-12.096 2.376l-4.104 33.876q4.464-1.836 8.226-2.736t7.974-.9q7.524 0 13.464 3.672 6.192-3.852 13.464-3.672z","SELLSY":"M54-15.083v-26.388q0-.756-.54-1.296t-1.26-.54h-3.348q-.72 0-1.26.54t-.54 1.296v26.388q0 .72.54 1.26t1.26.54h3.348q.72 0 1.26-.54t.54-1.26zm-10.224 0v-19.116q0-.72-.54-1.26t-1.26-.54h-3.636q-.72 0-1.26.54t-.54 1.26v19.116q0 .72.54 1.26t1.26.54h3.636q.72 0 1.26-.54t.54-1.26zm-10.512 0v-15.444q0-.72-.54-1.26t-1.26-.54h-3.636q-.72 0-1.26.54t-.54 1.26v15.444q0 .72.54 1.26t1.26.54h3.636q.72 0 1.26-.54t.54-1.26zm-10.512 0v-13.032q0-.72-.54-1.26t-1.26-.54h-3.636q-.72 0-1.26.54t-.54 1.26v13.032q0 .72.54 1.26t1.26.54h3.636q.72 0 1.26-.54t.54-1.26zm50.976-5.256q0 5.976-4.248 10.224t-10.224 4.248h-44.784q-5.976 0-10.224-4.248t-4.248-10.224q0-4.176 2.268-7.722t6.048-5.346q-.36-1.224-.36-2.628 0-4.068 2.898-6.966t6.966-2.898q3.672 0 6.48 2.412 1.62-6.588 6.984-10.8t12.168-4.212q5.364 0 9.9 2.646t7.182 7.182 2.646 9.9q0 2.376-.504 4.392 4.86 1.188 7.956 5.13t3.096 8.91z","SHIRTSINBULK":"M0-64.439h55.296v50.112l-27.936 12.168-27.36-12.168v-50.112zm51.696 47.772v-33.336h-48.096v33.336l23.796 10.584zm0-36.936v-7.236h-48.096v7.236h48.096zm-45.18 10.728v4.14h-1.332v-4.14h1.332zm0 5.328v4.14h-1.332v-4.14h1.332zm0 5.328v4.14h-1.332v-4.14h1.332zm0 5.328v4.14h-1.332v-4.14h1.332zm0 5.328v4.14h-1.332v-4.14h1.332zm.936 5.148l.54-1.224 3.78 1.692-.54 1.188zm4.896 2.16l.54-1.224 3.78 1.656-.54 1.224zm4.86 2.16l.54-1.224 3.78 1.656-.54 1.224zm4.896 2.124l.54-1.188 3.744 1.656-.54 1.224zm6.588.468l3.78-1.656.54 1.188-3.78 1.692zm4.86-2.16l3.78-1.656.54 1.224-3.78 1.656zm4.896-2.16l3.78-1.656.54 1.224-3.78 1.656zm4.86-2.124l3.78-1.692.54 1.224-3.78 1.656zm-33.984-43.2v1.296h-4.104v-1.296h4.104zm5.832 0v1.296h-4.14v-1.296h4.14zm5.832 0v1.296h-4.14v-1.296h4.14zm5.796 0v1.296h-4.104v-1.296h4.104zm5.832 0v1.296h-4.104v-1.296h4.104zm5.832 0v1.296h-4.14v-1.296h4.14zm5.832 0v1.296h-4.14v-1.296h4.14zm5.796 0v1.296h-4.104v-1.296h4.104zm-43.56 12.24v2.844h-1.332v-4.14h4.14v1.296h-2.808zm8.64-1.296v1.296h-4.14v-1.296h4.14zm5.832 0v1.296h-4.14v-1.296h4.14zm5.796 0v1.296h-4.104v-1.296h4.104zm5.832 0v1.296h-4.104v-1.296h4.104zm5.832 0v1.296h-4.14v-1.296h4.14zm5.832 0v1.296h-4.14v-1.296h4.14zm4.5 4.14v-2.844h-2.808v-1.296h4.14v4.14h-1.332zm0 5.328v-4.14h1.332v4.14h-1.332zm0 5.328v-4.14h1.332v4.14h-1.332zm0 5.328v-4.14h1.332v4.14h-1.332zm0 5.328v-4.14h1.332v4.14h-1.332zm0 5.328v-4.14h1.332v4.14h-1.332zm-21.42-1.26q-4.644 0-7.956-3.294t-3.312-7.974q0-4.644 3.312-7.956t7.956-3.312q4.68 0 7.974 3.312t3.294 7.956q0 4.68-3.294 7.974t-7.974 3.294zm-5.94-13.716q0 1.296.702 2.034t1.782.9 2.304.252 2.304.072 1.782.324.702 1.098q0 1.764-4.032 1.764-3.492 0-4.428-1.836h-.108l-1.116 2.268q2.412 1.512 5.832 1.512 1.044 0 2.034-.18t1.998-.576 1.638-1.188.63-1.908q0-1.656-.99-2.502t-2.43-.972-2.862-.108-2.412-.18-.99-.918q0-.756.738-1.188t1.458-.54 1.476-.108q1.224 0 2.538.396t1.854 1.224h.108l1.08-2.088q-.108-.036-.756-.306t-.81-.324-.702-.252-.792-.252-.72-.162-.864-.144-.828-.036q-1.044 0-2.034.18t-1.944.594-1.548 1.224-.594 1.926z","SIMPLYBUILT":"M31.068-27.287q0-4.032-2.862-6.894t-6.894-2.862-6.876 2.862-2.844 6.894 2.844 6.876 6.876 2.844 6.894-2.844 2.862-6.876zm31.068-.036q0-4.032-2.844-6.876t-6.876-2.844-6.894 2.844-2.862 6.876q0 4.068 2.862 6.912t6.894 2.844 6.876-2.862 2.844-6.894zm11.592-29.124v48.528q0 1.584-1.134 2.718t-2.754 1.134h-65.952q-1.62 0-2.754-1.134t-1.134-2.718v-48.528q0-1.584 1.134-2.718t2.754-1.134h15.516q1.584 0 2.736 1.134t1.152 2.718v5.796h27.144v-5.796q0-1.584 1.152-2.718t2.736-1.134h15.516q1.62 0 2.754 1.134t1.134 2.718z","SKYATLAS":"M51.48-43.451zm9.36 7.344q5.328 0 9.108 3.546t3.78 8.802q0 5.652-3.924 9.414t-9.612 3.762q-3.06 0-5.832-.99t-4.968-2.646-4.248-3.816-3.924-4.554-3.726-4.77-3.906-4.536-4.212-3.816-4.896-2.646-5.724-.99q-5.544 0-9.054 3.294t-3.51 8.802q0 5.652 3.744 9t9.468 3.348q3.6 0 7.488-1.35t6.948-3.546q.18-.144.756-.666t1.08-.864.792-.342q.504 0 .882.378t.378.882q0 .864-2.16 2.772-3.636 3.168-8.442 5.112t-9.378 1.944q-4.788 0-8.838-2.088t-6.48-5.94-2.43-8.676q0-7.38 5.094-12.276t12.51-4.896q4.32 0 8.154 1.566t6.678 4.068 5.454 5.508 5.004 6.03 4.806 5.526 5.382 4.068 6.21 1.566q3.672 0 6.066-2.214t2.394-5.85q0-3.42-2.322-5.724t-5.742-2.304q-1.08 0-2.934.666t-2.466.666q-.72 0-1.278-.54t-.558-1.26q0-.648.306-2.052t.306-2.124q0-5.724-3.87-9.468t-9.594-3.744q-2.088 0-4.014.666t-3.024 1.458-1.998 1.458-1.188.666q-.54 0-.918-.378t-.378-.918q0-.684.9-1.656 2.124-2.412 5.292-3.726t6.552-1.314q6.876 0 11.448 4.518t4.572 11.358q0 1.332-.144 2.376 2.052-.54 4.14-.54z","CART_PLUS":"M43.776-39.095q0-.936-.684-1.62t-1.62-.684h-4.608v-4.608q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62v4.608h-4.608q-.936 0-1.62.684t-.684 1.62.684 1.62 1.62.684h4.608v4.608q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62v-4.608h4.608q.936 0 1.62-.684t.684-1.62zm-20.736 29.952q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm32.256 0q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm4.608-39.168v18.432q0 .864-.576 1.53t-1.476.774l-37.584 4.392q.036.252.162.774t.216.954.09.792q0 .576-.864 2.304h33.12q.936 0 1.62.684t.684 1.62-.684 1.62-1.62.684h-36.864q-.936 0-1.62-.684t-.684-1.62q0-.504.396-1.422t1.062-2.142.738-1.368l-6.372-29.628h-7.344q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h9.216q.576 0 1.026.234t.72.558.468.882.27.954.198 1.062.162.918h43.236q.936 0 1.62.684t.684 1.62z","CART_ARROW_DOWN":"M46.08-39.095q0-.936-.684-1.62t-1.62-.684-1.62.684l-5.292 5.256v-10.548q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62v10.548l-5.292-5.256q-.684-.684-1.62-.684t-1.62.684-.684 1.62.684 1.62l9.216 9.216q.684.684 1.62.684t1.62-.684l9.216-9.216q.684-.684.684-1.62zm-23.04 29.952q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm32.256 0q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm4.608-39.168v18.432q0 .864-.576 1.53t-1.476.774l-37.584 4.392q.036.252.162.774t.216.954.09.792q0 .576-.864 2.304h33.12q.936 0 1.62.684t.684 1.62-.684 1.62-1.62.684h-36.864q-.936 0-1.62-.684t-.684-1.62q0-.504.396-1.422t1.062-2.142.738-1.368l-6.372-29.628h-7.344q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h9.216q.576 0 1.026.234t.72.558.468.882.27.954.198 1.062.162.918h43.236q.936 0 1.62.684t.684 1.62z","DIAMOND":"M7.632-36.791l22.428 23.94-10.8-23.94h-11.628zm29.232 27.792l12.564-27.792h-25.128zm-17.496-32.4l7.344-13.824h-9.432l-10.368 13.824h12.456zm24.3 28.548l22.428-23.94h-11.628zm-19.08-28.548h24.552l-7.344-13.824h-9.864zm29.772 0h12.456l-10.368-13.824h-9.432zm5.076-17.496l13.824 18.432q.504.648.468 1.494t-.612 1.458l-34.56 36.864q-.648.72-1.692.72t-1.692-.72l-34.56-36.864q-.576-.612-.612-1.458t.468-1.494l13.824-18.432q.648-.936 1.836-.936h41.472q1.188 0 1.836.936z","SHIP":"M65.196-8.459q.684-.684 1.62-.684t1.62.684l4.608 4.608-3.24 3.24-2.988-2.988-2.988 2.988q-.648.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-4.608-4.608 3.24-3.24 2.988 2.988 2.988-2.988q.684-.684 1.62-.684t1.62.684l2.988 2.988 2.988-2.988q.684-.684 1.62-.684t1.62.684l2.988 2.988 2.988-2.988q.684-.684 1.62-.684t1.62.684l2.988 2.988 2.988-2.988q.684-.684 1.62-.684t1.62.684l2.988 2.988 2.988-2.988q.684-.684 1.62-.684t1.62.684l2.988 2.988 2.988-2.988q.684-.684 1.62-.684t1.62.684l2.988 2.988zm-56.664-1.368q-.684.684-1.62.684t-1.62-.684l-4.608-4.608 3.24-3.24 2.988 2.952 2.988-2.952q.684-.684 1.62-.684t1.62.684l2.988 2.952 2.304-2.304v-10.548l-7.56-11.304q-.612-.936-.252-2.034t1.44-1.458l6.372-2.088v-10.764h4.608v-4.608h9.216v-4.608h9.216v4.608h9.216v4.608h4.608v10.764l6.372 2.088q1.08.36 1.44 1.458t-.252 2.034l-7.56 11.304v10.548l.684-.648q.684-.684 1.62-.684t1.62.684l2.988 2.952 2.988-2.952q.684-.684 1.62-.684t1.62.684l4.608 4.608-3.24 3.24-2.988-2.988-2.988 2.988q-.648.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988-2.988 2.988q-.684.684-1.62.684t-1.62-.684l-2.988-2.988zm14.508-40.788v4.608l13.824-4.608 13.824 4.608v-4.608h-4.608v-4.608h-18.432v4.608h-4.608z","USER_SECRET":"M20.736-9.143l3.456-16.128-3.456-4.608-4.608-2.304zm9.216 0l4.608-23.04-4.608 2.304-3.456 4.608zm5.76-36.36q-.072-.144-.144-.216-.36-.288-3.456-.288-2.52 0-6.012.684-.252.072-.756.072t-.756-.072q-3.492-.684-6.012-.684-3.096 0-3.456.288-.072.072-.144.216.072.648.144.972.072.108.27.234t.27.378q.072.144.27.738t.252.738.27.612.306.612.324.504.432.486.504.342.63.288.738.144.882.072q1.296 0 2.124-.45t1.17-1.08.522-1.242.414-1.062.63-.45h.432q.396 0 .63.45t.414 1.062.522 1.242 1.17 1.08 2.124.45q.468 0 .882-.072t.738-.144.63-.288.504-.342.432-.486.324-.504.306-.612.27-.612.252-.738.27-.738q.072-.252.27-.378t.27-.234q.072-.324.144-.972zm14.976 31.644q0 4.356-2.628 6.84t-6.984 2.484h-31.464q-4.356 0-6.984-2.484t-2.628-6.84q0-2.196.162-4.248t.684-4.518 1.35-4.446 2.286-3.726 3.366-2.682l-3.24-7.92h7.704q-.792-2.304-.792-4.608 0-.432.072-1.152-6.984-1.44-6.984-3.456 0-2.052 7.56-3.564.612-2.232 1.854-4.824t2.538-4.104q1.152-1.332 2.736-1.332 1.08 0 3.024 1.116t3.024 1.116 3.024-1.116 3.024-1.116q1.584 0 2.736 1.332 1.296 1.512 2.538 4.104t1.854 4.824q7.56 1.512 7.56 3.564 0 2.016-6.984 3.456.252 2.916-.72 5.76h7.704l-2.952 8.1q2.268 1.188 3.87 3.474t2.358 5.166 1.044 5.454.288 5.346z","MOTORCYCLE":"M82.836-27.143q.432 3.708-.792 7.146t-3.564 5.886-5.706 3.816-7.074 1.116q-5.796-.396-10.062-4.5t-4.842-9.864q-.432-3.996.99-7.578t4.266-6.138l-2.556-3.852q-3.456 2.88-5.436 6.984t-1.98 8.784q0 .972-.666 1.674t-1.638.702h-11.7q-.828 5.904-5.364 9.864t-10.584 3.96q-6.66 0-11.394-4.734t-4.734-11.394 4.734-11.394 11.394-4.734q2.736 0 5.472.972l.864-1.62q-4.428-3.96-10.944-3.96h-2.304q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684h4.608q2.808 0 5.22.486t4.194 1.386 2.574 1.422 1.836 1.314h22.572l-3.06-4.608h-7.992q-1.08 0-1.764-.81t-.504-1.89q.144-.828.828-1.368t1.548-.54h9.108q1.188 0 1.908 1.008l2.52 3.78 4.104-4.104q.684-.684 1.656-.684h3.636q.936 0 1.62.684t.684 1.62v4.608q0 .936-.684 1.62t-1.62.684h-6.444l4.14 6.192q4.716-2.268 9.9-1.296 5.148.936 8.784 4.842t4.248 9.126zm-66.708 13.392q4.14 0 7.308-2.61t3.996-6.606h-11.304q-1.26 0-1.98-1.116-.648-1.152-.036-2.268l5.292-9.972q-1.692-.468-3.276-.468-4.752 0-8.136 3.384t-3.384 8.136 3.384 8.136 8.136 3.384zm50.688 0q4.752 0 8.136-3.384t3.384-8.136-3.384-8.136-8.136-3.384q-2.16 0-4.356.864l6.264 9.36q.54.828.36 1.764t-.972 1.44q-.54.396-1.296.396-1.26 0-1.908-1.044l-6.264-9.36q-3.348 3.42-3.348 8.1 0 4.752 3.384 8.136t8.136 3.384z","STREET_VIEW":"M50.688-9.143q0 2.268-2.214 4.086t-5.904 2.916-8.1 1.656-9.126.558-9.126-.558-8.1-1.656-5.904-2.916-2.214-4.086q0-1.764 1.188-3.186t3.276-2.394 4.248-1.602 4.716-1.062q.936-.18 1.728.378t.936 1.494q.18.936-.378 1.728t-1.494.936q-2.088.36-3.816.846t-2.754.918-1.746.846-.99.702-.306.432q.108.396.972.954t2.628 1.188 4.104 1.17 5.778.9 7.254.36 7.254-.36 5.778-.9 4.104-1.188 2.628-1.206.972-.99q-.036-.144-.306-.396t-.99-.684-1.746-.846-2.754-.9-3.816-.846q-.936-.144-1.494-.936t-.378-1.728q.144-.936.936-1.494t1.728-.378q2.556.432 4.716 1.062t4.248 1.602 3.276 2.394 1.188 3.186zm-13.824-32.256v13.824q0 .936-.684 1.62t-1.62.684h-2.304v13.824q0 .936-.684 1.62t-1.62.684h-9.216q-.936 0-1.62-.684t-.684-1.62v-13.824h-2.304q-.936 0-1.62-.684t-.684-1.62v-13.824q0-1.908 1.35-3.258t3.258-1.35h13.824q1.908 0 3.258 1.35t1.35 3.258zm-3.456-13.824q0 3.348-2.358 5.706t-5.706 2.358-5.706-2.358-2.358-5.706 2.358-5.706 5.706-2.358 5.706 2.358 2.358 5.706z","HEARTBEAT":"M46.08-27.575h10.98q-.18.216-.36.378t-.324.27l-.108.144-22.428 21.6q-.648.648-1.584.648t-1.584-.648l-22.464-21.672q-.18-.072-.756-.72h13.284q.792 0 1.422-.486t.81-1.242l2.52-10.116 6.84 24.012q.216.72.828 1.188t1.404.468q.756 0 1.368-.468t.828-1.188l5.256-17.46 2.016 4.032q.648 1.26 2.052 1.26zm18.432-15.408q0 5.22-3.708 10.8h-13.284l-3.996-7.956q-.288-.612-.918-.972t-1.314-.288q-1.62.18-2.016 1.656l-4.644 15.48-7.056-24.696q-.216-.72-.846-1.188t-1.422-.468-1.404.486-.792 1.242l-4.176 16.704h-15.228q-3.708-5.58-3.708-10.8 0-7.92 4.572-12.384t12.636-4.464q2.232 0 4.554.774t4.32 2.088 3.438 2.466 2.736 2.448q1.296-1.296 2.736-2.448t3.438-2.466 4.32-2.088 4.554-.774q8.064 0 12.636 4.464t4.572 12.384z","VENUS":"M41.472-43.703q0 7.956-5.31 13.842t-13.122 6.75v9.36h8.064q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-8.064v8.064q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-8.064h-8.064q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h8.064v-9.36q-5.4-.576-9.774-3.708t-6.696-8.064-1.89-10.512q.396-4.824 2.898-8.964t6.552-6.768 8.838-3.168q6.12-.684 11.484 1.944t8.496 7.632 3.132 11.016zm-36.864 0q0 6.66 4.734 11.394t11.394 4.734 11.394-4.734 4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394z","MARS":"M52.992-59.831q.936 0 1.62.684t.684 1.62v14.976q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-9.432l-13.752 13.788q4.536 5.616 4.536 12.924 0 4.212-1.638 8.046t-4.428 6.624-6.624 4.428-8.046 1.638-8.046-1.638-6.624-4.428-4.428-6.624-1.638-8.046 1.638-8.046 4.428-6.624 6.624-4.428 8.046-1.638q7.308 0 12.924 4.536l13.752-13.752h-9.396q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h14.976zm-32.256 50.688q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","MERCURY":"M29.88-53.063q5.22 2.592 8.406 7.578t3.186 10.998q0 7.956-5.31 13.842t-13.122 6.75v4.752h3.456q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-3.456v3.456q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-3.456h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.456v-4.752q-7.812-.864-13.122-6.75t-5.31-13.842q0-6.012 3.186-10.998t8.406-7.578q-5.94-3.456-8.208-9.828-.216-.576.126-1.062t.954-.486h2.484q.756 0 1.044.72 1.584 3.816 5.04 6.156t7.704 2.34 7.704-2.34 5.04-6.156q.288-.72 1.332-.72h2.196q.612 0 .954.486t.126 1.062q-2.268 6.372-8.208 9.828zm-9.144 34.704q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","TRANSGENDER":"M36.864-63.287q0-.504.324-.828t.828-.324h10.368q.936 0 1.62.684t.684 1.62v10.368q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-4.824l-9.144 9.18q4.536 5.688 4.536 12.924 0 7.956-5.31 13.842t-13.122 6.75v4.752h3.456q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-3.456v3.456q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-3.456h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.456v-4.752q-5.364-.576-9.738-3.708t-6.714-8.046-1.908-10.494q.576-7.344 5.76-12.726t12.492-6.21q4.248-.504 8.208.684t7.128 3.708l9.18-9.144h-4.824q-.504 0-.828-.324t-.324-.828v-2.304zm-16.128 44.928q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","TRANSGENDER_ALT":"M46.08-63.287q0-.504.324-.828t.828-.324h10.368q.936 0 1.62.684t.684 1.62v10.368q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-4.824l-9.144 9.18q4.536 5.688 4.536 12.924 0 7.956-5.31 13.842t-13.122 6.75v4.752h3.456q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-3.456v3.456q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-3.456h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.456v-4.752q-7.812-.864-13.122-6.75t-5.31-13.842q0-7.236 4.536-12.924l-1.872-1.908-3.636 3.996q-.324.36-.792.378t-.828-.27l-1.728-1.584q-.36-.288-.378-.774t.306-.846l3.78-4.14-3.996-4.032v4.824q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-10.368q0-.936.684-1.62t1.62-.684h10.368q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-4.788l3.816 3.852 3.096-3.384q.324-.36.792-.378t.828.27l1.728 1.584q.36.288.378.774t-.306.846l-3.24 3.564 2.052 2.016q5.688-4.536 12.924-4.536t12.924 4.536l9.18-9.144h-4.824q-.504 0-.828-.324t-.324-.828v-2.304zm-16.128 44.928q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","VENUS_DOUBLE":"M64.44-45.395q.432 5.58-1.89 10.512t-6.696 8.064-9.774 3.708v9.36h8.064q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-8.064v8.064q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-8.064h-18.432v8.064q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-8.064h-8.064q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h8.064v-9.36q-5.4-.576-9.774-3.708t-6.696-8.064-1.89-10.512q.612-7.416 5.922-12.834t12.69-6.102q7.416-.756 13.572 3.384 6.156-4.14 13.572-3.384 7.38.684 12.69 6.102t5.922 12.834zm-32.184 12.96q4.608-4.716 4.608-11.268t-4.608-11.268q-4.608 4.716-4.608 11.268t4.608 11.268zm-11.52 4.86q4.14 0 7.848-2.052-5.544-5.94-5.544-14.076 0-8.064 5.544-14.076-3.708-2.052-7.848-2.052-6.66 0-11.394 4.734t-4.734 11.394 4.734 11.394 11.394 4.734zm20.736 13.824v-9.36q-4.932-.54-9.216-3.384-4.284 2.844-9.216 3.384v9.36h18.432zm2.304-13.824q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734q-4.14 0-7.848 2.052 5.544 6.012 5.544 14.076 0 8.136-5.544 14.076 3.708 2.052 7.848 2.052z","MARS_DOUBLE":"M55.296-49.463q0-.504.324-.828t.828-.324h10.368q.936 0 1.62.684t.684 1.62v10.368q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-4.824l-9.144 9.18q2.736 3.42 3.87 7.704t.342 8.892q-1.116 6.552-5.976 11.232t-11.448 5.616q-7.56 1.044-13.842-2.88t-8.694-10.8q-4.212-.216-7.956-2.07t-6.39-4.788-4.086-6.93-1.152-8.28q.324-4.86 2.808-9.072t6.552-6.894 8.928-3.222q4.248-.504 8.19.684t7.146 3.708l9.18-9.144h-4.824q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h10.368q.936 0 1.62.684t.684 1.62v10.368q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-4.824l-9.144 9.18q2.124 2.664 3.348 6.084 6.552.324 11.808 4.464l9.18-9.144h-4.824q-.504 0-.828-.324t-.324-.828v-2.304zm-18.432 14.976q0-.72-.144-2.088-5.832.9-9.756 5.4t-3.924 10.512q0 .72.144 2.088 5.832-.9 9.756-5.4t3.924-10.512zm-32.256 0q0 6.048 3.996 10.584t9.936 5.364q-.108-1.044-.108-2.124 0-7.56 4.86-13.302t12.168-7.074q-1.908-4.32-5.886-6.948t-8.838-2.628q-6.66 0-11.394 4.734t-4.734 11.394zm34.56 29.952q6.66 0 11.394-4.734t4.734-11.394q0-6.048-3.996-10.584t-9.936-5.364q.108 1.044.108 2.124 0 7.56-4.86 13.302t-12.168 7.074q1.908 4.32 5.886 6.948t8.838 2.628z","VENUS_MARS":"M59.904-63.287q0-.504.324-.828t.828-.324h10.368q.936 0 1.62.684t.684 1.62v10.368q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-4.824l-9.144 9.18q2.736 3.42 3.87 7.704t.342 8.892q-1.152 6.48-5.922 11.16t-11.286 5.652q-8.028 1.224-14.724-3.24-4.212 2.808-9.216 3.348v4.752h3.456q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-3.456v3.456q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-3.456h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.456v-4.752q-5.58-.612-10.062-3.942t-6.732-8.55-1.422-11.052q.9-6.732 5.742-11.61t11.538-5.922q8.064-1.224 14.76 3.24 5.256-3.492 11.52-3.492 7.236 0 12.924 4.536l9.18-9.144h-4.824q-.504 0-.828-.324t-.324-.828v-2.304zm-27.648 40.068q4.608-4.716 4.608-11.268t-4.608-11.268q-4.608 4.716-4.608 11.268t4.608 11.268zm-27.648-11.268q0 6.66 4.734 11.394t11.394 4.734q4.212 0 7.848-2.052-5.544-6.012-5.544-14.076t5.544-14.076q-3.636-2.052-7.848-2.052-6.66 0-11.394 4.734t-4.734 11.394zm39.168 16.128q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734q-4.212 0-7.848 2.052 5.544 6.012 5.544 14.076t-5.544 14.076q3.636 2.052 7.848 2.052z","MARS_STROKE":"M52.992-59.831q.936 0 1.62.684t.684 1.62v14.976q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-9.432l-7.668 7.704 5.04 5.04q.324.36.324.828t-.324.792l-1.656 1.656q-.324.324-.792.324t-.828-.324l-5.04-5.076-2.808 2.844q4.536 5.616 4.536 12.924 0 4.212-1.638 8.046t-4.428 6.624-6.624 4.428-8.046 1.638-8.046-1.638-6.624-4.428-4.428-6.624-1.638-8.046 1.638-8.046 4.428-6.624 6.624-4.428 8.046-1.638q7.308 0 12.924 4.536l2.808-2.808-6.192-6.192q-.324-.36-.324-.828t.324-.792l1.656-1.656q.324-.324.792-.324t.828.324l6.192 6.192 7.668-7.668h-9.396q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h14.976zm-32.256 50.688q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","MARS_STROKE_V":"M23.04-41.255q7.812.864 13.122 6.75t5.31 13.842q0 6.012-3.132 11.016t-8.496 7.632-11.484 1.944q-4.788-.54-8.838-3.168t-6.552-6.768-2.898-8.964q-.432-5.58 1.89-10.512t6.696-8.064 9.774-3.708v-4.752h-5.76q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h5.76v-5.94l-3.312 3.312q-.36.324-.828.324t-.792-.324l-1.656-1.656q-.324-.324-.324-.792t.324-.828l7.272-7.236q.684-.684 1.62-.684t1.62.684l7.272 7.236q.324.36.324.828t-.324.792l-1.656 1.656q-.324.324-.792.324t-.828-.324l-3.312-3.312v5.94h5.76q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-5.76v4.752zm-2.304 36.72q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","MARS_STROKE_H":"M68.436-31.499q.684.684.684 1.62t-.684 1.62l-10.584 10.584q-.324.36-.81.36t-.81-.36l-1.62-1.62q-.36-.324-.36-.81t.36-.81l6.66-6.66h-10.584v8.064q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-8.064h-4.752q-.864 7.812-6.75 13.122t-13.842 5.31q-6.012 0-11.016-3.132t-7.632-8.496-1.944-11.484q.54-4.788 3.168-8.838t6.768-6.552 8.964-2.898q5.58-.432 10.512 1.89t8.064 6.696 3.708 9.774h4.752v-8.064q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828v8.064h10.584l-6.66-6.66q-.36-.324-.36-.81t.36-.81l1.62-1.62q.324-.36.81-.36t.81.36zm-47.7 17.748q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","NEUTER":"M41.472-43.703q0 7.956-5.31 13.842t-13.122 6.75v22.032q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-22.032q-7.812-.864-13.122-6.75t-5.31-13.842q0-4.212 1.638-8.046t4.428-6.624 6.624-4.428 8.046-1.638 8.046 1.638 6.624 4.428 4.428 6.624 1.638 8.046zm-20.736 16.128q6.66 0 11.394-4.734t4.734-11.394-4.734-11.394-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734z","GENDERLESS":"M36.864-29.879q0-6.66-4.734-11.394t-11.394-4.734-11.394 4.734-4.734 11.394 4.734 11.394 11.394 4.734 11.394-4.734 4.734-11.394zm4.608 0q0 4.212-1.638 8.046t-4.428 6.624-6.624 4.428-8.046 1.638-8.046-1.638-6.624-4.428-4.428-6.624-1.638-8.046 1.638-8.046 4.428-6.624 6.624-4.428 8.046-1.638 8.046 1.638 6.624 4.428 4.428 6.624 1.638 8.046z","FACEBOOK_OFFICIAL":"M52.236-59.831q1.26 0 2.16.9t.9 2.16v49.176q0 1.26-.9 2.16t-2.16.9h-14.076v-21.42h7.164l1.08-8.352h-8.244v-5.328q0-2.016.846-3.024t3.294-1.008l4.392-.036v-7.452q-2.268-.324-6.408-.324-4.896 0-7.83 2.88t-2.934 8.136v6.156h-7.2v8.352h7.2v21.42h-26.46q-1.26 0-2.16-.9t-.9-2.16v-49.176q0-1.26.9-2.16t2.16-.9h49.176z","PINTEREST_P":"M0-42.947q0-3.888 1.35-7.326t3.726-5.994 5.472-4.428 6.66-2.808 7.272-.936q5.688 0 10.584 2.394t7.956 6.966 3.06 10.332q0 3.456-.684 6.768t-2.16 6.372-3.6 5.382-5.22 3.708-6.804 1.386q-2.448 0-4.86-1.152t-3.456-3.168q-.36 1.404-1.008 4.05t-.846 3.42-.738 2.556-.936 2.556-1.152 2.25-1.656 2.79-2.232 3.114l-.504.18-.324-.36q-.54-5.652-.54-6.768 0-3.312.774-7.434t2.394-10.35 1.872-7.308q-1.152-2.34-1.152-6.084 0-2.988 1.872-5.616t4.752-2.628q2.196 0 3.42 1.458t1.224 3.69q0 2.376-1.584 6.876t-1.584 6.732q0 2.268 1.62 3.762t3.924 1.494q1.98 0 3.672-.9t2.826-2.448 2.016-3.42 1.368-3.978.72-3.996.234-3.582q0-6.228-3.942-9.702t-10.278-3.474q-7.2 0-12.024 4.662t-4.824 11.826q0 1.584.45 3.06t.972 2.34.972 1.638.45 1.098q0 1.008-.54 2.628t-1.332 1.62q-.072 0-.612-.108-1.836-.54-3.258-2.016t-2.196-3.402-1.17-3.888-.396-3.834z","WHATSAPP":"M35.46-29.375q.468 0 3.51 1.584t3.222 1.908q.072.18.072.54 0 1.188-.612 2.736-.576 1.404-2.556 2.358t-3.672.954q-2.052 0-6.84-2.232-3.528-1.62-6.12-4.248t-5.328-6.66q-2.592-3.852-2.556-6.984v-.288q.108-3.276 2.664-5.688.864-.792 1.872-.792.216 0 .648.054t.684.054q.684 0 .954.234t.558.99q.288.72 1.188 3.168t.9 2.7q0 .756-1.242 2.07t-1.242 1.674q0 .252.18.54 1.224 2.628 3.672 4.932 2.016 1.908 5.436 3.636.432.252.792.252.54 0 1.944-1.746t1.872-1.746zm-7.308 19.08q4.572 0 8.766-1.8t7.218-4.824 4.824-7.218 1.8-8.766-1.8-8.766-4.824-7.218-7.218-4.824-8.766-1.8-8.766 1.8-7.218 4.824-4.824 7.218-1.8 8.766q0 7.308 4.32 13.248l-2.844 8.388 8.712-2.772q5.688 3.744 12.42 3.744zm0-49.752q5.508 0 10.53 2.16t8.658 5.796 5.796 8.658 2.16 10.53-2.16 10.53-5.796 8.658-8.658 5.796-10.53 2.16q-7.02 0-13.14-3.384l-15.012 4.824 4.896-14.58q-3.888-6.408-3.888-14.004 0-5.508 2.16-10.53t5.796-8.658 8.658-5.796 10.53-2.16z","SERVER":"M4.608-13.751h36.864v-4.608h-36.864v4.608zm0-18.432h36.864v-4.608h-36.864v4.608zm56.448 16.128q0-1.44-1.008-2.448t-2.448-1.008-2.448 1.008-1.008 2.448 1.008 2.448 2.448 1.008 2.448-1.008 1.008-2.448zm-56.448-34.56h36.864v-4.608h-36.864v4.608zm56.448 16.128q0-1.44-1.008-2.448t-2.448-1.008-2.448 1.008-1.008 2.448 1.008 2.448 2.448 1.008 2.448-1.008 1.008-2.448zm0-18.432q0-1.44-1.008-2.448t-2.448-1.008-2.448 1.008-1.008 2.448 1.008 2.448 2.448 1.008 2.448-1.008 1.008-2.448zm3.456 29.952v13.824h-64.512v-13.824h64.512zm0-18.432v13.824h-64.512v-13.824h64.512zm0-18.432v13.824h-64.512v-13.824h64.512z","USER_PLUS":"M25.344-32.183q-5.724 0-9.774-4.05t-4.05-9.774 4.05-9.774 9.774-4.05 9.774 4.05 4.05 9.774-4.05 9.774-9.774 4.05zm34.56 4.608h12.672q.468 0 .81.342t.342.81v6.912q0 .468-.342.81t-.81.342h-12.672v12.672q0 .468-.342.81t-.81.342h-6.912q-.468 0-.81-.342t-.342-.81v-12.672h-12.672q-.468 0-.81-.342t-.342-.81v-6.912q0-.468.342-.81t.81-.342h12.672v-12.672q0-.468.342-.81t.81-.342h6.912q.468 0 .81.342t.342.81v12.672zm-26.496 8.064q0 1.872 1.368 3.24t3.24 1.368h9.216v8.568q-2.448 1.8-6.156 1.8h-31.464q-4.356 0-6.984-2.484t-2.628-6.84q0-1.908.126-3.726t.504-3.924.954-3.906 1.548-3.51 2.232-2.916 3.078-1.926 4.014-.72q.684 0 1.404.612 2.844 2.196 5.562 3.294t5.922 1.098 5.922-1.098 5.562-3.294q.72-.612 1.404-.612 4.752 0 7.812 3.456h-8.028q-1.872 0-3.24 1.368t-1.368 3.24v6.912z","USER_TIMES":"M25.344-32.183q-5.724 0-9.774-4.05t-4.05-9.774 4.05-9.774 9.774-4.05 9.774 4.05 4.05 9.774-4.05 9.774-9.774 4.05zm38.772 11.52l8.964 8.964q.324.324.324.828 0 .468-.324.792l-4.896 4.896q-.324.324-.792.324-.504 0-.828-.324l-8.964-8.964-8.964 8.964q-.324.324-.828.324-.468 0-.792-.324l-4.896-4.896q-.324-.324-.324-.792 0-.504.324-.828l8.964-8.964-8.964-8.964q-.324-.324-.324-.828 0-.468.324-.792l4.896-4.896q.324-.324.792-.324.504 0 .828.324l8.964 8.964 8.964-8.964q.324-.324.828-.324.468 0 .792.324l4.896 4.896q.324.324.324.792 0 .504-.324.828zm-17.928 0l-6.516 6.516q-1.332 1.332-1.332 3.276 0 1.908 1.332 3.24l2.988 2.988q-.756.108-1.584.108h-31.464q-4.356 0-6.984-2.484t-2.628-6.84q0-1.908.126-3.726t.504-3.924.954-3.906 1.548-3.51 2.232-2.916 3.078-1.926 4.014-.72q.684 0 1.404.612 5.544 4.392 11.484 4.392t11.484-4.392q.72-.612 1.404-.612 1.008 0 2.052.216-1.008.972-1.476 1.8t-.468 2.016q0 1.944 1.332 3.276z","HOTEL":"M9.216-27.575h62.208q.936 0 1.62.684t.684 1.62v16.128h-9.216v-9.216h-55.296v9.216h-9.216v-43.776q0-.936.684-1.62t1.62-.684h4.608q.936 0 1.62.684t.684 1.62v25.344zm20.736-11.52q0-3.816-2.7-6.516t-6.516-2.7-6.516 2.7-2.7 6.516 2.7 6.516 6.516 2.7 6.516-2.7 2.7-6.516zm43.776 9.216v-2.304q0-5.724-4.05-9.774t-9.774-4.05h-25.344q-.936 0-1.62.684t-.684 1.62v13.824h41.472z","VIACOIN":"M55.296-64.439l-6.912 16.128h6.912v6.912h-9.864l-1.98 4.608h11.844v6.912h-14.796l-12.852 29.952-12.852-29.952h-14.796v-6.912h11.844l-1.98-4.608h-9.864v-6.912h6.912l-6.912-16.128h9.216l11.628 27.648h13.608l11.628-27.648h9.216zm-27.648 43.776l3.888-9.216h-7.776z","TRAIN":"M39.168-64.439q6.66 0 11.394 3.366t4.734 8.154v32.256q0 4.68-4.518 7.992t-10.998 3.492l7.668 7.272q.576.54.288 1.26t-1.08.72h-38.016q-.792 0-1.08-.72t.288-1.26l7.668-7.272q-6.48-.18-10.998-3.492t-4.518-7.992v-32.256q0-4.788 4.734-8.154t11.394-3.366h23.04zm-11.52 48.384q2.88 0 4.896-2.016t2.016-4.896-2.016-4.896-4.896-2.016-4.896 2.016-2.016 4.896 2.016 4.896 4.896 2.016zm20.736-20.736v-18.432h-41.472v18.432h41.472z","SUBWAY":"M39.168-64.439q6.66 0 11.394 3.366t4.734 8.154v32.256q0 4.68-4.518 7.992t-10.998 3.492l7.668 7.272q.576.54.288 1.26t-1.08.72h-38.016q-.792 0-1.08-.72t.288-1.26l7.668-7.272q-6.48-.18-10.998-3.492t-4.518-7.992v-32.256q0-4.788 4.734-8.154t11.394-3.366h23.04zm-28.8 47.232q2.376 0 4.068-1.692t1.692-4.068-1.692-4.068-4.068-1.692-4.068 1.692-1.692 4.068 1.692 4.068 4.068 1.692zm14.976-19.584v-18.432h-19.584v18.432h19.584zm19.584 19.584q2.376 0 4.068-1.692t1.692-4.068-1.692-4.068-4.068-1.692-4.068 1.692-1.692 4.068 1.692 4.068 4.068 1.692zm5.76-19.584v-18.432h-20.736v18.432h20.736z","MEDIUM":"M21.492-49.283v42.228q0 .9-.45 1.53t-1.314.63q-.612 0-1.188-.288l-16.74-8.388q-.756-.36-1.278-1.206t-.522-1.674v-41.04q0-.72.36-1.224t1.044-.504q.504 0 1.584.54l18.396 9.216q.108.108.108.18zm2.304 3.636l19.224 31.176-19.224-9.576v-21.6zm40.716.648v37.944q0 .9-.504 1.458t-1.368.558-1.692-.468l-15.876-7.92zm-.108-4.32q0 .108-9.234 15.102t-10.818 17.55l-14.04-22.824 11.664-18.972q.612-1.008 1.872-1.008.504 0 .936.216l19.476 9.72q.144.072.144.216z","YC":"M29.124-28.295l9.576-17.964h-4.032l-5.652 11.232q-.864 1.728-1.584 3.312l-1.512-3.312-5.58-11.232h-4.32l9.468 17.748v11.664h3.636v-11.448zm26.172-31.536v55.296h-55.296v-55.296h55.296z","OPTIN_MONSTER":"M17.208-4.139q-.288.576-.972 1.242t-1.332.918q-.9.324-1.854-.126t-1.026-1.134q-.036-.792 1.44-1.98t2.448-1.368q.828-.144 1.224.774t.072 1.674zm48.276 0q.252.576.936 1.242t1.368.918q.9.324 1.854-.126t.99-1.134q.072-.792-1.422-1.98t-2.466-1.368q-.792-.144-1.188.774t-.072 1.674zm1.728-3.924q.468.972 2.034 2.142t2.79 1.494q1.62.468 2.952-.162t1.332-1.818q0-1.656-2.43-3.618t-4.158-2.142q-1.44-.18-2.286 1.35t-.234 2.754zm-51.804 0q-.468.972-2.016 2.142t-2.772 1.494q-1.62.468-2.952-.162t-1.332-1.818q0-1.656 2.43-3.618t4.158-2.142q1.44-.18 2.268 1.35t.216 2.754zm26.28-40.464h.036q-1.476 0-2.736.54.972.288 1.584 1.098t.612 1.782q0 1.26-.972 2.16t-2.34.9q-1.872 0-2.88-1.548-.18.828-.18 1.512 0 2.664 2.016 4.554t4.86 1.89q2.88 0 4.896-1.89t2.016-4.554-2.016-4.554-4.896-1.89zm10.944-7.848q-3.564-3.924-7.938-4.734t-8.838 1.602q.972-2.16 2.97-3.474t4.248-1.422 4.374.612 3.582 2.682 1.602 4.734zm27 44.604q.288.396-.396 1.512.252.828.252 1.44.036 2.016-1.602 4.05t-3.942 3.294-4.248 1.332q-1.728.072-3.312-.774t-2.376-2.358q-24.732.9-45.324 0-.828 1.476-2.394 2.34t-3.33.792q-3.096-.108-6.462-2.898t-3.33-5.778q.072-.792.252-1.44-.684-1.116-.396-1.512.216-.36 1.116-.036.504-.792 1.476-1.836-.252-1.044.072-1.368.396-.36 1.404.144 1.044-.72 2.124-1.224 0-1.044.468-1.332.828-.432 1.836.576 1.26-.18 2.196.072.648.144 1.368.684v-2.628q-.396 0-.648-.072-1.908-.36-3.492-1.602t-1.98-3.15q-.324-1.368 0-2.916.54-2.232 3.348-3.42.072-.612.684-1.278t1.296-.846 1.188.27.684 1.098h.468q1.656.18 2.16.828.108.108.18.252.36-.036 1.098-.126t1.098-.126q-.54-.396-1.08-.612-.828-1.44-3.276-1.548 0-.216.036-.36-2.232-.072-4.266-.666t-3.042-1.71q-1.152-1.296-1.53-3.312t-.09-4.032q.576-4.536 3.24-6.444.828-.576 1.872-.162t1.152 1.458l.054.504.09.756.108.72.198.684.306.36q.972.504 2.736.432 1.728-1.656 3.528-2.664-1.44-.144-5.832.504l1.692-1.656q2.196-2.088 5.868-3.996 5.22-2.628 10.152-3.096-.72-.288-1.476-.558t-1.692-.504-1.53-.378-1.71-.396-1.548-.36q21.42-4.536 32.544 5.004 3.528 3.024 5.688 7.992 3.06.36 4.356-.324h.036q.18-.108.306-.36t.198-.684.108-.702.108-.774l.036-.504q.108-1.008 1.152-1.44t1.872.18q2.628 1.872 3.276 6.408.252 2.052-.126 4.068t-1.53 3.276q-1.008 1.152-3.006 1.746t-4.158.666v.36q-2.556.072-3.42 1.548-.504.18-1.116.612.396.036 1.152.126t1.08.126q.036-.144.18-.288.576-.648 2.16-.828h.468q.18-.648.684-1.08t1.188-.288 1.296.828.684 1.296q2.844 1.152 3.348 3.42.324 1.44.036 2.916-.432 1.908-2.016 3.168t-3.492 1.584q-.36.072-.612.072 0 1.764-.036 2.628.72-.54 1.368-.684.936-.252 2.196-.072 1.008-1.008 1.836-.576.504.324.504 1.332 1.188.576 2.124 1.224.972-.468 1.368-.144.36.36.072 1.368 1.008 1.08 1.476 1.836.828-.288 1.116.036zm-9.9-34.272q0 1.044-.324 1.944 2.952 1.152 4.032 4.752.144-1.332-.342-3.546t-1.494-3.258q-.72-.684-1.296-.612t-.576.72zm-2.808 3.6q1.26 1.512 1.71 3.906t-.018 4.482q2.412-.468 3.492-1.62.468-.504.648-1.008-.108-2.304-1.116-4.122t-2.844-2.394q-.54.54-1.872.756zm-1.332.144q-1.08 0-1.584-.036 1.512 4.14 1.908 8.604.756 0 1.548-.108.576-2.448.036-4.86t-1.908-3.6zm-56.304 2.952q1.08-3.6 4.032-4.752-.324-.9-.324-1.944 0-.648-.594-.72t-1.278.612q-1.008 1.044-1.494 3.258t-.342 3.546zm1.296 3.672q1.044 1.116 3.492 1.62-.468-2.088-.018-4.482t1.71-3.906q-1.332-.216-1.872-.756-1.836.576-2.826 2.376t-1.134 4.14q.324.612.648 1.008zm6.372 1.944q.504-4.464 2.628-8.46-.684.144-1.98.648l-1.62.684v-.036q-1.656 3.204-.72 7.056.9.108 1.692.108zm34.668 1.404q.288 1.368.594 3.906t.414 3.222q.108.648.342.774t.846-.162q1.44-.72 2.232-3.078t.828-4.518q-.864-.072-5.256-.144zm-10.152-23.076q-4.176 0-7.164 2.97t-2.988 7.146q0 4.212 2.988 7.182t7.164 2.97 7.164-2.97 2.988-7.182q0-4.176-2.988-7.146t-7.164-2.97zm8.208 23.004q-3.816-.072-7.596 0v-.036q-.036.972.09 3.096t.486 2.376q1.044.504 3.366.522t3.438-.378q.324-.108.396-1.404t-.018-2.502-.162-1.674zm-9.648 7.164q.288-.144.342-1.728t-.018-3.168-.144-2.268v-.036q-7.632.108-7.704.108-.144.72-.252 2.232t0 2.988.504 1.656q1.224.54 3.636.576t3.636-.36zm-14.184-6.804q-.576 2.124.162 4.266t2.79 3.042q.54.288.864.18t.432-.756q.108-.576.288-3.24t.36-3.708q-2.484.072-4.896.216zm-4.572 4.536q.108.828-1.224 1.296 4.752 5.076 9.774 8.64t10.998 5.544q6.192-1.764 11.178-5.256t10.566-9q-1.188-.468-1.08-1.224l.108-.324v0q-.612-.072-1.8-.198t-1.728-.162q-.936 3.24-2.952 4.752-1.836 1.368-2.952-.036-.18-.216-.324-.504-.252-.468-.612-2.232-.072.18-.18.324t-.27.252-.288.198-.342.144l-.36.09-.432.072-.432.054-.486.036-.486.018q-3.816.324-5.868-.396-.144.612-.36.954t-.756.54-.828.252-1.296.126l-.108.018-.108.018h-.108q-6.444.612-7.308-1.44-.072 2.268-2.016 1.944-1.692-.288-3.276-1.944-.432-.468-.72-.936-.612-1.044-.936-2.34-2.088.216-3.132.36l.144.36zm-3.024 22.608q.108-.504.108-1.08-.612-2.556-1.836-4.68t-2.628-2.52q-1.476-.432-3.654.522t-3.762 2.88-1.404 3.87q1.26 1.908 3.6 3.348t4.284 1.512q1.836.072 3.384-1.008t1.908-2.844zm.108-6.156q.828 2.268.972 4.284 7.02-4.068 14.112-6.264-3.528-1.872-6.498-4.32t-6.462-5.94q-.216.144-1.044.468l-.036.18-.036.144q1.116.648.792 1.332-.432.828-2.016 1.224-.36.468-1.044.864h-.036q-.072 2.988.036 5.4.684 1.224 1.26 2.628zm2.484 5.976q19.152.756 41.22 0-9.144-5.292-15.408-7.056-2.736 1.26-5.616 2.052-.288.108-.576 0-2.34-.756-4.644-1.764-7.488 2.16-14.976 6.768h-.036v.036l.036-.036zm42.624-1.656q.144-1.944 1.008-4.32.504-1.368 1.188-2.556l-.036.036q.108-2.772.108-5.508-.54-.288-1.08-.9-1.512-.324-2.016-1.188-.324-.72.792-1.368-.072-.144-.072-.324-.576-.144-1.008-.432-7.344 6.84-13.788 10.224 7.128 2.124 14.904 6.336zm14.112.828q.18-1.944-1.404-3.87t-3.744-2.88-3.672-.522q-1.368.396-2.61 2.538t-1.854 4.662q0 .576.108 1.08.36 1.764 1.908 2.844t3.384 1.008q1.944-.072 4.284-1.512t3.6-3.348z","OPENCART":"M54.864-8.243q0 2.448-1.728 4.176t-4.176 1.728-4.194-1.728-1.746-4.176 1.746-4.194 4.194-1.746 4.176 1.746 1.728 4.194zm-26.964 0q0 2.448-1.746 4.176t-4.194 1.728-4.176-1.728-1.728-4.176 1.728-4.194 4.176-1.746 4.194 1.746 1.746 4.194zm-27.9-53.784q2.052 2.16 3.978 3.762t4.356 2.952 4.896 2.268 5.976 1.638 7.2 1.134 9 .666 10.944.342 13.41.09q5.004 0 8.802.18t6.516.594 4.464.99 2.556 1.422.864 1.854-.702 2.304-2.034 2.754-3.222 3.276-4.176 3.762-5.004 4.284q-6.66 5.652-10.296 8.892 1.044-1.836 2.754-3.924t3.384-3.798 3.402-3.546 2.988-3.294 1.944-2.898.468-2.52-1.638-1.998-4.194-1.476-7.344-.846-10.944-.18q-6.048.072-11.304-.216t-9.216-.828-7.362-1.476-5.742-1.854-4.41-2.25-3.294-2.394-2.448-2.574-1.818-2.502-1.44-2.448-1.314-2.142z","EXPEDITEDSSL":"M32.256-62.135q-6.084 0-11.628 2.376t-9.558 6.39-6.39 9.558-2.376 11.628 2.376 11.628 6.39 9.558 9.558 6.39 11.628 2.376 11.628-2.376 9.558-6.39 6.39-9.558 2.376-11.628-2.376-11.628-6.39-9.558-9.558-6.39-11.628-2.376zm0-2.304q6.552 0 12.528 2.556t10.296 6.876 6.876 10.296 2.556 12.528-2.556 12.528-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556zm-14.4 29.952q.576 0 .576.576v17.28q0 .576-.576.576h-1.152q-.576 0-.576-.576v-17.28q0-.576.576-.576h1.152zm14.4 2.304q1.908 0 3.258 1.35t1.35 3.258q0 1.26-.63 2.304t-1.674 1.656v4.104q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-4.104q-1.044-.612-1.674-1.656t-.63-2.304q0-1.908 1.35-3.258t3.258-1.35zm0-27.648q7.524 0 13.878 3.708t10.062 10.062 3.708 13.878-3.708 13.878-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708zm-12.672 17.28v3.456q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828v-3.456q0-3.348 2.358-5.706t5.706-2.358 5.706 2.358 2.358 5.706v3.456q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828v-3.456q0-5.256-3.708-8.964t-8.964-3.708-8.964 3.708-3.708 8.964zm31.104 26.496v-18.432q0-.936-.684-1.62t-1.62-.684h-32.256q-.936 0-1.62.684t-.684 1.62v18.432q0 .936.684 1.62t1.62.684h32.256q.936 0 1.62-.684t.684-1.62z","BATTERY_FULL":"M69.12-46.007v27.648h-59.904v-27.648h59.904zm4.608 20.736h4.608v-13.824h-4.608v-10.368q0-.504-.324-.828t-.828-.324h-66.816q-.504 0-.828.324t-.324.828v34.56q0 .504.324.828t.828.324h66.816q.504 0 .828-.324t.324-.828v-10.368zm9.216-13.824v13.824q0 1.908-1.35 3.258t-3.258 1.35v5.76q0 2.376-1.692 4.068t-4.068 1.692h-66.816q-2.376 0-4.068-1.692t-1.692-4.068v-34.56q0-2.376 1.692-4.068t4.068-1.692h66.816q2.376 0 4.068 1.692t1.692 4.068v5.76q1.908 0 3.258 1.35t1.35 3.258z","BATTERY_THREE_QUARTERS":"M9.216-18.359v-27.648h46.08v27.648h-46.08zm69.12-25.344q1.908 0 3.258 1.35t1.35 3.258v13.824q0 1.908-1.35 3.258t-3.258 1.35v5.76q0 2.376-1.692 4.068t-4.068 1.692h-66.816q-2.376 0-4.068-1.692t-1.692-4.068v-34.56q0-2.376 1.692-4.068t4.068-1.692h66.816q2.376 0 4.068 1.692t1.692 4.068v5.76zm0 18.432v-13.824h-4.608v-10.368q0-.504-.324-.828t-.828-.324h-66.816q-.504 0-.828.324t-.324.828v34.56q0 .504.324.828t.828.324h66.816q.504 0 .828-.324t.324-.828v-10.368h4.608z","BATTERY_HALF":"M9.216-18.359v-27.648h32.256v27.648h-32.256zm69.12-25.344q1.908 0 3.258 1.35t1.35 3.258v13.824q0 1.908-1.35 3.258t-3.258 1.35v5.76q0 2.376-1.692 4.068t-4.068 1.692h-66.816q-2.376 0-4.068-1.692t-1.692-4.068v-34.56q0-2.376 1.692-4.068t4.068-1.692h66.816q2.376 0 4.068 1.692t1.692 4.068v5.76zm0 18.432v-13.824h-4.608v-10.368q0-.504-.324-.828t-.828-.324h-66.816q-.504 0-.828.324t-.324.828v34.56q0 .504.324.828t.828.324h66.816q.504 0 .828-.324t.324-.828v-10.368h4.608z","BATTERY_QUARTER":"M9.216-18.359v-27.648h18.432v27.648h-18.432zm69.12-25.344q1.908 0 3.258 1.35t1.35 3.258v13.824q0 1.908-1.35 3.258t-3.258 1.35v5.76q0 2.376-1.692 4.068t-4.068 1.692h-66.816q-2.376 0-4.068-1.692t-1.692-4.068v-34.56q0-2.376 1.692-4.068t4.068-1.692h66.816q2.376 0 4.068 1.692t1.692 4.068v5.76zm0 18.432v-13.824h-4.608v-10.368q0-.504-.324-.828t-.828-.324h-66.816q-.504 0-.828.324t-.324.828v34.56q0 .504.324.828t.828.324h66.816q.504 0 .828-.324t.324-.828v-10.368h4.608z","BATTERY_EMPTY":"M78.336-43.703q1.908 0 3.258 1.35t1.35 3.258v13.824q0 1.908-1.35 3.258t-3.258 1.35v5.76q0 2.376-1.692 4.068t-4.068 1.692h-66.816q-2.376 0-4.068-1.692t-1.692-4.068v-34.56q0-2.376 1.692-4.068t4.068-1.692h66.816q2.376 0 4.068 1.692t1.692 4.068v5.76zm0 18.432v-13.824h-4.608v-10.368q0-.504-.324-.828t-.828-.324h-66.816q-.504 0-.828.324t-.324.828v34.56q0 .504.324.828t.828.324h66.816q.504 0 .828-.324t.324-.828v-10.368h4.608z","MOUSE_POINTER":"M40.788-26.891q1.116 1.08.504 2.484-.612 1.44-2.124 1.44h-13.752l7.236 17.136q.36.9 0 1.764t-1.224 1.26l-6.372 2.7q-.9.36-1.764 0t-1.26-1.224l-6.876-16.272-11.232 11.232q-.684.684-1.62.684-.432 0-.864-.18-1.44-.612-1.44-2.124v-54.144q0-1.512 1.44-2.124.432-.18.864-.18.972 0 1.62.684z","I_CURSOR":"M29.952-59.831q-11.52 0-11.52 8.064v14.976h4.608v4.608h-4.608v19.584q0 8.064 11.52 8.064h2.304v4.608h-2.304q-9.792 0-13.824-5.256-4.032 5.256-13.824 5.256h-2.304v-4.608h2.304q11.52 0 11.52-8.064v-19.584h-4.608v-4.608h4.608v-14.976q0-8.064-11.52-8.064h-2.304v-4.608h2.304q9.792 0 13.824 5.256 4.032-5.256 13.824-5.256h2.304v4.608h-2.304z","OBJECT_GROUP":"M73.728-50.615h-4.608v36.864h4.608v13.824h-13.824v-4.608h-46.08v4.608h-13.824v-13.824h4.608v-36.864h-4.608v-13.824h13.824v4.608h46.08v-4.608h13.824v13.824zm-9.216-9.216v4.608h4.608v-4.608h-4.608zm-59.904 0v4.608h4.608v-4.608h-4.608zm4.608 55.296v-4.608h-4.608v4.608h4.608zm50.688-4.608v-4.608h4.608v-36.864h-4.608v-4.608h-46.08v4.608h-4.608v36.864h4.608v4.608h46.08zm9.216 4.608v-4.608h-4.608v4.608h4.608zm-23.04-36.864h13.824v27.648h-32.256v-9.216h-13.824v-27.648h32.256v9.216zm-27.648 13.824h23.04v-18.432h-23.04v18.432zm36.864 9.216v-18.432h-9.216v13.824h-13.824v4.608h23.04z","OBJECT_UNGROUP":"M82.944-36.791h-4.608v23.04h4.608v13.824h-13.824v-4.608h-32.256v4.608h-13.824v-13.824h4.608v-4.608h-13.824v4.608h-13.824v-13.824h4.608v-23.04h-4.608v-13.824h13.824v4.608h32.256v-4.608h13.824v13.824h-4.608v4.608h13.824v-4.608h13.824v13.824zm-9.216-9.216v4.608h4.608v-4.608h-4.608zm-23.04-13.824v4.608h4.608v-4.608h-4.608zm-46.08 0v4.608h4.608v-4.608h-4.608zm4.608 41.472v-4.608h-4.608v4.608h4.608zm46.08-4.608h-4.608v4.608h4.608v-4.608zm-41.472 0h32.256v-4.608h4.608v-23.04h-4.608v-4.608h-32.256v4.608h-4.608v23.04h4.608v4.608zm18.432 18.432v-4.608h-4.608v4.608h4.608zm46.08 0v-4.608h-4.608v4.608h4.608zm-4.608-9.216v-23.04h-4.608v-4.608h-13.824v13.824h4.608v13.824h-13.824v-4.608h-13.824v4.608h4.608v4.608h32.256v-4.608h4.608z","STICKY_NOTE":"M36.864-19.511v14.976h-33.408q-1.44 0-2.448-1.008t-1.008-2.448v-48.384q0-1.44 1.008-2.448t2.448-1.008h48.384q1.44 0 2.448 1.008t1.008 2.448v33.408h-14.976q-1.44 0-2.448 1.008t-1.008 2.448zm4.608 1.152h13.716q-.54 2.952-2.34 4.752l-6.624 6.624q-1.8 1.8-4.752 2.34v-13.716z","STICKY_NOTE_O":"M50.4-18.359h-8.928v8.928q1.044-.36 1.476-.792l6.66-6.66q.432-.432.792-1.476zm-10.08-4.608h10.368v-32.256h-46.08v46.08h32.256v-10.368q0-1.44 1.008-2.448t2.448-1.008zm14.976-33.408v36.864q0 1.44-.72 3.168t-1.728 2.736l-6.624 6.624q-1.008 1.008-2.736 1.728t-3.168.72h-36.864q-1.44 0-2.448-1.008t-1.008-2.448v-48.384q0-1.44 1.008-2.448t2.448-1.008h48.384q1.44 0 2.448 1.008t1.008 2.448z","CC_JCB":"M70.236-28.511q0 .936-.558 1.602t-1.386.846q-.288.072-.648.072h-5.508v-5.04h5.508q.36 0 .648.072.828.18 1.386.846t.558 1.602zm-.648-7.668q0 .9-.54 1.512t-1.368.756q-.108.036-.54.036h-5.004v-4.644h5.004l.306.018.234.018q.828.144 1.368.774t.54 1.53zm-43.38 5.904v-11.088h-8.208v11.088q0 2.088-1.368 3.402t-3.78 1.314q-3.888 0-8.244-2.124v4.032q1.908.54 4.356.828t3.924.324l1.512.036q11.808 0 11.808-7.812zm25.704 6.624v-4.068q-3.564 1.872-7.2 2.124-3.888.288-6.084-1.476t-2.196-5.112 2.196-5.112 6.084-1.476q3.636.252 7.2 2.088v-4.032q-1.728-.432-3.6-.702t-2.88-.342l-1.008-.072q-4.572-.216-7.866.504t-5.058 2.16-2.556 3.168-.792 3.816.792 3.816 2.556 3.168 5.058 2.16 7.866.504q3.636-.144 7.488-1.116zm26.424-4.14q0-1.944-1.548-3.186t-3.924-1.422v-.108q2.052-.288 3.204-1.494t1.152-2.862q0-1.98-1.476-3.168t-3.852-1.296l-.432-.018-.504-.018h-16.38v18.36h17.676q2.664 0 4.374-1.314t1.71-3.474zm4.608-27.432v46.08q0 1.872-1.368 3.24t-3.24 1.368h-73.728q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h73.728q1.872 0 3.24 1.368t1.368 3.24z","CC_DINERS_CLUB":"M30.888-19.763v-24.948q-3.816 1.476-6.192 4.878t-2.376 7.614 2.376 7.614 6.192 4.842zm18.144-12.456q0-4.212-2.376-7.614t-6.192-4.878v24.984q3.816-1.476 6.192-4.878t2.376-7.614zm7.74 0q0 5.724-2.826 10.584t-7.686 7.686-10.584 2.826q-4.284 0-8.19-1.674t-6.732-4.5-4.5-6.732-1.674-8.19q0-5.724 2.826-10.584t7.686-7.686 10.584-2.826 10.584 2.826 7.686 7.686 2.826 10.584zm13.788.252q0-5.004-1.998-9.414t-5.31-7.398-7.686-4.716-9.09-1.728h-10.836q-6.336 0-11.646 2.916t-8.46 8.28-3.15 12.06q0 6.156 3.132 11.43t8.496 8.334 11.628 3.06h10.836q4.644 0 9.054-1.818t7.722-4.86 5.31-7.29 1.998-8.856zm12.384-23.256v46.08q0 1.872-1.368 3.24t-3.24 1.368h-73.728q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h73.728q1.872 0 3.24 1.368t1.368 3.24z","CLONE":"M59.904-5.687v-39.168q0-.468-.342-.81t-.81-.342h-39.168q-.468 0-.81.342t-.342.81v39.168q0 .468.342.81t.81.342h39.168q.468 0 .81-.342t.342-.81zm4.608-39.168v39.168q0 2.376-1.692 4.068t-4.068 1.692h-39.168q-2.376 0-4.068-1.692t-1.692-4.068v-39.168q0-2.376 1.692-4.068t4.068-1.692h39.168q2.376 0 4.068 1.692t1.692 4.068zm-13.824-13.824v5.76h-4.608v-5.76q0-.468-.342-.81t-.81-.342h-39.168q-.468 0-.81.342t-.342.81v39.168q0 .468.342.81t.81.342h5.76v4.608h-5.76q-2.376 0-4.068-1.692t-1.692-4.068v-39.168q0-2.376 1.692-4.068t4.068-1.692h39.168q2.376 0 4.068 1.692t1.692 4.068z","BALANCE_SCALE":"M62.208-48.311l-13.824 25.344h27.648zm-46.08 0l-13.824 25.344h27.648zm29.556-6.912q-.504 1.44-1.638 2.574t-2.574 1.638v46.476h21.888q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-48.384q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h21.888v-46.476q-1.44-.504-2.574-1.638t-1.638-2.574h-17.676q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h17.676q.756-2.052 2.52-3.33t3.996-1.278 3.996 1.278 2.52 3.33h17.676q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-17.676zm-6.516.576q1.188 0 2.034-.846t.846-2.034-.846-2.034-2.034-.846-2.034.846-.846 2.034.846 2.034 2.034.846zm39.168 31.68q0 2.628-1.674 4.716t-4.23 3.276-5.202 1.782-5.022.594-5.022-.594-5.202-1.782-4.23-3.276-1.674-4.716q0-.396 1.26-2.916t3.312-6.282 3.852-7.038 3.672-6.624 2.016-3.6q.648-1.188 2.016-1.188t2.016 1.188q.144.252 2.016 3.6t3.672 6.624 3.852 7.038 3.312 6.282 1.26 2.916zm-46.08 0q0 2.628-1.674 4.716t-4.23 3.276-5.202 1.782-5.022.594-5.022-.594-5.202-1.782-4.23-3.276-1.674-4.716q0-.396 1.26-2.916t3.312-6.282 3.852-7.038 3.672-6.624 2.016-3.6q.648-1.188 2.016-1.188t2.016 1.188q.144.252 2.016 3.6t3.672 6.624 3.852 7.038 3.312 6.282 1.26 2.916z","HOURGLASS_O":"M50.688-59.831q0 9.396-3.834 16.614t-9.594 11.034q5.76 3.816 9.594 11.034t3.834 16.614h3.456q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-52.992q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.456q0-9.396 3.834-16.614t9.594-11.034q-5.76-3.816-9.594-11.034t-3.834-16.614h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h52.992q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-3.456zm-19.224 25.488q2.772-1.044 5.364-3.33t4.662-5.49 3.33-7.56 1.26-9.108h-36.864q0 4.752 1.26 9.108t3.33 7.56 4.662 5.49 5.364 3.33q.684.252 1.098.846t.414 1.314-.414 1.314-1.098.846q-2.772 1.044-5.364 3.33t-4.662 5.49-3.33 7.56-1.26 9.108h36.864q0-4.752-1.26-9.108t-3.33-7.56-4.662-5.49-5.364-3.33q-.684-.252-1.098-.846t-.414-1.314.414-1.314 1.098-.846z","HOURGLASS_START":"M50.688-59.831q0 9.396-3.834 16.614t-9.594 11.034q5.76 3.816 9.594 11.034t3.834 16.614h3.456q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-52.992q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.456q0-9.396 3.834-16.614t9.594-11.034q-5.76-3.816-9.594-11.034t-3.834-16.614h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h52.992q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-3.456zm-4.608 0h-36.864q0 2.376.324 4.608h36.216q.324-2.196.324-4.608zm0 55.296q0-4.68-1.224-8.982t-3.258-7.488-4.554-5.472-5.256-3.402h-8.28q-2.736 1.116-5.256 3.402t-4.554 5.472-3.258 7.488-1.224 8.982h36.864z","HOURGLASS_HALF":"M50.688-59.831q0 9.396-3.834 16.614t-9.594 11.034q5.76 3.816 9.594 11.034t3.834 16.614h3.456q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-52.992q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.456q0-9.396 3.834-16.614t9.594-11.034q-5.76-3.816-9.594-11.034t-3.834-16.614h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h52.992q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-3.456zm-4.608 0h-36.864q0 7.416 3.06 13.824h30.744q3.06-6.408 3.06-13.824zm-2.052 43.776q-1.944-5.076-5.238-8.694t-7.002-5.13h-8.28q-3.708 1.512-7.002 5.13t-5.238 8.694h32.76z","HOURGLASS_END":"M50.688-59.831q0 9.396-3.834 16.614t-9.594 11.034q5.76 3.816 9.594 11.034t3.834 16.614h3.456q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-52.992q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h3.456q0-9.396 3.834-16.614t9.594-11.034q-5.76-3.816-9.594-11.034t-3.834-16.614h-3.456q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h52.992q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-3.456zm-19.224 25.488q2.772-1.044 5.364-3.33t4.662-5.49 3.33-7.56 1.26-9.108h-36.864q0 4.752 1.26 9.108t3.33 7.56 4.662 5.49 5.364 3.33q.684.252 1.098.846t.414 1.314-.414 1.314-1.098.846q-4.932 1.836-8.784 7.056h25.2q-3.852-5.22-8.784-7.056-.684-.252-1.098-.846t-.414-1.314.414-1.314 1.098-.846z","HOURGLASS":"M54.144-6.839q.504 0 .828.324t.324.828v4.608q0 .504-.324.828t-.828.324h-52.992q-.504 0-.828-.324t-.324-.828v-4.608q0-.504.324-.828t.828-.324h52.992zm-49.464-2.304q.108-1.98.576-3.852t1.08-3.42 1.656-3.132 1.926-2.736 2.322-2.502 2.376-2.16 2.538-1.98 2.394-1.71 2.34-1.548q-1.548-1.008-2.34-1.548t-2.394-1.71-2.538-1.98-2.376-2.16-2.322-2.502-1.926-2.736-1.656-3.132-1.08-3.42-.576-3.852h45.936q-.108 1.98-.576 3.852t-1.08 3.42-1.656 3.132-1.926 2.736-2.322 2.502-2.376 2.16-2.538 1.98-2.394 1.71-2.34 1.548q1.548 1.008 2.34 1.548t2.394 1.71 2.538 1.98 2.376 2.16 2.322 2.502 1.926 2.736 1.656 3.132 1.08 3.42.576 3.852h-45.936zm49.464-55.296q.504 0 .828.324t.324.828v4.608q0 .504-.324.828t-.828.324h-52.992q-.504 0-.828-.324t-.324-.828v-4.608q0-.504.324-.828t.828-.324h52.992z","HAND_ROCK_O":"M27.648-50.615q-1.908 0-3.258 1.35t-1.35 3.258v4.608h-1.152v-3.348q0-1.728-1.152-2.934t-2.88-1.206q-1.656 0-2.844 1.188t-1.188 2.844v15.444l-1.152-1.08v-6.192q0-1.728-1.152-2.934t-2.88-1.206q-1.656 0-2.844 1.188t-1.188 2.844v8.064q0 1.692 1.26 2.952l11.16 10.656q1.404 1.404 1.404 3.672 0 .936.684 1.62t1.62.684h23.04q.936 0 1.62-.684t.684-1.62v-.9q0-1.476.36-2.772l3.888-15.696q.36-1.296.36-2.772v-8.856q0-1.728-1.152-2.934t-2.88-1.206q-1.656 0-2.844 1.188t-1.188 2.844v1.152h-1.152v-4.5q0-1.44-.9-2.61t-2.304-1.458q-.504-.072-.828-.072-1.656 0-2.844 1.188t-1.188 2.844v4.608h-1.152v-4.392q0-1.836-1.17-3.222t-2.97-1.566q-.18-.036-.468-.036zm0-4.608q3.024 0 5.364 1.8 2.052-1.224 4.428-1.224 2.124 0 3.996.972t3.096 2.736q.972-.252 2.124-.252 3.6 0 6.12 2.574t2.52 6.174v8.856q0 1.836-.468 3.888l-3.924 15.696q-.216.864-.216 2.556 0 2.88-2.016 4.896t-4.896 2.016h-23.04q-3.024 0-4.968-2.106t-1.944-5.13l-11.088-10.656q-2.736-2.628-2.736-6.3v-8.064q0-3.564 2.538-6.102t6.102-2.538q.396 0 .576.036.216-3.42 2.718-5.76t5.922-2.34q1.872 0 3.528.756 2.592-2.484 6.264-2.484z","HAND_STOP_O":"M31.68-59.831q-1.656 0-2.844 1.188t-1.188 2.844v23.616h-1.152v-19.008q0-1.656-1.188-2.844t-2.844-1.188-2.844 1.188-1.188 2.844v28.223999999999997l-5.544-7.38q-1.368-1.836-3.672-1.836-1.908 0-3.258 1.35t-1.35 3.258q0 1.548.936 2.772l13.824 18.432q1.368 1.836 3.672 1.836h24.768q1.224 0 2.196-.792t1.224-2.016l2.736-14.58q.18-1.152.18-2.124v-17.928q0-1.656-1.188-2.844t-2.844-1.188-2.844 1.188-1.188 2.844v9.792h-1.152v-19.008q0-1.656-1.188-2.844t-2.844-1.188-2.844 1.188-1.188 2.844v19.008h-1.152v-23.616q0-1.656-1.188-2.844t-2.844-1.188zm0-4.608q2.448 0 4.518 1.278t3.186 3.474q.684-.144 1.512-.144 3.564 0 6.102 2.538t2.538 6.102v.612q3.78-.216 6.498 2.304t2.718 6.3v17.928q0 1.44-.288 2.988l-2.736 14.544q-.504 2.844-2.754 4.716t-5.166 1.872h-24.768q-2.16 0-4.122-.99t-3.258-2.682l-13.824-18.432q-1.836-2.448-1.836-5.544 0-3.816 2.7-6.516t6.516-2.7q2.808 0 4.608 1.224v-15.624q0-3.564 2.538-6.102t6.102-2.538q.828 0 1.512.144 1.116-2.196 3.186-3.474t4.518-1.278z","HAND_SCISSORS_O":"M38.628-4.535h-6.372q-5.868 0-8.136-5.076-.828-1.764-.828-3.672v-.18q-2.232-1.08-3.546-3.186t-1.314-4.59q0-1.368.18-1.728h-9.396q-3.816 0-6.516-2.7t-2.7-6.516 2.7-6.516 6.516-2.7h4.068l-1.584-.612q-2.664-1.008-4.302-3.366t-1.638-5.238q0-3.816 2.7-6.516t6.516-2.7q1.656 0 3.276.612l22.608 8.604h14.436q3.816 0 6.516 2.7t2.7 6.516v24.048q0 3.168-1.944 5.67t-5.04 3.258l-12.204 3.06q-3.312.828-6.696.828zm-1.764-25.596l-5.58 2.556-5.868 2.664q-1.08.504-1.728 1.494t-.648 2.178q0 1.656 1.188 2.844t2.844 1.188q.936 0 1.656-.36l12.168-5.544q-1.764-.36-2.898-1.8t-1.134-3.24v-1.98zm11.52 11.196q0-1.656-1.188-2.844t-2.844-1.188q-.936 0-1.656.36l-10.44 4.752q-1.008.468-1.332.612t-1.098.612-1.062.846-.576 1.044-.288 1.458q0 1.8 1.134 2.952t2.934 1.152q.72 0 1.368-.324l12.672-5.76q1.08-.504 1.728-1.494t.648-2.178zm-8.352-27.072l-23.4-8.928q-.864-.288-1.656-.288-1.908 0-3.258 1.35t-1.35 3.258q0 1.44.81 2.628t2.142 1.692l18.936 7.2v2.304h-23.04q-1.908 0-3.258 1.35t-1.35 3.258 1.35 3.258 3.258 1.35h19.26l8.388-3.816v-7.128q0-2.268 1.656-3.816l3.996-3.672h-2.484zm-1.404 36.864q2.952 0 5.58-.684l12.204-3.06q1.548-.396 2.52-1.638t.972-2.826v-24.048q0-1.908-1.35-3.258t-3.258-1.35h-11.088l-4.896 4.536q-1.296 1.188-1.296 2.952v10.656q0 1.656 1.188 2.772t2.844 1.116 2.844-1.26 1.188-2.916v-7.488h1.152v7.488q0 2.52-2.052 4.104 1.872.288 3.114 1.746t1.242 3.366q0 1.512-.828 2.808t-2.196 1.908l-11.16 5.076h3.276z","HAND_LIZARD_O":"M41.436-64.439q2.196 0 4.176 1.008t3.276 2.772l20.592 28.116q4.248 5.724 4.248 12.924v12.78q0 2.88-2.016 4.896t-4.896 2.016h-13.824q-2.88 0-4.896-2.016t-2.016-4.896v-6.372l-10.296-5.148h-19.656q-2.88 0-4.896-2.016t-2.016-4.896v-1.152q0-4.284 3.042-7.326t7.326-3.042h15.12l1.512-4.608h-24.696q-3.6 0-6.246-2.43t-2.934-5.994q-2.34-2.844-2.34-6.552v-1.152q0-2.88 2.016-4.896t4.896-2.016h34.524zm27.684 57.6v-12.78q0-5.652-3.348-10.224l-20.628-28.116q-1.404-1.872-3.708-1.872h-34.524q-.936 0-1.62.684t-.684 1.62q0 1.152.054 1.782t.342 1.458.9 1.548q.36-1.116 1.278-1.8t2.034-.684h29.952v1.152h-29.952q-.936 0-1.62.684t-.684 1.62q0 1.584.108 2.088.288 1.584 1.584 2.628t2.916 1.044h26.316q1.44 0 2.448 1.008t1.008 2.448q0 .54-.18 1.08l-2.304 6.912q-.36 1.044-1.26 1.71t-2.016.666h-15.948q-2.376 0-4.068 1.692t-1.692 4.068v1.152q0 .936.684 1.62t1.62.684h20.196q.576 0 1.044.252l11.412 5.688q.864.468 1.386 1.296t.522 1.8v7.092q0 .936.684 1.62t1.62.684h13.824q.936 0 1.62-.684t.684-1.62z","HAND_SPOCK_O":"M29.376-59.831q-1.728 0-2.862 1.224t-1.134 2.952q0 .504.108 1.008l5.4 22.464h-.936l-4.176-17.352q-.324-1.368-1.422-2.232t-2.502-.864q-1.692 0-2.844 1.224t-1.152 2.916q0 .396.144 1.044.108.468 1.404 5.796t2.448 10.152 1.152 4.968v8.172l-11.052-8.28q-1.224-.936-2.772-.936-1.872 0-3.222 1.314t-1.35 3.186q0 2.412 2.016 3.96l18.252 13.644q1.224.936 2.736.936h24.984q1.188 0 2.124-.738t1.224-1.89l3.6-14.436q.288-1.08.36-3.168t.324-3.096l4.176-17.208q.108-.432.108-.936 0-1.656-1.188-2.844t-2.88-1.188q-1.368 0-2.484.918t-1.44 2.25l-3.564 14.688h-.936l4.752-19.692q.108-.504.108-1.008 0-1.692-1.152-2.88t-2.88-1.188q-1.368 0-2.466.864t-1.422 2.232l-5.22 21.672h-4.572l-5.904-24.552q-.324-1.368-1.422-2.232t-2.466-.864zm23.22 59.904h-24.984q-3.06 0-5.508-1.836l-18.252-13.68q-1.8-1.368-2.826-3.384t-1.026-4.248q0-3.78 2.7-6.444t6.48-2.664q.9 0 1.782.198t1.494.396 1.476.738 1.26.828 1.386 1.062 1.35 1.026l-4.428-18.432q-.252-1.26-.252-2.124 0-3.348 2.16-5.832t5.472-2.844q.504-3.132 2.898-5.202t5.598-2.07q2.988 0 5.328 1.854t3.06 4.77l3.708 15.408 2.988-12.528q.72-2.916 3.06-4.77t5.328-1.854q3.132 0 5.49 1.944t2.97 5.004q3.348.36 5.58 2.808t2.232 5.796q0 1.08-.252 2.052l-4.176 17.172q-.18.792-.18 2.412 0 1.836-.468 3.888l-3.636 14.436q-.684 2.7-2.862 4.41t-4.95 1.71z","HAND_POINTER_O":"M23.04-59.831q-1.908 0-3.258 1.35t-1.35 3.258v32.256l-5.436-7.272q-1.476-1.944-3.852-1.944-1.872 0-3.204 1.368t-1.332 3.24q0 1.548.936 2.772l13.824 18.432q1.368 1.836 3.672 1.836h25.848q.792 0 1.422-.486t.81-1.242l3.312-13.248q.864-3.456.864-6.984v-7.812q0-1.476-1.008-2.556t-2.448-1.08-2.448 1.008-1.008 2.448h-1.152v-2.196q0-1.728-1.152-2.934t-2.88-1.206q-1.656 0-2.844 1.188t-1.188 2.844v2.304h-1.152v-3.24q0-1.98-1.332-3.402t-3.276-1.422q-1.908 0-3.258 1.35t-1.35 3.258v3.456h-1.152v-20.52q0-1.98-1.332-3.402t-3.276-1.422zm0-4.608q3.852 0 6.534 2.79t2.682 6.642v7.92q.792-.072 1.152-.072 3.564 0 6.228 2.484 1.692-.756 3.564-.756 4.068 0 6.624 3.132.972-.252 2.016-.252 3.384 0 5.724 2.43t2.34 5.814v7.812q0 4.176-1.008 8.1l-3.312 13.248q-.576 2.304-2.448 3.762t-4.248 1.458h-25.848q-2.16 0-4.122-.99t-3.258-2.682l-13.824-18.432q-1.836-2.448-1.836-5.544 0-3.78 2.682-6.498t6.462-2.718q2.556 0 4.68 1.26v-19.692q0-3.816 2.7-6.516t6.516-2.7zm4.608 50.688v-13.824h-1.152v13.824h1.152zm9.216 0v-13.824h-1.152v13.824h1.152zm9.216 0v-13.824h-1.152v13.824h1.152z","HAND_PEACE_O":"M46.368-41.147q2.16 0 3.852.828 5.076 2.268 5.076 8.136v6.372q0 3.384-.828 6.696l-3.06 12.204q-.756 3.096-3.258 5.04t-5.67 1.944h-24.048q-3.816 0-6.516-2.7t-2.7-6.516v-14.436l-8.604-22.608q-.612-1.62-.612-3.276 0-3.816 2.7-6.516t6.516-2.7q2.88 0 5.238 1.638t3.366 4.302l.612 1.584v-4.068q0-3.816 2.7-6.516t6.516-2.7 6.516 2.7 2.7 6.516v9.396q.972-.18 1.728-.18 2.484 0 4.59 1.314t3.186 3.546zm-7.776-.252q-1.188 0-2.178.648t-1.494 1.728l-2.664 5.868-2.556 5.58h1.98q1.8 0 3.24 1.134t1.8 2.898l5.544-12.168q.36-.72.36-1.656 0-1.656-1.188-2.844t-2.844-1.188zm7.956 4.86q-.792 0-1.458.288t-1.044.576-.846 1.062-.612 1.098-.612 1.332l-4.752 10.44q-.36.72-.36 1.656 0 1.656 1.188 2.844t2.844 1.188q1.188 0 2.178-.648t1.494-1.728l5.76-12.672q.324-.648.324-1.368 0-1.8-1.152-2.934t-2.952-1.134zm-41.94-12.924q0 .792.288 1.656l8.928 23.4v2.484l3.672-3.996q1.548-1.656 3.816-1.656h7.128l3.816-8.388v-19.26q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258v23.04h-2.304l-7.2-18.936q-.504-1.332-1.692-2.142t-2.628-.81q-1.908 0-3.258 1.35t-1.35 3.258zm37.872 44.928q1.584 0 2.826-.972t1.638-2.52l3.06-12.204q.684-2.628.684-5.58v-3.276l-5.076 11.16q-.612 1.368-1.908 2.196t-2.808.828q-1.908 0-3.366-1.242t-1.746-3.114q-1.584 2.052-4.104 2.052h-7.488v-1.152h7.488q1.656 0 2.916-1.188t1.26-2.844-1.116-2.844-2.772-1.188h-10.656q-1.764 0-2.952 1.296l-4.536 4.896v11.088q0 1.908 1.35 3.258t3.258 1.35h24.048z","TRADEMARK":"M30.852-44.855v4.212q0 .468-.342.792t-.81.324h-10.728v29.232q0 .468-.324.81t-.792.342h-4.86q-.468 0-.81-.324t-.342-.828v-29.232h-10.692q-.468 0-.81-.324t-.342-.792v-4.212q0-.504.324-.828t.828-.324h28.548q.468 0 .81.342t.342.81zm37.368-.108l2.772 34.596q.036.468-.288.864-.36.36-.828.36h-4.824q-.432 0-.756-.306t-.36-.738l-1.656-21.168-6.804 15.3q-.288.684-1.044.684h-4.32q-.72 0-1.044-.684l-6.768-15.372-1.62 21.24q-.036.432-.36.738t-.756.306h-4.86q-.468 0-.828-.36-.324-.36-.324-.864l2.808-34.596q.036-.432.36-.738t.756-.306h5.112q.72 0 1.044.684l7.92 18.72q.36.864.72 1.836.108-.252.342-.882t.378-.954l7.956-18.72q.324-.684 1.044-.684h5.076q.468 0 .792.306t.36.738z","REGISTERED":"M37.512-39.131q0-3.168-2.16-4.356-1.188-.648-4.212-.648h-4.428v10.116h5.832q2.376 0 3.672-1.332t1.296-3.78zm1.872 10.26l7.38 13.428q.288.612-.036 1.116-.288.576-.972.576h-5.472q-.72 0-1.008-.612l-6.984-13.14h-5.58v12.6q0 .504-.324.828t-.828.324h-4.824q-.504 0-.828-.324t-.324-.828v-34.56q0-.504.324-.828t.828-.324h10.584q4.608 0 6.84.864 3.06 1.116 4.824 3.924t1.764 6.48q0 3.312-1.53 5.958t-4.158 3.942q.216.36.324.576zm-7.128-29.808q-5.4 0-10.296 2.106t-8.442 5.652-5.652 8.442-2.106 10.296 2.106 10.296 5.652 8.442 8.442 5.652 10.296 2.106 10.296-2.106 8.442-5.652 5.652-8.442 2.106-10.296-2.106-10.296-5.652-8.442-8.442-5.652-10.296-2.106zm32.256 26.496q0 6.552-2.556 12.528t-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556 12.528 2.556 10.296 6.876 6.876 10.296 2.556 12.528z","CREATIVE_COMMONS":"M21.78-20.051q5.508 0 9.252-3.744.504-.648.108-1.296l-1.62-2.952q-.216-.468-.864-.612-.576-.072-.972.396l-.144.108q-.144.144-.414.36t-.63.468-.846.522-1.026.486-1.206.342-1.35.126q-2.736 0-4.5-1.8t-1.764-4.572q0-2.736 1.728-4.518t4.392-1.782q1.332 0 2.574.504t1.818 1.008l.576.504q.396.396.936.36.576-.072.864-.504l1.908-2.808q.468-.72-.072-1.404-.108-.144-.396-.432t-1.08-.846-1.746-1.008-2.43-.81-3.096-.36q-5.328 0-8.856 3.474t-3.528 8.658q0 5.256 3.492 8.694t8.892 3.438zm22.68 0q5.508 0 9.252-3.744.504-.648.144-1.296l-1.62-2.952q-.288-.504-.9-.612-.576-.072-.972.396l-.144.108q-.144.144-.414.36t-.63.468-.846.522-1.026.486-1.206.342-1.35.126q-2.736 0-4.5-1.8t-1.764-4.572q0-2.736 1.728-4.518t4.392-1.782q1.332 0 2.574.504t1.818 1.008l.576.504q.396.396.936.36.576-.072.864-.504l1.908-2.808q.468-.72-.072-1.404-.108-.144-.396-.432t-1.08-.846-1.746-1.008-2.43-.81-3.096-.36q-5.292 0-8.838 3.474t-3.546 8.658q0 5.256 3.492 8.694t8.892 3.438zm-12.204-38.628q-5.4 0-10.296 2.106t-8.442 5.652-5.652 8.442-2.106 10.296 2.106 10.296 5.652 8.442 8.442 5.652 10.296 2.106 10.296-2.106 8.442-5.652 5.652-8.442 2.106-10.296-2.106-10.296-5.652-8.442-8.442-5.652-10.296-2.106zm0-5.76q6.552 0 12.528 2.556t10.296 6.876 6.876 10.296 2.556 12.528-2.556 12.528-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556z","GG":"M26.496-35.639l13.824 13.824-13.824 13.824-24.192-24.192 24.192-24.192 6.048 6.048-3.456 3.456-2.592-2.592-17.28 17.28 17.28 17.28 6.948-6.948-10.404-10.332zm20.736-20.736l24.192 24.192-24.192 24.192-6.048-6.048 3.456-3.456 2.592 2.592 17.28-17.28-17.28-17.28-6.948 6.948 10.404 10.332-3.456 3.456-13.824-13.824z","GG_CIRCLE":"M25.812-15.695l9.756-9.756-10.044-10.044-3.168 3.168 6.912 6.876-3.456 3.456-10.044-10.044 10.044-10.044 1.44 1.44 3.132-3.132-4.572-4.608-16.344 16.344zm12.888-.288l16.344-16.344-16.344-16.344-9.756 9.756 10.044 10.044 3.168-3.168-6.912-6.876 3.456-3.456 10.044 10.044-10.044 10.044-1.44-1.44-3.132 3.168zm25.812-16.2q0 6.552-2.556 12.528t-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556 12.528 2.556 10.296 6.876 6.876 10.296 2.556 12.528z","TRIPADVISOR":"M23.436-28.547q0 1.404-.99 2.394t-2.358.99q-1.404 0-2.394-.99t-.99-2.394q0-1.368.99-2.358t2.394-.99q1.368 0 2.358.99t.99 2.358zm41.544-.036q0 1.404-.99 2.394t-2.394.99-2.394-.99-.99-2.394.99-2.376 2.394-.972 2.394.972.99 2.376zm-37.44.036q0-2.844-2.034-4.896t-4.914-2.052-4.914 2.034-2.034 4.914 2.034 4.914 4.914 2.034 4.914-2.034 2.034-4.914zm41.508-.036q0-2.88-2.034-4.914t-4.914-2.034q-2.844 0-4.896 2.034t-2.052 4.914 2.034 4.914 4.914 2.034 4.914-2.034 2.034-4.914zm-38.448.036q0 4.176-2.934 7.11t-7.074 2.934q-4.176 0-7.11-2.952t-2.934-7.092 2.952-7.074 7.092-2.934 7.074 2.934 2.934 7.074zm41.544-.036q0 4.14-2.934 7.074t-7.11 2.934q-4.14 0-7.074-2.934t-2.934-7.074 2.934-7.074 7.074-2.934q4.176 0 7.11 2.934t2.934 7.074zm-34.704.108q0-6.876-4.878-11.754t-11.754-4.878q-4.5 0-8.316 2.232t-6.048 6.066-2.232 8.334 2.232 8.334 6.048 6.066 8.316 2.232q6.876 0 11.754-4.878t4.878-11.754zm24.048-20.628q-9.144-3.996-20.016-3.996-11.484 0-20.628 3.96 4.212 0 8.028 1.638t6.57 4.41 4.392 6.588 1.638 8.028q0-4.14 1.566-7.902t4.248-6.498 6.39-4.428 7.812-1.8zm17.244 20.628q0-6.876-4.86-11.754t-11.736-4.878-11.754 4.878-4.878 11.754 4.878 11.754 11.754 4.878 11.736-4.878 4.86-11.754zm-9.576-20.376h13.788q-1.584 1.836-2.7 4.122t-1.44 4.122q3.96 5.436 3.96 12.132 0 5.616-2.772 10.368t-7.524 7.506-10.332 2.754q-4.788 0-8.964-2.016t-7.056-5.58q-1.692 2.016-4.644 6.444-.396-.792-1.926-2.97t-2.682-3.51q-2.88 3.564-7.074 5.598t-8.982 2.034q-5.58 0-10.332-2.754t-7.524-7.506-2.772-10.368q0-6.696 3.96-12.132-.324-1.836-1.44-4.122t-2.7-4.122h13.14q5.364-3.6 12.78-5.634t15.552-2.034q8.064 0 15.156 2.016t12.528 5.652z","ODNOKLASSNIKI":"M23.04-31.787q-6.768 0-11.556-4.788t-4.788-11.52q0-6.768 4.788-11.556t11.556-4.788 11.556 4.788 4.788 11.556q0 6.732-4.788 11.52t-11.556 4.788zm0-24.372q-3.312 0-5.67 2.358t-2.358 5.706q0 3.312 2.358 5.67t5.67 2.358 5.67-2.358 2.358-5.67q0-3.348-2.358-5.706t-5.67-2.358zm18.828 26.352q.468.972.54 1.782t-.162 1.458-.954 1.386-1.53 1.332-2.214 1.494q-4.14 2.628-11.34 3.384l2.628 2.592 9.612 9.612q1.08 1.116 1.08 2.664t-1.08 2.628l-.432.468q-1.116 1.08-2.664 1.08t-2.664-1.08q-2.412-2.448-9.612-9.648l-9.612 9.648q-1.116 1.08-2.664 1.08t-2.628-1.08l-.432-.468q-1.116-1.08-1.116-2.628t1.116-2.664l9.612-9.612 2.592-2.592q-7.308-.756-11.412-3.384-1.404-.9-2.214-1.494t-1.53-1.332-.954-1.386-.162-1.458.54-1.782q.36-.72 1.008-1.26t1.512-.792 2.016.072 2.34 1.26q.18.144.54.396t1.548.882 2.484 1.098 3.312.864 4.068.396q3.276 0 6.264-.918t4.32-1.818l1.368-.9q1.188-.936 2.34-1.26t2.016-.072 1.512.792 1.008 1.26z","ODNOKLASSNIKI_SQUARE":"M33.372-43.559q0 2.376-1.674 4.05t-4.05 1.674-4.05-1.674-1.674-4.05 1.674-4.05 4.05-1.674 4.05 1.674 1.674 4.05zm7.704 13.068q-.36-.72-1.008-1.152t-1.71-.342-2.178.99q-.36.288-1.044.72t-2.916 1.152-4.572.72-4.464-.648-3.096-1.296l-.972-.648q-1.116-.9-2.178-.99t-1.71.342-1.008 1.152q-.792 1.62-.072 2.682t3.132 2.646q2.988 1.908 8.136 2.412l-1.836 1.872q-5.112 5.112-6.876 6.84-.792.792-.792 1.89t.792 1.89l.324.324q.792.792 1.89.792t1.89-.792l6.876-6.876q4.104 4.14 6.876 6.876.792.792 1.89.792t1.89-.792l.324-.324q.792-.792.792-1.89t-.792-1.89l-6.876-6.84-1.872-1.872q5.076-.504 8.1-2.412 2.412-1.584 3.132-2.646t-.072-2.682zm-1.764-13.068q0-4.824-3.42-8.244t-8.244-3.42-8.244 3.42-3.42 8.244 3.42 8.244 8.244 3.42 8.244-3.42 3.42-8.244zm15.984-5.904v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","GET_POCKET":"M56.34-59.831q2.34 0 3.96 1.638t1.62 3.978v18.684q0 6.336-2.448 12.096t-6.57 9.9-9.864 6.57-12.042 2.43q-6.336 0-12.078-2.43t-9.882-6.57-6.588-9.9-2.448-12.096v-18.684q0-2.304 1.656-3.96t3.96-1.656h50.724zm-25.344 38.304q1.692 0 2.952-1.188l14.544-13.968q1.332-1.26 1.332-3.06 0-1.764-1.242-3.006t-3.006-1.242q-1.692 0-2.952 1.188l-11.628 11.16-11.628-11.16q-1.26-1.188-2.916-1.188-1.764 0-3.006 1.242t-1.242 3.006q0 1.836 1.296 3.06l14.58 13.968q1.188 1.188 2.916 1.188z","WIKIPEDIA_W":"M53.784-5.435l-10.62-25.02q-.9 1.764-5.706 10.998t-7.146 14.022q-.036.036-.99.018t-.954-.054q-2.952-6.948-9.198-21.132t-9.342-21.456q-.756-1.8-2.394-3.87t-3.726-3.618-3.672-1.548l-.018-.864-.018-.972h20.988v1.8q-1.404.072-2.862.576t-2.394 1.548-.36 2.304q.936 2.124 7.794 17.964t8.478 19.44q1.116-2.196 5.04-9.594t4.716-8.91q-.684-1.404-4.536-10.116t-4.896-10.62q-1.368-2.484-7.236-2.556v-1.8l18.468.036v1.692q-2.16.072-3.366.9t-.45 2.484q1.188 2.52 3.132 6.822t3.096 6.75q3.96-7.704 6.228-13.068.864-1.98-.36-2.862t-4.644-.954q.036-.252.036-.9v-.864q2.304 0 6.138-.018t6.48-.036 3.33-.018v1.764q-2.232.072-4.284 1.188t-3.24 2.916l-7.668 15.912q.468 1.188 4.59 10.44t4.374 9.864l15.876-36.612q-.504-1.368-1.782-2.25t-2.34-1.134-1.998-.288v-1.8l16.56.144.036.072-.036 1.584q-5.004.144-7.236 5.22-18.936 43.776-20.124 46.476h-1.764z","SAFARI":"M34.164-32.291q0 .936-.594 1.62t-1.494.684q-.936 0-1.62-.594t-.684-1.494q0-.936.612-1.62t1.512-.684 1.584.594.684 1.494zm.54 2.088l12.6-20.916q-.324.288-2.43 2.25t-4.518 4.194-4.914 4.572-4.212 3.978-1.818 1.854l-12.564 20.88q.252-.252 2.412-2.232t4.536-4.194 4.896-4.572 4.212-3.996 1.8-1.818zm23.292-1.98q0 7.236-3.744 13.356-.108-.072-.612-.396t-.954-.594-.594-.27q-.468 0-.468.468 0 .36 2.124 1.584-2.664 4.032-6.642 6.858t-8.694 3.978l-.576-2.412q-.036-.36-.54-.36-.18 0-.288.198t-.072.342l.576 2.448q-2.592.54-5.256.54-7.164 0-13.392-3.78.036-.072.468-.738t.774-1.206.342-.684q0-.468-.468-.468-.216 0-.612.522t-.81 1.242-.486.828q-4.068-2.7-6.912-6.75t-3.96-8.802l2.484-.54q.36-.108.36-.54 0-.18-.198-.288t-.378-.072l-2.448.54q-.504-2.592-.504-5.004 0-7.416 3.924-13.644.072.036.666.432t1.08.684.63.288q.468 0 .468-.432 0-.216-.45-.558t-1.17-.774l-.72-.432q2.772-4.032 6.804-6.804t8.784-3.852l.54 2.412q.072.36.54.36.18 0 .288-.198t.072-.378l-.54-2.376q2.556-.468 4.824-.468 7.344 0 13.644 3.924-1.404 2.016-1.404 2.34 0 .468.432.468.396 0 1.728-2.304 3.996 2.7 6.75 6.696t3.87 8.676l-2.016.432q-.36.072-.36.576 0 .18.198.288t.342.072l2.052-.468q.504 2.592.504 5.04zm3.06 0q0-5.868-2.286-11.196t-6.138-9.18-9.18-6.138-11.196-2.286-11.196 2.286-9.18 6.138-6.138 9.18-2.286 11.196 2.286 11.196 6.138 9.18 9.18 6.138 11.196 2.286 11.196-2.286 9.18-6.138 6.138-9.18 2.286-11.196zm3.456 0q0 6.552-2.556 12.528t-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556 12.528 2.556 10.296 6.876 6.876 10.296 2.556 12.528z","CHROME":"M32.148-64.439q8.64-.072 16.236 4.32 8.352 4.824 12.672 13.392l-26.712-1.404q-5.76-.324-10.584 2.682t-6.66 8.262l-9.936-15.264q4.608-5.724 11.196-8.838t13.788-3.15zm-26.892 14.58l12.132 23.868q2.592 5.148 7.596 7.812t10.548 1.62l-8.28 16.236q-7.632-1.188-13.86-5.67t-9.81-11.376-3.582-14.814q0-9.612 5.256-17.676zm57.096 6.084q2.088 5.4 2.142 11.178t-1.746 11.016-5.508 9.792-8.856 7.542q-8.28 4.788-17.928 4.284l14.58-22.428q3.168-4.716 2.97-10.458t-3.834-9.99zm-30.096.72q4.5 0 7.686 3.186t3.186 7.686-3.186 7.686-7.686 3.186-7.686-3.186-3.186-7.686 3.186-7.686 7.686-3.186z","FIREFOX":"M32.508.073q-10.188 0-18.162-5.418t-11.862-14.346q-2.088-4.716-2.412-10.836t.936-11.97 3.996-11.232 6.444-8.73l-.396 10.116q.396-.504 2.448-.558t2.52.558q1.512-2.916 5.778-4.968t8.442-2.124q-1.944 1.62-4.302 5.346t-2.106 5.886q.9.288 2.25.486t2.268.27 2.448.144 1.818.108q.54.18.342 1.638t-1.098 2.718q-.18.252-.594.666t-2.034 1.278-3.636 1.224l.54 6.804-5.004-2.412q-.648 1.548-.27 2.934t1.296 2.394 2.358 1.494 2.916.234q1.836-.324 3.528-1.242t3.006-1.62 2.646-.63q2.196.144 3.222 1.188t.702 2.34q-.036.072-.09.198t-.306.45-.648.558-1.134.378-1.674.036q-2.16 3.42-5.202 4.878t-7.542 1.062q2.664 2.196 5.85 2.97t6.066.216 5.562-1.872 4.608-3.15 2.898-3.744q1.548-3.276 1.404-6.93t-1.35-6.786-2.826-4.5q3.132 1.368 4.932 2.862t2.772 4.05q.54-6.12-2.07-12.348t-7.542-10.224q9.54 2.772 14.832 10.062t5.436 18.63q.072 4.572-1.458 9.18t-4.446 8.568-6.804 7.056-8.91 4.878-10.386 1.782z","OPERA":"M53.748-56.231q-5.94-3.96-12.924-3.96-5.58 0-10.548 2.628t-8.64 7.2q-2.7 3.348-4.302 7.848t-1.746 9.576v1.512q.144 5.076 1.746 9.576t4.302 7.848q3.672 4.572 8.64 7.2t10.548 2.628q6.984 0 12.924-3.96-4.356 3.888-9.882 6.048t-11.61 2.16q-1.044 0-1.548-.036-6.3-.288-11.988-2.952t-9.792-6.948-6.516-10.116-2.412-12.204q0-6.552 2.556-12.528t6.876-10.296 10.296-6.876 12.528-2.556h.108q6.048.036 11.538 2.178t9.846 6.03zm10.764 24.048q0 6.912-2.772 13.05t-7.668 10.674q-3.744 2.268-7.992 2.268-4.932 0-9.18-3.024 5.544-2.016 9.126-8.388t3.582-14.58q0-8.172-3.564-14.544t-9.108-8.424q4.284-2.988 9.144-2.988 4.284 0 8.136 2.34 4.86 4.5 7.578 10.62t2.718 12.996z","INTERNET_EXPLORER":"M64.512-30.707q0 2.016-.252 3.744h-41.436q0 5.256 3.942 8.802t9.27 3.546q3.564 0 6.678-1.674t4.914-4.698h15.228q-2.016 5.724-6.138 10.116t-9.63 6.786-11.556 2.394q-6.732 0-12.816-2.988-8.208 4.176-14.184 4.176-8.532 0-8.532-9.468 0-4.14 1.62-9.9.612-2.16 3.924-8.244 7.164-12.96 17.1-21.816-6.624 2.844-15.372 12.744 2.268-9.864 10.206-16.182t18.054-6.318q1.08 0 1.62.036 9.18-4.212 15.588-4.212 2.304 0 4.176.468t3.402 1.458 2.394 2.754.864 4.14q0 4.176-2.7 10.296 3.636 6.552 3.636 14.04zm-2.52-23.04q0-2.988-1.908-4.752t-4.932-1.764q-3.888 0-9.144 2.52 4.356 1.692 8.01 4.734t6.138 7.038q1.836-4.86 1.836-7.776zm-57.384 44.532q0 3.096 1.746 4.77t4.842 1.674q4.14 0 9.576-2.988-4.392-2.592-7.686-6.588t-4.95-8.82q-3.528 7.38-3.528 11.952zm18.144-25.668h26.208q-.18-5.112-4.068-8.532t-9.036-3.42q-5.184 0-9.054 3.42t-4.05 8.532z","TV":"M64.512-19.511v-34.56q0-.468-.342-.81t-.81-.342h-57.6q-.468 0-.81.342t-.342.81v34.56q0 .468.342.81t.81.342h57.6q.468 0 .81-.342t.342-.81zm4.608-34.56v34.56q0 2.376-1.692 4.068t-4.068 1.692h-26.496v4.608h12.672q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-29.952q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h12.672v-4.608h-26.496q-2.376 0-4.068-1.692t-1.692-4.068v-34.56q0-2.376 1.692-4.068t4.068-1.692h57.6q2.376 0 4.068 1.692t1.692 4.068z","CONTAO":"M4.968-59.831h7.092q-2.52 2.304-4.536 5.364-1.296 2.016-2.124 4.14t-1.08 4.518-.306 4.32.378 4.752.756 4.536 1.008 4.914l.216 1.008q1.836 8.568 2.916 11.844 2.052 6.156 5.472 9.9h-9.792q-1.728 0-2.952-1.224t-1.224-2.952v-46.944q0-1.728 1.224-2.952t2.952-1.224zm43.488 0h11.088q1.728 0 2.952 1.224t1.224 2.952v46.944q0 1.728-1.224 2.952t-2.952 1.224h-6.408q7.632-7.56 7.056-20.34l-16.884 3.636q-.072 1.62-.432 2.952t-1.116 2.592-2.142 2.142-3.366 1.314q-4.428.936-7.164-1.44-1.152-.972-1.908-2.196t-1.854-4.644-2.322-9.288q-1.26-5.868-1.638-9.468t-.198-5.004.828-2.772q.72-1.476 2.25-2.628t3.69-1.62q1.62-.432 3.006-.234t2.412.612 1.944 1.26 1.548 1.728 1.242 2.034l16.848-3.6q-2.448-6.3-6.48-10.332z","500PX":"M50.436-8.747l-.216.216q-4.068 4.104-9.324 6.3-5.544 2.304-11.412 2.304-5.94 0-11.412-2.304-5.328-2.268-9.324-6.3-4.068-4.032-6.3-9.288-1.512-3.708-1.944-6.804-.144-1.008 1.728-1.296 1.836-.288 2.016.72l.036.144q.648 3.24 1.656 5.724 1.8 4.464 5.472 8.136 3.528 3.528 8.136 5.472 4.752 2.016 9.936 2.016 5.148 0 9.936-2.016 4.608-1.98 8.1-5.472l.216-.216q.36-.36.9-.216.432.108 1.188.792 1.296 1.332.612 2.088zm-16.992-22.14l-2.376 2.376 2.268 2.268q.756.756-.252 1.764-.612.612-1.152.612-.36 0-.684-.36l-2.232-2.196-2.376 2.376q-.18.18-.54.18-.54 0-1.116-.576l-.072-.072q-.648-.54-.648-1.044 0-.252.288-.612l2.376-2.34-2.376-2.376q-.576-.576.504-1.62.648-.648 1.116-.648.216 0 .468.18l2.34 2.376 2.34-2.34q.648-.612 1.728.468.972.972.396 1.584zm16.956 2.052q0 4.248-1.656 8.208-1.62 3.78-4.536 6.696-2.88 2.88-6.732 4.536t-8.208 1.656-8.208-1.656-6.732-4.536q-2.952-2.952-4.5-6.696-.54-1.152-.54-1.44h-.036q-.324-.972 1.548-1.584 1.8-.576 2.16.432 1.332 3.564 3.492 6.012h.036v-12.276q.108-4.896 3.672-8.352 3.78-3.708 9.108-3.708 5.292 0 9.036 3.708t3.744 8.964q0 5.292-3.762 9.036t-9.018 3.744q-2.088 0-4.032-.576-1.008-.396-.468-2.196.576-1.836 1.584-1.548l.504.108q.504.108 1.17.216t1.098.108q3.744 0 6.336-2.574t2.592-6.282q0-3.636-2.592-6.156-2.556-2.556-6.3-2.556-3.852 0-6.408 2.88-2.304 2.592-2.304 5.76v14.868q3.96 2.412 8.712 2.412 3.456 0 6.66-1.314t5.616-3.726 3.726-5.58 1.314-6.588q0-7.128-5.076-12.204-5.04-5.04-12.204-5.04-7.2 0-12.24 5.04-1.908 1.908-2.772 3.132l-.072.072q-.288.396-.468.558t-.774.342-1.386-.108q-.756-.18-1.314-.594t-.558-.954v-24.48q0-.54.378-.954t.99-.414h31.572q1.08 0 1.08 1.98t-1.08 1.98h-29.196v17.388h.036q1.44-1.512 3.672-3.024t3.888-2.196q3.924-1.656 8.316-1.656 4.356 0 8.208 1.656t6.732 4.536q2.916 2.916 4.536 6.696 1.656 4.032 1.656 8.244zm-1.116-20.916q.324.288.324.648t-.198.648-.594.756q-.936.936-1.404.936-.324 0-.576-.252-3.816-3.276-7.452-4.788-4.608-2.016-9.936-2.016-4.788 0-9.432 1.764-.972.36-1.62-1.332-.324-.9-.288-1.368.108-.576.576-.72 4.68-2.052 10.764-2.052 5.904 0 11.376 2.304 4.932 2.088 8.46 5.472z","AMAZON":"M55.836-11.303q.54-.216.936-.108t.396.63-.54 1.206q-.468.576-1.584 1.566t-3.438 2.448-5.076 2.664-6.768 2.088-8.262.882q-4.284 0-8.568-1.116t-7.524-2.754-6.21-3.744-4.77-3.78-3.024-3.15q-.288-.324-.36-.594t.036-.432.288-.252.414-.072.414.162q6.912 4.212 10.8 5.976 14.004 6.336 28.764 3.24 6.84-1.44 14.076-4.86zm7.452-4.14q.396.576.09 2.502t-1.026 3.69q-1.224 2.988-3.06 4.464-.612.504-.936.324t0-.864q.756-1.62 1.602-4.374t.234-3.546q-.18-.252-.558-.414t-.972-.216-1.062-.09-1.26 0-1.134.072-1.116.108-.81.072q-.216.036-.468.054t-.396.036-.306.036-.252.018h-.36l-.108-.018-.072-.054-.054-.108q-.216-.576 1.692-1.44t3.708-1.08q1.656-.252 3.888-.036t2.736.864zm-14.184-15.948q0 1.116.486 2.304t1.152 2.088 1.35 1.656 1.188 1.152l.468.396-8.172 8.064q-1.44-1.332-2.844-2.718t-2.088-2.106l-.684-.72q-.396-.396-.9-1.188-1.368 2.124-3.51 3.69t-4.59 2.286-5.04.828-4.95-.756-4.23-2.358-2.988-4.068-1.116-5.85q0-3.024 1.008-5.544t2.592-4.194 3.834-2.988 4.41-2.052 4.68-1.242 4.302-.666 3.582-.234v-4.572q0-2.34-.756-3.492-1.224-1.908-4.356-1.908-.216 0-.594.036t-1.458.432-2.016 1.062-2.016 2.142-1.728 3.456l-10.584-.972q0-2.16.792-4.284t2.412-4.068 3.888-3.42 5.454-2.358 6.858-.882q3.6 0 6.516.9t4.662 2.214 2.916 2.988 1.62 3.096.45 2.646v21.204zm-24.192.756q0 3.096 2.52 4.788 2.376 1.584 5.004.792 3.024-.9 4.104-4.428.504-1.62.504-3.636v-5.832q-2.124.072-3.996.432t-3.834 1.206-3.132 2.556-1.17 4.122z","CALENDAR_PLUS_O":"M55.296-55.223q1.872 0 3.24 1.368t1.368 3.24v46.08q0 1.872-1.368 3.24t-3.24 1.368h-50.688q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h4.608v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h13.824v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h4.608zm-13.824-3.456v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828zm-27.648 0v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828zm41.472 54.144v-36.864h-50.688v36.864h50.688zm-23.04-20.736h8.064q.504 0 .828.324t.324.828v2.304q0 .504-.324.828t-.828.324h-8.064v8.064q0 .504-.324.828t-.828.324h-2.304q-.504 0-.828-.324t-.324-.828v-8.064h-8.064q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h8.064v-8.064q0-.504.324-.828t.828-.324h2.304q.504 0 .828.324t.324.828v8.064z","CALENDAR_MINUS_O":"M41.472-24.119v2.304q0 .504-.324.828t-.828.324h-20.736q-.504 0-.828-.324t-.324-.828v-2.304q0-.504.324-.828t.828-.324h20.736q.504 0 .828.324t.324.828zm-36.864 19.584h50.688v-36.864h-50.688v36.864zm13.824-43.776v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm27.648 0v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm13.824-2.304v46.08q0 1.872-1.368 3.24t-3.24 1.368h-50.688q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h4.608v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h13.824v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h4.608q1.872 0 3.24 1.368t1.368 3.24z","CALENDAR_TIMES_O":"M39.996-14.579l-1.656 1.656q-.324.324-.792.324t-.828-.324l-6.768-6.804-6.768 6.804q-.36.324-.828.324t-.792-.324l-1.656-1.656q-.324-.324-.324-.792t.324-.828l6.804-6.768-6.804-6.768q-.324-.36-.324-.828t.324-.792l1.656-1.656q.324-.324.792-.324t.828.324l6.768 6.768 6.768-6.768q.36-.324.828-.324t.792.324l1.656 1.656q.324.324.324.792t-.324.828l-6.768 6.768 6.768 6.768q.324.36.324.828t-.324.792zm-35.388 10.044h50.688v-36.864h-50.688v36.864zm13.824-43.776v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm27.648 0v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm13.824-2.304v46.08q0 1.872-1.368 3.24t-3.24 1.368h-50.688q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h4.608v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h13.824v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h4.608q1.872 0 3.24 1.368t1.368 3.24z","CALENDAR_CHECK_O":"M46.908-29.735l-18.432 18.432q-.36.324-.828.324t-.828-.324l-10.368-10.368q-.324-.36-.324-.828t.324-.792l1.656-1.656q.324-.324.792-.324t.828.324l7.92 7.92 15.984-15.984q.36-.324.828-.324t.792.324l1.656 1.656q.324.324.324.792t-.324.828zm-42.3 25.2h50.688v-36.864h-50.688v36.864zm13.824-43.776v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm27.648 0v-10.368q0-.504-.324-.828t-.828-.324h-2.304q-.504 0-.828.324t-.324.828v10.368q0 .504.324.828t.828.324h2.304q.504 0 .828-.324t.324-.828zm13.824-2.304v46.08q0 1.872-1.368 3.24t-3.24 1.368h-50.688q-1.872 0-3.24-1.368t-1.368-3.24v-46.08q0-1.872 1.368-3.24t3.24-1.368h4.608v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h13.824v-3.456q0-2.376 1.692-4.068t4.068-1.692h2.304q2.376 0 4.068 1.692t1.692 4.068v3.456h4.608q1.872 0 3.24 1.368t1.368 3.24z","INDUSTRY":"M16.128-64.439q.936 0 1.62.684t.684 1.62v32.076l19.296-15.444q.612-.504 1.44-.504.936 0 1.62.684t.684 1.62v13.644l19.296-15.444q.612-.504 1.44-.504.936 0 1.62.684t.684 1.62v41.472q0 .936-.684 1.62t-1.62.684h-59.904q-.936 0-1.62-.684t-.684-1.62v-59.904q0-.936.684-1.62t1.62-.684h13.824z","MAP_PIN":"M18.432-25.271q2.376 0 4.608-.54v23.58q0 .936-.684 1.62t-1.62.684h-4.608q-.936 0-1.62-.684t-.684-1.62v-23.58q2.196.54 4.608.54zm0-39.168q7.632 0 13.032 5.4t5.4 13.032-5.4 13.032-13.032 5.4-13.032-5.4-5.4-13.032 5.4-13.032 13.032-5.4zm0 8.064q.504 0 .828-.324t.324-.828-.324-.828-.828-.324q-5.256 0-8.964 3.708t-3.708 8.964q0 .504.324.828t.828.324.828-.324.324-.828q0-4.284 3.042-7.326t7.326-3.042z","MAP_SIGNS":"M62.82-53.747q.36.36.36.828t-.36.828l-5.076 5.076q-1.008 1.008-2.448 1.008h-48.384q-.936 0-1.62-.684t-.684-1.62v-9.216q0-.936.684-1.62t1.62-.684h20.736v-2.304q0-.936.684-1.62t1.62-.684h4.608q.936 0 1.62.684t.684 1.62v2.304h18.432q1.44 0 2.448 1.008zm-35.172 33.084h9.216v18.432q0 .936-.684 1.62t-1.62.684h-4.608q-.936 0-1.62-.684t-.684-1.62v-18.432zm29.952-16.128q.936 0 1.62.684t.684 1.62v9.216q0 .936-.684 1.62t-1.62.684h-48.384q-1.44 0-2.448-1.008l-5.076-5.076q-.36-.36-.36-.828t.36-.828l5.076-5.076q1.008-1.008 2.448-1.008h18.432v-6.912h9.216v6.912h20.736z","MAP_O":"M72.72-64.043q1.008.72 1.008 1.908v50.688q0 .72-.396 1.296t-1.044.828l-23.04 9.216q-.864.396-1.728 0l-22.176-8.856-22.176 8.856q-.36.18-.864.18-.684 0-1.296-.396-1.008-.72-1.008-1.908v-50.688q0-.72.396-1.296t1.044-.828l23.04-9.216q.864-.396 1.728 0l22.176 8.856 22.176-8.856q1.152-.468 2.16.216zm-46.224 4.86v45.72l20.736 8.28v-45.72zm-21.888 7.812v45.72l19.584-7.812v-45.72zm64.512 38.376v-45.72l-19.584 7.812v45.72z","MAP":"M18.432-64.439q.468 0 .81.342t.342.81v52.992q0 .72-.612 1.008l-17.28 9.216q-.252.144-.54.144-.468 0-.81-.342t-.342-.81v-52.992q0-.72.612-1.008l17.28-9.216q.252-.144.54-.144zm44.928 0q.468 0 .81.342t.342.81v52.992q0 .72-.612 1.008l-17.28 9.216q-.252.144-.54.144-.468 0-.81-.342t-.342-.81v-52.992q0-.72.612-1.008l17.28-9.216q.252-.144.54-.144zm-40.32 0q.288 0 .504.108l18.432 9.216q.648.36.648 1.044v52.992q0 .468-.342.81t-.81.342q-.288 0-.504-.108l-18.432-9.216q-.648-.36-.648-1.044v-52.992q0-.468.342-.81t.81-.342z","COMMENTING":"M23.04-32.183q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm13.824 0q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm13.824 0q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm13.824 0q0 6.264-4.32 11.574t-11.736 8.388-16.2 3.078q-3.96 0-7.596-.648-6.228 6.228-15.66 8.244-1.872.36-3.096.468-.432.036-.792-.216t-.468-.648q-.144-.54.72-1.332.18-.18.846-.774t.918-.846.846-.918.864-1.134.738-1.332.72-1.728.522-2.07.45-2.61q-5.256-3.24-8.262-7.794t-3.006-9.702q0-6.264 4.32-11.574t11.736-8.388 16.2-3.078 16.2 3.078 11.736 8.388 4.32 11.574z","COMMENTING_O":"M23.04-32.183q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm13.824 0q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm13.824 0q0 1.908-1.35 3.258t-3.258 1.35-3.258-1.35-1.35-3.258 1.35-3.258 3.258-1.35 3.258 1.35 1.35 3.258zm-18.432-18.432q-7.344 0-13.734 2.502t-10.152 6.75-3.762 9.18q0 4.032 2.574 7.686t7.254 6.318l3.132 1.8-.972 3.456q-.864 3.276-2.52 6.192 5.472-2.268 9.9-6.156l1.548-1.368 2.052.216q2.484.288 4.68.288 7.344 0 13.734-2.502t10.152-6.75 3.762-9.18-3.762-9.18-10.152-6.75-13.734-2.502zm32.256 18.432q0 6.264-4.32 11.574t-11.736 8.388-16.2 3.078q-2.52 0-5.22-.288-7.128 6.3-16.56 8.712-1.764.504-4.104.792h-.18q-.54 0-.972-.378t-.576-.99v-.036q-.108-.144-.018-.432t.072-.36.162-.342l.216-.324.252-.306.288-.324q.252-.288 1.116-1.242t1.242-1.368 1.116-1.422 1.17-1.836.972-2.124.936-2.736q-5.652-3.204-8.91-7.92t-3.258-10.116q0-4.68 2.556-8.946t6.876-7.362 10.296-4.914 12.528-1.818 12.528 1.818 10.296 4.914 6.876 7.362 2.556 8.946z","HOUZZ":"M18.432-21.563l18.432-10.62v21.276l-18.432 10.656v-21.312zm-18.432-10.62v21.276l18.432-10.656zm18.432-31.932v21.276l-18.432 10.656v-21.276zm0 21.276l18.432-10.62v21.276z","VIMEO":"M61.524-45.791q-.36 8.496-11.952 23.436-11.988 15.516-20.232 15.516-5.112 0-8.64-9.468-1.584-5.76-4.752-17.352-2.592-9.432-5.652-9.432-.648 0-4.572 2.736l-2.772-3.528q.864-.756 3.888-3.474t4.68-4.158q5.616-4.968 8.676-5.256 3.42-.324 5.508 1.998t2.916 7.326q1.584 10.332 2.376 13.428 1.98 8.964 4.32 8.964 1.836 0 5.544-5.796 3.636-5.796 3.924-8.856.468-5.004-3.924-5.004-2.052 0-4.356.936 4.32-14.148 16.524-13.752 9.036.288 8.496 11.736z","BLACK_TIE":"M0-59.831h55.296v55.296h-55.296v-55.296zm39.06 40.14l-7.956-22.716 7.956-10.692h-22.824l7.956 10.692-7.956 22.716 11.412 10.944z","FONTICONS":"M0-59.831h55.296v55.296h-55.296v-55.296zm32.688 11.52l-.432 1.188 2.7 2.988-1.116 4.104.9.9 3.852-2.052 3.852 2.052.9-.9-1.116-4.104 2.7-2.988-.432-1.188h-3.42l-1.908-3.456h-1.152l-1.908 3.456h-3.42zm-9.612 5.868q1.152 0 1.602.576t.414 2.268l6.264-.756q0-1.98-.63-3.33t-1.818-2.016-2.484-.918-3.06-.252q-4.788 0-7.164 2.07t-2.376 6.57v2.592h-3.456v4.608h2.736q.72 0 .72.288v13.752q0 .504-.18.72t-.648.252l-2.628.252v3.168h16.128v-3.096l-5.364-.504q-.216-.036-.306-.054t-.126-.09-.018-.144.036-.252.018-.36v-13.932h6.876l1.368-4.608h-8.316q-.216 0-.072-.216t.144-.324v-2.88q0-.972.054-1.458t.27-1.008.702-.72 1.314-.198zm21.852 29.844v-3.096l-1.944-.324q-.252-.036-.342-.09t-.09-.108.036-.27.036-.432v-18.72h-9.9l-.828 3.636 2.988.792q.828.252.828.972v13.32q0 .504-.216.666t-.72.234l-2.52.324v3.096h12.672z","REDDIT_ALIEN":"M64.512-33.983q0 2.088-1.062 3.798t-2.862 2.61q.432 1.656.432 3.456 0 5.58-3.834 10.332t-10.458 7.506-14.4 2.754-14.382-2.754-10.44-7.506-3.834-10.332q0-1.692.396-3.384-1.836-.9-2.952-2.646t-1.116-3.834q0-2.952 2.088-5.058t5.076-2.106q3.06 0 5.22 2.268 7.848-5.472 18.54-5.832l4.176-18.756q.108-.468.54-.756t.936-.18l13.284 2.916q.648-1.332 1.944-2.142t2.844-.81q2.232 0 3.816 1.566t1.584 3.798-1.584 3.816-3.816 1.584-3.798-1.566-1.566-3.798l-12.024-2.664-3.744 16.992q10.8.324 18.684 5.76 2.088-2.196 5.148-2.196 2.988 0 5.076 2.106t2.088 5.058zm-49.464 7.164q0 2.232 1.566 3.816t3.798 1.584 3.816-1.584 1.584-3.816-1.584-3.798-3.816-1.566q-2.196 0-3.78 1.584t-1.584 3.78zm29.16 12.78q.396-.396.396-.936t-.396-.936q-.36-.36-.9-.36t-.936.36q-1.476 1.512-4.356 2.232t-5.76.72-5.76-.72-4.356-2.232q-.396-.36-.936-.36t-.9.36q-.396.36-.396.918t.396.954q1.548 1.548 4.266 2.448t4.41 1.062 3.276.162 3.276-.162 4.41-1.062 4.266-2.448zm-.108-7.38q2.232 0 3.798-1.584t1.566-3.816q0-2.196-1.584-3.78t-3.78-1.584q-2.232 0-3.816 1.566t-1.584 3.798 1.584 3.816 3.816 1.584z","EDGE":"M2.484-35.819h.036q.576-4.536 2.106-8.694t4.14-7.812 6.03-6.336 8.046-4.23 9.954-1.548q8.316 0 14.904 3.798t10.584 10.926q3.744 6.732 3.744 15.912v6.768h-40.5q.036 3.996 1.926 6.93t4.914 4.41 6.822 2.052 7.668.108 7.488-1.674 6.246-3.042v13.572q-3.312 1.98-8.262 3.312t-11.25 1.368-11.376-1.908q-6.804-2.628-11.214-8.964t-4.482-13.392q-.108-8.712 3.996-14.832t11.7-9.648q-1.728 2.16-2.808 4.518t-1.656 5.742h22.86q.288-2.772-.288-5.04t-1.692-3.654-2.538-2.394-2.898-1.476-2.7-.738-2.016-.306l-.792-.036q-4.86.18-9.342 1.602t-8.046 3.762-6.336 5.058-4.968 5.886z","CREDIT_CARD_ALT":"M0-10.295v-21.888h82.944v21.888q0 2.376-1.692 4.068t-4.068 1.692h-71.424q-2.376 0-4.068-1.692t-1.692-4.068zm23.04-8.064v4.608h13.824v-4.608h-13.824zm-13.824 0v4.608h9.216v-4.608h-9.216zm67.968-41.472q2.376 0 4.068 1.692t1.692 4.068v8.064h-82.944v-8.064q0-2.376 1.692-4.068t4.068-1.692h71.424z","CODIEPIE":"M55.764-39.995q1.98 0 3.078 1.026t1.098 3.006-1.224 2.952-3.276.972h-4.896v6.372h-.9v-14.328h6.12zm5.796 21.24l-.144.396-.18.36q-4.068 8.28-11.898 13.176t-17.082 4.896q-6.552 0-12.528-2.556t-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556q8.784 0 16.362 4.464t11.862 12.168l.072.144.288.576q-1.08.54-4.914 2.466t-5.886 3.042q-.216.108-17.244 9.648 13.824 6.588 28.764 13.176zm-29.304 18.036q9 0 16.65-4.77t11.61-12.87l-10.332-4.644q-2.592 5.04-7.416 7.992t-10.512 2.952q-5.436 0-10.08-2.7t-7.344-7.344-2.7-10.08 2.7-10.08 7.344-7.344 10.08-2.7 10.08 2.646 7.344 7.362l10.08-5.148q-4.176-7.488-11.556-11.844t-15.948-4.356q-4.284 0-8.37 1.134t-7.524 3.15-6.354 4.932-4.932 6.354-3.15 7.524-1.134 8.37 1.134 8.37 3.15 7.524 4.932 6.354 6.354 4.932 7.524 3.15 8.37 1.134z","MODX":"M51.372-38.915l-22.104-13.896 3.312-5.436h30.78zm-36.792 9.54l-6.624-4.176v-30.888l42.588 26.748zm36.684-4.86l5.292 3.42v30.888l-19.152-12.06zm-1.332-.756l-18 28.872h-30.78l12.816-20.556z","FORT_AWESOME":"M23.04-28.151v-8.064q0-.576-.576-.576h-3.456q-.576 0-.576.576v8.064q0 .576.576.576h3.456q.576 0 .576-.576zm18.432 0v-8.064q0-.576-.576-.576h-3.456q-.576 0-.576.576v8.064q0 .576.576.576h3.456q.576 0 .576-.576zm18.432 1.152v27.072h-23.04v-11.52q0-2.88-2.016-4.896t-4.896-2.016-4.896 2.016-2.016 4.896v11.52h-23.04v-27.072q0-.576.576-.576h3.456q.576 0 .576.576v4.032h4.608v-22.464q0-.576.576-.576h3.456q.576 0 .576.576v4.032h4.608v-4.032q0-.576.576-.576h3.456q.576 0 .576.576v4.032h4.608v-4.032q0-.576.576-.576h.576v-14.148q-1.152-.684-1.152-1.98 0-.936.684-1.62t1.62-.684 1.62.684.684 1.62q0 1.296-1.152 1.98v.324h9.792q.576 0 .576.576v8.064q0 .576-.576.576h-9.792v4.608h.576q.576 0 .576.576v4.032h4.608v-4.032q0-.576.576-.576h3.456q.576 0 .576.576v4.032h4.608v-4.032q0-.576.576-.576h3.456q.576 0 .576.576v22.464h4.608v-4.032q0-.576.576-.576h3.456q.576 0 .576.576z","USB":"M82.368-35.459q.576.288.576.972t-.576.972l-11.52 6.912q-.288.18-.576.18-.324 0-.576-.144-.576-.36-.576-1.008v-4.608h-30.888q1.332 2.088 2.988 5.94.576 1.332.882 1.98t.864 1.764.972 1.692.972 1.224 1.134.936 1.188.288h3.456v-3.456q0-.504.324-.828t.828-.324h11.52q.504 0 .828.324t.324.828v11.52q0 .504-.324.828t-.828.324h-11.52q-.504 0-.828-.324t-.324-.828v-3.456h-3.456q-1.152 0-2.196-.36t-1.836-.846-1.62-1.458-1.332-1.656-1.206-2.052-1.026-2.07-1.008-2.178q-.828-1.908-1.332-2.934t-1.296-2.34-1.602-1.926-1.674-.612h-12.96q-.792 3.024-3.276 4.968t-5.652 1.944q-3.816 0-6.516-2.7t-2.7-6.516 2.7-6.516 6.516-2.7q3.168 0 5.652 1.944t3.276 4.968h3.744q.864 0 1.674-.612t1.602-1.926 1.296-2.34 1.332-2.934q.684-1.476 1.008-2.178t1.026-2.07 1.206-2.052 1.332-1.656 1.62-1.458 1.836-.846 2.196-.36h3.852q.756-2.052 2.52-3.33t3.996-1.278q2.88 0 4.896 2.016t2.016 4.896-2.016 4.896-4.896 2.016q-2.232 0-3.996-1.278t-2.52-3.33h-3.852q-.612 0-1.188.288t-1.134.936-.972 1.224-.972 1.692-.864 1.764-.882 1.98q-1.656 3.852-2.988 5.94h40.104v-4.608q0-.648.576-1.008t1.152.036z","PRODUCT_HUNT":"M41.4-37.007q0 2.016-1.422 3.42t-3.438 1.404h-9.108v-9.684h9.108q2.016 0 3.438 1.422t1.422 3.438zm6.444 0q0-4.68-3.294-7.992t-8.01-3.312h-15.588v32.256h6.48v-9.684h9.108q4.68 0 7.992-3.294t3.312-7.974zm16.668 4.824q0 6.552-2.556 12.528t-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556 12.528 2.556 10.296 6.876 6.876 10.296 2.556 12.528z","MIXCLOUD":"M59.22-24.911q0-2.124-1.224-3.834t-3.132-2.466q-.252 1.62-.828 3.312-.252.864-.99 1.368t-1.602.504q-.432 0-.864-.108-1.116-.36-1.62-1.386t-.144-2.106q.828-2.556.828-5.148 0-4.428-2.196-8.19t-5.976-5.958-8.208-2.196q-4.824 0-8.892 2.628t-6.012 6.984q3.888 1.008 6.768 3.816.792.828.792 1.98t-.792 1.944-1.944.792-1.98-.792q-2.7-2.7-6.48-2.7-3.816 0-6.516 2.682t-2.7 6.498 2.7 6.498 6.516 2.682h37.656q2.844 0 4.842-1.998t1.998-4.806zm5.508 0q0 5.112-3.618 8.712t-8.73 3.6h-37.656q-6.084 0-10.404-4.302t-4.32-10.386q0-5.508 3.6-9.612t8.964-4.896q2.232-6.624 7.956-10.728t12.744-4.104q8.46 0 14.706 5.706t7.074 14.022q4.176.9 6.93 4.266t2.754 7.722zm9 0q0 6.3-3.492 11.484-.828 1.188-2.304 1.188-.864 0-1.548-.468-.936-.612-1.152-1.746t.432-2.07q2.556-3.744 2.556-8.388t-2.556-8.388q-.648-.936-.432-2.052t1.152-1.764 2.07-.414 1.782 1.17q3.492 5.112 3.492 11.448zm9.216 0q0 8.784-4.824 15.948-.828 1.224-2.304 1.224-.828 0-1.512-.468-.936-.648-1.17-1.764t.414-2.052q3.888-5.904 3.888-12.888 0-7.02-3.888-12.852-.648-.936-.414-2.07t1.17-1.746q.936-.648 2.052-.432t1.764 1.188q4.824 7.128 4.824 15.912z","SCRIBD":"M54-8.675q0 3.204-2.268 5.49t-5.508 2.286-5.526-2.286-2.286-5.49q0-3.24 2.286-5.526t5.526-2.286 5.508 2.286 2.268 5.526zm-8.388-10.116q-4.14.54-6.93 3.69t-2.79 7.398q0 2.664 1.188 4.968-5.256 2.808-13.644 2.808-3.924 0-7.236-.756t-5.526-1.962-3.978-2.754-2.736-3.06-1.602-2.988-.846-2.394-.216-1.422q0-.684.162-1.53t.666-2.016 1.314-2.088 2.304-1.566 3.402-.648 3.384.63 2.268 1.476 1.278 1.908.63 1.764.144 1.206q0 1.224-.828 2.916 1.008.972 2.952 1.512t3.348.612l1.44.036q4.14 0 6.84-1.836t2.7-4.788q0-.936-.324-1.746t-1.134-1.602-1.782-1.476-2.664-1.584-3.366-1.71-4.302-2.034l-1.548-.72q-4.176-1.98-6.732-3.6t-4.41-3.672-2.592-4.518-.738-5.85q0-2.808.738-5.4t2.376-4.95 4.05-4.104 5.994-2.772 7.974-1.026q4.32 0 7.92.936t5.922 2.412 3.942 3.384 2.304 3.798.684 3.726q0 1.656-.54 2.97t-1.314 2.088-1.746 1.296-1.764.702-1.404.18h-1.44l-1.404-.18-1.584-.504-1.476-1.008-1.332-1.656-.864-2.538-.36-3.51q-.54-.576-2.124-.918t-2.916-.378l-1.332-.036q-2.448 0-4.23 1.116t-2.538 2.52-.756 2.736q0 .864.18 1.548t.864 1.656 1.908 1.836 3.492 1.926 5.4 2.106q2.736.9 4.986 1.926t3.924 1.998 2.988 2.124 2.178 2.142 1.476 2.25.954 2.232.522 2.286.216 2.232.036 2.25z","PAUSE_CIRCLE":"M25.344-21.815v-20.736q0-.504-.324-.828t-.828-.324h-9.216q-.504 0-.828.324t-.324.828v20.736q0 .504.324.828t.828.324h9.216q.504 0 .828-.324t.324-.828zm16.128 0v-20.736q0-.504-.324-.828t-.828-.324h-9.216q-.504 0-.828.324t-.324.828v20.736q0 .504.324.828t.828.324h9.216q.504 0 .828-.324t.324-.828zm13.824-10.368q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","PAUSE_CIRCLE_O":"M27.648-59.831q7.524 0 13.878 3.708t10.062 10.062 3.708 13.878-3.708 13.878-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708zm0 47.232q5.328 0 9.828-2.628t7.128-7.128 2.628-9.828-2.628-9.828-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628zm3.456-8.064q-.504 0-.828-.324t-.324-.828v-20.736q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v20.736q0 .504-.324.828t-.828.324h-6.912zm-13.824 0q-.504 0-.828-.324t-.324-.828v-20.736q0-.504.324-.828t.828-.324h6.912q.504 0 .828.324t.324.828v20.736q0 .504-.324.828t-.828.324h-6.912z","STOP_CIRCLE":"M39.168-21.815v-20.736q0-.504-.324-.828t-.828-.324h-20.736q-.504 0-.828.324t-.324.828v20.736q0 .504.324.828t.828.324h20.736q.504 0 .828-.324t.324-.828zm16.128-10.368q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","STOP_CIRCLE_O":"M27.648-59.831q7.524 0 13.878 3.708t10.062 10.062 3.708 13.878-3.708 13.878-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708zm0 47.232q5.328 0 9.828-2.628t7.128-7.128 2.628-9.828-2.628-9.828-7.128-7.128-9.828-2.628-9.828 2.628-7.128 7.128-2.628 9.828 2.628 9.828 7.128 7.128 9.828 2.628zm-10.368-8.064q-.504 0-.828-.324t-.324-.828v-20.736q0-.504.324-.828t.828-.324h20.736q.504 0 .828.324t.324.828v20.736q0 .504-.324.828t-.828.324h-20.736z","SHOPPING_BAG":"M63.252-13.751l1.26 11.268q.108 1.008-.576 1.8-.684.756-1.728.756h-59.904q-1.044 0-1.728-.756-.684-.792-.576-1.8l1.26-11.268h61.992zm-3.348-30.204l3.096 27.9h-61.488l3.096-27.9q.108-.864.756-1.458t1.548-.594h9.216v4.608q0 1.908 1.35 3.258t3.258 1.35 3.258-1.35 1.35-3.258v-4.608h13.824v4.608q0 1.908 1.35 3.258t3.258 1.35 3.258-1.35 1.35-3.258v-4.608h9.216q.9 0 1.548.594t.756 1.458zm-13.824-6.66v9.216q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62v-9.216q0-3.816-2.7-6.516t-6.516-2.7-6.516 2.7-2.7 6.516v9.216q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62v-9.216q0-5.724 4.05-9.774t9.774-4.05 9.774 4.05 4.05 9.774z","SHOPPING_BASKET":"M69.12-36.791q1.908 0 3.258 1.35t1.35 3.258-1.35 3.258-3.258 1.35h-.54l-4.14 23.832q-.288 1.656-1.584 2.736t-2.952 1.08h-46.08q-1.656 0-2.952-1.08t-1.584-2.736l-4.14-23.832h-.54q-1.908 0-3.258-1.35t-1.35-3.258 1.35-3.258 3.258-1.35h64.512zm-51.66 28.8q.936-.072 1.566-.81t.558-1.674l-1.152-14.976q-.072-.936-.81-1.566t-1.674-.558-1.566.81-.558 1.674l1.152 14.976q.072.9.738 1.512t1.566.612h.18zm14.796-2.304v-14.976q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62v14.976q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62zm13.824 0v-14.976q0-.936-.684-1.62t-1.62-.684-1.62.684-.684 1.62v14.976q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62zm12.672.18l1.152-14.976q.072-.936-.558-1.674t-1.566-.81-1.674.558-.81 1.566l-1.152 14.976q-.072.936.558 1.674t1.566.81h.18q.9 0 1.566-.612t.738-1.512zm-41.616-43.812l-3.348 14.832h-4.752l3.636-15.876q.684-3.168 3.204-5.166t5.76-1.998h6.012q0-.936.684-1.62t1.62-.684h13.824q.936 0 1.62.684t.684 1.62h6.012q3.24 0 5.76 1.998t3.204 5.166l3.636 15.876h-4.752l-3.348-14.832q-.396-1.584-1.638-2.592t-2.862-1.008h-6.012q0 .936-.684 1.62t-1.62.684h-13.824q-.936 0-1.62-.684t-.684-1.62h-6.012q-1.62 0-2.862 1.008t-1.638 2.592z","HASHTAG":"M35.676-27.575l2.304-9.216h-9.144l-2.304 9.216h9.144zm27.648-18.144l-2.016 8.064q-.252.864-1.116.864h-11.772l-2.304 9.216h11.196q.54 0 .9.432.36.504.216 1.008l-2.016 8.064q-.18.864-1.116.864h-11.772l-2.916 11.808q-.252.864-1.116.864h-8.064q-.576 0-.936-.432-.324-.432-.216-1.008l2.808-11.232h-9.144l-2.916 11.808q-.252.864-1.116.864h-8.1q-.54 0-.9-.432-.324-.432-.216-1.008l2.808-11.232h-11.196q-.54 0-.9-.432-.324-.432-.216-1.008l2.016-8.064q.252-.864 1.116-.864h11.772l2.304-9.216h-11.196q-.54 0-.9-.432-.36-.504-.216-1.008l2.016-8.064q.18-.864 1.116-.864h11.772l2.916-11.808q.252-.864 1.152-.864h8.064q.54 0 .9.432.324.432.216 1.008l-2.808 11.232h9.144l2.916-11.808q.252-.864 1.152-.864h8.064q.54 0 .9.432.324.432.216 1.008l-2.808 11.232h11.196q.54 0 .9.432.324.432.216 1.008z","BLUETOOTH":"M30.276-26.531l5.328 5.328-5.364 5.364zm-.036-21.996l5.364 5.364-5.328 5.328zm-4.68 44.064l16.704-16.704-11.016-11.016 11.016-11.016-16.704-16.704v21.996l-9.18-9.18-3.348 3.348 11.52 11.556-11.52 11.556 3.348 3.348 9.18-9.18v21.996zm25.884-27.72q0 7.524-1.152 13.158t-3.15 9.252-5.058 5.85-6.534 3.114-7.902.882-7.902-.882-6.534-3.114-5.058-5.85-3.15-9.252-1.152-13.158 1.152-13.158 3.15-9.252 5.058-5.85 6.534-3.114 7.902-.882 7.902.882 6.534 3.114 5.058 5.85 3.15 9.252 1.152 13.158z","BLUETOOTH_B":"M21.456-13.211l6.228-6.192-6.228-6.192v12.384zm0-25.56l6.228-6.192-6.228-6.192v12.384zm1.152 6.588l12.816 12.816-19.404 19.44v-25.596l-10.692 10.656-3.888-3.888 13.392-13.428-13.392-13.428 3.888-3.888 10.692 10.656v-25.596l19.404 19.44z","PERCENT":"M46.08-18.359q0-1.872-1.368-3.24t-3.24-1.368-3.24 1.368-1.368 3.24 1.368 3.24 3.24 1.368 3.24-1.368 1.368-3.24zm-27.648-27.648q0-1.872-1.368-3.24t-3.24-1.368-3.24 1.368-1.368 3.24 1.368 3.24 3.24 1.368 3.24-1.368 1.368-3.24zm36.864 27.648q0 5.724-4.05 9.774t-9.774 4.05-9.774-4.05-4.05-9.774 4.05-9.774 9.774-4.05 9.774 4.05 4.05 9.774zm-3.456-39.168q0 .72-.468 1.368l-38.016 50.688q-.684.936-1.836.936h-5.76q-.936 0-1.62-.684t-.684-1.62q0-.72.468-1.368l38.016-50.688q.684-.936 1.836-.936h5.76q.936 0 1.62.684t.684 1.62zm-24.192 11.52q0 5.724-4.05 9.774t-9.774 4.05-9.774-4.05-4.05-9.774 4.05-9.774 9.774-4.05 9.774 4.05 4.05 9.774z","GITLAB":"M3.744-39.023l28.512 36.54-31.248-22.68q-.648-.468-.9-1.242t0-1.53l3.636-11.088zm16.632 0h23.76l-11.88 36.54zm-7.128-22.032l7.128 22.032h-16.632l7.128-22.032q.288-.828 1.188-.828t1.188.828zm47.52 22.032l3.636 11.088q.252.756 0 1.53t-.9 1.242l-31.248 22.68 28.512-36.54zm0 0h-16.632l7.128-22.032q.288-.828 1.188-.828t1.188.828z","WPBEGINNER":"M13.824-34.487h5.76v-8.064h-5.76v8.064zm30.132 11.952v-3.312q-3.744 1.296-8.748 1.368-4.86.036-9.342-1.674t-7.938-4.41l.036 3.456q3.168 2.88 7.632 4.626t9.792 1.71q4.644 0 8.568-1.764zm-20.916-11.952h23.04v-8.064h-23.04v8.064zm41.472-1.152q0 6.732-3.564 12.672 3.204 3.672 3.204 8.244 0 5.652-4.662 9.648t-11.286 3.996q-4.392 0-8.1-1.89t-5.796-5.058q-.684.036-2.052.036t-2.052-.036q-2.088 3.168-5.796 5.058t-8.1 1.89q-6.624 0-11.286-3.996t-4.662-9.648q0-4.572 3.204-8.244-3.564-5.94-3.564-12.672 0-7.524 4.32-13.878t11.754-10.062 16.182-3.708 16.182 3.708 11.754 10.062 4.32 13.878z","WPFORMS":"M18.54-31.643v4.608h-9.072v-4.608h9.072zm0-9.18v4.572h-9.072v-4.572h9.072zm27.288 18.396v4.608h-12.276v-4.608h12.276zm0-9.216v4.608h-24.192v-4.608h24.192zm0-9.18v4.572h-24.192v-4.572h24.192zm4.86 30.96v-44.64q0-.288-.216-.504t-.504-.216h-1.152l-13.608 9.216-7.56-6.156-7.56 6.156-13.608-9.216h-1.152q-.288 0-.504.216t-.216.504v44.64q0 .288.216.504t.504.216h44.64q.288 0 .504-.216t.216-.504zm-30.78-39.96l6.66-5.4h-14.616zm15.48 0l7.956-5.4h-14.616zm19.908-4.68v44.64q0 2.232-1.548 3.78t-3.78 1.548h-44.64q-2.232 0-3.78-1.548t-1.548-3.78v-44.64q0-2.232 1.548-3.78t3.78-1.548h44.64q2.232 0 3.78 1.548t1.548 3.78z","ENVIRA":"M32.256-35.063q-3.744-7.056-5.76-10.008-5.004-7.272-12.492-11.448-1.224-.684-2.52-1.296-3.204-1.44-3.384-1.152t1.224 1.368l1.404 1.116q2.232 1.548 4.05 3.366t3.402 4.194 2.538 4.068 2.538 4.716q.324.612.468.9 1.584 3.024 3.024 5.508t3.528 5.544 4.158 5.4 4.716 4.446 5.346 3.258q5.508 2.376 5.544 2.16.036-.108-1.764-1.332-1.908-1.296-2.916-2.052-2.772-2.088-6.444-7.596t-6.66-11.16zm-12.492 19.548q-2.736-2.16-4.77-4.5t-3.528-5.166-2.556-5.562-2.106-6.696-1.872-7.524-2.178-9.072-2.754-10.404q9.828 0 17.91 1.296t13.644 3.312 9.756 5.202 6.678 6.21 3.96 7.146 2.016 7.182.45 7.146-.342 6.228-.72 5.166-.468 3.852l11.628 11.772h-3.744l-10.116-10.26q-.792.072-3.294.504t-4.374.684-4.968.216-5.778-.612-6.03-2.124-6.444-3.996z","UNIVERSAL_ACCESS":"M49.464-40.787q-.216-.936-1.026-1.422t-1.746-.27q-9.396 2.232-14.436 2.232t-14.436-2.232q-.936-.216-1.746.27t-1.026 1.422.27 1.746 1.422 1.026q6.984 1.656 10.908 2.088-.072 5.688-.558 9.684t-.954 5.598-1.476 4.158l-.324.756q-.36.9.036 1.764t1.296 1.224q.324.144.828.144 1.584 0 2.16-1.476l.288-.72q1.944-5.004 2.556-9.324h1.512q.612 4.32 2.556 9.324l.288.72q.576 1.476 2.16 1.476.504 0 .828-.144.9-.36 1.296-1.224t.036-1.764l-.324-.756q-1.008-2.556-1.476-4.158t-.954-5.598-.558-9.684q3.924-.432 10.908-2.088.936-.216 1.422-1.026t.27-1.746zm-12.6-5.22q0-1.908-1.35-3.258t-3.258-1.35-3.258 1.35-1.35 3.258 1.35 3.258 3.258 1.35 3.258-1.35 1.35-3.258zm20.736 13.824q0 5.148-1.998 9.846t-5.4 8.1-8.1 5.4-9.846 1.998-9.846-1.998-8.1-5.4-5.4-8.1-1.998-9.846 1.998-9.846 5.4-8.1 8.1-5.4 9.846-1.998 9.846 1.998 8.1 5.4 5.4 8.1 1.998 9.846zm-25.344-27.648q-5.616 0-10.728 2.196t-8.82 5.904-5.904 8.82-2.196 10.728 2.196 10.728 5.904 8.82 8.82 5.904 10.728 2.196 10.728-2.196 8.82-5.904 5.904-8.82 2.196-10.728-2.196-10.728-5.904-8.82-8.82-5.904-10.728-2.196zm32.256 27.648q0 6.552-2.556 12.528t-6.876 10.296-10.296 6.876-12.528 2.556-12.528-2.556-10.296-6.876-6.876-10.296-2.556-12.528 2.556-12.528 6.876-10.296 10.296-6.876 12.528-2.556 12.528 2.556 10.296 6.876 6.876 10.296 2.556 12.528z","WHEELCHAIR_ALT":"M51.768-35.171q1.224 1.26 1.044 2.952l-1.584 19.836q-.144 1.512-1.242 2.52t-2.574 1.008q-.216 0-.324-.036-1.584-.108-2.61-1.314t-.918-2.79l1.26-15.444-5.148.288q1.98 4.068 1.98 8.64 0 7.776-5.328 13.392l-4.932-4.932q3.276-3.636 3.276-8.46 0-5.22-3.69-8.928t-8.91-3.708q-4.824 0-8.496 3.312l-4.932-4.968q4.32-4.104 10.224-5.076l9.504-10.8-5.364-3.132-6.516 5.796q-1.188 1.08-2.772.99t-2.628-1.278-.954-2.772 1.242-2.628l8.604-7.668q.936-.828 2.16-.954t2.304.522l17.568 10.188q1.296.756 1.728 2.448.612 2.412-.936 4.212l-7.38 8.352 13.356-.72q1.764-.108 2.988 1.152zm-7.128-16.452q-2.664 0-4.536-1.872t-1.872-4.536 1.872-4.536 4.536-1.872 4.554 1.872 1.89 4.536-1.89 4.536-4.554 1.872zm-22.572 44.712q3.816 0 7.056-2.196l5.004 5.004q-5.256 4.176-12.06 4.176-5.328 0-9.846-2.628t-7.146-7.128-2.628-9.828q0-6.768 4.176-12.096l5.004 5.004q-2.16 3.168-2.16 7.092 0 5.22 3.69 8.91t8.91 3.69z","QUESTION_CIRCLE_O":"M31.68-21.239v5.76q0 .504-.324.828t-.828.324h-5.76q-.504 0-.828-.324t-.324-.828v-5.76q0-.504.324-.828t.828-.324h5.76q.504 0 .828.324t.324.828zm9.216-17.856q0 1.8-.54 3.24t-1.638 2.484-1.872 1.584-2.142 1.296q-1.152.648-1.674 1.008t-.936.864-.414 1.044v1.152q0 .504-.324.828t-.828.324h-5.76q-.504 0-.828-.324t-.324-.828v-2.448q0-1.26.378-2.322t.864-1.71 1.404-1.278 1.476-.918 1.602-.756q1.908-.9 2.7-1.548t.792-1.764q0-1.512-1.566-2.574t-3.438-1.062q-2.016 0-3.42.972-1.044.72-2.88 2.988-.324.432-.9.432-.396 0-.684-.216l-3.888-2.952q-.36-.252-.432-.72t.18-.828q4.392-6.912 12.564-6.912 4.644 0 8.586 3.222t3.942 7.722zm-13.248-16.128q-4.68 0-8.946 1.836t-7.344 4.914-4.914 7.344-1.836 8.946 1.836 8.946 4.914 7.344 7.344 4.914 8.946 1.836 8.946-1.836 7.344-4.914 4.914-7.344 1.836-8.946-1.836-8.946-4.914-7.344-7.344-4.914-8.946-1.836zm27.648 23.04q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","BLIND":"M13.176-53.243q-2.304 0-3.96-1.638t-1.656-3.978q0-2.304 1.656-3.942t3.96-1.638 3.942 1.638 1.638 3.942q0 2.34-1.638 3.978t-3.942 1.638zm19.836 23.112q0 1.8-1.08 2.43t-2.286.234-1.71-1.224l-13.212-15.768q-.252-.432-.504-.558t-.396-.054l-.108.108q-.252.288.144.756l4.392 5.004.036 12.744-5.796 16.452q-2.412 6.912-3.312 8.424-.576.936-1.008 1.152-1.8.936-3.708.036-1.044-.468-1.494-1.548t-.342-2.052q.072-.612 7.092-22.248l.18-14.976-3.06 5.904 1.26 7.992q.144.864-.036 1.512t-.504.99-.684.576-.612.27l-.252.072q-.684.108-1.242-.108t-.864-.576-.504-.792-.27-.702-.072-.342l-1.656-10.764 7.596-13.716q.828-1.224 4.068-1.224 2.7 0 3.852 1.44l15.264 18.756q.252.18.504.612l.108.108-.036.036q.252.468.252 1.044zm-14.508 5.4q1.548 4.068 3.186 8.1t2.502 6.048l.864 1.98q1.296 3.348 1.512 4.5.396 2.52-1.296 3.492-1.26.792-2.376.576t-1.836-.792-1.044-1.26h-.036q-.216-.576-.288-.9l-4.464-12.636zm29.664 21.312q1.116 1.764 1.116 2.052 0 .18-.108.252-.324.18-.522-.018t-.558-.936-.576-1.098q-4.104-6.192-15.228-23.796.108.036.252-.036t.252-.144l.108-.072q.396-.324.396-.612z","AUDIO_DESCRIPTION":"M18.144-28.655h6.156l-.036-9.54zm36.936-3.564q0-3.132-1.818-5.04t-5.274-1.908h-1.944v13.968h1.872q3.276 0 5.22-2.052t1.944-4.968zm-20.664-13.572l.036 27.216q0 .504-.342.864t-.846.36h-7.776q-.504 0-.846-.36t-.342-.864v-2.232h-10.476l-1.98 2.916q-.36.54-1.008.54h-9.612q-.756 0-1.098-.648t.126-1.26l20.016-27.252q.324-.504.972-.504h11.952q.504 0 .864.36t.36.864zm29.772 13.572q0 6.948-4.518 10.908t-11.682 3.96h-9.72q-.504 0-.864-.36t-.36-.864v-27.216q0-.504.36-.864t.864-.36h9.648q7.2 0 11.736 3.924t4.536 10.872zm5.616.036q0 .396-.018 1.044t-.288 2.574-.774 3.672-1.602 3.888-2.646 3.69h-1.836q1.368-1.62 2.394-3.762t1.494-4.032.756-3.528.324-2.61l.036-.972q0-.288-.018-.81t-.27-2.16-.72-3.294-1.476-4.014-2.376-4.482h1.548q1.476 1.692 2.592 3.852t1.638 4.014.828 3.456.378 2.538zm6.624 0q0 .396-.018 1.044t-.288 2.574-.774 3.672-1.62 3.888-2.664 3.69h-1.836q1.368-1.62 2.394-3.762t1.494-4.032.756-3.528.324-2.61l.036-.972q0-.288-.018-.81t-.27-2.16-.702-3.294-1.458-4.014-2.376-4.482h1.548q1.476 1.692 2.592 3.852t1.638 4.014.828 3.456.378 2.538zm6.516 0q0 .396-.018 1.044t-.288 2.574-.774 3.672-1.602 3.888-2.646 3.69h-1.836q1.368-1.62 2.376-3.762t1.476-4.032.756-3.528.324-2.61l.036-.972q0-.288-.018-.81t-.27-2.16-.702-3.294-1.458-4.014-2.376-4.482h1.548q1.476 1.692 2.592 3.852t1.638 4.014.828 3.456.342 2.538z","VOLUME_CONTROL_PHONE":"M22.212-3.635q0-.396-.468-2.088t-1.116-3.852-.72-2.484q-.036-.144-.18-.954t-.306-1.296-.486-.774q-.54-.504-1.836-.504-.828 0-2.52.198t-2.556.198q-1.224 0-1.692-.396-.216-.18-.396-.558t-.27-.72-.234-.864-.18-.666q-1.332-4.608-1.332-9.18t1.332-9.18l.18-.666.234-.864.27-.72.396-.558q.468-.396 1.692-.396.864 0 2.556.198t2.52.198q1.296 0 1.836-.504.324-.288.486-.774t.306-1.296.18-.954q.072-.324.72-2.484t1.116-3.852.468-2.088q0-.792-1.566-1.89t-2.718-1.53q-.72-.288-1.62-.288-1.224 0-3.528.648-2.052.612-3.474 1.458t-2.556 2.376-1.656 2.52-1.638 3.402q-.216.432-.324.684-1.764 3.852-2.448 7.776t-.684 8.784.684 8.784 2.448 7.776q2.016 4.392 2.988 5.796 2.268 3.276 6.444 4.572l.216.072q2.304.648 3.528.648.9 0 1.62-.288 1.152-.432 2.718-1.53t1.566-1.89zm5.724-32.868q-.936 0-1.62-.684t-.684-1.638.684-1.638q1.332-1.332 1.332-3.24 0-1.872-1.332-3.276-.684-.684-.684-1.62t.684-1.62 1.62-.684 1.62.684q2.7 2.7 2.7 6.516t-2.7 6.516q-.756.684-1.62.684zm6.516 6.516q-.972 0-1.62-.684-.684-.684-.684-1.62t.684-1.62q4.032-4.104 4.032-9.792t-4.032-9.792q-.684-.684-.684-1.62t.684-1.62 1.62-.684 1.62.684q5.4 5.4 5.4 13.032t-5.4 13.032q-.648.684-1.62.684zm6.516 6.516q-.972 0-1.62-.684-.684-.684-.684-1.62t.684-1.62q3.24-3.276 4.986-7.488t1.746-8.82-1.746-8.82-4.986-7.488q-.684-.684-.684-1.62t.684-1.62 1.62-.684 1.62.684q3.924 3.924 6.012 8.964t2.088 10.584-2.088 10.584-6.012 8.964q-.648.684-1.62.684z","BRAILLE":"M6.912-21.815q-2.376 0-4.068 1.692t-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068-1.692-4.068-4.068-1.692zm18.432 0q-2.376 0-4.068 1.692t-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068-1.692-4.068-4.068-1.692zm0-18.432q-2.376 0-4.068 1.692t-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068-1.692-4.068-4.068-1.692zm27.648 18.432q-2.376 0-4.068 1.692t-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068-1.692-4.068-4.068-1.692zm18.432 0q-2.376 0-4.068 1.692t-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068-1.692-4.068-4.068-1.692zm-18.432-18.432q-2.376 0-4.068 1.692t-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068-1.692-4.068-4.068-1.692zm18.432 0q-2.376 0-4.068 1.692t-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068-1.692-4.068-4.068-1.692zm0-18.432q-2.376 0-4.068 1.692t-1.692 4.068 1.692 4.068 4.068 1.692 4.068-1.692 1.692-4.068-1.692-4.068-4.068-1.692zm-57.6 42.624q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm18.432 0q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm-18.432-18.432q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm18.432 0q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm-18.432-18.432q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm46.08 36.864q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm-27.648-36.864q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm46.08 36.864q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm-18.432-18.432q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm18.432 0q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm-18.432-18.432q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896zm18.432 0q0 2.88-2.016 4.896t-4.896 2.016-4.896-2.016-2.016-4.896 2.016-4.896 4.896-2.016 4.896 2.016 2.016 4.896z","ASSISTIVE_LISTENING_SYSTEMS":"M4.608-2.231q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62.684-1.62 1.62-.684 1.62.684.684 1.62zm6.912-6.912q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62.684-1.62 1.62-.684 1.62.684.684 1.62zm1.62-13.14l9.216 9.216-3.24 3.24-9.216-9.216zm12.204-.684q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62.684-1.62 1.62-.684 1.62.684.684 1.62zm25.452-11.52q0 2.124-.414 3.906t-1.35 3.366-1.584 2.43-1.908 2.322q-1.116 1.26-1.638 1.944t-1.206 1.8-.954 2.304-.27 2.664q0 5.724-4.05 9.774t-9.774 4.05q-.936 0-1.62-.684t-.684-1.62.684-1.62 1.62-.684q3.816 0 6.516-2.7t2.7-6.516q0-2.052.414-3.798t1.332-3.276 1.566-2.394 1.872-2.268q1.44-1.656 2.142-2.592t1.35-2.682.648-3.726q0-6.66-4.734-11.394t-11.394-4.734-11.394 4.734-4.734 11.394q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62q0-4.212 1.638-8.046t4.428-6.624 6.624-4.428 8.046-1.638 8.046 1.638 6.624 4.428 4.428 6.624 1.638 8.046zm-18.54 4.608q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62.684-1.62 1.62-.684 1.62.684.684 1.62zm10.368-4.608q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62q0-3.348-2.358-5.706t-5.706-2.358q-3.312 0-5.688 2.358t-2.376 5.706q0 .936-.684 1.62t-1.62.684-1.62-.684-.684-1.62q0-5.256 3.708-8.964t8.964-3.708 8.964 3.708 3.708 8.964zm14.184-10.404q.36.9-.036 1.764t-1.296 1.224q-.324.144-.828.144-.684 0-1.278-.396t-.846-1.08q-2.448-6.408-8.064-10.62-.756-.576-.9-1.512t.432-1.692q.612-.756 1.548-.9t1.692.432q6.588 4.932 9.576 12.636zm7.56-2.916q.324.9-.054 1.764t-1.278 1.224q-.396.144-.828.144-1.584 0-2.16-1.476-3.312-8.568-10.692-14.148-.792-.576-.918-1.512t.45-1.692q.576-.792 1.512-.918t1.692.45q8.46 6.3 12.276 16.164z","ASL_INTERPRETING":"M37.152-29.879q-2.124-.072-3.024-1.98-.612-1.224-1.728-1.926t-2.448-.702q-1.908 0-3.258 1.35t-1.35 3.258q0 2.016 1.296 3.204l.36.288q1.224 1.116 2.952 1.116 1.332 0 2.448-.702t1.728-1.926q.9-1.908 3.024-1.98zm20.448-4.608q0-2.016-1.296-3.204l-.36-.288q-1.224-1.116-2.952-1.116-1.332 0-2.448.702t-1.728 1.926q-.9 1.908-3.024 1.98 2.124.072 3.024 1.98.612 1.224 1.728 1.926t2.448.702q1.908 0 3.258-1.35t1.35-3.258zm-15.336-7.956q-.612 1.26-1.98 1.728t-2.628-.144q-2.232-1.116-4.824-1.116-1.836 0-3.564.612l.342-.018.342-.018q3.312 0 6.138 1.8t4.266 4.788q.612 1.296.126 2.646t-1.782 1.962q-.648.324-1.404.324.756 0 1.404.324 1.296.612 1.782 1.962t-.126 2.646q-1.44 2.988-4.266 4.788t-6.138 1.8h-.216q-.576-.072-1.584-.144l-10.44-.972-8.604 4.32q-.504.252-1.044.252-1.44 0-2.052-1.26l-5.76-11.52q-.396-.828-.144-1.71t1.044-1.35l7.524-4.284 5.328-9.612q.612-5.58 3.294-10.494t7.038-8.514q1.116-.9 2.538-.774t2.322 1.242.774 2.52-1.242 2.34q-2.52 2.124-4.212 4.608 4.428-3.024 9.612-3.636 1.44-.18 2.574.684t1.278 2.304q.18 1.44-.684 2.574t-2.304 1.278q-3.024.36-5.724 1.98 1.656-.36 3.564-.36 4.14 0 7.848 1.8 1.296.648 1.764 1.998t-.18 2.646zm34.668-5.76l5.76 11.52q.396.828.144 1.71t-1.044 1.35l-7.524 4.284-5.328 9.612q-.612 5.58-3.294 10.494t-7.038 8.514q-.936.792-2.196.792-1.62 0-2.664-1.26-.9-1.116-.774-2.52t1.242-2.34q2.52-2.124 4.212-4.608-4.428 3.024-9.612 3.636-.144.036-.432.036-1.296 0-2.286-.864t-1.134-2.16q-.18-1.44.684-2.574t2.304-1.278q3.024-.36 5.724-1.98-1.656.36-3.564.36-4.14 0-7.848-1.8-1.296-.648-1.764-1.998t.18-2.646q.612-1.26 1.98-1.728t2.628.144q2.232 1.116 4.824 1.116 1.836 0 3.564-.612l-.342.018-.342.018q-3.312 0-6.138-1.8t-4.266-4.788q-.612-1.296-.126-2.646t1.782-1.962q.648-.324 1.404-.324-.756 0-1.404-.324-1.296-.612-1.782-1.962t.126-2.646q1.44-2.988 4.266-4.788t6.138-1.8h.252q.504.072 1.512.144l10.476.972 8.604-4.32q.504-.252 1.044-.252 1.44 0 2.052 1.26z","HARD_OF_HEARING":"M38.016-34.487q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62q0-5.256-3.708-8.964t-8.964-3.708-8.964 3.708-3.708 8.964q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62q0-3.348 2.376-5.706t5.688-2.358 5.688 2.358 2.376 5.706zm-7.956-20.736q-4.212 0-8.046 1.638t-6.624 4.428-4.428 6.624-1.638 8.046q0 .936.684 1.62t1.62.684 1.62-.684.684-1.62q0-6.66 4.734-11.394t11.394-4.734 11.394 4.734 4.734 11.394q0 1.98-.648 3.726t-1.35 2.682-2.142 2.592q-1.224 1.404-1.872 2.268t-1.566 2.394-1.332 3.276-.414 3.798q0 3.816-2.7 6.516t-6.516 2.7q-.936 0-1.62.684t-.684 1.62.684 1.62 1.62.684q5.724 0 9.774-4.05t4.05-9.774q0-1.476.27-2.664t.954-2.304 1.206-1.8 1.638-1.944q1.26-1.476 1.908-2.322t1.584-2.43 1.35-3.366.414-3.906q0-4.212-1.638-8.046t-4.428-6.624-6.624-4.428-8.046-1.638zm-8.784 25.884l8.136 8.136-20.844 20.844q-.432.432-1.044.432t-1.044-.432l-6.048-6.048q-.432-.432-.432-1.044t.432-1.044zm36.756-34.668l6.048 6.048q.432.432.432 1.044t-.432 1.08l-8.388 8.388-.936.9-2.556 2.556q-2.376-5.508-7.02-9.288l3.276-3.276 7.452-7.452q.468-.432 1.08-.432t1.044.432z","GLIDE":"M31.176-45.899q0 .972-.468 3.384-.396 1.8-1.134 5.4t-1.098 5.4q-.072.396-.162.45t-.486.09q-.72.072-1.116.072-2.088 0-3.024-1.782t-.936-4.086q0-3.168 1.26-6.264t3.708-4.464q1.008-.504 1.836-.504 1.008 0 1.314.594t.306 1.71zm17.496 15.264q0-.504-1.404-2.718t-1.872-2.394q-.756-.288-1.224-.288-3.276 0-8.136 2.772l-.072-.072q.108-.792.99-4.86t.882-6.408q0-8.388-8.712-8.388-.864 0-2.448.216-3.384.612-6.066 3.222t-4.014 5.994-1.332 6.804q0 5.256 2.898 8.1t8.19 2.844q.9 0 .9.108t-.036.18q-.144 1.224-.936 4.212-.504 1.872-1.854 3.636t-2.97 1.764q-1.512 0-1.512-1.692 0-.864.378-1.71t.9-1.422 1.062-1.026.936-.72.396-.306q0-.108-.252-.36-.864-.792-2.106-1.314t-2.358-.522q-1.26 0-2.286 1.224t-1.476 2.7-.45 2.7q0 3.168 1.854 5.112t4.986 1.944q2.952 0 5.58-1.908t4.23-4.536 2.358-5.508q.216-.792.558-2.394t.522-2.394q.108-.432.504-.648 4.248-2.16 8.172-2.16 1.728 0 4.572.648l.144.036q.18 0 .342-.162t.162-.306zm6.624-18.828v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","GLIDE_G":"M26.784-53.459q0-.864-.072-1.386t-.306-1.08-.756-.828-1.35-.27q-1.404 0-2.808.828-3.78 2.088-5.724 6.858t-1.944 9.702q0 1.584.306 3.078t.954 2.898 1.89 2.25 2.934.846q.144 0 .648.018t.72 0 .576-.108.54-.306.252-.576q.576-2.772 1.728-8.334t1.728-8.334q.684-3.276.684-5.256zm27.144 23.616q0 .252-.27.486t-.558.234l-.216-.036q-.792-.108-2.232-.396t-2.592-.45-2.268-.162q-6.012 0-12.636 3.348-.54.288-.756.972-.36 1.296-.882 3.798t-.81 3.618q-.828 3.276-2.52 6.462t-4.05 5.922-5.562 4.428-6.66 1.692q-4.86 0-7.722-3.006t-2.862-7.902q0-1.908.702-4.212t2.268-4.194 3.51-1.89q1.368 0 4.32 1.206t2.988 2.214q0 .036-.594.45t-1.422 1.116-1.656 1.602-1.404 2.196-.576 2.664q0 1.188.594 1.908t1.746.72q1.62 0 3.06-1.134t2.394-2.808 1.728-3.798 1.17-3.852.576-3.24v-.324q0-.072-.126-.126t-.306-.054h-.36l-.36.018-.216.018q-8.172 0-12.672-4.41t-4.5-12.546q0-3.888 1.242-7.956t3.456-7.56 5.616-6.03 7.362-3.222q1.872-.324 3.816-.324 13.464 0 13.464 12.96 0 3.528-1.368 9.828t-1.548 7.596l.108.108q3.636-2.052 6.57-3.168t6.03-1.116q.792 0 1.908.468.684.252 2.88 3.69t2.196 4.194z","SIGNING":"M29.916-40.211q1.152 0 2.124.648l7.992 5.328q2.196 1.44 3.96 3.492l5.256 6.12q1.44 1.656 1.044 3.816l-2.592 14.868q-.216 1.152-1.062 1.926t-1.998.918l-18.972 2.016-12.672 1.152h-.324q-1.404 0-2.43-1.008t-1.026-2.448q0-1.332.972-2.304t2.34-1.152l9.36-1.152h-16.128q-1.476 0-2.502-1.08t-.954-2.556q.072-1.404 1.152-2.34t2.484-.936l15.912-.036-18.756-2.304q-1.476-.18-2.376-1.332t-.684-2.628q.216-1.26 1.242-2.07t2.358-.81h.36l17.316 2.16-12.636-3.384q-1.368-.36-2.232-1.494t-.648-2.466q.216-1.296 1.188-2.106t2.232-.81q.216 0 .72.072l16.128 3.456 7.812 1.332.108.018.108.018q.828 0 1.098-.828t-.45-1.296l-6.696-4.5q-1.26-.828-1.512-2.286t.648-2.646q.972-1.368 2.736-1.368zm-2.52 7.272l6.696 4.5-7.848-1.332-.18-.072-1.296-1.368-8.568-9.432-.09-.126-.09-.126q-.864-1.116-.666-2.52t1.35-2.304q1.116-.828 2.448-.63t2.304 1.206l5.112 5.292-.144.144-.18.144q-1.152 1.62-.828 3.564t1.98 3.06zm31.932-16.344l.54 9.576q.144 2.628-.396 5.292l-1.728 7.884q-.432 2.124-2.412 3.132l-3.816 1.944q.072-2.232-1.404-3.924l-5.256-6.12q-1.908-2.196-4.212-3.708l-7.992-5.328q-1.224-.828-2.736-.828-1.836 0-3.168 1.332l-8.46-11.232q-.9-1.188-.648-2.646t1.476-2.286q1.188-.792 2.574-.504t2.25 1.44l9.576 12.672-9.432-16.38q-.756-1.26-.378-2.7t1.71-2.124q1.26-.648 2.61-.216t2.07 1.656l8.676 15.12-4.896-12.132q-.54-1.26-.162-2.664t1.602-2.016q1.332-.684 2.736-.216t2.016 1.836l6.948 14.94 3.636 7.056q.288.54.828.63t.972-.27.396-.936l-.432-8.064q-.072-1.476.936-2.556t2.484-1.116q1.404 0 2.412 1.026t1.08 2.43z","LOW_VISION":"M12.06-15.623q-.072 0-.216-.072-3.096-2.052-6.066-5.22t-5.022-6.48q-.756-1.08-.756-2.484 0-.324.072-.684t.144-.648.252-.648.306-.576.378-.612.36-.54.432-.558.396-.522q6.624-9.036 16.272-13.14-3.96-7.128-3.96-7.596 0-.684.612-1.044 4.176-2.304 4.608-2.304.648 0 1.008.576l4.464 8.244q3.312-.684 6.912-.684 9.576 0 17.91 4.95t13.626 13.302q.72 1.116.72 2.484t-.72 2.484q-3.276 5.112-7.866 9.126t-10.026 6.318q3.96 7.128 3.96 7.596 0 .72-.612 1.044-4.176 2.304-4.572 2.304-.684 0-1.044-.576l-4.464-8.244-2.304-4.284-15.984-29.52.252-.252q-2.088.864-3.564 1.692.108.18 4.572 8.424t8.748 16.164 4.284 8.028q0 .252-.324.324-.468.108-2.592.108-2.052 0-2.16-.252l-16.416-30.276q-1.404 1.008-2.952 2.448.864 1.548 7.704 14.166t6.84 12.762q0 .36-.396.36-.504 0-2.97-.792t-2.61-1.008l-3.816-7.092-8.064-14.868q-1.584 1.908-2.808 3.816.072.108.648.9t.828 1.224l6.336 11.772q0 .36-.36.36zm29.88-3.672l1.764 3.276q9.828-3.996 16.2-13.86-6.48-9.972-16.524-14.004 2.412 2.304 3.708 5.346t1.296 6.354q0 3.816-1.692 7.218t-4.752 5.67zm-11.412-22.104q0 .72.504 1.224t1.224.504q3.096 0 5.292 2.196t2.196 5.292q0 .72.504 1.224t1.224.504 1.224-.504.504-1.224q0-4.536-3.204-7.74t-7.74-3.204q-.72 0-1.224.504t-.504 1.224zm13.176-2.34l-.324-.144.252.252z","VIADEO":"M37.8-24.623q0 7.74-5.292 13.464-5.328 5.796-13.608 5.796-8.352 0-13.608-5.796-5.292-5.724-5.292-13.464 0-5.292 2.448-9.738t6.804-7.074 9.648-2.628q3.456 0 6.552 1.116-1.152 2.232-1.404 4.536-2.376-1.008-5.148-1.008-6.012 0-10.098 4.428t-4.086 10.476q0 6.12 4.05 10.386t10.134 4.266 10.116-4.266 4.032-10.386q0-3.204-1.152-5.976 2.376-.468 4.428-1.764 1.476 3.528 1.476 7.632zm-7.344-6.804q0 6.912-2.862 12.42t-8.586 9.108l-.504.036q-1.044 0-2.232-.18 2.988-1.152 5.274-3.69t3.582-5.562 2.106-6.804 1.08-6.93.27-6.426q0-2.484-.108-3.708 1.98 5.76 1.98 11.736zm-1.98-11.808v.072q-2.628-7.704-7.416-15.84 3.168 2.124 5.13 6.714t2.286 9.054zm8.784 7.308q-2.988 0-5.76-2.7 7.848-4.32 10.44-8.892.684-1.332.756-2.016-1.512 3.384-5.022 5.994t-7.362 3.51q-1.26-1.944-1.26-4.068 0-1.332.612-2.844t1.548-2.448q1.656-1.584 5.652-2.664 2.124-.576 3.816-2.106t2.664-3.618q2.664 3.78 2.664 9.108 0 3.924-.864 6.12-1.152 2.772-3.186 4.698t-4.698 1.926z","VIADEO_SQUARE":"M37.8-26.963q0-2.808-1.008-5.292-1.476.9-3.06 1.224.792 1.8.792 4.104 0 4.212-2.772 7.146t-6.948 2.934-6.966-2.934-2.79-7.146q0-4.14 2.808-7.182t6.948-3.042q1.908 0 3.528.684.144-1.548.972-3.132-2.16-.756-4.5-.756-5.544 0-9.27 3.906t-3.726 9.486 3.726 9.396 9.27 3.816 9.27-3.834 3.726-9.378zm-6.408-12.78q.072.864.072 2.556 0 2.268-.18 4.428t-.738 4.77-1.458 4.68-2.466 3.816-3.618 2.538q.756.108 1.512.108h.36q7.884-5.004 7.884-14.796 0-4.176-1.368-8.1zm0 0q-.144-2.88-1.584-6.174t-3.528-4.698q3.312 5.616 5.112 10.872zm12.06-3.78q0-3.672-1.836-6.264-1.476 3.096-4.464 3.924-2.484.684-3.924 1.926t-1.44 3.582q0 1.44.864 2.772 2.664-.612 5.058-2.412t3.438-4.14q-.144 1.872-2.682 4.014t-4.986 3.51q1.872 1.872 3.96 1.872 1.836 0 3.24-1.332t2.16-3.24q.612-1.548.612-4.212zm11.844-5.94v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z","SNAPCHAT":"M46.044-23.111q0-.792-.792-.972-2.412-.54-4.248-2.124t-2.88-3.888q-.252-.684-.252-.9 0-.54.702-.936t1.548-.612 1.548-.738.702-1.314q0-.684-.666-1.134t-1.386-.45q-.432 0-1.152.288t-1.116.288q-.144 0-.432-.072.18-3.42.18-4.104 0-2.844-.612-4.104-1.296-2.808-3.708-4.374t-5.472-1.566q-7.164 0-9.9 5.94-.612 1.26-.612 4.104 0 .684.18 4.104-.144.072-.504.072-.432 0-1.152-.27t-1.08-.27q-.756 0-1.386.432t-.63 1.152q0 .756.702 1.278t1.548.738 1.548.612.702.936q0 .216-.252.9-2.304 4.968-7.128 6.012-.792.18-.792.972 0 1.656 4.932 2.448.072.18.216.936t.414 1.098.846.342q.432 0 1.35-.162t1.422-.162q1.26 0 2.412.54t1.944 1.17 2.07 1.17 2.754.54q1.548 0 2.844-.54t2.07-1.17 1.926-1.17 2.412-.54q.504 0 1.422.144t1.386.144q.576 0 .828-.36t.396-1.08.216-.9q4.932-.792 4.932-2.448zm9.252-9.072q0 7.524-3.708 13.878t-10.062 10.062-13.878 3.708-13.878-3.708-10.062-10.062-3.708-13.878 3.708-13.878 10.062-10.062 13.878-3.708 13.878 3.708 10.062 10.062 3.708 13.878z","SNAPCHAT_GHOST":"M30.528-59.831q4.824-.036 8.658 2.466t5.886 6.93q.972 2.088.972 6.444 0 1.692-.324 6.876.504.252 1.008.252.648 0 1.836-.486t1.836-.486q1.044 0 2.016.648t.972 1.656q0 1.152-1.134 1.944t-2.484 1.134-2.484 1.044-1.134 1.71q0 .54.432 1.548 1.332 2.952 3.69 5.4t5.202 3.636q1.008.432 2.88.828 1.008.216 1.008 1.26 0 2.52-7.884 3.708-.252.396-.396 1.404t-.504 1.674-1.188.666q-.72 0-2.232-.234t-2.304-.234q-1.332 0-2.232.18-1.152.18-2.268.81t-2.088 1.368-2.088 1.458-2.736 1.206-3.564.486q-1.872 0-3.474-.486t-2.7-1.206-2.07-1.458-2.088-1.368-2.232-.81q-.936-.18-2.268-.18-.864 0-2.358.27t-2.106.27q-.9 0-1.26-.666t-.504-1.71-.396-1.44q-7.884-1.188-7.884-3.708 0-1.044 1.008-1.26 1.872-.396 2.88-.828 2.808-1.152 5.202-3.636t3.69-5.4q.432-1.008.432-1.548 0-1.008-1.134-1.71t-2.502-1.062-2.502-1.134-1.134-1.89q0-.972.936-1.638t1.98-.666q.54 0 1.728.468t1.908.468q.648 0 1.152-.252-.324-5.112-.324-6.84 0-4.392.972-6.48 2.304-4.932 6.192-7.128t9.504-2.268z","SNAPCHAT_SQUARE":"M46.08-23.111q0-.792-.792-.972-2.412-.504-4.248-2.088t-2.88-3.924q-.252-.504-.252-.9 0-.54.702-.936t1.53-.612 1.53-.738.702-1.314q0-.684-.666-1.134t-1.386-.45q-.396 0-1.116.288t-1.152.288q-.144 0-.432-.072.18-2.268.18-4.14 0-2.808-.612-4.104-1.296-2.808-3.69-4.374t-5.49-1.566q-7.128 0-9.9 5.94-.648 1.368-.648 4.14 0 1.368.216 4.104-.36.072-.54.072-.396 0-1.134-.288t-1.098-.288q-.72 0-1.35.45t-.63 1.17q0 .756.702 1.278t1.53.738 1.53.612.702.936q0 .396-.252.9-2.304 4.968-7.128 6.012-.792.18-.792.972 0 1.692 4.968 2.484.072.18.216.936t.396 1.098.828.342q.468 0 1.386-.18t1.386-.18q1.26 0 2.43.54t1.962 1.17 2.07 1.17 2.754.54q1.548 0 2.844-.54t2.07-1.17 1.944-1.17 2.43-.54q.468 0 1.404.162t1.404.162q.54 0 .81-.342t.414-1.116.18-.882q4.968-.792 4.968-2.484zm9.216-26.352v34.56q0 4.284-3.042 7.326t-7.326 3.042h-34.56q-4.284 0-7.326-3.042t-3.042-7.326v-34.56q0-4.284 3.042-7.326t7.326-3.042h34.56q4.284 0 7.326 3.042t3.042 7.326z"}
},{}],23:[function(require,module,exports){
/*eslint-disable no-unused-vars*/
/*!
 * jQuery JavaScript Library v3.1.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2016-07-07T21:44Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};



	function DOMEval( code, doc ) {
		doc = doc || document;

		var script = doc.createElement( "script" );

		script.text = code;
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}
/* global Symbol */
// Defining this global in .eslintrc would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.1.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray,

	isWindow: function( obj ) {
		return obj != null && obj === obj.window;
	},

	isNumeric: function( obj ) {

		// As of jQuery 3.0, isNumeric is limited to
		// strings and numbers (primitives or objects)
		// that can be coerced to finite numbers (gh-2662)
		var type = jQuery.type( obj );
		return ( type === "number" || type === "string" ) &&

			// parseFloat NaNs numeric-cast false positives ("")
			// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
			// subtraction forces infinities to NaN
			!isNaN( obj - parseFloat( obj ) );
	},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}

		// Support: Android <=2.3 only (functionish RegExp)
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Support: IE <=9 - 11, Edge 12 - 13
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var tmp, args, proxy;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: Date.now,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.0
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-01-04
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true;
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {
	// Known :disabled false positives:
	// IE: *[disabled]:not(button, input, select, textarea, optgroup, option, menuitem, fieldset)
	// not IE: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Check form elements and option elements for explicit disabling
		return "label" in elem && elem.disabled === disabled ||
			"form" in elem && elem.disabled === disabled ||

			// Check non-disabled form elements for fieldset[disabled] ancestors
			"form" in elem && elem.disabled === false && (
				// Support: IE6-11+
				// Ancestry is covered for us
				elem.isDisabled === disabled ||

				// Otherwise, assume any non-<option> under fieldset[disabled] is disabled
				/* jshint -W018 */
				elem.isDisabled !== !disabled &&
					("label" in elem || !disabledAncestor( elem )) !== disabled
			);
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				return m ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return elem.contentDocument || jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnotwhite = ( /\S+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && jQuery.isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Support: Android 4.0 only
			// Strict mode functions invoked without .call/.apply get global-object context
			resolve.call( undefined, value );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.call( undefined, value );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( jQuery.isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								jQuery.isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				jQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			len ? fn( elems[ 0 ], key ) : emptyGet;
};
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ jQuery.camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ jQuery.camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( jQuery.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( jQuery.camelCase );
			} else {
				key = jQuery.camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnotwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :

					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? JSON.parse( data ) :
					data;
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) ),
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== "undefined" ?
				context.querySelectorAll( tag || "*" ) :
			[];

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], ret ) :
		ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Support: IE <=9
		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		//
		// Support: Firefox <=42
		// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
		if ( delegateCount && cur.nodeType &&
			( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push( { elem: cur, handlers: matches } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: jQuery.isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && jQuery.nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			return ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

function manipulationTarget( elem, content ) {
	if ( jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return elem.getElementsByTagName( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );

	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		div.style.cssText =
			"box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";
		div.innerHTML = "";
		documentElement.appendChild( container );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = divStyle.marginLeft === "2px";
		boxSizingReliableVal = divStyle.width === "4px";

		// Support: Android 4.0 - 4.3 only
		// Some styles come back with percentage values, even though they shouldn't
		div.style.marginRight = "50%";
		pixelMarginRightVal = divStyle.marginRight === "4px";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	container.appendChild( div );

	jQuery.extend( support, {
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelMarginRight: function() {
			computeStyleTests();
			return pixelMarginRightVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,
		style = elem.style;

	computed = computed || getStyles( elem );

	// Support: IE <=9 only
	// getPropertyValue is only needed for .css('filter') (#12537)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?

		// If we already have the right measurement, avoid augmentation
		4 :

		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// At this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// At this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// At this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var val,
		valueIsBorderBox = true,
		styles = getStyles( elem ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// Support: IE <=11 only
	// Running getBoundingClientRect on a disconnected node
	// in IE throws an error.
	if ( elem.getClientRects().length ) {
		val = elem.getBoundingClientRect()[ name ];
	}

	// Some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// Check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// Use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		"float": "cssFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				style[ name ] = value;
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = extra && getStyles( elem ),
				subtract = extra && augmentWidthOrHeight(
					elem,
					name,
					extra,
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				);

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ name ] = value;
				value = jQuery.css( elem, name );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function raf() {
	if ( timerId ) {
		window.requestAnimationFrame( raf );
		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 13
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnotwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	// Go to the end state if fx are off or if document is hidden
	if ( jQuery.fx.off || document.hidden ) {
		opt.duration = 0;

	} else {
		opt.duration = typeof opt.duration === "number" ?
			opt.duration : opt.duration in jQuery.fx.speeds ?
				jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.requestAnimationFrame ?
			window.requestAnimationFrame( raf ) :
			window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	if ( window.cancelAnimationFrame ) {
		window.cancelAnimationFrame( timerId );
	} else {
		window.clearInterval( timerId );
	}

	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) ||
						rclickable.test( elem.nodeName ) && elem.href ?
							0 :
							-1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {
			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




var rclass = /[\t\r\n\f]/g;

function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnotwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + getClass( elem ) + " " ).replace( rclass, " " )
					.indexOf( className ) > -1
			) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g,
	rspaces = /[\x20\t\r\n\f]+/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?

					// Handle most common string cases
					ret.replace( rreturn, "" ) :

					// Handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					elem[ type ]();
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




support.focusin = "onfocusin" in window;


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = jQuery.isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					} ) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 13
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in uncached url if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rts, "" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( jQuery.isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = jQuery.trim( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win, rect, doc,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		rect = elem.getBoundingClientRect();

		// Make sure element is not hidden (display: none)
		if ( rect.width || rect.height ) {
			doc = elem.ownerDocument;
			win = getWindow( doc );
			docElem = doc.documentElement;

			return {
				top: rect.top + win.pageYOffset - docElem.clientTop,
				left: rect.left + win.pageXOffset - docElem.clientLeft
			};
		}

		// Return zeros for disconnected and hidden elements (gh-2310)
		return rect;
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume getBoundingClientRect is there when computed position is fixed
			offset = elem.getBoundingClientRect();

		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset = {
				top: parentOffset.top + jQuery.css( offsetParent[ 0 ], "borderTopWidth", true ),
				left: parentOffset.left + jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true )
			};
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

jQuery.parseJSON = JSON.parse;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}





var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}


return jQuery;
} );

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJqcy9jcnVkLmpzIiwianMvbWFpbi5qcyIsImpzL21vZGFsLmpzIiwibm9kZV9tb2R1bGVzL2FpcnRhYmxlL2xpYi9haXJ0YWJsZS5qcyIsIm5vZGVfbW9kdWxlcy9haXJ0YWJsZS9saWIvYWlydGFibGVfZXJyb3IuanMiLCJub2RlX21vZHVsZXMvYWlydGFibGUvbGliL2Jhc2UuanMiLCJub2RlX21vZHVsZXMvYWlydGFibGUvbGliL2NsYXNzLmpzIiwibm9kZV9tb2R1bGVzL2FpcnRhYmxlL2xpYi9kZXByZWNhdGUuanMiLCJub2RlX21vZHVsZXMvYWlydGFibGUvbGliL2ludGVybmFsX2NvbmZpZy5qc29uIiwibm9kZV9tb2R1bGVzL2FpcnRhYmxlL2xpYi9xdWVyeS5qcyIsIm5vZGVfbW9kdWxlcy9haXJ0YWJsZS9saWIvcmVjb3JkLmpzIiwibm9kZV9tb2R1bGVzL2FpcnRhYmxlL2xpYi9ydW5fYWN0aW9uX3dpdGhfanF1ZXJ5LmpzIiwibm9kZV9tb2R1bGVzL2FpcnRhYmxlL2xpYi90YWJsZS5qcyIsIm5vZGVfbW9kdWxlcy9haXJ0YWJsZS9saWIvdHlwZWNoZWNrLmpzIiwibm9kZV9tb2R1bGVzL2FpcnRhYmxlL25vZGVfbW9kdWxlcy9hc3luYy9saWIvYXN5bmMuanMiLCJub2RlX21vZHVsZXMvYWlydGFibGUvbm9kZV9tb2R1bGVzL2xvZGFzaC9kaXN0L2xvZGFzaC5qcyIsIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9hc3NlcnQvYXNzZXJ0LmpzIiwibm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwibm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL3V0aWwvc3VwcG9ydC9pc0J1ZmZlckJyb3dzZXIuanMiLCJub2RlX21vZHVsZXMvYnJvd3NlcmlmeS9ub2RlX21vZHVsZXMvdXRpbC91dGlsLmpzIiwibm9kZV9tb2R1bGVzL2ZvbnRhd2Vzb21lLW1hcmtlcnMvZm9udGF3ZXNvbWUtbWFya2Vycy5qc29uIiwibm9kZV9tb2R1bGVzL2pxdWVyeS9kaXN0L2pxdWVyeS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDck9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzdSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMzTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FDckRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDckVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDekVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzNCQTtBQUNBO0FBQ0E7QUFDQTs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDM0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMxQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMxSkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUNqdkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQ2pvTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3ZXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQzFrQkE7O0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwidmFyIG1haW4gPSByZXF1aXJlKCcuL21haW4uanMnKTtcbnZhciBtb2RhbEpTID0gcmVxdWlyZSgnLi9tb2RhbC5qcycpO1xudmFyIGFpcnRhYmxlID0gcmVxdWlyZSgnYWlydGFibGUnKTtcblxuLyoqKioqKiogR0VUVEVSUyAqKioqKioqL1xuXG5BUElfS0VZID0gJ2tleUs3ZHE1elVmUVBXcWxPJztcbkJBU0VfS0VZID0gJ2FwcDJLN0RFYmZLM0s4aXRSJztcbkJBU0VfTkFNRSA9ICdtYXAtdGVzdCc7XG5cbnZhciBiYXNlID0gbmV3IGFpcnRhYmxlKHtcbiAgYXBpS2V5OiBBUElfS0VZXG59KS5iYXNlKEJBU0VfS0VZKTtcblxuLy9nZXRzIGxvY2F0aW9ucyBhbmQgcGxhY2VzIHRoZW0gYXBwcm9wcmlhdGVseSBpbiB0aGUgc2lkZWJhclxudmFyIGdldExvY2F0aW9ucyA9IGZ1bmN0aW9uKCkge1xuICBjbGVhclNpZGViYXJMb2NhdGlvbnMoKTtcblxuICBiYXNlKEJBU0VfTkFNRSkuc2VsZWN0KHtcbiAgICB2aWV3OiBcIk1haW4gVmlld1wiXG4gIH0pLmVhY2hQYWdlKGZ1bmN0aW9uIHBhZ2UocmVjb3JkcywgZmV0Y2hOZXh0UGFnZSkge1xuICAgIHJlY29yZHMuZm9yRWFjaChmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgIHZhciBvdXRwdXRfaWQgPSByZWNvcmQuZmllbGRzLnR5cGUgKyBcIl9sb2NzXCI7XG5cbiAgICAgIHZhciBodG1sID0gJzxidXR0b24gaWQ9XCInICsgcmVjb3JkLmlkICsgJ1wiIGNsYXNzPVwiZWRpdF9tb2RhbF9idXR0b25cIj4nICsgcmVjb3JkLmZpZWxkcy50aXRsZSArICc8L2J1dHRvbj48YnI+PGJ1dHRvbiBjbGFzcz1cImRlbGV0ZV9tb2RhbF9idXR0b24gJyArIHJlY29yZC5pZCArICdcIj48aSBjbGFzcz1cImZhIGZhLXRyYXNoLW8gZmEtMnhcIj48L2k+PC9idXR0b24+JztcblxuICAgICAgdmFyIGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgY29udGFpbmVyLmNsYXNzTmFtZSA9IFwibG9jX2VudHJ5XCI7XG4gICAgICBjb250YWluZXIuaW5uZXJIVE1MID0gaHRtbDtcblxuICAgICAgdmFyIG91dHB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dF9pZCk7XG4gICAgICBvdXRwdXQuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcblxuICAgICAgdmFyIGRlbGV0ZV9idXR0b24gPSAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnJyArIHJlY29yZC5pZClbMF07XG4gICAgICBkZWxldGVfYnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGRlbGV0ZU1hcmtlcihyZWNvcmQuaWQpXG4gICAgICB9O1xuXG4gICAgICB2YXIgZWRpdF9idXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChyZWNvcmQuaWQpO1xuICAgICAgZWRpdF9idXR0b24ub25jbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZWRpdE1hcmtlcihyZWNvcmQpXG4gICAgICB9O1xuICAgIH0pO1xuXG4gICAgZmV0Y2hOZXh0UGFnZSgpO1xuXG4gIH0sIGZ1bmN0aW9uIGRvbmUoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vL2dldHMgbWFya2VycyBmcm9tIEFpcnRhYmxlIGJhc2UgYW5kIHBsYWNlcyB0aGVtIG9uIHRoZSBtYXBcbnZhciBnZXRNYXJrZXJzID0gZnVuY3Rpb24gKCl7XG4gIGJhc2UoQkFTRV9OQU1FKS5zZWxlY3Qoe1xuICAgIHZpZXc6IFwiTWFpbiBWaWV3XCJcbiAgfSkuZWFjaFBhZ2UoZnVuY3Rpb24gcGFnZShyZWNvcmRzLCBmZXRjaE5leHRQYWdlKSB7XG4gICAgbWFpbi5wbGFjZU1hcmtlcnMocmVjb3Jkcyk7XG4gICAgZmV0Y2hOZXh0UGFnZSgpO1xuXG4gIH0sIGZ1bmN0aW9uIGRvbmUoZXJyb3IpIHtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKioqKioqKiBTRVRURVJTICoqKioqKiovXG5cbi8vYWRkcyBhIG1hcmtlciB0aHJvdWdoIHRoZSBtb2RhbFxudmFyIGFkZE1hcmtlciA9IGZ1bmN0aW9uICgpIHtcblxuICB2YXIgZm9ybV9taWRkbGUgPSBcIjxmb3JtIGNsYXNzPSdsb2NfZm9ybSc+IFxcXG4gICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3RpdGxlJyBjbGFzcz0nbmV3X2xvY19pbnB1dCcgcGxhY2Vob2xkZXI9J1RpdGxlJz4gPGJyPlxcXG4gICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J2FkZHJlc3MnIGNsYXNzPSduZXdfbG9jX2lucHV0JyBwbGFjZWhvbGRlcj0nQWRkcmVzcyc+IDxicj5cXFxuICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdsaW5rJyBjbGFzcz0nbmV3X2xvY19pbnB1dCcgcGxhY2Vob2xkZXI9J0xpbmsnPiA8YnI+XFxcbiAgICA8c2VsZWN0IG5hbWU9J3R5cGUnIGNsYXNzPSduZXdfbG9jX3NlbGVjdCc+IFxcXG4gICAgICA8b3B0aW9uIHZhbHVlPSdrZXlfbG9jYXRpb24nPktleSBMb2NhdGlvbjwvb3B0aW9uPiBcXFxuICAgICAgPG9wdGlvbiB2YWx1ZT0nY29mZmVlJz5Db2ZmZWU8L29wdGlvbj4gXFxcbiAgICAgIDxvcHRpb24gdmFsdWU9J3Jlc3RhdXJhbnQnPlJlc3RhdXJhbnQ8L29wdGlvbj4gXFxcbiAgICAgIDxvcHRpb24gdmFsdWU9J25pZ2h0bGlmZSc+TmlnaHRsaWZlPC9vcHRpb24+IFxcXG4gICAgICA8b3B0aW9uIHZhbHVlPSdsYW5kbWFyayc+TGFuZG1hcms8L29wdGlvbj4gXFxcbiAgICA8L3NlbGVjdD4gXFxcbiAgICA8L2Zvcm0+XCI7XG5cbiAgbW9kYWxKUy5tb2RhbC5zaG93KHtcbiAgICB0b3A6ICdBZGQgTG9jYXRpb24nLFxuICAgIG1pZGRsZTogZm9ybV9taWRkbGUsXG4gICAgY29uZmlybToge1xuICAgICAgdGV4dDogJ0FkZCcsXG4gICAgICBjbGljazogZnVuY3Rpb24gKCkge1xuICAgICAgICBtYXJrZXIgPSAkKCdmb3JtJykuc2VyaWFsaXplQXJyYXkoKS5yZWR1Y2UoZnVuY3Rpb24ob2JqLCBpdGVtKSB7XG4gICAgICAgICAgb2JqW2l0ZW0ubmFtZV0gPSBpdGVtLnZhbHVlO1xuICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgIH0sIHt9KTtcbiAgICAgICAgcGxhY2VNYXJrZXIobWFya2VyKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufTtcblxuLy9kaXNwbGF5cyBtb2RhbCB0byBlZGl0IGEgbWFya2VyJ3MgdmFsdWVzXG52YXIgZWRpdE1hcmtlciA9IGZ1bmN0aW9uKHJlY29yZCkge1xuXG4gIHZhciBsaW5rID0gZnVuY3Rpb24obGlua192YWwpIHtcbiAgICBpZiAobGlua192YWwgPT0gbnVsbClcbiAgICAgIHJldHVybiBcInBsYWNlaG9sZGVyPSdFbnRlciBhIGxpbmsnXCI7XG4gICAgZWxzZVxuICAgICAgcmV0dXJuIFwidmFsdWU9J1wiICsgcmVjb3JkLmZpZWxkcy5saW5rICsgXCInXCI7XG4gIH1cblxuICB2YXIgZm9ybV9taWRkbGUgPSBcIjxmb3JtIGNsYXNzPSdsb2NfZm9ybSc+IFxcXG4gICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J3RpdGxlJyBjbGFzcz0nbmV3X2xvY19pbnB1dCcgdmFsdWU9J1wiICsgcmVjb3JkLmZpZWxkcy50aXRsZSArIFwiJz4gPGJyPlxcXG4gICAgPGlucHV0IHR5cGU9J3RleHQnIG5hbWU9J2FkZHJlc3MnIGNsYXNzPSduZXdfbG9jX2lucHV0JyB2YWx1ZT0nXCIgKyByZWNvcmQuZmllbGRzLmFkZHJlc3MgKyBcIic+IDxicj5cXFxuICAgIDxpbnB1dCB0eXBlPSd0ZXh0JyBuYW1lPSdsaW5rJyBjbGFzcz0nbmV3X2xvY19pbnB1dCdcIiArIGxpbmsocmVjb3JkLmZpZWxkcy5saW5rKSArIFwiPiA8YnI+XFxcbiAgICA8c2VsZWN0IG5hbWU9J3R5cGUnIGNsYXNzPSduZXdfbG9jX3NlbGVjdCc+IFxcXG4gICAgICA8b3B0aW9uIHZhbHVlPSdrZXlfbG9jYXRpb24nPktleSBMb2NhdGlvbjwvb3B0aW9uPiBcXFxuICAgICAgPG9wdGlvbiB2YWx1ZT0nY29mZmVlJz5Db2ZmZWU8L29wdGlvbj4gXFxcbiAgICAgIDxvcHRpb24gdmFsdWU9J3Jlc3RhdXJhbnQnPlJlc3RhdXJhbnQ8L29wdGlvbj4gXFxcbiAgICAgIDxvcHRpb24gdmFsdWU9J25pZ2h0bGlmZSc+TmlnaHRsaWZlPC9vcHRpb24+IFxcXG4gICAgICA8b3B0aW9uIHZhbHVlPSdsYW5kbWFyayc+TGFuZG1hcms8L29wdGlvbj4gXFxcbiAgICA8L3NlbGVjdD4gXFxcbiAgICA8L2Zvcm0+XCI7XG5cbiAgbW9kYWxKUy5tb2RhbC5zaG93KHtcbiAgICB0b3A6ICdFZGl0IExvY2F0aW9uJyxcbiAgICBtaWRkbGU6IGZvcm1fbWlkZGxlLFxuICAgIGNvbmZpcm06IHtcbiAgICAgIHRleHQ6ICdTYXZlJyxcbiAgICAgIGNsaWNrOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIG1hcmtlciA9ICQoJ2Zvcm0nKS5zZXJpYWxpemVBcnJheSgpLnJlZHVjZShmdW5jdGlvbiAob2JqLCBpdGVtKSB7XG4gICAgICAgICAgb2JqW2l0ZW0ubmFtZV0gPSBpdGVtLnZhbHVlO1xuICAgICAgICAgIHJldHVybiBvYmo7XG4gICAgICAgIH0sIHt9KTtcbiAgICAgICAgdXBkYXRlTWFya2VyKHJlY29yZCwgbWFya2VyKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufTtcblxuLy9wZXJmb3JtcyBjYWxsIHRvIHVwZGF0ZSBtYXJrZXIgaW5mbyBpbiB0aGUgZGJcbnZhciB1cGRhdGVNYXJrZXIgPSBmdW5jdGlvbihyZWNvcmQsIGZpZWxkcykge1xuXG4gIGZpZWxkcy5sYXQgPSByZWNvcmQuZmllbGRzLmxhdDtcbiAgZmllbGRzLmxuZyA9IHJlY29yZC5maWVsZHMubG5nO1xuXG4gIGJhc2UoQkFTRV9OQU1FKS5yZXBsYWNlKHJlY29yZC5pZCwgZmllbGRzLCBmdW5jdGlvbihlcnIsIHJlY29yZCkge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7IHJldHVybjtcbiAgICB9XG4gICAgY29uc29sZS5sb2coXCJzdWNjZXNzZnVsbHkgdXBkYXRlZCByZWNvcmRcIik7XG4gICAgZ2V0TG9jYXRpb25zKCk7XG4gICAgZ2V0TWFya2VycygpO1xuICB9KTtcbn1cblxuLy9yZW1vdmVzIGEgbWFya2VyIGZyb20gdGhlIGRhdGFiYXNlXG52YXIgZGVsZXRlTWFya2VyID0gZnVuY3Rpb24oaWQpIHtcbiAgYmFzZShCQVNFX05BTUUpLmRlc3Ryb3koaWQsIGZ1bmN0aW9uKGVyciwgZGVsZXRlZFJlY29yZCkge1xuICAgIGlmIChlcnIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnNvbGUubG9nKCdzdWNjZXNzZnVsbHkgZGVsZXRlZCByZWNvcmQnKTtcbiAgICBnZXRMb2NhdGlvbnMoKTtcbiAgICBnZXRNYXJrZXJzKCk7XG4gIH0pO1xufVxuXG4vL3BsYWNlcyBhIG5ldyBtYXJrZXIgb24gdGhlIG1hcCB3aXRoIGdpdmVuIGFuZCBjYWxjdWxhdGVkIGRhdGFcbnZhciBwbGFjZU1hcmtlciA9IGZ1bmN0aW9uKHJlY29yZCkge1xuXG4gIC8vdXNlcyBnZW9jb2RlciB0byBnZXQgdGhlIGxhdGl0dWRlIGFuZCBsb25naXR1ZGVcbiAgZnVuY3Rpb24gZW5jb2RlQWRkcmVzcygpIHtcbiAgICB2YXIgZ2VvY29kZXIgPSBuZXcgZ29vZ2xlLm1hcHMuR2VvY29kZXIoKTtcbiAgICBnZW9jb2Rlci5nZW9jb2RlKHsnYWRkcmVzcycgOiByZWNvcmQuYWRkcmVzc30sIGZ1bmN0aW9uIChyZXN1bHRzLCBzdGF0dXMpIHtcbiAgICAgIGlmIChzdGF0dXMgPT09IGdvb2dsZS5tYXBzLkdlb2NvZGVyU3RhdHVzLk9LKSB7XG4gICAgICAgIHNldERhdGEocmVzdWx0c1swXS5nZW9tZXRyeS5sb2NhdGlvbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhbGVydChcIkdvb2dsZSBNYXBzIGhhZCBzb21lIHRyb3VibGUgZmluZGluZ1wiICsgYWRkcmVzcyArIHN0YXR1cyk7XG4gICAgICB9XG4gICAgfSk7XG4gICB9XG4gIGVuY29kZUFkZHJlc3MoKTtcblxuICAvL3NldHMgdGhlIGZpZWxkIGluZm9ybWF0aW9uIGFuZCBleGVjdXRlcyBQT1NUIHJlcXVlc3QgdG8gdGhlIGFpcnRhYmxlIGFwaVxuICBmdW5jdGlvbiBzZXREYXRhKGxhdF9sbmcpe1xuICAgIHZhciBuZXdfcmVjb3JkID0ge1xuICAgICAgdGl0bGU6IHJlY29yZC50aXRsZSxcbiAgICAgIGFkZHJlc3M6IHJlY29yZC5hZGRyZXNzLFxuICAgICAgbGF0OiBKU09OLnN0cmluZ2lmeShsYXRfbG5nLmxhdCgpKSxcbiAgICAgIGxuZzogSlNPTi5zdHJpbmdpZnkobGF0X2xuZy5sbmcoKSksXG4gICAgICBsaW5rOiByZWNvcmQubGluayxcbiAgICAgIHR5cGU6IHJlY29yZC50eXBlXG4gICAgfTtcblxuICAgIGJhc2UoQkFTRV9OQU1FKS5jcmVhdGUobmV3X3JlY29yZCwgZnVuY3Rpb24oZXJyLCByZWNvcmQpIHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc29sZS5sb2coXCJzdWNjZXNzZnVsbHkgY3JlYXRlZCBuZXcgcmVjb3JkXCIpO1xuICAgICAgZ2V0TWFya2VycygpO1xuICAgICAgZ2V0TG9jYXRpb25zKCk7XG4gICAgfSk7XG4gIH1cbn07XG5cbi8qKioqKioqKiBIRUxQRVJTICoqKioqKioqL1xuXG4vL2NsZWFycyB0aGUgc2lkZWJhciBvZiBsb2NhdGlvbnMgd2hlbiBhIG5ldyBvbmUgaXMgYWRkZWRcbnZhciBjbGVhclNpZGViYXJMb2NhdGlvbnMgPSBmdW5jdGlvbigpe1xuICB2YXIgbG9jX3R5cGVzID0gWydrZXlfbG9jYXRpb25fbG9jcycsJ2NvZmZlZV9sb2NzJywncmVzdGF1cmFudF9sb2NzJywgJ25pZ2h0bGlmZV9sb2NzJywnbGFuZG1hcmtfbG9jcyddO1xuXG4gIGxvY190eXBlcy5mb3JFYWNoKGZ1bmN0aW9uIChsb2NfdHlwZSkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGxvY190eXBlKS5pbm5lckhUTUwgPSBcIlwiO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldExvY2F0aW9uczogZ2V0TG9jYXRpb25zLFxuICBnZXRNYXJrZXJzOiBnZXRNYXJrZXJzLFxuICBhZGRNYXJrZXI6IGFkZE1hcmtlcixcbiAgZWRpdE1hcmtlcjogZWRpdE1hcmtlcixcbiAgcGxhY2VNYXJrZXI6IHBsYWNlTWFya2VyLFxufTtcblxuXG4iLCJ2YXIgY3J1ZCA9IHJlcXVpcmUoJy4vY3J1ZC5qcycpO1xudmFyIG1vZGFsID0gcmVxdWlyZSgnLi9tb2RhbC5qcycpO1xudmFyICQgPSByZXF1aXJlKFwianF1ZXJ5XCIpO1xudmFyIGZvbnRhd2Vzb21lID0gcmVxdWlyZSgnZm9udGF3ZXNvbWUtbWFya2VycycpO1xuXG52YXIgbWFwO1xudmFyIGluZm9XaW5kb3c7XG52YXIgaW5mb1dpbmRvd3MgPSBbXTtcblxuLy9pbml0aWFsaXplIGFuZCBwb3B1bGF0ZSB0aGUgbWFwXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgdmFyIG1hcE9wdGlvbnMgPSB7XG4gICAgXCJjZW50ZXJcIjoge1xuICAgICAgXCJsYXRcIjogNDAuNzgyODY0NyxcbiAgICAgIFwibG5nXCI6IC03My45NjUzNTUxXG4gICAgfVxuICAgICwgXCJjbGlja2FibGVJY29uc1wiOiB0cnVlXG4gICAgLCBcImRpc2FibGVEb3VibGVDbGlja1pvb21cIjogZmFsc2VcbiAgICAsIFwiZHJhZ2dhYmxlXCI6IHRydWVcbiAgICAsIFwiZnVsbHNjcmVlbkNvbnRyb2xcIjogdHJ1ZVxuICAgICwgXCJrZXlib2FyZFNob3J0Y3V0c1wiOiB0cnVlXG4gICAgLCBcIm1hcE1ha2VyXCI6IGZhbHNlXG4gICAgLCBcIm1hcFR5cGVDb250cm9sXCI6IHRydWVcbiAgICAsIFwibWFwVHlwZUNvbnRyb2xPcHRpb25zXCI6IHtcbiAgICAgIFwidGV4dFwiOiBcIkRlZmF1bHQgKGRlcGVuZHMgb24gdmlld3BvcnQgc2l6ZSBldGMuKVwiXG4gICAgICAsIFwic3R5bGVcIjogMFxuICAgIH1cbiAgICAsIFwibWFwVHlwZUlkXCI6IFwicm9hZG1hcFwiXG4gICAgLCBcInJvdGF0ZUNvbnRyb2xcIjogdHJ1ZVxuICAgICwgXCJzY2FsZUNvbnRyb2xcIjogdHJ1ZVxuICAgICwgXCJzY3JvbGx3aGVlbFwiOiB0cnVlXG4gICAgLCBcInN0cmVldFZpZXdDb250cm9sXCI6IHRydWVcbiAgICAsIFwic3R5bGVzXCI6IFt7XG4gICAgICBcImZlYXR1cmVUeXBlXCI6IFwibGFuZHNjYXBlLm1hbl9tYWRlXCJcbiAgICAgICwgXCJlbGVtZW50VHlwZVwiOiBcImdlb21ldHJ5XCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwiY29sb3JcIjogXCIjZjdmMWRmXCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcImxhbmRzY2FwZS5uYXR1cmFsXCJcbiAgICAgICwgXCJlbGVtZW50VHlwZVwiOiBcImdlb21ldHJ5XCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwiY29sb3JcIjogXCIjZDBlM2I0XCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcImxhbmRzY2FwZS5uYXR1cmFsLnRlcnJhaW5cIlxuICAgICAgLCBcImVsZW1lbnRUeXBlXCI6IFwiZ2VvbWV0cnlcIlxuICAgICAgLCBcInN0eWxlcnNcIjogW3tcbiAgICAgICAgXCJ2aXNpYmlsaXR5XCI6IFwib25cIlxuICAgICAgfV1cbiAgICB9LCB7XG4gICAgICBcImZlYXR1cmVUeXBlXCI6IFwicG9pXCJcbiAgICAgICwgXCJlbGVtZW50VHlwZVwiOiBcImxhYmVsc1wiXG4gICAgICAsIFwic3R5bGVyc1wiOiBbe1xuICAgICAgICBcInZpc2liaWxpdHlcIjogXCJvblwiXG4gICAgICB9XVxuICAgIH0sIHtcbiAgICAgIFwiZmVhdHVyZVR5cGVcIjogXCJwb2kuYnVzaW5lc3NcIlxuICAgICAgLCBcImVsZW1lbnRUeXBlXCI6IFwiYWxsXCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwidmlzaWJpbGl0eVwiOiBcIm9uXCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInBvaS5tZWRpY2FsXCJcbiAgICAgICwgXCJlbGVtZW50VHlwZVwiOiBcImdlb21ldHJ5XCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwiY29sb3JcIjogXCIjZmJkM2RhXCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInBvaS5wYXJrXCJcbiAgICAgICwgXCJlbGVtZW50VHlwZVwiOiBcImdlb21ldHJ5XCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwiY29sb3JcIjogXCIjYmRlNmFiXCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInJvYWRcIlxuICAgICAgLCBcImVsZW1lbnRUeXBlXCI6IFwiZ2VvbWV0cnkuc3Ryb2tlXCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwidmlzaWJpbGl0eVwiOiBcIm9uXCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInJvYWRcIlxuICAgICAgLCBcImVsZW1lbnRUeXBlXCI6IFwibGFiZWxzXCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwidmlzaWJpbGl0eVwiOiBcIm9uXCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInJvYWQuaGlnaHdheVwiXG4gICAgICAsIFwiZWxlbWVudFR5cGVcIjogXCJnZW9tZXRyeS5maWxsXCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwiY29sb3JcIjogXCIjZmZlMTVmXCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInJvYWQuaGlnaHdheVwiXG4gICAgICAsIFwiZWxlbWVudFR5cGVcIjogXCJnZW9tZXRyeS5zdHJva2VcIlxuICAgICAgLCBcInN0eWxlcnNcIjogW3tcbiAgICAgICAgXCJjb2xvclwiOiBcIiNlZmQxNTFcIlxuICAgICAgfV1cbiAgICB9LCB7XG4gICAgICBcImZlYXR1cmVUeXBlXCI6IFwicm9hZC5hcnRlcmlhbFwiXG4gICAgICAsIFwiZWxlbWVudFR5cGVcIjogXCJnZW9tZXRyeS5maWxsXCJcbiAgICAgICwgXCJzdHlsZXJzXCI6IFt7XG4gICAgICAgIFwiY29sb3JcIjogXCIjZmZmZmZmXCJcbiAgICAgIH1dXG4gICAgfSwge1xuICAgICAgXCJmZWF0dXJlVHlwZVwiOiBcInJvYWQubG9jYWxcIlxuICAgICAgLCBcImVsZW1lbnRUeXBlXCI6IFwiZ2VvbWV0cnkuZmlsbFwiXG4gICAgICAsIFwic3R5bGVyc1wiOiBbe1xuICAgICAgICBcImNvbG9yXCI6IFwiYmxhY2tcIlxuICAgICAgfV1cbiAgICB9LCB7XG4gICAgICBcImZlYXR1cmVUeXBlXCI6IFwidHJhbnNpdC5zdGF0aW9uLmFpcnBvcnRcIlxuICAgICAgLCBcImVsZW1lbnRUeXBlXCI6IFwiZ2VvbWV0cnkuZmlsbFwiXG4gICAgICAsIFwic3R5bGVyc1wiOiBbe1xuICAgICAgICBcImNvbG9yXCI6IFwiI2NmYjJkYlwiXG4gICAgICB9XVxuICAgIH0sIHtcbiAgICAgIFwiZmVhdHVyZVR5cGVcIjogXCJ3YXRlclwiXG4gICAgICAsIFwiZWxlbWVudFR5cGVcIjogXCJnZW9tZXRyeVwiXG4gICAgICAsIFwic3R5bGVyc1wiOiBbe1xuICAgICAgICBcImNvbG9yXCI6IFwiI2EyZGFmMlwiXG4gICAgICB9XVxuICAgIH1dXG4gICAgLCBcInpvb21cIjogMTRcbiAgICAsIFwiem9vbUNvbnRyb2xcIjogdHJ1ZVxuICB9O1xuICB2YXIgbWFwRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKTtcbiAgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChtYXBFbGVtZW50LCBtYXBPcHRpb25zKTtcblxuICBnb29nbGUubWFwcy5ldmVudC5hZGREb21MaXN0ZW5lcih3aW5kb3csIFwicmVzaXplXCIsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgY2VudGVyID0gbWFwLmdldENlbnRlcigpO1xuICAgIGdvb2dsZS5tYXBzLmV2ZW50LnRyaWdnZXIobWFwLCBcInJlc2l6ZVwiKTtcbiAgICBtYXAuc2V0Q2VudGVyKGNlbnRlcik7XG4gIH0pO1xuXG4gIC8vY2xvc2UgaW5mb3dpbmRvd3Mgd2hlbiB0aGUgbWFwIGlzIGNsaWNrZWRcbiAgZ29vZ2xlLm1hcHMuZXZlbnQuYWRkTGlzdGVuZXIobWFwLCBcImNsaWNrXCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgY2xvc2VJbmZvV2luZG93cygpO1xuICB9KTtcblxuICAvL2FkZCBtYXJrZXJzIHRvIGJvdGggdGhlIG1hcCBhbmQgdGhlIHNpZGViYXJcbiAgY3J1ZC5nZXRNYXJrZXJzKCk7XG4gIGNydWQuZ2V0TG9jYXRpb25zKCk7XG5cbiAgYWRkU2VhcmNoQm94KCk7XG5cbiAgdmFyIGJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kX2J0blwiKTtcbiAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpe1xuICAgIGNydWQuYWRkTWFya2VyKCk7XG4gIH0pO1xufSk7XG5cbi8vcmV0dXJucyB0aGUgY3VzdG9tIG1hcCBpY29uIGZvciBlYWNoIHR5cGUgb2YgbG9jYXRpb25cbmZ1bmN0aW9uIGN1c3RvbV9pY29ucyh0eXBlKXtcbiAgdmFyIHBhdGgsIGZpbGxDb2xvcjtcblxuICBpZiAodHlwZSA9PT0gXCJrZXlfbG9jYXRpb25cIikge1xuICAgIHBhdGggPSBmb250YXdlc29tZS5LRVk7XG4gICAgZmlsbENvbG9yID0gJ2JsdWUnO1xuICB9XG4gIGVsc2UgaWYgKHR5cGUgPT09IFwicmVzdGF1cmFudFwiKSB7XG4gICAgcGF0aCA9IGZvbnRhd2Vzb21lLkNVVExFUlk7XG4gICAgZmlsbENvbG9yID0gJ3B1cnBsZSc7XG4gIH1cbiAgZWxzZSBpZiAodHlwZSA9PT0gXCJjb2ZmZWVcIikge1xuICAgIHBhdGggPSBmb250YXdlc29tZS5DT0ZGRUU7XG4gICAgZmlsbENvbG9yID0gJ3NhZGRsZWJyb3duJztcbiAgfVxuICBlbHNlIGlmICh0eXBlID09PSBcImxhbmRtYXJrXCIpIHtcbiAgICBwYXRoID0gZm9udGF3ZXNvbWUuQlVJTERJTkc7XG4gICAgZmlsbENvbG9yID0gJ2RhcmtibHVlJztcbiAgfVxuICBlbHNlIGlmICh0eXBlID09PSBcIm5pZ2h0bGlmZVwiKSB7XG4gICAgcGF0aCA9IGZvbnRhd2Vzb21lLkdMQVNTO1xuICAgIGZpbGxDb2xvciA9ICdmb3Jlc3RncmVlbic7XG4gIH1cblxuICB2YXIgaWNvbiA9IHtcbiAgICBwYXRoOiBwYXRoLFxuICAgIHNjYWxlOiAwLjM1LFxuICAgIHN0cm9rZVdlaWdodDogMC42LFxuICAgIHN0cm9rZUNvbG9yOiAnYmxhY2snLFxuICAgIHN0cm9rZU9wYWNpdHk6IDEsXG4gICAgZmlsbENvbG9yOiBmaWxsQ29sb3IsXG4gICAgZmlsbE9wYWNpdHk6IDEsXG4gIH1cblxuICByZXR1cm4gaWNvbjtcbn1cblxuLy9wbGFjZXMgbWFya2VycyBvbiB0aGUgbWFwXG5mdW5jdGlvbiBwbGFjZU1hcmtlcnMoaW5mb19tYXJrZXJzKSB7XG4gICQuZWFjaChpbmZvX21hcmtlcnMsIGZ1bmN0aW9uIChrZXksIGRhdGEpIHtcbiAgICBkYXRhID0gZGF0YS5maWVsZHM7XG4gICAgdmFyIGxhdF9sbmcgPSBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGRhdGEubGF0LCBkYXRhLmxuZyk7XG5cbiAgICB2YXIgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICBtYXA6IG1hcCxcbiAgICAgIHBvc2l0aW9uOiBsYXRfbG5nLFxuICAgICAgaWNvbjogY3VzdG9tX2ljb25zKGRhdGEudHlwZSksXG4gICAgICBhZGRyZXNzOiBkYXRhLmFkZHJlc3MsXG4gICAgICB0aXRsZTogZGF0YS50aXRsZSxcbiAgICAgIGxhYmVsQ2xhc3M6IFwibWFya1wiXG4gICAgfSk7XG5cbiAgICB2YXIgZGV0YWlscztcbiAgICBpZiAoZGF0YS5saW5rKSB7XG4gICAgICBkZXRhaWxzID0gXCI8c3Ryb25nPlwiICsgZGF0YS50aXRsZSArIFwiPC9zdHJvbmc+IDxicj5cIiArIFwiIDxicj5cIiArICBkYXRhLmFkZHJlc3MgKyBcIjxicj5cIiArIFwiIDxicj4gPGEgaHJlZj1cIitkYXRhLmxpbmsrXCIgdGFyZ2V0PSdfYmxhbmsnPldlYnNpdGU8L2E+XCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRldGFpbHMgPSBcIjxzdHJvbmc+XCIgKyBkYXRhLnRpdGxlICsgXCI8L3N0cm9uZz4gPGJyPlwiICsgXCIgPGJyPlwiICsgIGRhdGEuYWRkcmVzcztcbiAgICB9XG5cbiAgICBpbmZvd2luZG93ID0gbmV3IGdvb2dsZS5tYXBzLkluZm9XaW5kb3coKVxuICAgIGJpbmRJbmZvV2luZG93KG1hcmtlciwgbWFwLCBpbmZvd2luZG93LCBkZXRhaWxzKTtcbiAgfSk7XG59XG5cbi8vY2xvc2VzIGFsbCBvdGhlciBpbmZvd2luZG93cyB3aGVuIGEgbmV3IG9uZSBpcyBwbGFjZWRcbmZ1bmN0aW9uIGNsb3NlSW5mb1dpbmRvd3MoKSB7XG4gIGZvciAoaSA9IDA7IGkgPCBpbmZvV2luZG93cy5sZW5ndGg7IGkrKykge1xuICAgICAgaW5mb1dpbmRvd3NbaV0uY2xvc2UoKTtcbiAgICAgIGluZm9XaW5kb3dzLnNwbGljZShpLCAxKTtcbiAgfVxufVxuXG4vL2JpbmRzIGFuIGluZm8gd2luZG93IHRvIGVhY2ggcGxhY2VkIG1hcmtlclxuZnVuY3Rpb24gYmluZEluZm9XaW5kb3cobWFya2VyLCBtYXAsIGluZm93aW5kb3csIHN0ckRlc2NyaXB0aW9uKXtcbiAgZ29vZ2xlLm1hcHMuZXZlbnQuYWRkTGlzdGVuZXIobWFya2VyLCAnY2xpY2snLCBmdW5jdGlvbigpIHtcbiAgICBjbG9zZUluZm9XaW5kb3dzKCk7XG4gICAgaW5mb3dpbmRvdy5zZXRDb250ZW50KHN0ckRlc2NyaXB0aW9uKTtcbiAgICBpbmZvV2luZG93cy5wdXNoKGluZm93aW5kb3cpO1xuICAgIGluZm93aW5kb3cub3BlbihtYXAsIG1hcmtlcik7XG4gIH0pO1xufVxuXG4vL2FkZHMgYSBzZWFyY2ggYm94IHRvIHRoZSBmaWVsZFxuZnVuY3Rpb24gYWRkU2VhcmNoQm94KCkge1xuICB2YXIgaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VhcmNoLWJveCcpO1xuICB2YXIgc2VhcmNoQm94ID0gbmV3IGdvb2dsZS5tYXBzLnBsYWNlcy5TZWFyY2hCb3goaW5wdXQpO1xuICBtYXAuY29udHJvbHNbZ29vZ2xlLm1hcHMuQ29udHJvbFBvc2l0aW9uLlRPUF9MRUZUXS5wdXNoKGlucHV0KTtcbiAgbWFwLmFkZExpc3RlbmVyKCdib3VuZHNfY2hhbmdlZCcsIGZ1bmN0aW9uICgpIHtcbiAgICBzZWFyY2hCb3guc2V0Qm91bmRzKG1hcC5nZXRCb3VuZHMoKSk7XG4gIH0pO1xuICB2YXIgbWFya2VycyA9IFtdO1xuICBzZWFyY2hCb3guYWRkTGlzdGVuZXIoJ3BsYWNlc19jaGFuZ2VkJywgZnVuY3Rpb24gKCkge1xuICAgIHZhciBwbGFjZXMgPSBzZWFyY2hCb3guZ2V0UGxhY2VzKCk7XG4gICAgaWYgKHBsYWNlcy5sZW5ndGggPT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBtYXJrZXJzLmZvckVhY2goZnVuY3Rpb24gKG1hcmtlcikge1xuICAgICAgbWFya2VyLnNldE1hcChudWxsKTtcbiAgICB9KTtcbiAgICBtYXJrZXJzID0gW107XG4gICAgdmFyIGJvdW5kcyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmdCb3VuZHMoKTtcbiAgICBwbGFjZXMuZm9yRWFjaChmdW5jdGlvbiAocGxhY2UpIHtcbiAgICAgIGlmICghcGxhY2UuZ2VvbWV0cnkpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJSZXR1cm5lZCBwbGFjZSBjb250YWlucyBubyBnZW9tZXRyeVwiKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdmFyIGljb24gPSB7XG4gICAgICAgIHVybDogcGxhY2UuaWNvblxuICAgICAgICAsIHNpemU6IG5ldyBnb29nbGUubWFwcy5TaXplKDcxLCA3MSlcbiAgICAgICAgLCBvcmlnaW46IG5ldyBnb29nbGUubWFwcy5Qb2ludCgwLCAwKVxuICAgICAgICAsIGFuY2hvcjogbmV3IGdvb2dsZS5tYXBzLlBvaW50KDE3LCAzNClcbiAgICAgICAgLCBzY2FsZWRTaXplOiBuZXcgZ29vZ2xlLm1hcHMuU2l6ZSgyNSwgMjUpXG4gICAgICB9O1xuICAgICAgbWFya2Vycy5wdXNoKG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICBtYXA6IG1hcFxuICAgICAgICAsIGljb246IGljb25cbiAgICAgICAgLCB0aXRsZTogcGxhY2UubmFtZVxuICAgICAgICAsIHBvc2l0aW9uOiBwbGFjZS5nZW9tZXRyeS5sb2NhdGlvblxuICAgICAgfSkpO1xuICAgICAgaWYgKHBsYWNlLmdlb21ldHJ5LnZpZXdwb3J0KSB7XG4gICAgICAgIGJvdW5kcy51bmlvbihwbGFjZS5nZW9tZXRyeS52aWV3cG9ydCk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgYm91bmRzLmV4dGVuZChwbGFjZS5nZW9tZXRyeS5sb2NhdGlvbik7XG4gICAgICB9XG4gICAgfSk7XG4gICAgbWFwLmZpdEJvdW5kcyhib3VuZHMpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMucGxhY2VNYXJrZXJzID0gcGxhY2VNYXJrZXJzO1xuXG4iLCJBcnJheS5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiAoZWwpIHtcbiAgcmV0dXJuIHRoaXMuaW5kZXhPZihlbCkgPiAtMTtcbn07XG5Ob2RlLnByb3RvdHlwZS5yZW1vdmVDbGFzc2VzID0gZnVuY3Rpb24gKGFycikge1xuICB0aGlzLmNsYXNzTmFtZSA9IHRoaXMuY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykuZmlsdGVyKGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuICFhcnIuY29udGFpbnMoYykgJiYgYy5sZW5ndGg7XG4gIH0pLmpvaW4oJyAnKTtcbn07XG5Ob2RlLnByb3RvdHlwZS5hZGRDbGFzcyA9IGZ1bmN0aW9uIChjKSB7XG4gIHRoaXMuY2xhc3NOYW1lICs9ICgvXFxzJC8udGVzdCh0aGlzLmNsYXNzTmFtZSkgfHwgIXRoaXMuY2xhc3NOYW1lLmxlbmd0aCA/ICcnIDogJyAnKSArIGM7XG59O1xudmFyIE1vZGFsSlMgPSB7XG4gICAgdmVyc2lvbjogJzEuMSdcbiAgICAsIG1vZGFsOiBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgdmFyIG1vZGFsID0ge1xuICAgICAgICBiZzogJyNtb2RhbGpzLWJnJ1xuICAgICAgICAsIG1vZGFsczogJyNtb2RhbGpzLW1vZGFscydcbiAgICAgICAgLCBtb2RhbDogJyNtb2RhbGpzLW1vZGFsJ1xuICAgICAgICAsIHRvcDogJyNtb2RhbGpzLXRvcCdcbiAgICAgICAgLCB0b3BDYW5jZWw6ICcjbW9kYWxqcy10b3AtY2FuY2VsJ1xuICAgICAgICAsIG1pZGRsZTogJyNtb2RhbGpzLW1pZGRsZSdcbiAgICAgICAgLCBib3R0b206ICcjbW9kYWxqcy1ib3R0b20nXG4gICAgICAgICwgYm90dG9tQ2FuY2VsOiAnI21vZGFsanMtYm90dG9tLWNhbmNlbCdcbiAgICAgICAgLCBib3R0b21Db25maXJtOiAnI21vZGFsanMtYm90dG9tLWNvbmZpcm0nXG4gICAgICAgICwgdHJhbnNpdGlvblR5cGU6ICcjbW9kYWxqcy10cmFuc2l0aW9uVHlwZSdcbiAgICAgIH07XG4gICAgICByZXR1cm4gTW9kYWxKUy5zZWwobW9kYWxbdHlwZV0pO1xuICAgIH1cbiAgICAsIG1vZGFsVHlwZXM6IFtcblx0XHQnbW9kYWwnXG5cdFx0LCAnc3VjY2Vzcydcblx0XHQsICdhbGVydCdcblx0XHQsICd3YXJuaW5nJ1xuXHRcdCwgJ2Vycm9yJ1xuXHRdXG4gICAgLCBzaXplVHlwZXM6IFtcblx0XHQnc21hbGwnXG5cdFx0LCAnbWVkaXVtJ1xuXHRcdCwgJ2JpZydcblx0XVxuICAgICwgbW9ub1R5cGVzOiBbXG5cdFx0J21vbm8nXG5cdFx0LCAnY29sb3JlZCdcblx0XVxuICAgICwgcG9zaXRpb25UeXBlczogW1xuXHRcdCdzdGlja2VkVG9Ub3AnXG5cdFx0LCAndG9wJ1xuXHRcdCwgJ21pZGRsZSdcblx0XHQsICdib3R0b20nXG5cdFx0LCAnc3RpY2tlZFRvQm90dG9tJ1xuXHRdXG4gICAgLCBjb25maXJtRm46IGZ1bmN0aW9uICgpIHt9XG4gICAgLCBpc1Nob3duOiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbW9kYWxqcy5tb2RhbCgnbW9kYWxzJykuc3R5bGUuZGlzcGxheSAhPSAnbm9uZSc7XG4gICAgfVxuICAgICwgc2VsOiBmdW5jdGlvbiAocywgYikge1xuICAgICAgcmV0dXJuIGIgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHMpIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzKTtcbiAgICB9XG4gICAgLCBhZGRFdmVudDogZnVuY3Rpb24gKGVsLCBuYW1lLCBmdW5jKSB7XG4gICAgICAvLyBhZGRFdmVudFxuICAgICAgdmFyIGFFID0gZnVuY3Rpb24gKGVsLCBuYW1lLCBmdW5jKSB7XG4gICAgICAgICAgaWYgKGVsLmFkZEV2ZW50TGlzdGVuZXIpIGVsLmFkZEV2ZW50TGlzdGVuZXIobmFtZSwgZnVuYywgZmFsc2UpO1xuICAgICAgICAgIGVsc2UgaWYgKGVsLmF0dGFjaEV2ZW50KSBlbC5hdHRhY2hFdmVudCgnb24nICsgbmFtZSwgZnVuYyk7XG4gICAgICAgICAgZWxzZSBlbFsnb24nICsgbmFtZV0gPSBmdW5jO1xuICAgICAgICB9XG4gICAgICAgICwgaTtcbiAgICAgIHN3aXRjaCAodHlwZW9mIGVsKSB7XG4gICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICBpZiAoZWwgaW5zdGFuY2VvZiBOb2RlKSB7XG4gICAgICAgICAgYUUoZWwsIG5hbWUsIGZ1bmMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGVsIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgICAgICBmb3IgKGkgPSBlbC5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgYUUoZWxbaV0sIG5hbWUsIGZ1bmMpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdlbCBtdXN0IGJlIG9iamVjdCBvciBpbnN0YW5jZSBvZiBhbiBhcnJheSEnKTtcbiAgICAgIH1cbiAgICB9XG4gICAgLCBpbml0OiBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgIHZhciBtb2RhbEhUTUwgPSAnPGRpdiBpZD1cIm1vZGFsanMtbW9kYWxzXCIgc3R5bGU9XCJvcGFjaXR5OjA7ZGlzcGxheTpub25lXCI+PGRpdiBpZD1cIm1vZGFsanMtYmdcIj48L2Rpdj48ZGl2IGlkPVwibW9kYWxqcy1tb2RhbFwiIGNsYXNzPVwibW9kYWxqcy1ub3JtYWxcIj48ZGl2IGlkPVwibW9kYWxqcy10b3BcIj48L2Rpdj48ZGl2IGlkPVwibW9kYWxqcy10b3AtY2FuY2VsXCI+PC9kaXY+PGRpdiBpZD1cIm1vZGFsanMtbWlkZGxlXCI+PC9kaXY+PGRpdiBpZD1cIm1vZGFsanMtYm90dG9tXCI+PGlucHV0IHR5cGU9XCJidXR0b25cIiBpZD1cIm1vZGFsanMtYm90dG9tLWNvbmZpcm1cIiB2YWx1ZT1cIk9rXCI+PC9kaXY+PGlucHV0IHR5cGU9XCJoaWRkZW5cIiBpZD1cIm1vZGFsanMtdHJhbnNpdGlvblR5cGVcIj48L2Rpdj48L2Rpdj4nO1xuICAgICAgZG9jdW1lbnQuYm9keS5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIG1vZGFsSFRNTCk7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB0aGlzLmFkZEV2ZW50KFtcblx0XHRcdHRoaXMubW9kYWwoJ3RvcENhbmNlbCcpXG5cdFx0XHQsIHRoaXMubW9kYWwoJ2JnJylcblx0XHRdLCAnY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoYXQuaGlkZU1vZGFsKCk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuYWRkRXZlbnQodGhpcy5tb2RhbCgnYm90dG9tQ29uZmlybScpLCAnY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoYXQuaGlkZU1vZGFsKCk7XG4gICAgICAgIHRoYXQuY29uZmlybUZuKCk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgLCBzaG93OiBmdW5jdGlvbiAocHJvcHMpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgdGhyb3cgbmV3IEVycm9yKCdNb2RhbEpTLnNob3coKSBuZWVkcyBhdCBsZWFzdCBvbmUgYXJndW1lbnQhJyk7XG4gICAgICBpZiAodHlwZW9mIHByb3BzICE9ICdvYmplY3QnKSB0aHJvdyBuZXcgRXJyb3IoJ1Byb3BlcnRpZXMgbXVzdCBiZSBhbiBvYmplY3QhJyk7XG4gICAgICBpZiAoIXByb3BzLmhhc093blByb3BlcnR5KCd0b3AnKSB8fCAhcHJvcHMuaGFzT3duUHJvcGVydHkoJ21pZGRsZScpKSB0aHJvdyBuZXcgRXJyb3IoJ1Byb3BlcnRpZXMgaW4gTW9kYWxKUy5zaG93KCkgbXVzdCBpbmNsdWRlIGF0IGxlYXN0IFwidG9wXCIgYW5kIFwibWlkZGxlXCIgcHJvcGVydGllcyEnKTtcbiAgICAgIGlmICghdGhpcy5zZWwoJyNtb2RhbGpzLW1vZGFscycsIHRydWUpLmxlbmd0aCkgdGhpcy5pbml0KHByb3BzKTtcbiAgICAgIC8vIHNldHRpbmcgdXAgdHJhbnNpdGlvblR5cGUgaGlkZGVuIGlucHV0XG4gICAgICB0aGlzLm1vZGFsKCd0cmFuc2l0aW9uVHlwZScpLnZhbHVlID0gcHJvcHMuaGFzT3duUHJvcGVydHkoJ3RyYW5zaXRpb24nKSAmJiBbJ2Zhc3QnLCAnbm9ybWFsJywgJ3Nsb3cnXS5pbmRleE9mKHByb3BzLnRyYW5zaXRpb24pID4gLTEgPyBwcm9wcy50cmFuc2l0aW9uIDogJ2Zhc3QnO1xuICAgICAgdmFyIGdldFByb3AgPSBmdW5jdGlvbiAobywgcHJvcCwgZGVmKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZGVmICE9ICdib29sZWFuJykgZGVmID0gZmFsc2U7XG4gICAgICAgIGlmICghby5oYXNPd25Qcm9wZXJ0eShwcm9wKSkgcmV0dXJuIGRlZjtcbiAgICAgICAgcmV0dXJuIG9bcHJvcF07XG4gICAgICB9O1xuICAgICAgdmFyIG1vZGFscyA9IHRoaXMubW9kYWwoJ21vZGFscycpXG4gICAgICAgICwgY29uZmlybSA9IHRoaXMubW9kYWwoJ2JvdHRvbUNvbmZpcm0nKVxuICAgICAgICAsIG1vZGFsVHlwZSA9IGdldFByb3AocHJvcHMsICd0eXBlJywgJ21vZGFsJylcbiAgICAgICAgLCBtb25vVHlwZSA9IGdldFByb3AocHJvcHMsICdtb25vJylcbiAgICAgICAgLCBpc0JHID0gZ2V0UHJvcChwcm9wcywgJ2JhY2tncm91bmQnLCB0cnVlKVxuICAgICAgICAsIHNpemVUeXBlID0gZ2V0UHJvcChwcm9wcywgJ3NpemUnLCAnc21hbGwnKVxuICAgICAgICAsIHBvc2l0aW9uVHlwZSA9IGdldFByb3AocHJvcHMsICdwb3NpdGlvbicsICdtaWRkbGUnKTtcbiAgICAgIC8vIHNldHRpbmcgJ3R5cGUnXG4gICAgICBpZiAoIXRoaXMubW9kYWxUeXBlcy5jb250YWlucyhtb2RhbFR5cGUpKSBtb2RhbFR5cGUgPSAnbW9kYWwnO1xuICAgICAgbW9kYWxzLnJlbW92ZUNsYXNzZXModGhpcy5tb2RhbFR5cGVzKTtcbiAgICAgIG1vZGFscy5hZGRDbGFzcyhtb2RhbFR5cGUpO1xuICAgICAgbW9ub1R5cGUgPSBtb25vVHlwZSA/ICdtb25vJyA6ICdjb2xvcmVkJztcbiAgICAgIGlmICghdGhpcy5tb25vVHlwZXMuY29udGFpbnMobW9ub1R5cGUpKSBtb25vVHlwZSA9ICdjb2xvcmVkJztcbiAgICAgIHRoaXMubW9kYWwoJ21vZGFsJykucmVtb3ZlQ2xhc3Nlcyh0aGlzLm1vbm9UeXBlcyk7XG4gICAgICB0aGlzLm1vZGFsKCdtb2RhbCcpLmFkZENsYXNzKG1vbm9UeXBlKTtcbiAgICAgIC8vIHNldHRpbmcgJ2JnJ1xuICAgICAgdGhpcy5tb2RhbCgnYmcnKS5zdHlsZS5kaXNwbGF5ID0gdGhpcy5tb2RhbCgnbW9kYWwnKS5zdHlsZS5ib3hTaGFkb3cgPSBpc0JHID8gJycgOiAnbm9uZSc7XG4gICAgICAvLyBzZXR0aW5nICdzaXplJ1xuICAgICAgaWYgKCF0aGlzLnNpemVUeXBlcy5jb250YWlucyhzaXplVHlwZSkpIHNpemVUeXBlID0gJ3NtYWxsJztcbiAgICAgIHRoaXMubW9kYWwoJ21vZGFsJykucmVtb3ZlQ2xhc3Nlcyh0aGlzLnNpemVUeXBlcyk7XG4gICAgICB0aGlzLm1vZGFsKCdtb2RhbCcpLmFkZENsYXNzKHNpemVUeXBlKTtcbiAgICAgIC8vIHNldHRpbmcgJ3Bvc2l0aW9uJ1xuICAgICAgaWYgKCF0aGlzLnBvc2l0aW9uVHlwZXMuY29udGFpbnMocG9zaXRpb25UeXBlKSkgcG9zaXRpb25UeXBlID0gJ21pZGRsZSc7XG4gICAgICB0aGlzLm1vZGFsKCdtb2RhbCcpLnJlbW92ZUNsYXNzZXModGhpcy5wb3NpdGlvblR5cGVzKTtcbiAgICAgIHRoaXMubW9kYWwoJ21vZGFsJykuYWRkQ2xhc3MocG9zaXRpb25UeXBlKTtcbiAgICAgIC8vIHNldHRpbmcgJ2NvbmZpcm0nXG4gICAgICBjb25maXJtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICBpZiAocHJvcHMuaGFzT3duUHJvcGVydHkoJ2NvbmZpcm0nKSAmJiBwcm9wcy5jb25maXJtLmhhc093blByb3BlcnR5KCd0ZXh0JykgJiYgcHJvcHMuY29uZmlybS5oYXNPd25Qcm9wZXJ0eSgnY2xpY2snKSkge1xuICAgICAgICB2YXIgdGV4dCA9IHByb3BzLmNvbmZpcm0udGV4dFxuICAgICAgICAgICwgY2xpY2sgPSBwcm9wcy5jb25maXJtLmNsaWNrXG4gICAgICAgIGlmICh0eXBlb2YgdGV4dCA9PSAnc3RyaW5nJyAmJiB0eXBlb2YgY2xpY2sgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIGNvbmZpcm0uc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xuICAgICAgICAgIHRleHQgPSB0ZXh0IHx8ICdPayc7XG4gICAgICAgICAgY29uZmlybS52YWx1ZSA9IHRleHQ7XG4gICAgICAgICAgY29uZmlybS5mb2N1cygpO1xuICAgICAgICAgIHRoaXMuY29uZmlybUZuID0gY2xpY2s7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHRoaXMuc2hvd01vZGFsKG1vZGFscywgdGhpcy5tb2RhbCgndHJhbnNpdGlvblR5cGUnKSk7XG4gICAgICB2YXIgdyA9IHdpbmRvdztcbiAgICAgIC8vIHNldHRpbmcgJ2JhY2tncm91bmQnXG4gICAgICB0aGlzLm1vZGFsKCd0b3AnKS5pbm5lckhUTUwgPSBwcm9wcy50b3A7XG4gICAgICB0aGlzLm1vZGFsKCdtaWRkbGUnKS5pbm5lckhUTUwgPSBwcm9wcy5taWRkbGU7XG4gICAgICAvLyBzZXR0aW5nIHVwIG1vZGFsIHRvcCBwb3NpdGlvblxuICAgICAgdGhpcy5tb2RhbCgnbW9kYWwnKS5zdHlsZS5tYXJnaW4gPSAocG9zaXRpb25UeXBlID09ICdtaWRkbGUnID8gKC0odGhpcy5tb2RhbCgnbW9kYWwnKS5vZmZzZXRIZWlnaHQgLyAyKSAtIChwcm9wcy5oYXNPd25Qcm9wZXJ0eSgnb2Zmc2V0VG9wJykgJiYgdHlwZW9mIHByb3BzLm9mZnNldFRvcCA9PSAnbnVtYmVyJyA/IHByb3BzLm9mZnNldFRvcCA6IDApKSA6ICcwJykgKyAncHggMCAwICcgKyAoLSh0aGlzLm1vZGFsKCdtb2RhbCcpLm9mZnNldFdpZHRoIC8gMikpICsgJ3B4JztcbiAgICB9XG4gICAgLCBzaG93TW9kYWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChtb2RhbGpzLmlzU2hvd24oKSkgdGhyb3cgbmV3IEVycm9yKCdZb3UgY2FuXFwndCBzaG93IGFuIGFjdHVhbCBzaG93biBtb2RhbCEnKTtcbiAgICAgIHZhciBtb2RhbHMgPSB0aGlzLm1vZGFsKCdtb2RhbHMnKVxuICAgICAgICAsIHRyYW5zaXRpb25UeXBlID0gdGhpcy5tb2RhbCgndHJhbnNpdGlvblR5cGUnKVxuICAgICAgICAsIHRyYW5zaXRpb25zID0ge1xuICAgICAgICAgIGZhc3Q6IDBcbiAgICAgICAgICAsIG5vcm1hbDogMzAwXG4gICAgICAgICAgLCBzbG93OiA2MDBcbiAgICAgICAgfTtcbiAgICAgIHZhciB0cmFuc2l0aW9uc0tleXMgPSBPYmplY3Qua2V5cyh0cmFuc2l0aW9ucyk7XG4gICAgICBtb2RhbHMucmVtb3ZlQ2xhc3Nlcyh0cmFuc2l0aW9uc0tleXMpO1xuICAgICAgbW9kYWxzLmFkZENsYXNzKHRyYW5zaXRpb25UeXBlLnZhbHVlKTtcbiAgICAgIG1vZGFscy5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbW9kYWxzLnN0eWxlLm9wYWNpdHkgPSAnMSc7XG4gICAgICB9LCB0cmFuc2l0aW9uc1t0cmFuc2l0aW9uVHlwZS52YWx1ZV0pO1xuICAgIH1cbiAgICAsIGhpZGVNb2RhbDogZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCFtb2RhbGpzLmlzU2hvd24oKSkgdGhyb3cgbmV3IEVycm9yKCdZb3UgY2FuXFwndCBoaWRlIGFuIGFjdHVhbCBoaWRkZW4gbW9kYWwhJyk7XG4gICAgICB2YXIgbW9kYWxzID0gdGhpcy5tb2RhbCgnbW9kYWxzJylcbiAgICAgICAgLCB0cmFuc2l0aW9uVHlwZSA9IHRoaXMubW9kYWwoJ3RyYW5zaXRpb25UeXBlJylcbiAgICAgICAgLCB0cmFuc2l0aW9ucyA9IHtcbiAgICAgICAgICBmYXN0OiAwXG4gICAgICAgICAgLCBub3JtYWw6IDMwMFxuICAgICAgICAgICwgc2xvdzogNjAwXG4gICAgICAgIH07XG4gICAgICBtb2RhbHMuc3R5bGUub3BhY2l0eSA9ICcwJztcbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICBtb2RhbHMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIH0sIHRyYW5zaXRpb25zW3RyYW5zaXRpb25UeXBlLnZhbHVlXSk7XG4gICAgfVxuICB9XG4gICwgbW9kYWxqcyA9IE1vZGFsSlM7XG5cbm1vZHVsZS5leHBvcnRzLm1vZGFsID0gbW9kYWxqcztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuXG52YXIgQ2xhc3MgPSByZXF1aXJlKCcuL2NsYXNzJyk7XG52YXIgQmFzZSA9IHJlcXVpcmUoJy4vYmFzZScpO1xudmFyIFJlY29yZCA9IHJlcXVpcmUoJy4vcmVjb3JkJyk7XG52YXIgVGFibGUgPSByZXF1aXJlKCcuL3RhYmxlJyk7XG5cbnZhciBBaXJ0YWJsZSA9IENsYXNzLmV4dGVuZCh7XG4gICAgaW5pdDogZnVuY3Rpb24ob3B0cykge1xuICAgICAgICBvcHRzID0gb3B0cyB8fCB7fTtcblxuICAgICAgICB0aGlzLl9hcGlLZXkgPSBvcHRzLmFwaUtleSB8fCBBaXJ0YWJsZS5hcGlLZXkgfHwgQWlydGFibGUuZGVmYXVsdF9jb25maWcuYXBpS2V5O1xuICAgICAgICB0aGlzLl9lbmRwb2ludFVybCA9IG9wdHMuZW5kcG9pbnRVcmwgfHwgQWlydGFibGUuZW5kcG9pbnRVcmwgfHwgQWlydGFibGUuZGVmYXVsdF9jb25maWcuZW5kcG9pbnRVcmw7XG4gICAgICAgIHRoaXMuX2FwaVZlcnNpb24gPSBvcHRzLmFwaVZlcnNpb24gfHwgQWlydGFibGUuYXBpVmVyc2lvbiB8fCBBaXJ0YWJsZS5kZWZhdWx0X2NvbmZpZy5hcGlWZXJzaW9uO1xuICAgICAgICB0aGlzLl9hcGlWZXJzaW9uTWFqb3IgPSB0aGlzLl9hcGlWZXJzaW9uLnNwbGl0KCcuJylbMF07XG4gICAgICAgIHRoaXMuX2FsbG93VW5hdXRob3JpemVkU3NsID0gb3B0cy5hbGxvd1VuYXV0aG9yaXplZFNzbCB8fCBBaXJ0YWJsZS5hbGxvd1VuYXV0aG9yaXplZFNzbCB8fCBBaXJ0YWJsZS5kZWZhdWx0X2NvbmZpZy5hbGxvd1VuYXV0aG9yaXplZFNzbDtcbiAgICAgICAgdGhpcy5fbm9SZXRyeUlmUmF0ZUxpbWl0ZWQgPSBvcHRzLm5vUmV0cnlJZlJhdGVMaW1pdGVkIHx8IEFpcnRhYmxlLm5vUmV0cnlJZlJhdGVMaW1pdGVkIHx8IEFpcnRhYmxlLmRlZmF1bHRfY29uZmlnLm5vUmV0cnlJZlJhdGVMaW1pdGVkO1xuXG4gICAgICAgIGFzc2VydCh0aGlzLl9hcGlLZXksICdBUEkga2V5IGlzIHJlcXVpcmVkIHRvIGNvbm5lY3QgdG8gQWlydGFibGUnKTtcbiAgICB9LFxuXG4gICAgYmFzZTogZnVuY3Rpb24oYmFzZUlkKSB7XG4gICAgICAgIHJldHVybiBCYXNlLmNyZWF0ZUZ1bmN0b3IodGhpcywgYmFzZUlkKTtcbiAgICB9XG59KTtcblxuQWlydGFibGUuZGVmYXVsdF9jb25maWcgPSB7XG4gICAgZW5kcG9pbnRVcmw6IHByb2Nlc3MuZW52LkFJUlRBQkxFX0VORFBPSU5UX1VSTCB8fCAnaHR0cHM6Ly9hcGkuYWlydGFibGUuY29tJyxcbiAgICBhcGlWZXJzaW9uOiAnMC4xLjAnLFxuICAgIGFwaUtleTogcHJvY2Vzcy5lbnYuQUlSVEFCTEVfQVBJX0tFWSxcbiAgICBhbGxvd1VuYXV0aG9yaXplZFNzbDogZmFsc2UsXG4gICAgbm9SZXRyeUlmUmF0ZUxpbWl0ZWQ6IGZhbHNlXG59O1xuXG5BaXJ0YWJsZS5jb25maWd1cmUgPSBmdW5jdGlvbihvcHRzKSB7XG4gICAgQWlydGFibGUuYXBpS2V5ID0gb3B0cy5hcGlLZXk7XG4gICAgQWlydGFibGUuZW5kcG9pbnRVcmwgPSBvcHRzLmVuZHBvaW50VXJsO1xuICAgIEFpcnRhYmxlLmFwaVZlcnNpb24gPSBvcHRzLmFwaVZlcnNpb247XG4gICAgQWlydGFibGUuYWxsb3dVbmF1dGhvcml6ZWRTc2wgPSBvcHRzLmFsbG93VW5hdXRob3JpemVkU3NsO1xuICAgIEFpcnRhYmxlLm5vUmV0cnlJZlJhdGVMaW1pdGVkID0gb3B0cy5ub1JldHJ5SWZSYXRlTGltaXRlZDtcbn07XG5cbkFpcnRhYmxlLmJhc2UgPSBmdW5jdGlvbihiYXNlSWQpIHtcbiAgICByZXR1cm4gbmV3IEFpcnRhYmxlKCkuYmFzZShiYXNlSWQpO1xufTtcblxuQWlydGFibGUuQmFzZSA9IEJhc2U7XG5BaXJ0YWJsZS5SZWNvcmQgPSBSZWNvcmQ7XG5BaXJ0YWJsZS5UYWJsZSA9IFRhYmxlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFpcnRhYmxlO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQ2xhc3MgPSByZXF1aXJlKCcuL2NsYXNzJyk7XG5cbnZhciBBaXJ0YWJsZUVycm9yID0gQ2xhc3MuZXh0ZW5kKHtcbiAgICBpbml0OiBmdW5jdGlvbihlcnJvciwgbWVzc2FnZSwgc3RhdHVzQ29kZSkge1xuICAgICAgICB0aGlzLmVycm9yID0gZXJyb3I7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IHN0YXR1c0NvZGU7XG4gICAgfSxcbiAgICB0b1N0cmluZzogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2UsXG4gICAgICAgICAgICAnKCcsIHRoaXMuZXJyb3IsICcpJyxcbiAgICAgICAgICAgIHRoaXMuc3RhdHVzQ29kZSA/ICAnW0h0dHAgY29kZSAnICsgdGhpcy5zdGF0dXNDb2RlICsgJ10nIDogJydcbiAgICAgICAgXS5qb2luKCcnKTtcbiAgICB9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBaXJ0YWJsZUVycm9yO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xudmFyIGludGVybmFsQ29uZmlnID0gcmVxdWlyZSgnLi9pbnRlcm5hbF9jb25maWcnKTtcbnZhciBDbGFzcyA9IHJlcXVpcmUoJy4vY2xhc3MnKTtcbnZhciBBaXJ0YWJsZUVycm9yID0gcmVxdWlyZSgnLi9haXJ0YWJsZV9lcnJvcicpO1xudmFyIFRhYmxlID0gcmVxdWlyZSgnLi90YWJsZScpO1xudmFyIHJ1bkFjdGlvbiA9IHJlcXVpcmUoJy4vcnVuX2FjdGlvbicpO1xuXG52YXIgQmFzZSA9IENsYXNzLmV4dGVuZCh7XG4gICAgaW5pdDogZnVuY3Rpb24oYWlydGFibGUsIGJhc2VJZCkge1xuICAgICAgICB0aGlzLl9haXJ0YWJsZSA9IGFpcnRhYmxlO1xuICAgICAgICB0aGlzLl9pZCA9IGJhc2VJZDtcbiAgICB9LFxuXG4gICAgdGFibGU6IGZ1bmN0aW9uKHRhYmxlTmFtZSkge1xuICAgICAgICByZXR1cm4gbmV3IFRhYmxlKHRoaXMsIG51bGwsIHRhYmxlTmFtZSk7XG4gICAgfSxcblxuICAgIHJ1bkFjdGlvbjogZnVuY3Rpb24obWV0aG9kLCBwYXRoLCBxdWVyeVBhcmFtcywgYm9keURhdGEsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJ1bkFjdGlvbih0aGlzLCBtZXRob2QsIHBhdGgsIHF1ZXJ5UGFyYW1zLCBib2R5RGF0YSwgY2FsbGJhY2spO1xuICAgIH0sXG5cbiAgICBfY2hlY2tTdGF0dXNGb3JFcnJvcjogZnVuY3Rpb24oc3RhdHVzQ29kZSwgYm9keSkge1xuICAgICAgICBpZiAoc3RhdHVzQ29kZSA9PT0gNDAxKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEFpcnRhYmxlRXJyb3IoJ0FVVEhFTlRJQ0FUSU9OX1JFUVVJUkVEJywgJ1lvdSBzaG91bGQgcHJvdmlkZSB2YWxpZCBhcGkga2V5IHRvIHBlcmZvcm0gdGhpcyBvcGVyYXRpb24nLCBzdGF0dXNDb2RlKTtcbiAgICAgICAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID09PSA0MDMpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQWlydGFibGVFcnJvcignTk9UX0FVVEhPUklaRUQnLCAnWW91IGFyZSBub3QgYXV0aG9yaXplZCB0byBwZXJmb3JtIHRoaXMgb3BlcmF0aW9uJywgc3RhdHVzQ29kZSk7XG4gICAgICAgIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA9PT0gNDA0KSB7XG4gICAgICAgICAgICByZXR1cm4gKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSAoYm9keSAmJiBib2R5LmVycm9yICYmIGJvZHkuZXJyb3IubWVzc2FnZSkgPyBib2R5LmVycm9yLm1lc3NhZ2UgOiAnQ291bGQgbm90IGZpbmQgd2hhdCB5b3UgYXJlIGxvb2tpbmcgZm9yJztcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEFpcnRhYmxlRXJyb3IoJ05PVF9GT1VORCcsIG1lc3NhZ2UsIHN0YXR1c0NvZGUpO1xuICAgICAgICAgICAgfSkoKTtcbiAgICAgICAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID09PSA0MTMpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQWlydGFibGVFcnJvcignUkVRVUVTVF9UT09fTEFSR0UnLCAnUmVxdWVzdCBib2R5IGlzIHRvbyBsYXJnZScsIHN0YXR1c0NvZGUpO1xuICAgICAgICB9IGVsc2UgaWYgKHN0YXR1c0NvZGUgPT09IDQyMikge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBBaXJ0YWJsZUVycm9yKGJvZHkuZXJyb3IudHlwZSwgYm9keS5lcnJvci5tZXNzYWdlLCBzdGF0dXNDb2RlKTtcbiAgICAgICAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID09PSA0MjkpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQWlydGFibGVFcnJvcignVE9PX01BTllfUkVRVUVTVFMnLCAnWW91IGhhdmUgbWFkZSB0b28gbWFueSByZXF1ZXN0cyBpbiBhIHNob3J0IHBlcmlvZCBvZiB0aW1lLiBQbGVhc2UgcmV0cnkgeW91ciByZXF1ZXN0IGxhdGVyJywgc3RhdHVzQ29kZSk7XG4gICAgICAgIH1lbHNlIGlmIChzdGF0dXNDb2RlID09PSA1MDApIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQWlydGFibGVFcnJvcignU0VSVkVSX0VSUk9SJywgJ1RyeSBhZ2Fpbi4gSWYgdGhlIHByb2JsZW0gcGVyc2lzdHMsIGNvbnRhY3Qgc3VwcG9ydC4nLCBzdGF0dXNDb2RlKTtcbiAgICAgICAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID09PSA1MDMpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQWlydGFibGVFcnJvcignU0VSVklDRV9VTkFWQUlMQUJMRScsICdUaGUgc2VydmljZSBpcyB0ZW1wb3JhcmlseSB1bmF2YWlsYWJsZS4gUGxlYXNlIHJldHJ5IHNob3J0bHkuJywgc3RhdHVzQ29kZSk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgZG9DYWxsOiBmdW5jdGlvbih0YWJsZU5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFibGUodGFibGVOYW1lKTtcbiAgICB9LFxuXG4gICAgZ2V0SWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faWQ7XG4gICAgfVxufSk7XG5cbkJhc2UuY3JlYXRlRnVuY3RvciA9IGZ1bmN0aW9uKGFpcnRhYmxlLCBiYXNlSWQpIHtcbiAgICB2YXIgYmFzZSA9IG5ldyBCYXNlKGFpcnRhYmxlLCBiYXNlSWQpO1xuICAgIHZhciBiYXNlRm4gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGJhc2UuZG9DYWxsLmFwcGx5KGJhc2UsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgICBfLmVhY2goWyd0YWJsZScsICdydW5BY3Rpb24nLCAnZ2V0SWQnXSwgZnVuY3Rpb24oYmFzZU1ldGhvZCkge1xuICAgICAgICBiYXNlRm5bYmFzZU1ldGhvZF0gPSBiYXNlW2Jhc2VNZXRob2RdLmJpbmQoYmFzZSk7XG4gICAgfSk7XG4gICAgYmFzZUZuLl9iYXNlID0gYmFzZTtcbiAgICBiYXNlRm4udGFibGVzID0gYmFzZS50YWJsZXM7XG4gICAgcmV0dXJuIGJhc2VGbjtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQmFzZTtcbiIsIi8qanNoaW50IHN0cmljdDpmYWxzZSAqL1xuXG4vKiBTaW1wbGUgSmF2YVNjcmlwdCBJbmhlcml0YW5jZVxuICogQnkgSm9obiBSZXNpZyBodHRwOi8vZWpvaG4ub3JnL1xuICogTUlUIExpY2Vuc2VkLlxuICovXG4vLyBJbnNwaXJlZCBieSBiYXNlMiBhbmQgUHJvdG90eXBlXG4vLyBodHRwOi8vZWpvaG4ub3JnL2Jsb2cvc2ltcGxlLWphdmFzY3JpcHQtaW5oZXJpdGFuY2UvXG4oZnVuY3Rpb24oKXtcbiAgICB2YXIgaW5pdGlhbGl6aW5nID0gZmFsc2UsIGZuVGVzdCA9IC94eXovLnRlc3QoZnVuY3Rpb24oKXt4eXo7fSkgPyAvXFxiX3N1cGVyXFxiLyA6IC8uKi87XG5cbiAgICAvLyBUaGUgYmFzZSBDbGFzcyBpbXBsZW1lbnRhdGlvbiAoZG9lcyBub3RoaW5nKVxuICAgIHZhciBDbGFzcyA9IGZ1bmN0aW9uKCl7fTtcblxuICAgIC8vIENyZWF0ZSBhIG5ldyBDbGFzcyB0aGF0IGluaGVyaXRzIGZyb20gdGhpcyBjbGFzc1xuICAgIENsYXNzLmV4dGVuZCA9IGZ1bmN0aW9uIGV4dGVuZGVyKHByb3ApIHtcbiAgICAgICAgdmFyIF9zdXBlciA9IHRoaXMucHJvdG90eXBlO1xuXG4gICAgICAgIC8vIEluc3RhbnRpYXRlIGEgYmFzZSBjbGFzcyAoYnV0IG9ubHkgY3JlYXRlIHRoZSBpbnN0YW5jZSxcbiAgICAgICAgLy8gZG9uJ3QgcnVuIHRoZSBpbml0IGNvbnN0cnVjdG9yKVxuICAgICAgICBpbml0aWFsaXppbmcgPSB0cnVlO1xuICAgICAgICB2YXIgcHJvdG90eXBlID0gbmV3IHRoaXMoKTtcbiAgICAgICAgaW5pdGlhbGl6aW5nID0gZmFsc2U7XG5cbiAgICAgICAgLy8gQ29weSB0aGUgcHJvcGVydGllcyBvdmVyIG9udG8gdGhlIG5ldyBwcm90b3R5cGVcbiAgICAgICAgZm9yICh2YXIgbmFtZSBpbiBwcm9wKSB7XG4gICAgICAgICAgICAvLyBDaGVjayBpZiB3ZSdyZSBvdmVyd3JpdGluZyBhbiBleGlzdGluZyBmdW5jdGlvblxuICAgICAgICAgICAgcHJvdG90eXBlW25hbWVdID0gdHlwZW9mIHByb3BbbmFtZV0gPT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgICAgICAgICAgdHlwZW9mIF9zdXBlcltuYW1lXSA9PSBcImZ1bmN0aW9uXCIgJiYgZm5UZXN0LnRlc3QocHJvcFtuYW1lXSkgP1xuICAgICAgICAgICAgICAgIChmdW5jdGlvbihuYW1lLCBmbil7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0bXAgPSB0aGlzLl9zdXBlcjtcblxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQWRkIGEgbmV3IC5fc3VwZXIoKSBtZXRob2QgdGhhdCBpcyB0aGUgc2FtZSBtZXRob2RcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGJ1dCBvbiB0aGUgc3VwZXItY2xhc3NcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3N1cGVyID0gX3N1cGVyW25hbWVdO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgbWV0aG9kIG9ubHkgbmVlZCB0byBiZSBib3VuZCB0ZW1wb3JhcmlseSwgc28gd2VcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJlbW92ZSBpdCB3aGVuIHdlJ3JlIGRvbmUgZXhlY3V0aW5nXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmV0ID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3N1cGVyID0gdG1wO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmV0O1xuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pKG5hbWUsIHByb3BbbmFtZV0pIDpcbiAgICAgICAgICAgIHByb3BbbmFtZV07XG4gICAgICAgIH1cblxuICAgICAgICAvLyBUaGUgZHVtbXkgY2xhc3MgY29uc3RydWN0b3JcbiAgICAgICAgZnVuY3Rpb24gQ2xhc3MoKSB7XG4gICAgICAgICAgICAvLyBBbGwgY29uc3RydWN0aW9uIGlzIGFjdHVhbGx5IGRvbmUgaW4gdGhlIGluaXQgbWV0aG9kXG4gICAgICAgICAgICBpZiAoICFpbml0aWFsaXppbmcgJiYgdGhpcy5pbml0IClcbiAgICAgICAgICAgICAgICB0aGlzLmluaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFBvcHVsYXRlIG91ciBjb25zdHJ1Y3RlZCBwcm90b3R5cGUgb2JqZWN0XG4gICAgICAgIENsYXNzLnByb3RvdHlwZSA9IHByb3RvdHlwZTtcblxuICAgICAgICAvLyBFbmZvcmNlIHRoZSBjb25zdHJ1Y3RvciB0byBiZSB3aGF0IHdlIGV4cGVjdFxuICAgICAgICBDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBDbGFzcztcblxuICAgICAgICAvLyBBbmQgbWFrZSB0aGlzIGNsYXNzIGV4dGVuZGFibGVcbiAgICAgICAgQ2xhc3MuZXh0ZW5kID0gZXh0ZW5kZXI7XG5cbiAgICAgICAgcmV0dXJuIENsYXNzO1xuICAgIH07XG5cbiAgICBpZiAodHlwZW9mIGV4cG9ydHMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gQ2xhc3M7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgd2luZG93LkNsYXNzID0gQ2xhc3M7XG4gICAgfVxufSkoKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGRpZFdhcm5Gb3JEZXByZWNhdGlvbiA9IHt9O1xuXG4vKipcbiAqIENvbnZlbmllbmNlIGZ1bmN0aW9uIGZvciBtYXJraW5nIGEgZnVuY3Rpb24gYXMgZGVwcmVjYXRlZC5cbiAqXG4gKiBXaWxsIGVtaXQgYSB3YXJuaW5nIHRoZSBmaXJzdCB0aW1lIHRoYXQgZnVuY3Rpb24gaXMgY2FsbGVkLlxuICpcbiAqIEBwYXJhbSBmbiB0aGUgZnVuY3Rpb24gdG8gbWFyayBhcyBkZXByZWNhdGVkLlxuICogQHBhcmFtIGtleSBhIHVuaXF1ZSBrZXkgaWRlbnRpZnlpbmcgdGhlIGZ1bmN0aW9uLlxuICogQHBhcmFtIG1lc3NhZ2UgdGhlIHdhcm5pbmcgbWVzc2FnZS5cbiAqXG4gKiBAcmV0dXJuIGEgd3JhcHBlZCBmdW5jdGlvblxuICovXG5mdW5jdGlvbiBkZXByZWNhdGUoZm4sIGtleSwgbWVzc2FnZSkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKCFkaWRXYXJuRm9yRGVwcmVjYXRpb25ba2V5XSkge1xuICAgICAgICAgICAgZGlkV2FybkZvckRlcHJlY2F0aW9uW2tleV0gPSB0cnVlO1xuICAgICAgICAgICAgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkZXByZWNhdGU7XG5cbiIsIm1vZHVsZS5leHBvcnRzPXtcbiAgICBcIlJFVFJZX0RFTEFZX0lGX1JBVEVfTElNSVRFRFwiOiA1MDAwLFxuICAgIFwiUkVRVUVTVF9USU1FT1VUXCI6IDMwMDAwXG59IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG52YXIgY2hlY2sgPSByZXF1aXJlKCcuL3R5cGVjaGVjaycpO1xudmFyIENsYXNzID0gcmVxdWlyZSgnLi9jbGFzcycpO1xudmFyIFJlY29yZCA9IHJlcXVpcmUoJy4vcmVjb3JkJyk7XG5cbnZhciBRdWVyeSA9IENsYXNzLmV4dGVuZCh7XG4gICAgLyoqXG4gICAgICogQnVpbGRzIGEgcXVlcnkgb2JqZWN0LiBXb24ndCBmZXRjaCB1bnRpbCBgZmlyc3RQYWdlYCBvclxuICAgICAqIG9yIGBlYWNoUGFnZWAgaXMgY2FsbGVkLlxuICAgICAqL1xuICAgIGluaXQ6IGZ1bmN0aW9uKHRhYmxlLCBwYXJhbXMpIHtcbiAgICAgICAgYXNzZXJ0KF8uaXNQbGFpbk9iamVjdChwYXJhbXMpKTtcbiAgICAgICAgXy5lYWNoKHBhcmFtcywgZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgICAgICAgICAgYXNzZXJ0KFF1ZXJ5LnBhcmFtVmFsaWRhdG9yc1trZXldICYmIFF1ZXJ5LnBhcmFtVmFsaWRhdG9yc1trZXldKHZhbHVlKS5wYXNzLCAnSW52YWxpZCBwYXJhbWV0ZXIgZm9yIFF1ZXJ5OiAnICsga2V5KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5fdGFibGUgPSB0YWJsZTtcbiAgICAgICAgdGhpcy5fcGFyYW1zID0gcGFyYW1zO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBGZXRjaGVzIHRoZSBmaXJzdCBwYWdlIG9mIHJlc3VsdHMgZm9yIHRoZSBxdWVyeSBhc3luY2hyb25vdXNseSxcbiAgICAgKiB0aGVuIGNhbGxzIGBkb25lKGVycm9yLCByZWNvcmRzKWAuXG4gICAgICovXG4gICAgZmlyc3RQYWdlOiBmdW5jdGlvbihkb25lKSB7XG4gICAgICAgIGFzc2VydChfLmlzRnVuY3Rpb24oZG9uZSksXG4gICAgICAgICAgICAnVGhlIGZpcnN0IHBhcmFtZXRlciB0byBgZmlyc3RQYWdlYCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblxuICAgICAgICB0aGlzLmVhY2hQYWdlKGZ1bmN0aW9uKHJlY29yZHMsIGZldGNoTmV4dFBhZ2UpIHtcbiAgICAgICAgICAgIGRvbmUobnVsbCwgcmVjb3Jkcyk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgICBkb25lKGVycm9yLCBudWxsKTtcbiAgICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIEZldGNoZXMgZWFjaCBwYWdlIG9mIHJlc3VsdHMgZm9yIHRoZSBxdWVyeSBhc3luY2hyb25vdXNseS5cbiAgICAgKlxuICAgICAqIENhbGxzIGBwYWdlQ2FsbGJhY2socmVjb3JkcywgZmV0Y2hOZXh0UGFnZSlgIGZvciBlYWNoXG4gICAgICogcGFnZS4gWW91IG11c3QgY2FsbCBgZmV0Y2hOZXh0UGFnZSgpYCB0byBmZXRjaCB0aGUgbmV4dCBwYWdlIG9mXG4gICAgICogcmVzdWx0cy5cbiAgICAgKlxuICAgICAqIEFmdGVyIGZldGNoaW5nIGFsbCBwYWdlcywgb3IgaWYgdGhlcmUncyBhbiBlcnJvciwgY2FsbHNcbiAgICAgKiBgZG9uZShlcnJvcilgLlxuICAgICAqL1xuICAgIGVhY2hQYWdlOiBmdW5jdGlvbihwYWdlQ2FsbGJhY2ssIGRvbmUpIHtcbiAgICAgICAgYXNzZXJ0KF8uaXNGdW5jdGlvbihwYWdlQ2FsbGJhY2spLFxuICAgICAgICAgICAgJ1RoZSBmaXJzdCBwYXJhbWV0ZXIgdG8gYGVhY2hQYWdlYCBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcblxuICAgICAgICBhc3NlcnQoXy5pc0Z1bmN0aW9uKGRvbmUpIHx8IF8uaXNVbmRlZmluZWQoZG9uZSksXG4gICAgICAgICAgICAnVGhlIHNlY29uZCBwYXJhbWV0ZXIgdG8gYGVhY2hQYWdlYCBtdXN0IGJlIGEgZnVuY3Rpb24gb3IgdW5kZWZpbmVkJyk7XG5cbiAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICB2YXIgcGF0aCA9ICcvJyArIHRoaXMuX3RhYmxlLl91cmxFbmNvZGVkTmFtZU9ySWQoKTtcbiAgICAgICAgdmFyIHBhcmFtcyA9IF8uY2xvbmUodGhpcy5fcGFyYW1zKTtcblxuICAgICAgICB2YXIgaW5uZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHRoYXQuX3RhYmxlLl9iYXNlLnJ1bkFjdGlvbignZ2V0JywgcGF0aCwgcGFyYW1zLCB7fSwgZnVuY3Rpb24oZXJyLCByZXNwb25zZSwgcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICBkb25lKGVyciwgbnVsbCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIG5leHQ7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQub2Zmc2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXMub2Zmc2V0ID0gcmVzdWx0Lm9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgPSBpbm5lcjtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5leHQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb25lKG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB2YXIgcmVjb3JkcyA9IF8ubWFwKHJlc3VsdC5yZWNvcmRzLCBmdW5jdGlvbihyZWNvcmRKc29uKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFJlY29yZCh0aGF0Ll90YWJsZSwgbnVsbCwgcmVjb3JkSnNvbik7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VDYWxsYmFjayhyZWNvcmRzLCBuZXh0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBpbm5lcigpO1xuICAgIH0sXG59KTtcblxuUXVlcnkucGFyYW1WYWxpZGF0b3JzID0ge1xuICAgIGZpZWxkczpcbiAgICAgICAgY2hlY2soY2hlY2suaXNBcnJheU9mKF8uaXNTdHJpbmcpLCAndGhlIHZhbHVlIGZvciBgZmllbGRzYCBzaG91bGQgYmUgYW4gYXJyYXkgb2Ygc3RyaW5ncycpLFxuXG4gICAgZmlsdGVyQnlGb3JtdWxhOlxuICAgICAgICBjaGVjayhfLmlzU3RyaW5nLCAndGhlIHZhbHVlIGZvciBgZmlsdGVyQnlGb3JtdWxhYCBzaG91bGQgYmUgYSBzdHJpbmcnKSxcblxuICAgIG1heFJlY29yZHM6XG4gICAgICAgIGNoZWNrKF8uaXNOdW1iZXIsICd0aGUgdmFsdWUgZm9yIGBtYXhSZWNvcmRzYCBzaG91bGQgYmUgYSBudW1iZXInKSxcblxuICAgIHBhZ2VTaXplOlxuICAgICAgICBjaGVjayhfLmlzTnVtYmVyLCAndGhlIHZhbHVlIGZvciBgcGFnZVNpemVgIHNob3VsZCBiZSBhIG51bWJlcicpLFxuXG4gICAgc29ydDpcbiAgICAgICAgY2hlY2soY2hlY2suaXNBcnJheU9mKGZ1bmN0aW9uKG9iaikge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICBfLmlzUGxhaW5PYmplY3Qob2JqKSAmJlxuICAgICAgICAgICAgICAgIF8uaXNTdHJpbmcob2JqLmZpZWxkKSAmJlxuICAgICAgICAgICAgICAgIChfLmlzVW5kZWZpbmVkKG9iai5kaXJlY3Rpb24pIHx8IF8uY29udGFpbnMoWydhc2MnLCAnZGVzYyddLCBvYmouZGlyZWN0aW9uKSlcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pLCAndGhlIHZhbHVlIGZvciBgc29ydGAgc2hvdWxkIGJlIGFuIGFycmF5IG9mIHNvcnQgb2JqZWN0cy4gJyArXG4gICAgICAgICAgICAnRWFjaCBzb3J0IG9iamVjdCBtdXN0IGhhdmUgYSBzdHJpbmcgYGZpZWxkYCB2YWx1ZSwgYW5kIGFuIG9wdGlvbmFsICcgK1xuICAgICAgICAgICAgJ2BkaXJlY3Rpb25gIHZhbHVlIHRoYXQgaXMgXCJhc2NcIiBvciBcImRlc2NcIi4nXG4gICAgICAgICksXG5cbiAgICB2aWV3OlxuICAgICAgICBjaGVjayhfLmlzU3RyaW5nLCAndGhlIHZhbHVlIGZvciBgdmlld2Agc2hvdWxkIGJlIGEgc3RyaW5nJyksXG59O1xuXG4vKipcbiAqIFZhbGlkYXRlcyB0aGUgcGFyYW1ldGVycyBmb3IgcGFzc2luZyB0byB0aGUgUXVlcnkgY29uc3RydWN0b3IuXG4gKlxuICogQHJldHVybiBhbiBvYmplY3Qgd2l0aCB0d28ga2V5czpcbiAqICB2YWxpZFBhcmFtczogdGhlIG9iamVjdCB0aGF0IHNob3VsZCBiZSBwYXNzZWQgdG8gdGhlIGNvbnN0cnVjdG9yLlxuICogIGlnbm9yZWRLZXlzOiBhIGxpc3Qgb2Yga2V5cyB0aGF0IHdpbGwgYmUgaWdub3JlZC5cbiAqICBlcnJvcnM6IGEgbGlzdCBvZiBlcnJvciBtZXNzYWdlcy5cbiAqL1xuUXVlcnkudmFsaWRhdGVQYXJhbXMgPSBmdW5jdGlvbiB2YWxpZGF0ZVBhcmFtcyhwYXJhbXMpIHtcbiAgICBhc3NlcnQoXy5pc1BsYWluT2JqZWN0KHBhcmFtcykpO1xuXG4gICAgdmFyIHZhbGlkUGFyYW1zID0ge307XG4gICAgdmFyIGlnbm9yZWRLZXlzID0gW107XG4gICAgdmFyIGVycm9ycyA9IFtdO1xuICAgIF8uZWFjaChwYXJhbXMsIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgaWYgKFF1ZXJ5LnBhcmFtVmFsaWRhdG9ycy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICAgICAgICB2YXIgdmFsaWRhdG9yID0gUXVlcnkucGFyYW1WYWxpZGF0b3JzW2tleV07XG4gICAgICAgICAgICB2YXIgdmFsaWRhdGlvblJlc3VsdCA9IHZhbGlkYXRvcih2YWx1ZSk7XG4gICAgICAgICAgICBpZiAodmFsaWRhdGlvblJlc3VsdC5wYXNzKSB7XG4gICAgICAgICAgICAgICAgdmFsaWRQYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBlcnJvcnMucHVzaCh2YWxpZGF0aW9uUmVzdWx0LmVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlnbm9yZWRLZXlzLnB1c2goa2V5KTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdmFsaWRQYXJhbXM6IHZhbGlkUGFyYW1zLFxuICAgICAgICBpZ25vcmVkS2V5czogaWdub3JlZEtleXMsXG4gICAgICAgIGVycm9yczogZXJyb3JzLFxuICAgIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFF1ZXJ5O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG52YXIgQ2xhc3MgPSByZXF1aXJlKCcuL2NsYXNzJyk7XG5cbnZhciBSZWNvcmQgPSBDbGFzcy5leHRlbmQoe1xuICAgIGluaXQ6IGZ1bmN0aW9uKHRhYmxlLCByZWNvcmRJZCwgcmVjb3JkSnNvbikge1xuICAgICAgICB0aGlzLl90YWJsZSA9IHRhYmxlO1xuICAgICAgICB0aGlzLmlkID0gcmVjb3JkSWQgfHwgcmVjb3JkSnNvbi5pZDtcbiAgICAgICAgdGhpcy5zZXRSYXdKc29uKHJlY29yZEpzb24pO1xuICAgICAgICB0aGlzLnVwZGF0ZUZpZWxkcyA9IHRoaXMucGF0Y2hVcGRhdGU7XG4gICAgICAgIHRoaXMucmVwbGFjZUZpZWxkcyA9IHRoaXMucHV0VXBkYXRlO1xuICAgIH0sXG4gICAgZ2V0SWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pZDtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24oY29sdW1uTmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5maWVsZHNbY29sdW1uTmFtZV07XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uKGNvbHVtbk5hbWUsIGNvbHVtblZhbHVlKSB7XG4gICAgICAgIHRoaXMuZmllbGRzW2NvbHVtbk5hbWVdID0gY29sdW1uVmFsdWU7XG4gICAgfSxcbiAgICBzYXZlOiBmdW5jdGlvbihkb25lKSB7XG4gICAgICAgIHRoaXMucHV0VXBkYXRlKHRoaXMuZmllbGRzLCBkb25lKTtcbiAgICB9LFxuICAgIHBhdGNoVXBkYXRlOiBmdW5jdGlvbihjZWxsVmFsdWVzQnlOYW1lLCBvcHRzLCBkb25lKSB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgICAgaWYgKCFkb25lKSB7XG4gICAgICAgICAgICBkb25lID0gb3B0cztcbiAgICAgICAgICAgIG9wdHMgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgdXBkYXRlQm9keSA9IF8uZXh0ZW5kKHtcbiAgICAgICAgICAgIGZpZWxkczogY2VsbFZhbHVlc0J5TmFtZVxuICAgICAgICB9LCBvcHRzKTtcblxuICAgICAgICB0aGlzLl90YWJsZS5fYmFzZS5ydW5BY3Rpb24oJ3BhdGNoJywgJy8nICsgdGhpcy5fdGFibGUuX3VybEVuY29kZWROYW1lT3JJZCgpICsgJy8nICsgdGhpcy5pZCwge30sIHVwZGF0ZUJvZHksIGZ1bmN0aW9uKGVyciwgcmVzcG9uc2UsIHJlc3VsdHMpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHsgZG9uZShlcnIpOyByZXR1cm47IH1cblxuICAgICAgICAgICAgdGhhdC5zZXRSYXdKc29uKHJlc3VsdHMpO1xuICAgICAgICAgICAgZG9uZShudWxsLCB0aGF0KTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBwdXRVcGRhdGU6IGZ1bmN0aW9uKGNlbGxWYWx1ZXNCeU5hbWUsIG9wdHMsIGRvbmUpIHtcbiAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICBpZiAoIWRvbmUpIHtcbiAgICAgICAgICAgIGRvbmUgPSBvcHRzO1xuICAgICAgICAgICAgb3B0cyA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIHZhciB1cGRhdGVCb2R5ID0gXy5leHRlbmQoe1xuICAgICAgICAgICAgZmllbGRzOiBjZWxsVmFsdWVzQnlOYW1lXG4gICAgICAgIH0sIG9wdHMpO1xuICAgICAgICB0aGlzLl90YWJsZS5fYmFzZS5ydW5BY3Rpb24oJ3B1dCcsICcvJyArIHRoaXMuX3RhYmxlLl91cmxFbmNvZGVkTmFtZU9ySWQoKSArICcvJyArIHRoaXMuaWQsIHt9LCB1cGRhdGVCb2R5LCBmdW5jdGlvbihlcnIsIHJlc3BvbnNlLCByZXN1bHRzKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7IGRvbmUoZXJyKTsgcmV0dXJuOyB9XG5cbiAgICAgICAgICAgIHRoYXQuc2V0UmF3SnNvbihyZXN1bHRzKTtcbiAgICAgICAgICAgIGRvbmUobnVsbCwgdGhhdCk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgZGVzdHJveTogZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgIHRoaXMuX3RhYmxlLl9iYXNlLnJ1bkFjdGlvbignZGVsZXRlJywgJy8nICsgdGhpcy5fdGFibGUuX3VybEVuY29kZWROYW1lT3JJZCgpICsgJy8nICsgdGhpcy5pZCwge30sIHt9LCBmdW5jdGlvbihlcnIsIHJlc3BvbnNlLCByZXN1bHRzKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7IGRvbmUoZXJyKTsgcmV0dXJuOyB9XG5cbiAgICAgICAgICAgIGRvbmUobnVsbCwgdGhhdCk7XG4gICAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBmZXRjaDogZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICAgIHRoaXMuX3RhYmxlLl9iYXNlLnJ1bkFjdGlvbignZ2V0JywgJy8nICsgdGhpcy5fdGFibGUuX3VybEVuY29kZWROYW1lT3JJZCgpICsgJy8nICsgdGhpcy5pZCwge30sIHt9LCBmdW5jdGlvbihlcnIsIHJlc3BvbnNlLCByZXN1bHRzKSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7IGRvbmUoZXJyKTsgcmV0dXJuOyB9XG5cbiAgICAgICAgICAgIHRoYXQuc2V0UmF3SnNvbihyZXN1bHRzKTtcbiAgICAgICAgICAgIGRvbmUobnVsbCwgdGhhdCk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgc2V0UmF3SnNvbjogZnVuY3Rpb24ocmF3SnNvbikge1xuICAgICAgICB0aGlzLl9yYXdKc29uID0gcmF3SnNvbjtcbiAgICAgICAgdGhpcy5maWVsZHMgPSAodGhpcy5fcmF3SnNvbiAmJiB0aGlzLl9yYXdKc29uLmZpZWxkcykgfHwge307XG4gICAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVjb3JkO1xuIiwiLypnbG9iYWxzIGpRdWVyeSAqL1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW50ZXJuYWxDb25maWcgPSByZXF1aXJlKCcuL2ludGVybmFsX2NvbmZpZycpO1xuXG5mdW5jdGlvbiBydW5BY3Rpb25XaXRoSlF1ZXJ5KGJhc2UsIG1ldGhvZCwgcGF0aCwgcXVlcnlQYXJhbXMsIGJvZHlEYXRhLCBjYWxsYmFjaykge1xuICAgIHF1ZXJ5UGFyYW1zLmZvcmNlSW5zZWN1cmVDcm9zc0RvbWFpbiA9ICdBTExPV19BTllfRE9NQUlOJztcblxuICAgIHZhciB1cmwgPSBiYXNlLl9haXJ0YWJsZS5fZW5kcG9pbnRVcmwrJy92JyArIGJhc2UuX2FpcnRhYmxlLl9hcGlWZXJzaW9uTWFqb3IgKyAnLycgKyBiYXNlLl9pZCArIHBhdGggKyAnPycgKyBqUXVlcnkucGFyYW0ocXVlcnlQYXJhbXMpO1xuXG4gICAgalF1ZXJ5LmFqYXgodXJsLCB7XG4gICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIHR5cGU6IG1ldGhvZCxcblxuICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeShib2R5RGF0YSksXG4gICAgICAgIHByb2Nlc3NEYXRhOiBmYWxzZSxcbiAgICAgICAgZGF0YVR5cGU6ICdqc29uJyxcbiAgICAgICAgdGltZW91dDogaW50ZXJuYWxDb25maWcuUkVRVUVTVF9USU1FT1VULFxuXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgYmFzZS5fYWlydGFibGUuX2FwaUtleSxcbiAgICAgICAgICAgICd4LWFwaS12ZXJzaW9uJzogYmFzZS5fYWlydGFibGUuX2FwaVZlcnNpb24sXG4gICAgICAgICAgICAneC1haXJ0YWJsZS1hcHBsaWNhdGlvbi1pZCc6IGJhc2UuZ2V0SWQoKSxcbiAgICAgICAgfSxcbiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24oZGF0YSwgdGV4dFN0YXR1cywganFYSFIpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIG51bGwsIGRhdGEpO1xuICAgICAgICB9LFxuICAgICAgICBlcnJvcjogZnVuY3Rpb24oanFYSFIsIHRleHRTdGF0dXMpIHtcbiAgICAgICAgICAgIHZhciBlcnJvcjtcbiAgICAgICAgICAgIGlmIChqcVhIUi5zdGF0dXMgPT09IDQyOSAmJiAhYmFzZS5fYWlydGFibGUuX25vUmV0cnlJZlJhdGVMaW1pdGVkKSB7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcnVuQWN0aW9uV2l0aEpRdWVyeShiYXNlLCBtZXRob2QsIHBhdGgsIHF1ZXJ5UGFyYW1zLCBib2R5RGF0YSwgY2FsbGJhY2spO1xuICAgICAgICAgICAgICAgIH0sIGludGVybmFsQ29uZmlnLlJFVFJZX0RFTEFZX0lGX1JBVEVfTElNSVRFRCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXJyb3IgPSBiYXNlLl9jaGVja1N0YXR1c0ZvckVycm9yKGpxWEhSLnN0YXR1cywganFYSFIucmVzcG9uc2VKU09OKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGVycm9yKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJ1bkFjdGlvbldpdGhKUXVlcnk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBfID0gcmVxdWlyZSgnbG9kYXNoJyk7XG5cbnZhciBhc3NlcnQgPSByZXF1aXJlKCdhc3NlcnQnKTtcbnZhciBhc3luYyA9IHJlcXVpcmUoJ2FzeW5jJyk7XG5cbnZhciBBaXJ0YWJsZUVycm9yID0gcmVxdWlyZSgnLi9haXJ0YWJsZV9lcnJvcicpO1xudmFyIENsYXNzID0gcmVxdWlyZSgnLi9jbGFzcycpO1xudmFyIGRlcHJlY2F0ZSA9IHJlcXVpcmUoJy4vZGVwcmVjYXRlJyk7XG52YXIgUXVlcnkgPSByZXF1aXJlKCcuL3F1ZXJ5Jyk7XG52YXIgUmVjb3JkID0gcmVxdWlyZSgnLi9yZWNvcmQnKTtcblxudmFyIFRhYmxlID0gQ2xhc3MuZXh0ZW5kKHtcbiAgICBpbml0OiBmdW5jdGlvbihiYXNlLCB0YWJsZUlkLCB0YWJsZU5hbWUpIHtcbiAgICAgICAgdGhpcy5fYmFzZSA9IGJhc2U7XG4gICAgICAgIGFzc2VydCh0YWJsZUlkIHx8IHRhYmxlTmFtZSwgJ1RhYmxlIG5hbWUgb3IgdGFibGUgSUQgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgdGhpcy5pZCA9IHRhYmxlSWQ7XG4gICAgICAgIHRoaXMubmFtZSA9IHRhYmxlTmFtZTtcblxuICAgICAgICAvLyBQdWJsaWMgQVBJXG4gICAgICAgIHRoaXMuZmluZCA9IHRoaXMuX2ZpbmRSZWNvcmRCeUlkLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuc2VsZWN0ID0gdGhpcy5fc2VsZWN0UmVjb3Jkcy5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmNyZWF0ZSA9IHRoaXMuX2NyZWF0ZVJlY29yZC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLnVwZGF0ZSA9IHRoaXMuX3VwZGF0ZVJlY29yZC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmRlc3Ryb3kgPSB0aGlzLl9kZXN0cm95UmVjb3JkLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMucmVwbGFjZSA9IHRoaXMuX3JlcGxhY2VSZWNvcmQuYmluZCh0aGlzKTtcblxuICAgICAgICAvLyBEZXByZWNhdGVkIEFQSVxuICAgICAgICB0aGlzLmxpc3QgPSBkZXByZWNhdGUodGhpcy5fbGlzdFJlY29yZHMuYmluZCh0aGlzKSxcbiAgICAgICAgICAgICd0YWJsZS5saXN0JyxcbiAgICAgICAgICAgICdBaXJ0YWJsZTogYGxpc3QoKWAgaXMgZGVwcmVjYXRlZC4gVXNlIGBzZWxlY3QoKWAgaW5zdGVhZC4nKTtcbiAgICAgICAgdGhpcy5mb3JFYWNoID0gZGVwcmVjYXRlKHRoaXMuX2ZvckVhY2hSZWNvcmQuYmluZCh0aGlzKSxcbiAgICAgICAgICAgICd0YWJsZS5mb3JFYWNoJyxcbiAgICAgICAgICAgICdBaXJ0YWJsZTogYGZvckVhY2goKWAgaXMgZGVwcmVjYXRlZC4gVXNlIGBzZWxlY3QoKWAgaW5zdGVhZC4nKTtcbiAgICB9LFxuICAgIF9maW5kUmVjb3JkQnlJZDogZnVuY3Rpb24ocmVjb3JkSWQsIGRvbmUpIHtcbiAgICAgICAgdmFyIHJlY29yZCA9IG5ldyBSZWNvcmQodGhpcywgcmVjb3JkSWQpO1xuICAgICAgICByZWNvcmQuZmV0Y2goZG9uZSk7XG4gICAgfSxcbiAgICBfc2VsZWN0UmVjb3JkczogZnVuY3Rpb24ocGFyYW1zKSB7XG4gICAgICAgIGlmIChfLmlzVW5kZWZpbmVkKHBhcmFtcykpIHtcbiAgICAgICAgICAgIHBhcmFtcyA9IHt9O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0FpcnRhYmxlOiBgc2VsZWN0YCB0YWtlcyBvbmx5IG9uZSBwYXJhbWV0ZXIsIGJ1dCBpdCB3YXMgZ2l2ZW4gJyArXG4gICAgICAgICAgICAgICAgYXJndW1lbnRzLmxlbmd0aCArICcgcGFyYW1ldGVycy4gJyArXG4gICAgICAgICAgICAgICAgJ1VzZSBgZWFjaFBhZ2VgIG9yIGBmaXJzdFBhZ2VgIHRvIGZldGNoIHJlY29yZHMuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXy5pc1BsYWluT2JqZWN0KHBhcmFtcykpIHtcbiAgICAgICAgICAgIHZhciB2YWxpZGF0aW9uUmVzdWx0cyA9IFF1ZXJ5LnZhbGlkYXRlUGFyYW1zKHBhcmFtcyk7XG5cbiAgICAgICAgICAgIGlmICh2YWxpZGF0aW9uUmVzdWx0cy5lcnJvcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdmFyIGZvcm1hdHRlZEVycm9ycyA9IHZhbGlkYXRpb25SZXN1bHRzLmVycm9ycy5tYXAoZnVuY3Rpb24oZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICcgICogJyArIGVycm9yO1xuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgYXNzZXJ0KGZhbHNlLCAnQWlydGFibGU6IGludmFsaWQgcGFyYW1ldGVycyBmb3IgYHNlbGVjdGA6XFxuJyArXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlZEVycm9ycy5qb2luKCdcXG4nKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh2YWxpZGF0aW9uUmVzdWx0cy5pZ25vcmVkS2V5cy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0FpcnRhYmxlOiB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnMgdG8gYHNlbGVjdGAgd2lsbCBiZSBpZ25vcmVkOiAnICtcbiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdGlvblJlc3VsdHMuaWdub3JlZEtleXMuam9pbignLCAnKSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBuZXcgUXVlcnkodGhpcywgdmFsaWRhdGlvblJlc3VsdHMudmFsaWRQYXJhbXMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYXNzZXJ0KGZhbHNlLCAnQWlydGFibGU6IHRoZSBwYXJhbWV0ZXIgZm9yIGBzZWxlY3RgIHNob3VsZCBiZSBhIHBsYWluIG9iamVjdCBvciB1bmRlZmluZWQuJyk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIF91cmxFbmNvZGVkTmFtZU9ySWQ6IGZ1bmN0aW9uKCl7XG4gICAgICAgIHJldHVybiB0aGlzLmlkIHx8IGVuY29kZVVSSUNvbXBvbmVudCh0aGlzLm5hbWUpO1xuICAgIH0sXG4gICAgX2NyZWF0ZVJlY29yZDogZnVuY3Rpb24ocmVjb3JkRGF0YSwgb3B0aW9uYWxQYXJhbWV0ZXJzLCBkb25lKSB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgICAgaWYgKCFkb25lKSB7XG4gICAgICAgICAgICBkb25lID0gb3B0aW9uYWxQYXJhbWV0ZXJzO1xuICAgICAgICAgICAgb3B0aW9uYWxQYXJhbWV0ZXJzID0ge307XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHJlcXVlc3REYXRhID0gXy5leHRlbmQoe2ZpZWxkczogcmVjb3JkRGF0YX0sIG9wdGlvbmFsUGFyYW1ldGVycyk7XG4gICAgICAgIHRoaXMuX2Jhc2UucnVuQWN0aW9uKCdwb3N0JywgJy8nICsgdGhhdC5fdXJsRW5jb2RlZE5hbWVPcklkKCkgKyAnLycsIHt9LCByZXF1ZXN0RGF0YSwgZnVuY3Rpb24oZXJyLCByZXNwLCBib2R5KSB7XG4gICAgICAgICAgICBpZiAoZXJyKSB7IGRvbmUoZXJyKTsgcmV0dXJuOyB9XG5cbiAgICAgICAgICAgIHZhciByZWNvcmQgPSBuZXcgUmVjb3JkKHRoYXQsIGJvZHkuaWQsIGJvZHkpO1xuICAgICAgICAgICAgZG9uZShudWxsLCByZWNvcmQpO1xuICAgICAgICB9KTtcbiAgICB9LFxuICAgIF91cGRhdGVSZWNvcmQ6IGZ1bmN0aW9uKHJlY29yZElkLCByZWNvcmREYXRhLCBvcHRzLCBkb25lKSB7XG4gICAgICAgIHZhciByZWNvcmQgPSBuZXcgUmVjb3JkKHRoaXMsIHJlY29yZElkKTtcbiAgICAgICAgcmVjb3JkLnBhdGNoVXBkYXRlKHJlY29yZERhdGEsIG9wdHMsIGRvbmUpO1xuICAgIH0sXG4gICAgX3JlcGxhY2VSZWNvcmQ6IGZ1bmN0aW9uKHJlY29yZElkLCByZWNvcmREYXRhLCBvcHRzLCBkb25lKSB7XG4gICAgICAgIHZhciByZWNvcmQgPSBuZXcgUmVjb3JkKHRoaXMsIHJlY29yZElkKTtcbiAgICAgICAgcmVjb3JkLnB1dFVwZGF0ZShyZWNvcmREYXRhLCBvcHRzLCBkb25lKTtcbiAgICB9LFxuICAgIF9kZXN0cm95UmVjb3JkOiBmdW5jdGlvbihyZWNvcmRJZCwgZG9uZSkge1xuICAgICAgICB2YXIgcmVjb3JkID0gbmV3IFJlY29yZCh0aGlzLCByZWNvcmRJZCk7XG4gICAgICAgIHJlY29yZC5kZXN0cm95KGRvbmUpO1xuICAgIH0sXG4gICAgX2xpc3RSZWNvcmRzOiBmdW5jdGlvbihsaW1pdCwgb2Zmc2V0LCBvcHRzLCBkb25lKSB7XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcblxuICAgICAgICBpZiAoIWRvbmUpIHtcbiAgICAgICAgICAgIGRvbmUgPSBvcHRzO1xuICAgICAgICAgICAgb3B0cyA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIHZhciBsaXN0UmVjb3Jkc1BhcmFtZXRlcnMgPSBfLmV4dGVuZCh7XG4gICAgICAgICAgICBsaW1pdDogbGltaXQsIG9mZnNldDogb2Zmc2V0XG4gICAgICAgIH0sIG9wdHMpO1xuXG4gICAgICAgIGFzeW5jLndhdGVyZmFsbChbXG4gICAgICAgICAgICBmdW5jdGlvbihuZXh0KSB7XG4gICAgICAgICAgICAgICAgdGhhdC5fYmFzZS5ydW5BY3Rpb24oJ2dldCcsICcvJyArIHRoYXQuX3VybEVuY29kZWROYW1lT3JJZCgpICsgJy8nLCBsaXN0UmVjb3Jkc1BhcmFtZXRlcnMsIHt9LCBuZXh0KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmdW5jdGlvbihyZXNwb25zZSwgcmVzdWx0cywgbmV4dCkge1xuICAgICAgICAgICAgICAgIHZhciByZWNvcmRzID0gXy5tYXAocmVzdWx0cy5yZWNvcmRzLCBmdW5jdGlvbihyZWNvcmRKc29uKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUmVjb3JkKHRoYXQsIG51bGwsIHJlY29yZEpzb24pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIG5leHQobnVsbCwgcmVjb3JkcywgcmVzdWx0cy5vZmZzZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICBdLCBkb25lKTtcbiAgICB9LFxuICAgIF9mb3JFYWNoUmVjb3JkOiBmdW5jdGlvbihvcHRzLCBjYWxsYmFjaywgZG9uZSkge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgICAgICAgZG9uZSA9IGNhbGxiYWNrO1xuICAgICAgICAgICAgY2FsbGJhY2sgPSBvcHRzO1xuICAgICAgICAgICAgb3B0cyA9IHt9O1xuICAgICAgICB9XG4gICAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgICAgdmFyIGxpbWl0ID0gVGFibGUuX19yZWNvcmRzUGVyUGFnZUZvckl0ZXJhdGlvbiB8fCAxMDA7XG4gICAgICAgIHZhciBvZmZzZXQgPSBudWxsO1xuXG4gICAgICAgIHZhciBuZXh0UGFnZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhhdC5fbGlzdFJlY29yZHMobGltaXQsIG9mZnNldCwgb3B0cywgZnVuY3Rpb24oZXJyLCBwYWdlLCBuZXdPZmZzZXQpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7IGRvbmUoZXJyKTsgcmV0dXJuOyB9XG5cbiAgICAgICAgICAgICAgICBfLmVhY2gocGFnZSwgY2FsbGJhY2spO1xuXG4gICAgICAgICAgICAgICAgaWYgKG5ld09mZnNldCkge1xuICAgICAgICAgICAgICAgICAgICBvZmZzZXQgPSBuZXdPZmZzZXQ7XG4gICAgICAgICAgICAgICAgICAgIG5leHRQYWdlKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICBuZXh0UGFnZSgpO1xuICAgIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFRhYmxlO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG5mdW5jdGlvbiBjaGVjayhmbiwgZXJyb3IpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgaWYgKGZuKHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHtwYXNzOiB0cnVlfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB7cGFzczogZmFsc2UsIGVycm9yOiBlcnJvcn07XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5jaGVjay5pc09uZU9mID0gZnVuY3Rpb24gaXNPbmVPZihvcHRpb25zKSB7XG4gICAgcmV0dXJuIF8uY29udGFpbnMuYmluZCh0aGlzLCBvcHRpb25zKTtcbn07XG5cbmNoZWNrLmlzQXJyYXlPZiA9IGZ1bmN0aW9uKGl0ZW1WYWxpZGF0b3IpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIF8uaXNBcnJheSh2YWx1ZSkgJiYgXy5ldmVyeSh2YWx1ZSwgaXRlbVZhbGlkYXRvcik7XG4gICAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY2hlY2s7XG4iLCIvKiFcbiAqIGFzeW5jXG4gKiBodHRwczovL2dpdGh1Yi5jb20vY2FvbGFuL2FzeW5jXG4gKlxuICogQ29weXJpZ2h0IDIwMTAtMjAxNCBDYW9sYW4gTWNNYWhvblxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKi9cbihmdW5jdGlvbiAoKSB7XG5cbiAgICB2YXIgYXN5bmMgPSB7fTtcbiAgICBmdW5jdGlvbiBub29wKCkge31cbiAgICBmdW5jdGlvbiBpZGVudGl0eSh2KSB7XG4gICAgICAgIHJldHVybiB2O1xuICAgIH1cbiAgICBmdW5jdGlvbiB0b0Jvb2wodikge1xuICAgICAgICByZXR1cm4gISF2O1xuICAgIH1cbiAgICBmdW5jdGlvbiBub3RJZCh2KSB7XG4gICAgICAgIHJldHVybiAhdjtcbiAgICB9XG5cbiAgICAvLyBnbG9iYWwgb24gdGhlIHNlcnZlciwgd2luZG93IGluIHRoZSBicm93c2VyXG4gICAgdmFyIHByZXZpb3VzX2FzeW5jO1xuXG4gICAgLy8gRXN0YWJsaXNoIHRoZSByb290IG9iamVjdCwgYHdpbmRvd2AgKGBzZWxmYCkgaW4gdGhlIGJyb3dzZXIsIGBnbG9iYWxgXG4gICAgLy8gb24gdGhlIHNlcnZlciwgb3IgYHRoaXNgIGluIHNvbWUgdmlydHVhbCBtYWNoaW5lcy4gV2UgdXNlIGBzZWxmYFxuICAgIC8vIGluc3RlYWQgb2YgYHdpbmRvd2AgZm9yIGBXZWJXb3JrZXJgIHN1cHBvcnQuXG4gICAgdmFyIHJvb3QgPSB0eXBlb2Ygc2VsZiA9PT0gJ29iamVjdCcgJiYgc2VsZi5zZWxmID09PSBzZWxmICYmIHNlbGYgfHxcbiAgICAgICAgICAgIHR5cGVvZiBnbG9iYWwgPT09ICdvYmplY3QnICYmIGdsb2JhbC5nbG9iYWwgPT09IGdsb2JhbCAmJiBnbG9iYWwgfHxcbiAgICAgICAgICAgIHRoaXM7XG5cbiAgICBpZiAocm9vdCAhPSBudWxsKSB7XG4gICAgICAgIHByZXZpb3VzX2FzeW5jID0gcm9vdC5hc3luYztcbiAgICB9XG5cbiAgICBhc3luYy5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByb290LmFzeW5jID0gcHJldmlvdXNfYXN5bmM7XG4gICAgICAgIHJldHVybiBhc3luYztcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gb25seV9vbmNlKGZuKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmIChmbiA9PT0gbnVsbCkgdGhyb3cgbmV3IEVycm9yKFwiQ2FsbGJhY2sgd2FzIGFscmVhZHkgY2FsbGVkLlwiKTtcbiAgICAgICAgICAgIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICBmbiA9IG51bGw7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX29uY2UoZm4pIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKGZuID09PSBudWxsKSByZXR1cm47XG4gICAgICAgICAgICBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgZm4gPSBudWxsO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8vLy8gY3Jvc3MtYnJvd3NlciBjb21wYXRpYmxpdHkgZnVuY3Rpb25zIC8vLy9cblxuICAgIHZhciBfdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4gICAgdmFyIF9pc0FycmF5ID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHJldHVybiBfdG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBBcnJheV0nO1xuICAgIH07XG5cbiAgICAvLyBQb3J0ZWQgZnJvbSB1bmRlcnNjb3JlLmpzIGlzT2JqZWN0XG4gICAgdmFyIF9pc09iamVjdCA9IGZ1bmN0aW9uKG9iaikge1xuICAgICAgICB2YXIgdHlwZSA9IHR5cGVvZiBvYmo7XG4gICAgICAgIHJldHVybiB0eXBlID09PSAnZnVuY3Rpb24nIHx8IHR5cGUgPT09ICdvYmplY3QnICYmICEhb2JqO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBfaXNBcnJheUxpa2UoYXJyKSB7XG4gICAgICAgIHJldHVybiBfaXNBcnJheShhcnIpIHx8IChcbiAgICAgICAgICAgIC8vIGhhcyBhIHBvc2l0aXZlIGludGVnZXIgbGVuZ3RoIHByb3BlcnR5XG4gICAgICAgICAgICB0eXBlb2YgYXJyLmxlbmd0aCA9PT0gXCJudW1iZXJcIiAmJlxuICAgICAgICAgICAgYXJyLmxlbmd0aCA+PSAwICYmXG4gICAgICAgICAgICBhcnIubGVuZ3RoICUgMSA9PT0gMFxuICAgICAgICApO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIF9hcnJheUVhY2goYXJyLCBpdGVyYXRvcikge1xuICAgICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICAgIGxlbmd0aCA9IGFyci5sZW5ndGg7XG5cbiAgICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICAgIGl0ZXJhdG9yKGFycltpbmRleF0sIGluZGV4LCBhcnIpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX21hcChhcnIsIGl0ZXJhdG9yKSB7XG4gICAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgICAgbGVuZ3RoID0gYXJyLmxlbmd0aCxcbiAgICAgICAgICAgIHJlc3VsdCA9IEFycmF5KGxlbmd0aCk7XG5cbiAgICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICAgIHJlc3VsdFtpbmRleF0gPSBpdGVyYXRvcihhcnJbaW5kZXhdLCBpbmRleCwgYXJyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIF9yYW5nZShjb3VudCkge1xuICAgICAgICByZXR1cm4gX21hcChBcnJheShjb3VudCksIGZ1bmN0aW9uICh2LCBpKSB7IHJldHVybiBpOyB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfcmVkdWNlKGFyciwgaXRlcmF0b3IsIG1lbW8pIHtcbiAgICAgICAgX2FycmF5RWFjaChhcnIsIGZ1bmN0aW9uICh4LCBpLCBhKSB7XG4gICAgICAgICAgICBtZW1vID0gaXRlcmF0b3IobWVtbywgeCwgaSwgYSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbWVtbztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBfZm9yRWFjaE9mKG9iamVjdCwgaXRlcmF0b3IpIHtcbiAgICAgICAgX2FycmF5RWFjaChfa2V5cyhvYmplY3QpLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICBpdGVyYXRvcihvYmplY3Rba2V5XSwga2V5KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX2luZGV4T2YoYXJyLCBpdGVtKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoYXJyW2ldID09PSBpdGVtKSByZXR1cm4gaTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxuXG4gICAgdmFyIF9rZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xuICAgICAgICB2YXIga2V5cyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBrIGluIG9iaikge1xuICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrKSkge1xuICAgICAgICAgICAgICAgIGtleXMucHVzaChrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ga2V5cztcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gX2tleUl0ZXJhdG9yKGNvbGwpIHtcbiAgICAgICAgdmFyIGkgPSAtMTtcbiAgICAgICAgdmFyIGxlbjtcbiAgICAgICAgdmFyIGtleXM7XG4gICAgICAgIGlmIChfaXNBcnJheUxpa2UoY29sbCkpIHtcbiAgICAgICAgICAgIGxlbiA9IGNvbGwubGVuZ3RoO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgICAgIHJldHVybiBpIDwgbGVuID8gaSA6IG51bGw7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAga2V5cyA9IF9rZXlzKGNvbGwpO1xuICAgICAgICAgICAgbGVuID0ga2V5cy5sZW5ndGg7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gbmV4dCgpIHtcbiAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGkgPCBsZW4gPyBrZXlzW2ldIDogbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBTaW1pbGFyIHRvIEVTNidzIHJlc3QgcGFyYW0gKGh0dHA6Ly9hcml5YS5vZmlsYWJzLmNvbS8yMDEzLzAzL2VzNi1hbmQtcmVzdC1wYXJhbWV0ZXIuaHRtbClcbiAgICAvLyBUaGlzIGFjY3VtdWxhdGVzIHRoZSBhcmd1bWVudHMgcGFzc2VkIGludG8gYW4gYXJyYXksIGFmdGVyIGEgZ2l2ZW4gaW5kZXguXG4gICAgLy8gRnJvbSB1bmRlcnNjb3JlLmpzIChodHRwczovL2dpdGh1Yi5jb20vamFzaGtlbmFzL3VuZGVyc2NvcmUvcHVsbC8yMTQwKS5cbiAgICBmdW5jdGlvbiBfcmVzdFBhcmFtKGZ1bmMsIHN0YXJ0SW5kZXgpIHtcbiAgICAgICAgc3RhcnRJbmRleCA9IHN0YXJ0SW5kZXggPT0gbnVsbCA/IGZ1bmMubGVuZ3RoIC0gMSA6ICtzdGFydEluZGV4O1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgbGVuZ3RoID0gTWF0aC5tYXgoYXJndW1lbnRzLmxlbmd0aCAtIHN0YXJ0SW5kZXgsIDApO1xuICAgICAgICAgICAgdmFyIHJlc3QgPSBBcnJheShsZW5ndGgpO1xuICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgICAgICAgICAgIHJlc3RbaW5kZXhdID0gYXJndW1lbnRzW2luZGV4ICsgc3RhcnRJbmRleF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzd2l0Y2ggKHN0YXJ0SW5kZXgpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IHJldHVybiBmdW5jLmNhbGwodGhpcywgcmVzdCk7XG4gICAgICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gZnVuYy5jYWxsKHRoaXMsIGFyZ3VtZW50c1swXSwgcmVzdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBDdXJyZW50bHkgdW51c2VkIGJ1dCBoYW5kbGUgY2FzZXMgb3V0c2lkZSBvZiB0aGUgc3dpdGNoIHN0YXRlbWVudDpcbiAgICAgICAgICAgIC8vIHZhciBhcmdzID0gQXJyYXkoc3RhcnRJbmRleCArIDEpO1xuICAgICAgICAgICAgLy8gZm9yIChpbmRleCA9IDA7IGluZGV4IDwgc3RhcnRJbmRleDsgaW5kZXgrKykge1xuICAgICAgICAgICAgLy8gICAgIGFyZ3NbaW5kZXhdID0gYXJndW1lbnRzW2luZGV4XTtcbiAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgIC8vIGFyZ3Nbc3RhcnRJbmRleF0gPSByZXN0O1xuICAgICAgICAgICAgLy8gcmV0dXJuIGZ1bmMuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX3dpdGhvdXRJbmRleChpdGVyYXRvcikge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlLCBpbmRleCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVyYXRvcih2YWx1ZSwgY2FsbGJhY2spO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8vLy8gZXhwb3J0ZWQgYXN5bmMgbW9kdWxlIGZ1bmN0aW9ucyAvLy8vXG5cbiAgICAvLy8vIG5leHRUaWNrIGltcGxlbWVudGF0aW9uIHdpdGggYnJvd3Nlci1jb21wYXRpYmxlIGZhbGxiYWNrIC8vLy9cblxuICAgIC8vIGNhcHR1cmUgdGhlIGdsb2JhbCByZWZlcmVuY2UgdG8gZ3VhcmQgYWdhaW5zdCBmYWtlVGltZXIgbW9ja3NcbiAgICB2YXIgX3NldEltbWVkaWF0ZSA9IHR5cGVvZiBzZXRJbW1lZGlhdGUgPT09ICdmdW5jdGlvbicgJiYgc2V0SW1tZWRpYXRlO1xuXG4gICAgdmFyIF9kZWxheSA9IF9zZXRJbW1lZGlhdGUgPyBmdW5jdGlvbihmbikge1xuICAgICAgICAvLyBub3QgYSBkaXJlY3QgYWxpYXMgZm9yIElFMTAgY29tcGF0aWJpbGl0eVxuICAgICAgICBfc2V0SW1tZWRpYXRlKGZuKTtcbiAgICB9IDogZnVuY3Rpb24oZm4pIHtcbiAgICAgICAgc2V0VGltZW91dChmbiwgMCk7XG4gICAgfTtcblxuICAgIGlmICh0eXBlb2YgcHJvY2VzcyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHByb2Nlc3MubmV4dFRpY2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgYXN5bmMubmV4dFRpY2sgPSBwcm9jZXNzLm5leHRUaWNrO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGFzeW5jLm5leHRUaWNrID0gX2RlbGF5O1xuICAgIH1cbiAgICBhc3luYy5zZXRJbW1lZGlhdGUgPSBfc2V0SW1tZWRpYXRlID8gX2RlbGF5IDogYXN5bmMubmV4dFRpY2s7XG5cblxuICAgIGFzeW5jLmZvckVhY2ggPVxuICAgIGFzeW5jLmVhY2ggPSBmdW5jdGlvbiAoYXJyLCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGFzeW5jLmVhY2hPZihhcnIsIF93aXRob3V0SW5kZXgoaXRlcmF0b3IpLCBjYWxsYmFjayk7XG4gICAgfTtcblxuICAgIGFzeW5jLmZvckVhY2hTZXJpZXMgPVxuICAgIGFzeW5jLmVhY2hTZXJpZXMgPSBmdW5jdGlvbiAoYXJyLCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGFzeW5jLmVhY2hPZlNlcmllcyhhcnIsIF93aXRob3V0SW5kZXgoaXRlcmF0b3IpLCBjYWxsYmFjayk7XG4gICAgfTtcblxuXG4gICAgYXN5bmMuZm9yRWFjaExpbWl0ID1cbiAgICBhc3luYy5lYWNoTGltaXQgPSBmdW5jdGlvbiAoYXJyLCBsaW1pdCwgaXRlcmF0b3IsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBfZWFjaE9mTGltaXQobGltaXQpKGFyciwgX3dpdGhvdXRJbmRleChpdGVyYXRvciksIGNhbGxiYWNrKTtcbiAgICB9O1xuXG4gICAgYXN5bmMuZm9yRWFjaE9mID1cbiAgICBhc3luYy5lYWNoT2YgPSBmdW5jdGlvbiAob2JqZWN0LCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgY2FsbGJhY2sgPSBfb25jZShjYWxsYmFjayB8fCBub29wKTtcbiAgICAgICAgb2JqZWN0ID0gb2JqZWN0IHx8IFtdO1xuXG4gICAgICAgIHZhciBpdGVyID0gX2tleUl0ZXJhdG9yKG9iamVjdCk7XG4gICAgICAgIHZhciBrZXksIGNvbXBsZXRlZCA9IDA7XG5cbiAgICAgICAgd2hpbGUgKChrZXkgPSBpdGVyKCkpICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbXBsZXRlZCArPSAxO1xuICAgICAgICAgICAgaXRlcmF0b3Iob2JqZWN0W2tleV0sIGtleSwgb25seV9vbmNlKGRvbmUpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb21wbGV0ZWQgPT09IDApIGNhbGxiYWNrKG51bGwpO1xuXG4gICAgICAgIGZ1bmN0aW9uIGRvbmUoZXJyKSB7XG4gICAgICAgICAgICBjb21wbGV0ZWQtLTtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQ2hlY2sga2V5IGlzIG51bGwgaW4gY2FzZSBpdGVyYXRvciBpc24ndCBleGhhdXN0ZWRcbiAgICAgICAgICAgIC8vIGFuZCBkb25lIHJlc29sdmVkIHN5bmNocm9ub3VzbHkuXG4gICAgICAgICAgICBlbHNlIGlmIChrZXkgPT09IG51bGwgJiYgY29tcGxldGVkIDw9IDApIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBhc3luYy5mb3JFYWNoT2ZTZXJpZXMgPVxuICAgIGFzeW5jLmVhY2hPZlNlcmllcyA9IGZ1bmN0aW9uIChvYmosIGl0ZXJhdG9yLCBjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayA9IF9vbmNlKGNhbGxiYWNrIHx8IG5vb3ApO1xuICAgICAgICBvYmogPSBvYmogfHwgW107XG4gICAgICAgIHZhciBuZXh0S2V5ID0gX2tleUl0ZXJhdG9yKG9iaik7XG4gICAgICAgIHZhciBrZXkgPSBuZXh0S2V5KCk7XG4gICAgICAgIGZ1bmN0aW9uIGl0ZXJhdGUoKSB7XG4gICAgICAgICAgICB2YXIgc3luYyA9IHRydWU7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaXRlcmF0b3Iob2JqW2tleV0sIGtleSwgb25seV9vbmNlKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBrZXkgPSBuZXh0S2V5KCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChrZXkgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzeW5jKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXN5bmMuc2V0SW1tZWRpYXRlKGl0ZXJhdGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVyYXRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBzeW5jID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaXRlcmF0ZSgpO1xuICAgIH07XG5cblxuXG4gICAgYXN5bmMuZm9yRWFjaE9mTGltaXQgPVxuICAgIGFzeW5jLmVhY2hPZkxpbWl0ID0gZnVuY3Rpb24gKG9iaiwgbGltaXQsIGl0ZXJhdG9yLCBjYWxsYmFjaykge1xuICAgICAgICBfZWFjaE9mTGltaXQobGltaXQpKG9iaiwgaXRlcmF0b3IsIGNhbGxiYWNrKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gX2VhY2hPZkxpbWl0KGxpbWl0KSB7XG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChvYmosIGl0ZXJhdG9yLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgY2FsbGJhY2sgPSBfb25jZShjYWxsYmFjayB8fCBub29wKTtcbiAgICAgICAgICAgIG9iaiA9IG9iaiB8fCBbXTtcbiAgICAgICAgICAgIHZhciBuZXh0S2V5ID0gX2tleUl0ZXJhdG9yKG9iaik7XG4gICAgICAgICAgICBpZiAobGltaXQgPD0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBkb25lID0gZmFsc2U7XG4gICAgICAgICAgICB2YXIgcnVubmluZyA9IDA7XG4gICAgICAgICAgICB2YXIgZXJyb3JlZCA9IGZhbHNlO1xuXG4gICAgICAgICAgICAoZnVuY3Rpb24gcmVwbGVuaXNoICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoZG9uZSAmJiBydW5uaW5nIDw9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHdoaWxlIChydW5uaW5nIDwgbGltaXQgJiYgIWVycm9yZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IG5leHRLZXkoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocnVubmluZyA8PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcnVubmluZyArPSAxO1xuICAgICAgICAgICAgICAgICAgICBpdGVyYXRvcihvYmpba2V5XSwga2V5LCBvbmx5X29uY2UoZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcnVubmluZyAtPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3JlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXBsZW5pc2goKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pKCk7XG4gICAgICAgIH07XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBkb1BhcmFsbGVsKGZuKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAob2JqLCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHJldHVybiBmbihhc3luYy5lYWNoT2YsIG9iaiwgaXRlcmF0b3IsIGNhbGxiYWNrKTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZG9QYXJhbGxlbExpbWl0KGZuKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAob2JqLCBsaW1pdCwgaXRlcmF0b3IsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICByZXR1cm4gZm4oX2VhY2hPZkxpbWl0KGxpbWl0KSwgb2JqLCBpdGVyYXRvciwgY2FsbGJhY2spO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBkb1Nlcmllcyhmbikge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKG9iaiwgaXRlcmF0b3IsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICByZXR1cm4gZm4oYXN5bmMuZWFjaE9mU2VyaWVzLCBvYmosIGl0ZXJhdG9yLCBjYWxsYmFjayk7XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gX2FzeW5jTWFwKGVhY2hmbiwgYXJyLCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgY2FsbGJhY2sgPSBfb25jZShjYWxsYmFjayB8fCBub29wKTtcbiAgICAgICAgYXJyID0gYXJyIHx8IFtdO1xuICAgICAgICB2YXIgcmVzdWx0cyA9IF9pc0FycmF5TGlrZShhcnIpID8gW10gOiB7fTtcbiAgICAgICAgZWFjaGZuKGFyciwgZnVuY3Rpb24gKHZhbHVlLCBpbmRleCwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIGl0ZXJhdG9yKHZhbHVlLCBmdW5jdGlvbiAoZXJyLCB2KSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0c1tpbmRleF0gPSB2O1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgY2FsbGJhY2soZXJyLCByZXN1bHRzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYXN5bmMubWFwID0gZG9QYXJhbGxlbChfYXN5bmNNYXApO1xuICAgIGFzeW5jLm1hcFNlcmllcyA9IGRvU2VyaWVzKF9hc3luY01hcCk7XG4gICAgYXN5bmMubWFwTGltaXQgPSBkb1BhcmFsbGVsTGltaXQoX2FzeW5jTWFwKTtcblxuICAgIC8vIHJlZHVjZSBvbmx5IGhhcyBhIHNlcmllcyB2ZXJzaW9uLCBhcyBkb2luZyByZWR1Y2UgaW4gcGFyYWxsZWwgd29uJ3RcbiAgICAvLyB3b3JrIGluIG1hbnkgc2l0dWF0aW9ucy5cbiAgICBhc3luYy5pbmplY3QgPVxuICAgIGFzeW5jLmZvbGRsID1cbiAgICBhc3luYy5yZWR1Y2UgPSBmdW5jdGlvbiAoYXJyLCBtZW1vLCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgYXN5bmMuZWFjaE9mU2VyaWVzKGFyciwgZnVuY3Rpb24gKHgsIGksIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBpdGVyYXRvcihtZW1vLCB4LCBmdW5jdGlvbiAoZXJyLCB2KSB7XG4gICAgICAgICAgICAgICAgbWVtbyA9IHY7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICBjYWxsYmFjayhlcnIsIG1lbW8pO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgYXN5bmMuZm9sZHIgPVxuICAgIGFzeW5jLnJlZHVjZVJpZ2h0ID0gZnVuY3Rpb24gKGFyciwgbWVtbywgaXRlcmF0b3IsIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciByZXZlcnNlZCA9IF9tYXAoYXJyLCBpZGVudGl0eSkucmV2ZXJzZSgpO1xuICAgICAgICBhc3luYy5yZWR1Y2UocmV2ZXJzZWQsIG1lbW8sIGl0ZXJhdG9yLCBjYWxsYmFjayk7XG4gICAgfTtcblxuICAgIGFzeW5jLnRyYW5zZm9ybSA9IGZ1bmN0aW9uIChhcnIsIG1lbW8sIGl0ZXJhdG9yLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMykge1xuICAgICAgICAgICAgY2FsbGJhY2sgPSBpdGVyYXRvcjtcbiAgICAgICAgICAgIGl0ZXJhdG9yID0gbWVtbztcbiAgICAgICAgICAgIG1lbW8gPSBfaXNBcnJheShhcnIpID8gW10gOiB7fTtcbiAgICAgICAgfVxuXG4gICAgICAgIGFzeW5jLmVhY2hPZihhcnIsIGZ1bmN0aW9uKHYsIGssIGNiKSB7XG4gICAgICAgICAgICBpdGVyYXRvcihtZW1vLCB2LCBrLCBjYik7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgY2FsbGJhY2soZXJyLCBtZW1vKTtcbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIF9maWx0ZXIoZWFjaGZuLCBhcnIsIGl0ZXJhdG9yLCBjYWxsYmFjaykge1xuICAgICAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgICAgICBlYWNoZm4oYXJyLCBmdW5jdGlvbiAoeCwgaW5kZXgsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBpdGVyYXRvcih4LCBmdW5jdGlvbiAodikge1xuICAgICAgICAgICAgICAgIGlmICh2KSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7aW5kZXg6IGluZGV4LCB2YWx1ZTogeH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKF9tYXAocmVzdWx0cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGEuaW5kZXggLSBiLmluZGV4O1xuICAgICAgICAgICAgfSksIGZ1bmN0aW9uICh4KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHgudmFsdWU7XG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFzeW5jLnNlbGVjdCA9XG4gICAgYXN5bmMuZmlsdGVyID0gZG9QYXJhbGxlbChfZmlsdGVyKTtcblxuICAgIGFzeW5jLnNlbGVjdExpbWl0ID1cbiAgICBhc3luYy5maWx0ZXJMaW1pdCA9IGRvUGFyYWxsZWxMaW1pdChfZmlsdGVyKTtcblxuICAgIGFzeW5jLnNlbGVjdFNlcmllcyA9XG4gICAgYXN5bmMuZmlsdGVyU2VyaWVzID0gZG9TZXJpZXMoX2ZpbHRlcik7XG5cbiAgICBmdW5jdGlvbiBfcmVqZWN0KGVhY2hmbiwgYXJyLCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgX2ZpbHRlcihlYWNoZm4sIGFyciwgZnVuY3Rpb24odmFsdWUsIGNiKSB7XG4gICAgICAgICAgICBpdGVyYXRvcih2YWx1ZSwgZnVuY3Rpb24odikge1xuICAgICAgICAgICAgICAgIGNiKCF2KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBjYWxsYmFjayk7XG4gICAgfVxuICAgIGFzeW5jLnJlamVjdCA9IGRvUGFyYWxsZWwoX3JlamVjdCk7XG4gICAgYXN5bmMucmVqZWN0TGltaXQgPSBkb1BhcmFsbGVsTGltaXQoX3JlamVjdCk7XG4gICAgYXN5bmMucmVqZWN0U2VyaWVzID0gZG9TZXJpZXMoX3JlamVjdCk7XG5cbiAgICBmdW5jdGlvbiBfY3JlYXRlVGVzdGVyKGVhY2hmbiwgY2hlY2ssIGdldFJlc3VsdCkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oYXJyLCBsaW1pdCwgaXRlcmF0b3IsIGNiKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBkb25lKCkge1xuICAgICAgICAgICAgICAgIGlmIChjYikgY2IoZ2V0UmVzdWx0KGZhbHNlLCB2b2lkIDApKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGl0ZXJhdGVlKHgsIF8sIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYikgcmV0dXJuIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgaXRlcmF0b3IoeCwgZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNiICYmIGNoZWNrKHYpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYihnZXRSZXN1bHQodHJ1ZSwgeCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2IgPSBpdGVyYXRvciA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDMpIHtcbiAgICAgICAgICAgICAgICBlYWNoZm4oYXJyLCBsaW1pdCwgaXRlcmF0ZWUsIGRvbmUpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjYiA9IGl0ZXJhdG9yO1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yID0gbGltaXQ7XG4gICAgICAgICAgICAgICAgZWFjaGZuKGFyciwgaXRlcmF0ZWUsIGRvbmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGFzeW5jLmFueSA9XG4gICAgYXN5bmMuc29tZSA9IF9jcmVhdGVUZXN0ZXIoYXN5bmMuZWFjaE9mLCB0b0Jvb2wsIGlkZW50aXR5KTtcblxuICAgIGFzeW5jLnNvbWVMaW1pdCA9IF9jcmVhdGVUZXN0ZXIoYXN5bmMuZWFjaE9mTGltaXQsIHRvQm9vbCwgaWRlbnRpdHkpO1xuXG4gICAgYXN5bmMuYWxsID1cbiAgICBhc3luYy5ldmVyeSA9IF9jcmVhdGVUZXN0ZXIoYXN5bmMuZWFjaE9mLCBub3RJZCwgbm90SWQpO1xuXG4gICAgYXN5bmMuZXZlcnlMaW1pdCA9IF9jcmVhdGVUZXN0ZXIoYXN5bmMuZWFjaE9mTGltaXQsIG5vdElkLCBub3RJZCk7XG5cbiAgICBmdW5jdGlvbiBfZmluZEdldFJlc3VsdCh2LCB4KSB7XG4gICAgICAgIHJldHVybiB4O1xuICAgIH1cbiAgICBhc3luYy5kZXRlY3QgPSBfY3JlYXRlVGVzdGVyKGFzeW5jLmVhY2hPZiwgaWRlbnRpdHksIF9maW5kR2V0UmVzdWx0KTtcbiAgICBhc3luYy5kZXRlY3RTZXJpZXMgPSBfY3JlYXRlVGVzdGVyKGFzeW5jLmVhY2hPZlNlcmllcywgaWRlbnRpdHksIF9maW5kR2V0UmVzdWx0KTtcbiAgICBhc3luYy5kZXRlY3RMaW1pdCA9IF9jcmVhdGVUZXN0ZXIoYXN5bmMuZWFjaE9mTGltaXQsIGlkZW50aXR5LCBfZmluZEdldFJlc3VsdCk7XG5cbiAgICBhc3luYy5zb3J0QnkgPSBmdW5jdGlvbiAoYXJyLCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgYXN5bmMubWFwKGFyciwgZnVuY3Rpb24gKHgsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBpdGVyYXRvcih4LCBmdW5jdGlvbiAoZXJyLCBjcml0ZXJpYSkge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHt2YWx1ZTogeCwgY3JpdGVyaWE6IGNyaXRlcmlhfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChlcnIsIHJlc3VsdHMpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIF9tYXAocmVzdWx0cy5zb3J0KGNvbXBhcmF0b3IpLCBmdW5jdGlvbiAoeCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4geC52YWx1ZTtcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSk7XG5cbiAgICAgICAgZnVuY3Rpb24gY29tcGFyYXRvcihsZWZ0LCByaWdodCkge1xuICAgICAgICAgICAgdmFyIGEgPSBsZWZ0LmNyaXRlcmlhLCBiID0gcmlnaHQuY3JpdGVyaWE7XG4gICAgICAgICAgICByZXR1cm4gYSA8IGIgPyAtMSA6IGEgPiBiID8gMSA6IDA7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgYXN5bmMuYXV0byA9IGZ1bmN0aW9uICh0YXNrcywgY29uY3VycmVuY3ksIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzFdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAvLyBjb25jdXJyZW5jeSBpcyBvcHRpb25hbCwgc2hpZnQgdGhlIGFyZ3MuXG4gICAgICAgICAgICBjYWxsYmFjayA9IGNvbmN1cnJlbmN5O1xuICAgICAgICAgICAgY29uY3VycmVuY3kgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNhbGxiYWNrID0gX29uY2UoY2FsbGJhY2sgfHwgbm9vcCk7XG4gICAgICAgIHZhciBrZXlzID0gX2tleXModGFza3MpO1xuICAgICAgICB2YXIgcmVtYWluaW5nVGFza3MgPSBrZXlzLmxlbmd0aDtcbiAgICAgICAgaWYgKCFyZW1haW5pbmdUYXNrcykge1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghY29uY3VycmVuY3kpIHtcbiAgICAgICAgICAgIGNvbmN1cnJlbmN5ID0gcmVtYWluaW5nVGFza3M7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVzdWx0cyA9IHt9O1xuICAgICAgICB2YXIgcnVubmluZ1Rhc2tzID0gMDtcblxuICAgICAgICB2YXIgaGFzRXJyb3IgPSBmYWxzZTtcblxuICAgICAgICB2YXIgbGlzdGVuZXJzID0gW107XG4gICAgICAgIGZ1bmN0aW9uIGFkZExpc3RlbmVyKGZuKSB7XG4gICAgICAgICAgICBsaXN0ZW5lcnMudW5zaGlmdChmbik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcmVtb3ZlTGlzdGVuZXIoZm4pIHtcbiAgICAgICAgICAgIHZhciBpZHggPSBfaW5kZXhPZihsaXN0ZW5lcnMsIGZuKTtcbiAgICAgICAgICAgIGlmIChpZHggPj0gMCkgbGlzdGVuZXJzLnNwbGljZShpZHgsIDEpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRhc2tDb21wbGV0ZSgpIHtcbiAgICAgICAgICAgIHJlbWFpbmluZ1Rhc2tzLS07XG4gICAgICAgICAgICBfYXJyYXlFYWNoKGxpc3RlbmVycy5zbGljZSgwKSwgZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgICAgICAgICAgZm4oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgYWRkTGlzdGVuZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCFyZW1haW5pbmdUYXNrcykge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHJlc3VsdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBfYXJyYXlFYWNoKGtleXMsIGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgICBpZiAoaGFzRXJyb3IpIHJldHVybjtcbiAgICAgICAgICAgIHZhciB0YXNrID0gX2lzQXJyYXkodGFza3Nba10pID8gdGFza3Nba106IFt0YXNrc1trXV07XG4gICAgICAgICAgICB2YXIgdGFza0NhbGxiYWNrID0gX3Jlc3RQYXJhbShmdW5jdGlvbihlcnIsIGFyZ3MpIHtcbiAgICAgICAgICAgICAgICBydW5uaW5nVGFza3MtLTtcbiAgICAgICAgICAgICAgICBpZiAoYXJncy5sZW5ndGggPD0gMSkge1xuICAgICAgICAgICAgICAgICAgICBhcmdzID0gYXJnc1swXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgc2FmZVJlc3VsdHMgPSB7fTtcbiAgICAgICAgICAgICAgICAgICAgX2ZvckVhY2hPZihyZXN1bHRzLCBmdW5jdGlvbih2YWwsIHJrZXkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNhZmVSZXN1bHRzW3JrZXldID0gdmFsO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgc2FmZVJlc3VsdHNba10gPSBhcmdzO1xuICAgICAgICAgICAgICAgICAgICBoYXNFcnJvciA9IHRydWU7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyLCBzYWZlUmVzdWx0cyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRzW2tdID0gYXJncztcbiAgICAgICAgICAgICAgICAgICAgYXN5bmMuc2V0SW1tZWRpYXRlKHRhc2tDb21wbGV0ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB2YXIgcmVxdWlyZXMgPSB0YXNrLnNsaWNlKDAsIHRhc2subGVuZ3RoIC0gMSk7XG4gICAgICAgICAgICAvLyBwcmV2ZW50IGRlYWQtbG9ja3NcbiAgICAgICAgICAgIHZhciBsZW4gPSByZXF1aXJlcy5sZW5ndGg7XG4gICAgICAgICAgICB2YXIgZGVwO1xuICAgICAgICAgICAgd2hpbGUgKGxlbi0tKSB7XG4gICAgICAgICAgICAgICAgaWYgKCEoZGVwID0gdGFza3NbcmVxdWlyZXNbbGVuXV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzIG5vbmV4aXN0ZW50IGRlcGVuZGVuY3kgaW4gJyArIHJlcXVpcmVzLmpvaW4oJywgJykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoX2lzQXJyYXkoZGVwKSAmJiBfaW5kZXhPZihkZXAsIGspID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXMgY3ljbGljIGRlcGVuZGVuY2llcycpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIHJlYWR5KCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBydW5uaW5nVGFza3MgPCBjb25jdXJyZW5jeSAmJiBfcmVkdWNlKHJlcXVpcmVzLCBmdW5jdGlvbiAoYSwgeCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGEgJiYgcmVzdWx0cy5oYXNPd25Qcm9wZXJ0eSh4KSk7XG4gICAgICAgICAgICAgICAgfSwgdHJ1ZSkgJiYgIXJlc3VsdHMuaGFzT3duUHJvcGVydHkoayk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocmVhZHkoKSkge1xuICAgICAgICAgICAgICAgIHJ1bm5pbmdUYXNrcysrO1xuICAgICAgICAgICAgICAgIHRhc2tbdGFzay5sZW5ndGggLSAxXSh0YXNrQ2FsbGJhY2ssIHJlc3VsdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgYWRkTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gbGlzdGVuZXIoKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlYWR5KCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcnVubmluZ1Rhc2tzKys7XG4gICAgICAgICAgICAgICAgICAgIHJlbW92ZUxpc3RlbmVyKGxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICAgICAgdGFza1t0YXNrLmxlbmd0aCAtIDFdKHRhc2tDYWxsYmFjaywgcmVzdWx0cyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG5cblxuICAgIGFzeW5jLnJldHJ5ID0gZnVuY3Rpb24odGltZXMsIHRhc2ssIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBERUZBVUxUX1RJTUVTID0gNTtcbiAgICAgICAgdmFyIERFRkFVTFRfSU5URVJWQUwgPSAwO1xuXG4gICAgICAgIHZhciBhdHRlbXB0cyA9IFtdO1xuXG4gICAgICAgIHZhciBvcHRzID0ge1xuICAgICAgICAgICAgdGltZXM6IERFRkFVTFRfVElNRVMsXG4gICAgICAgICAgICBpbnRlcnZhbDogREVGQVVMVF9JTlRFUlZBTFxuICAgICAgICB9O1xuXG4gICAgICAgIGZ1bmN0aW9uIHBhcnNlVGltZXMoYWNjLCB0KXtcbiAgICAgICAgICAgIGlmKHR5cGVvZiB0ID09PSAnbnVtYmVyJyl7XG4gICAgICAgICAgICAgICAgYWNjLnRpbWVzID0gcGFyc2VJbnQodCwgMTApIHx8IERFRkFVTFRfVElNRVM7XG4gICAgICAgICAgICB9IGVsc2UgaWYodHlwZW9mIHQgPT09ICdvYmplY3QnKXtcbiAgICAgICAgICAgICAgICBhY2MudGltZXMgPSBwYXJzZUludCh0LnRpbWVzLCAxMCkgfHwgREVGQVVMVF9USU1FUztcbiAgICAgICAgICAgICAgICBhY2MuaW50ZXJ2YWwgPSBwYXJzZUludCh0LmludGVydmFsLCAxMCkgfHwgREVGQVVMVF9JTlRFUlZBTDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbnN1cHBvcnRlZCBhcmd1bWVudCB0eXBlIGZvciBcXCd0aW1lc1xcJzogJyArIHR5cGVvZiB0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgICBpZiAobGVuZ3RoIDwgMSB8fCBsZW5ndGggPiAzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgYXJndW1lbnRzIC0gbXVzdCBiZSBlaXRoZXIgKHRhc2spLCAodGFzaywgY2FsbGJhY2spLCAodGltZXMsIHRhc2spIG9yICh0aW1lcywgdGFzaywgY2FsbGJhY2spJyk7XG4gICAgICAgIH0gZWxzZSBpZiAobGVuZ3RoIDw9IDIgJiYgdHlwZW9mIHRpbWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWxsYmFjayA9IHRhc2s7XG4gICAgICAgICAgICB0YXNrID0gdGltZXM7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB0aW1lcyAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgcGFyc2VUaW1lcyhvcHRzLCB0aW1lcyk7XG4gICAgICAgIH1cbiAgICAgICAgb3B0cy5jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgICAgICBvcHRzLnRhc2sgPSB0YXNrO1xuXG4gICAgICAgIGZ1bmN0aW9uIHdyYXBwZWRUYXNrKHdyYXBwZWRDYWxsYmFjaywgd3JhcHBlZFJlc3VsdHMpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIHJldHJ5QXR0ZW1wdCh0YXNrLCBmaW5hbEF0dGVtcHQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oc2VyaWVzQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdGFzayhmdW5jdGlvbihlcnIsIHJlc3VsdCl7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXJpZXNDYWxsYmFjayghZXJyIHx8IGZpbmFsQXR0ZW1wdCwge2VycjogZXJyLCByZXN1bHQ6IHJlc3VsdH0pO1xuICAgICAgICAgICAgICAgICAgICB9LCB3cmFwcGVkUmVzdWx0cyk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgZnVuY3Rpb24gcmV0cnlJbnRlcnZhbChpbnRlcnZhbCl7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHNlcmllc0NhbGxiYWNrKXtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VyaWVzQ2FsbGJhY2sobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIH0sIGludGVydmFsKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB3aGlsZSAob3B0cy50aW1lcykge1xuXG4gICAgICAgICAgICAgICAgdmFyIGZpbmFsQXR0ZW1wdCA9ICEob3B0cy50aW1lcy09MSk7XG4gICAgICAgICAgICAgICAgYXR0ZW1wdHMucHVzaChyZXRyeUF0dGVtcHQob3B0cy50YXNrLCBmaW5hbEF0dGVtcHQpKTtcbiAgICAgICAgICAgICAgICBpZighZmluYWxBdHRlbXB0ICYmIG9wdHMuaW50ZXJ2YWwgPiAwKXtcbiAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdHMucHVzaChyZXRyeUludGVydmFsKG9wdHMuaW50ZXJ2YWwpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFzeW5jLnNlcmllcyhhdHRlbXB0cywgZnVuY3Rpb24oZG9uZSwgZGF0YSl7XG4gICAgICAgICAgICAgICAgZGF0YSA9IGRhdGFbZGF0YS5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgICAgICAod3JhcHBlZENhbGxiYWNrIHx8IG9wdHMuY2FsbGJhY2spKGRhdGEuZXJyLCBkYXRhLnJlc3VsdCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElmIGEgY2FsbGJhY2sgaXMgcGFzc2VkLCBydW4gdGhpcyBhcyBhIGNvbnRyb2xsIGZsb3dcbiAgICAgICAgcmV0dXJuIG9wdHMuY2FsbGJhY2sgPyB3cmFwcGVkVGFzaygpIDogd3JhcHBlZFRhc2s7XG4gICAgfTtcblxuICAgIGFzeW5jLndhdGVyZmFsbCA9IGZ1bmN0aW9uICh0YXNrcywgY2FsbGJhY2spIHtcbiAgICAgICAgY2FsbGJhY2sgPSBfb25jZShjYWxsYmFjayB8fCBub29wKTtcbiAgICAgICAgaWYgKCFfaXNBcnJheSh0YXNrcykpIHtcbiAgICAgICAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IHRvIHdhdGVyZmFsbCBtdXN0IGJlIGFuIGFycmF5IG9mIGZ1bmN0aW9ucycpO1xuICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGVycik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0YXNrcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBjYWxsYmFjaygpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHdyYXBJdGVyYXRvcihpdGVyYXRvcikge1xuICAgICAgICAgICAgcmV0dXJuIF9yZXN0UGFyYW0oZnVuY3Rpb24gKGVyciwgYXJncykge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2suYXBwbHkobnVsbCwgW2Vycl0uY29uY2F0KGFyZ3MpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBuZXh0ID0gaXRlcmF0b3IubmV4dCgpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV4dCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJncy5wdXNoKHdyYXBJdGVyYXRvcihuZXh0KSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcmdzLnB1c2goY2FsbGJhY2spO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVuc3VyZUFzeW5jKGl0ZXJhdG9yKS5hcHBseShudWxsLCBhcmdzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB3cmFwSXRlcmF0b3IoYXN5bmMuaXRlcmF0b3IodGFza3MpKSgpO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBfcGFyYWxsZWwoZWFjaGZuLCB0YXNrcywgY2FsbGJhY2spIHtcbiAgICAgICAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBub29wO1xuICAgICAgICB2YXIgcmVzdWx0cyA9IF9pc0FycmF5TGlrZSh0YXNrcykgPyBbXSA6IHt9O1xuXG4gICAgICAgIGVhY2hmbih0YXNrcywgZnVuY3Rpb24gKHRhc2ssIGtleSwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRhc2soX3Jlc3RQYXJhbShmdW5jdGlvbiAoZXJyLCBhcmdzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGFyZ3MubGVuZ3RoIDw9IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgYXJncyA9IGFyZ3NbMF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdHNba2V5XSA9IGFyZ3M7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAgICAgY2FsbGJhY2soZXJyLCByZXN1bHRzKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYXN5bmMucGFyYWxsZWwgPSBmdW5jdGlvbiAodGFza3MsIGNhbGxiYWNrKSB7XG4gICAgICAgIF9wYXJhbGxlbChhc3luYy5lYWNoT2YsIHRhc2tzLCBjYWxsYmFjayk7XG4gICAgfTtcblxuICAgIGFzeW5jLnBhcmFsbGVsTGltaXQgPSBmdW5jdGlvbih0YXNrcywgbGltaXQsIGNhbGxiYWNrKSB7XG4gICAgICAgIF9wYXJhbGxlbChfZWFjaE9mTGltaXQobGltaXQpLCB0YXNrcywgY2FsbGJhY2spO1xuICAgIH07XG5cbiAgICBhc3luYy5zZXJpZXMgPSBmdW5jdGlvbih0YXNrcywgY2FsbGJhY2spIHtcbiAgICAgICAgX3BhcmFsbGVsKGFzeW5jLmVhY2hPZlNlcmllcywgdGFza3MsIGNhbGxiYWNrKTtcbiAgICB9O1xuXG4gICAgYXN5bmMuaXRlcmF0b3IgPSBmdW5jdGlvbiAodGFza3MpIHtcbiAgICAgICAgZnVuY3Rpb24gbWFrZUNhbGxiYWNrKGluZGV4KSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBmbigpIHtcbiAgICAgICAgICAgICAgICBpZiAodGFza3MubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhc2tzW2luZGV4XS5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZm4ubmV4dCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm4ubmV4dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKGluZGV4IDwgdGFza3MubGVuZ3RoIC0gMSkgPyBtYWtlQ2FsbGJhY2soaW5kZXggKyAxKTogbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gZm47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1ha2VDYWxsYmFjaygwKTtcbiAgICB9O1xuXG4gICAgYXN5bmMuYXBwbHkgPSBfcmVzdFBhcmFtKGZ1bmN0aW9uIChmbiwgYXJncykge1xuICAgICAgICByZXR1cm4gX3Jlc3RQYXJhbShmdW5jdGlvbiAoY2FsbEFyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBmbi5hcHBseShcbiAgICAgICAgICAgICAgICBudWxsLCBhcmdzLmNvbmNhdChjYWxsQXJncylcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gX2NvbmNhdChlYWNoZm4sIGFyciwgZm4sIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgZWFjaGZuKGFyciwgZnVuY3Rpb24gKHgsIGluZGV4LCBjYikge1xuICAgICAgICAgICAgZm4oeCwgZnVuY3Rpb24gKGVyciwgeSkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5jb25jYXQoeSB8fCBbXSk7XG4gICAgICAgICAgICAgICAgY2IoZXJyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgICAgICBjYWxsYmFjayhlcnIsIHJlc3VsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhc3luYy5jb25jYXQgPSBkb1BhcmFsbGVsKF9jb25jYXQpO1xuICAgIGFzeW5jLmNvbmNhdFNlcmllcyA9IGRvU2VyaWVzKF9jb25jYXQpO1xuXG4gICAgYXN5bmMud2hpbHN0ID0gZnVuY3Rpb24gKHRlc3QsIGl0ZXJhdG9yLCBjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IG5vb3A7XG4gICAgICAgIGlmICh0ZXN0KCkpIHtcbiAgICAgICAgICAgIHZhciBuZXh0ID0gX3Jlc3RQYXJhbShmdW5jdGlvbihlcnIsIGFyZ3MpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0ZXN0LmFwcGx5KHRoaXMsIGFyZ3MpKSB7XG4gICAgICAgICAgICAgICAgICAgIGl0ZXJhdG9yKG5leHQpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KG51bGwsIFtudWxsXS5jb25jYXQoYXJncykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaXRlcmF0b3IobmV4dCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBhc3luYy5kb1doaWxzdCA9IGZ1bmN0aW9uIChpdGVyYXRvciwgdGVzdCwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGNhbGxzID0gMDtcbiAgICAgICAgcmV0dXJuIGFzeW5jLndoaWxzdChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiArK2NhbGxzIDw9IDEgfHwgdGVzdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9LCBpdGVyYXRvciwgY2FsbGJhY2spO1xuICAgIH07XG5cbiAgICBhc3luYy51bnRpbCA9IGZ1bmN0aW9uICh0ZXN0LCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIGFzeW5jLndoaWxzdChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAhdGVzdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgICB9LCBpdGVyYXRvciwgY2FsbGJhY2spO1xuICAgIH07XG5cbiAgICBhc3luYy5kb1VudGlsID0gZnVuY3Rpb24gKGl0ZXJhdG9yLCB0ZXN0LCBjYWxsYmFjaykge1xuICAgICAgICByZXR1cm4gYXN5bmMuZG9XaGlsc3QoaXRlcmF0b3IsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuICF0ZXN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIH0sIGNhbGxiYWNrKTtcbiAgICB9O1xuXG4gICAgYXN5bmMuZHVyaW5nID0gZnVuY3Rpb24gKHRlc3QsIGl0ZXJhdG9yLCBjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayA9IGNhbGxiYWNrIHx8IG5vb3A7XG5cbiAgICAgICAgdmFyIG5leHQgPSBfcmVzdFBhcmFtKGZ1bmN0aW9uKGVyciwgYXJncykge1xuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGFyZ3MucHVzaChjaGVjayk7XG4gICAgICAgICAgICAgICAgdGVzdC5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgdmFyIGNoZWNrID0gZnVuY3Rpb24oZXJyLCB0cnV0aCkge1xuICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRydXRoKSB7XG4gICAgICAgICAgICAgICAgaXRlcmF0b3IobmV4dCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIHRlc3QoY2hlY2spO1xuICAgIH07XG5cbiAgICBhc3luYy5kb0R1cmluZyA9IGZ1bmN0aW9uIChpdGVyYXRvciwgdGVzdCwgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIGNhbGxzID0gMDtcbiAgICAgICAgYXN5bmMuZHVyaW5nKGZ1bmN0aW9uKG5leHQpIHtcbiAgICAgICAgICAgIGlmIChjYWxscysrIDwgMSkge1xuICAgICAgICAgICAgICAgIG5leHQobnVsbCwgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRlc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgaXRlcmF0b3IsIGNhbGxiYWNrKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gX3F1ZXVlKHdvcmtlciwgY29uY3VycmVuY3ksIHBheWxvYWQpIHtcbiAgICAgICAgaWYgKGNvbmN1cnJlbmN5ID09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbmN1cnJlbmN5ID0gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmKGNvbmN1cnJlbmN5ID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvbmN1cnJlbmN5IG11c3Qgbm90IGJlIHplcm8nKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBfaW5zZXJ0KHEsIGRhdGEsIHBvcywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsICYmIHR5cGVvZiBjYWxsYmFjayAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGFzayBjYWxsYmFjayBtdXN0IGJlIGEgZnVuY3Rpb25cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBxLnN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKCFfaXNBcnJheShkYXRhKSkge1xuICAgICAgICAgICAgICAgIGRhdGEgPSBbZGF0YV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZihkYXRhLmxlbmd0aCA9PT0gMCAmJiBxLmlkbGUoKSkge1xuICAgICAgICAgICAgICAgIC8vIGNhbGwgZHJhaW4gaW1tZWRpYXRlbHkgaWYgdGhlcmUgYXJlIG5vIHRhc2tzXG4gICAgICAgICAgICAgICAgcmV0dXJuIGFzeW5jLnNldEltbWVkaWF0ZShmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgcS5kcmFpbigpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgX2FycmF5RWFjaChkYXRhLCBmdW5jdGlvbih0YXNrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGl0ZW0gPSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IHRhc2ssXG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayB8fCBub29wXG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIGlmIChwb3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcS50YXNrcy51bnNoaWZ0KGl0ZW0pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHEudGFza3MucHVzaChpdGVtKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBpZiAocS50YXNrcy5sZW5ndGggPT09IHEuY29uY3VycmVuY3kpIHtcbiAgICAgICAgICAgICAgICAgICAgcS5zYXR1cmF0ZWQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGFzeW5jLnNldEltbWVkaWF0ZShxLnByb2Nlc3MpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIF9uZXh0KHEsIHRhc2tzKSB7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICB3b3JrZXJzIC09IDE7XG5cbiAgICAgICAgICAgICAgICB2YXIgcmVtb3ZlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgICAgIF9hcnJheUVhY2godGFza3MsIGZ1bmN0aW9uICh0YXNrKSB7XG4gICAgICAgICAgICAgICAgICAgIF9hcnJheUVhY2god29ya2Vyc0xpc3QsIGZ1bmN0aW9uICh3b3JrZXIsIGluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAod29ya2VyID09PSB0YXNrICYmICFyZW1vdmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd29ya2Vyc0xpc3Quc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZW1vdmVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgdGFzay5jYWxsYmFjay5hcHBseSh0YXNrLCBhcmdzKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBpZiAocS50YXNrcy5sZW5ndGggKyB3b3JrZXJzID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHEuZHJhaW4oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcS5wcm9jZXNzKCk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHdvcmtlcnMgPSAwO1xuICAgICAgICB2YXIgd29ya2Vyc0xpc3QgPSBbXTtcbiAgICAgICAgdmFyIHEgPSB7XG4gICAgICAgICAgICB0YXNrczogW10sXG4gICAgICAgICAgICBjb25jdXJyZW5jeTogY29uY3VycmVuY3ksXG4gICAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkLFxuICAgICAgICAgICAgc2F0dXJhdGVkOiBub29wLFxuICAgICAgICAgICAgZW1wdHk6IG5vb3AsXG4gICAgICAgICAgICBkcmFpbjogbm9vcCxcbiAgICAgICAgICAgIHN0YXJ0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgcGF1c2VkOiBmYWxzZSxcbiAgICAgICAgICAgIHB1c2g6IGZ1bmN0aW9uIChkYXRhLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIF9pbnNlcnQocSwgZGF0YSwgZmFsc2UsIGNhbGxiYWNrKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBraWxsOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcS5kcmFpbiA9IG5vb3A7XG4gICAgICAgICAgICAgICAgcS50YXNrcyA9IFtdO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVuc2hpZnQ6IGZ1bmN0aW9uIChkYXRhLCBjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgIF9pbnNlcnQocSwgZGF0YSwgdHJ1ZSwgY2FsbGJhY2spO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByb2Nlc3M6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB3aGlsZSghcS5wYXVzZWQgJiYgd29ya2VycyA8IHEuY29uY3VycmVuY3kgJiYgcS50YXNrcy5sZW5ndGgpe1xuXG4gICAgICAgICAgICAgICAgICAgIHZhciB0YXNrcyA9IHEucGF5bG9hZCA/XG4gICAgICAgICAgICAgICAgICAgICAgICBxLnRhc2tzLnNwbGljZSgwLCBxLnBheWxvYWQpIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHEudGFza3Muc3BsaWNlKDAsIHEudGFza3MubGVuZ3RoKTtcblxuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IF9tYXAodGFza3MsIGZ1bmN0aW9uICh0YXNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFzay5kYXRhO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAocS50YXNrcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHEuZW1wdHkoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB3b3JrZXJzICs9IDE7XG4gICAgICAgICAgICAgICAgICAgIHdvcmtlcnNMaXN0LnB1c2godGFza3NbMF0pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2IgPSBvbmx5X29uY2UoX25leHQocSwgdGFza3MpKTtcbiAgICAgICAgICAgICAgICAgICAgd29ya2VyKGRhdGEsIGNiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbGVuZ3RoOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHEudGFza3MubGVuZ3RoO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJ1bm5pbmc6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gd29ya2VycztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB3b3JrZXJzTGlzdDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB3b3JrZXJzTGlzdDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpZGxlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcS50YXNrcy5sZW5ndGggKyB3b3JrZXJzID09PSAwO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBhdXNlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcS5wYXVzZWQgPSB0cnVlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc3VtZTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmIChxLnBhdXNlZCA9PT0gZmFsc2UpIHsgcmV0dXJuOyB9XG4gICAgICAgICAgICAgICAgcS5wYXVzZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB2YXIgcmVzdW1lQ291bnQgPSBNYXRoLm1pbihxLmNvbmN1cnJlbmN5LCBxLnRhc2tzLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgLy8gTmVlZCB0byBjYWxsIHEucHJvY2VzcyBvbmNlIHBlciBjb25jdXJyZW50XG4gICAgICAgICAgICAgICAgLy8gd29ya2VyIHRvIHByZXNlcnZlIGZ1bGwgY29uY3VycmVuY3kgYWZ0ZXIgcGF1c2VcbiAgICAgICAgICAgICAgICBmb3IgKHZhciB3ID0gMTsgdyA8PSByZXN1bWVDb3VudDsgdysrKSB7XG4gICAgICAgICAgICAgICAgICAgIGFzeW5jLnNldEltbWVkaWF0ZShxLnByb2Nlc3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHE7XG4gICAgfVxuXG4gICAgYXN5bmMucXVldWUgPSBmdW5jdGlvbiAod29ya2VyLCBjb25jdXJyZW5jeSkge1xuICAgICAgICB2YXIgcSA9IF9xdWV1ZShmdW5jdGlvbiAoaXRlbXMsIGNiKSB7XG4gICAgICAgICAgICB3b3JrZXIoaXRlbXNbMF0sIGNiKTtcbiAgICAgICAgfSwgY29uY3VycmVuY3ksIDEpO1xuXG4gICAgICAgIHJldHVybiBxO1xuICAgIH07XG5cbiAgICBhc3luYy5wcmlvcml0eVF1ZXVlID0gZnVuY3Rpb24gKHdvcmtlciwgY29uY3VycmVuY3kpIHtcblxuICAgICAgICBmdW5jdGlvbiBfY29tcGFyZVRhc2tzKGEsIGIpe1xuICAgICAgICAgICAgcmV0dXJuIGEucHJpb3JpdHkgLSBiLnByaW9yaXR5O1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gX2JpbmFyeVNlYXJjaChzZXF1ZW5jZSwgaXRlbSwgY29tcGFyZSkge1xuICAgICAgICAgICAgdmFyIGJlZyA9IC0xLFxuICAgICAgICAgICAgICAgIGVuZCA9IHNlcXVlbmNlLmxlbmd0aCAtIDE7XG4gICAgICAgICAgICB3aGlsZSAoYmVnIDwgZW5kKSB7XG4gICAgICAgICAgICAgICAgdmFyIG1pZCA9IGJlZyArICgoZW5kIC0gYmVnICsgMSkgPj4+IDEpO1xuICAgICAgICAgICAgICAgIGlmIChjb21wYXJlKGl0ZW0sIHNlcXVlbmNlW21pZF0pID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgYmVnID0gbWlkO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGVuZCA9IG1pZCAtIDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGJlZztcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIF9pbnNlcnQocSwgZGF0YSwgcHJpb3JpdHksIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCAmJiB0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRhc2sgY2FsbGJhY2sgbXVzdCBiZSBhIGZ1bmN0aW9uXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcS5zdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmICghX2lzQXJyYXkoZGF0YSkpIHtcbiAgICAgICAgICAgICAgICBkYXRhID0gW2RhdGFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYoZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAvLyBjYWxsIGRyYWluIGltbWVkaWF0ZWx5IGlmIHRoZXJlIGFyZSBubyB0YXNrc1xuICAgICAgICAgICAgICAgIHJldHVybiBhc3luYy5zZXRJbW1lZGlhdGUoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHEuZHJhaW4oKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF9hcnJheUVhY2goZGF0YSwgZnVuY3Rpb24odGFzaykge1xuICAgICAgICAgICAgICAgIHZhciBpdGVtID0ge1xuICAgICAgICAgICAgICAgICAgICBkYXRhOiB0YXNrLFxuICAgICAgICAgICAgICAgICAgICBwcmlvcml0eTogcHJpb3JpdHksXG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiB0eXBlb2YgY2FsbGJhY2sgPT09ICdmdW5jdGlvbicgPyBjYWxsYmFjayA6IG5vb3BcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgcS50YXNrcy5zcGxpY2UoX2JpbmFyeVNlYXJjaChxLnRhc2tzLCBpdGVtLCBfY29tcGFyZVRhc2tzKSArIDEsIDAsIGl0ZW0pO1xuXG4gICAgICAgICAgICAgICAgaWYgKHEudGFza3MubGVuZ3RoID09PSBxLmNvbmN1cnJlbmN5KSB7XG4gICAgICAgICAgICAgICAgICAgIHEuc2F0dXJhdGVkKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGFzeW5jLnNldEltbWVkaWF0ZShxLnByb2Nlc3MpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBTdGFydCB3aXRoIGEgbm9ybWFsIHF1ZXVlXG4gICAgICAgIHZhciBxID0gYXN5bmMucXVldWUod29ya2VyLCBjb25jdXJyZW5jeSk7XG5cbiAgICAgICAgLy8gT3ZlcnJpZGUgcHVzaCB0byBhY2NlcHQgc2Vjb25kIHBhcmFtZXRlciByZXByZXNlbnRpbmcgcHJpb3JpdHlcbiAgICAgICAgcS5wdXNoID0gZnVuY3Rpb24gKGRhdGEsIHByaW9yaXR5LCBjYWxsYmFjaykge1xuICAgICAgICAgICAgX2luc2VydChxLCBkYXRhLCBwcmlvcml0eSwgY2FsbGJhY2spO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIFJlbW92ZSB1bnNoaWZ0IGZ1bmN0aW9uXG4gICAgICAgIGRlbGV0ZSBxLnVuc2hpZnQ7XG5cbiAgICAgICAgcmV0dXJuIHE7XG4gICAgfTtcblxuICAgIGFzeW5jLmNhcmdvID0gZnVuY3Rpb24gKHdvcmtlciwgcGF5bG9hZCkge1xuICAgICAgICByZXR1cm4gX3F1ZXVlKHdvcmtlciwgMSwgcGF5bG9hZCk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIF9jb25zb2xlX2ZuKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIF9yZXN0UGFyYW0oZnVuY3Rpb24gKGZuLCBhcmdzKSB7XG4gICAgICAgICAgICBmbi5hcHBseShudWxsLCBhcmdzLmNvbmNhdChbX3Jlc3RQYXJhbShmdW5jdGlvbiAoZXJyLCBhcmdzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb25zb2xlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29uc29sZS5lcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmIChjb25zb2xlW25hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfYXJyYXlFYWNoKGFyZ3MsIGZ1bmN0aW9uICh4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZVtuYW1lXSh4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSldKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhc3luYy5sb2cgPSBfY29uc29sZV9mbignbG9nJyk7XG4gICAgYXN5bmMuZGlyID0gX2NvbnNvbGVfZm4oJ2RpcicpO1xuICAgIC8qYXN5bmMuaW5mbyA9IF9jb25zb2xlX2ZuKCdpbmZvJyk7XG4gICAgYXN5bmMud2FybiA9IF9jb25zb2xlX2ZuKCd3YXJuJyk7XG4gICAgYXN5bmMuZXJyb3IgPSBfY29uc29sZV9mbignZXJyb3InKTsqL1xuXG4gICAgYXN5bmMubWVtb2l6ZSA9IGZ1bmN0aW9uIChmbiwgaGFzaGVyKSB7XG4gICAgICAgIHZhciBtZW1vID0ge307XG4gICAgICAgIHZhciBxdWV1ZXMgPSB7fTtcbiAgICAgICAgdmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG4gICAgICAgIGhhc2hlciA9IGhhc2hlciB8fCBpZGVudGl0eTtcbiAgICAgICAgdmFyIG1lbW9pemVkID0gX3Jlc3RQYXJhbShmdW5jdGlvbiBtZW1vaXplZChhcmdzKSB7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSBhcmdzLnBvcCgpO1xuICAgICAgICAgICAgdmFyIGtleSA9IGhhc2hlci5hcHBseShudWxsLCBhcmdzKTtcbiAgICAgICAgICAgIGlmIChoYXMuY2FsbChtZW1vLCBrZXkpKSB7ICAgXG4gICAgICAgICAgICAgICAgYXN5bmMuc2V0SW1tZWRpYXRlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2suYXBwbHkobnVsbCwgbWVtb1trZXldKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGhhcy5jYWxsKHF1ZXVlcywga2V5KSkge1xuICAgICAgICAgICAgICAgIHF1ZXVlc1trZXldLnB1c2goY2FsbGJhY2spO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcXVldWVzW2tleV0gPSBbY2FsbGJhY2tdO1xuICAgICAgICAgICAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MuY29uY2F0KFtfcmVzdFBhcmFtKGZ1bmN0aW9uIChhcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lbW9ba2V5XSA9IGFyZ3M7XG4gICAgICAgICAgICAgICAgICAgIHZhciBxID0gcXVldWVzW2tleV07XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBxdWV1ZXNba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGwgPSBxLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcVtpXS5hcHBseShudWxsLCBhcmdzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgbWVtb2l6ZWQubWVtbyA9IG1lbW87XG4gICAgICAgIG1lbW9pemVkLnVubWVtb2l6ZWQgPSBmbjtcbiAgICAgICAgcmV0dXJuIG1lbW9pemVkO1xuICAgIH07XG5cbiAgICBhc3luYy51bm1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiAoZm4udW5tZW1vaXplZCB8fCBmbikuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gX3RpbWVzKG1hcHBlcikge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGNvdW50LCBpdGVyYXRvciwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIG1hcHBlcihfcmFuZ2UoY291bnQpLCBpdGVyYXRvciwgY2FsbGJhY2spO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGFzeW5jLnRpbWVzID0gX3RpbWVzKGFzeW5jLm1hcCk7XG4gICAgYXN5bmMudGltZXNTZXJpZXMgPSBfdGltZXMoYXN5bmMubWFwU2VyaWVzKTtcbiAgICBhc3luYy50aW1lc0xpbWl0ID0gZnVuY3Rpb24gKGNvdW50LCBsaW1pdCwgaXRlcmF0b3IsIGNhbGxiYWNrKSB7XG4gICAgICAgIHJldHVybiBhc3luYy5tYXBMaW1pdChfcmFuZ2UoY291bnQpLCBsaW1pdCwgaXRlcmF0b3IsIGNhbGxiYWNrKTtcbiAgICB9O1xuXG4gICAgYXN5bmMuc2VxID0gZnVuY3Rpb24gKC8qIGZ1bmN0aW9ucy4uLiAqLykge1xuICAgICAgICB2YXIgZm5zID0gYXJndW1lbnRzO1xuICAgICAgICByZXR1cm4gX3Jlc3RQYXJhbShmdW5jdGlvbiAoYXJncykge1xuICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuXG4gICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSBhcmdzW2FyZ3MubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBhcmdzLnBvcCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayA9IG5vb3A7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGFzeW5jLnJlZHVjZShmbnMsIGFyZ3MsIGZ1bmN0aW9uIChuZXdhcmdzLCBmbiwgY2IpIHtcbiAgICAgICAgICAgICAgICBmbi5hcHBseSh0aGF0LCBuZXdhcmdzLmNvbmNhdChbX3Jlc3RQYXJhbShmdW5jdGlvbiAoZXJyLCBuZXh0YXJncykge1xuICAgICAgICAgICAgICAgICAgICBjYihlcnIsIG5leHRhcmdzKTtcbiAgICAgICAgICAgICAgICB9KV0pKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmdW5jdGlvbiAoZXJyLCByZXN1bHRzKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2suYXBwbHkodGhhdCwgW2Vycl0uY29uY2F0KHJlc3VsdHMpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgYXN5bmMuY29tcG9zZSA9IGZ1bmN0aW9uICgvKiBmdW5jdGlvbnMuLi4gKi8pIHtcbiAgICAgICAgcmV0dXJuIGFzeW5jLnNlcS5hcHBseShudWxsLCBBcnJheS5wcm90b3R5cGUucmV2ZXJzZS5jYWxsKGFyZ3VtZW50cykpO1xuICAgIH07XG5cblxuICAgIGZ1bmN0aW9uIF9hcHBseUVhY2goZWFjaGZuKSB7XG4gICAgICAgIHJldHVybiBfcmVzdFBhcmFtKGZ1bmN0aW9uKGZucywgYXJncykge1xuICAgICAgICAgICAgdmFyIGdvID0gX3Jlc3RQYXJhbShmdW5jdGlvbihhcmdzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgICAgICAgICAgIHZhciBjYWxsYmFjayA9IGFyZ3MucG9wKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVhY2hmbihmbnMsIGZ1bmN0aW9uIChmbiwgXywgY2IpIHtcbiAgICAgICAgICAgICAgICAgICAgZm4uYXBwbHkodGhhdCwgYXJncy5jb25jYXQoW2NiXSkpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2FsbGJhY2spO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoYXJncy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ28uYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ287XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFzeW5jLmFwcGx5RWFjaCA9IF9hcHBseUVhY2goYXN5bmMuZWFjaE9mKTtcbiAgICBhc3luYy5hcHBseUVhY2hTZXJpZXMgPSBfYXBwbHlFYWNoKGFzeW5jLmVhY2hPZlNlcmllcyk7XG5cblxuICAgIGFzeW5jLmZvcmV2ZXIgPSBmdW5jdGlvbiAoZm4sIGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBkb25lID0gb25seV9vbmNlKGNhbGxiYWNrIHx8IG5vb3ApO1xuICAgICAgICB2YXIgdGFzayA9IGVuc3VyZUFzeW5jKGZuKTtcbiAgICAgICAgZnVuY3Rpb24gbmV4dChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZG9uZShlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGFzayhuZXh0KTtcbiAgICAgICAgfVxuICAgICAgICBuZXh0KCk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGVuc3VyZUFzeW5jKGZuKSB7XG4gICAgICAgIHJldHVybiBfcmVzdFBhcmFtKGZ1bmN0aW9uIChhcmdzKSB7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSBhcmdzLnBvcCgpO1xuICAgICAgICAgICAgYXJncy5wdXNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB2YXIgaW5uZXJBcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgICAgIGlmIChzeW5jKSB7XG4gICAgICAgICAgICAgICAgICAgIGFzeW5jLnNldEltbWVkaWF0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay5hcHBseShudWxsLCBpbm5lckFyZ3MpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjay5hcHBseShudWxsLCBpbm5lckFyZ3MpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgdmFyIHN5bmMgPSB0cnVlO1xuICAgICAgICAgICAgZm4uYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICBzeW5jID0gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFzeW5jLmVuc3VyZUFzeW5jID0gZW5zdXJlQXN5bmM7XG5cbiAgICBhc3luYy5jb25zdGFudCA9IF9yZXN0UGFyYW0oZnVuY3Rpb24odmFsdWVzKSB7XG4gICAgICAgIHZhciBhcmdzID0gW251bGxdLmNvbmNhdCh2YWx1ZXMpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICBhc3luYy53cmFwU3luYyA9XG4gICAgYXN5bmMuYXN5bmNpZnkgPSBmdW5jdGlvbiBhc3luY2lmeShmdW5jKSB7XG4gICAgICAgIHJldHVybiBfcmVzdFBhcmFtKGZ1bmN0aW9uIChhcmdzKSB7XG4gICAgICAgICAgICB2YXIgY2FsbGJhY2sgPSBhcmdzLnBvcCgpO1xuICAgICAgICAgICAgdmFyIHJlc3VsdDtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpZiByZXN1bHQgaXMgUHJvbWlzZSBvYmplY3RcbiAgICAgICAgICAgIGlmIChfaXNPYmplY3QocmVzdWx0KSAmJiB0eXBlb2YgcmVzdWx0LnRoZW4gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJlc3VsdC50aGVuKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9KVtcImNhdGNoXCJdKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIubWVzc2FnZSA/IGVyciA6IG5ldyBFcnJvcihlcnIpKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIC8vIE5vZGUuanNcbiAgICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBhc3luYztcbiAgICB9XG4gICAgLy8gQU1EIC8gUmVxdWlyZUpTXG4gICAgZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgICAgIGRlZmluZShbXSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIGFzeW5jO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gaW5jbHVkZWQgZGlyZWN0bHkgdmlhIDxzY3JpcHQ+IHRhZ1xuICAgIGVsc2Uge1xuICAgICAgICByb290LmFzeW5jID0gYXN5bmM7XG4gICAgfVxuXG59KCkpO1xuIiwiLyoqXG4gKiBAbGljZW5zZVxuICogTG8tRGFzaCAyLjQuMSAoQ3VzdG9tIEJ1aWxkKSA8aHR0cDovL2xvZGFzaC5jb20vPlxuICogQnVpbGQ6IGBsb2Rhc2ggbW9kZXJuIC1vIC4vZGlzdC9sb2Rhc2guanNgXG4gKiBDb3B5cmlnaHQgMjAxMi0yMDEzIFRoZSBEb2pvIEZvdW5kYXRpb24gPGh0dHA6Ly9kb2pvZm91bmRhdGlvbi5vcmcvPlxuICogQmFzZWQgb24gVW5kZXJzY29yZS5qcyAxLjUuMiA8aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvTElDRU5TRT5cbiAqIENvcHlyaWdodCAyMDA5LTIwMTMgSmVyZW15IEFzaGtlbmFzLCBEb2N1bWVudENsb3VkIGFuZCBJbnZlc3RpZ2F0aXZlIFJlcG9ydGVycyAmIEVkaXRvcnNcbiAqIEF2YWlsYWJsZSB1bmRlciBNSVQgbGljZW5zZSA8aHR0cDovL2xvZGFzaC5jb20vbGljZW5zZT5cbiAqL1xuOyhmdW5jdGlvbigpIHtcblxuICAvKiogVXNlZCBhcyBhIHNhZmUgcmVmZXJlbmNlIGZvciBgdW5kZWZpbmVkYCBpbiBwcmUgRVM1IGVudmlyb25tZW50cyAqL1xuICB2YXIgdW5kZWZpbmVkO1xuXG4gIC8qKiBVc2VkIHRvIHBvb2wgYXJyYXlzIGFuZCBvYmplY3RzIHVzZWQgaW50ZXJuYWxseSAqL1xuICB2YXIgYXJyYXlQb29sID0gW10sXG4gICAgICBvYmplY3RQb29sID0gW107XG5cbiAgLyoqIFVzZWQgdG8gZ2VuZXJhdGUgdW5pcXVlIElEcyAqL1xuICB2YXIgaWRDb3VudGVyID0gMDtcblxuICAvKiogVXNlZCB0byBwcmVmaXgga2V5cyB0byBhdm9pZCBpc3N1ZXMgd2l0aCBgX19wcm90b19fYCBhbmQgcHJvcGVydGllcyBvbiBgT2JqZWN0LnByb3RvdHlwZWAgKi9cbiAgdmFyIGtleVByZWZpeCA9ICtuZXcgRGF0ZSArICcnO1xuXG4gIC8qKiBVc2VkIGFzIHRoZSBzaXplIHdoZW4gb3B0aW1pemF0aW9ucyBhcmUgZW5hYmxlZCBmb3IgbGFyZ2UgYXJyYXlzICovXG4gIHZhciBsYXJnZUFycmF5U2l6ZSA9IDc1O1xuXG4gIC8qKiBVc2VkIGFzIHRoZSBtYXggc2l6ZSBvZiB0aGUgYGFycmF5UG9vbGAgYW5kIGBvYmplY3RQb29sYCAqL1xuICB2YXIgbWF4UG9vbFNpemUgPSA0MDtcblxuICAvKiogVXNlZCB0byBkZXRlY3QgYW5kIHRlc3Qgd2hpdGVzcGFjZSAqL1xuICB2YXIgd2hpdGVzcGFjZSA9IChcbiAgICAvLyB3aGl0ZXNwYWNlXG4gICAgJyBcXHRcXHgwQlxcZlxceEEwXFx1ZmVmZicgK1xuXG4gICAgLy8gbGluZSB0ZXJtaW5hdG9yc1xuICAgICdcXG5cXHJcXHUyMDI4XFx1MjAyOScgK1xuXG4gICAgLy8gdW5pY29kZSBjYXRlZ29yeSBcIlpzXCIgc3BhY2Ugc2VwYXJhdG9yc1xuICAgICdcXHUxNjgwXFx1MTgwZVxcdTIwMDBcXHUyMDAxXFx1MjAwMlxcdTIwMDNcXHUyMDA0XFx1MjAwNVxcdTIwMDZcXHUyMDA3XFx1MjAwOFxcdTIwMDlcXHUyMDBhXFx1MjAyZlxcdTIwNWZcXHUzMDAwJ1xuICApO1xuXG4gIC8qKiBVc2VkIHRvIG1hdGNoIGVtcHR5IHN0cmluZyBsaXRlcmFscyBpbiBjb21waWxlZCB0ZW1wbGF0ZSBzb3VyY2UgKi9cbiAgdmFyIHJlRW1wdHlTdHJpbmdMZWFkaW5nID0gL1xcYl9fcCBcXCs9ICcnOy9nLFxuICAgICAgcmVFbXB0eVN0cmluZ01pZGRsZSA9IC9cXGIoX19wIFxcKz0pICcnIFxcKy9nLFxuICAgICAgcmVFbXB0eVN0cmluZ1RyYWlsaW5nID0gLyhfX2VcXCguKj9cXCl8XFxiX190XFwpKSBcXCtcXG4nJzsvZztcblxuICAvKipcbiAgICogVXNlZCB0byBtYXRjaCBFUzYgdGVtcGxhdGUgZGVsaW1pdGVyc1xuICAgKiBodHRwOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy1saXRlcmFscy1zdHJpbmctbGl0ZXJhbHNcbiAgICovXG4gIHZhciByZUVzVGVtcGxhdGUgPSAvXFwkXFx7KFteXFxcXH1dKig/OlxcXFwuW15cXFxcfV0qKSopXFx9L2c7XG5cbiAgLyoqIFVzZWQgdG8gbWF0Y2ggcmVnZXhwIGZsYWdzIGZyb20gdGhlaXIgY29lcmNlZCBzdHJpbmcgdmFsdWVzICovXG4gIHZhciByZUZsYWdzID0gL1xcdyokLztcblxuICAvKiogVXNlZCB0byBkZXRlY3RlZCBuYW1lZCBmdW5jdGlvbnMgKi9cbiAgdmFyIHJlRnVuY05hbWUgPSAvXlxccypmdW5jdGlvblsgXFxuXFxyXFx0XStcXHcvO1xuXG4gIC8qKiBVc2VkIHRvIG1hdGNoIFwiaW50ZXJwb2xhdGVcIiB0ZW1wbGF0ZSBkZWxpbWl0ZXJzICovXG4gIHZhciByZUludGVycG9sYXRlID0gLzwlPShbXFxzXFxTXSs/KSU+L2c7XG5cbiAgLyoqIFVzZWQgdG8gbWF0Y2ggbGVhZGluZyB3aGl0ZXNwYWNlIGFuZCB6ZXJvcyB0byBiZSByZW1vdmVkICovXG4gIHZhciByZUxlYWRpbmdTcGFjZXNBbmRaZXJvcyA9IFJlZ0V4cCgnXlsnICsgd2hpdGVzcGFjZSArICddKjArKD89LiQpJyk7XG5cbiAgLyoqIFVzZWQgdG8gZW5zdXJlIGNhcHR1cmluZyBvcmRlciBvZiB0ZW1wbGF0ZSBkZWxpbWl0ZXJzICovXG4gIHZhciByZU5vTWF0Y2ggPSAvKCReKS87XG5cbiAgLyoqIFVzZWQgdG8gZGV0ZWN0IGZ1bmN0aW9ucyBjb250YWluaW5nIGEgYHRoaXNgIHJlZmVyZW5jZSAqL1xuICB2YXIgcmVUaGlzID0gL1xcYnRoaXNcXGIvO1xuXG4gIC8qKiBVc2VkIHRvIG1hdGNoIHVuZXNjYXBlZCBjaGFyYWN0ZXJzIGluIGNvbXBpbGVkIHN0cmluZyBsaXRlcmFscyAqL1xuICB2YXIgcmVVbmVzY2FwZWRTdHJpbmcgPSAvWydcXG5cXHJcXHRcXHUyMDI4XFx1MjAyOVxcXFxdL2c7XG5cbiAgLyoqIFVzZWQgdG8gYXNzaWduIGRlZmF1bHQgYGNvbnRleHRgIG9iamVjdCBwcm9wZXJ0aWVzICovXG4gIHZhciBjb250ZXh0UHJvcHMgPSBbXG4gICAgJ0FycmF5JywgJ0Jvb2xlYW4nLCAnRGF0ZScsICdGdW5jdGlvbicsICdNYXRoJywgJ051bWJlcicsICdPYmplY3QnLFxuICAgICdSZWdFeHAnLCAnU3RyaW5nJywgJ18nLCAnYXR0YWNoRXZlbnQnLCAnY2xlYXJUaW1lb3V0JywgJ2lzRmluaXRlJywgJ2lzTmFOJyxcbiAgICAncGFyc2VJbnQnLCAnc2V0VGltZW91dCdcbiAgXTtcblxuICAvKiogVXNlZCB0byBtYWtlIHRlbXBsYXRlIHNvdXJjZVVSTHMgZWFzaWVyIHRvIGlkZW50aWZ5ICovXG4gIHZhciB0ZW1wbGF0ZUNvdW50ZXIgPSAwO1xuXG4gIC8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgc2hvcnRjdXRzICovXG4gIHZhciBhcmdzQ2xhc3MgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICAgIGFycmF5Q2xhc3MgPSAnW29iamVjdCBBcnJheV0nLFxuICAgICAgYm9vbENsYXNzID0gJ1tvYmplY3QgQm9vbGVhbl0nLFxuICAgICAgZGF0ZUNsYXNzID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgICAgZnVuY0NsYXNzID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICAgIG51bWJlckNsYXNzID0gJ1tvYmplY3QgTnVtYmVyXScsXG4gICAgICBvYmplY3RDbGFzcyA9ICdbb2JqZWN0IE9iamVjdF0nLFxuICAgICAgcmVnZXhwQ2xhc3MgPSAnW29iamVjdCBSZWdFeHBdJyxcbiAgICAgIHN0cmluZ0NsYXNzID0gJ1tvYmplY3QgU3RyaW5nXSc7XG5cbiAgLyoqIFVzZWQgdG8gaWRlbnRpZnkgb2JqZWN0IGNsYXNzaWZpY2F0aW9ucyB0aGF0IGBfLmNsb25lYCBzdXBwb3J0cyAqL1xuICB2YXIgY2xvbmVhYmxlQ2xhc3NlcyA9IHt9O1xuICBjbG9uZWFibGVDbGFzc2VzW2Z1bmNDbGFzc10gPSBmYWxzZTtcbiAgY2xvbmVhYmxlQ2xhc3Nlc1thcmdzQ2xhc3NdID0gY2xvbmVhYmxlQ2xhc3Nlc1thcnJheUNsYXNzXSA9XG4gIGNsb25lYWJsZUNsYXNzZXNbYm9vbENsYXNzXSA9IGNsb25lYWJsZUNsYXNzZXNbZGF0ZUNsYXNzXSA9XG4gIGNsb25lYWJsZUNsYXNzZXNbbnVtYmVyQ2xhc3NdID0gY2xvbmVhYmxlQ2xhc3Nlc1tvYmplY3RDbGFzc10gPVxuICBjbG9uZWFibGVDbGFzc2VzW3JlZ2V4cENsYXNzXSA9IGNsb25lYWJsZUNsYXNzZXNbc3RyaW5nQ2xhc3NdID0gdHJ1ZTtcblxuICAvKiogVXNlZCBhcyBhbiBpbnRlcm5hbCBgXy5kZWJvdW5jZWAgb3B0aW9ucyBvYmplY3QgKi9cbiAgdmFyIGRlYm91bmNlT3B0aW9ucyA9IHtcbiAgICAnbGVhZGluZyc6IGZhbHNlLFxuICAgICdtYXhXYWl0JzogMCxcbiAgICAndHJhaWxpbmcnOiBmYWxzZVxuICB9O1xuXG4gIC8qKiBVc2VkIGFzIHRoZSBwcm9wZXJ0eSBkZXNjcmlwdG9yIGZvciBgX19iaW5kRGF0YV9fYCAqL1xuICB2YXIgZGVzY3JpcHRvciA9IHtcbiAgICAnY29uZmlndXJhYmxlJzogZmFsc2UsXG4gICAgJ2VudW1lcmFibGUnOiBmYWxzZSxcbiAgICAndmFsdWUnOiBudWxsLFxuICAgICd3cml0YWJsZSc6IGZhbHNlXG4gIH07XG5cbiAgLyoqIFVzZWQgdG8gZGV0ZXJtaW5lIGlmIHZhbHVlcyBhcmUgb2YgdGhlIGxhbmd1YWdlIHR5cGUgT2JqZWN0ICovXG4gIHZhciBvYmplY3RUeXBlcyA9IHtcbiAgICAnYm9vbGVhbic6IGZhbHNlLFxuICAgICdmdW5jdGlvbic6IHRydWUsXG4gICAgJ29iamVjdCc6IHRydWUsXG4gICAgJ251bWJlcic6IGZhbHNlLFxuICAgICdzdHJpbmcnOiBmYWxzZSxcbiAgICAndW5kZWZpbmVkJzogZmFsc2VcbiAgfTtcblxuICAvKiogVXNlZCB0byBlc2NhcGUgY2hhcmFjdGVycyBmb3IgaW5jbHVzaW9uIGluIGNvbXBpbGVkIHN0cmluZyBsaXRlcmFscyAqL1xuICB2YXIgc3RyaW5nRXNjYXBlcyA9IHtcbiAgICAnXFxcXCc6ICdcXFxcJyxcbiAgICBcIidcIjogXCInXCIsXG4gICAgJ1xcbic6ICduJyxcbiAgICAnXFxyJzogJ3InLFxuICAgICdcXHQnOiAndCcsXG4gICAgJ1xcdTIwMjgnOiAndTIwMjgnLFxuICAgICdcXHUyMDI5JzogJ3UyMDI5J1xuICB9O1xuXG4gIC8qKiBVc2VkIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0ICovXG4gIHZhciByb290ID0gKG9iamVjdFR5cGVzW3R5cGVvZiB3aW5kb3ddICYmIHdpbmRvdykgfHwgdGhpcztcblxuICAvKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgICovXG4gIHZhciBmcmVlRXhwb3J0cyA9IG9iamVjdFR5cGVzW3R5cGVvZiBleHBvcnRzXSAmJiBleHBvcnRzICYmICFleHBvcnRzLm5vZGVUeXBlICYmIGV4cG9ydHM7XG5cbiAgLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgICovXG4gIHZhciBmcmVlTW9kdWxlID0gb2JqZWN0VHlwZXNbdHlwZW9mIG1vZHVsZV0gJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4gIC8qKiBEZXRlY3QgdGhlIHBvcHVsYXIgQ29tbW9uSlMgZXh0ZW5zaW9uIGBtb2R1bGUuZXhwb3J0c2AgKi9cbiAgdmFyIG1vZHVsZUV4cG9ydHMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUuZXhwb3J0cyA9PT0gZnJlZUV4cG9ydHMgJiYgZnJlZUV4cG9ydHM7XG5cbiAgLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBnbG9iYWxgIGZyb20gTm9kZS5qcyBvciBCcm93c2VyaWZpZWQgY29kZSBhbmQgdXNlIGl0IGFzIGByb290YCAqL1xuICB2YXIgZnJlZUdsb2JhbCA9IG9iamVjdFR5cGVzW3R5cGVvZiBnbG9iYWxdICYmIGdsb2JhbDtcbiAgaWYgKGZyZWVHbG9iYWwgJiYgKGZyZWVHbG9iYWwuZ2xvYmFsID09PSBmcmVlR2xvYmFsIHx8IGZyZWVHbG9iYWwud2luZG93ID09PSBmcmVlR2xvYmFsKSkge1xuICAgIHJvb3QgPSBmcmVlR2xvYmFsO1xuICB9XG5cbiAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLyoqXG4gICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmluZGV4T2ZgIHdpdGhvdXQgc3VwcG9ydCBmb3IgYmluYXJ5IHNlYXJjaGVzXG4gICAqIG9yIGBmcm9tSW5kZXhgIGNvbnN0cmFpbnRzLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gc2VhcmNoLlxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZWFyY2ggZm9yLlxuICAgKiBAcGFyYW0ge251bWJlcn0gW2Zyb21JbmRleD0wXSBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20uXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlIG9yIGAtMWAuXG4gICAqL1xuICBmdW5jdGlvbiBiYXNlSW5kZXhPZihhcnJheSwgdmFsdWUsIGZyb21JbmRleCkge1xuICAgIHZhciBpbmRleCA9IChmcm9tSW5kZXggfHwgMCkgLSAxLFxuICAgICAgICBsZW5ndGggPSBhcnJheSA/IGFycmF5Lmxlbmd0aCA6IDA7XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgaWYgKGFycmF5W2luZGV4XSA9PT0gdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gLTE7XG4gIH1cblxuICAvKipcbiAgICogQW4gaW1wbGVtZW50YXRpb24gb2YgYF8uY29udGFpbnNgIGZvciBjYWNoZSBvYmplY3RzIHRoYXQgbWltaWNzIHRoZSByZXR1cm5cbiAgICogc2lnbmF0dXJlIG9mIGBfLmluZGV4T2ZgIGJ5IHJldHVybmluZyBgMGAgaWYgdGhlIHZhbHVlIGlzIGZvdW5kLCBlbHNlIGAtMWAuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBjYWNoZSBUaGUgY2FjaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IuXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgYDBgIGlmIGB2YWx1ZWAgaXMgZm91bmQsIGVsc2UgYC0xYC5cbiAgICovXG4gIGZ1bmN0aW9uIGNhY2hlSW5kZXhPZihjYWNoZSwgdmFsdWUpIHtcbiAgICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgICBjYWNoZSA9IGNhY2hlLmNhY2hlO1xuXG4gICAgaWYgKHR5cGUgPT0gJ2Jvb2xlYW4nIHx8IHZhbHVlID09IG51bGwpIHtcbiAgICAgIHJldHVybiBjYWNoZVt2YWx1ZV0gPyAwIDogLTE7XG4gICAgfVxuICAgIGlmICh0eXBlICE9ICdudW1iZXInICYmIHR5cGUgIT0gJ3N0cmluZycpIHtcbiAgICAgIHR5cGUgPSAnb2JqZWN0JztcbiAgICB9XG4gICAgdmFyIGtleSA9IHR5cGUgPT0gJ251bWJlcicgPyB2YWx1ZSA6IGtleVByZWZpeCArIHZhbHVlO1xuICAgIGNhY2hlID0gKGNhY2hlID0gY2FjaGVbdHlwZV0pICYmIGNhY2hlW2tleV07XG5cbiAgICByZXR1cm4gdHlwZSA9PSAnb2JqZWN0J1xuICAgICAgPyAoY2FjaGUgJiYgYmFzZUluZGV4T2YoY2FjaGUsIHZhbHVlKSA+IC0xID8gMCA6IC0xKVxuICAgICAgOiAoY2FjaGUgPyAwIDogLTEpO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBnaXZlbiB2YWx1ZSB0byB0aGUgY29ycmVzcG9uZGluZyBjYWNoZSBvYmplY3QuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGFkZCB0byB0aGUgY2FjaGUuXG4gICAqL1xuICBmdW5jdGlvbiBjYWNoZVB1c2godmFsdWUpIHtcbiAgICB2YXIgY2FjaGUgPSB0aGlzLmNhY2hlLFxuICAgICAgICB0eXBlID0gdHlwZW9mIHZhbHVlO1xuXG4gICAgaWYgKHR5cGUgPT0gJ2Jvb2xlYW4nIHx8IHZhbHVlID09IG51bGwpIHtcbiAgICAgIGNhY2hlW3ZhbHVlXSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlICE9ICdudW1iZXInICYmIHR5cGUgIT0gJ3N0cmluZycpIHtcbiAgICAgICAgdHlwZSA9ICdvYmplY3QnO1xuICAgICAgfVxuICAgICAgdmFyIGtleSA9IHR5cGUgPT0gJ251bWJlcicgPyB2YWx1ZSA6IGtleVByZWZpeCArIHZhbHVlLFxuICAgICAgICAgIHR5cGVDYWNoZSA9IGNhY2hlW3R5cGVdIHx8IChjYWNoZVt0eXBlXSA9IHt9KTtcblxuICAgICAgaWYgKHR5cGUgPT0gJ29iamVjdCcpIHtcbiAgICAgICAgKHR5cGVDYWNoZVtrZXldIHx8ICh0eXBlQ2FjaGVba2V5XSA9IFtdKSkucHVzaCh2YWx1ZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0eXBlQ2FjaGVba2V5XSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFVzZWQgYnkgYF8ubWF4YCBhbmQgYF8ubWluYCBhcyB0aGUgZGVmYXVsdCBjYWxsYmFjayB3aGVuIGEgZ2l2ZW5cbiAgICogY29sbGVjdGlvbiBpcyBhIHN0cmluZyB2YWx1ZS5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFRoZSBjaGFyYWN0ZXIgdG8gaW5zcGVjdC5cbiAgICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgY29kZSB1bml0IG9mIGdpdmVuIGNoYXJhY3Rlci5cbiAgICovXG4gIGZ1bmN0aW9uIGNoYXJBdENhbGxiYWNrKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLmNoYXJDb2RlQXQoMCk7XG4gIH1cblxuICAvKipcbiAgICogVXNlZCBieSBgc29ydEJ5YCB0byBjb21wYXJlIHRyYW5zZm9ybWVkIGBjb2xsZWN0aW9uYCBlbGVtZW50cywgc3RhYmxlIHNvcnRpbmdcbiAgICogdGhlbSBpbiBhc2NlbmRpbmcgb3JkZXIuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBhIFRoZSBvYmplY3QgdG8gY29tcGFyZSB0byBgYmAuXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBiIFRoZSBvYmplY3QgdG8gY29tcGFyZSB0byBgYWAuXG4gICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIHNvcnQgb3JkZXIgaW5kaWNhdG9yIG9mIGAxYCBvciBgLTFgLlxuICAgKi9cbiAgZnVuY3Rpb24gY29tcGFyZUFzY2VuZGluZyhhLCBiKSB7XG4gICAgdmFyIGFjID0gYS5jcml0ZXJpYSxcbiAgICAgICAgYmMgPSBiLmNyaXRlcmlhLFxuICAgICAgICBpbmRleCA9IC0xLFxuICAgICAgICBsZW5ndGggPSBhYy5sZW5ndGg7XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgdmFyIHZhbHVlID0gYWNbaW5kZXhdLFxuICAgICAgICAgIG90aGVyID0gYmNbaW5kZXhdO1xuXG4gICAgICBpZiAodmFsdWUgIT09IG90aGVyKSB7XG4gICAgICAgIGlmICh2YWx1ZSA+IG90aGVyIHx8IHR5cGVvZiB2YWx1ZSA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZSA8IG90aGVyIHx8IHR5cGVvZiBvdGhlciA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICAvLyBGaXhlcyBhbiBgQXJyYXkjc29ydGAgYnVnIGluIHRoZSBKUyBlbmdpbmUgZW1iZWRkZWQgaW4gQWRvYmUgYXBwbGljYXRpb25zXG4gICAgLy8gdGhhdCBjYXVzZXMgaXQsIHVuZGVyIGNlcnRhaW4gY2lyY3Vtc3RhbmNlcywgdG8gcmV0dXJuIHRoZSBzYW1lIHZhbHVlIGZvclxuICAgIC8vIGBhYCBhbmQgYGJgLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2phc2hrZW5hcy91bmRlcnNjb3JlL3B1bGwvMTI0N1xuICAgIC8vXG4gICAgLy8gVGhpcyBhbHNvIGVuc3VyZXMgYSBzdGFibGUgc29ydCBpbiBWOCBhbmQgb3RoZXIgZW5naW5lcy5cbiAgICAvLyBTZWUgaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9OTBcbiAgICByZXR1cm4gYS5pbmRleCAtIGIuaW5kZXg7XG4gIH1cblxuICAvKipcbiAgICogQ3JlYXRlcyBhIGNhY2hlIG9iamVjdCB0byBvcHRpbWl6ZSBsaW5lYXIgc2VhcmNoZXMgb2YgbGFyZ2UgYXJyYXlzLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0FycmF5fSBbYXJyYXk9W11dIFRoZSBhcnJheSB0byBzZWFyY2guXG4gICAqIEByZXR1cm5zIHtudWxsfE9iamVjdH0gUmV0dXJucyB0aGUgY2FjaGUgb2JqZWN0IG9yIGBudWxsYCBpZiBjYWNoaW5nIHNob3VsZCBub3QgYmUgdXNlZC5cbiAgICovXG4gIGZ1bmN0aW9uIGNyZWF0ZUNhY2hlKGFycmF5KSB7XG4gICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCxcbiAgICAgICAgZmlyc3QgPSBhcnJheVswXSxcbiAgICAgICAgbWlkID0gYXJyYXlbKGxlbmd0aCAvIDIpIHwgMF0sXG4gICAgICAgIGxhc3QgPSBhcnJheVtsZW5ndGggLSAxXTtcblxuICAgIGlmIChmaXJzdCAmJiB0eXBlb2YgZmlyc3QgPT0gJ29iamVjdCcgJiZcbiAgICAgICAgbWlkICYmIHR5cGVvZiBtaWQgPT0gJ29iamVjdCcgJiYgbGFzdCAmJiB0eXBlb2YgbGFzdCA9PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB2YXIgY2FjaGUgPSBnZXRPYmplY3QoKTtcbiAgICBjYWNoZVsnZmFsc2UnXSA9IGNhY2hlWydudWxsJ10gPSBjYWNoZVsndHJ1ZSddID0gY2FjaGVbJ3VuZGVmaW5lZCddID0gZmFsc2U7XG5cbiAgICB2YXIgcmVzdWx0ID0gZ2V0T2JqZWN0KCk7XG4gICAgcmVzdWx0LmFycmF5ID0gYXJyYXk7XG4gICAgcmVzdWx0LmNhY2hlID0gY2FjaGU7XG4gICAgcmVzdWx0LnB1c2ggPSBjYWNoZVB1c2g7XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgcmVzdWx0LnB1c2goYXJyYXlbaW5kZXhdKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBVc2VkIGJ5IGB0ZW1wbGF0ZWAgdG8gZXNjYXBlIGNoYXJhY3RlcnMgZm9yIGluY2x1c2lvbiBpbiBjb21waWxlZFxuICAgKiBzdHJpbmcgbGl0ZXJhbHMuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtYXRjaCBUaGUgbWF0Y2hlZCBjaGFyYWN0ZXIgdG8gZXNjYXBlLlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBlc2NhcGVkIGNoYXJhY3Rlci5cbiAgICovXG4gIGZ1bmN0aW9uIGVzY2FwZVN0cmluZ0NoYXIobWF0Y2gpIHtcbiAgICByZXR1cm4gJ1xcXFwnICsgc3RyaW5nRXNjYXBlc1ttYXRjaF07XG4gIH1cblxuICAvKipcbiAgICogR2V0cyBhbiBhcnJheSBmcm9tIHRoZSBhcnJheSBwb29sIG9yIGNyZWF0ZXMgYSBuZXcgb25lIGlmIHRoZSBwb29sIGlzIGVtcHR5LlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7QXJyYXl9IFRoZSBhcnJheSBmcm9tIHRoZSBwb29sLlxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0QXJyYXkoKSB7XG4gICAgcmV0dXJuIGFycmF5UG9vbC5wb3AoKSB8fCBbXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIGFuIG9iamVjdCBmcm9tIHRoZSBvYmplY3QgcG9vbCBvciBjcmVhdGVzIGEgbmV3IG9uZSBpZiB0aGUgcG9vbCBpcyBlbXB0eS5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHJldHVybnMge09iamVjdH0gVGhlIG9iamVjdCBmcm9tIHRoZSBwb29sLlxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0T2JqZWN0KCkge1xuICAgIHJldHVybiBvYmplY3RQb29sLnBvcCgpIHx8IHtcbiAgICAgICdhcnJheSc6IG51bGwsXG4gICAgICAnY2FjaGUnOiBudWxsLFxuICAgICAgJ2NyaXRlcmlhJzogbnVsbCxcbiAgICAgICdmYWxzZSc6IGZhbHNlLFxuICAgICAgJ2luZGV4JzogMCxcbiAgICAgICdudWxsJzogZmFsc2UsXG4gICAgICAnbnVtYmVyJzogbnVsbCxcbiAgICAgICdvYmplY3QnOiBudWxsLFxuICAgICAgJ3B1c2gnOiBudWxsLFxuICAgICAgJ3N0cmluZyc6IG51bGwsXG4gICAgICAndHJ1ZSc6IGZhbHNlLFxuICAgICAgJ3VuZGVmaW5lZCc6IGZhbHNlLFxuICAgICAgJ3ZhbHVlJzogbnVsbFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogUmVsZWFzZXMgdGhlIGdpdmVuIGFycmF5IGJhY2sgdG8gdGhlIGFycmF5IHBvb2wuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIHJlbGVhc2UuXG4gICAqL1xuICBmdW5jdGlvbiByZWxlYXNlQXJyYXkoYXJyYXkpIHtcbiAgICBhcnJheS5sZW5ndGggPSAwO1xuICAgIGlmIChhcnJheVBvb2wubGVuZ3RoIDwgbWF4UG9vbFNpemUpIHtcbiAgICAgIGFycmF5UG9vbC5wdXNoKGFycmF5KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmVsZWFzZXMgdGhlIGdpdmVuIG9iamVjdCBiYWNrIHRvIHRoZSBvYmplY3QgcG9vbC5cbiAgICpcbiAgICogQHByaXZhdGVcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcmVsZWFzZS5cbiAgICovXG4gIGZ1bmN0aW9uIHJlbGVhc2VPYmplY3Qob2JqZWN0KSB7XG4gICAgdmFyIGNhY2hlID0gb2JqZWN0LmNhY2hlO1xuICAgIGlmIChjYWNoZSkge1xuICAgICAgcmVsZWFzZU9iamVjdChjYWNoZSk7XG4gICAgfVxuICAgIG9iamVjdC5hcnJheSA9IG9iamVjdC5jYWNoZSA9IG9iamVjdC5jcml0ZXJpYSA9IG9iamVjdC5vYmplY3QgPSBvYmplY3QubnVtYmVyID0gb2JqZWN0LnN0cmluZyA9IG9iamVjdC52YWx1ZSA9IG51bGw7XG4gICAgaWYgKG9iamVjdFBvb2wubGVuZ3RoIDwgbWF4UG9vbFNpemUpIHtcbiAgICAgIG9iamVjdFBvb2wucHVzaChvYmplY3QpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBTbGljZXMgdGhlIGBjb2xsZWN0aW9uYCBmcm9tIHRoZSBgc3RhcnRgIGluZGV4IHVwIHRvLCBidXQgbm90IGluY2x1ZGluZyxcbiAgICogdGhlIGBlbmRgIGluZGV4LlxuICAgKlxuICAgKiBOb3RlOiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgaW5zdGVhZCBvZiBgQXJyYXkjc2xpY2VgIHRvIHN1cHBvcnQgbm9kZSBsaXN0c1xuICAgKiBpbiBJRSA8IDkgYW5kIHRvIGVuc3VyZSBkZW5zZSBhcnJheXMgYXJlIHJldHVybmVkLlxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gc2xpY2UuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzdGFydCBUaGUgc3RhcnQgaW5kZXguXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBlbmQgVGhlIGVuZCBpbmRleC5cbiAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgYXJyYXkuXG4gICAqL1xuICBmdW5jdGlvbiBzbGljZShhcnJheSwgc3RhcnQsIGVuZCkge1xuICAgIHN0YXJ0IHx8IChzdGFydCA9IDApO1xuICAgIGlmICh0eXBlb2YgZW5kID09ICd1bmRlZmluZWQnKSB7XG4gICAgICBlbmQgPSBhcnJheSA/IGFycmF5Lmxlbmd0aCA6IDA7XG4gICAgfVxuICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICBsZW5ndGggPSBlbmQgLSBzdGFydCB8fCAwLFxuICAgICAgICByZXN1bHQgPSBBcnJheShsZW5ndGggPCAwID8gMCA6IGxlbmd0aCk7XG5cbiAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgcmVzdWx0W2luZGV4XSA9IGFycmF5W3N0YXJ0ICsgaW5kZXhdO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBgbG9kYXNoYCBmdW5jdGlvbiB1c2luZyB0aGUgZ2l2ZW4gY29udGV4dCBvYmplY3QuXG4gICAqXG4gICAqIEBzdGF0aWNcbiAgICogQG1lbWJlck9mIF9cbiAgICogQGNhdGVnb3J5IFV0aWxpdGllc1xuICAgKiBAcGFyYW0ge09iamVjdH0gW2NvbnRleHQ9cm9vdF0gVGhlIGNvbnRleHQgb2JqZWN0LlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIGBsb2Rhc2hgIGZ1bmN0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gcnVuSW5Db250ZXh0KGNvbnRleHQpIHtcbiAgICAvLyBBdm9pZCBpc3N1ZXMgd2l0aCBzb21lIEVTMyBlbnZpcm9ubWVudHMgdGhhdCBhdHRlbXB0IHRvIHVzZSB2YWx1ZXMsIG5hbWVkXG4gICAgLy8gYWZ0ZXIgYnVpbHQtaW4gY29uc3RydWN0b3JzIGxpa2UgYE9iamVjdGAsIGZvciB0aGUgY3JlYXRpb24gb2YgbGl0ZXJhbHMuXG4gICAgLy8gRVM1IGNsZWFycyB0aGlzIHVwIGJ5IHN0YXRpbmcgdGhhdCBsaXRlcmFscyBtdXN0IHVzZSBidWlsdC1pbiBjb25zdHJ1Y3RvcnMuXG4gICAgLy8gU2VlIGh0dHA6Ly9lczUuZ2l0aHViLmlvLyN4MTEuMS41LlxuICAgIGNvbnRleHQgPSBjb250ZXh0ID8gXy5kZWZhdWx0cyhyb290Lk9iamVjdCgpLCBjb250ZXh0LCBfLnBpY2socm9vdCwgY29udGV4dFByb3BzKSkgOiByb290O1xuXG4gICAgLyoqIE5hdGl2ZSBjb25zdHJ1Y3RvciByZWZlcmVuY2VzICovXG4gICAgdmFyIEFycmF5ID0gY29udGV4dC5BcnJheSxcbiAgICAgICAgQm9vbGVhbiA9IGNvbnRleHQuQm9vbGVhbixcbiAgICAgICAgRGF0ZSA9IGNvbnRleHQuRGF0ZSxcbiAgICAgICAgRnVuY3Rpb24gPSBjb250ZXh0LkZ1bmN0aW9uLFxuICAgICAgICBNYXRoID0gY29udGV4dC5NYXRoLFxuICAgICAgICBOdW1iZXIgPSBjb250ZXh0Lk51bWJlcixcbiAgICAgICAgT2JqZWN0ID0gY29udGV4dC5PYmplY3QsXG4gICAgICAgIFJlZ0V4cCA9IGNvbnRleHQuUmVnRXhwLFxuICAgICAgICBTdHJpbmcgPSBjb250ZXh0LlN0cmluZyxcbiAgICAgICAgVHlwZUVycm9yID0gY29udGV4dC5UeXBlRXJyb3I7XG5cbiAgICAvKipcbiAgICAgKiBVc2VkIGZvciBgQXJyYXlgIG1ldGhvZCByZWZlcmVuY2VzLlxuICAgICAqXG4gICAgICogTm9ybWFsbHkgYEFycmF5LnByb3RvdHlwZWAgd291bGQgc3VmZmljZSwgaG93ZXZlciwgdXNpbmcgYW4gYXJyYXkgbGl0ZXJhbFxuICAgICAqIGF2b2lkcyBpc3N1ZXMgaW4gTmFyd2hhbC5cbiAgICAgKi9cbiAgICB2YXIgYXJyYXlSZWYgPSBbXTtcblxuICAgIC8qKiBVc2VkIGZvciBuYXRpdmUgbWV0aG9kIHJlZmVyZW5jZXMgKi9cbiAgICB2YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4gICAgLyoqIFVzZWQgdG8gcmVzdG9yZSB0aGUgb3JpZ2luYWwgYF9gIHJlZmVyZW5jZSBpbiBgbm9Db25mbGljdGAgKi9cbiAgICB2YXIgb2xkRGFzaCA9IGNvbnRleHQuXztcblxuICAgIC8qKiBVc2VkIHRvIHJlc29sdmUgdGhlIGludGVybmFsIFtbQ2xhc3NdXSBvZiB2YWx1ZXMgKi9cbiAgICB2YXIgdG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuICAgIC8qKiBVc2VkIHRvIGRldGVjdCBpZiBhIG1ldGhvZCBpcyBuYXRpdmUgKi9cbiAgICB2YXIgcmVOYXRpdmUgPSBSZWdFeHAoJ14nICtcbiAgICAgIFN0cmluZyh0b1N0cmluZylcbiAgICAgICAgLnJlcGxhY2UoL1suKis/XiR7fSgpfFtcXF1cXFxcXS9nLCAnXFxcXCQmJylcbiAgICAgICAgLnJlcGxhY2UoL3RvU3RyaW5nfCBmb3IgW15cXF1dKy9nLCAnLio/JykgKyAnJCdcbiAgICApO1xuXG4gICAgLyoqIE5hdGl2ZSBtZXRob2Qgc2hvcnRjdXRzICovXG4gICAgdmFyIGNlaWwgPSBNYXRoLmNlaWwsXG4gICAgICAgIGNsZWFyVGltZW91dCA9IGNvbnRleHQuY2xlYXJUaW1lb3V0LFxuICAgICAgICBmbG9vciA9IE1hdGguZmxvb3IsXG4gICAgICAgIGZuVG9TdHJpbmcgPSBGdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcsXG4gICAgICAgIGdldFByb3RvdHlwZU9mID0gaXNOYXRpdmUoZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YpICYmIGdldFByb3RvdHlwZU9mLFxuICAgICAgICBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5LFxuICAgICAgICBwdXNoID0gYXJyYXlSZWYucHVzaCxcbiAgICAgICAgc2V0VGltZW91dCA9IGNvbnRleHQuc2V0VGltZW91dCxcbiAgICAgICAgc3BsaWNlID0gYXJyYXlSZWYuc3BsaWNlLFxuICAgICAgICB1bnNoaWZ0ID0gYXJyYXlSZWYudW5zaGlmdDtcblxuICAgIC8qKiBVc2VkIHRvIHNldCBtZXRhIGRhdGEgb24gZnVuY3Rpb25zICovXG4gICAgdmFyIGRlZmluZVByb3BlcnR5ID0gKGZ1bmN0aW9uKCkge1xuICAgICAgLy8gSUUgOCBvbmx5IGFjY2VwdHMgRE9NIGVsZW1lbnRzXG4gICAgICB0cnkge1xuICAgICAgICB2YXIgbyA9IHt9LFxuICAgICAgICAgICAgZnVuYyA9IGlzTmF0aXZlKGZ1bmMgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkpICYmIGZ1bmMsXG4gICAgICAgICAgICByZXN1bHQgPSBmdW5jKG8sIG8sIG8pICYmIGZ1bmM7XG4gICAgICB9IGNhdGNoKGUpIHsgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KCkpO1xuXG4gICAgLyogTmF0aXZlIG1ldGhvZCBzaG9ydGN1dHMgZm9yIG1ldGhvZHMgd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMgKi9cbiAgICB2YXIgbmF0aXZlQ3JlYXRlID0gaXNOYXRpdmUobmF0aXZlQ3JlYXRlID0gT2JqZWN0LmNyZWF0ZSkgJiYgbmF0aXZlQ3JlYXRlLFxuICAgICAgICBuYXRpdmVJc0FycmF5ID0gaXNOYXRpdmUobmF0aXZlSXNBcnJheSA9IEFycmF5LmlzQXJyYXkpICYmIG5hdGl2ZUlzQXJyYXksXG4gICAgICAgIG5hdGl2ZUlzRmluaXRlID0gY29udGV4dC5pc0Zpbml0ZSxcbiAgICAgICAgbmF0aXZlSXNOYU4gPSBjb250ZXh0LmlzTmFOLFxuICAgICAgICBuYXRpdmVLZXlzID0gaXNOYXRpdmUobmF0aXZlS2V5cyA9IE9iamVjdC5rZXlzKSAmJiBuYXRpdmVLZXlzLFxuICAgICAgICBuYXRpdmVNYXggPSBNYXRoLm1heCxcbiAgICAgICAgbmF0aXZlTWluID0gTWF0aC5taW4sXG4gICAgICAgIG5hdGl2ZVBhcnNlSW50ID0gY29udGV4dC5wYXJzZUludCxcbiAgICAgICAgbmF0aXZlUmFuZG9tID0gTWF0aC5yYW5kb207XG5cbiAgICAvKiogVXNlZCB0byBsb29rdXAgYSBidWlsdC1pbiBjb25zdHJ1Y3RvciBieSBbW0NsYXNzXV0gKi9cbiAgICB2YXIgY3RvckJ5Q2xhc3MgPSB7fTtcbiAgICBjdG9yQnlDbGFzc1thcnJheUNsYXNzXSA9IEFycmF5O1xuICAgIGN0b3JCeUNsYXNzW2Jvb2xDbGFzc10gPSBCb29sZWFuO1xuICAgIGN0b3JCeUNsYXNzW2RhdGVDbGFzc10gPSBEYXRlO1xuICAgIGN0b3JCeUNsYXNzW2Z1bmNDbGFzc10gPSBGdW5jdGlvbjtcbiAgICBjdG9yQnlDbGFzc1tvYmplY3RDbGFzc10gPSBPYmplY3Q7XG4gICAgY3RvckJ5Q2xhc3NbbnVtYmVyQ2xhc3NdID0gTnVtYmVyO1xuICAgIGN0b3JCeUNsYXNzW3JlZ2V4cENsYXNzXSA9IFJlZ0V4cDtcbiAgICBjdG9yQnlDbGFzc1tzdHJpbmdDbGFzc10gPSBTdHJpbmc7XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBgbG9kYXNoYCBvYmplY3Qgd2hpY2ggd3JhcHMgdGhlIGdpdmVuIHZhbHVlIHRvIGVuYWJsZSBpbnR1aXRpdmVcbiAgICAgKiBtZXRob2QgY2hhaW5pbmcuXG4gICAgICpcbiAgICAgKiBJbiBhZGRpdGlvbiB0byBMby1EYXNoIG1ldGhvZHMsIHdyYXBwZXJzIGFsc28gaGF2ZSB0aGUgZm9sbG93aW5nIGBBcnJheWAgbWV0aG9kczpcbiAgICAgKiBgY29uY2F0YCwgYGpvaW5gLCBgcG9wYCwgYHB1c2hgLCBgcmV2ZXJzZWAsIGBzaGlmdGAsIGBzbGljZWAsIGBzb3J0YCwgYHNwbGljZWAsXG4gICAgICogYW5kIGB1bnNoaWZ0YFxuICAgICAqXG4gICAgICogQ2hhaW5pbmcgaXMgc3VwcG9ydGVkIGluIGN1c3RvbSBidWlsZHMgYXMgbG9uZyBhcyB0aGUgYHZhbHVlYCBtZXRob2QgaXNcbiAgICAgKiBpbXBsaWNpdGx5IG9yIGV4cGxpY2l0bHkgaW5jbHVkZWQgaW4gdGhlIGJ1aWxkLlxuICAgICAqXG4gICAgICogVGhlIGNoYWluYWJsZSB3cmFwcGVyIGZ1bmN0aW9ucyBhcmU6XG4gICAgICogYGFmdGVyYCwgYGFzc2lnbmAsIGBiaW5kYCwgYGJpbmRBbGxgLCBgYmluZEtleWAsIGBjaGFpbmAsIGBjb21wYWN0YCxcbiAgICAgKiBgY29tcG9zZWAsIGBjb25jYXRgLCBgY291bnRCeWAsIGBjcmVhdGVgLCBgY3JlYXRlQ2FsbGJhY2tgLCBgY3VycnlgLFxuICAgICAqIGBkZWJvdW5jZWAsIGBkZWZhdWx0c2AsIGBkZWZlcmAsIGBkZWxheWAsIGBkaWZmZXJlbmNlYCwgYGZpbHRlcmAsIGBmbGF0dGVuYCxcbiAgICAgKiBgZm9yRWFjaGAsIGBmb3JFYWNoUmlnaHRgLCBgZm9ySW5gLCBgZm9ySW5SaWdodGAsIGBmb3JPd25gLCBgZm9yT3duUmlnaHRgLFxuICAgICAqIGBmdW5jdGlvbnNgLCBgZ3JvdXBCeWAsIGBpbmRleEJ5YCwgYGluaXRpYWxgLCBgaW50ZXJzZWN0aW9uYCwgYGludmVydGAsXG4gICAgICogYGludm9rZWAsIGBrZXlzYCwgYG1hcGAsIGBtYXhgLCBgbWVtb2l6ZWAsIGBtZXJnZWAsIGBtaW5gLCBgb2JqZWN0YCwgYG9taXRgLFxuICAgICAqIGBvbmNlYCwgYHBhaXJzYCwgYHBhcnRpYWxgLCBgcGFydGlhbFJpZ2h0YCwgYHBpY2tgLCBgcGx1Y2tgLCBgcHVsbGAsIGBwdXNoYCxcbiAgICAgKiBgcmFuZ2VgLCBgcmVqZWN0YCwgYHJlbW92ZWAsIGByZXN0YCwgYHJldmVyc2VgLCBgc2h1ZmZsZWAsIGBzbGljZWAsIGBzb3J0YCxcbiAgICAgKiBgc29ydEJ5YCwgYHNwbGljZWAsIGB0YXBgLCBgdGhyb3R0bGVgLCBgdGltZXNgLCBgdG9BcnJheWAsIGB0cmFuc2Zvcm1gLFxuICAgICAqIGB1bmlvbmAsIGB1bmlxYCwgYHVuc2hpZnRgLCBgdW56aXBgLCBgdmFsdWVzYCwgYHdoZXJlYCwgYHdpdGhvdXRgLCBgd3JhcGAsXG4gICAgICogYW5kIGB6aXBgXG4gICAgICpcbiAgICAgKiBUaGUgbm9uLWNoYWluYWJsZSB3cmFwcGVyIGZ1bmN0aW9ucyBhcmU6XG4gICAgICogYGNsb25lYCwgYGNsb25lRGVlcGAsIGBjb250YWluc2AsIGBlc2NhcGVgLCBgZXZlcnlgLCBgZmluZGAsIGBmaW5kSW5kZXhgLFxuICAgICAqIGBmaW5kS2V5YCwgYGZpbmRMYXN0YCwgYGZpbmRMYXN0SW5kZXhgLCBgZmluZExhc3RLZXlgLCBgaGFzYCwgYGlkZW50aXR5YCxcbiAgICAgKiBgaW5kZXhPZmAsIGBpc0FyZ3VtZW50c2AsIGBpc0FycmF5YCwgYGlzQm9vbGVhbmAsIGBpc0RhdGVgLCBgaXNFbGVtZW50YCxcbiAgICAgKiBgaXNFbXB0eWAsIGBpc0VxdWFsYCwgYGlzRmluaXRlYCwgYGlzRnVuY3Rpb25gLCBgaXNOYU5gLCBgaXNOdWxsYCwgYGlzTnVtYmVyYCxcbiAgICAgKiBgaXNPYmplY3RgLCBgaXNQbGFpbk9iamVjdGAsIGBpc1JlZ0V4cGAsIGBpc1N0cmluZ2AsIGBpc1VuZGVmaW5lZGAsIGBqb2luYCxcbiAgICAgKiBgbGFzdEluZGV4T2ZgLCBgbWl4aW5gLCBgbm9Db25mbGljdGAsIGBwYXJzZUludGAsIGBwb3BgLCBgcmFuZG9tYCwgYHJlZHVjZWAsXG4gICAgICogYHJlZHVjZVJpZ2h0YCwgYHJlc3VsdGAsIGBzaGlmdGAsIGBzaXplYCwgYHNvbWVgLCBgc29ydGVkSW5kZXhgLCBgcnVuSW5Db250ZXh0YCxcbiAgICAgKiBgdGVtcGxhdGVgLCBgdW5lc2NhcGVgLCBgdW5pcXVlSWRgLCBhbmQgYHZhbHVlYFxuICAgICAqXG4gICAgICogVGhlIHdyYXBwZXIgZnVuY3Rpb25zIGBmaXJzdGAgYW5kIGBsYXN0YCByZXR1cm4gd3JhcHBlZCB2YWx1ZXMgd2hlbiBgbmAgaXNcbiAgICAgKiBwcm92aWRlZCwgb3RoZXJ3aXNlIHRoZXkgcmV0dXJuIHVud3JhcHBlZCB2YWx1ZXMuXG4gICAgICpcbiAgICAgKiBFeHBsaWNpdCBjaGFpbmluZyBjYW4gYmUgZW5hYmxlZCBieSB1c2luZyB0aGUgYF8uY2hhaW5gIG1ldGhvZC5cbiAgICAgKlxuICAgICAqIEBuYW1lIF9cbiAgICAgKiBAY29uc3RydWN0b3JcbiAgICAgKiBAY2F0ZWdvcnkgQ2hhaW5pbmdcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byB3cmFwIGluIGEgYGxvZGFzaGAgaW5zdGFuY2UuXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBhIGBsb2Rhc2hgIGluc3RhbmNlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgd3JhcHBlZCA9IF8oWzEsIDIsIDNdKTtcbiAgICAgKlxuICAgICAqIC8vIHJldHVybnMgYW4gdW53cmFwcGVkIHZhbHVlXG4gICAgICogd3JhcHBlZC5yZWR1Y2UoZnVuY3Rpb24oc3VtLCBudW0pIHtcbiAgICAgKiAgIHJldHVybiBzdW0gKyBudW07XG4gICAgICogfSk7XG4gICAgICogLy8gPT4gNlxuICAgICAqXG4gICAgICogLy8gcmV0dXJucyBhIHdyYXBwZWQgdmFsdWVcbiAgICAgKiB2YXIgc3F1YXJlcyA9IHdyYXBwZWQubWFwKGZ1bmN0aW9uKG51bSkge1xuICAgICAqICAgcmV0dXJuIG51bSAqIG51bTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIF8uaXNBcnJheShzcXVhcmVzKTtcbiAgICAgKiAvLyA9PiBmYWxzZVxuICAgICAqXG4gICAgICogXy5pc0FycmF5KHNxdWFyZXMudmFsdWUoKSk7XG4gICAgICogLy8gPT4gdHJ1ZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGxvZGFzaCh2YWx1ZSkge1xuICAgICAgLy8gZG9uJ3Qgd3JhcCBpZiBhbHJlYWR5IHdyYXBwZWQsIGV2ZW4gaWYgd3JhcHBlZCBieSBhIGRpZmZlcmVudCBgbG9kYXNoYCBjb25zdHJ1Y3RvclxuICAgICAgcmV0dXJuICh2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcgJiYgIWlzQXJyYXkodmFsdWUpICYmIGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsICdfX3dyYXBwZWRfXycpKVxuICAgICAgID8gdmFsdWVcbiAgICAgICA6IG5ldyBsb2Rhc2hXcmFwcGVyKHZhbHVlKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBIGZhc3QgcGF0aCBmb3IgY3JlYXRpbmcgYGxvZGFzaGAgd3JhcHBlciBvYmplY3RzLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byB3cmFwIGluIGEgYGxvZGFzaGAgaW5zdGFuY2UuXG4gICAgICogQHBhcmFtIHtib29sZWFufSBjaGFpbkFsbCBBIGZsYWcgdG8gZW5hYmxlIGNoYWluaW5nIGZvciBhbGwgbWV0aG9kc1xuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYSBgbG9kYXNoYCBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBsb2Rhc2hXcmFwcGVyKHZhbHVlLCBjaGFpbkFsbCkge1xuICAgICAgdGhpcy5fX2NoYWluX18gPSAhIWNoYWluQWxsO1xuICAgICAgdGhpcy5fX3dyYXBwZWRfXyA9IHZhbHVlO1xuICAgIH1cbiAgICAvLyBlbnN1cmUgYG5ldyBsb2Rhc2hXcmFwcGVyYCBpcyBhbiBpbnN0YW5jZSBvZiBgbG9kYXNoYFxuICAgIGxvZGFzaFdyYXBwZXIucHJvdG90eXBlID0gbG9kYXNoLnByb3RvdHlwZTtcblxuICAgIC8qKlxuICAgICAqIEFuIG9iamVjdCB1c2VkIHRvIGZsYWcgZW52aXJvbm1lbnRzIGZlYXR1cmVzLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQHR5cGUgT2JqZWN0XG4gICAgICovXG4gICAgdmFyIHN1cHBvcnQgPSBsb2Rhc2guc3VwcG9ydCA9IHt9O1xuXG4gICAgLyoqXG4gICAgICogRGV0ZWN0IGlmIGZ1bmN0aW9ucyBjYW4gYmUgZGVjb21waWxlZCBieSBgRnVuY3Rpb24jdG9TdHJpbmdgXG4gICAgICogKGFsbCBidXQgUFMzIGFuZCBvbGRlciBPcGVyYSBtb2JpbGUgYnJvd3NlcnMgJiBhdm9pZGVkIGluIFdpbmRvd3MgOCBhcHBzKS5cbiAgICAgKlxuICAgICAqIEBtZW1iZXJPZiBfLnN1cHBvcnRcbiAgICAgKiBAdHlwZSBib29sZWFuXG4gICAgICovXG4gICAgc3VwcG9ydC5mdW5jRGVjb21wID0gIWlzTmF0aXZlKGNvbnRleHQuV2luUlRFcnJvcikgJiYgcmVUaGlzLnRlc3QocnVuSW5Db250ZXh0KTtcblxuICAgIC8qKlxuICAgICAqIERldGVjdCBpZiBgRnVuY3Rpb24jbmFtZWAgaXMgc3VwcG9ydGVkIChhbGwgYnV0IElFKS5cbiAgICAgKlxuICAgICAqIEBtZW1iZXJPZiBfLnN1cHBvcnRcbiAgICAgKiBAdHlwZSBib29sZWFuXG4gICAgICovXG4gICAgc3VwcG9ydC5mdW5jTmFtZXMgPSB0eXBlb2YgRnVuY3Rpb24ubmFtZSA9PSAnc3RyaW5nJztcblxuICAgIC8qKlxuICAgICAqIEJ5IGRlZmF1bHQsIHRoZSB0ZW1wbGF0ZSBkZWxpbWl0ZXJzIHVzZWQgYnkgTG8tRGFzaCBhcmUgc2ltaWxhciB0byB0aG9zZSBpblxuICAgICAqIGVtYmVkZGVkIFJ1YnkgKEVSQikuIENoYW5nZSB0aGUgZm9sbG93aW5nIHRlbXBsYXRlIHNldHRpbmdzIHRvIHVzZSBhbHRlcm5hdGl2ZVxuICAgICAqIGRlbGltaXRlcnMuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAdHlwZSBPYmplY3RcbiAgICAgKi9cbiAgICBsb2Rhc2gudGVtcGxhdGVTZXR0aW5ncyA9IHtcblxuICAgICAgLyoqXG4gICAgICAgKiBVc2VkIHRvIGRldGVjdCBgZGF0YWAgcHJvcGVydHkgdmFsdWVzIHRvIGJlIEhUTUwtZXNjYXBlZC5cbiAgICAgICAqXG4gICAgICAgKiBAbWVtYmVyT2YgXy50ZW1wbGF0ZVNldHRpbmdzXG4gICAgICAgKiBAdHlwZSBSZWdFeHBcbiAgICAgICAqL1xuICAgICAgJ2VzY2FwZSc6IC88JS0oW1xcc1xcU10rPyklPi9nLFxuXG4gICAgICAvKipcbiAgICAgICAqIFVzZWQgdG8gZGV0ZWN0IGNvZGUgdG8gYmUgZXZhbHVhdGVkLlxuICAgICAgICpcbiAgICAgICAqIEBtZW1iZXJPZiBfLnRlbXBsYXRlU2V0dGluZ3NcbiAgICAgICAqIEB0eXBlIFJlZ0V4cFxuICAgICAgICovXG4gICAgICAnZXZhbHVhdGUnOiAvPCUoW1xcc1xcU10rPyklPi9nLFxuXG4gICAgICAvKipcbiAgICAgICAqIFVzZWQgdG8gZGV0ZWN0IGBkYXRhYCBwcm9wZXJ0eSB2YWx1ZXMgdG8gaW5qZWN0LlxuICAgICAgICpcbiAgICAgICAqIEBtZW1iZXJPZiBfLnRlbXBsYXRlU2V0dGluZ3NcbiAgICAgICAqIEB0eXBlIFJlZ0V4cFxuICAgICAgICovXG4gICAgICAnaW50ZXJwb2xhdGUnOiByZUludGVycG9sYXRlLFxuXG4gICAgICAvKipcbiAgICAgICAqIFVzZWQgdG8gcmVmZXJlbmNlIHRoZSBkYXRhIG9iamVjdCBpbiB0aGUgdGVtcGxhdGUgdGV4dC5cbiAgICAgICAqXG4gICAgICAgKiBAbWVtYmVyT2YgXy50ZW1wbGF0ZVNldHRpbmdzXG4gICAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgICAqL1xuICAgICAgJ3ZhcmlhYmxlJzogJycsXG5cbiAgICAgIC8qKlxuICAgICAgICogVXNlZCB0byBpbXBvcnQgdmFyaWFibGVzIGludG8gdGhlIGNvbXBpbGVkIHRlbXBsYXRlLlxuICAgICAgICpcbiAgICAgICAqIEBtZW1iZXJPZiBfLnRlbXBsYXRlU2V0dGluZ3NcbiAgICAgICAqIEB0eXBlIE9iamVjdFxuICAgICAgICovXG4gICAgICAnaW1wb3J0cyc6IHtcblxuICAgICAgICAvKipcbiAgICAgICAgICogQSByZWZlcmVuY2UgdG8gdGhlIGBsb2Rhc2hgIGZ1bmN0aW9uLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAbWVtYmVyT2YgXy50ZW1wbGF0ZVNldHRpbmdzLmltcG9ydHNcbiAgICAgICAgICogQHR5cGUgRnVuY3Rpb25cbiAgICAgICAgICovXG4gICAgICAgICdfJzogbG9kYXNoXG4gICAgICB9XG4gICAgfTtcblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLyoqXG4gICAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uYmluZGAgdGhhdCBjcmVhdGVzIHRoZSBib3VuZCBmdW5jdGlvbiBhbmRcbiAgICAgKiBzZXRzIGl0cyBtZXRhIGRhdGEuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7QXJyYXl9IGJpbmREYXRhIFRoZSBiaW5kIGRhdGEgYXJyYXkuXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYm91bmQgZnVuY3Rpb24uXG4gICAgICovXG4gICAgZnVuY3Rpb24gYmFzZUJpbmQoYmluZERhdGEpIHtcbiAgICAgIHZhciBmdW5jID0gYmluZERhdGFbMF0sXG4gICAgICAgICAgcGFydGlhbEFyZ3MgPSBiaW5kRGF0YVsyXSxcbiAgICAgICAgICB0aGlzQXJnID0gYmluZERhdGFbNF07XG5cbiAgICAgIGZ1bmN0aW9uIGJvdW5kKCkge1xuICAgICAgICAvLyBgRnVuY3Rpb24jYmluZGAgc3BlY1xuICAgICAgICAvLyBodHRwOi8vZXM1LmdpdGh1Yi5pby8jeDE1LjMuNC41XG4gICAgICAgIGlmIChwYXJ0aWFsQXJncykge1xuICAgICAgICAgIC8vIGF2b2lkIGBhcmd1bWVudHNgIG9iamVjdCBkZW9wdGltaXphdGlvbnMgYnkgdXNpbmcgYHNsaWNlYCBpbnN0ZWFkXG4gICAgICAgICAgLy8gb2YgYEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsYCBhbmQgbm90IGFzc2lnbmluZyBgYXJndW1lbnRzYCB0byBhXG4gICAgICAgICAgLy8gdmFyaWFibGUgYXMgYSB0ZXJuYXJ5IGV4cHJlc3Npb25cbiAgICAgICAgICB2YXIgYXJncyA9IHNsaWNlKHBhcnRpYWxBcmdzKTtcbiAgICAgICAgICBwdXNoLmFwcGx5KGFyZ3MsIGFyZ3VtZW50cyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gbWltaWMgdGhlIGNvbnN0cnVjdG9yJ3MgYHJldHVybmAgYmVoYXZpb3JcbiAgICAgICAgLy8gaHR0cDovL2VzNS5naXRodWIuaW8vI3gxMy4yLjJcbiAgICAgICAgaWYgKHRoaXMgaW5zdGFuY2VvZiBib3VuZCkge1xuICAgICAgICAgIC8vIGVuc3VyZSBgbmV3IGJvdW5kYCBpcyBhbiBpbnN0YW5jZSBvZiBgZnVuY2BcbiAgICAgICAgICB2YXIgdGhpc0JpbmRpbmcgPSBiYXNlQ3JlYXRlKGZ1bmMucHJvdG90eXBlKSxcbiAgICAgICAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzQmluZGluZywgYXJncyB8fCBhcmd1bWVudHMpO1xuICAgICAgICAgIHJldHVybiBpc09iamVjdChyZXN1bHQpID8gcmVzdWx0IDogdGhpc0JpbmRpbmc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkodGhpc0FyZywgYXJncyB8fCBhcmd1bWVudHMpO1xuICAgICAgfVxuICAgICAgc2V0QmluZERhdGEoYm91bmQsIGJpbmREYXRhKTtcbiAgICAgIHJldHVybiBib3VuZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5jbG9uZWAgd2l0aG91dCBhcmd1bWVudCBqdWdnbGluZyBvciBzdXBwb3J0XG4gICAgICogZm9yIGB0aGlzQXJnYCBiaW5kaW5nLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjbG9uZS5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXA9ZmFsc2VdIFNwZWNpZnkgYSBkZWVwIGNsb25lLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjbG9uaW5nIHZhbHVlcy5cbiAgICAgKiBAcGFyYW0ge0FycmF5fSBbc3RhY2tBPVtdXSBUcmFja3MgdHJhdmVyc2VkIHNvdXJjZSBvYmplY3RzLlxuICAgICAqIEBwYXJhbSB7QXJyYXl9IFtzdGFja0I9W11dIEFzc29jaWF0ZXMgY2xvbmVzIHdpdGggc291cmNlIGNvdW50ZXJwYXJ0cy5cbiAgICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgY2xvbmVkIHZhbHVlLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGJhc2VDbG9uZSh2YWx1ZSwgaXNEZWVwLCBjYWxsYmFjaywgc3RhY2tBLCBzdGFja0IpIHtcbiAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICB2YXIgcmVzdWx0ID0gY2FsbGJhY2sodmFsdWUpO1xuICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCAhPSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIGluc3BlY3QgW1tDbGFzc11dXG4gICAgICB2YXIgaXNPYmogPSBpc09iamVjdCh2YWx1ZSk7XG4gICAgICBpZiAoaXNPYmopIHtcbiAgICAgICAgdmFyIGNsYXNzTmFtZSA9IHRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICAgICAgICBpZiAoIWNsb25lYWJsZUNsYXNzZXNbY2xhc3NOYW1lXSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgY3RvciA9IGN0b3JCeUNsYXNzW2NsYXNzTmFtZV07XG4gICAgICAgIHN3aXRjaCAoY2xhc3NOYW1lKSB7XG4gICAgICAgICAgY2FzZSBib29sQ2xhc3M6XG4gICAgICAgICAgY2FzZSBkYXRlQ2xhc3M6XG4gICAgICAgICAgICByZXR1cm4gbmV3IGN0b3IoK3ZhbHVlKTtcblxuICAgICAgICAgIGNhc2UgbnVtYmVyQ2xhc3M6XG4gICAgICAgICAgY2FzZSBzdHJpbmdDbGFzczpcbiAgICAgICAgICAgIHJldHVybiBuZXcgY3Rvcih2YWx1ZSk7XG5cbiAgICAgICAgICBjYXNlIHJlZ2V4cENsYXNzOlxuICAgICAgICAgICAgcmVzdWx0ID0gY3Rvcih2YWx1ZS5zb3VyY2UsIHJlRmxhZ3MuZXhlYyh2YWx1ZSkpO1xuICAgICAgICAgICAgcmVzdWx0Lmxhc3RJbmRleCA9IHZhbHVlLmxhc3RJbmRleDtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpO1xuICAgICAgaWYgKGlzRGVlcCkge1xuICAgICAgICAvLyBjaGVjayBmb3IgY2lyY3VsYXIgcmVmZXJlbmNlcyBhbmQgcmV0dXJuIGNvcnJlc3BvbmRpbmcgY2xvbmVcbiAgICAgICAgdmFyIGluaXRlZFN0YWNrID0gIXN0YWNrQTtcbiAgICAgICAgc3RhY2tBIHx8IChzdGFja0EgPSBnZXRBcnJheSgpKTtcbiAgICAgICAgc3RhY2tCIHx8IChzdGFja0IgPSBnZXRBcnJheSgpKTtcblxuICAgICAgICB2YXIgbGVuZ3RoID0gc3RhY2tBLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgICAgICAgaWYgKHN0YWNrQVtsZW5ndGhdID09IHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gc3RhY2tCW2xlbmd0aF07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCA9IGlzQXJyID8gY3Rvcih2YWx1ZS5sZW5ndGgpIDoge307XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmVzdWx0ID0gaXNBcnIgPyBzbGljZSh2YWx1ZSkgOiBhc3NpZ24oe30sIHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIC8vIGFkZCBhcnJheSBwcm9wZXJ0aWVzIGFzc2lnbmVkIGJ5IGBSZWdFeHAjZXhlY2BcbiAgICAgIGlmIChpc0Fycikge1xuICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgJ2luZGV4JykpIHtcbiAgICAgICAgICByZXN1bHQuaW5kZXggPSB2YWx1ZS5pbmRleDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgJ2lucHV0JykpIHtcbiAgICAgICAgICByZXN1bHQuaW5wdXQgPSB2YWx1ZS5pbnB1dDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gZXhpdCBmb3Igc2hhbGxvdyBjbG9uZVxuICAgICAgaWYgKCFpc0RlZXApIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIC8vIGFkZCB0aGUgc291cmNlIHZhbHVlIHRvIHRoZSBzdGFjayBvZiB0cmF2ZXJzZWQgb2JqZWN0c1xuICAgICAgLy8gYW5kIGFzc29jaWF0ZSBpdCB3aXRoIGl0cyBjbG9uZVxuICAgICAgc3RhY2tBLnB1c2godmFsdWUpO1xuICAgICAgc3RhY2tCLnB1c2gocmVzdWx0KTtcblxuICAgICAgLy8gcmVjdXJzaXZlbHkgcG9wdWxhdGUgY2xvbmUgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKVxuICAgICAgKGlzQXJyID8gZm9yRWFjaCA6IGZvck93bikodmFsdWUsIGZ1bmN0aW9uKG9ialZhbHVlLCBrZXkpIHtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBiYXNlQ2xvbmUob2JqVmFsdWUsIGlzRGVlcCwgY2FsbGJhY2ssIHN0YWNrQSwgc3RhY2tCKTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAoaW5pdGVkU3RhY2spIHtcbiAgICAgICAgcmVsZWFzZUFycmF5KHN0YWNrQSk7XG4gICAgICAgIHJlbGVhc2VBcnJheShzdGFja0IpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5jcmVhdGVgIHdpdGhvdXQgc3VwcG9ydCBmb3IgYXNzaWduaW5nXG4gICAgICogcHJvcGVydGllcyB0byB0aGUgY3JlYXRlZCBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBwcm90b3R5cGUgVGhlIG9iamVjdCB0byBpbmhlcml0IGZyb20uXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IG9iamVjdC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBiYXNlQ3JlYXRlKHByb3RvdHlwZSwgcHJvcGVydGllcykge1xuICAgICAgcmV0dXJuIGlzT2JqZWN0KHByb3RvdHlwZSkgPyBuYXRpdmVDcmVhdGUocHJvdG90eXBlKSA6IHt9O1xuICAgIH1cbiAgICAvLyBmYWxsYmFjayBmb3IgYnJvd3NlcnMgd2l0aG91dCBgT2JqZWN0LmNyZWF0ZWBcbiAgICBpZiAoIW5hdGl2ZUNyZWF0ZSkge1xuICAgICAgYmFzZUNyZWF0ZSA9IChmdW5jdGlvbigpIHtcbiAgICAgICAgZnVuY3Rpb24gT2JqZWN0KCkge31cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHByb3RvdHlwZSkge1xuICAgICAgICAgIGlmIChpc09iamVjdChwcm90b3R5cGUpKSB7XG4gICAgICAgICAgICBPYmplY3QucHJvdG90eXBlID0gcHJvdG90eXBlO1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IG5ldyBPYmplY3Q7XG4gICAgICAgICAgICBPYmplY3QucHJvdG90eXBlID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdCB8fCBjb250ZXh0Lk9iamVjdCgpO1xuICAgICAgICB9O1xuICAgICAgfSgpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5jcmVhdGVDYWxsYmFja2Agd2l0aG91dCBzdXBwb3J0IGZvciBjcmVhdGluZ1xuICAgICAqIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrcy5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHsqfSBbZnVuYz1pZGVudGl0eV0gVGhlIHZhbHVlIHRvIGNvbnZlcnQgdG8gYSBjYWxsYmFjay5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgdGhlIGNyZWF0ZWQgY2FsbGJhY2suXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFthcmdDb3VudF0gVGhlIG51bWJlciBvZiBhcmd1bWVudHMgdGhlIGNhbGxiYWNrIGFjY2VwdHMuXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIGEgY2FsbGJhY2sgZnVuY3Rpb24uXG4gICAgICovXG4gICAgZnVuY3Rpb24gYmFzZUNyZWF0ZUNhbGxiYWNrKGZ1bmMsIHRoaXNBcmcsIGFyZ0NvdW50KSB7XG4gICAgICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gaWRlbnRpdHk7XG4gICAgICB9XG4gICAgICAvLyBleGl0IGVhcmx5IGZvciBubyBgdGhpc0FyZ2Agb3IgYWxyZWFkeSBib3VuZCBieSBgRnVuY3Rpb24jYmluZGBcbiAgICAgIGlmICh0eXBlb2YgdGhpc0FyZyA9PSAndW5kZWZpbmVkJyB8fCAhKCdwcm90b3R5cGUnIGluIGZ1bmMpKSB7XG4gICAgICAgIHJldHVybiBmdW5jO1xuICAgICAgfVxuICAgICAgdmFyIGJpbmREYXRhID0gZnVuYy5fX2JpbmREYXRhX187XG4gICAgICBpZiAodHlwZW9mIGJpbmREYXRhID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmIChzdXBwb3J0LmZ1bmNOYW1lcykge1xuICAgICAgICAgIGJpbmREYXRhID0gIWZ1bmMubmFtZTtcbiAgICAgICAgfVxuICAgICAgICBiaW5kRGF0YSA9IGJpbmREYXRhIHx8ICFzdXBwb3J0LmZ1bmNEZWNvbXA7XG4gICAgICAgIGlmICghYmluZERhdGEpIHtcbiAgICAgICAgICB2YXIgc291cmNlID0gZm5Ub1N0cmluZy5jYWxsKGZ1bmMpO1xuICAgICAgICAgIGlmICghc3VwcG9ydC5mdW5jTmFtZXMpIHtcbiAgICAgICAgICAgIGJpbmREYXRhID0gIXJlRnVuY05hbWUudGVzdChzb3VyY2UpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoIWJpbmREYXRhKSB7XG4gICAgICAgICAgICAvLyBjaGVja3MgaWYgYGZ1bmNgIHJlZmVyZW5jZXMgdGhlIGB0aGlzYCBrZXl3b3JkIGFuZCBzdG9yZXMgdGhlIHJlc3VsdFxuICAgICAgICAgICAgYmluZERhdGEgPSByZVRoaXMudGVzdChzb3VyY2UpO1xuICAgICAgICAgICAgc2V0QmluZERhdGEoZnVuYywgYmluZERhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLy8gZXhpdCBlYXJseSBpZiB0aGVyZSBhcmUgbm8gYHRoaXNgIHJlZmVyZW5jZXMgb3IgYGZ1bmNgIGlzIGJvdW5kXG4gICAgICBpZiAoYmluZERhdGEgPT09IGZhbHNlIHx8IChiaW5kRGF0YSAhPT0gdHJ1ZSAmJiBiaW5kRGF0YVsxXSAmIDEpKSB7XG4gICAgICAgIHJldHVybiBmdW5jO1xuICAgICAgfVxuICAgICAgc3dpdGNoIChhcmdDb3VudCkge1xuICAgICAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBmdW5jLmNhbGwodGhpc0FyZywgdmFsdWUpO1xuICAgICAgICB9O1xuICAgICAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLCBhLCBiKTtcbiAgICAgICAgfTtcbiAgICAgICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24odmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLCB2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pO1xuICAgICAgICB9O1xuICAgICAgICBjYXNlIDQ6IHJldHVybiBmdW5jdGlvbihhY2N1bXVsYXRvciwgdmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLCBhY2N1bXVsYXRvciwgdmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBiaW5kKGZ1bmMsIHRoaXNBcmcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBjcmVhdGVXcmFwcGVyYCB0aGF0IGNyZWF0ZXMgdGhlIHdyYXBwZXIgYW5kXG4gICAgICogc2V0cyBpdHMgbWV0YSBkYXRhLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBiaW5kRGF0YSBUaGUgYmluZCBkYXRhIGFycmF5LlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGJhc2VDcmVhdGVXcmFwcGVyKGJpbmREYXRhKSB7XG4gICAgICB2YXIgZnVuYyA9IGJpbmREYXRhWzBdLFxuICAgICAgICAgIGJpdG1hc2sgPSBiaW5kRGF0YVsxXSxcbiAgICAgICAgICBwYXJ0aWFsQXJncyA9IGJpbmREYXRhWzJdLFxuICAgICAgICAgIHBhcnRpYWxSaWdodEFyZ3MgPSBiaW5kRGF0YVszXSxcbiAgICAgICAgICB0aGlzQXJnID0gYmluZERhdGFbNF0sXG4gICAgICAgICAgYXJpdHkgPSBiaW5kRGF0YVs1XTtcblxuICAgICAgdmFyIGlzQmluZCA9IGJpdG1hc2sgJiAxLFxuICAgICAgICAgIGlzQmluZEtleSA9IGJpdG1hc2sgJiAyLFxuICAgICAgICAgIGlzQ3VycnkgPSBiaXRtYXNrICYgNCxcbiAgICAgICAgICBpc0N1cnJ5Qm91bmQgPSBiaXRtYXNrICYgOCxcbiAgICAgICAgICBrZXkgPSBmdW5jO1xuXG4gICAgICBmdW5jdGlvbiBib3VuZCgpIHtcbiAgICAgICAgdmFyIHRoaXNCaW5kaW5nID0gaXNCaW5kID8gdGhpc0FyZyA6IHRoaXM7XG4gICAgICAgIGlmIChwYXJ0aWFsQXJncykge1xuICAgICAgICAgIHZhciBhcmdzID0gc2xpY2UocGFydGlhbEFyZ3MpO1xuICAgICAgICAgIHB1c2guYXBwbHkoYXJncywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFydGlhbFJpZ2h0QXJncyB8fCBpc0N1cnJ5KSB7XG4gICAgICAgICAgYXJncyB8fCAoYXJncyA9IHNsaWNlKGFyZ3VtZW50cykpO1xuICAgICAgICAgIGlmIChwYXJ0aWFsUmlnaHRBcmdzKSB7XG4gICAgICAgICAgICBwdXNoLmFwcGx5KGFyZ3MsIHBhcnRpYWxSaWdodEFyZ3MpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaXNDdXJyeSAmJiBhcmdzLmxlbmd0aCA8IGFyaXR5KSB7XG4gICAgICAgICAgICBiaXRtYXNrIHw9IDE2ICYgfjMyO1xuICAgICAgICAgICAgcmV0dXJuIGJhc2VDcmVhdGVXcmFwcGVyKFtmdW5jLCAoaXNDdXJyeUJvdW5kID8gYml0bWFzayA6IGJpdG1hc2sgJiB+MyksIGFyZ3MsIG51bGwsIHRoaXNBcmcsIGFyaXR5XSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGFyZ3MgfHwgKGFyZ3MgPSBhcmd1bWVudHMpO1xuICAgICAgICBpZiAoaXNCaW5kS2V5KSB7XG4gICAgICAgICAgZnVuYyA9IHRoaXNCaW5kaW5nW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMgaW5zdGFuY2VvZiBib3VuZCkge1xuICAgICAgICAgIHRoaXNCaW5kaW5nID0gYmFzZUNyZWF0ZShmdW5jLnByb3RvdHlwZSk7XG4gICAgICAgICAgdmFyIHJlc3VsdCA9IGZ1bmMuYXBwbHkodGhpc0JpbmRpbmcsIGFyZ3MpO1xuICAgICAgICAgIHJldHVybiBpc09iamVjdChyZXN1bHQpID8gcmVzdWx0IDogdGhpc0JpbmRpbmc7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkodGhpc0JpbmRpbmcsIGFyZ3MpO1xuICAgICAgfVxuICAgICAgc2V0QmluZERhdGEoYm91bmQsIGJpbmREYXRhKTtcbiAgICAgIHJldHVybiBib3VuZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5kaWZmZXJlbmNlYCB0aGF0IGFjY2VwdHMgYSBzaW5nbGUgYXJyYXlcbiAgICAgKiBvZiB2YWx1ZXMgdG8gZXhjbHVkZS5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHByb2Nlc3MuXG4gICAgICogQHBhcmFtIHtBcnJheX0gW3ZhbHVlc10gVGhlIGFycmF5IG9mIHZhbHVlcyB0byBleGNsdWRlLlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhIG5ldyBhcnJheSBvZiBmaWx0ZXJlZCB2YWx1ZXMuXG4gICAgICovXG4gICAgZnVuY3Rpb24gYmFzZURpZmZlcmVuY2UoYXJyYXksIHZhbHVlcykge1xuICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgaW5kZXhPZiA9IGdldEluZGV4T2YoKSxcbiAgICAgICAgICBsZW5ndGggPSBhcnJheSA/IGFycmF5Lmxlbmd0aCA6IDAsXG4gICAgICAgICAgaXNMYXJnZSA9IGxlbmd0aCA+PSBsYXJnZUFycmF5U2l6ZSAmJiBpbmRleE9mID09PSBiYXNlSW5kZXhPZixcbiAgICAgICAgICByZXN1bHQgPSBbXTtcblxuICAgICAgaWYgKGlzTGFyZ2UpIHtcbiAgICAgICAgdmFyIGNhY2hlID0gY3JlYXRlQ2FjaGUodmFsdWVzKTtcbiAgICAgICAgaWYgKGNhY2hlKSB7XG4gICAgICAgICAgaW5kZXhPZiA9IGNhY2hlSW5kZXhPZjtcbiAgICAgICAgICB2YWx1ZXMgPSBjYWNoZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpc0xhcmdlID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XTtcbiAgICAgICAgaWYgKGluZGV4T2YodmFsdWVzLCB2YWx1ZSkgPCAwKSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2godmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoaXNMYXJnZSkge1xuICAgICAgICByZWxlYXNlT2JqZWN0KHZhbHVlcyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmZsYXR0ZW5gIHdpdGhvdXQgc3VwcG9ydCBmb3IgY2FsbGJhY2tcbiAgICAgKiBzaG9ydGhhbmRzIG9yIGB0aGlzQXJnYCBiaW5kaW5nLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gZmxhdHRlbi5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtpc1NoYWxsb3c9ZmFsc2VdIEEgZmxhZyB0byByZXN0cmljdCBmbGF0dGVuaW5nIHRvIGEgc2luZ2xlIGxldmVsLlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzU3RyaWN0PWZhbHNlXSBBIGZsYWcgdG8gcmVzdHJpY3QgZmxhdHRlbmluZyB0byBhcnJheXMgYW5kIGBhcmd1bWVudHNgIG9iamVjdHMuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFtmcm9tSW5kZXg9MF0gVGhlIGluZGV4IHRvIHN0YXJ0IGZyb20uXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgbmV3IGZsYXR0ZW5lZCBhcnJheS5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBiYXNlRmxhdHRlbihhcnJheSwgaXNTaGFsbG93LCBpc1N0cmljdCwgZnJvbUluZGV4KSB7XG4gICAgICB2YXIgaW5kZXggPSAoZnJvbUluZGV4IHx8IDApIC0gMSxcbiAgICAgICAgICBsZW5ndGggPSBhcnJheSA/IGFycmF5Lmxlbmd0aCA6IDAsXG4gICAgICAgICAgcmVzdWx0ID0gW107XG5cbiAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XTtcblxuICAgICAgICBpZiAodmFsdWUgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnICYmIHR5cGVvZiB2YWx1ZS5sZW5ndGggPT0gJ251bWJlcidcbiAgICAgICAgICAgICYmIChpc0FycmF5KHZhbHVlKSB8fCBpc0FyZ3VtZW50cyh2YWx1ZSkpKSB7XG4gICAgICAgICAgLy8gcmVjdXJzaXZlbHkgZmxhdHRlbiBhcnJheXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKVxuICAgICAgICAgIGlmICghaXNTaGFsbG93KSB7XG4gICAgICAgICAgICB2YWx1ZSA9IGJhc2VGbGF0dGVuKHZhbHVlLCBpc1NoYWxsb3csIGlzU3RyaWN0KTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIHZhbEluZGV4ID0gLTEsXG4gICAgICAgICAgICAgIHZhbExlbmd0aCA9IHZhbHVlLmxlbmd0aCxcbiAgICAgICAgICAgICAgcmVzSW5kZXggPSByZXN1bHQubGVuZ3RoO1xuXG4gICAgICAgICAgcmVzdWx0Lmxlbmd0aCArPSB2YWxMZW5ndGg7XG4gICAgICAgICAgd2hpbGUgKCsrdmFsSW5kZXggPCB2YWxMZW5ndGgpIHtcbiAgICAgICAgICAgIHJlc3VsdFtyZXNJbmRleCsrXSA9IHZhbHVlW3ZhbEluZGV4XTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoIWlzU3RyaWN0KSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2godmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzRXF1YWxgLCB3aXRob3V0IHN1cHBvcnQgZm9yIGB0aGlzQXJnYCBiaW5kaW5nLFxuICAgICAqIHRoYXQgYWxsb3dzIHBhcnRpYWwgXCJfLndoZXJlXCIgc3R5bGUgY29tcGFyaXNvbnMuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7Kn0gYSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAgICAgKiBAcGFyYW0geyp9IGIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmluZyB2YWx1ZXMuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2lzV2hlcmU9ZmFsc2VdIEEgZmxhZyB0byBpbmRpY2F0ZSBwZXJmb3JtaW5nIHBhcnRpYWwgY29tcGFyaXNvbnMuXG4gICAgICogQHBhcmFtIHtBcnJheX0gW3N0YWNrQT1bXV0gVHJhY2tzIHRyYXZlcnNlZCBgYWAgb2JqZWN0cy5cbiAgICAgKiBAcGFyYW0ge0FycmF5fSBbc3RhY2tCPVtdXSBUcmFja3MgdHJhdmVyc2VkIGBiYCBvYmplY3RzLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gICAgICovXG4gICAgZnVuY3Rpb24gYmFzZUlzRXF1YWwoYSwgYiwgY2FsbGJhY2ssIGlzV2hlcmUsIHN0YWNrQSwgc3RhY2tCKSB7XG4gICAgICAvLyB1c2VkIHRvIGluZGljYXRlIHRoYXQgd2hlbiBjb21wYXJpbmcgb2JqZWN0cywgYGFgIGhhcyBhdCBsZWFzdCB0aGUgcHJvcGVydGllcyBvZiBgYmBcbiAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICB2YXIgcmVzdWx0ID0gY2FsbGJhY2soYSwgYik7XG4gICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgcmV0dXJuICEhcmVzdWx0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBleGl0IGVhcmx5IGZvciBpZGVudGljYWwgdmFsdWVzXG4gICAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICAvLyB0cmVhdCBgKzBgIHZzLiBgLTBgIGFzIG5vdCBlcXVhbFxuICAgICAgICByZXR1cm4gYSAhPT0gMCB8fCAoMSAvIGEgPT0gMSAvIGIpO1xuICAgICAgfVxuICAgICAgdmFyIHR5cGUgPSB0eXBlb2YgYSxcbiAgICAgICAgICBvdGhlclR5cGUgPSB0eXBlb2YgYjtcblxuICAgICAgLy8gZXhpdCBlYXJseSBmb3IgdW5saWtlIHByaW1pdGl2ZSB2YWx1ZXNcbiAgICAgIGlmIChhID09PSBhICYmXG4gICAgICAgICAgIShhICYmIG9iamVjdFR5cGVzW3R5cGVdKSAmJlxuICAgICAgICAgICEoYiAmJiBvYmplY3RUeXBlc1tvdGhlclR5cGVdKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICAvLyBleGl0IGVhcmx5IGZvciBgbnVsbGAgYW5kIGB1bmRlZmluZWRgIGF2b2lkaW5nIEVTMydzIEZ1bmN0aW9uI2NhbGwgYmVoYXZpb3JcbiAgICAgIC8vIGh0dHA6Ly9lczUuZ2l0aHViLmlvLyN4MTUuMy40LjRcbiAgICAgIGlmIChhID09IG51bGwgfHwgYiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBhID09PSBiO1xuICAgICAgfVxuICAgICAgLy8gY29tcGFyZSBbW0NsYXNzXV0gbmFtZXNcbiAgICAgIHZhciBjbGFzc05hbWUgPSB0b1N0cmluZy5jYWxsKGEpLFxuICAgICAgICAgIG90aGVyQ2xhc3MgPSB0b1N0cmluZy5jYWxsKGIpO1xuXG4gICAgICBpZiAoY2xhc3NOYW1lID09IGFyZ3NDbGFzcykge1xuICAgICAgICBjbGFzc05hbWUgPSBvYmplY3RDbGFzcztcbiAgICAgIH1cbiAgICAgIGlmIChvdGhlckNsYXNzID09IGFyZ3NDbGFzcykge1xuICAgICAgICBvdGhlckNsYXNzID0gb2JqZWN0Q2xhc3M7XG4gICAgICB9XG4gICAgICBpZiAoY2xhc3NOYW1lICE9IG90aGVyQ2xhc3MpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgc3dpdGNoIChjbGFzc05hbWUpIHtcbiAgICAgICAgY2FzZSBib29sQ2xhc3M6XG4gICAgICAgIGNhc2UgZGF0ZUNsYXNzOlxuICAgICAgICAgIC8vIGNvZXJjZSBkYXRlcyBhbmQgYm9vbGVhbnMgdG8gbnVtYmVycywgZGF0ZXMgdG8gbWlsbGlzZWNvbmRzIGFuZCBib29sZWFuc1xuICAgICAgICAgIC8vIHRvIGAxYCBvciBgMGAgdHJlYXRpbmcgaW52YWxpZCBkYXRlcyBjb2VyY2VkIHRvIGBOYU5gIGFzIG5vdCBlcXVhbFxuICAgICAgICAgIHJldHVybiArYSA9PSArYjtcblxuICAgICAgICBjYXNlIG51bWJlckNsYXNzOlxuICAgICAgICAgIC8vIHRyZWF0IGBOYU5gIHZzLiBgTmFOYCBhcyBlcXVhbFxuICAgICAgICAgIHJldHVybiAoYSAhPSArYSlcbiAgICAgICAgICAgID8gYiAhPSArYlxuICAgICAgICAgICAgLy8gYnV0IHRyZWF0IGArMGAgdnMuIGAtMGAgYXMgbm90IGVxdWFsXG4gICAgICAgICAgICA6IChhID09IDAgPyAoMSAvIGEgPT0gMSAvIGIpIDogYSA9PSArYik7XG5cbiAgICAgICAgY2FzZSByZWdleHBDbGFzczpcbiAgICAgICAgY2FzZSBzdHJpbmdDbGFzczpcbiAgICAgICAgICAvLyBjb2VyY2UgcmVnZXhlcyB0byBzdHJpbmdzIChodHRwOi8vZXM1LmdpdGh1Yi5pby8jeDE1LjEwLjYuNClcbiAgICAgICAgICAvLyB0cmVhdCBzdHJpbmcgcHJpbWl0aXZlcyBhbmQgdGhlaXIgY29ycmVzcG9uZGluZyBvYmplY3QgaW5zdGFuY2VzIGFzIGVxdWFsXG4gICAgICAgICAgcmV0dXJuIGEgPT0gU3RyaW5nKGIpO1xuICAgICAgfVxuICAgICAgdmFyIGlzQXJyID0gY2xhc3NOYW1lID09IGFycmF5Q2xhc3M7XG4gICAgICBpZiAoIWlzQXJyKSB7XG4gICAgICAgIC8vIHVud3JhcCBhbnkgYGxvZGFzaGAgd3JhcHBlZCB2YWx1ZXNcbiAgICAgICAgdmFyIGFXcmFwcGVkID0gaGFzT3duUHJvcGVydHkuY2FsbChhLCAnX193cmFwcGVkX18nKSxcbiAgICAgICAgICAgIGJXcmFwcGVkID0gaGFzT3duUHJvcGVydHkuY2FsbChiLCAnX193cmFwcGVkX18nKTtcblxuICAgICAgICBpZiAoYVdyYXBwZWQgfHwgYldyYXBwZWQpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZUlzRXF1YWwoYVdyYXBwZWQgPyBhLl9fd3JhcHBlZF9fIDogYSwgYldyYXBwZWQgPyBiLl9fd3JhcHBlZF9fIDogYiwgY2FsbGJhY2ssIGlzV2hlcmUsIHN0YWNrQSwgc3RhY2tCKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBleGl0IGZvciBmdW5jdGlvbnMgYW5kIERPTSBub2Rlc1xuICAgICAgICBpZiAoY2xhc3NOYW1lICE9IG9iamVjdENsYXNzKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIC8vIGluIG9sZGVyIHZlcnNpb25zIG9mIE9wZXJhLCBgYXJndW1lbnRzYCBvYmplY3RzIGhhdmUgYEFycmF5YCBjb25zdHJ1Y3RvcnNcbiAgICAgICAgdmFyIGN0b3JBID0gYS5jb25zdHJ1Y3RvcixcbiAgICAgICAgICAgIGN0b3JCID0gYi5jb25zdHJ1Y3RvcjtcblxuICAgICAgICAvLyBub24gYE9iamVjdGAgb2JqZWN0IGluc3RhbmNlcyB3aXRoIGRpZmZlcmVudCBjb25zdHJ1Y3RvcnMgYXJlIG5vdCBlcXVhbFxuICAgICAgICBpZiAoY3RvckEgIT0gY3RvckIgJiZcbiAgICAgICAgICAgICAgIShpc0Z1bmN0aW9uKGN0b3JBKSAmJiBjdG9yQSBpbnN0YW5jZW9mIGN0b3JBICYmIGlzRnVuY3Rpb24oY3RvckIpICYmIGN0b3JCIGluc3RhbmNlb2YgY3RvckIpICYmXG4gICAgICAgICAgICAgICgnY29uc3RydWN0b3InIGluIGEgJiYgJ2NvbnN0cnVjdG9yJyBpbiBiKVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBhc3N1bWUgY3ljbGljIHN0cnVjdHVyZXMgYXJlIGVxdWFsXG4gICAgICAvLyB0aGUgYWxnb3JpdGhtIGZvciBkZXRlY3RpbmcgY3ljbGljIHN0cnVjdHVyZXMgaXMgYWRhcHRlZCBmcm9tIEVTIDUuMVxuICAgICAgLy8gc2VjdGlvbiAxNS4xMi4zLCBhYnN0cmFjdCBvcGVyYXRpb24gYEpPYCAoaHR0cDovL2VzNS5naXRodWIuaW8vI3gxNS4xMi4zKVxuICAgICAgdmFyIGluaXRlZFN0YWNrID0gIXN0YWNrQTtcbiAgICAgIHN0YWNrQSB8fCAoc3RhY2tBID0gZ2V0QXJyYXkoKSk7XG4gICAgICBzdGFja0IgfHwgKHN0YWNrQiA9IGdldEFycmF5KCkpO1xuXG4gICAgICB2YXIgbGVuZ3RoID0gc3RhY2tBLmxlbmd0aDtcbiAgICAgIHdoaWxlIChsZW5ndGgtLSkge1xuICAgICAgICBpZiAoc3RhY2tBW2xlbmd0aF0gPT0gYSkge1xuICAgICAgICAgIHJldHVybiBzdGFja0JbbGVuZ3RoXSA9PSBiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgc2l6ZSA9IDA7XG4gICAgICByZXN1bHQgPSB0cnVlO1xuXG4gICAgICAvLyBhZGQgYGFgIGFuZCBgYmAgdG8gdGhlIHN0YWNrIG9mIHRyYXZlcnNlZCBvYmplY3RzXG4gICAgICBzdGFja0EucHVzaChhKTtcbiAgICAgIHN0YWNrQi5wdXNoKGIpO1xuXG4gICAgICAvLyByZWN1cnNpdmVseSBjb21wYXJlIG9iamVjdHMgYW5kIGFycmF5cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpXG4gICAgICBpZiAoaXNBcnIpIHtcbiAgICAgICAgLy8gY29tcGFyZSBsZW5ndGhzIHRvIGRldGVybWluZSBpZiBhIGRlZXAgY29tcGFyaXNvbiBpcyBuZWNlc3NhcnlcbiAgICAgICAgbGVuZ3RoID0gYS5sZW5ndGg7XG4gICAgICAgIHNpemUgPSBiLmxlbmd0aDtcbiAgICAgICAgcmVzdWx0ID0gc2l6ZSA9PSBsZW5ndGg7XG5cbiAgICAgICAgaWYgKHJlc3VsdCB8fCBpc1doZXJlKSB7XG4gICAgICAgICAgLy8gZGVlcCBjb21wYXJlIHRoZSBjb250ZW50cywgaWdub3Jpbmcgbm9uLW51bWVyaWMgcHJvcGVydGllc1xuICAgICAgICAgIHdoaWxlIChzaXplLS0pIHtcbiAgICAgICAgICAgIHZhciBpbmRleCA9IGxlbmd0aCxcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGJbc2l6ZV07XG5cbiAgICAgICAgICAgIGlmIChpc1doZXJlKSB7XG4gICAgICAgICAgICAgIHdoaWxlIChpbmRleC0tKSB7XG4gICAgICAgICAgICAgICAgaWYgKChyZXN1bHQgPSBiYXNlSXNFcXVhbChhW2luZGV4XSwgdmFsdWUsIGNhbGxiYWNrLCBpc1doZXJlLCBzdGFja0EsIHN0YWNrQikpKSB7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIShyZXN1bHQgPSBiYXNlSXNFcXVhbChhW3NpemVdLCB2YWx1ZSwgY2FsbGJhY2ssIGlzV2hlcmUsIHN0YWNrQSwgc3RhY2tCKSkpIHtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgLy8gZGVlcCBjb21wYXJlIG9iamVjdHMgdXNpbmcgYGZvckluYCwgaW5zdGVhZCBvZiBgZm9yT3duYCwgdG8gYXZvaWQgYE9iamVjdC5rZXlzYFxuICAgICAgICAvLyB3aGljaCwgaW4gdGhpcyBjYXNlLCBpcyBtb3JlIGNvc3RseVxuICAgICAgICBmb3JJbihiLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBiKSB7XG4gICAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoYiwga2V5KSkge1xuICAgICAgICAgICAgLy8gY291bnQgdGhlIG51bWJlciBvZiBwcm9wZXJ0aWVzLlxuICAgICAgICAgICAgc2l6ZSsrO1xuICAgICAgICAgICAgLy8gZGVlcCBjb21wYXJlIGVhY2ggcHJvcGVydHkgdmFsdWUuXG4gICAgICAgICAgICByZXR1cm4gKHJlc3VsdCA9IGhhc093blByb3BlcnR5LmNhbGwoYSwga2V5KSAmJiBiYXNlSXNFcXVhbChhW2tleV0sIHZhbHVlLCBjYWxsYmFjaywgaXNXaGVyZSwgc3RhY2tBLCBzdGFja0IpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChyZXN1bHQgJiYgIWlzV2hlcmUpIHtcbiAgICAgICAgICAvLyBlbnN1cmUgYm90aCBvYmplY3RzIGhhdmUgdGhlIHNhbWUgbnVtYmVyIG9mIHByb3BlcnRpZXNcbiAgICAgICAgICBmb3JJbihhLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBhKSB7XG4gICAgICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChhLCBrZXkpKSB7XG4gICAgICAgICAgICAgIC8vIGBzaXplYCB3aWxsIGJlIGAtMWAgaWYgYGFgIGhhcyBtb3JlIHByb3BlcnRpZXMgdGhhbiBgYmBcbiAgICAgICAgICAgICAgcmV0dXJuIChyZXN1bHQgPSAtLXNpemUgPiAtMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHN0YWNrQS5wb3AoKTtcbiAgICAgIHN0YWNrQi5wb3AoKTtcblxuICAgICAgaWYgKGluaXRlZFN0YWNrKSB7XG4gICAgICAgIHJlbGVhc2VBcnJheShzdGFja0EpO1xuICAgICAgICByZWxlYXNlQXJyYXkoc3RhY2tCKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ubWVyZ2VgIHdpdGhvdXQgYXJndW1lbnQganVnZ2xpbmcgb3Igc3VwcG9ydFxuICAgICAqIGZvciBgdGhpc0FyZ2AgYmluZGluZy5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgZGVzdGluYXRpb24gb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIHNvdXJjZSBvYmplY3QuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIG1lcmdpbmcgcHJvcGVydGllcy5cbiAgICAgKiBAcGFyYW0ge0FycmF5fSBbc3RhY2tBPVtdXSBUcmFja3MgdHJhdmVyc2VkIHNvdXJjZSBvYmplY3RzLlxuICAgICAqIEBwYXJhbSB7QXJyYXl9IFtzdGFja0I9W11dIEFzc29jaWF0ZXMgdmFsdWVzIHdpdGggc291cmNlIGNvdW50ZXJwYXJ0cy5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBiYXNlTWVyZ2Uob2JqZWN0LCBzb3VyY2UsIGNhbGxiYWNrLCBzdGFja0EsIHN0YWNrQikge1xuICAgICAgKGlzQXJyYXkoc291cmNlKSA/IGZvckVhY2ggOiBmb3JPd24pKHNvdXJjZSwgZnVuY3Rpb24oc291cmNlLCBrZXkpIHtcbiAgICAgICAgdmFyIGZvdW5kLFxuICAgICAgICAgICAgaXNBcnIsXG4gICAgICAgICAgICByZXN1bHQgPSBzb3VyY2UsXG4gICAgICAgICAgICB2YWx1ZSA9IG9iamVjdFtrZXldO1xuXG4gICAgICAgIGlmIChzb3VyY2UgJiYgKChpc0FyciA9IGlzQXJyYXkoc291cmNlKSkgfHwgaXNQbGFpbk9iamVjdChzb3VyY2UpKSkge1xuICAgICAgICAgIC8vIGF2b2lkIG1lcmdpbmcgcHJldmlvdXNseSBtZXJnZWQgY3ljbGljIHNvdXJjZXNcbiAgICAgICAgICB2YXIgc3RhY2tMZW5ndGggPSBzdGFja0EubGVuZ3RoO1xuICAgICAgICAgIHdoaWxlIChzdGFja0xlbmd0aC0tKSB7XG4gICAgICAgICAgICBpZiAoKGZvdW5kID0gc3RhY2tBW3N0YWNrTGVuZ3RoXSA9PSBzb3VyY2UpKSB7XG4gICAgICAgICAgICAgIHZhbHVlID0gc3RhY2tCW3N0YWNrTGVuZ3RoXTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICghZm91bmQpIHtcbiAgICAgICAgICAgIHZhciBpc1NoYWxsb3c7XG4gICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgcmVzdWx0ID0gY2FsbGJhY2sodmFsdWUsIHNvdXJjZSk7XG4gICAgICAgICAgICAgIGlmICgoaXNTaGFsbG93ID0gdHlwZW9mIHJlc3VsdCAhPSAndW5kZWZpbmVkJykpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHJlc3VsdDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpc1NoYWxsb3cpIHtcbiAgICAgICAgICAgICAgdmFsdWUgPSBpc0FyclxuICAgICAgICAgICAgICAgID8gKGlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBbXSlcbiAgICAgICAgICAgICAgICA6IChpc1BsYWluT2JqZWN0KHZhbHVlKSA/IHZhbHVlIDoge30pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gYWRkIGBzb3VyY2VgIGFuZCBhc3NvY2lhdGVkIGB2YWx1ZWAgdG8gdGhlIHN0YWNrIG9mIHRyYXZlcnNlZCBvYmplY3RzXG4gICAgICAgICAgICBzdGFja0EucHVzaChzb3VyY2UpO1xuICAgICAgICAgICAgc3RhY2tCLnB1c2godmFsdWUpO1xuXG4gICAgICAgICAgICAvLyByZWN1cnNpdmVseSBtZXJnZSBvYmplY3RzIGFuZCBhcnJheXMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKVxuICAgICAgICAgICAgaWYgKCFpc1NoYWxsb3cpIHtcbiAgICAgICAgICAgICAgYmFzZU1lcmdlKHZhbHVlLCBzb3VyY2UsIGNhbGxiYWNrLCBzdGFja0EsIHN0YWNrQik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgcmVzdWx0ID0gY2FsbGJhY2sodmFsdWUsIHNvdXJjZSk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICByZXN1bHQgPSBzb3VyY2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnJhbmRvbWAgd2l0aG91dCBhcmd1bWVudCBqdWdnbGluZyBvciBzdXBwb3J0XG4gICAgICogZm9yIHJldHVybmluZyBmbG9hdGluZy1wb2ludCBudW1iZXJzLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbWluIFRoZSBtaW5pbXVtIHBvc3NpYmxlIHZhbHVlLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtYXggVGhlIG1heGltdW0gcG9zc2libGUgdmFsdWUuXG4gICAgICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyBhIHJhbmRvbSBudW1iZXIuXG4gICAgICovXG4gICAgZnVuY3Rpb24gYmFzZVJhbmRvbShtaW4sIG1heCkge1xuICAgICAgcmV0dXJuIG1pbiArIGZsb29yKG5hdGl2ZVJhbmRvbSgpICogKG1heCAtIG1pbiArIDEpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy51bmlxYCB3aXRob3V0IHN1cHBvcnQgZm9yIGNhbGxiYWNrIHNob3J0aGFuZHNcbiAgICAgKiBvciBgdGhpc0FyZ2AgYmluZGluZy5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHByb2Nlc3MuXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbaXNTb3J0ZWQ9ZmFsc2VdIEEgZmxhZyB0byBpbmRpY2F0ZSB0aGF0IGBhcnJheWAgaXMgc29ydGVkLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gVGhlIGZ1bmN0aW9uIGNhbGxlZCBwZXIgaXRlcmF0aW9uLlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhIGR1cGxpY2F0ZS12YWx1ZS1mcmVlIGFycmF5LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGJhc2VVbmlxKGFycmF5LCBpc1NvcnRlZCwgY2FsbGJhY2spIHtcbiAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgIGluZGV4T2YgPSBnZXRJbmRleE9mKCksXG4gICAgICAgICAgbGVuZ3RoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwLFxuICAgICAgICAgIHJlc3VsdCA9IFtdO1xuXG4gICAgICB2YXIgaXNMYXJnZSA9ICFpc1NvcnRlZCAmJiBsZW5ndGggPj0gbGFyZ2VBcnJheVNpemUgJiYgaW5kZXhPZiA9PT0gYmFzZUluZGV4T2YsXG4gICAgICAgICAgc2VlbiA9IChjYWxsYmFjayB8fCBpc0xhcmdlKSA/IGdldEFycmF5KCkgOiByZXN1bHQ7XG5cbiAgICAgIGlmIChpc0xhcmdlKSB7XG4gICAgICAgIHZhciBjYWNoZSA9IGNyZWF0ZUNhY2hlKHNlZW4pO1xuICAgICAgICBpbmRleE9mID0gY2FjaGVJbmRleE9mO1xuICAgICAgICBzZWVuID0gY2FjaGU7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF0sXG4gICAgICAgICAgICBjb21wdXRlZCA9IGNhbGxiYWNrID8gY2FsbGJhY2sodmFsdWUsIGluZGV4LCBhcnJheSkgOiB2YWx1ZTtcblxuICAgICAgICBpZiAoaXNTb3J0ZWRcbiAgICAgICAgICAgICAgPyAhaW5kZXggfHwgc2VlbltzZWVuLmxlbmd0aCAtIDFdICE9PSBjb21wdXRlZFxuICAgICAgICAgICAgICA6IGluZGV4T2Yoc2VlbiwgY29tcHV0ZWQpIDwgMFxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgaWYgKGNhbGxiYWNrIHx8IGlzTGFyZ2UpIHtcbiAgICAgICAgICAgIHNlZW4ucHVzaChjb21wdXRlZCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGlzTGFyZ2UpIHtcbiAgICAgICAgcmVsZWFzZUFycmF5KHNlZW4uYXJyYXkpO1xuICAgICAgICByZWxlYXNlT2JqZWN0KHNlZW4pO1xuICAgICAgfSBlbHNlIGlmIChjYWxsYmFjaykge1xuICAgICAgICByZWxlYXNlQXJyYXkoc2Vlbik7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGFnZ3JlZ2F0ZXMgYSBjb2xsZWN0aW9uLCBjcmVhdGluZyBhbiBvYmplY3QgY29tcG9zZWRcbiAgICAgKiBvZiBrZXlzIGdlbmVyYXRlZCBmcm9tIHRoZSByZXN1bHRzIG9mIHJ1bm5pbmcgZWFjaCBlbGVtZW50IG9mIHRoZSBjb2xsZWN0aW9uXG4gICAgICogdGhyb3VnaCBhIGNhbGxiYWNrLiBUaGUgZ2l2ZW4gYHNldHRlcmAgZnVuY3Rpb24gc2V0cyB0aGUga2V5cyBhbmQgdmFsdWVzXG4gICAgICogb2YgdGhlIGNvbXBvc2VkIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gc2V0dGVyIFRoZSBzZXR0ZXIgZnVuY3Rpb24uXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYWdncmVnYXRvciBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGVBZ2dyZWdhdG9yKHNldHRlcikge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGNvbGxlY3Rpb24sIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICAgICAgY2FsbGJhY2sgPSBsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDMpO1xuXG4gICAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgICAgbGVuZ3RoID0gY29sbGVjdGlvbiA/IGNvbGxlY3Rpb24ubGVuZ3RoIDogMDtcblxuICAgICAgICBpZiAodHlwZW9mIGxlbmd0aCA9PSAnbnVtYmVyJykge1xuICAgICAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBjb2xsZWN0aW9uW2luZGV4XTtcbiAgICAgICAgICAgIHNldHRlcihyZXN1bHQsIHZhbHVlLCBjYWxsYmFjayh2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pLCBjb2xsZWN0aW9uKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZm9yT3duKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24pIHtcbiAgICAgICAgICAgIHNldHRlcihyZXN1bHQsIHZhbHVlLCBjYWxsYmFjayh2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSwgY29sbGVjdGlvbik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLCBlaXRoZXIgY3VycmllcyBvciBpbnZva2VzIGBmdW5jYFxuICAgICAqIHdpdGggYW4gb3B0aW9uYWwgYHRoaXNgIGJpbmRpbmcgYW5kIHBhcnRpYWxseSBhcHBsaWVkIGFyZ3VtZW50cy5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxzdHJpbmd9IGZ1bmMgVGhlIGZ1bmN0aW9uIG9yIG1ldGhvZCBuYW1lIHRvIHJlZmVyZW5jZS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBvZiBtZXRob2QgZmxhZ3MgdG8gY29tcG9zZS5cbiAgICAgKiAgVGhlIGJpdG1hc2sgbWF5IGJlIGNvbXBvc2VkIG9mIHRoZSBmb2xsb3dpbmcgZmxhZ3M6XG4gICAgICogIDEgLSBgXy5iaW5kYFxuICAgICAqICAyIC0gYF8uYmluZEtleWBcbiAgICAgKiAgNCAtIGBfLmN1cnJ5YFxuICAgICAqICA4IC0gYF8uY3VycnlgIChib3VuZClcbiAgICAgKiAgMTYgLSBgXy5wYXJ0aWFsYFxuICAgICAqICAzMiAtIGBfLnBhcnRpYWxSaWdodGBcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBbcGFydGlhbEFyZ3NdIEFuIGFycmF5IG9mIGFyZ3VtZW50cyB0byBwcmVwZW5kIHRvIHRob3NlXG4gICAgICogIHByb3ZpZGVkIHRvIHRoZSBuZXcgZnVuY3Rpb24uXG4gICAgICogQHBhcmFtIHtBcnJheX0gW3BhcnRpYWxSaWdodEFyZ3NdIEFuIGFycmF5IG9mIGFyZ3VtZW50cyB0byBhcHBlbmQgdG8gdGhvc2VcbiAgICAgKiAgcHJvdmlkZWQgdG8gdGhlIG5ldyBmdW5jdGlvbi5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGZ1bmNgLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbYXJpdHldIFRoZSBhcml0eSBvZiBgZnVuY2AuXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZnVuY3Rpb24uXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlV3JhcHBlcihmdW5jLCBiaXRtYXNrLCBwYXJ0aWFsQXJncywgcGFydGlhbFJpZ2h0QXJncywgdGhpc0FyZywgYXJpdHkpIHtcbiAgICAgIHZhciBpc0JpbmQgPSBiaXRtYXNrICYgMSxcbiAgICAgICAgICBpc0JpbmRLZXkgPSBiaXRtYXNrICYgMixcbiAgICAgICAgICBpc0N1cnJ5ID0gYml0bWFzayAmIDQsXG4gICAgICAgICAgaXNDdXJyeUJvdW5kID0gYml0bWFzayAmIDgsXG4gICAgICAgICAgaXNQYXJ0aWFsID0gYml0bWFzayAmIDE2LFxuICAgICAgICAgIGlzUGFydGlhbFJpZ2h0ID0gYml0bWFzayAmIDMyO1xuXG4gICAgICBpZiAoIWlzQmluZEtleSAmJiAhaXNGdW5jdGlvbihmdW5jKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yO1xuICAgICAgfVxuICAgICAgaWYgKGlzUGFydGlhbCAmJiAhcGFydGlhbEFyZ3MubGVuZ3RoKSB7XG4gICAgICAgIGJpdG1hc2sgJj0gfjE2O1xuICAgICAgICBpc1BhcnRpYWwgPSBwYXJ0aWFsQXJncyA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGlzUGFydGlhbFJpZ2h0ICYmICFwYXJ0aWFsUmlnaHRBcmdzLmxlbmd0aCkge1xuICAgICAgICBiaXRtYXNrICY9IH4zMjtcbiAgICAgICAgaXNQYXJ0aWFsUmlnaHQgPSBwYXJ0aWFsUmlnaHRBcmdzID0gZmFsc2U7XG4gICAgICB9XG4gICAgICB2YXIgYmluZERhdGEgPSBmdW5jICYmIGZ1bmMuX19iaW5kRGF0YV9fO1xuICAgICAgaWYgKGJpbmREYXRhICYmIGJpbmREYXRhICE9PSB0cnVlKSB7XG4gICAgICAgIC8vIGNsb25lIGBiaW5kRGF0YWBcbiAgICAgICAgYmluZERhdGEgPSBzbGljZShiaW5kRGF0YSk7XG4gICAgICAgIGlmIChiaW5kRGF0YVsyXSkge1xuICAgICAgICAgIGJpbmREYXRhWzJdID0gc2xpY2UoYmluZERhdGFbMl0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChiaW5kRGF0YVszXSkge1xuICAgICAgICAgIGJpbmREYXRhWzNdID0gc2xpY2UoYmluZERhdGFbM10pO1xuICAgICAgICB9XG4gICAgICAgIC8vIHNldCBgdGhpc0JpbmRpbmdgIGlzIG5vdCBwcmV2aW91c2x5IGJvdW5kXG4gICAgICAgIGlmIChpc0JpbmQgJiYgIShiaW5kRGF0YVsxXSAmIDEpKSB7XG4gICAgICAgICAgYmluZERhdGFbNF0gPSB0aGlzQXJnO1xuICAgICAgICB9XG4gICAgICAgIC8vIHNldCBpZiBwcmV2aW91c2x5IGJvdW5kIGJ1dCBub3QgY3VycmVudGx5IChzdWJzZXF1ZW50IGN1cnJpZWQgZnVuY3Rpb25zKVxuICAgICAgICBpZiAoIWlzQmluZCAmJiBiaW5kRGF0YVsxXSAmIDEpIHtcbiAgICAgICAgICBiaXRtYXNrIHw9IDg7XG4gICAgICAgIH1cbiAgICAgICAgLy8gc2V0IGN1cnJpZWQgYXJpdHkgaWYgbm90IHlldCBzZXRcbiAgICAgICAgaWYgKGlzQ3VycnkgJiYgIShiaW5kRGF0YVsxXSAmIDQpKSB7XG4gICAgICAgICAgYmluZERhdGFbNV0gPSBhcml0eTtcbiAgICAgICAgfVxuICAgICAgICAvLyBhcHBlbmQgcGFydGlhbCBsZWZ0IGFyZ3VtZW50c1xuICAgICAgICBpZiAoaXNQYXJ0aWFsKSB7XG4gICAgICAgICAgcHVzaC5hcHBseShiaW5kRGF0YVsyXSB8fCAoYmluZERhdGFbMl0gPSBbXSksIHBhcnRpYWxBcmdzKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBhcHBlbmQgcGFydGlhbCByaWdodCBhcmd1bWVudHNcbiAgICAgICAgaWYgKGlzUGFydGlhbFJpZ2h0KSB7XG4gICAgICAgICAgdW5zaGlmdC5hcHBseShiaW5kRGF0YVszXSB8fCAoYmluZERhdGFbM10gPSBbXSksIHBhcnRpYWxSaWdodEFyZ3MpO1xuICAgICAgICB9XG4gICAgICAgIC8vIG1lcmdlIGZsYWdzXG4gICAgICAgIGJpbmREYXRhWzFdIHw9IGJpdG1hc2s7XG4gICAgICAgIHJldHVybiBjcmVhdGVXcmFwcGVyLmFwcGx5KG51bGwsIGJpbmREYXRhKTtcbiAgICAgIH1cbiAgICAgIC8vIGZhc3QgcGF0aCBmb3IgYF8uYmluZGBcbiAgICAgIHZhciBjcmVhdGVyID0gKGJpdG1hc2sgPT0gMSB8fCBiaXRtYXNrID09PSAxNykgPyBiYXNlQmluZCA6IGJhc2VDcmVhdGVXcmFwcGVyO1xuICAgICAgcmV0dXJuIGNyZWF0ZXIoW2Z1bmMsIGJpdG1hc2ssIHBhcnRpYWxBcmdzLCBwYXJ0aWFsUmlnaHRBcmdzLCB0aGlzQXJnLCBhcml0eV0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVzZWQgYnkgYGVzY2FwZWAgdG8gY29udmVydCBjaGFyYWN0ZXJzIHRvIEhUTUwgZW50aXRpZXMuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtYXRjaCBUaGUgbWF0Y2hlZCBjaGFyYWN0ZXIgdG8gZXNjYXBlLlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGVzY2FwZWQgY2hhcmFjdGVyLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGVzY2FwZUh0bWxDaGFyKG1hdGNoKSB7XG4gICAgICByZXR1cm4gaHRtbEVzY2FwZXNbbWF0Y2hdO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGFwcHJvcHJpYXRlIFwiaW5kZXhPZlwiIGZ1bmN0aW9uLiBJZiB0aGUgYF8uaW5kZXhPZmAgbWV0aG9kIGlzXG4gICAgICogY3VzdG9taXplZCwgdGhpcyBtZXRob2QgcmV0dXJucyB0aGUgY3VzdG9tIG1ldGhvZCwgb3RoZXJ3aXNlIGl0IHJldHVybnNcbiAgICAgKiB0aGUgYGJhc2VJbmRleE9mYCBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBcImluZGV4T2ZcIiBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBnZXRJbmRleE9mKCkge1xuICAgICAgdmFyIHJlc3VsdCA9IChyZXN1bHQgPSBsb2Rhc2guaW5kZXhPZikgPT09IGluZGV4T2YgPyBiYXNlSW5kZXhPZiA6IHJlc3VsdDtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBuYXRpdmUgZnVuY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYHZhbHVlYCBpcyBhIG5hdGl2ZSBmdW5jdGlvbiwgZWxzZSBgZmFsc2VgLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzTmF0aXZlKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdmdW5jdGlvbicgJiYgcmVOYXRpdmUudGVzdCh2YWx1ZSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2V0cyBgdGhpc2AgYmluZGluZyBkYXRhIG9uIGEgZ2l2ZW4gZnVuY3Rpb24uXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHNldCBkYXRhIG9uLlxuICAgICAqIEBwYXJhbSB7QXJyYXl9IHZhbHVlIFRoZSBkYXRhIGFycmF5IHRvIHNldC5cbiAgICAgKi9cbiAgICB2YXIgc2V0QmluZERhdGEgPSAhZGVmaW5lUHJvcGVydHkgPyBub29wIDogZnVuY3Rpb24oZnVuYywgdmFsdWUpIHtcbiAgICAgIGRlc2NyaXB0b3IudmFsdWUgPSB2YWx1ZTtcbiAgICAgIGRlZmluZVByb3BlcnR5KGZ1bmMsICdfX2JpbmREYXRhX18nLCBkZXNjcmlwdG9yKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQSBmYWxsYmFjayBpbXBsZW1lbnRhdGlvbiBvZiBgaXNQbGFpbk9iamVjdGAgd2hpY2ggY2hlY2tzIGlmIGEgZ2l2ZW4gdmFsdWVcbiAgICAgKiBpcyBhbiBvYmplY3QgY3JlYXRlZCBieSB0aGUgYE9iamVjdGAgY29uc3RydWN0b3IsIGFzc3VtaW5nIG9iamVjdHMgY3JlYXRlZFxuICAgICAqIGJ5IHRoZSBgT2JqZWN0YCBjb25zdHJ1Y3RvciBoYXZlIG5vIGluaGVyaXRlZCBlbnVtZXJhYmxlIHByb3BlcnRpZXMgYW5kIHRoYXRcbiAgICAgKiB0aGVyZSBhcmUgbm8gYE9iamVjdC5wcm90b3R5cGVgIGV4dGVuc2lvbnMuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcGxhaW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gICAgICovXG4gICAgZnVuY3Rpb24gc2hpbUlzUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgICAgIHZhciBjdG9yLFxuICAgICAgICAgIHJlc3VsdDtcblxuICAgICAgLy8gYXZvaWQgbm9uIE9iamVjdCBvYmplY3RzLCBgYXJndW1lbnRzYCBvYmplY3RzLCBhbmQgRE9NIGVsZW1lbnRzXG4gICAgICBpZiAoISh2YWx1ZSAmJiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PSBvYmplY3RDbGFzcykgfHxcbiAgICAgICAgICAoY3RvciA9IHZhbHVlLmNvbnN0cnVjdG9yLCBpc0Z1bmN0aW9uKGN0b3IpICYmICEoY3RvciBpbnN0YW5jZW9mIGN0b3IpKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgICAvLyBJbiBtb3N0IGVudmlyb25tZW50cyBhbiBvYmplY3QncyBvd24gcHJvcGVydGllcyBhcmUgaXRlcmF0ZWQgYmVmb3JlXG4gICAgICAvLyBpdHMgaW5oZXJpdGVkIHByb3BlcnRpZXMuIElmIHRoZSBsYXN0IGl0ZXJhdGVkIHByb3BlcnR5IGlzIGFuIG9iamVjdCdzXG4gICAgICAvLyBvd24gcHJvcGVydHkgdGhlbiB0aGVyZSBhcmUgbm8gaW5oZXJpdGVkIGVudW1lcmFibGUgcHJvcGVydGllcy5cbiAgICAgIGZvckluKHZhbHVlLCBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAgICAgIHJlc3VsdCA9IGtleTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHR5cGVvZiByZXN1bHQgPT0gJ3VuZGVmaW5lZCcgfHwgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgcmVzdWx0KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBVc2VkIGJ5IGB1bmVzY2FwZWAgdG8gY29udmVydCBIVE1MIGVudGl0aWVzIHRvIGNoYXJhY3RlcnMuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtYXRjaCBUaGUgbWF0Y2hlZCBjaGFyYWN0ZXIgdG8gdW5lc2NhcGUuXG4gICAgICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgdW5lc2NhcGVkIGNoYXJhY3Rlci5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB1bmVzY2FwZUh0bWxDaGFyKG1hdGNoKSB7XG4gICAgICByZXR1cm4gaHRtbFVuZXNjYXBlc1ttYXRjaF07XG4gICAgfVxuXG4gICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogKGZ1bmN0aW9uKCkgeyByZXR1cm4gXy5pc0FyZ3VtZW50cyhhcmd1bWVudHMpOyB9KSgxLCAyLCAzKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiBfLmlzQXJndW1lbnRzKFsxLCAyLCAzXSk7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc0FyZ3VtZW50cyh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JyAmJiB0eXBlb2YgdmFsdWUubGVuZ3RoID09ICdudW1iZXInICYmXG4gICAgICAgIHRvU3RyaW5nLmNhbGwodmFsdWUpID09IGFyZ3NDbGFzcyB8fCBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhbiBhcnJheS5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEB0eXBlIEZ1bmN0aW9uXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGB2YWx1ZWAgaXMgYW4gYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogKGZ1bmN0aW9uKCkgeyByZXR1cm4gXy5pc0FycmF5KGFyZ3VtZW50cyk7IH0pKCk7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKlxuICAgICAqIF8uaXNBcnJheShbMSwgMiwgM10pO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICB2YXIgaXNBcnJheSA9IG5hdGl2ZUlzQXJyYXkgfHwgZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcgJiYgdHlwZW9mIHZhbHVlLmxlbmd0aCA9PSAnbnVtYmVyJyAmJlxuICAgICAgICB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PSBhcnJheUNsYXNzIHx8IGZhbHNlO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBBIGZhbGxiYWNrIGltcGxlbWVudGF0aW9uIG9mIGBPYmplY3Qua2V5c2Agd2hpY2ggcHJvZHVjZXMgYW4gYXJyYXkgb2YgdGhlXG4gICAgICogZ2l2ZW4gb2JqZWN0J3Mgb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEB0eXBlIEZ1bmN0aW9uXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGFuIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICAgICAqL1xuICAgIHZhciBzaGltS2V5cyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgdmFyIGluZGV4LCBpdGVyYWJsZSA9IG9iamVjdCwgcmVzdWx0ID0gW107XG4gICAgICBpZiAoIWl0ZXJhYmxlKSByZXR1cm4gcmVzdWx0O1xuICAgICAgaWYgKCEob2JqZWN0VHlwZXNbdHlwZW9mIG9iamVjdF0pKSByZXR1cm4gcmVzdWx0O1xuICAgICAgICBmb3IgKGluZGV4IGluIGl0ZXJhYmxlKSB7XG4gICAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwoaXRlcmFibGUsIGluZGV4KSkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goaW5kZXgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdFxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGFycmF5IGNvbXBvc2VkIG9mIHRoZSBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBvZiBhbiBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhbiBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5rZXlzKHsgJ29uZSc6IDEsICd0d28nOiAyLCAndGhyZWUnOiAzIH0pO1xuICAgICAqIC8vID0+IFsnb25lJywgJ3R3bycsICd0aHJlZSddIChwcm9wZXJ0eSBvcmRlciBpcyBub3QgZ3VhcmFudGVlZCBhY3Jvc3MgZW52aXJvbm1lbnRzKVxuICAgICAqL1xuICAgIHZhciBrZXlzID0gIW5hdGl2ZUtleXMgPyBzaGltS2V5cyA6IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgaWYgKCFpc09iamVjdChvYmplY3QpKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBuYXRpdmVLZXlzKG9iamVjdCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gY29udmVydCBjaGFyYWN0ZXJzIHRvIEhUTUwgZW50aXRpZXM6XG4gICAgICpcbiAgICAgKiBUaG91Z2ggdGhlIGA+YCBjaGFyYWN0ZXIgaXMgZXNjYXBlZCBmb3Igc3ltbWV0cnksIGNoYXJhY3RlcnMgbGlrZSBgPmAgYW5kIGAvYFxuICAgICAqIGRvbid0IHJlcXVpcmUgZXNjYXBpbmcgaW4gSFRNTCBhbmQgaGF2ZSBubyBzcGVjaWFsIG1lYW5pbmcgdW5sZXNzIHRoZXkncmUgcGFydFxuICAgICAqIG9mIGEgdGFnIG9yIGFuIHVucXVvdGVkIGF0dHJpYnV0ZSB2YWx1ZS5cbiAgICAgKiBodHRwOi8vbWF0aGlhc2J5bmVucy5iZS9ub3Rlcy9hbWJpZ3VvdXMtYW1wZXJzYW5kcyAodW5kZXIgXCJzZW1pLXJlbGF0ZWQgZnVuIGZhY3RcIilcbiAgICAgKi9cbiAgICB2YXIgaHRtbEVzY2FwZXMgPSB7XG4gICAgICAnJic6ICcmYW1wOycsXG4gICAgICAnPCc6ICcmbHQ7JyxcbiAgICAgICc+JzogJyZndDsnLFxuICAgICAgJ1wiJzogJyZxdW90OycsXG4gICAgICBcIidcIjogJyYjMzk7J1xuICAgIH07XG5cbiAgICAvKiogVXNlZCB0byBjb252ZXJ0IEhUTUwgZW50aXRpZXMgdG8gY2hhcmFjdGVycyAqL1xuICAgIHZhciBodG1sVW5lc2NhcGVzID0gaW52ZXJ0KGh0bWxFc2NhcGVzKTtcblxuICAgIC8qKiBVc2VkIHRvIG1hdGNoIEhUTUwgZW50aXRpZXMgYW5kIEhUTUwgY2hhcmFjdGVycyAqL1xuICAgIHZhciByZUVzY2FwZWRIdG1sID0gUmVnRXhwKCcoJyArIGtleXMoaHRtbFVuZXNjYXBlcykuam9pbignfCcpICsgJyknLCAnZycpLFxuICAgICAgICByZVVuZXNjYXBlZEh0bWwgPSBSZWdFeHAoJ1snICsga2V5cyhodG1sRXNjYXBlcykuam9pbignJykgKyAnXScsICdnJyk7XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgIC8qKlxuICAgICAqIEFzc2lnbnMgb3duIGVudW1lcmFibGUgcHJvcGVydGllcyBvZiBzb3VyY2Ugb2JqZWN0KHMpIHRvIHRoZSBkZXN0aW5hdGlvblxuICAgICAqIG9iamVjdC4gU3Vic2VxdWVudCBzb3VyY2VzIHdpbGwgb3ZlcndyaXRlIHByb3BlcnR5IGFzc2lnbm1lbnRzIG9mIHByZXZpb3VzXG4gICAgICogc291cmNlcy4gSWYgYSBjYWxsYmFjayBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIGV4ZWN1dGVkIHRvIHByb2R1Y2UgdGhlXG4gICAgICogYXNzaWduZWQgdmFsdWVzLiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG8gYHRoaXNBcmdgIGFuZCBpbnZva2VkIHdpdGggdHdvXG4gICAgICogYXJndW1lbnRzOyAob2JqZWN0VmFsdWUsIHNvdXJjZVZhbHVlKS5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEB0eXBlIEZ1bmN0aW9uXG4gICAgICogQGFsaWFzIGV4dGVuZFxuICAgICAqIEBjYXRlZ29yeSBPYmplY3RzXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgZGVzdGluYXRpb24gb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7Li4uT2JqZWN0fSBbc291cmNlXSBUaGUgc291cmNlIG9iamVjdHMuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGFzc2lnbmluZyB2YWx1ZXMuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgZGVzdGluYXRpb24gb2JqZWN0LlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmFzc2lnbih7ICduYW1lJzogJ2ZyZWQnIH0sIHsgJ2VtcGxveWVyJzogJ3NsYXRlJyB9KTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ2ZyZWQnLCAnZW1wbG95ZXInOiAnc2xhdGUnIH1cbiAgICAgKlxuICAgICAqIHZhciBkZWZhdWx0cyA9IF8ucGFydGlhbFJpZ2h0KF8uYXNzaWduLCBmdW5jdGlvbihhLCBiKSB7XG4gICAgICogICByZXR1cm4gdHlwZW9mIGEgPT0gJ3VuZGVmaW5lZCcgPyBiIDogYTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIHZhciBvYmplY3QgPSB7ICduYW1lJzogJ2Jhcm5leScgfTtcbiAgICAgKiBkZWZhdWx0cyhvYmplY3QsIHsgJ25hbWUnOiAnZnJlZCcsICdlbXBsb3llcic6ICdzbGF0ZScgfSk7XG4gICAgICogLy8gPT4geyAnbmFtZSc6ICdiYXJuZXknLCAnZW1wbG95ZXInOiAnc2xhdGUnIH1cbiAgICAgKi9cbiAgICB2YXIgYXNzaWduID0gZnVuY3Rpb24ob2JqZWN0LCBzb3VyY2UsIGd1YXJkKSB7XG4gICAgICB2YXIgaW5kZXgsIGl0ZXJhYmxlID0gb2JqZWN0LCByZXN1bHQgPSBpdGVyYWJsZTtcbiAgICAgIGlmICghaXRlcmFibGUpIHJldHVybiByZXN1bHQ7XG4gICAgICB2YXIgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgICBhcmdzSW5kZXggPSAwLFxuICAgICAgICAgIGFyZ3NMZW5ndGggPSB0eXBlb2YgZ3VhcmQgPT0gJ251bWJlcicgPyAyIDogYXJncy5sZW5ndGg7XG4gICAgICBpZiAoYXJnc0xlbmd0aCA+IDMgJiYgdHlwZW9mIGFyZ3NbYXJnc0xlbmd0aCAtIDJdID09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdmFyIGNhbGxiYWNrID0gYmFzZUNyZWF0ZUNhbGxiYWNrKGFyZ3NbLS1hcmdzTGVuZ3RoIC0gMV0sIGFyZ3NbYXJnc0xlbmd0aC0tXSwgMik7XG4gICAgICB9IGVsc2UgaWYgKGFyZ3NMZW5ndGggPiAyICYmIHR5cGVvZiBhcmdzW2FyZ3NMZW5ndGggLSAxXSA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNhbGxiYWNrID0gYXJnc1stLWFyZ3NMZW5ndGhdO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsrYXJnc0luZGV4IDwgYXJnc0xlbmd0aCkge1xuICAgICAgICBpdGVyYWJsZSA9IGFyZ3NbYXJnc0luZGV4XTtcbiAgICAgICAgaWYgKGl0ZXJhYmxlICYmIG9iamVjdFR5cGVzW3R5cGVvZiBpdGVyYWJsZV0pIHtcbiAgICAgICAgdmFyIG93bkluZGV4ID0gLTEsXG4gICAgICAgICAgICBvd25Qcm9wcyA9IG9iamVjdFR5cGVzW3R5cGVvZiBpdGVyYWJsZV0gJiYga2V5cyhpdGVyYWJsZSksXG4gICAgICAgICAgICBsZW5ndGggPSBvd25Qcm9wcyA/IG93blByb3BzLmxlbmd0aCA6IDA7XG5cbiAgICAgICAgd2hpbGUgKCsrb3duSW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICBpbmRleCA9IG93blByb3BzW293bkluZGV4XTtcbiAgICAgICAgICByZXN1bHRbaW5kZXhdID0gY2FsbGJhY2sgPyBjYWxsYmFjayhyZXN1bHRbaW5kZXhdLCBpdGVyYWJsZVtpbmRleF0pIDogaXRlcmFibGVbaW5kZXhdO1xuICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHRcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGNsb25lIG9mIGB2YWx1ZWAuIElmIGBpc0RlZXBgIGlzIGB0cnVlYCBuZXN0ZWQgb2JqZWN0cyB3aWxsIGFsc29cbiAgICAgKiBiZSBjbG9uZWQsIG90aGVyd2lzZSB0aGV5IHdpbGwgYmUgYXNzaWduZWQgYnkgcmVmZXJlbmNlLiBJZiBhIGNhbGxiYWNrXG4gICAgICogaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSBleGVjdXRlZCB0byBwcm9kdWNlIHRoZSBjbG9uZWQgdmFsdWVzLiBJZiB0aGVcbiAgICAgKiBjYWxsYmFjayByZXR1cm5zIGB1bmRlZmluZWRgIGNsb25pbmcgd2lsbCBiZSBoYW5kbGVkIGJ5IHRoZSBtZXRob2QgaW5zdGVhZC5cbiAgICAgKiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG8gYHRoaXNBcmdgIGFuZCBpbnZva2VkIHdpdGggb25lIGFyZ3VtZW50OyAodmFsdWUpLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjbG9uZS5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXA9ZmFsc2VdIFNwZWNpZnkgYSBkZWVwIGNsb25lLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjbG9uaW5nIHZhbHVlcy5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgY2xvbmVkIHZhbHVlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IFtcbiAgICAgKiAgIHsgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2IH0sXG4gICAgICogICB7ICduYW1lJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCB9XG4gICAgICogXTtcbiAgICAgKlxuICAgICAqIHZhciBzaGFsbG93ID0gXy5jbG9uZShjaGFyYWN0ZXJzKTtcbiAgICAgKiBzaGFsbG93WzBdID09PSBjaGFyYWN0ZXJzWzBdO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKlxuICAgICAqIHZhciBkZWVwID0gXy5jbG9uZShjaGFyYWN0ZXJzLCB0cnVlKTtcbiAgICAgKiBkZWVwWzBdID09PSBjaGFyYWN0ZXJzWzBdO1xuICAgICAqIC8vID0+IGZhbHNlXG4gICAgICpcbiAgICAgKiBfLm1peGluKHtcbiAgICAgKiAgICdjbG9uZSc6IF8ucGFydGlhbFJpZ2h0KF8uY2xvbmUsIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICogICAgIHJldHVybiBfLmlzRWxlbWVudCh2YWx1ZSkgPyB2YWx1ZS5jbG9uZU5vZGUoZmFsc2UpIDogdW5kZWZpbmVkO1xuICAgICAqICAgfSlcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIHZhciBjbG9uZSA9IF8uY2xvbmUoZG9jdW1lbnQuYm9keSk7XG4gICAgICogY2xvbmUuY2hpbGROb2Rlcy5sZW5ndGg7XG4gICAgICogLy8gPT4gMFxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNsb25lKHZhbHVlLCBpc0RlZXAsIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICAvLyBhbGxvd3Mgd29ya2luZyB3aXRoIFwiQ29sbGVjdGlvbnNcIiBtZXRob2RzIHdpdGhvdXQgdXNpbmcgdGhlaXIgYGluZGV4YFxuICAgICAgLy8gYW5kIGBjb2xsZWN0aW9uYCBhcmd1bWVudHMgZm9yIGBpc0RlZXBgIGFuZCBgY2FsbGJhY2tgXG4gICAgICBpZiAodHlwZW9mIGlzRGVlcCAhPSAnYm9vbGVhbicgJiYgaXNEZWVwICE9IG51bGwpIHtcbiAgICAgICAgdGhpc0FyZyA9IGNhbGxiYWNrO1xuICAgICAgICBjYWxsYmFjayA9IGlzRGVlcDtcbiAgICAgICAgaXNEZWVwID0gZmFsc2U7XG4gICAgICB9XG4gICAgICByZXR1cm4gYmFzZUNsb25lKHZhbHVlLCBpc0RlZXAsIHR5cGVvZiBjYWxsYmFjayA9PSAnZnVuY3Rpb24nICYmIGJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMSkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBkZWVwIGNsb25lIG9mIGB2YWx1ZWAuIElmIGEgY2FsbGJhY2sgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZVxuICAgICAqIGV4ZWN1dGVkIHRvIHByb2R1Y2UgdGhlIGNsb25lZCB2YWx1ZXMuIElmIHRoZSBjYWxsYmFjayByZXR1cm5zIGB1bmRlZmluZWRgXG4gICAgICogY2xvbmluZyB3aWxsIGJlIGhhbmRsZWQgYnkgdGhlIG1ldGhvZCBpbnN0ZWFkLiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG9cbiAgICAgKiBgdGhpc0FyZ2AgYW5kIGludm9rZWQgd2l0aCBvbmUgYXJndW1lbnQ7ICh2YWx1ZSkuXG4gICAgICpcbiAgICAgKiBOb3RlOiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uIHRoZSBzdHJ1Y3R1cmVkIGNsb25lIGFsZ29yaXRobS4gRnVuY3Rpb25zXG4gICAgICogYW5kIERPTSBub2RlcyBhcmUgKipub3QqKiBjbG9uZWQuIFRoZSBlbnVtZXJhYmxlIHByb3BlcnRpZXMgb2YgYGFyZ3VtZW50c2Agb2JqZWN0cyBhbmRcbiAgICAgKiBvYmplY3RzIGNyZWF0ZWQgYnkgY29uc3RydWN0b3JzIG90aGVyIHRoYW4gYE9iamVjdGAgYXJlIGNsb25lZCB0byBwbGFpbiBgT2JqZWN0YCBvYmplY3RzLlxuICAgICAqIFNlZSBodHRwOi8vd3d3LnczLm9yZy9UUi9odG1sNS9pbmZyYXN0cnVjdHVyZS5odG1sI2ludGVybmFsLXN0cnVjdHVyZWQtY2xvbmluZy1hbGdvcml0aG0uXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGRlZXAgY2xvbmUuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNsb25pbmcgdmFsdWVzLlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBkZWVwIGNsb25lZCB2YWx1ZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGNoYXJhY3RlcnMgPSBbXG4gICAgICogICB7ICduYW1lJzogJ2Jhcm5leScsICdhZ2UnOiAzNiB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAnYWdlJzogNDAgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiB2YXIgZGVlcCA9IF8uY2xvbmVEZWVwKGNoYXJhY3RlcnMpO1xuICAgICAqIGRlZXBbMF0gPT09IGNoYXJhY3RlcnNbMF07XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKlxuICAgICAqIHZhciB2aWV3ID0ge1xuICAgICAqICAgJ2xhYmVsJzogJ2RvY3MnLFxuICAgICAqICAgJ25vZGUnOiBlbGVtZW50XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIHZhciBjbG9uZSA9IF8uY2xvbmVEZWVwKHZpZXcsIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICogICByZXR1cm4gXy5pc0VsZW1lbnQodmFsdWUpID8gdmFsdWUuY2xvbmVOb2RlKHRydWUpIDogdW5kZWZpbmVkO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogY2xvbmUubm9kZSA9PSB2aWV3Lm5vZGU7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjbG9uZURlZXAodmFsdWUsIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICByZXR1cm4gYmFzZUNsb25lKHZhbHVlLCB0cnVlLCB0eXBlb2YgY2FsbGJhY2sgPT0gJ2Z1bmN0aW9uJyAmJiBiYXNlQ3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDEpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIG9iamVjdCB0aGF0IGluaGVyaXRzIGZyb20gdGhlIGdpdmVuIGBwcm90b3R5cGVgIG9iamVjdC4gSWYgYVxuICAgICAqIGBwcm9wZXJ0aWVzYCBvYmplY3QgaXMgcHJvdmlkZWQgaXRzIG93biBlbnVtZXJhYmxlIHByb3BlcnRpZXMgYXJlIGFzc2lnbmVkXG4gICAgICogdG8gdGhlIGNyZWF0ZWQgb2JqZWN0LlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gcHJvdG90eXBlIFRoZSBvYmplY3QgdG8gaW5oZXJpdCBmcm9tLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBbcHJvcGVydGllc10gVGhlIHByb3BlcnRpZXMgdG8gYXNzaWduIHRvIHRoZSBvYmplY3QuXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IG9iamVjdC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogZnVuY3Rpb24gU2hhcGUoKSB7XG4gICAgICogICB0aGlzLnggPSAwO1xuICAgICAqICAgdGhpcy55ID0gMDtcbiAgICAgKiB9XG4gICAgICpcbiAgICAgKiBmdW5jdGlvbiBDaXJjbGUoKSB7XG4gICAgICogICBTaGFwZS5jYWxsKHRoaXMpO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIENpcmNsZS5wcm90b3R5cGUgPSBfLmNyZWF0ZShTaGFwZS5wcm90b3R5cGUsIHsgJ2NvbnN0cnVjdG9yJzogQ2lyY2xlIH0pO1xuICAgICAqXG4gICAgICogdmFyIGNpcmNsZSA9IG5ldyBDaXJjbGU7XG4gICAgICogY2lyY2xlIGluc3RhbmNlb2YgQ2lyY2xlO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKlxuICAgICAqIGNpcmNsZSBpbnN0YW5jZW9mIFNoYXBlO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGUocHJvdG90eXBlLCBwcm9wZXJ0aWVzKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gYmFzZUNyZWF0ZShwcm90b3R5cGUpO1xuICAgICAgcmV0dXJuIHByb3BlcnRpZXMgPyBhc3NpZ24ocmVzdWx0LCBwcm9wZXJ0aWVzKSA6IHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBc3NpZ25zIG93biBlbnVtZXJhYmxlIHByb3BlcnRpZXMgb2Ygc291cmNlIG9iamVjdChzKSB0byB0aGUgZGVzdGluYXRpb25cbiAgICAgKiBvYmplY3QgZm9yIGFsbCBkZXN0aW5hdGlvbiBwcm9wZXJ0aWVzIHRoYXQgcmVzb2x2ZSB0byBgdW5kZWZpbmVkYC4gT25jZSBhXG4gICAgICogcHJvcGVydHkgaXMgc2V0LCBhZGRpdGlvbmFsIGRlZmF1bHRzIG9mIHRoZSBzYW1lIHByb3BlcnR5IHdpbGwgYmUgaWdub3JlZC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEB0eXBlIEZ1bmN0aW9uXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gICAgICogQHBhcmFtIHsuLi5PYmplY3R9IFtzb3VyY2VdIFRoZSBzb3VyY2Ugb2JqZWN0cy5cbiAgICAgKiBAcGFyYW0tIHtPYmplY3R9IFtndWFyZF0gQWxsb3dzIHdvcmtpbmcgd2l0aCBgXy5yZWR1Y2VgIHdpdGhvdXQgdXNpbmcgaXRzXG4gICAgICogIGBrZXlgIGFuZCBgb2JqZWN0YCBhcmd1bWVudHMgYXMgc291cmNlcy5cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBvYmplY3QgPSB7ICduYW1lJzogJ2Jhcm5leScgfTtcbiAgICAgKiBfLmRlZmF1bHRzKG9iamVjdCwgeyAnbmFtZSc6ICdmcmVkJywgJ2VtcGxveWVyJzogJ3NsYXRlJyB9KTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ2Jhcm5leScsICdlbXBsb3llcic6ICdzbGF0ZScgfVxuICAgICAqL1xuICAgIHZhciBkZWZhdWx0cyA9IGZ1bmN0aW9uKG9iamVjdCwgc291cmNlLCBndWFyZCkge1xuICAgICAgdmFyIGluZGV4LCBpdGVyYWJsZSA9IG9iamVjdCwgcmVzdWx0ID0gaXRlcmFibGU7XG4gICAgICBpZiAoIWl0ZXJhYmxlKSByZXR1cm4gcmVzdWx0O1xuICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgICAgYXJnc0luZGV4ID0gMCxcbiAgICAgICAgICBhcmdzTGVuZ3RoID0gdHlwZW9mIGd1YXJkID09ICdudW1iZXInID8gMiA6IGFyZ3MubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsrYXJnc0luZGV4IDwgYXJnc0xlbmd0aCkge1xuICAgICAgICBpdGVyYWJsZSA9IGFyZ3NbYXJnc0luZGV4XTtcbiAgICAgICAgaWYgKGl0ZXJhYmxlICYmIG9iamVjdFR5cGVzW3R5cGVvZiBpdGVyYWJsZV0pIHtcbiAgICAgICAgdmFyIG93bkluZGV4ID0gLTEsXG4gICAgICAgICAgICBvd25Qcm9wcyA9IG9iamVjdFR5cGVzW3R5cGVvZiBpdGVyYWJsZV0gJiYga2V5cyhpdGVyYWJsZSksXG4gICAgICAgICAgICBsZW5ndGggPSBvd25Qcm9wcyA/IG93blByb3BzLmxlbmd0aCA6IDA7XG5cbiAgICAgICAgd2hpbGUgKCsrb3duSW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICBpbmRleCA9IG93blByb3BzW293bkluZGV4XTtcbiAgICAgICAgICBpZiAodHlwZW9mIHJlc3VsdFtpbmRleF0gPT0gJ3VuZGVmaW5lZCcpIHJlc3VsdFtpbmRleF0gPSBpdGVyYWJsZVtpbmRleF07XG4gICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdFxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmZpbmRJbmRleGAgZXhjZXB0IHRoYXQgaXQgcmV0dXJucyB0aGUga2V5IG9mIHRoZVxuICAgICAqIGZpcnN0IGVsZW1lbnQgdGhhdCBwYXNzZXMgdGhlIGNhbGxiYWNrIGNoZWNrLCBpbnN0ZWFkIG9mIHRoZSBlbGVtZW50IGl0c2VsZi5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gc2VhcmNoLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fHN0cmluZ30gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkIHBlclxuICAgICAqICBpdGVyYXRpb24uIElmIGEgcHJvcGVydHkgbmFtZSBvciBvYmplY3QgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSB1c2VkIHRvXG4gICAgICogIGNyZWF0ZSBhIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrLCByZXNwZWN0aXZlbHkuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge3N0cmluZ3x1bmRlZmluZWR9IFJldHVybnMgdGhlIGtleSBvZiB0aGUgZm91bmQgZWxlbWVudCwgZWxzZSBgdW5kZWZpbmVkYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGNoYXJhY3RlcnMgPSB7XG4gICAgICogICAnYmFybmV5JzogeyAgJ2FnZSc6IDM2LCAnYmxvY2tlZCc6IGZhbHNlIH0sXG4gICAgICogICAnZnJlZCc6IHsgICAgJ2FnZSc6IDQwLCAnYmxvY2tlZCc6IHRydWUgfSxcbiAgICAgKiAgICdwZWJibGVzJzogeyAnYWdlJzogMSwgICdibG9ja2VkJzogZmFsc2UgfVxuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBfLmZpbmRLZXkoY2hhcmFjdGVycywgZnVuY3Rpb24oY2hyKSB7XG4gICAgICogICByZXR1cm4gY2hyLmFnZSA8IDQwO1xuICAgICAqIH0pO1xuICAgICAqIC8vID0+ICdiYXJuZXknIChwcm9wZXJ0eSBvcmRlciBpcyBub3QgZ3VhcmFudGVlZCBhY3Jvc3MgZW52aXJvbm1lbnRzKVxuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLndoZXJlXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5maW5kS2V5KGNoYXJhY3RlcnMsIHsgJ2FnZSc6IDEgfSk7XG4gICAgICogLy8gPT4gJ3BlYmJsZXMnXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmZpbmRLZXkoY2hhcmFjdGVycywgJ2Jsb2NrZWQnKTtcbiAgICAgKiAvLyA9PiAnZnJlZCdcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmaW5kS2V5KG9iamVjdCwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciByZXN1bHQ7XG4gICAgICBjYWxsYmFjayA9IGxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMyk7XG4gICAgICBmb3JPd24ob2JqZWN0LCBmdW5jdGlvbih2YWx1ZSwga2V5LCBvYmplY3QpIHtcbiAgICAgICAgaWYgKGNhbGxiYWNrKHZhbHVlLCBrZXksIG9iamVjdCkpIHtcbiAgICAgICAgICByZXN1bHQgPSBrZXk7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5maW5kS2V5YCBleGNlcHQgdGhhdCBpdCBpdGVyYXRlcyBvdmVyIGVsZW1lbnRzXG4gICAgICogb2YgYSBgY29sbGVjdGlvbmAgaW4gdGhlIG9wcG9zaXRlIG9yZGVyLlxuICAgICAqXG4gICAgICogSWYgYSBwcm9wZXJ0eSBuYW1lIGlzIHByb3ZpZGVkIGZvciBgY2FsbGJhY2tgIHRoZSBjcmVhdGVkIFwiXy5wbHVja1wiIHN0eWxlXG4gICAgICogY2FsbGJhY2sgd2lsbCByZXR1cm4gdGhlIHByb3BlcnR5IHZhbHVlIG9mIHRoZSBnaXZlbiBlbGVtZW50LlxuICAgICAqXG4gICAgICogSWYgYW4gb2JqZWN0IGlzIHByb3ZpZGVkIGZvciBgY2FsbGJhY2tgIHRoZSBjcmVhdGVkIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrXG4gICAgICogd2lsbCByZXR1cm4gYHRydWVgIGZvciBlbGVtZW50cyB0aGF0IGhhdmUgdGhlIHByb3BlcnRpZXMgb2YgdGhlIGdpdmVuIG9iamVjdCxcbiAgICAgKiBlbHNlIGBmYWxzZWAuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBzZWFyY2guXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWQgcGVyXG4gICAgICogIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWQgdG9cbiAgICAgKiAgY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfHVuZGVmaW5lZH0gUmV0dXJucyB0aGUga2V5IG9mIHRoZSBmb3VuZCBlbGVtZW50LCBlbHNlIGB1bmRlZmluZWRgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IHtcbiAgICAgKiAgICdiYXJuZXknOiB7ICAnYWdlJzogMzYsICdibG9ja2VkJzogdHJ1ZSB9LFxuICAgICAqICAgJ2ZyZWQnOiB7ICAgICdhZ2UnOiA0MCwgJ2Jsb2NrZWQnOiBmYWxzZSB9LFxuICAgICAqICAgJ3BlYmJsZXMnOiB7ICdhZ2UnOiAxLCAgJ2Jsb2NrZWQnOiB0cnVlIH1cbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogXy5maW5kTGFzdEtleShjaGFyYWN0ZXJzLCBmdW5jdGlvbihjaHIpIHtcbiAgICAgKiAgIHJldHVybiBjaHIuYWdlIDwgNDA7XG4gICAgICogfSk7XG4gICAgICogLy8gPT4gcmV0dXJucyBgcGViYmxlc2AsIGFzc3VtaW5nIGBfLmZpbmRLZXlgIHJldHVybnMgYGJhcm5leWBcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy53aGVyZVwiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8uZmluZExhc3RLZXkoY2hhcmFjdGVycywgeyAnYWdlJzogNDAgfSk7XG4gICAgICogLy8gPT4gJ2ZyZWQnXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmZpbmRMYXN0S2V5KGNoYXJhY3RlcnMsICdibG9ja2VkJyk7XG4gICAgICogLy8gPT4gJ3BlYmJsZXMnXG4gICAgICovXG4gICAgZnVuY3Rpb24gZmluZExhc3RLZXkob2JqZWN0LCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgIGZvck93blJpZ2h0KG9iamVjdCwgZnVuY3Rpb24odmFsdWUsIGtleSwgb2JqZWN0KSB7XG4gICAgICAgIGlmIChjYWxsYmFjayh2YWx1ZSwga2V5LCBvYmplY3QpKSB7XG4gICAgICAgICAgcmVzdWx0ID0ga2V5O1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEl0ZXJhdGVzIG92ZXIgb3duIGFuZCBpbmhlcml0ZWQgZW51bWVyYWJsZSBwcm9wZXJ0aWVzIG9mIGFuIG9iamVjdCxcbiAgICAgKiBleGVjdXRpbmcgdGhlIGNhbGxiYWNrIGZvciBlYWNoIHByb3BlcnR5LiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG8gYHRoaXNBcmdgXG4gICAgICogYW5kIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM7ICh2YWx1ZSwga2V5LCBvYmplY3QpLiBDYWxsYmFja3MgbWF5IGV4aXRcbiAgICAgKiBpdGVyYXRpb24gZWFybHkgYnkgZXhwbGljaXRseSByZXR1cm5pbmcgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEB0eXBlIEZ1bmN0aW9uXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFjaz1pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGNhbGxlZCBwZXIgaXRlcmF0aW9uLlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYG9iamVjdGAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIGZ1bmN0aW9uIFNoYXBlKCkge1xuICAgICAqICAgdGhpcy54ID0gMDtcbiAgICAgKiAgIHRoaXMueSA9IDA7XG4gICAgICogfVxuICAgICAqXG4gICAgICogU2hhcGUucHJvdG90eXBlLm1vdmUgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICogICB0aGlzLnggKz0geDtcbiAgICAgKiAgIHRoaXMueSArPSB5O1xuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBfLmZvckluKG5ldyBTaGFwZSwgZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgICAqICAgY29uc29sZS5sb2coa2V5KTtcbiAgICAgKiB9KTtcbiAgICAgKiAvLyA9PiBsb2dzICd4JywgJ3knLCBhbmQgJ21vdmUnIChwcm9wZXJ0eSBvcmRlciBpcyBub3QgZ3VhcmFudGVlZCBhY3Jvc3MgZW52aXJvbm1lbnRzKVxuICAgICAqL1xuICAgIHZhciBmb3JJbiA9IGZ1bmN0aW9uKGNvbGxlY3Rpb24sIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgaW5kZXgsIGl0ZXJhYmxlID0gY29sbGVjdGlvbiwgcmVzdWx0ID0gaXRlcmFibGU7XG4gICAgICBpZiAoIWl0ZXJhYmxlKSByZXR1cm4gcmVzdWx0O1xuICAgICAgaWYgKCFvYmplY3RUeXBlc1t0eXBlb2YgaXRlcmFibGVdKSByZXR1cm4gcmVzdWx0O1xuICAgICAgY2FsbGJhY2sgPSBjYWxsYmFjayAmJiB0eXBlb2YgdGhpc0FyZyA9PSAndW5kZWZpbmVkJyA/IGNhbGxiYWNrIDogYmFzZUNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgICAgZm9yIChpbmRleCBpbiBpdGVyYWJsZSkge1xuICAgICAgICAgIGlmIChjYWxsYmFjayhpdGVyYWJsZVtpbmRleF0sIGluZGV4LCBjb2xsZWN0aW9uKSA9PT0gZmFsc2UpIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHRcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5mb3JJbmAgZXhjZXB0IHRoYXQgaXQgaXRlcmF0ZXMgb3ZlciBlbGVtZW50c1xuICAgICAqIG9mIGEgYGNvbGxlY3Rpb25gIGluIHRoZSBvcHBvc2l0ZSBvcmRlci5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBPYmplY3RzXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBmdW5jdGlvbiBTaGFwZSgpIHtcbiAgICAgKiAgIHRoaXMueCA9IDA7XG4gICAgICogICB0aGlzLnkgPSAwO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIFNoYXBlLnByb3RvdHlwZS5tb3ZlID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAqICAgdGhpcy54ICs9IHg7XG4gICAgICogICB0aGlzLnkgKz0geTtcbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogXy5mb3JJblJpZ2h0KG5ldyBTaGFwZSwgZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgICAqICAgY29uc29sZS5sb2coa2V5KTtcbiAgICAgKiB9KTtcbiAgICAgKiAvLyA9PiBsb2dzICdtb3ZlJywgJ3knLCBhbmQgJ3gnIGFzc3VtaW5nIGBfLmZvckluIGAgbG9ncyAneCcsICd5JywgYW5kICdtb3ZlJ1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGZvckluUmlnaHQob2JqZWN0LCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgdmFyIHBhaXJzID0gW107XG5cbiAgICAgIGZvckluKG9iamVjdCwgZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgICAgICBwYWlycy5wdXNoKGtleSwgdmFsdWUpO1xuICAgICAgfSk7XG5cbiAgICAgIHZhciBsZW5ndGggPSBwYWlycy5sZW5ndGg7XG4gICAgICBjYWxsYmFjayA9IGJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMyk7XG4gICAgICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICAgICAgaWYgKGNhbGxiYWNrKHBhaXJzW2xlbmd0aC0tXSwgcGFpcnNbbGVuZ3RoXSwgb2JqZWN0KSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJdGVyYXRlcyBvdmVyIG93biBlbnVtZXJhYmxlIHByb3BlcnRpZXMgb2YgYW4gb2JqZWN0LCBleGVjdXRpbmcgdGhlIGNhbGxiYWNrXG4gICAgICogZm9yIGVhY2ggcHJvcGVydHkuIFRoZSBjYWxsYmFjayBpcyBib3VuZCB0byBgdGhpc0FyZ2AgYW5kIGludm9rZWQgd2l0aCB0aHJlZVxuICAgICAqIGFyZ3VtZW50czsgKHZhbHVlLCBrZXksIG9iamVjdCkuIENhbGxiYWNrcyBtYXkgZXhpdCBpdGVyYXRpb24gZWFybHkgYnlcbiAgICAgKiBleHBsaWNpdGx5IHJldHVybmluZyBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQHR5cGUgRnVuY3Rpb25cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkIHBlciBpdGVyYXRpb24uXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5mb3JPd24oeyAnMCc6ICd6ZXJvJywgJzEnOiAnb25lJywgJ2xlbmd0aCc6IDIgfSwgZnVuY3Rpb24obnVtLCBrZXkpIHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKGtleSk7XG4gICAgICogfSk7XG4gICAgICogLy8gPT4gbG9ncyAnMCcsICcxJywgYW5kICdsZW5ndGgnIChwcm9wZXJ0eSBvcmRlciBpcyBub3QgZ3VhcmFudGVlZCBhY3Jvc3MgZW52aXJvbm1lbnRzKVxuICAgICAqL1xuICAgIHZhciBmb3JPd24gPSBmdW5jdGlvbihjb2xsZWN0aW9uLCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgdmFyIGluZGV4LCBpdGVyYWJsZSA9IGNvbGxlY3Rpb24sIHJlc3VsdCA9IGl0ZXJhYmxlO1xuICAgICAgaWYgKCFpdGVyYWJsZSkgcmV0dXJuIHJlc3VsdDtcbiAgICAgIGlmICghb2JqZWN0VHlwZXNbdHlwZW9mIGl0ZXJhYmxlXSkgcmV0dXJuIHJlc3VsdDtcbiAgICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgJiYgdHlwZW9mIHRoaXNBcmcgPT0gJ3VuZGVmaW5lZCcgPyBjYWxsYmFjayA6IGJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMyk7XG4gICAgICAgIHZhciBvd25JbmRleCA9IC0xLFxuICAgICAgICAgICAgb3duUHJvcHMgPSBvYmplY3RUeXBlc1t0eXBlb2YgaXRlcmFibGVdICYmIGtleXMoaXRlcmFibGUpLFxuICAgICAgICAgICAgbGVuZ3RoID0gb3duUHJvcHMgPyBvd25Qcm9wcy5sZW5ndGggOiAwO1xuXG4gICAgICAgIHdoaWxlICgrK293bkluZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgaW5kZXggPSBvd25Qcm9wc1tvd25JbmRleF07XG4gICAgICAgICAgaWYgKGNhbGxiYWNrKGl0ZXJhYmxlW2luZGV4XSwgaW5kZXgsIGNvbGxlY3Rpb24pID09PSBmYWxzZSkgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdFxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmZvck93bmAgZXhjZXB0IHRoYXQgaXQgaXRlcmF0ZXMgb3ZlciBlbGVtZW50c1xuICAgICAqIG9mIGEgYGNvbGxlY3Rpb25gIGluIHRoZSBvcHBvc2l0ZSBvcmRlci5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBPYmplY3RzXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmZvck93blJpZ2h0KHsgJzAnOiAnemVybycsICcxJzogJ29uZScsICdsZW5ndGgnOiAyIH0sIGZ1bmN0aW9uKG51bSwga2V5KSB7XG4gICAgICogICBjb25zb2xlLmxvZyhrZXkpO1xuICAgICAqIH0pO1xuICAgICAqIC8vID0+IGxvZ3MgJ2xlbmd0aCcsICcxJywgYW5kICcwJyBhc3N1bWluZyBgXy5mb3JPd25gIGxvZ3MgJzAnLCAnMScsIGFuZCAnbGVuZ3RoJ1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGZvck93blJpZ2h0KG9iamVjdCwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciBwcm9wcyA9IGtleXMob2JqZWN0KSxcbiAgICAgICAgICBsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cbiAgICAgIGNhbGxiYWNrID0gYmFzZUNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgIHdoaWxlIChsZW5ndGgtLSkge1xuICAgICAgICB2YXIga2V5ID0gcHJvcHNbbGVuZ3RoXTtcbiAgICAgICAgaWYgKGNhbGxiYWNrKG9iamVjdFtrZXldLCBrZXksIG9iamVjdCkgPT09IGZhbHNlKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHNvcnRlZCBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBvZiBhbGwgZW51bWVyYWJsZSBwcm9wZXJ0aWVzLFxuICAgICAqIG93biBhbmQgaW5oZXJpdGVkLCBvZiBgb2JqZWN0YCB0aGF0IGhhdmUgZnVuY3Rpb24gdmFsdWVzLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGFsaWFzIG1ldGhvZHNcbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhbiBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyB0aGF0IGhhdmUgZnVuY3Rpb24gdmFsdWVzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmZ1bmN0aW9ucyhfKTtcbiAgICAgKiAvLyA9PiBbJ2FsbCcsICdhbnknLCAnYmluZCcsICdiaW5kQWxsJywgJ2Nsb25lJywgJ2NvbXBhY3QnLCAnY29tcG9zZScsIC4uLl1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmdW5jdGlvbnMob2JqZWN0KSB7XG4gICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICBmb3JJbihvYmplY3QsIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgaWYgKGlzRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2goa2V5KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gcmVzdWx0LnNvcnQoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgdGhlIHNwZWNpZmllZCBwcm9wZXJ0eSBuYW1lIGV4aXN0cyBhcyBhIGRpcmVjdCBwcm9wZXJ0eSBvZiBgb2JqZWN0YCxcbiAgICAgKiBpbnN0ZWFkIG9mIGFuIGluaGVyaXRlZCBwcm9wZXJ0eS5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBPYmplY3RzXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGtleSBpcyBhIGRpcmVjdCBwcm9wZXJ0eSwgZWxzZSBgZmFsc2VgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmhhcyh7ICdhJzogMSwgJ2InOiAyLCAnYyc6IDMgfSwgJ2InKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICovXG4gICAgZnVuY3Rpb24gaGFzKG9iamVjdCwga2V5KSB7XG4gICAgICByZXR1cm4gb2JqZWN0ID8gaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkgOiBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIG9iamVjdCBjb21wb3NlZCBvZiB0aGUgaW52ZXJ0ZWQga2V5cyBhbmQgdmFsdWVzIG9mIHRoZSBnaXZlbiBvYmplY3QuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpbnZlcnQuXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY3JlYXRlZCBpbnZlcnRlZCBvYmplY3QuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaW52ZXJ0KHsgJ2ZpcnN0JzogJ2ZyZWQnLCAnc2Vjb25kJzogJ2Jhcm5leScgfSk7XG4gICAgICogLy8gPT4geyAnZnJlZCc6ICdmaXJzdCcsICdiYXJuZXknOiAnc2Vjb25kJyB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gaW52ZXJ0KG9iamVjdCkge1xuICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgcHJvcHMgPSBrZXlzKG9iamVjdCksXG4gICAgICAgICAgbGVuZ3RoID0gcHJvcHMubGVuZ3RoLFxuICAgICAgICAgIHJlc3VsdCA9IHt9O1xuXG4gICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0gcHJvcHNbaW5kZXhdO1xuICAgICAgICByZXN1bHRbb2JqZWN0W2tleV1dID0ga2V5O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGJvb2xlYW4gdmFsdWUuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYHZhbHVlYCBpcyBhIGJvb2xlYW4gdmFsdWUsIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5pc0Jvb2xlYW4obnVsbCk7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc0Jvb2xlYW4odmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZSA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gZmFsc2UgfHxcbiAgICAgICAgdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnICYmIHRvU3RyaW5nLmNhbGwodmFsdWUpID09IGJvb2xDbGFzcyB8fCBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIGRhdGUuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYHZhbHVlYCBpcyBhIGRhdGUsIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5pc0RhdGUobmV3IERhdGUpO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc0RhdGUodmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCcgJiYgdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT0gZGF0ZUNsYXNzIHx8IGZhbHNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgRE9NIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYHZhbHVlYCBpcyBhIERPTSBlbGVtZW50LCBlbHNlIGBmYWxzZWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaXNFbGVtZW50KGRvY3VtZW50LmJvZHkpO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc0VsZW1lbnQodmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZSAmJiB2YWx1ZS5ub2RlVHlwZSA9PT0gMSB8fCBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBlbXB0eS4gQXJyYXlzLCBzdHJpbmdzLCBvciBgYXJndW1lbnRzYCBvYmplY3RzIHdpdGggYVxuICAgICAqIGxlbmd0aCBvZiBgMGAgYW5kIG9iamVjdHMgd2l0aCBubyBvd24gZW51bWVyYWJsZSBwcm9wZXJ0aWVzIGFyZSBjb25zaWRlcmVkXG4gICAgICogXCJlbXB0eVwiLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IHZhbHVlIFRoZSB2YWx1ZSB0byBpbnNwZWN0LlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYHZhbHVlYCBpcyBlbXB0eSwgZWxzZSBgZmFsc2VgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmlzRW1wdHkoWzEsIDIsIDNdKTtcbiAgICAgKiAvLyA9PiBmYWxzZVxuICAgICAqXG4gICAgICogXy5pc0VtcHR5KHt9KTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiBfLmlzRW1wdHkoJycpO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc0VtcHR5KHZhbHVlKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gdHJ1ZTtcbiAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHZhciBjbGFzc05hbWUgPSB0b1N0cmluZy5jYWxsKHZhbHVlKSxcbiAgICAgICAgICBsZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG5cbiAgICAgIGlmICgoY2xhc3NOYW1lID09IGFycmF5Q2xhc3MgfHwgY2xhc3NOYW1lID09IHN0cmluZ0NsYXNzIHx8IGNsYXNzTmFtZSA9PSBhcmdzQ2xhc3MgKSB8fFxuICAgICAgICAgIChjbGFzc05hbWUgPT0gb2JqZWN0Q2xhc3MgJiYgdHlwZW9mIGxlbmd0aCA9PSAnbnVtYmVyJyAmJiBpc0Z1bmN0aW9uKHZhbHVlLnNwbGljZSkpKSB7XG4gICAgICAgIHJldHVybiAhbGVuZ3RoO1xuICAgICAgfVxuICAgICAgZm9yT3duKHZhbHVlLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChyZXN1bHQgPSBmYWxzZSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUGVyZm9ybXMgYSBkZWVwIGNvbXBhcmlzb24gYmV0d2VlbiB0d28gdmFsdWVzIHRvIGRldGVybWluZSBpZiB0aGV5IGFyZVxuICAgICAqIGVxdWl2YWxlbnQgdG8gZWFjaCBvdGhlci4gSWYgYSBjYWxsYmFjayBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIGV4ZWN1dGVkXG4gICAgICogdG8gY29tcGFyZSB2YWx1ZXMuIElmIHRoZSBjYWxsYmFjayByZXR1cm5zIGB1bmRlZmluZWRgIGNvbXBhcmlzb25zIHdpbGxcbiAgICAgKiBiZSBoYW5kbGVkIGJ5IHRoZSBtZXRob2QgaW5zdGVhZC4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmRcbiAgICAgKiBpbnZva2VkIHdpdGggdHdvIGFyZ3VtZW50czsgKGEsIGIpLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0geyp9IGEgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gICAgICogQHBhcmFtIHsqfSBiIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFja10gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpbmcgdmFsdWVzLlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBvYmplY3QgPSB7ICduYW1lJzogJ2ZyZWQnIH07XG4gICAgICogdmFyIGNvcHkgPSB7ICduYW1lJzogJ2ZyZWQnIH07XG4gICAgICpcbiAgICAgKiBvYmplY3QgPT0gY29weTtcbiAgICAgKiAvLyA9PiBmYWxzZVxuICAgICAqXG4gICAgICogXy5pc0VxdWFsKG9iamVjdCwgY29weSk7XG4gICAgICogLy8gPT4gdHJ1ZVxuICAgICAqXG4gICAgICogdmFyIHdvcmRzID0gWydoZWxsbycsICdnb29kYnllJ107XG4gICAgICogdmFyIG90aGVyV29yZHMgPSBbJ2hpJywgJ2dvb2RieWUnXTtcbiAgICAgKlxuICAgICAqIF8uaXNFcXVhbCh3b3Jkcywgb3RoZXJXb3JkcywgZnVuY3Rpb24oYSwgYikge1xuICAgICAqICAgdmFyIHJlR3JlZXQgPSAvXig/OmhlbGxvfGhpKSQvaSxcbiAgICAgKiAgICAgICBhR3JlZXQgPSBfLmlzU3RyaW5nKGEpICYmIHJlR3JlZXQudGVzdChhKSxcbiAgICAgKiAgICAgICBiR3JlZXQgPSBfLmlzU3RyaW5nKGIpICYmIHJlR3JlZXQudGVzdChiKTtcbiAgICAgKlxuICAgICAqICAgcmV0dXJuIChhR3JlZXQgfHwgYkdyZWV0KSA/IChhR3JlZXQgPT0gYkdyZWV0KSA6IHVuZGVmaW5lZDtcbiAgICAgKiB9KTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXNFcXVhbChhLCBiLCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgcmV0dXJuIGJhc2VJc0VxdWFsKGEsIGIsIHR5cGVvZiBjYWxsYmFjayA9PSAnZnVuY3Rpb24nICYmIGJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMikpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiBgdmFsdWVgIGlzLCBvciBjYW4gYmUgY29lcmNlZCB0bywgYSBmaW5pdGUgbnVtYmVyLlxuICAgICAqXG4gICAgICogTm90ZTogVGhpcyBpcyBub3QgdGhlIHNhbWUgYXMgbmF0aXZlIGBpc0Zpbml0ZWAgd2hpY2ggd2lsbCByZXR1cm4gdHJ1ZSBmb3JcbiAgICAgKiBib29sZWFucyBhbmQgZW1wdHkgc3RyaW5ncy4gU2VlIGh0dHA6Ly9lczUuZ2l0aHViLmlvLyN4MTUuMS4yLjUuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYHZhbHVlYCBpcyBmaW5pdGUsIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5pc0Zpbml0ZSgtMTAxKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiBfLmlzRmluaXRlKCcxMCcpO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKlxuICAgICAqIF8uaXNGaW5pdGUodHJ1ZSk7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKlxuICAgICAqIF8uaXNGaW5pdGUoJycpO1xuICAgICAqIC8vID0+IGZhbHNlXG4gICAgICpcbiAgICAgKiBfLmlzRmluaXRlKEluZmluaXR5KTtcbiAgICAgKiAvLyA9PiBmYWxzZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzRmluaXRlKHZhbHVlKSB7XG4gICAgICByZXR1cm4gbmF0aXZlSXNGaW5pdGUodmFsdWUpICYmICFuYXRpdmVJc05hTihwYXJzZUZsb2F0KHZhbHVlKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBPYmplY3RzXG4gICAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBgdmFsdWVgIGlzIGEgZnVuY3Rpb24sIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5pc0Z1bmN0aW9uKF8pO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdmdW5jdGlvbic7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgdGhlIGxhbmd1YWdlIHR5cGUgb2YgT2JqZWN0LlxuICAgICAqIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGB2YWx1ZWAgaXMgYW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaXNPYmplY3Qoe30pO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKlxuICAgICAqIF8uaXNPYmplY3QoWzEsIDIsIDNdKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiBfLmlzT2JqZWN0KDEpO1xuICAgICAqIC8vID0+IGZhbHNlXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcbiAgICAgIC8vIGNoZWNrIGlmIHRoZSB2YWx1ZSBpcyB0aGUgRUNNQVNjcmlwdCBsYW5ndWFnZSB0eXBlIG9mIE9iamVjdFxuICAgICAgLy8gaHR0cDovL2VzNS5naXRodWIuaW8vI3g4XG4gICAgICAvLyBhbmQgYXZvaWQgYSBWOCBidWdcbiAgICAgIC8vIGh0dHA6Ly9jb2RlLmdvb2dsZS5jb20vcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTIyOTFcbiAgICAgIHJldHVybiAhISh2YWx1ZSAmJiBvYmplY3RUeXBlc1t0eXBlb2YgdmFsdWVdKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBgTmFOYC5cbiAgICAgKlxuICAgICAqIE5vdGU6IFRoaXMgaXMgbm90IHRoZSBzYW1lIGFzIG5hdGl2ZSBgaXNOYU5gIHdoaWNoIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3JcbiAgICAgKiBgdW5kZWZpbmVkYCBhbmQgb3RoZXIgbm9uLW51bWVyaWMgdmFsdWVzLiBTZWUgaHR0cDovL2VzNS5naXRodWIuaW8vI3gxNS4xLjIuNC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBPYmplY3RzXG4gICAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBgdmFsdWVgIGlzIGBOYU5gLCBlbHNlIGBmYWxzZWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaXNOYU4oTmFOKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiBfLmlzTmFOKG5ldyBOdW1iZXIoTmFOKSk7XG4gICAgICogLy8gPT4gdHJ1ZVxuICAgICAqXG4gICAgICogaXNOYU4odW5kZWZpbmVkKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiBfLmlzTmFOKHVuZGVmaW5lZCk7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc05hTih2YWx1ZSkge1xuICAgICAgLy8gYE5hTmAgYXMgYSBwcmltaXRpdmUgaXMgdGhlIG9ubHkgdmFsdWUgdGhhdCBpcyBub3QgZXF1YWwgdG8gaXRzZWxmXG4gICAgICAvLyAocGVyZm9ybSB0aGUgW1tDbGFzc11dIGNoZWNrIGZpcnN0IHRvIGF2b2lkIGVycm9ycyB3aXRoIHNvbWUgaG9zdCBvYmplY3RzIGluIElFKVxuICAgICAgcmV0dXJuIGlzTnVtYmVyKHZhbHVlKSAmJiB2YWx1ZSAhPSArdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYG51bGxgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGB2YWx1ZWAgaXMgYG51bGxgLCBlbHNlIGBmYWxzZWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaXNOdWxsKG51bGwpO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKlxuICAgICAqIF8uaXNOdWxsKHVuZGVmaW5lZCk7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc051bGwodmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZSA9PT0gbnVsbDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIG51bWJlci5cbiAgICAgKlxuICAgICAqIE5vdGU6IGBOYU5gIGlzIGNvbnNpZGVyZWQgYSBudW1iZXIuIFNlZSBodHRwOi8vZXM1LmdpdGh1Yi5pby8jeDguNS5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBPYmplY3RzXG4gICAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBgdmFsdWVgIGlzIGEgbnVtYmVyLCBlbHNlIGBmYWxzZWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaXNOdW1iZXIoOC40ICogNSk7XG4gICAgICogLy8gPT4gdHJ1ZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzTnVtYmVyKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdudW1iZXInIHx8XG4gICAgICAgIHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JyAmJiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PSBudW1iZXJDbGFzcyB8fCBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhbiBvYmplY3QgY3JlYXRlZCBieSB0aGUgYE9iamVjdGAgY29uc3RydWN0b3IuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICAgICAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcGxhaW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIGZ1bmN0aW9uIFNoYXBlKCkge1xuICAgICAqICAgdGhpcy54ID0gMDtcbiAgICAgKiAgIHRoaXMueSA9IDA7XG4gICAgICogfVxuICAgICAqXG4gICAgICogXy5pc1BsYWluT2JqZWN0KG5ldyBTaGFwZSk7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKlxuICAgICAqIF8uaXNQbGFpbk9iamVjdChbMSwgMiwgM10pO1xuICAgICAqIC8vID0+IGZhbHNlXG4gICAgICpcbiAgICAgKiBfLmlzUGxhaW5PYmplY3QoeyAneCc6IDAsICd5JzogMCB9KTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICovXG4gICAgdmFyIGlzUGxhaW5PYmplY3QgPSAhZ2V0UHJvdG90eXBlT2YgPyBzaGltSXNQbGFpbk9iamVjdCA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICBpZiAoISh2YWx1ZSAmJiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PSBvYmplY3RDbGFzcykpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgdmFyIHZhbHVlT2YgPSB2YWx1ZS52YWx1ZU9mLFxuICAgICAgICAgIG9ialByb3RvID0gaXNOYXRpdmUodmFsdWVPZikgJiYgKG9ialByb3RvID0gZ2V0UHJvdG90eXBlT2YodmFsdWVPZikpICYmIGdldFByb3RvdHlwZU9mKG9ialByb3RvKTtcblxuICAgICAgcmV0dXJuIG9ialByb3RvXG4gICAgICAgID8gKHZhbHVlID09IG9ialByb3RvIHx8IGdldFByb3RvdHlwZU9mKHZhbHVlKSA9PSBvYmpQcm90bylcbiAgICAgICAgOiBzaGltSXNQbGFpbk9iamVjdCh2YWx1ZSk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgcmVndWxhciBleHByZXNzaW9uLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGB2YWx1ZWAgaXMgYSByZWd1bGFyIGV4cHJlc3Npb24sIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5pc1JlZ0V4cCgvZnJlZC8pO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc1JlZ0V4cCh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0JyAmJiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PSByZWdleHBDbGFzcyB8fCBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHN0cmluZy5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBPYmplY3RzXG4gICAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBgdmFsdWVgIGlzIGEgc3RyaW5nLCBlbHNlIGBmYWxzZWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaXNTdHJpbmcoJ2ZyZWQnKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICovXG4gICAgZnVuY3Rpb24gaXNTdHJpbmcodmFsdWUpIHtcbiAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gJ3N0cmluZycgfHxcbiAgICAgICAgdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnICYmIHRvU3RyaW5nLmNhbGwodmFsdWUpID09IHN0cmluZ0NsYXNzIHx8IGZhbHNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGB1bmRlZmluZWRgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGB2YWx1ZWAgaXMgYHVuZGVmaW5lZGAsIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5pc1VuZGVmaW5lZCh2b2lkIDApO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWx1ZSkge1xuICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAndW5kZWZpbmVkJztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIGtleXMgYXMgYG9iamVjdGAgYW5kIHZhbHVlcyBnZW5lcmF0ZWQgYnlcbiAgICAgKiBydW5uaW5nIGVhY2ggb3duIGVudW1lcmFibGUgcHJvcGVydHkgb2YgYG9iamVjdGAgdGhyb3VnaCB0aGUgY2FsbGJhY2suXG4gICAgICogVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoIHRocmVlIGFyZ3VtZW50cztcbiAgICAgKiAodmFsdWUsIGtleSwgb2JqZWN0KS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fHN0cmluZ30gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkXG4gICAgICogIHBlciBpdGVyYXRpb24uIElmIGEgcHJvcGVydHkgbmFtZSBvciBvYmplY3QgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSB1c2VkXG4gICAgICogIHRvIGNyZWF0ZSBhIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrLCByZXNwZWN0aXZlbHkuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgbmV3IG9iamVjdCB3aXRoIHZhbHVlcyBvZiB0aGUgcmVzdWx0cyBvZiBlYWNoIGBjYWxsYmFja2AgZXhlY3V0aW9uLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLm1hcFZhbHVlcyh7ICdhJzogMSwgJ2InOiAyLCAnYyc6IDN9ICwgZnVuY3Rpb24obnVtKSB7IHJldHVybiBudW0gKiAzOyB9KTtcbiAgICAgKiAvLyA9PiB7ICdhJzogMywgJ2InOiA2LCAnYyc6IDkgfVxuICAgICAqXG4gICAgICogdmFyIGNoYXJhY3RlcnMgPSB7XG4gICAgICogICAnZnJlZCc6IHsgJ25hbWUnOiAnZnJlZCcsICdhZ2UnOiA0MCB9LFxuICAgICAqICAgJ3BlYmJsZXMnOiB7ICduYW1lJzogJ3BlYmJsZXMnLCAnYWdlJzogMSB9XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy5wbHVja1wiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8ubWFwVmFsdWVzKGNoYXJhY3RlcnMsICdhZ2UnKTtcbiAgICAgKiAvLyA9PiB7ICdmcmVkJzogNDAsICdwZWJibGVzJzogMSB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gbWFwVmFsdWVzKG9iamVjdCwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcblxuICAgICAgZm9yT3duKG9iamVjdCwgZnVuY3Rpb24odmFsdWUsIGtleSwgb2JqZWN0KSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gY2FsbGJhY2sodmFsdWUsIGtleSwgb2JqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZWN1cnNpdmVseSBtZXJnZXMgb3duIGVudW1lcmFibGUgcHJvcGVydGllcyBvZiB0aGUgc291cmNlIG9iamVjdChzKSwgdGhhdFxuICAgICAqIGRvbid0IHJlc29sdmUgdG8gYHVuZGVmaW5lZGAgaW50byB0aGUgZGVzdGluYXRpb24gb2JqZWN0LiBTdWJzZXF1ZW50IHNvdXJjZXNcbiAgICAgKiB3aWxsIG92ZXJ3cml0ZSBwcm9wZXJ0eSBhc3NpZ25tZW50cyBvZiBwcmV2aW91cyBzb3VyY2VzLiBJZiBhIGNhbGxiYWNrIGlzXG4gICAgICogcHJvdmlkZWQgaXQgd2lsbCBiZSBleGVjdXRlZCB0byBwcm9kdWNlIHRoZSBtZXJnZWQgdmFsdWVzIG9mIHRoZSBkZXN0aW5hdGlvblxuICAgICAqIGFuZCBzb3VyY2UgcHJvcGVydGllcy4gSWYgdGhlIGNhbGxiYWNrIHJldHVybnMgYHVuZGVmaW5lZGAgbWVyZ2luZyB3aWxsXG4gICAgICogYmUgaGFuZGxlZCBieSB0aGUgbWV0aG9kIGluc3RlYWQuIFRoZSBjYWxsYmFjayBpcyBib3VuZCB0byBgdGhpc0FyZ2AgYW5kXG4gICAgICogaW52b2tlZCB3aXRoIHR3byBhcmd1bWVudHM7IChvYmplY3RWYWx1ZSwgc291cmNlVmFsdWUpLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gICAgICogQHBhcmFtIHsuLi5PYmplY3R9IFtzb3VyY2VdIFRoZSBzb3VyY2Ugb2JqZWN0cy5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2tdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgbWVyZ2luZyBwcm9wZXJ0aWVzLlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGRlc3RpbmF0aW9uIG9iamVjdC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIG5hbWVzID0ge1xuICAgICAqICAgJ2NoYXJhY3RlcnMnOiBbXG4gICAgICogICAgIHsgJ25hbWUnOiAnYmFybmV5JyB9LFxuICAgICAqICAgICB7ICduYW1lJzogJ2ZyZWQnIH1cbiAgICAgKiAgIF1cbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogdmFyIGFnZXMgPSB7XG4gICAgICogICAnY2hhcmFjdGVycyc6IFtcbiAgICAgKiAgICAgeyAnYWdlJzogMzYgfSxcbiAgICAgKiAgICAgeyAnYWdlJzogNDAgfVxuICAgICAqICAgXVxuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBfLm1lcmdlKG5hbWVzLCBhZ2VzKTtcbiAgICAgKiAvLyA9PiB7ICdjaGFyYWN0ZXJzJzogW3sgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2IH0sIHsgJ25hbWUnOiAnZnJlZCcsICdhZ2UnOiA0MCB9XSB9XG4gICAgICpcbiAgICAgKiB2YXIgZm9vZCA9IHtcbiAgICAgKiAgICdmcnVpdHMnOiBbJ2FwcGxlJ10sXG4gICAgICogICAndmVnZXRhYmxlcyc6IFsnYmVldCddXG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIHZhciBvdGhlckZvb2QgPSB7XG4gICAgICogICAnZnJ1aXRzJzogWydiYW5hbmEnXSxcbiAgICAgKiAgICd2ZWdldGFibGVzJzogWydjYXJyb3QnXVxuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBfLm1lcmdlKGZvb2QsIG90aGVyRm9vZCwgZnVuY3Rpb24oYSwgYikge1xuICAgICAqICAgcmV0dXJuIF8uaXNBcnJheShhKSA/IGEuY29uY2F0KGIpIDogdW5kZWZpbmVkO1xuICAgICAqIH0pO1xuICAgICAqIC8vID0+IHsgJ2ZydWl0cyc6IFsnYXBwbGUnLCAnYmFuYW5hJ10sICd2ZWdldGFibGVzJzogWydiZWV0JywgJ2NhcnJvdF0gfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIG1lcmdlKG9iamVjdCkge1xuICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgICAgbGVuZ3RoID0gMjtcblxuICAgICAgaWYgKCFpc09iamVjdChvYmplY3QpKSB7XG4gICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgICB9XG4gICAgICAvLyBhbGxvd3Mgd29ya2luZyB3aXRoIGBfLnJlZHVjZWAgYW5kIGBfLnJlZHVjZVJpZ2h0YCB3aXRob3V0IHVzaW5nXG4gICAgICAvLyB0aGVpciBgaW5kZXhgIGFuZCBgY29sbGVjdGlvbmAgYXJndW1lbnRzXG4gICAgICBpZiAodHlwZW9mIGFyZ3NbMl0gIT0gJ251bWJlcicpIHtcbiAgICAgICAgbGVuZ3RoID0gYXJncy5sZW5ndGg7XG4gICAgICB9XG4gICAgICBpZiAobGVuZ3RoID4gMyAmJiB0eXBlb2YgYXJnc1tsZW5ndGggLSAyXSA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBjYWxsYmFjayA9IGJhc2VDcmVhdGVDYWxsYmFjayhhcmdzWy0tbGVuZ3RoIC0gMV0sIGFyZ3NbbGVuZ3RoLS1dLCAyKTtcbiAgICAgIH0gZWxzZSBpZiAobGVuZ3RoID4gMiAmJiB0eXBlb2YgYXJnc1tsZW5ndGggLSAxXSA9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNhbGxiYWNrID0gYXJnc1stLWxlbmd0aF07XG4gICAgICB9XG4gICAgICB2YXIgc291cmNlcyA9IHNsaWNlKGFyZ3VtZW50cywgMSwgbGVuZ3RoKSxcbiAgICAgICAgICBpbmRleCA9IC0xLFxuICAgICAgICAgIHN0YWNrQSA9IGdldEFycmF5KCksXG4gICAgICAgICAgc3RhY2tCID0gZ2V0QXJyYXkoKTtcblxuICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgYmFzZU1lcmdlKG9iamVjdCwgc291cmNlc1tpbmRleF0sIGNhbGxiYWNrLCBzdGFja0EsIHN0YWNrQik7XG4gICAgICB9XG4gICAgICByZWxlYXNlQXJyYXkoc3RhY2tBKTtcbiAgICAgIHJlbGVhc2VBcnJheShzdGFja0IpO1xuICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgc2hhbGxvdyBjbG9uZSBvZiBgb2JqZWN0YCBleGNsdWRpbmcgdGhlIHNwZWNpZmllZCBwcm9wZXJ0aWVzLlxuICAgICAqIFByb3BlcnR5IG5hbWVzIG1heSBiZSBzcGVjaWZpZWQgYXMgaW5kaXZpZHVhbCBhcmd1bWVudHMgb3IgYXMgYXJyYXlzIG9mXG4gICAgICogcHJvcGVydHkgbmFtZXMuIElmIGEgY2FsbGJhY2sgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSBleGVjdXRlZCBmb3IgZWFjaFxuICAgICAqIHByb3BlcnR5IG9mIGBvYmplY3RgIG9taXR0aW5nIHRoZSBwcm9wZXJ0aWVzIHRoZSBjYWxsYmFjayByZXR1cm5zIHRydWV5XG4gICAgICogZm9yLiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG8gYHRoaXNBcmdgIGFuZCBpbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzO1xuICAgICAqICh2YWx1ZSwga2V5LCBvYmplY3QpLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBzb3VyY2Ugb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258Li4uc3RyaW5nfHN0cmluZ1tdfSBbY2FsbGJhY2tdIFRoZSBwcm9wZXJ0aWVzIHRvIG9taXQgb3IgdGhlXG4gICAgICogIGZ1bmN0aW9uIGNhbGxlZCBwZXIgaXRlcmF0aW9uLlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgYW4gb2JqZWN0IHdpdGhvdXQgdGhlIG9taXR0ZWQgcHJvcGVydGllcy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5vbWl0KHsgJ25hbWUnOiAnZnJlZCcsICdhZ2UnOiA0MCB9LCAnYWdlJyk7XG4gICAgICogLy8gPT4geyAnbmFtZSc6ICdmcmVkJyB9XG4gICAgICpcbiAgICAgKiBfLm9taXQoeyAnbmFtZSc6ICdmcmVkJywgJ2FnZSc6IDQwIH0sIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICogICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdudW1iZXInO1xuICAgICAqIH0pO1xuICAgICAqIC8vID0+IHsgJ25hbWUnOiAnZnJlZCcgfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIG9taXQob2JqZWN0LCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBwcm9wcyA9IFtdO1xuICAgICAgICBmb3JJbihvYmplY3QsIGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgICBwcm9wcy5wdXNoKGtleSk7XG4gICAgICAgIH0pO1xuICAgICAgICBwcm9wcyA9IGJhc2VEaWZmZXJlbmNlKHByb3BzLCBiYXNlRmxhdHRlbihhcmd1bWVudHMsIHRydWUsIGZhbHNlLCAxKSk7XG5cbiAgICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgICBsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cbiAgICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgICB2YXIga2V5ID0gcHJvcHNbaW5kZXhdO1xuICAgICAgICAgIHJlc3VsdFtrZXldID0gb2JqZWN0W2tleV07XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgICAgZm9ySW4ob2JqZWN0LCBmdW5jdGlvbih2YWx1ZSwga2V5LCBvYmplY3QpIHtcbiAgICAgICAgICBpZiAoIWNhbGxiYWNrKHZhbHVlLCBrZXksIG9iamVjdCkpIHtcbiAgICAgICAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHR3byBkaW1lbnNpb25hbCBhcnJheSBvZiBhbiBvYmplY3QncyBrZXktdmFsdWUgcGFpcnMsXG4gICAgICogaS5lLiBgW1trZXkxLCB2YWx1ZTFdLCBba2V5MiwgdmFsdWUyXV1gLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IE9iamVjdHNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaW5zcGVjdC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgbmV3IGFycmF5IG9mIGtleS12YWx1ZSBwYWlycy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5wYWlycyh7ICdiYXJuZXknOiAzNiwgJ2ZyZWQnOiA0MCB9KTtcbiAgICAgKiAvLyA9PiBbWydiYXJuZXknLCAzNl0sIFsnZnJlZCcsIDQwXV0gKHByb3BlcnR5IG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkIGFjcm9zcyBlbnZpcm9ubWVudHMpXG4gICAgICovXG4gICAgZnVuY3Rpb24gcGFpcnMob2JqZWN0KSB7XG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICBwcm9wcyA9IGtleXMob2JqZWN0KSxcbiAgICAgICAgICBsZW5ndGggPSBwcm9wcy5sZW5ndGgsXG4gICAgICAgICAgcmVzdWx0ID0gQXJyYXkobGVuZ3RoKTtcblxuICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgdmFyIGtleSA9IHByb3BzW2luZGV4XTtcbiAgICAgICAgcmVzdWx0W2luZGV4XSA9IFtrZXksIG9iamVjdFtrZXldXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHNoYWxsb3cgY2xvbmUgb2YgYG9iamVjdGAgY29tcG9zZWQgb2YgdGhlIHNwZWNpZmllZCBwcm9wZXJ0aWVzLlxuICAgICAqIFByb3BlcnR5IG5hbWVzIG1heSBiZSBzcGVjaWZpZWQgYXMgaW5kaXZpZHVhbCBhcmd1bWVudHMgb3IgYXMgYXJyYXlzIG9mXG4gICAgICogcHJvcGVydHkgbmFtZXMuIElmIGEgY2FsbGJhY2sgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSBleGVjdXRlZCBmb3IgZWFjaFxuICAgICAqIHByb3BlcnR5IG9mIGBvYmplY3RgIHBpY2tpbmcgdGhlIHByb3BlcnRpZXMgdGhlIGNhbGxiYWNrIHJldHVybnMgdHJ1ZXlcbiAgICAgKiBmb3IuIFRoZSBjYWxsYmFjayBpcyBib3VuZCB0byBgdGhpc0FyZ2AgYW5kIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM7XG4gICAgICogKHZhbHVlLCBrZXksIG9iamVjdCkuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIHNvdXJjZSBvYmplY3QuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnwuLi5zdHJpbmd8c3RyaW5nW119IFtjYWxsYmFja10gVGhlIGZ1bmN0aW9uIGNhbGxlZCBwZXJcbiAgICAgKiAgaXRlcmF0aW9uIG9yIHByb3BlcnR5IG5hbWVzIHRvIHBpY2ssIHNwZWNpZmllZCBhcyBpbmRpdmlkdWFsIHByb3BlcnR5XG4gICAgICogIG5hbWVzIG9yIGFycmF5cyBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGFuIG9iamVjdCBjb21wb3NlZCBvZiB0aGUgcGlja2VkIHByb3BlcnRpZXMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8ucGljayh7ICduYW1lJzogJ2ZyZWQnLCAnX3VzZXJpZCc6ICdmcmVkMScgfSwgJ25hbWUnKTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ2ZyZWQnIH1cbiAgICAgKlxuICAgICAqIF8ucGljayh7ICduYW1lJzogJ2ZyZWQnLCAnX3VzZXJpZCc6ICdmcmVkMScgfSwgZnVuY3Rpb24odmFsdWUsIGtleSkge1xuICAgICAqICAgcmV0dXJuIGtleS5jaGFyQXQoMCkgIT0gJ18nO1xuICAgICAqIH0pO1xuICAgICAqIC8vID0+IHsgJ25hbWUnOiAnZnJlZCcgfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHBpY2sob2JqZWN0LCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgICAgcHJvcHMgPSBiYXNlRmxhdHRlbihhcmd1bWVudHMsIHRydWUsIGZhbHNlLCAxKSxcbiAgICAgICAgICAgIGxlbmd0aCA9IGlzT2JqZWN0KG9iamVjdCkgPyBwcm9wcy5sZW5ndGggOiAwO1xuXG4gICAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIGtleSA9IHByb3BzW2luZGV4XTtcbiAgICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgICAgZm9ySW4ob2JqZWN0LCBmdW5jdGlvbih2YWx1ZSwga2V5LCBvYmplY3QpIHtcbiAgICAgICAgICBpZiAoY2FsbGJhY2sodmFsdWUsIGtleSwgb2JqZWN0KSkge1xuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBbiBhbHRlcm5hdGl2ZSB0byBgXy5yZWR1Y2VgIHRoaXMgbWV0aG9kIHRyYW5zZm9ybXMgYG9iamVjdGAgdG8gYSBuZXdcbiAgICAgKiBgYWNjdW11bGF0b3JgIG9iamVjdCB3aGljaCBpcyB0aGUgcmVzdWx0IG9mIHJ1bm5pbmcgZWFjaCBvZiBpdHMgb3duXG4gICAgICogZW51bWVyYWJsZSBwcm9wZXJ0aWVzIHRocm91Z2ggYSBjYWxsYmFjaywgd2l0aCBlYWNoIGNhbGxiYWNrIGV4ZWN1dGlvblxuICAgICAqIHBvdGVudGlhbGx5IG11dGF0aW5nIHRoZSBgYWNjdW11bGF0b3JgIG9iamVjdC4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvXG4gICAgICogYHRoaXNBcmdgIGFuZCBpbnZva2VkIHdpdGggZm91ciBhcmd1bWVudHM7IChhY2N1bXVsYXRvciwgdmFsdWUsIGtleSwgb2JqZWN0KS5cbiAgICAgKiBDYWxsYmFja3MgbWF5IGV4aXQgaXRlcmF0aW9uIGVhcmx5IGJ5IGV4cGxpY2l0bHkgcmV0dXJuaW5nIGBmYWxzZWAuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkIHBlciBpdGVyYXRpb24uXG4gICAgICogQHBhcmFtIHsqfSBbYWNjdW11bGF0b3JdIFRoZSBjdXN0b20gYWNjdW11bGF0b3IgdmFsdWUuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGFjY3VtdWxhdGVkIHZhbHVlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgc3F1YXJlcyA9IF8udHJhbnNmb3JtKFsxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5LCAxMF0sIGZ1bmN0aW9uKHJlc3VsdCwgbnVtKSB7XG4gICAgICogICBudW0gKj0gbnVtO1xuICAgICAqICAgaWYgKG51bSAlIDIpIHtcbiAgICAgKiAgICAgcmV0dXJuIHJlc3VsdC5wdXNoKG51bSkgPCAzO1xuICAgICAqICAgfVxuICAgICAqIH0pO1xuICAgICAqIC8vID0+IFsxLCA5LCAyNV1cbiAgICAgKlxuICAgICAqIHZhciBtYXBwZWQgPSBfLnRyYW5zZm9ybSh7ICdhJzogMSwgJ2InOiAyLCAnYyc6IDMgfSwgZnVuY3Rpb24ocmVzdWx0LCBudW0sIGtleSkge1xuICAgICAqICAgcmVzdWx0W2tleV0gPSBudW0gKiAzO1xuICAgICAqIH0pO1xuICAgICAqIC8vID0+IHsgJ2EnOiAzLCAnYic6IDYsICdjJzogOSB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gdHJhbnNmb3JtKG9iamVjdCwgY2FsbGJhY2ssIGFjY3VtdWxhdG9yLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgaXNBcnIgPSBpc0FycmF5KG9iamVjdCk7XG4gICAgICBpZiAoYWNjdW11bGF0b3IgPT0gbnVsbCkge1xuICAgICAgICBpZiAoaXNBcnIpIHtcbiAgICAgICAgICBhY2N1bXVsYXRvciA9IFtdO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHZhciBjdG9yID0gb2JqZWN0ICYmIG9iamVjdC5jb25zdHJ1Y3RvcixcbiAgICAgICAgICAgICAgcHJvdG8gPSBjdG9yICYmIGN0b3IucHJvdG90eXBlO1xuXG4gICAgICAgICAgYWNjdW11bGF0b3IgPSBiYXNlQ3JlYXRlKHByb3RvKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCA0KTtcbiAgICAgICAgKGlzQXJyID8gZm9yRWFjaCA6IGZvck93bikob2JqZWN0LCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIG9iamVjdCkge1xuICAgICAgICAgIHJldHVybiBjYWxsYmFjayhhY2N1bXVsYXRvciwgdmFsdWUsIGluZGV4LCBvYmplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGFycmF5IGNvbXBvc2VkIG9mIHRoZSBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSB2YWx1ZXMgb2YgYG9iamVjdGAuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgT2JqZWN0c1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhbiBhcnJheSBvZiBwcm9wZXJ0eSB2YWx1ZXMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8udmFsdWVzKHsgJ29uZSc6IDEsICd0d28nOiAyLCAndGhyZWUnOiAzIH0pO1xuICAgICAqIC8vID0+IFsxLCAyLCAzXSAocHJvcGVydHkgb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQgYWNyb3NzIGVudmlyb25tZW50cylcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB2YWx1ZXMob2JqZWN0KSB7XG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICBwcm9wcyA9IGtleXMob2JqZWN0KSxcbiAgICAgICAgICBsZW5ndGggPSBwcm9wcy5sZW5ndGgsXG4gICAgICAgICAgcmVzdWx0ID0gQXJyYXkobGVuZ3RoKTtcblxuICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgcmVzdWx0W2luZGV4XSA9IG9iamVjdFtwcm9wc1tpbmRleF1dO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgZWxlbWVudHMgZnJvbSB0aGUgc3BlY2lmaWVkIGluZGV4ZXMsIG9yIGtleXMsIG9mIHRoZVxuICAgICAqIGBjb2xsZWN0aW9uYC4gSW5kZXhlcyBtYXkgYmUgc3BlY2lmaWVkIGFzIGluZGl2aWR1YWwgYXJndW1lbnRzIG9yIGFzIGFycmF5c1xuICAgICAqIG9mIGluZGV4ZXMuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbnNcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7Li4uKG51bWJlcnxudW1iZXJbXXxzdHJpbmd8c3RyaW5nW10pfSBbaW5kZXhdIFRoZSBpbmRleGVzIG9mIGBjb2xsZWN0aW9uYFxuICAgICAqICAgdG8gcmV0cmlldmUsIHNwZWNpZmllZCBhcyBpbmRpdmlkdWFsIGluZGV4ZXMgb3IgYXJyYXlzIG9mIGluZGV4ZXMuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgbmV3IGFycmF5IG9mIGVsZW1lbnRzIGNvcnJlc3BvbmRpbmcgdG8gdGhlXG4gICAgICogIHByb3ZpZGVkIGluZGV4ZXMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uYXQoWydhJywgJ2InLCAnYycsICdkJywgJ2UnXSwgWzAsIDIsIDRdKTtcbiAgICAgKiAvLyA9PiBbJ2EnLCAnYycsICdlJ11cbiAgICAgKlxuICAgICAqIF8uYXQoWydmcmVkJywgJ2Jhcm5leScsICdwZWJibGVzJ10sIDAsIDIpO1xuICAgICAqIC8vID0+IFsnZnJlZCcsICdwZWJibGVzJ11cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBhdChjb2xsZWN0aW9uKSB7XG4gICAgICB2YXIgYXJncyA9IGFyZ3VtZW50cyxcbiAgICAgICAgICBpbmRleCA9IC0xLFxuICAgICAgICAgIHByb3BzID0gYmFzZUZsYXR0ZW4oYXJncywgdHJ1ZSwgZmFsc2UsIDEpLFxuICAgICAgICAgIGxlbmd0aCA9IChhcmdzWzJdICYmIGFyZ3NbMl1bYXJnc1sxXV0gPT09IGNvbGxlY3Rpb24pID8gMSA6IHByb3BzLmxlbmd0aCxcbiAgICAgICAgICByZXN1bHQgPSBBcnJheShsZW5ndGgpO1xuXG4gICAgICB3aGlsZSgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIHJlc3VsdFtpbmRleF0gPSBjb2xsZWN0aW9uW3Byb3BzW2luZGV4XV07XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrcyBpZiBhIGdpdmVuIHZhbHVlIGlzIHByZXNlbnQgaW4gYSBjb2xsZWN0aW9uIHVzaW5nIHN0cmljdCBlcXVhbGl0eVxuICAgICAqIGZvciBjb21wYXJpc29ucywgaS5lLiBgPT09YC4gSWYgYGZyb21JbmRleGAgaXMgbmVnYXRpdmUsIGl0IGlzIHVzZWQgYXMgdGhlXG4gICAgICogb2Zmc2V0IGZyb20gdGhlIGVuZCBvZiB0aGUgY29sbGVjdGlvbi5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBhbGlhcyBpbmNsdWRlXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0geyp9IHRhcmdldCBUaGUgdmFsdWUgdG8gY2hlY2sgZm9yLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbZnJvbUluZGV4PTBdIFRoZSBpbmRleCB0byBzZWFyY2ggZnJvbS5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGB0YXJnZXRgIGVsZW1lbnQgaXMgZm91bmQsIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5jb250YWlucyhbMSwgMiwgM10sIDEpO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKlxuICAgICAqIF8uY29udGFpbnMoWzEsIDIsIDNdLCAxLCAyKTtcbiAgICAgKiAvLyA9PiBmYWxzZVxuICAgICAqXG4gICAgICogXy5jb250YWlucyh7ICduYW1lJzogJ2ZyZWQnLCAnYWdlJzogNDAgfSwgJ2ZyZWQnKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiBfLmNvbnRhaW5zKCdwZWJibGVzJywgJ2ViJyk7XG4gICAgICogLy8gPT4gdHJ1ZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNvbnRhaW5zKGNvbGxlY3Rpb24sIHRhcmdldCwgZnJvbUluZGV4KSB7XG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICBpbmRleE9mID0gZ2V0SW5kZXhPZigpLFxuICAgICAgICAgIGxlbmd0aCA9IGNvbGxlY3Rpb24gPyBjb2xsZWN0aW9uLmxlbmd0aCA6IDAsXG4gICAgICAgICAgcmVzdWx0ID0gZmFsc2U7XG5cbiAgICAgIGZyb21JbmRleCA9IChmcm9tSW5kZXggPCAwID8gbmF0aXZlTWF4KDAsIGxlbmd0aCArIGZyb21JbmRleCkgOiBmcm9tSW5kZXgpIHx8IDA7XG4gICAgICBpZiAoaXNBcnJheShjb2xsZWN0aW9uKSkge1xuICAgICAgICByZXN1bHQgPSBpbmRleE9mKGNvbGxlY3Rpb24sIHRhcmdldCwgZnJvbUluZGV4KSA+IC0xO1xuICAgICAgfSBlbHNlIGlmICh0eXBlb2YgbGVuZ3RoID09ICdudW1iZXInKSB7XG4gICAgICAgIHJlc3VsdCA9IChpc1N0cmluZyhjb2xsZWN0aW9uKSA/IGNvbGxlY3Rpb24uaW5kZXhPZih0YXJnZXQsIGZyb21JbmRleCkgOiBpbmRleE9mKGNvbGxlY3Rpb24sIHRhcmdldCwgZnJvbUluZGV4KSkgPiAtMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvck93bihjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIGlmICgrK2luZGV4ID49IGZyb21JbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuICEocmVzdWx0ID0gdmFsdWUgPT09IHRhcmdldCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBvYmplY3QgY29tcG9zZWQgb2Yga2V5cyBnZW5lcmF0ZWQgZnJvbSB0aGUgcmVzdWx0cyBvZiBydW5uaW5nXG4gICAgICogZWFjaCBlbGVtZW50IG9mIGBjb2xsZWN0aW9uYCB0aHJvdWdoIHRoZSBjYWxsYmFjay4gVGhlIGNvcnJlc3BvbmRpbmcgdmFsdWVcbiAgICAgKiBvZiBlYWNoIGtleSBpcyB0aGUgbnVtYmVyIG9mIHRpbWVzIHRoZSBrZXkgd2FzIHJldHVybmVkIGJ5IHRoZSBjYWxsYmFjay5cbiAgICAgKiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG8gYHRoaXNBcmdgIGFuZCBpbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzO1xuICAgICAqICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdHxzdHJpbmd9IFtjYWxsYmFjaz1pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgaXRlcmF0aW9uLiBJZiBhIHByb3BlcnR5IG5hbWUgb3Igb2JqZWN0IGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgdXNlZFxuICAgICAqICB0byBjcmVhdGUgYSBcIl8ucGx1Y2tcIiBvciBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFjaywgcmVzcGVjdGl2ZWx5LlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNvbXBvc2VkIGFnZ3JlZ2F0ZSBvYmplY3QuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uY291bnRCeShbNC4zLCA2LjEsIDYuNF0sIGZ1bmN0aW9uKG51bSkgeyByZXR1cm4gTWF0aC5mbG9vcihudW0pOyB9KTtcbiAgICAgKiAvLyA9PiB7ICc0JzogMSwgJzYnOiAyIH1cbiAgICAgKlxuICAgICAqIF8uY291bnRCeShbNC4zLCA2LjEsIDYuNF0sIGZ1bmN0aW9uKG51bSkgeyByZXR1cm4gdGhpcy5mbG9vcihudW0pOyB9LCBNYXRoKTtcbiAgICAgKiAvLyA9PiB7ICc0JzogMSwgJzYnOiAyIH1cbiAgICAgKlxuICAgICAqIF8uY291bnRCeShbJ29uZScsICd0d28nLCAndGhyZWUnXSwgJ2xlbmd0aCcpO1xuICAgICAqIC8vID0+IHsgJzMnOiAyLCAnNSc6IDEgfVxuICAgICAqL1xuICAgIHZhciBjb3VudEJ5ID0gY3JlYXRlQWdncmVnYXRvcihmdW5jdGlvbihyZXN1bHQsIHZhbHVlLCBrZXkpIHtcbiAgICAgIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHJlc3VsdCwga2V5KSA/IHJlc3VsdFtrZXldKysgOiByZXN1bHRba2V5XSA9IDEpO1xuICAgIH0pO1xuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIHRoZSBnaXZlbiBjYWxsYmFjayByZXR1cm5zIHRydWV5IHZhbHVlIGZvciAqKmFsbCoqIGVsZW1lbnRzIG9mXG4gICAgICogYSBjb2xsZWN0aW9uLiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG8gYHRoaXNBcmdgIGFuZCBpbnZva2VkIHdpdGggdGhyZWVcbiAgICAgKiBhcmd1bWVudHM7ICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGFsaWFzIGFsbFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYWxsIGVsZW1lbnRzIHBhc3NlZCB0aGUgY2FsbGJhY2sgY2hlY2ssXG4gICAgICogIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5ldmVyeShbdHJ1ZSwgMSwgbnVsbCwgJ3llcyddKTtcbiAgICAgKiAvLyA9PiBmYWxzZVxuICAgICAqXG4gICAgICogdmFyIGNoYXJhY3RlcnMgPSBbXG4gICAgICogICB7ICduYW1lJzogJ2Jhcm5leScsICdhZ2UnOiAzNiB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAnYWdlJzogNDAgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmV2ZXJ5KGNoYXJhY3RlcnMsICdhZ2UnKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ud2hlcmVcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmV2ZXJ5KGNoYXJhY3RlcnMsIHsgJ2FnZSc6IDM2IH0pO1xuICAgICAqIC8vID0+IGZhbHNlXG4gICAgICovXG4gICAgZnVuY3Rpb24gZXZlcnkoY29sbGVjdGlvbiwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciByZXN1bHQgPSB0cnVlO1xuICAgICAgY2FsbGJhY2sgPSBsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDMpO1xuXG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICBsZW5ndGggPSBjb2xsZWN0aW9uID8gY29sbGVjdGlvbi5sZW5ndGggOiAwO1xuXG4gICAgICBpZiAodHlwZW9mIGxlbmd0aCA9PSAnbnVtYmVyJykge1xuICAgICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICAgIGlmICghKHJlc3VsdCA9ICEhY2FsbGJhY2soY29sbGVjdGlvbltpbmRleF0sIGluZGV4LCBjb2xsZWN0aW9uKSkpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yT3duKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikge1xuICAgICAgICAgIHJldHVybiAocmVzdWx0ID0gISFjYWxsYmFjayh2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEl0ZXJhdGVzIG92ZXIgZWxlbWVudHMgb2YgYSBjb2xsZWN0aW9uLCByZXR1cm5pbmcgYW4gYXJyYXkgb2YgYWxsIGVsZW1lbnRzXG4gICAgICogdGhlIGNhbGxiYWNrIHJldHVybnMgdHJ1ZXkgZm9yLiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG8gYHRoaXNBcmdgIGFuZFxuICAgICAqIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM7ICh2YWx1ZSwgaW5kZXh8a2V5LCBjb2xsZWN0aW9uKS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGFsaWFzIHNlbGVjdFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYSBuZXcgYXJyYXkgb2YgZWxlbWVudHMgdGhhdCBwYXNzZWQgdGhlIGNhbGxiYWNrIGNoZWNrLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgZXZlbnMgPSBfLmZpbHRlcihbMSwgMiwgMywgNCwgNSwgNl0sIGZ1bmN0aW9uKG51bSkgeyByZXR1cm4gbnVtICUgMiA9PSAwOyB9KTtcbiAgICAgKiAvLyA9PiBbMiwgNCwgNl1cbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzYsICdibG9ja2VkJzogZmFsc2UgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgJ2FnZSc6IDQwLCAnYmxvY2tlZCc6IHRydWUgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmZpbHRlcihjaGFyYWN0ZXJzLCAnYmxvY2tlZCcpO1xuICAgICAqIC8vID0+IFt7ICduYW1lJzogJ2ZyZWQnLCAnYWdlJzogNDAsICdibG9ja2VkJzogdHJ1ZSB9XVxuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLndoZXJlXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5maWx0ZXIoY2hhcmFjdGVycywgeyAnYWdlJzogMzYgfSk7XG4gICAgICogLy8gPT4gW3sgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2LCAnYmxvY2tlZCc6IGZhbHNlIH1dXG4gICAgICovXG4gICAgZnVuY3Rpb24gZmlsdGVyKGNvbGxlY3Rpb24sIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgICBjYWxsYmFjayA9IGxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMyk7XG5cbiAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgIGxlbmd0aCA9IGNvbGxlY3Rpb24gPyBjb2xsZWN0aW9uLmxlbmd0aCA6IDA7XG5cbiAgICAgIGlmICh0eXBlb2YgbGVuZ3RoID09ICdudW1iZXInKSB7XG4gICAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIHZhbHVlID0gY29sbGVjdGlvbltpbmRleF07XG4gICAgICAgICAgaWYgKGNhbGxiYWNrKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvck93bihjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICAgICAgICBpZiAoY2FsbGJhY2sodmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKSkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2godmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEl0ZXJhdGVzIG92ZXIgZWxlbWVudHMgb2YgYSBjb2xsZWN0aW9uLCByZXR1cm5pbmcgdGhlIGZpcnN0IGVsZW1lbnQgdGhhdFxuICAgICAqIHRoZSBjYWxsYmFjayByZXR1cm5zIHRydWV5IGZvci4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmRcbiAgICAgKiBpbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzOyAodmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBhbGlhcyBkZXRlY3QsIGZpbmRXaGVyZVxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZm91bmQgZWxlbWVudCwgZWxzZSBgdW5kZWZpbmVkYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGNoYXJhY3RlcnMgPSBbXG4gICAgICogICB7ICduYW1lJzogJ2Jhcm5leScsICAnYWdlJzogMzYsICdibG9ja2VkJzogZmFsc2UgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgICdhZ2UnOiA0MCwgJ2Jsb2NrZWQnOiB0cnVlIH0sXG4gICAgICogICB7ICduYW1lJzogJ3BlYmJsZXMnLCAnYWdlJzogMSwgICdibG9ja2VkJzogZmFsc2UgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiBfLmZpbmQoY2hhcmFjdGVycywgZnVuY3Rpb24oY2hyKSB7XG4gICAgICogICByZXR1cm4gY2hyLmFnZSA8IDQwO1xuICAgICAqIH0pO1xuICAgICAqIC8vID0+IHsgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2LCAnYmxvY2tlZCc6IGZhbHNlIH1cbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy53aGVyZVwiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8uZmluZChjaGFyYWN0ZXJzLCB7ICdhZ2UnOiAxIH0pO1xuICAgICAqIC8vID0+ICB7ICduYW1lJzogJ3BlYmJsZXMnLCAnYWdlJzogMSwgJ2Jsb2NrZWQnOiBmYWxzZSB9XG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmZpbmQoY2hhcmFjdGVycywgJ2Jsb2NrZWQnKTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ2ZyZWQnLCAnYWdlJzogNDAsICdibG9ja2VkJzogdHJ1ZSB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gZmluZChjb2xsZWN0aW9uLCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgY2FsbGJhY2sgPSBsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDMpO1xuXG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICBsZW5ndGggPSBjb2xsZWN0aW9uID8gY29sbGVjdGlvbi5sZW5ndGggOiAwO1xuXG4gICAgICBpZiAodHlwZW9mIGxlbmd0aCA9PSAnbnVtYmVyJykge1xuICAgICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICAgIHZhciB2YWx1ZSA9IGNvbGxlY3Rpb25baW5kZXhdO1xuICAgICAgICAgIGlmIChjYWxsYmFjayh2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICBmb3JPd24oY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgaWYgKGNhbGxiYWNrKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IHZhbHVlO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5maW5kYCBleGNlcHQgdGhhdCBpdCBpdGVyYXRlcyBvdmVyIGVsZW1lbnRzXG4gICAgICogb2YgYSBgY29sbGVjdGlvbmAgZnJvbSByaWdodCB0byBsZWZ0LlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdHxzdHJpbmd9IFtjYWxsYmFjaz1pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgaXRlcmF0aW9uLiBJZiBhIHByb3BlcnR5IG5hbWUgb3Igb2JqZWN0IGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgdXNlZFxuICAgICAqICB0byBjcmVhdGUgYSBcIl8ucGx1Y2tcIiBvciBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFjaywgcmVzcGVjdGl2ZWx5LlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBmb3VuZCBlbGVtZW50LCBlbHNlIGB1bmRlZmluZWRgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmZpbmRMYXN0KFsxLCAyLCAzLCA0XSwgZnVuY3Rpb24obnVtKSB7XG4gICAgICogICByZXR1cm4gbnVtICUgMiA9PSAxO1xuICAgICAqIH0pO1xuICAgICAqIC8vID0+IDNcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmaW5kTGFzdChjb2xsZWN0aW9uLCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgIGZvckVhY2hSaWdodChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICAgICAgaWYgKGNhbGxiYWNrKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikpIHtcbiAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBJdGVyYXRlcyBvdmVyIGVsZW1lbnRzIG9mIGEgY29sbGVjdGlvbiwgZXhlY3V0aW5nIHRoZSBjYWxsYmFjayBmb3IgZWFjaFxuICAgICAqIGVsZW1lbnQuIFRoZSBjYWxsYmFjayBpcyBib3VuZCB0byBgdGhpc0FyZ2AgYW5kIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM7XG4gICAgICogKHZhbHVlLCBpbmRleHxrZXksIGNvbGxlY3Rpb24pLiBDYWxsYmFja3MgbWF5IGV4aXQgaXRlcmF0aW9uIGVhcmx5IGJ5XG4gICAgICogZXhwbGljaXRseSByZXR1cm5pbmcgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIE5vdGU6IEFzIHdpdGggb3RoZXIgXCJDb2xsZWN0aW9uc1wiIG1ldGhvZHMsIG9iamVjdHMgd2l0aCBhIGBsZW5ndGhgIHByb3BlcnR5XG4gICAgICogYXJlIGl0ZXJhdGVkIGxpa2UgYXJyYXlzLiBUbyBhdm9pZCB0aGlzIGJlaGF2aW9yIGBfLmZvckluYCBvciBgXy5mb3JPd25gXG4gICAgICogbWF5IGJlIHVzZWQgZm9yIG9iamVjdCBpdGVyYXRpb24uXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAYWxpYXMgZWFjaFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkIHBlciBpdGVyYXRpb24uXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge0FycmF5fE9iamVjdHxzdHJpbmd9IFJldHVybnMgYGNvbGxlY3Rpb25gLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfKFsxLCAyLCAzXSkuZm9yRWFjaChmdW5jdGlvbihudW0pIHsgY29uc29sZS5sb2cobnVtKTsgfSkuam9pbignLCcpO1xuICAgICAqIC8vID0+IGxvZ3MgZWFjaCBudW1iZXIgYW5kIHJldHVybnMgJzEsMiwzJ1xuICAgICAqXG4gICAgICogXy5mb3JFYWNoKHsgJ29uZSc6IDEsICd0d28nOiAyLCAndGhyZWUnOiAzIH0sIGZ1bmN0aW9uKG51bSkgeyBjb25zb2xlLmxvZyhudW0pOyB9KTtcbiAgICAgKiAvLyA9PiBsb2dzIGVhY2ggbnVtYmVyIGFuZCByZXR1cm5zIHRoZSBvYmplY3QgKHByb3BlcnR5IG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkIGFjcm9zcyBlbnZpcm9ubWVudHMpXG4gICAgICovXG4gICAgZnVuY3Rpb24gZm9yRWFjaChjb2xsZWN0aW9uLCBjYWxsYmFjaywgdGhpc0FyZykge1xuICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgbGVuZ3RoID0gY29sbGVjdGlvbiA/IGNvbGxlY3Rpb24ubGVuZ3RoIDogMDtcblxuICAgICAgY2FsbGJhY2sgPSBjYWxsYmFjayAmJiB0eXBlb2YgdGhpc0FyZyA9PSAndW5kZWZpbmVkJyA/IGNhbGxiYWNrIDogYmFzZUNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgIGlmICh0eXBlb2YgbGVuZ3RoID09ICdudW1iZXInKSB7XG4gICAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgaWYgKGNhbGxiYWNrKGNvbGxlY3Rpb25baW5kZXhdLCBpbmRleCwgY29sbGVjdGlvbikgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZvck93bihjb2xsZWN0aW9uLCBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29sbGVjdGlvbjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmZvckVhY2hgIGV4Y2VwdCB0aGF0IGl0IGl0ZXJhdGVzIG92ZXIgZWxlbWVudHNcbiAgICAgKiBvZiBhIGBjb2xsZWN0aW9uYCBmcm9tIHJpZ2h0IHRvIGxlZnQuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAYWxpYXMgZWFjaFJpZ2h0XG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl8T2JqZWN0fHN0cmluZ30gUmV0dXJucyBgY29sbGVjdGlvbmAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8oWzEsIDIsIDNdKS5mb3JFYWNoUmlnaHQoZnVuY3Rpb24obnVtKSB7IGNvbnNvbGUubG9nKG51bSk7IH0pLmpvaW4oJywnKTtcbiAgICAgKiAvLyA9PiBsb2dzIGVhY2ggbnVtYmVyIGZyb20gcmlnaHQgdG8gbGVmdCBhbmQgcmV0dXJucyAnMywyLDEnXG4gICAgICovXG4gICAgZnVuY3Rpb24gZm9yRWFjaFJpZ2h0KGNvbGxlY3Rpb24sIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgbGVuZ3RoID0gY29sbGVjdGlvbiA/IGNvbGxlY3Rpb24ubGVuZ3RoIDogMDtcbiAgICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgJiYgdHlwZW9mIHRoaXNBcmcgPT0gJ3VuZGVmaW5lZCcgPyBjYWxsYmFjayA6IGJhc2VDcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMyk7XG4gICAgICBpZiAodHlwZW9mIGxlbmd0aCA9PSAnbnVtYmVyJykge1xuICAgICAgICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICAgICAgICBpZiAoY2FsbGJhY2soY29sbGVjdGlvbltsZW5ndGhdLCBsZW5ndGgsIGNvbGxlY3Rpb24pID09PSBmYWxzZSkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcHJvcHMgPSBrZXlzKGNvbGxlY3Rpb24pO1xuICAgICAgICBsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG4gICAgICAgIGZvck93bihjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgICAgICAga2V5ID0gcHJvcHMgPyBwcm9wc1stLWxlbmd0aF0gOiAtLWxlbmd0aDtcbiAgICAgICAgICByZXR1cm4gY2FsbGJhY2soY29sbGVjdGlvbltrZXldLCBrZXksIGNvbGxlY3Rpb24pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gb2JqZWN0IGNvbXBvc2VkIG9mIGtleXMgZ2VuZXJhdGVkIGZyb20gdGhlIHJlc3VsdHMgb2YgcnVubmluZ1xuICAgICAqIGVhY2ggZWxlbWVudCBvZiBhIGNvbGxlY3Rpb24gdGhyb3VnaCB0aGUgY2FsbGJhY2suIFRoZSBjb3JyZXNwb25kaW5nIHZhbHVlXG4gICAgICogb2YgZWFjaCBrZXkgaXMgYW4gYXJyYXkgb2YgdGhlIGVsZW1lbnRzIHJlc3BvbnNpYmxlIGZvciBnZW5lcmF0aW5nIHRoZSBrZXkuXG4gICAgICogVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoIHRocmVlIGFyZ3VtZW50cztcbiAgICAgKiAodmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYFxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdHxzdHJpbmd9IFtjYWxsYmFjaz1pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgaXRlcmF0aW9uLiBJZiBhIHByb3BlcnR5IG5hbWUgb3Igb2JqZWN0IGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgdXNlZFxuICAgICAqICB0byBjcmVhdGUgYSBcIl8ucGx1Y2tcIiBvciBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFjaywgcmVzcGVjdGl2ZWx5LlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNvbXBvc2VkIGFnZ3JlZ2F0ZSBvYmplY3QuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uZ3JvdXBCeShbNC4yLCA2LjEsIDYuNF0sIGZ1bmN0aW9uKG51bSkgeyByZXR1cm4gTWF0aC5mbG9vcihudW0pOyB9KTtcbiAgICAgKiAvLyA9PiB7ICc0JzogWzQuMl0sICc2JzogWzYuMSwgNi40XSB9XG4gICAgICpcbiAgICAgKiBfLmdyb3VwQnkoWzQuMiwgNi4xLCA2LjRdLCBmdW5jdGlvbihudW0pIHsgcmV0dXJuIHRoaXMuZmxvb3IobnVtKTsgfSwgTWF0aCk7XG4gICAgICogLy8gPT4geyAnNCc6IFs0LjJdLCAnNic6IFs2LjEsIDYuNF0gfVxuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLnBsdWNrXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5ncm91cEJ5KFsnb25lJywgJ3R3bycsICd0aHJlZSddLCAnbGVuZ3RoJyk7XG4gICAgICogLy8gPT4geyAnMyc6IFsnb25lJywgJ3R3byddLCAnNSc6IFsndGhyZWUnXSB9XG4gICAgICovXG4gICAgdmFyIGdyb3VwQnkgPSBjcmVhdGVBZ2dyZWdhdG9yKGZ1bmN0aW9uKHJlc3VsdCwgdmFsdWUsIGtleSkge1xuICAgICAgKGhhc093blByb3BlcnR5LmNhbGwocmVzdWx0LCBrZXkpID8gcmVzdWx0W2tleV0gOiByZXN1bHRba2V5XSA9IFtdKS5wdXNoKHZhbHVlKTtcbiAgICB9KTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gb2JqZWN0IGNvbXBvc2VkIG9mIGtleXMgZ2VuZXJhdGVkIGZyb20gdGhlIHJlc3VsdHMgb2YgcnVubmluZ1xuICAgICAqIGVhY2ggZWxlbWVudCBvZiB0aGUgY29sbGVjdGlvbiB0aHJvdWdoIHRoZSBnaXZlbiBjYWxsYmFjay4gVGhlIGNvcnJlc3BvbmRpbmdcbiAgICAgKiB2YWx1ZSBvZiBlYWNoIGtleSBpcyB0aGUgbGFzdCBlbGVtZW50IHJlc3BvbnNpYmxlIGZvciBnZW5lcmF0aW5nIHRoZSBrZXkuXG4gICAgICogVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoIHRocmVlIGFyZ3VtZW50cztcbiAgICAgKiAodmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjb21wb3NlZCBhZ2dyZWdhdGUgb2JqZWN0LlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIga2V5cyA9IFtcbiAgICAgKiAgIHsgJ2Rpcic6ICdsZWZ0JywgJ2NvZGUnOiA5NyB9LFxuICAgICAqICAgeyAnZGlyJzogJ3JpZ2h0JywgJ2NvZGUnOiAxMDAgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiBfLmluZGV4Qnkoa2V5cywgJ2RpcicpO1xuICAgICAqIC8vID0+IHsgJ2xlZnQnOiB7ICdkaXInOiAnbGVmdCcsICdjb2RlJzogOTcgfSwgJ3JpZ2h0JzogeyAnZGlyJzogJ3JpZ2h0JywgJ2NvZGUnOiAxMDAgfSB9XG4gICAgICpcbiAgICAgKiBfLmluZGV4Qnkoa2V5cywgZnVuY3Rpb24oa2V5KSB7IHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGtleS5jb2RlKTsgfSk7XG4gICAgICogLy8gPT4geyAnYSc6IHsgJ2Rpcic6ICdsZWZ0JywgJ2NvZGUnOiA5NyB9LCAnZCc6IHsgJ2Rpcic6ICdyaWdodCcsICdjb2RlJzogMTAwIH0gfVxuICAgICAqXG4gICAgICogXy5pbmRleEJ5KGNoYXJhY3RlcnMsIGZ1bmN0aW9uKGtleSkgeyB0aGlzLmZyb21DaGFyQ29kZShrZXkuY29kZSk7IH0sIFN0cmluZyk7XG4gICAgICogLy8gPT4geyAnYSc6IHsgJ2Rpcic6ICdsZWZ0JywgJ2NvZGUnOiA5NyB9LCAnZCc6IHsgJ2Rpcic6ICdyaWdodCcsICdjb2RlJzogMTAwIH0gfVxuICAgICAqL1xuICAgIHZhciBpbmRleEJ5ID0gY3JlYXRlQWdncmVnYXRvcihmdW5jdGlvbihyZXN1bHQsIHZhbHVlLCBrZXkpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7XG4gICAgfSk7XG5cbiAgICAvKipcbiAgICAgKiBJbnZva2VzIHRoZSBtZXRob2QgbmFtZWQgYnkgYG1ldGhvZE5hbWVgIG9uIGVhY2ggZWxlbWVudCBpbiB0aGUgYGNvbGxlY3Rpb25gXG4gICAgICogcmV0dXJuaW5nIGFuIGFycmF5IG9mIHRoZSByZXN1bHRzIG9mIGVhY2ggaW52b2tlZCBtZXRob2QuIEFkZGl0aW9uYWwgYXJndW1lbnRzXG4gICAgICogd2lsbCBiZSBwcm92aWRlZCB0byBlYWNoIGludm9rZWQgbWV0aG9kLiBJZiBgbWV0aG9kTmFtZWAgaXMgYSBmdW5jdGlvbiBpdFxuICAgICAqIHdpbGwgYmUgaW52b2tlZCBmb3IsIGFuZCBgdGhpc2AgYm91bmQgdG8sIGVhY2ggZWxlbWVudCBpbiB0aGUgYGNvbGxlY3Rpb25gLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufHN0cmluZ30gbWV0aG9kTmFtZSBUaGUgbmFtZSBvZiB0aGUgbWV0aG9kIHRvIGludm9rZSBvclxuICAgICAqICB0aGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICAgICAqIEBwYXJhbSB7Li4uKn0gW2FyZ10gQXJndW1lbnRzIHRvIGludm9rZSB0aGUgbWV0aG9kIHdpdGguXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgbmV3IGFycmF5IG9mIHRoZSByZXN1bHRzIG9mIGVhY2ggaW52b2tlZCBtZXRob2QuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaW52b2tlKFtbNSwgMSwgN10sIFszLCAyLCAxXV0sICdzb3J0Jyk7XG4gICAgICogLy8gPT4gW1sxLCA1LCA3XSwgWzEsIDIsIDNdXVxuICAgICAqXG4gICAgICogXy5pbnZva2UoWzEyMywgNDU2XSwgU3RyaW5nLnByb3RvdHlwZS5zcGxpdCwgJycpO1xuICAgICAqIC8vID0+IFtbJzEnLCAnMicsICczJ10sIFsnNCcsICc1JywgJzYnXV1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpbnZva2UoY29sbGVjdGlvbiwgbWV0aG9kTmFtZSkge1xuICAgICAgdmFyIGFyZ3MgPSBzbGljZShhcmd1bWVudHMsIDIpLFxuICAgICAgICAgIGluZGV4ID0gLTEsXG4gICAgICAgICAgaXNGdW5jID0gdHlwZW9mIG1ldGhvZE5hbWUgPT0gJ2Z1bmN0aW9uJyxcbiAgICAgICAgICBsZW5ndGggPSBjb2xsZWN0aW9uID8gY29sbGVjdGlvbi5sZW5ndGggOiAwLFxuICAgICAgICAgIHJlc3VsdCA9IEFycmF5KHR5cGVvZiBsZW5ndGggPT0gJ251bWJlcicgPyBsZW5ndGggOiAwKTtcblxuICAgICAgZm9yRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICByZXN1bHRbKytpbmRleF0gPSAoaXNGdW5jID8gbWV0aG9kTmFtZSA6IHZhbHVlW21ldGhvZE5hbWVdKS5hcHBseSh2YWx1ZSwgYXJncyk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBhcnJheSBvZiB2YWx1ZXMgYnkgcnVubmluZyBlYWNoIGVsZW1lbnQgaW4gdGhlIGNvbGxlY3Rpb25cbiAgICAgKiB0aHJvdWdoIHRoZSBjYWxsYmFjay4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoXG4gICAgICogdGhyZWUgYXJndW1lbnRzOyAodmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBhbGlhcyBjb2xsZWN0XG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdHxzdHJpbmd9IFtjYWxsYmFjaz1pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgaXRlcmF0aW9uLiBJZiBhIHByb3BlcnR5IG5hbWUgb3Igb2JqZWN0IGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgdXNlZFxuICAgICAqICB0byBjcmVhdGUgYSBcIl8ucGx1Y2tcIiBvciBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFjaywgcmVzcGVjdGl2ZWx5LlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhIG5ldyBhcnJheSBvZiB0aGUgcmVzdWx0cyBvZiBlYWNoIGBjYWxsYmFja2AgZXhlY3V0aW9uLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLm1hcChbMSwgMiwgM10sIGZ1bmN0aW9uKG51bSkgeyByZXR1cm4gbnVtICogMzsgfSk7XG4gICAgICogLy8gPT4gWzMsIDYsIDldXG4gICAgICpcbiAgICAgKiBfLm1hcCh7ICdvbmUnOiAxLCAndHdvJzogMiwgJ3RocmVlJzogMyB9LCBmdW5jdGlvbihudW0pIHsgcmV0dXJuIG51bSAqIDM7IH0pO1xuICAgICAqIC8vID0+IFszLCA2LCA5XSAocHJvcGVydHkgb3JkZXIgaXMgbm90IGd1YXJhbnRlZWQgYWNyb3NzIGVudmlyb25tZW50cylcbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzYgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLnBsdWNrXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5tYXAoY2hhcmFjdGVycywgJ25hbWUnKTtcbiAgICAgKiAvLyA9PiBbJ2Jhcm5leScsICdmcmVkJ11cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBtYXAoY29sbGVjdGlvbiwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgIGxlbmd0aCA9IGNvbGxlY3Rpb24gPyBjb2xsZWN0aW9uLmxlbmd0aCA6IDA7XG5cbiAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgIGlmICh0eXBlb2YgbGVuZ3RoID09ICdudW1iZXInKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBBcnJheShsZW5ndGgpO1xuICAgICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICAgIHJlc3VsdFtpbmRleF0gPSBjYWxsYmFjayhjb2xsZWN0aW9uW2luZGV4XSwgaW5kZXgsIGNvbGxlY3Rpb24pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBbXTtcbiAgICAgICAgZm9yT3duKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24pIHtcbiAgICAgICAgICByZXN1bHRbKytpbmRleF0gPSBjYWxsYmFjayh2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyB0aGUgbWF4aW11bSB2YWx1ZSBvZiBhIGNvbGxlY3Rpb24uIElmIHRoZSBjb2xsZWN0aW9uIGlzIGVtcHR5IG9yXG4gICAgICogZmFsc2V5IGAtSW5maW5pdHlgIGlzIHJldHVybmVkLiBJZiBhIGNhbGxiYWNrIGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgZXhlY3V0ZWRcbiAgICAgKiBmb3IgZWFjaCB2YWx1ZSBpbiB0aGUgY29sbGVjdGlvbiB0byBnZW5lcmF0ZSB0aGUgY3JpdGVyaW9uIGJ5IHdoaWNoIHRoZSB2YWx1ZVxuICAgICAqIGlzIHJhbmtlZC4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoIHRocmVlXG4gICAgICogYXJndW1lbnRzOyAodmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdHxzdHJpbmd9IFtjYWxsYmFjaz1pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgaXRlcmF0aW9uLiBJZiBhIHByb3BlcnR5IG5hbWUgb3Igb2JqZWN0IGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgdXNlZFxuICAgICAqICB0byBjcmVhdGUgYSBcIl8ucGx1Y2tcIiBvciBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFjaywgcmVzcGVjdGl2ZWx5LlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtYXhpbXVtIHZhbHVlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLm1heChbNCwgMiwgOCwgNl0pO1xuICAgICAqIC8vID0+IDhcbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzYgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogXy5tYXgoY2hhcmFjdGVycywgZnVuY3Rpb24oY2hyKSB7IHJldHVybiBjaHIuYWdlOyB9KTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ2ZyZWQnLCAnYWdlJzogNDAgfTtcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy5wbHVja1wiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8ubWF4KGNoYXJhY3RlcnMsICdhZ2UnKTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ2ZyZWQnLCAnYWdlJzogNDAgfTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBtYXgoY29sbGVjdGlvbiwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciBjb21wdXRlZCA9IC1JbmZpbml0eSxcbiAgICAgICAgICByZXN1bHQgPSBjb21wdXRlZDtcblxuICAgICAgLy8gYWxsb3dzIHdvcmtpbmcgd2l0aCBmdW5jdGlvbnMgbGlrZSBgXy5tYXBgIHdpdGhvdXQgdXNpbmdcbiAgICAgIC8vIHRoZWlyIGBpbmRleGAgYXJndW1lbnQgYXMgYSBjYWxsYmFja1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPSAnZnVuY3Rpb24nICYmIHRoaXNBcmcgJiYgdGhpc0FyZ1tjYWxsYmFja10gPT09IGNvbGxlY3Rpb24pIHtcbiAgICAgICAgY2FsbGJhY2sgPSBudWxsO1xuICAgICAgfVxuICAgICAgaWYgKGNhbGxiYWNrID09IG51bGwgJiYgaXNBcnJheShjb2xsZWN0aW9uKSkge1xuICAgICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICAgIGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXG4gICAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIHZhbHVlID0gY29sbGVjdGlvbltpbmRleF07XG4gICAgICAgICAgaWYgKHZhbHVlID4gcmVzdWx0KSB7XG4gICAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrID0gKGNhbGxiYWNrID09IG51bGwgJiYgaXNTdHJpbmcoY29sbGVjdGlvbikpXG4gICAgICAgICAgPyBjaGFyQXRDYWxsYmFja1xuICAgICAgICAgIDogbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcblxuICAgICAgICBmb3JFYWNoKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikge1xuICAgICAgICAgIHZhciBjdXJyZW50ID0gY2FsbGJhY2sodmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKTtcbiAgICAgICAgICBpZiAoY3VycmVudCA+IGNvbXB1dGVkKSB7XG4gICAgICAgICAgICBjb21wdXRlZCA9IGN1cnJlbnQ7XG4gICAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIG1pbmltdW0gdmFsdWUgb2YgYSBjb2xsZWN0aW9uLiBJZiB0aGUgY29sbGVjdGlvbiBpcyBlbXB0eSBvclxuICAgICAqIGZhbHNleSBgSW5maW5pdHlgIGlzIHJldHVybmVkLiBJZiBhIGNhbGxiYWNrIGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgZXhlY3V0ZWRcbiAgICAgKiBmb3IgZWFjaCB2YWx1ZSBpbiB0aGUgY29sbGVjdGlvbiB0byBnZW5lcmF0ZSB0aGUgY3JpdGVyaW9uIGJ5IHdoaWNoIHRoZSB2YWx1ZVxuICAgICAqIGlzIHJhbmtlZC4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoIHRocmVlXG4gICAgICogYXJndW1lbnRzOyAodmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IENvbGxlY3Rpb25zXG4gICAgICogQHBhcmFtIHtBcnJheXxPYmplY3R8c3RyaW5nfSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdHxzdHJpbmd9IFtjYWxsYmFjaz1pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgaXRlcmF0aW9uLiBJZiBhIHByb3BlcnR5IG5hbWUgb3Igb2JqZWN0IGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgdXNlZFxuICAgICAqICB0byBjcmVhdGUgYSBcIl8ucGx1Y2tcIiBvciBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFjaywgcmVzcGVjdGl2ZWx5LlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtaW5pbXVtIHZhbHVlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLm1pbihbNCwgMiwgOCwgNl0pO1xuICAgICAqIC8vID0+IDJcbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzYgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogXy5taW4oY2hhcmFjdGVycywgZnVuY3Rpb24oY2hyKSB7IHJldHVybiBjaHIuYWdlOyB9KTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ2Jhcm5leScsICdhZ2UnOiAzNiB9O1xuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLnBsdWNrXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5taW4oY2hhcmFjdGVycywgJ2FnZScpO1xuICAgICAqIC8vID0+IHsgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2IH07XG4gICAgICovXG4gICAgZnVuY3Rpb24gbWluKGNvbGxlY3Rpb24sIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgY29tcHV0ZWQgPSBJbmZpbml0eSxcbiAgICAgICAgICByZXN1bHQgPSBjb21wdXRlZDtcblxuICAgICAgLy8gYWxsb3dzIHdvcmtpbmcgd2l0aCBmdW5jdGlvbnMgbGlrZSBgXy5tYXBgIHdpdGhvdXQgdXNpbmdcbiAgICAgIC8vIHRoZWlyIGBpbmRleGAgYXJndW1lbnQgYXMgYSBjYWxsYmFja1xuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayAhPSAnZnVuY3Rpb24nICYmIHRoaXNBcmcgJiYgdGhpc0FyZ1tjYWxsYmFja10gPT09IGNvbGxlY3Rpb24pIHtcbiAgICAgICAgY2FsbGJhY2sgPSBudWxsO1xuICAgICAgfVxuICAgICAgaWYgKGNhbGxiYWNrID09IG51bGwgJiYgaXNBcnJheShjb2xsZWN0aW9uKSkge1xuICAgICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICAgIGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXG4gICAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIHZhbHVlID0gY29sbGVjdGlvbltpbmRleF07XG4gICAgICAgICAgaWYgKHZhbHVlIDwgcmVzdWx0KSB7XG4gICAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrID0gKGNhbGxiYWNrID09IG51bGwgJiYgaXNTdHJpbmcoY29sbGVjdGlvbikpXG4gICAgICAgICAgPyBjaGFyQXRDYWxsYmFja1xuICAgICAgICAgIDogbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcblxuICAgICAgICBmb3JFYWNoKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikge1xuICAgICAgICAgIHZhciBjdXJyZW50ID0gY2FsbGJhY2sodmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKTtcbiAgICAgICAgICBpZiAoY3VycmVudCA8IGNvbXB1dGVkKSB7XG4gICAgICAgICAgICBjb21wdXRlZCA9IGN1cnJlbnQ7XG4gICAgICAgICAgICByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHZhbHVlIG9mIGEgc3BlY2lmaWVkIHByb3BlcnR5IGZyb20gYWxsIGVsZW1lbnRzIGluIHRoZSBjb2xsZWN0aW9uLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQHR5cGUgRnVuY3Rpb25cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbnNcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wZXJ0eSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkgdG8gcGx1Y2suXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgbmV3IGFycmF5IG9mIHByb3BlcnR5IHZhbHVlcy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGNoYXJhY3RlcnMgPSBbXG4gICAgICogICB7ICduYW1lJzogJ2Jhcm5leScsICdhZ2UnOiAzNiB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAnYWdlJzogNDAgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiBfLnBsdWNrKGNoYXJhY3RlcnMsICduYW1lJyk7XG4gICAgICogLy8gPT4gWydiYXJuZXknLCAnZnJlZCddXG4gICAgICovXG4gICAgdmFyIHBsdWNrID0gbWFwO1xuXG4gICAgLyoqXG4gICAgICogUmVkdWNlcyBhIGNvbGxlY3Rpb24gdG8gYSB2YWx1ZSB3aGljaCBpcyB0aGUgYWNjdW11bGF0ZWQgcmVzdWx0IG9mIHJ1bm5pbmdcbiAgICAgKiBlYWNoIGVsZW1lbnQgaW4gdGhlIGNvbGxlY3Rpb24gdGhyb3VnaCB0aGUgY2FsbGJhY2ssIHdoZXJlIGVhY2ggc3VjY2Vzc2l2ZVxuICAgICAqIGNhbGxiYWNrIGV4ZWN1dGlvbiBjb25zdW1lcyB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBwcmV2aW91cyBleGVjdXRpb24uIElmXG4gICAgICogYGFjY3VtdWxhdG9yYCBpcyBub3QgcHJvdmlkZWQgdGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIGNvbGxlY3Rpb24gd2lsbCBiZVxuICAgICAqIHVzZWQgYXMgdGhlIGluaXRpYWwgYGFjY3VtdWxhdG9yYCB2YWx1ZS4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYFxuICAgICAqIGFuZCBpbnZva2VkIHdpdGggZm91ciBhcmd1bWVudHM7IChhY2N1bXVsYXRvciwgdmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAYWxpYXMgZm9sZGwsIGluamVjdFxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkIHBlciBpdGVyYXRpb24uXG4gICAgICogQHBhcmFtIHsqfSBbYWNjdW11bGF0b3JdIEluaXRpYWwgdmFsdWUgb2YgdGhlIGFjY3VtdWxhdG9yLlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBhY2N1bXVsYXRlZCB2YWx1ZS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIHN1bSA9IF8ucmVkdWNlKFsxLCAyLCAzXSwgZnVuY3Rpb24oc3VtLCBudW0pIHtcbiAgICAgKiAgIHJldHVybiBzdW0gKyBudW07XG4gICAgICogfSk7XG4gICAgICogLy8gPT4gNlxuICAgICAqXG4gICAgICogdmFyIG1hcHBlZCA9IF8ucmVkdWNlKHsgJ2EnOiAxLCAnYic6IDIsICdjJzogMyB9LCBmdW5jdGlvbihyZXN1bHQsIG51bSwga2V5KSB7XG4gICAgICogICByZXN1bHRba2V5XSA9IG51bSAqIDM7XG4gICAgICogICByZXR1cm4gcmVzdWx0O1xuICAgICAqIH0sIHt9KTtcbiAgICAgKiAvLyA9PiB7ICdhJzogMywgJ2InOiA2LCAnYyc6IDkgfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlZHVjZShjb2xsZWN0aW9uLCBjYWxsYmFjaywgYWNjdW11bGF0b3IsIHRoaXNBcmcpIHtcbiAgICAgIGlmICghY29sbGVjdGlvbikgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgICAgdmFyIG5vYWNjdW0gPSBhcmd1bWVudHMubGVuZ3RoIDwgMztcbiAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCA0KTtcblxuICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgbGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7XG5cbiAgICAgIGlmICh0eXBlb2YgbGVuZ3RoID09ICdudW1iZXInKSB7XG4gICAgICAgIGlmIChub2FjY3VtKSB7XG4gICAgICAgICAgYWNjdW11bGF0b3IgPSBjb2xsZWN0aW9uWysraW5kZXhdO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgICAgYWNjdW11bGF0b3IgPSBjYWxsYmFjayhhY2N1bXVsYXRvciwgY29sbGVjdGlvbltpbmRleF0sIGluZGV4LCBjb2xsZWN0aW9uKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yT3duKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikge1xuICAgICAgICAgIGFjY3VtdWxhdG9yID0gbm9hY2N1bVxuICAgICAgICAgICAgPyAobm9hY2N1bSA9IGZhbHNlLCB2YWx1ZSlcbiAgICAgICAgICAgIDogY2FsbGJhY2soYWNjdW11bGF0b3IsIHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbilcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gYWNjdW11bGF0b3I7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5yZWR1Y2VgIGV4Y2VwdCB0aGF0IGl0IGl0ZXJhdGVzIG92ZXIgZWxlbWVudHNcbiAgICAgKiBvZiBhIGBjb2xsZWN0aW9uYCBmcm9tIHJpZ2h0IHRvIGxlZnQuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAYWxpYXMgZm9sZHJcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbnNcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtjYWxsYmFjaz1pZGVudGl0eV0gVGhlIGZ1bmN0aW9uIGNhbGxlZCBwZXIgaXRlcmF0aW9uLlxuICAgICAqIEBwYXJhbSB7Kn0gW2FjY3VtdWxhdG9yXSBJbml0aWFsIHZhbHVlIG9mIHRoZSBhY2N1bXVsYXRvci5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgYWNjdW11bGF0ZWQgdmFsdWUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBsaXN0ID0gW1swLCAxXSwgWzIsIDNdLCBbNCwgNV1dO1xuICAgICAqIHZhciBmbGF0ID0gXy5yZWR1Y2VSaWdodChsaXN0LCBmdW5jdGlvbihhLCBiKSB7IHJldHVybiBhLmNvbmNhdChiKTsgfSwgW10pO1xuICAgICAqIC8vID0+IFs0LCA1LCAyLCAzLCAwLCAxXVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlZHVjZVJpZ2h0KGNvbGxlY3Rpb24sIGNhbGxiYWNrLCBhY2N1bXVsYXRvciwgdGhpc0FyZykge1xuICAgICAgdmFyIG5vYWNjdW0gPSBhcmd1bWVudHMubGVuZ3RoIDwgMztcbiAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCA0KTtcbiAgICAgIGZvckVhY2hSaWdodChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pIHtcbiAgICAgICAgYWNjdW11bGF0b3IgPSBub2FjY3VtXG4gICAgICAgICAgPyAobm9hY2N1bSA9IGZhbHNlLCB2YWx1ZSlcbiAgICAgICAgICA6IGNhbGxiYWNrKGFjY3VtdWxhdG9yLCB2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gYWNjdW11bGF0b3I7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhlIG9wcG9zaXRlIG9mIGBfLmZpbHRlcmAgdGhpcyBtZXRob2QgcmV0dXJucyB0aGUgZWxlbWVudHMgb2YgYVxuICAgICAqIGNvbGxlY3Rpb24gdGhhdCB0aGUgY2FsbGJhY2sgZG9lcyAqKm5vdCoqIHJldHVybiB0cnVleSBmb3IuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYSBuZXcgYXJyYXkgb2YgZWxlbWVudHMgdGhhdCBmYWlsZWQgdGhlIGNhbGxiYWNrIGNoZWNrLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgb2RkcyA9IF8ucmVqZWN0KFsxLCAyLCAzLCA0LCA1LCA2XSwgZnVuY3Rpb24obnVtKSB7IHJldHVybiBudW0gJSAyID09IDA7IH0pO1xuICAgICAqIC8vID0+IFsxLCAzLCA1XVxuICAgICAqXG4gICAgICogdmFyIGNoYXJhY3RlcnMgPSBbXG4gICAgICogICB7ICduYW1lJzogJ2Jhcm5leScsICdhZ2UnOiAzNiwgJ2Jsb2NrZWQnOiBmYWxzZSB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAnYWdlJzogNDAsICdibG9ja2VkJzogdHJ1ZSB9XG4gICAgICogXTtcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy5wbHVja1wiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8ucmVqZWN0KGNoYXJhY3RlcnMsICdibG9ja2VkJyk7XG4gICAgICogLy8gPT4gW3sgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2LCAnYmxvY2tlZCc6IGZhbHNlIH1dXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ud2hlcmVcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLnJlamVjdChjaGFyYWN0ZXJzLCB7ICdhZ2UnOiAzNiB9KTtcbiAgICAgKiAvLyA9PiBbeyAnbmFtZSc6ICdmcmVkJywgJ2FnZSc6IDQwLCAnYmxvY2tlZCc6IHRydWUgfV1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiByZWplY3QoY29sbGVjdGlvbiwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgIHJldHVybiBmaWx0ZXIoY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKSB7XG4gICAgICAgIHJldHVybiAhY2FsbGJhY2sodmFsdWUsIGluZGV4LCBjb2xsZWN0aW9uKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIHJhbmRvbSBlbGVtZW50IG9yIGBuYCByYW5kb20gZWxlbWVudHMgZnJvbSBhIGNvbGxlY3Rpb24uXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbnNcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gc2FtcGxlLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbbl0gVGhlIG51bWJlciBvZiBlbGVtZW50cyB0byBzYW1wbGUuXG4gICAgICogQHBhcmFtLSB7T2JqZWN0fSBbZ3VhcmRdIEFsbG93cyB3b3JraW5nIHdpdGggZnVuY3Rpb25zIGxpa2UgYF8ubWFwYFxuICAgICAqICB3aXRob3V0IHVzaW5nIHRoZWlyIGBpbmRleGAgYXJndW1lbnRzIGFzIGBuYC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHJhbmRvbSBzYW1wbGUocykgb2YgYGNvbGxlY3Rpb25gLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLnNhbXBsZShbMSwgMiwgMywgNF0pO1xuICAgICAqIC8vID0+IDJcbiAgICAgKlxuICAgICAqIF8uc2FtcGxlKFsxLCAyLCAzLCA0XSwgMik7XG4gICAgICogLy8gPT4gWzMsIDFdXG4gICAgICovXG4gICAgZnVuY3Rpb24gc2FtcGxlKGNvbGxlY3Rpb24sIG4sIGd1YXJkKSB7XG4gICAgICBpZiAoY29sbGVjdGlvbiAmJiB0eXBlb2YgY29sbGVjdGlvbi5sZW5ndGggIT0gJ251bWJlcicpIHtcbiAgICAgICAgY29sbGVjdGlvbiA9IHZhbHVlcyhjb2xsZWN0aW9uKTtcbiAgICAgIH1cbiAgICAgIGlmIChuID09IG51bGwgfHwgZ3VhcmQpIHtcbiAgICAgICAgcmV0dXJuIGNvbGxlY3Rpb24gPyBjb2xsZWN0aW9uW2Jhc2VSYW5kb20oMCwgY29sbGVjdGlvbi5sZW5ndGggLSAxKV0gOiB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgICB2YXIgcmVzdWx0ID0gc2h1ZmZsZShjb2xsZWN0aW9uKTtcbiAgICAgIHJlc3VsdC5sZW5ndGggPSBuYXRpdmVNaW4obmF0aXZlTWF4KDAsIG4pLCByZXN1bHQubGVuZ3RoKTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBhcnJheSBvZiBzaHVmZmxlZCB2YWx1ZXMsIHVzaW5nIGEgdmVyc2lvbiBvZiB0aGUgRmlzaGVyLVlhdGVzXG4gICAgICogc2h1ZmZsZS4gU2VlIGh0dHA6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvRmlzaGVyLVlhdGVzX3NodWZmbGUuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbnNcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gc2h1ZmZsZS5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYSBuZXcgc2h1ZmZsZWQgY29sbGVjdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5zaHVmZmxlKFsxLCAyLCAzLCA0LCA1LCA2XSk7XG4gICAgICogLy8gPT4gWzQsIDEsIDYsIDMsIDUsIDJdXG4gICAgICovXG4gICAgZnVuY3Rpb24gc2h1ZmZsZShjb2xsZWN0aW9uKSB7XG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICBsZW5ndGggPSBjb2xsZWN0aW9uID8gY29sbGVjdGlvbi5sZW5ndGggOiAwLFxuICAgICAgICAgIHJlc3VsdCA9IEFycmF5KHR5cGVvZiBsZW5ndGggPT0gJ251bWJlcicgPyBsZW5ndGggOiAwKTtcblxuICAgICAgZm9yRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICB2YXIgcmFuZCA9IGJhc2VSYW5kb20oMCwgKytpbmRleCk7XG4gICAgICAgIHJlc3VsdFtpbmRleF0gPSByZXN1bHRbcmFuZF07XG4gICAgICAgIHJlc3VsdFtyYW5kXSA9IHZhbHVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHNpemUgb2YgdGhlIGBjb2xsZWN0aW9uYCBieSByZXR1cm5pbmcgYGNvbGxlY3Rpb24ubGVuZ3RoYCBmb3IgYXJyYXlzXG4gICAgICogYW5kIGFycmF5LWxpa2Ugb2JqZWN0cyBvciB0aGUgbnVtYmVyIG9mIG93biBlbnVtZXJhYmxlIHByb3BlcnRpZXMgZm9yIG9iamVjdHMuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbnNcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaW5zcGVjdC5cbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIGBjb2xsZWN0aW9uLmxlbmd0aGAgb3IgbnVtYmVyIG9mIG93biBlbnVtZXJhYmxlIHByb3BlcnRpZXMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uc2l6ZShbMSwgMl0pO1xuICAgICAqIC8vID0+IDJcbiAgICAgKlxuICAgICAqIF8uc2l6ZSh7ICdvbmUnOiAxLCAndHdvJzogMiwgJ3RocmVlJzogMyB9KTtcbiAgICAgKiAvLyA9PiAzXG4gICAgICpcbiAgICAgKiBfLnNpemUoJ3BlYmJsZXMnKTtcbiAgICAgKiAvLyA9PiA3XG4gICAgICovXG4gICAgZnVuY3Rpb24gc2l6ZShjb2xsZWN0aW9uKSB7XG4gICAgICB2YXIgbGVuZ3RoID0gY29sbGVjdGlvbiA/IGNvbGxlY3Rpb24ubGVuZ3RoIDogMDtcbiAgICAgIHJldHVybiB0eXBlb2YgbGVuZ3RoID09ICdudW1iZXInID8gbGVuZ3RoIDoga2V5cyhjb2xsZWN0aW9uKS5sZW5ndGg7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIGlmIHRoZSBjYWxsYmFjayByZXR1cm5zIGEgdHJ1ZXkgdmFsdWUgZm9yICoqYW55KiogZWxlbWVudCBvZiBhXG4gICAgICogY29sbGVjdGlvbi4gVGhlIGZ1bmN0aW9uIHJldHVybnMgYXMgc29vbiBhcyBpdCBmaW5kcyBhIHBhc3NpbmcgdmFsdWUgYW5kXG4gICAgICogZG9lcyBub3QgaXRlcmF0ZSBvdmVyIHRoZSBlbnRpcmUgY29sbGVjdGlvbi4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvXG4gICAgICogYHRoaXNBcmdgIGFuZCBpbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzOyAodmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBhbGlhcyBhbnlcbiAgICAgKiBAY2F0ZWdvcnkgQ29sbGVjdGlvbnNcbiAgICAgKiBAcGFyYW0ge0FycmF5fE9iamVjdHxzdHJpbmd9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fHN0cmluZ30gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkXG4gICAgICogIHBlciBpdGVyYXRpb24uIElmIGEgcHJvcGVydHkgbmFtZSBvciBvYmplY3QgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSB1c2VkXG4gICAgICogIHRvIGNyZWF0ZSBhIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrLCByZXNwZWN0aXZlbHkuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFueSBlbGVtZW50IHBhc3NlZCB0aGUgY2FsbGJhY2sgY2hlY2ssXG4gICAgICogIGVsc2UgYGZhbHNlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5zb21lKFtudWxsLCAwLCAneWVzJywgZmFsc2VdLCBCb29sZWFuKTtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IFtcbiAgICAgKiAgIHsgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2LCAnYmxvY2tlZCc6IGZhbHNlIH0sXG4gICAgICogICB7ICduYW1lJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCwgJ2Jsb2NrZWQnOiB0cnVlIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLnBsdWNrXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5zb21lKGNoYXJhY3RlcnMsICdibG9ja2VkJyk7XG4gICAgICogLy8gPT4gdHJ1ZVxuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLndoZXJlXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5zb21lKGNoYXJhY3RlcnMsIHsgJ2FnZSc6IDEgfSk7XG4gICAgICogLy8gPT4gZmFsc2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBzb21lKGNvbGxlY3Rpb24sIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgcmVzdWx0O1xuICAgICAgY2FsbGJhY2sgPSBsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDMpO1xuXG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICBsZW5ndGggPSBjb2xsZWN0aW9uID8gY29sbGVjdGlvbi5sZW5ndGggOiAwO1xuXG4gICAgICBpZiAodHlwZW9mIGxlbmd0aCA9PSAnbnVtYmVyJykge1xuICAgICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICAgIGlmICgocmVzdWx0ID0gY2FsbGJhY2soY29sbGVjdGlvbltpbmRleF0sIGluZGV4LCBjb2xsZWN0aW9uKSkpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yT3duKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikge1xuICAgICAgICAgIHJldHVybiAhKHJlc3VsdCA9IGNhbGxiYWNrKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbikpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAhIXJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGFycmF5IG9mIGVsZW1lbnRzLCBzb3J0ZWQgaW4gYXNjZW5kaW5nIG9yZGVyIGJ5IHRoZSByZXN1bHRzIG9mXG4gICAgICogcnVubmluZyBlYWNoIGVsZW1lbnQgaW4gYSBjb2xsZWN0aW9uIHRocm91Z2ggdGhlIGNhbGxiYWNrLiBUaGlzIG1ldGhvZFxuICAgICAqIHBlcmZvcm1zIGEgc3RhYmxlIHNvcnQsIHRoYXQgaXMsIGl0IHdpbGwgcHJlc2VydmUgdGhlIG9yaWdpbmFsIHNvcnQgb3JkZXJcbiAgICAgKiBvZiBlcXVhbCBlbGVtZW50cy4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoXG4gICAgICogdGhyZWUgYXJndW1lbnRzOyAodmFsdWUsIGluZGV4fGtleSwgY29sbGVjdGlvbikuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY29sbGVjdGlvblxuICAgICAqIHdpbGwgYmUgc29ydGVkIGJ5IGVhY2ggcHJvcGVydHkgdmFsdWUuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtBcnJheXxGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYSBuZXcgYXJyYXkgb2Ygc29ydGVkIGVsZW1lbnRzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLnNvcnRCeShbMSwgMiwgM10sIGZ1bmN0aW9uKG51bSkgeyByZXR1cm4gTWF0aC5zaW4obnVtKTsgfSk7XG4gICAgICogLy8gPT4gWzMsIDEsIDJdXG4gICAgICpcbiAgICAgKiBfLnNvcnRCeShbMSwgMiwgM10sIGZ1bmN0aW9uKG51bSkgeyByZXR1cm4gdGhpcy5zaW4obnVtKTsgfSwgTWF0aCk7XG4gICAgICogLy8gPT4gWzMsIDEsIDJdXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IFtcbiAgICAgKiAgIHsgJ25hbWUnOiAnYmFybmV5JywgICdhZ2UnOiAzNiB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAgJ2FnZSc6IDQwIH0sXG4gICAgICogICB7ICduYW1lJzogJ2Jhcm5leScsICAnYWdlJzogMjYgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgICdhZ2UnOiAzMCB9XG4gICAgICogXTtcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy5wbHVja1wiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8ubWFwKF8uc29ydEJ5KGNoYXJhY3RlcnMsICdhZ2UnKSwgXy52YWx1ZXMpO1xuICAgICAqIC8vID0+IFtbJ2Jhcm5leScsIDI2XSwgWydmcmVkJywgMzBdLCBbJ2Jhcm5leScsIDM2XSwgWydmcmVkJywgNDBdXVxuICAgICAqXG4gICAgICogLy8gc29ydGluZyBieSBtdWx0aXBsZSBwcm9wZXJ0aWVzXG4gICAgICogXy5tYXAoXy5zb3J0QnkoY2hhcmFjdGVycywgWyduYW1lJywgJ2FnZSddKSwgXy52YWx1ZXMpO1xuICAgICAqIC8vID0gPiBbWydiYXJuZXknLCAyNl0sIFsnYmFybmV5JywgMzZdLCBbJ2ZyZWQnLCAzMF0sIFsnZnJlZCcsIDQwXV1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBzb3J0QnkoY29sbGVjdGlvbiwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgIGlzQXJyID0gaXNBcnJheShjYWxsYmFjayksXG4gICAgICAgICAgbGVuZ3RoID0gY29sbGVjdGlvbiA/IGNvbGxlY3Rpb24ubGVuZ3RoIDogMCxcbiAgICAgICAgICByZXN1bHQgPSBBcnJheSh0eXBlb2YgbGVuZ3RoID09ICdudW1iZXInID8gbGVuZ3RoIDogMCk7XG5cbiAgICAgIGlmICghaXNBcnIpIHtcbiAgICAgICAgY2FsbGJhY2sgPSBsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDMpO1xuICAgICAgfVxuICAgICAgZm9yRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwga2V5LCBjb2xsZWN0aW9uKSB7XG4gICAgICAgIHZhciBvYmplY3QgPSByZXN1bHRbKytpbmRleF0gPSBnZXRPYmplY3QoKTtcbiAgICAgICAgaWYgKGlzQXJyKSB7XG4gICAgICAgICAgb2JqZWN0LmNyaXRlcmlhID0gbWFwKGNhbGxiYWNrLCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIChvYmplY3QuY3JpdGVyaWEgPSBnZXRBcnJheSgpKVswXSA9IGNhbGxiYWNrKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24pO1xuICAgICAgICB9XG4gICAgICAgIG9iamVjdC5pbmRleCA9IGluZGV4O1xuICAgICAgICBvYmplY3QudmFsdWUgPSB2YWx1ZTtcbiAgICAgIH0pO1xuXG4gICAgICBsZW5ndGggPSByZXN1bHQubGVuZ3RoO1xuICAgICAgcmVzdWx0LnNvcnQoY29tcGFyZUFzY2VuZGluZyk7XG4gICAgICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICAgICAgdmFyIG9iamVjdCA9IHJlc3VsdFtsZW5ndGhdO1xuICAgICAgICByZXN1bHRbbGVuZ3RoXSA9IG9iamVjdC52YWx1ZTtcbiAgICAgICAgaWYgKCFpc0Fycikge1xuICAgICAgICAgIHJlbGVhc2VBcnJheShvYmplY3QuY3JpdGVyaWEpO1xuICAgICAgICB9XG4gICAgICAgIHJlbGVhc2VPYmplY3Qob2JqZWN0KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29udmVydHMgdGhlIGBjb2xsZWN0aW9uYCB0byBhbiBhcnJheS5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBjb252ZXJ0LlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbmV3IGNvbnZlcnRlZCBhcnJheS5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogKGZ1bmN0aW9uKCkgeyByZXR1cm4gXy50b0FycmF5KGFyZ3VtZW50cykuc2xpY2UoMSk7IH0pKDEsIDIsIDMsIDQpO1xuICAgICAqIC8vID0+IFsyLCAzLCA0XVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHRvQXJyYXkoY29sbGVjdGlvbikge1xuICAgICAgaWYgKGNvbGxlY3Rpb24gJiYgdHlwZW9mIGNvbGxlY3Rpb24ubGVuZ3RoID09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiBzbGljZShjb2xsZWN0aW9uKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB2YWx1ZXMoY29sbGVjdGlvbik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUGVyZm9ybXMgYSBkZWVwIGNvbXBhcmlzb24gb2YgZWFjaCBlbGVtZW50IGluIGEgYGNvbGxlY3Rpb25gIHRvIHRoZSBnaXZlblxuICAgICAqIGBwcm9wZXJ0aWVzYCBvYmplY3QsIHJldHVybmluZyBhbiBhcnJheSBvZiBhbGwgZWxlbWVudHMgdGhhdCBoYXZlIGVxdWl2YWxlbnRcbiAgICAgKiBwcm9wZXJ0eSB2YWx1ZXMuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAdHlwZSBGdW5jdGlvblxuICAgICAqIEBjYXRlZ29yeSBDb2xsZWN0aW9uc1xuICAgICAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fHN0cmluZ30gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHByb3BzIFRoZSBvYmplY3Qgb2YgcHJvcGVydHkgdmFsdWVzIHRvIGZpbHRlciBieS5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYSBuZXcgYXJyYXkgb2YgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBnaXZlbiBwcm9wZXJ0aWVzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IFtcbiAgICAgKiAgIHsgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2LCAncGV0cyc6IFsnaG9wcHknXSB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAnYWdlJzogNDAsICdwZXRzJzogWydiYWJ5IHB1c3MnLCAnZGlubyddIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogXy53aGVyZShjaGFyYWN0ZXJzLCB7ICdhZ2UnOiAzNiB9KTtcbiAgICAgKiAvLyA9PiBbeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzYsICdwZXRzJzogWydob3BweSddIH1dXG4gICAgICpcbiAgICAgKiBfLndoZXJlKGNoYXJhY3RlcnMsIHsgJ3BldHMnOiBbJ2Rpbm8nXSB9KTtcbiAgICAgKiAvLyA9PiBbeyAnbmFtZSc6ICdmcmVkJywgJ2FnZSc6IDQwLCAncGV0cyc6IFsnYmFieSBwdXNzJywgJ2Rpbm8nXSB9XVxuICAgICAqL1xuICAgIHZhciB3aGVyZSA9IGZpbHRlcjtcblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBhcnJheSB3aXRoIGFsbCBmYWxzZXkgdmFsdWVzIHJlbW92ZWQuIFRoZSB2YWx1ZXMgYGZhbHNlYCwgYG51bGxgLFxuICAgICAqIGAwYCwgYFwiXCJgLCBgdW5kZWZpbmVkYCwgYW5kIGBOYU5gIGFyZSBhbGwgZmFsc2V5LlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBjb21wYWN0LlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhIG5ldyBhcnJheSBvZiBmaWx0ZXJlZCB2YWx1ZXMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uY29tcGFjdChbMCwgMSwgZmFsc2UsIDIsICcnLCAzXSk7XG4gICAgICogLy8gPT4gWzEsIDIsIDNdXG4gICAgICovXG4gICAgZnVuY3Rpb24gY29tcGFjdChhcnJheSkge1xuICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgbGVuZ3RoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwLFxuICAgICAgICAgIHJlc3VsdCA9IFtdO1xuXG4gICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF07XG4gICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgIHJlc3VsdC5wdXNoKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGFycmF5IGV4Y2x1ZGluZyBhbGwgdmFsdWVzIG9mIHRoZSBwcm92aWRlZCBhcnJheXMgdXNpbmcgc3RyaWN0XG4gICAgICogZXF1YWxpdHkgZm9yIGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBwcm9jZXNzLlxuICAgICAqIEBwYXJhbSB7Li4uQXJyYXl9IFt2YWx1ZXNdIFRoZSBhcnJheXMgb2YgdmFsdWVzIHRvIGV4Y2x1ZGUuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgbmV3IGFycmF5IG9mIGZpbHRlcmVkIHZhbHVlcy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5kaWZmZXJlbmNlKFsxLCAyLCAzLCA0LCA1XSwgWzUsIDIsIDEwXSk7XG4gICAgICogLy8gPT4gWzEsIDMsIDRdXG4gICAgICovXG4gICAgZnVuY3Rpb24gZGlmZmVyZW5jZShhcnJheSkge1xuICAgICAgcmV0dXJuIGJhc2VEaWZmZXJlbmNlKGFycmF5LCBiYXNlRmxhdHRlbihhcmd1bWVudHMsIHRydWUsIHRydWUsIDEpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmZpbmRgIGV4Y2VwdCB0aGF0IGl0IHJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBmaXJzdFxuICAgICAqIGVsZW1lbnQgdGhhdCBwYXNzZXMgdGhlIGNhbGxiYWNrIGNoZWNrLCBpbnN0ZWFkIG9mIHRoZSBlbGVtZW50IGl0c2VsZi5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBzZWFyY2guXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgZm91bmQgZWxlbWVudCwgZWxzZSBgLTFgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IFtcbiAgICAgKiAgIHsgJ25hbWUnOiAnYmFybmV5JywgICdhZ2UnOiAzNiwgJ2Jsb2NrZWQnOiBmYWxzZSB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAgJ2FnZSc6IDQwLCAnYmxvY2tlZCc6IHRydWUgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAncGViYmxlcycsICdhZ2UnOiAxLCAgJ2Jsb2NrZWQnOiBmYWxzZSB9XG4gICAgICogXTtcbiAgICAgKlxuICAgICAqIF8uZmluZEluZGV4KGNoYXJhY3RlcnMsIGZ1bmN0aW9uKGNocikge1xuICAgICAqICAgcmV0dXJuIGNoci5hZ2UgPCAyMDtcbiAgICAgKiB9KTtcbiAgICAgKiAvLyA9PiAyXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ud2hlcmVcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmZpbmRJbmRleChjaGFyYWN0ZXJzLCB7ICdhZ2UnOiAzNiB9KTtcbiAgICAgKiAvLyA9PiAwXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmZpbmRJbmRleChjaGFyYWN0ZXJzLCAnYmxvY2tlZCcpO1xuICAgICAqIC8vID0+IDFcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmaW5kSW5kZXgoYXJyYXksIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICBsZW5ndGggPSBhcnJheSA/IGFycmF5Lmxlbmd0aCA6IDA7XG5cbiAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIGlmIChjYWxsYmFjayhhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkpIHtcbiAgICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiAtMTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmZpbmRJbmRleGAgZXhjZXB0IHRoYXQgaXQgaXRlcmF0ZXMgb3ZlciBlbGVtZW50c1xuICAgICAqIG9mIGEgYGNvbGxlY3Rpb25gIGZyb20gcmlnaHQgdG8gbGVmdC5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBzZWFyY2guXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgZm91bmQgZWxlbWVudCwgZWxzZSBgLTFgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IFtcbiAgICAgKiAgIHsgJ25hbWUnOiAnYmFybmV5JywgICdhZ2UnOiAzNiwgJ2Jsb2NrZWQnOiB0cnVlIH0sXG4gICAgICogICB7ICduYW1lJzogJ2ZyZWQnLCAgICAnYWdlJzogNDAsICdibG9ja2VkJzogZmFsc2UgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAncGViYmxlcycsICdhZ2UnOiAxLCAgJ2Jsb2NrZWQnOiB0cnVlIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogXy5maW5kTGFzdEluZGV4KGNoYXJhY3RlcnMsIGZ1bmN0aW9uKGNocikge1xuICAgICAqICAgcmV0dXJuIGNoci5hZ2UgPiAzMDtcbiAgICAgKiB9KTtcbiAgICAgKiAvLyA9PiAxXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ud2hlcmVcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmZpbmRMYXN0SW5kZXgoY2hhcmFjdGVycywgeyAnYWdlJzogMzYgfSk7XG4gICAgICogLy8gPT4gMFxuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLnBsdWNrXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5maW5kTGFzdEluZGV4KGNoYXJhY3RlcnMsICdibG9ja2VkJyk7XG4gICAgICogLy8gPT4gMlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGZpbmRMYXN0SW5kZXgoYXJyYXksIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwO1xuICAgICAgY2FsbGJhY2sgPSBsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDMpO1xuICAgICAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgICAgIGlmIChjYWxsYmFjayhhcnJheVtsZW5ndGhdLCBsZW5ndGgsIGFycmF5KSkge1xuICAgICAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiAtMTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBmaXJzdCBlbGVtZW50IG9yIGZpcnN0IGBuYCBlbGVtZW50cyBvZiBhbiBhcnJheS4gSWYgYSBjYWxsYmFja1xuICAgICAqIGlzIHByb3ZpZGVkIGVsZW1lbnRzIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGFycmF5IGFyZSByZXR1cm5lZCBhcyBsb25nXG4gICAgICogYXMgdGhlIGNhbGxiYWNrIHJldHVybnMgdHJ1ZXkuIFRoZSBjYWxsYmFjayBpcyBib3VuZCB0byBgdGhpc0FyZ2AgYW5kXG4gICAgICogaW52b2tlZCB3aXRoIHRocmVlIGFyZ3VtZW50czsgKHZhbHVlLCBpbmRleCwgYXJyYXkpLlxuICAgICAqXG4gICAgICogSWYgYSBwcm9wZXJ0eSBuYW1lIGlzIHByb3ZpZGVkIGZvciBgY2FsbGJhY2tgIHRoZSBjcmVhdGVkIFwiXy5wbHVja1wiIHN0eWxlXG4gICAgICogY2FsbGJhY2sgd2lsbCByZXR1cm4gdGhlIHByb3BlcnR5IHZhbHVlIG9mIHRoZSBnaXZlbiBlbGVtZW50LlxuICAgICAqXG4gICAgICogSWYgYW4gb2JqZWN0IGlzIHByb3ZpZGVkIGZvciBgY2FsbGJhY2tgIHRoZSBjcmVhdGVkIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrXG4gICAgICogd2lsbCByZXR1cm4gYHRydWVgIGZvciBlbGVtZW50cyB0aGF0IGhhdmUgdGhlIHByb3BlcnRpZXMgb2YgdGhlIGdpdmVuIG9iamVjdCxcbiAgICAgKiBlbHNlIGBmYWxzZWAuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAYWxpYXMgaGVhZCwgdGFrZVxuICAgICAqIEBjYXRlZ29yeSBBcnJheXNcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gcXVlcnkuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8bnVtYmVyfHN0cmluZ30gW2NhbGxiYWNrXSBUaGUgZnVuY3Rpb24gY2FsbGVkXG4gICAgICogIHBlciBlbGVtZW50IG9yIHRoZSBudW1iZXIgb2YgZWxlbWVudHMgdG8gcmV0dXJuLiBJZiBhIHByb3BlcnR5IG5hbWUgb3JcbiAgICAgKiAgb2JqZWN0IGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgdXNlZCB0byBjcmVhdGUgYSBcIl8ucGx1Y2tcIiBvciBcIl8ud2hlcmVcIlxuICAgICAqICBzdHlsZSBjYWxsYmFjaywgcmVzcGVjdGl2ZWx5LlxuICAgICAqIEBwYXJhbSB7Kn0gW3RoaXNBcmddIFRoZSBgdGhpc2AgYmluZGluZyBvZiBgY2FsbGJhY2tgLlxuICAgICAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBmaXJzdCBlbGVtZW50KHMpIG9mIGBhcnJheWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uZmlyc3QoWzEsIDIsIDNdKTtcbiAgICAgKiAvLyA9PiAxXG4gICAgICpcbiAgICAgKiBfLmZpcnN0KFsxLCAyLCAzXSwgMik7XG4gICAgICogLy8gPT4gWzEsIDJdXG4gICAgICpcbiAgICAgKiBfLmZpcnN0KFsxLCAyLCAzXSwgZnVuY3Rpb24obnVtKSB7XG4gICAgICogICByZXR1cm4gbnVtIDwgMztcbiAgICAgKiB9KTtcbiAgICAgKiAvLyA9PiBbMSwgMl1cbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAgJ2Jsb2NrZWQnOiB0cnVlLCAgJ2VtcGxveWVyJzogJ3NsYXRlJyB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAgJ2Jsb2NrZWQnOiBmYWxzZSwgJ2VtcGxveWVyJzogJ3NsYXRlJyB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdwZWJibGVzJywgJ2Jsb2NrZWQnOiB0cnVlLCAgJ2VtcGxveWVyJzogJ25hJyB9XG4gICAgICogXTtcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy5wbHVja1wiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8uZmlyc3QoY2hhcmFjdGVycywgJ2Jsb2NrZWQnKTtcbiAgICAgKiAvLyA9PiBbeyAnbmFtZSc6ICdiYXJuZXknLCAnYmxvY2tlZCc6IHRydWUsICdlbXBsb3llcic6ICdzbGF0ZScgfV1cbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy53aGVyZVwiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8ucGx1Y2soXy5maXJzdChjaGFyYWN0ZXJzLCB7ICdlbXBsb3llcic6ICdzbGF0ZScgfSksICduYW1lJyk7XG4gICAgICogLy8gPT4gWydiYXJuZXknLCAnZnJlZCddXG4gICAgICovXG4gICAgZnVuY3Rpb24gZmlyc3QoYXJyYXksIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgbiA9IDAsXG4gICAgICAgICAgbGVuZ3RoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwO1xuXG4gICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9ICdudW1iZXInICYmIGNhbGxiYWNrICE9IG51bGwpIHtcbiAgICAgICAgdmFyIGluZGV4ID0gLTE7XG4gICAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGggJiYgY2FsbGJhY2soYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICAgICAgbisrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuID0gY2FsbGJhY2s7XG4gICAgICAgIGlmIChuID09IG51bGwgfHwgdGhpc0FyZykge1xuICAgICAgICAgIHJldHVybiBhcnJheSA/IGFycmF5WzBdIDogdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gc2xpY2UoYXJyYXksIDAsIG5hdGl2ZU1pbihuYXRpdmVNYXgoMCwgbiksIGxlbmd0aCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZsYXR0ZW5zIGEgbmVzdGVkIGFycmF5ICh0aGUgbmVzdGluZyBjYW4gYmUgdG8gYW55IGRlcHRoKS4gSWYgYGlzU2hhbGxvd2BcbiAgICAgKiBpcyB0cnVleSwgdGhlIGFycmF5IHdpbGwgb25seSBiZSBmbGF0dGVuZWQgYSBzaW5nbGUgbGV2ZWwuIElmIGEgY2FsbGJhY2tcbiAgICAgKiBpcyBwcm92aWRlZCBlYWNoIGVsZW1lbnQgb2YgdGhlIGFycmF5IGlzIHBhc3NlZCB0aHJvdWdoIHRoZSBjYWxsYmFjayBiZWZvcmVcbiAgICAgKiBmbGF0dGVuaW5nLiBUaGUgY2FsbGJhY2sgaXMgYm91bmQgdG8gYHRoaXNBcmdgIGFuZCBpbnZva2VkIHdpdGggdGhyZWVcbiAgICAgKiBhcmd1bWVudHM7ICh2YWx1ZSwgaW5kZXgsIGFycmF5KS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBmbGF0dGVuLlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzU2hhbGxvdz1mYWxzZV0gQSBmbGFnIHRvIHJlc3RyaWN0IGZsYXR0ZW5pbmcgdG8gYSBzaW5nbGUgbGV2ZWwuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R8c3RyaW5nfSBbY2FsbGJhY2s9aWRlbnRpdHldIFRoZSBmdW5jdGlvbiBjYWxsZWRcbiAgICAgKiAgcGVyIGl0ZXJhdGlvbi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWRcbiAgICAgKiAgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYSBuZXcgZmxhdHRlbmVkIGFycmF5LlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmZsYXR0ZW4oWzEsIFsyXSwgWzMsIFtbNF1dXV0pO1xuICAgICAqIC8vID0+IFsxLCAyLCAzLCA0XTtcbiAgICAgKlxuICAgICAqIF8uZmxhdHRlbihbMSwgWzJdLCBbMywgW1s0XV1dXSwgdHJ1ZSk7XG4gICAgICogLy8gPT4gWzEsIDIsIDMsIFtbNF1dXTtcbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzAsICdwZXRzJzogWydob3BweSddIH0sXG4gICAgICogICB7ICduYW1lJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCwgJ3BldHMnOiBbJ2JhYnkgcHVzcycsICdkaW5vJ10gfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmZsYXR0ZW4oY2hhcmFjdGVycywgJ3BldHMnKTtcbiAgICAgKiAvLyA9PiBbJ2hvcHB5JywgJ2JhYnkgcHVzcycsICdkaW5vJ11cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBmbGF0dGVuKGFycmF5LCBpc1NoYWxsb3csIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICAvLyBqdWdnbGUgYXJndW1lbnRzXG4gICAgICBpZiAodHlwZW9mIGlzU2hhbGxvdyAhPSAnYm9vbGVhbicgJiYgaXNTaGFsbG93ICE9IG51bGwpIHtcbiAgICAgICAgdGhpc0FyZyA9IGNhbGxiYWNrO1xuICAgICAgICBjYWxsYmFjayA9ICh0eXBlb2YgaXNTaGFsbG93ICE9ICdmdW5jdGlvbicgJiYgdGhpc0FyZyAmJiB0aGlzQXJnW2lzU2hhbGxvd10gPT09IGFycmF5KSA/IG51bGwgOiBpc1NoYWxsb3c7XG4gICAgICAgIGlzU2hhbGxvdyA9IGZhbHNlO1xuICAgICAgfVxuICAgICAgaWYgKGNhbGxiYWNrICE9IG51bGwpIHtcbiAgICAgICAgYXJyYXkgPSBtYXAoYXJyYXksIGNhbGxiYWNrLCB0aGlzQXJnKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBiYXNlRmxhdHRlbihhcnJheSwgaXNTaGFsbG93KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBpbmRleCBhdCB3aGljaCB0aGUgZmlyc3Qgb2NjdXJyZW5jZSBvZiBgdmFsdWVgIGlzIGZvdW5kIHVzaW5nXG4gICAgICogc3RyaWN0IGVxdWFsaXR5IGZvciBjb21wYXJpc29ucywgaS5lLiBgPT09YC4gSWYgdGhlIGFycmF5IGlzIGFscmVhZHkgc29ydGVkXG4gICAgICogcHJvdmlkaW5nIGB0cnVlYCBmb3IgYGZyb21JbmRleGAgd2lsbCBydW4gYSBmYXN0ZXIgYmluYXJ5IHNlYXJjaC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBBcnJheXNcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gc2VhcmNoLlxuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNlYXJjaCBmb3IuXG4gICAgICogQHBhcmFtIHtib29sZWFufG51bWJlcn0gW2Zyb21JbmRleD0wXSBUaGUgaW5kZXggdG8gc2VhcmNoIGZyb20gb3IgYHRydWVgXG4gICAgICogIHRvIHBlcmZvcm0gYSBiaW5hcnkgc2VhcmNoIG9uIGEgc29ydGVkIGFycmF5LlxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlIG9yIGAtMWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uaW5kZXhPZihbMSwgMiwgMywgMSwgMiwgM10sIDIpO1xuICAgICAqIC8vID0+IDFcbiAgICAgKlxuICAgICAqIF8uaW5kZXhPZihbMSwgMiwgMywgMSwgMiwgM10sIDIsIDMpO1xuICAgICAqIC8vID0+IDRcbiAgICAgKlxuICAgICAqIF8uaW5kZXhPZihbMSwgMSwgMiwgMiwgMywgM10sIDIsIHRydWUpO1xuICAgICAqIC8vID0+IDJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KSB7XG4gICAgICBpZiAodHlwZW9mIGZyb21JbmRleCA9PSAnbnVtYmVyJykge1xuICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwO1xuICAgICAgICBmcm9tSW5kZXggPSAoZnJvbUluZGV4IDwgMCA/IG5hdGl2ZU1heCgwLCBsZW5ndGggKyBmcm9tSW5kZXgpIDogZnJvbUluZGV4IHx8IDApO1xuICAgICAgfSBlbHNlIGlmIChmcm9tSW5kZXgpIHtcbiAgICAgICAgdmFyIGluZGV4ID0gc29ydGVkSW5kZXgoYXJyYXksIHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIGFycmF5W2luZGV4XSA9PT0gdmFsdWUgPyBpbmRleCA6IC0xO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGJhc2VJbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIGFsbCBidXQgdGhlIGxhc3QgZWxlbWVudCBvciBsYXN0IGBuYCBlbGVtZW50cyBvZiBhbiBhcnJheS4gSWYgYVxuICAgICAqIGNhbGxiYWNrIGlzIHByb3ZpZGVkIGVsZW1lbnRzIGF0IHRoZSBlbmQgb2YgdGhlIGFycmF5IGFyZSBleGNsdWRlZCBmcm9tXG4gICAgICogdGhlIHJlc3VsdCBhcyBsb25nIGFzIHRoZSBjYWxsYmFjayByZXR1cm5zIHRydWV5LiBUaGUgY2FsbGJhY2sgaXMgYm91bmRcbiAgICAgKiB0byBgdGhpc0FyZ2AgYW5kIGludm9rZWQgd2l0aCB0aHJlZSBhcmd1bWVudHM7ICh2YWx1ZSwgaW5kZXgsIGFycmF5KS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBxdWVyeS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdHxudW1iZXJ8c3RyaW5nfSBbY2FsbGJhY2s9MV0gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgZWxlbWVudCBvciB0aGUgbnVtYmVyIG9mIGVsZW1lbnRzIHRvIGV4Y2x1ZGUuIElmIGEgcHJvcGVydHkgbmFtZSBvclxuICAgICAqICBvYmplY3QgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSB1c2VkIHRvIGNyZWF0ZSBhIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiXG4gICAgICogIHN0eWxlIGNhbGxiYWNrLCByZXNwZWN0aXZlbHkuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgc2xpY2Ugb2YgYGFycmF5YC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5pbml0aWFsKFsxLCAyLCAzXSk7XG4gICAgICogLy8gPT4gWzEsIDJdXG4gICAgICpcbiAgICAgKiBfLmluaXRpYWwoWzEsIDIsIDNdLCAyKTtcbiAgICAgKiAvLyA9PiBbMV1cbiAgICAgKlxuICAgICAqIF8uaW5pdGlhbChbMSwgMiwgM10sIGZ1bmN0aW9uKG51bSkge1xuICAgICAqICAgcmV0dXJuIG51bSA+IDE7XG4gICAgICogfSk7XG4gICAgICogLy8gPT4gWzFdXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IFtcbiAgICAgKiAgIHsgJ25hbWUnOiAnYmFybmV5JywgICdibG9ja2VkJzogZmFsc2UsICdlbXBsb3llcic6ICdzbGF0ZScgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgICdibG9ja2VkJzogdHJ1ZSwgICdlbXBsb3llcic6ICdzbGF0ZScgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAncGViYmxlcycsICdibG9ja2VkJzogdHJ1ZSwgICdlbXBsb3llcic6ICduYScgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLmluaXRpYWwoY2hhcmFjdGVycywgJ2Jsb2NrZWQnKTtcbiAgICAgKiAvLyA9PiBbeyAnbmFtZSc6ICdiYXJuZXknLCAgJ2Jsb2NrZWQnOiBmYWxzZSwgJ2VtcGxveWVyJzogJ3NsYXRlJyB9XVxuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLndoZXJlXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5wbHVjayhfLmluaXRpYWwoY2hhcmFjdGVycywgeyAnZW1wbG95ZXInOiAnbmEnIH0pLCAnbmFtZScpO1xuICAgICAqIC8vID0+IFsnYmFybmV5JywgJ2ZyZWQnXVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGluaXRpYWwoYXJyYXksIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgbiA9IDAsXG4gICAgICAgICAgbGVuZ3RoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwO1xuXG4gICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9ICdudW1iZXInICYmIGNhbGxiYWNrICE9IG51bGwpIHtcbiAgICAgICAgdmFyIGluZGV4ID0gbGVuZ3RoO1xuICAgICAgICBjYWxsYmFjayA9IGxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMyk7XG4gICAgICAgIHdoaWxlIChpbmRleC0tICYmIGNhbGxiYWNrKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KSkge1xuICAgICAgICAgIG4rKztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbiA9IChjYWxsYmFjayA9PSBudWxsIHx8IHRoaXNBcmcpID8gMSA6IGNhbGxiYWNrIHx8IG47XG4gICAgICB9XG4gICAgICByZXR1cm4gc2xpY2UoYXJyYXksIDAsIG5hdGl2ZU1pbihuYXRpdmVNYXgoMCwgbGVuZ3RoIC0gbiksIGxlbmd0aCkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdW5pcXVlIHZhbHVlcyBwcmVzZW50IGluIGFsbCBwcm92aWRlZCBhcnJheXMgdXNpbmdcbiAgICAgKiBzdHJpY3QgZXF1YWxpdHkgZm9yIGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7Li4uQXJyYXl9IFthcnJheV0gVGhlIGFycmF5cyB0byBpbnNwZWN0LlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhbiBhcnJheSBvZiBzaGFyZWQgdmFsdWVzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmludGVyc2VjdGlvbihbMSwgMiwgM10sIFs1LCAyLCAxLCA0XSwgWzIsIDFdKTtcbiAgICAgKiAvLyA9PiBbMSwgMl1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpbnRlcnNlY3Rpb24oKSB7XG4gICAgICB2YXIgYXJncyA9IFtdLFxuICAgICAgICAgIGFyZ3NJbmRleCA9IC0xLFxuICAgICAgICAgIGFyZ3NMZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxuICAgICAgICAgIGNhY2hlcyA9IGdldEFycmF5KCksXG4gICAgICAgICAgaW5kZXhPZiA9IGdldEluZGV4T2YoKSxcbiAgICAgICAgICB0cnVzdEluZGV4T2YgPSBpbmRleE9mID09PSBiYXNlSW5kZXhPZixcbiAgICAgICAgICBzZWVuID0gZ2V0QXJyYXkoKTtcblxuICAgICAgd2hpbGUgKCsrYXJnc0luZGV4IDwgYXJnc0xlbmd0aCkge1xuICAgICAgICB2YXIgdmFsdWUgPSBhcmd1bWVudHNbYXJnc0luZGV4XTtcbiAgICAgICAgaWYgKGlzQXJyYXkodmFsdWUpIHx8IGlzQXJndW1lbnRzKHZhbHVlKSkge1xuICAgICAgICAgIGFyZ3MucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgY2FjaGVzLnB1c2godHJ1c3RJbmRleE9mICYmIHZhbHVlLmxlbmd0aCA+PSBsYXJnZUFycmF5U2l6ZSAmJlxuICAgICAgICAgICAgY3JlYXRlQ2FjaGUoYXJnc0luZGV4ID8gYXJnc1thcmdzSW5kZXhdIDogc2VlbikpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgYXJyYXkgPSBhcmdzWzBdLFxuICAgICAgICAgIGluZGV4ID0gLTEsXG4gICAgICAgICAgbGVuZ3RoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiAwLFxuICAgICAgICAgIHJlc3VsdCA9IFtdO1xuXG4gICAgICBvdXRlcjpcbiAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciBjYWNoZSA9IGNhY2hlc1swXTtcbiAgICAgICAgdmFsdWUgPSBhcnJheVtpbmRleF07XG5cbiAgICAgICAgaWYgKChjYWNoZSA/IGNhY2hlSW5kZXhPZihjYWNoZSwgdmFsdWUpIDogaW5kZXhPZihzZWVuLCB2YWx1ZSkpIDwgMCkge1xuICAgICAgICAgIGFyZ3NJbmRleCA9IGFyZ3NMZW5ndGg7XG4gICAgICAgICAgKGNhY2hlIHx8IHNlZW4pLnB1c2godmFsdWUpO1xuICAgICAgICAgIHdoaWxlICgtLWFyZ3NJbmRleCkge1xuICAgICAgICAgICAgY2FjaGUgPSBjYWNoZXNbYXJnc0luZGV4XTtcbiAgICAgICAgICAgIGlmICgoY2FjaGUgPyBjYWNoZUluZGV4T2YoY2FjaGUsIHZhbHVlKSA6IGluZGV4T2YoYXJnc1thcmdzSW5kZXhdLCB2YWx1ZSkpIDwgMCkge1xuICAgICAgICAgICAgICBjb250aW51ZSBvdXRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmVzdWx0LnB1c2godmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB3aGlsZSAoYXJnc0xlbmd0aC0tKSB7XG4gICAgICAgIGNhY2hlID0gY2FjaGVzW2FyZ3NMZW5ndGhdO1xuICAgICAgICBpZiAoY2FjaGUpIHtcbiAgICAgICAgICByZWxlYXNlT2JqZWN0KGNhY2hlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmVsZWFzZUFycmF5KGNhY2hlcyk7XG4gICAgICByZWxlYXNlQXJyYXkoc2Vlbik7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGxhc3QgZWxlbWVudCBvciBsYXN0IGBuYCBlbGVtZW50cyBvZiBhbiBhcnJheS4gSWYgYSBjYWxsYmFjayBpc1xuICAgICAqIHByb3ZpZGVkIGVsZW1lbnRzIGF0IHRoZSBlbmQgb2YgdGhlIGFycmF5IGFyZSByZXR1cm5lZCBhcyBsb25nIGFzIHRoZVxuICAgICAqIGNhbGxiYWNrIHJldHVybnMgdHJ1ZXkuIFRoZSBjYWxsYmFjayBpcyBib3VuZCB0byBgdGhpc0FyZ2AgYW5kIGludm9rZWRcbiAgICAgKiB3aXRoIHRocmVlIGFyZ3VtZW50czsgKHZhbHVlLCBpbmRleCwgYXJyYXkpLlxuICAgICAqXG4gICAgICogSWYgYSBwcm9wZXJ0eSBuYW1lIGlzIHByb3ZpZGVkIGZvciBgY2FsbGJhY2tgIHRoZSBjcmVhdGVkIFwiXy5wbHVja1wiIHN0eWxlXG4gICAgICogY2FsbGJhY2sgd2lsbCByZXR1cm4gdGhlIHByb3BlcnR5IHZhbHVlIG9mIHRoZSBnaXZlbiBlbGVtZW50LlxuICAgICAqXG4gICAgICogSWYgYW4gb2JqZWN0IGlzIHByb3ZpZGVkIGZvciBgY2FsbGJhY2tgIHRoZSBjcmVhdGVkIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrXG4gICAgICogd2lsbCByZXR1cm4gYHRydWVgIGZvciBlbGVtZW50cyB0aGF0IGhhdmUgdGhlIHByb3BlcnRpZXMgb2YgdGhlIGdpdmVuIG9iamVjdCxcbiAgICAgKiBlbHNlIGBmYWxzZWAuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgQXJyYXlzXG4gICAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHF1ZXJ5LlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fG51bWJlcnxzdHJpbmd9IFtjYWxsYmFja10gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgZWxlbWVudCBvciB0aGUgbnVtYmVyIG9mIGVsZW1lbnRzIHRvIHJldHVybi4gSWYgYSBwcm9wZXJ0eSBuYW1lIG9yXG4gICAgICogIG9iamVjdCBpcyBwcm92aWRlZCBpdCB3aWxsIGJlIHVzZWQgdG8gY3JlYXRlIGEgXCJfLnBsdWNrXCIgb3IgXCJfLndoZXJlXCJcbiAgICAgKiAgc3R5bGUgY2FsbGJhY2ssIHJlc3BlY3RpdmVseS5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgbGFzdCBlbGVtZW50KHMpIG9mIGBhcnJheWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8ubGFzdChbMSwgMiwgM10pO1xuICAgICAqIC8vID0+IDNcbiAgICAgKlxuICAgICAqIF8ubGFzdChbMSwgMiwgM10sIDIpO1xuICAgICAqIC8vID0+IFsyLCAzXVxuICAgICAqXG4gICAgICogXy5sYXN0KFsxLCAyLCAzXSwgZnVuY3Rpb24obnVtKSB7XG4gICAgICogICByZXR1cm4gbnVtID4gMTtcbiAgICAgKiB9KTtcbiAgICAgKiAvLyA9PiBbMiwgM11cbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAgJ2Jsb2NrZWQnOiBmYWxzZSwgJ2VtcGxveWVyJzogJ3NsYXRlJyB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdmcmVkJywgICAgJ2Jsb2NrZWQnOiB0cnVlLCAgJ2VtcGxveWVyJzogJ3NsYXRlJyB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdwZWJibGVzJywgJ2Jsb2NrZWQnOiB0cnVlLCAgJ2VtcGxveWVyJzogJ25hJyB9XG4gICAgICogXTtcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy5wbHVja1wiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8ucGx1Y2soXy5sYXN0KGNoYXJhY3RlcnMsICdibG9ja2VkJyksICduYW1lJyk7XG4gICAgICogLy8gPT4gWydmcmVkJywgJ3BlYmJsZXMnXVxuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLndoZXJlXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy5sYXN0KGNoYXJhY3RlcnMsIHsgJ2VtcGxveWVyJzogJ25hJyB9KTtcbiAgICAgKiAvLyA9PiBbeyAnbmFtZSc6ICdwZWJibGVzJywgJ2Jsb2NrZWQnOiB0cnVlLCAnZW1wbG95ZXInOiAnbmEnIH1dXG4gICAgICovXG4gICAgZnVuY3Rpb24gbGFzdChhcnJheSwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciBuID0gMCxcbiAgICAgICAgICBsZW5ndGggPSBhcnJheSA/IGFycmF5Lmxlbmd0aCA6IDA7XG5cbiAgICAgIGlmICh0eXBlb2YgY2FsbGJhY2sgIT0gJ251bWJlcicgJiYgY2FsbGJhY2sgIT0gbnVsbCkge1xuICAgICAgICB2YXIgaW5kZXggPSBsZW5ndGg7XG4gICAgICAgIGNhbGxiYWNrID0gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAzKTtcbiAgICAgICAgd2hpbGUgKGluZGV4LS0gJiYgY2FsbGJhY2soYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICAgICAgbisrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBuID0gY2FsbGJhY2s7XG4gICAgICAgIGlmIChuID09IG51bGwgfHwgdGhpc0FyZykge1xuICAgICAgICAgIHJldHVybiBhcnJheSA/IGFycmF5W2xlbmd0aCAtIDFdIDogdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gc2xpY2UoYXJyYXksIG5hdGl2ZU1heCgwLCBsZW5ndGggLSBuKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgaW5kZXggYXQgd2hpY2ggdGhlIGxhc3Qgb2NjdXJyZW5jZSBvZiBgdmFsdWVgIGlzIGZvdW5kIHVzaW5nIHN0cmljdFxuICAgICAqIGVxdWFsaXR5IGZvciBjb21wYXJpc29ucywgaS5lLiBgPT09YC4gSWYgYGZyb21JbmRleGAgaXMgbmVnYXRpdmUsIGl0IGlzIHVzZWRcbiAgICAgKiBhcyB0aGUgb2Zmc2V0IGZyb20gdGhlIGVuZCBvZiB0aGUgY29sbGVjdGlvbi5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBzZWFyY2guXG4gICAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2VhcmNoIGZvci5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW2Zyb21JbmRleD1hcnJheS5sZW5ndGgtMV0gVGhlIGluZGV4IHRvIHNlYXJjaCBmcm9tLlxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlIG9yIGAtMWAuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8ubGFzdEluZGV4T2YoWzEsIDIsIDMsIDEsIDIsIDNdLCAyKTtcbiAgICAgKiAvLyA9PiA0XG4gICAgICpcbiAgICAgKiBfLmxhc3RJbmRleE9mKFsxLCAyLCAzLCAxLCAyLCAzXSwgMiwgMyk7XG4gICAgICogLy8gPT4gMVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGxhc3RJbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KSB7XG4gICAgICB2YXIgaW5kZXggPSBhcnJheSA/IGFycmF5Lmxlbmd0aCA6IDA7XG4gICAgICBpZiAodHlwZW9mIGZyb21JbmRleCA9PSAnbnVtYmVyJykge1xuICAgICAgICBpbmRleCA9IChmcm9tSW5kZXggPCAwID8gbmF0aXZlTWF4KDAsIGluZGV4ICsgZnJvbUluZGV4KSA6IG5hdGl2ZU1pbihmcm9tSW5kZXgsIGluZGV4IC0gMSkpICsgMTtcbiAgICAgIH1cbiAgICAgIHdoaWxlIChpbmRleC0tKSB7XG4gICAgICAgIGlmIChhcnJheVtpbmRleF0gPT09IHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gLTE7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhbGwgcHJvdmlkZWQgdmFsdWVzIGZyb20gdGhlIGdpdmVuIGFycmF5IHVzaW5nIHN0cmljdCBlcXVhbGl0eSBmb3JcbiAgICAgKiBjb21wYXJpc29ucywgaS5lLiBgPT09YC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBBcnJheXNcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gbW9kaWZ5LlxuICAgICAqIEBwYXJhbSB7Li4uKn0gW3ZhbHVlXSBUaGUgdmFsdWVzIHRvIHJlbW92ZS5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGFycmF5ID0gWzEsIDIsIDMsIDEsIDIsIDNdO1xuICAgICAqIF8ucHVsbChhcnJheSwgMiwgMyk7XG4gICAgICogY29uc29sZS5sb2coYXJyYXkpO1xuICAgICAqIC8vID0+IFsxLCAxXVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHB1bGwoYXJyYXkpIHtcbiAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzLFxuICAgICAgICAgIGFyZ3NJbmRleCA9IDAsXG4gICAgICAgICAgYXJnc0xlbmd0aCA9IGFyZ3MubGVuZ3RoLFxuICAgICAgICAgIGxlbmd0aCA9IGFycmF5ID8gYXJyYXkubGVuZ3RoIDogMDtcblxuICAgICAgd2hpbGUgKCsrYXJnc0luZGV4IDwgYXJnc0xlbmd0aCkge1xuICAgICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICAgIHZhbHVlID0gYXJnc1thcmdzSW5kZXhdO1xuICAgICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICAgIGlmIChhcnJheVtpbmRleF0gPT09IHZhbHVlKSB7XG4gICAgICAgICAgICBzcGxpY2UuY2FsbChhcnJheSwgaW5kZXgtLSwgMSk7XG4gICAgICAgICAgICBsZW5ndGgtLTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBhcnJheTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGFycmF5IG9mIG51bWJlcnMgKHBvc2l0aXZlIGFuZC9vciBuZWdhdGl2ZSkgcHJvZ3Jlc3NpbmcgZnJvbVxuICAgICAqIGBzdGFydGAgdXAgdG8gYnV0IG5vdCBpbmNsdWRpbmcgYGVuZGAuIElmIGBzdGFydGAgaXMgbGVzcyB0aGFuIGBzdG9wYCBhXG4gICAgICogemVyby1sZW5ndGggcmFuZ2UgaXMgY3JlYXRlZCB1bmxlc3MgYSBuZWdhdGl2ZSBgc3RlcGAgaXMgc3BlY2lmaWVkLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbc3RhcnQ9MF0gVGhlIHN0YXJ0IG9mIHRoZSByYW5nZS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gZW5kIFRoZSBlbmQgb2YgdGhlIHJhbmdlLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbc3RlcD0xXSBUaGUgdmFsdWUgdG8gaW5jcmVtZW50IG9yIGRlY3JlbWVudCBieS5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYSBuZXcgcmFuZ2UgYXJyYXkuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8ucmFuZ2UoNCk7XG4gICAgICogLy8gPT4gWzAsIDEsIDIsIDNdXG4gICAgICpcbiAgICAgKiBfLnJhbmdlKDEsIDUpO1xuICAgICAqIC8vID0+IFsxLCAyLCAzLCA0XVxuICAgICAqXG4gICAgICogXy5yYW5nZSgwLCAyMCwgNSk7XG4gICAgICogLy8gPT4gWzAsIDUsIDEwLCAxNV1cbiAgICAgKlxuICAgICAqIF8ucmFuZ2UoMCwgLTQsIC0xKTtcbiAgICAgKiAvLyA9PiBbMCwgLTEsIC0yLCAtM11cbiAgICAgKlxuICAgICAqIF8ucmFuZ2UoMSwgNCwgMCk7XG4gICAgICogLy8gPT4gWzEsIDEsIDFdXG4gICAgICpcbiAgICAgKiBfLnJhbmdlKDApO1xuICAgICAqIC8vID0+IFtdXG4gICAgICovXG4gICAgZnVuY3Rpb24gcmFuZ2Uoc3RhcnQsIGVuZCwgc3RlcCkge1xuICAgICAgc3RhcnQgPSArc3RhcnQgfHwgMDtcbiAgICAgIHN0ZXAgPSB0eXBlb2Ygc3RlcCA9PSAnbnVtYmVyJyA/IHN0ZXAgOiAoK3N0ZXAgfHwgMSk7XG5cbiAgICAgIGlmIChlbmQgPT0gbnVsbCkge1xuICAgICAgICBlbmQgPSBzdGFydDtcbiAgICAgICAgc3RhcnQgPSAwO1xuICAgICAgfVxuICAgICAgLy8gdXNlIGBBcnJheShsZW5ndGgpYCBzbyBlbmdpbmVzIGxpa2UgQ2hha3JhIGFuZCBWOCBhdm9pZCBzbG93ZXIgbW9kZXNcbiAgICAgIC8vIGh0dHA6Ly95b3V0dS5iZS9YQXFJcEdVOFpaayN0PTE3bTI1c1xuICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgbGVuZ3RoID0gbmF0aXZlTWF4KDAsIGNlaWwoKGVuZCAtIHN0YXJ0KSAvIChzdGVwIHx8IDEpKSksXG4gICAgICAgICAgcmVzdWx0ID0gQXJyYXkobGVuZ3RoKTtcblxuICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgcmVzdWx0W2luZGV4XSA9IHN0YXJ0O1xuICAgICAgICBzdGFydCArPSBzdGVwO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZW1vdmVzIGFsbCBlbGVtZW50cyBmcm9tIGFuIGFycmF5IHRoYXQgdGhlIGNhbGxiYWNrIHJldHVybnMgdHJ1ZXkgZm9yXG4gICAgICogYW5kIHJldHVybnMgYW4gYXJyYXkgb2YgcmVtb3ZlZCBlbGVtZW50cy4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYFxuICAgICAqIGFuZCBpbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzOyAodmFsdWUsIGluZGV4LCBhcnJheSkuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBBcnJheXNcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gbW9kaWZ5LlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fHN0cmluZ30gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkXG4gICAgICogIHBlciBpdGVyYXRpb24uIElmIGEgcHJvcGVydHkgbmFtZSBvciBvYmplY3QgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSB1c2VkXG4gICAgICogIHRvIGNyZWF0ZSBhIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrLCByZXNwZWN0aXZlbHkuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgbmV3IGFycmF5IG9mIHJlbW92ZWQgZWxlbWVudHMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBhcnJheSA9IFsxLCAyLCAzLCA0LCA1LCA2XTtcbiAgICAgKiB2YXIgZXZlbnMgPSBfLnJlbW92ZShhcnJheSwgZnVuY3Rpb24obnVtKSB7IHJldHVybiBudW0gJSAyID09IDA7IH0pO1xuICAgICAqXG4gICAgICogY29uc29sZS5sb2coYXJyYXkpO1xuICAgICAqIC8vID0+IFsxLCAzLCA1XVxuICAgICAqXG4gICAgICogY29uc29sZS5sb2coZXZlbnMpO1xuICAgICAqIC8vID0+IFsyLCA0LCA2XVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlbW92ZShhcnJheSwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgIGxlbmd0aCA9IGFycmF5ID8gYXJyYXkubGVuZ3RoIDogMCxcbiAgICAgICAgICByZXN1bHQgPSBbXTtcblxuICAgICAgY2FsbGJhY2sgPSBsb2Rhc2guY3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDMpO1xuICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gYXJyYXlbaW5kZXhdO1xuICAgICAgICBpZiAoY2FsbGJhY2sodmFsdWUsIGluZGV4LCBhcnJheSkpIHtcbiAgICAgICAgICByZXN1bHQucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgc3BsaWNlLmNhbGwoYXJyYXksIGluZGV4LS0sIDEpO1xuICAgICAgICAgIGxlbmd0aC0tO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBvcHBvc2l0ZSBvZiBgXy5pbml0aWFsYCB0aGlzIG1ldGhvZCBnZXRzIGFsbCBidXQgdGhlIGZpcnN0IGVsZW1lbnQgb3JcbiAgICAgKiBmaXJzdCBgbmAgZWxlbWVudHMgb2YgYW4gYXJyYXkuIElmIGEgY2FsbGJhY2sgZnVuY3Rpb24gaXMgcHJvdmlkZWQgZWxlbWVudHNcbiAgICAgKiBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBhcnJheSBhcmUgZXhjbHVkZWQgZnJvbSB0aGUgcmVzdWx0IGFzIGxvbmcgYXMgdGhlXG4gICAgICogY2FsbGJhY2sgcmV0dXJucyB0cnVleS4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZFxuICAgICAqIHdpdGggdGhyZWUgYXJndW1lbnRzOyAodmFsdWUsIGluZGV4LCBhcnJheSkuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBhbGlhcyBkcm9wLCB0YWlsXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBxdWVyeS5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdHxudW1iZXJ8c3RyaW5nfSBbY2FsbGJhY2s9MV0gVGhlIGZ1bmN0aW9uIGNhbGxlZFxuICAgICAqICBwZXIgZWxlbWVudCBvciB0aGUgbnVtYmVyIG9mIGVsZW1lbnRzIHRvIGV4Y2x1ZGUuIElmIGEgcHJvcGVydHkgbmFtZSBvclxuICAgICAqICBvYmplY3QgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSB1c2VkIHRvIGNyZWF0ZSBhIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiXG4gICAgICogIHN0eWxlIGNhbGxiYWNrLCByZXNwZWN0aXZlbHkuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgc2xpY2Ugb2YgYGFycmF5YC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5yZXN0KFsxLCAyLCAzXSk7XG4gICAgICogLy8gPT4gWzIsIDNdXG4gICAgICpcbiAgICAgKiBfLnJlc3QoWzEsIDIsIDNdLCAyKTtcbiAgICAgKiAvLyA9PiBbM11cbiAgICAgKlxuICAgICAqIF8ucmVzdChbMSwgMiwgM10sIGZ1bmN0aW9uKG51bSkge1xuICAgICAqICAgcmV0dXJuIG51bSA8IDM7XG4gICAgICogfSk7XG4gICAgICogLy8gPT4gWzNdXG4gICAgICpcbiAgICAgKiB2YXIgY2hhcmFjdGVycyA9IFtcbiAgICAgKiAgIHsgJ25hbWUnOiAnYmFybmV5JywgICdibG9ja2VkJzogdHJ1ZSwgICdlbXBsb3llcic6ICdzbGF0ZScgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgICdibG9ja2VkJzogZmFsc2UsICAnZW1wbG95ZXInOiAnc2xhdGUnIH0sXG4gICAgICogICB7ICduYW1lJzogJ3BlYmJsZXMnLCAnYmxvY2tlZCc6IHRydWUsICdlbXBsb3llcic6ICduYScgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBcIl8ucGx1Y2tcIiBjYWxsYmFjayBzaG9ydGhhbmRcbiAgICAgKiBfLnBsdWNrKF8ucmVzdChjaGFyYWN0ZXJzLCAnYmxvY2tlZCcpLCAnbmFtZScpO1xuICAgICAqIC8vID0+IFsnZnJlZCcsICdwZWJibGVzJ11cbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy53aGVyZVwiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8ucmVzdChjaGFyYWN0ZXJzLCB7ICdlbXBsb3llcic6ICdzbGF0ZScgfSk7XG4gICAgICogLy8gPT4gW3sgJ25hbWUnOiAncGViYmxlcycsICdibG9ja2VkJzogdHJ1ZSwgJ2VtcGxveWVyJzogJ25hJyB9XVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHJlc3QoYXJyYXksIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9ICdudW1iZXInICYmIGNhbGxiYWNrICE9IG51bGwpIHtcbiAgICAgICAgdmFyIG4gPSAwLFxuICAgICAgICAgICAgaW5kZXggPSAtMSxcbiAgICAgICAgICAgIGxlbmd0aCA9IGFycmF5ID8gYXJyYXkubGVuZ3RoIDogMDtcblxuICAgICAgICBjYWxsYmFjayA9IGxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMyk7XG4gICAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoICYmIGNhbGxiYWNrKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KSkge1xuICAgICAgICAgIG4rKztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbiA9IChjYWxsYmFjayA9PSBudWxsIHx8IHRoaXNBcmcpID8gMSA6IG5hdGl2ZU1heCgwLCBjYWxsYmFjayk7XG4gICAgICB9XG4gICAgICByZXR1cm4gc2xpY2UoYXJyYXksIG4pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVzZXMgYSBiaW5hcnkgc2VhcmNoIHRvIGRldGVybWluZSB0aGUgc21hbGxlc3QgaW5kZXggYXQgd2hpY2ggYSB2YWx1ZVxuICAgICAqIHNob3VsZCBiZSBpbnNlcnRlZCBpbnRvIGEgZ2l2ZW4gc29ydGVkIGFycmF5IGluIG9yZGVyIHRvIG1haW50YWluIHRoZSBzb3J0XG4gICAgICogb3JkZXIgb2YgdGhlIGFycmF5LiBJZiBhIGNhbGxiYWNrIGlzIHByb3ZpZGVkIGl0IHdpbGwgYmUgZXhlY3V0ZWQgZm9yXG4gICAgICogYHZhbHVlYCBhbmQgZWFjaCBlbGVtZW50IG9mIGBhcnJheWAgdG8gY29tcHV0ZSB0aGVpciBzb3J0IHJhbmtpbmcuIFRoZVxuICAgICAqIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoIG9uZSBhcmd1bWVudDsgKHZhbHVlKS5cbiAgICAgKlxuICAgICAqIElmIGEgcHJvcGVydHkgbmFtZSBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ucGx1Y2tcIiBzdHlsZVxuICAgICAqIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBvZiB0aGUgZ2l2ZW4gZWxlbWVudC5cbiAgICAgKlxuICAgICAqIElmIGFuIG9iamVjdCBpcyBwcm92aWRlZCBmb3IgYGNhbGxiYWNrYCB0aGUgY3JlYXRlZCBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFja1xuICAgICAqIHdpbGwgcmV0dXJuIGB0cnVlYCBmb3IgZWxlbWVudHMgdGhhdCBoYXZlIHRoZSBwcm9wZXJ0aWVzIG9mIHRoZSBnaXZlbiBvYmplY3QsXG4gICAgICogZWxzZSBgZmFsc2VgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGV2YWx1YXRlLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fHN0cmluZ30gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkXG4gICAgICogIHBlciBpdGVyYXRpb24uIElmIGEgcHJvcGVydHkgbmFtZSBvciBvYmplY3QgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSB1c2VkXG4gICAgICogIHRvIGNyZWF0ZSBhIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrLCByZXNwZWN0aXZlbHkuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgaW5kZXggYXQgd2hpY2ggYHZhbHVlYCBzaG91bGQgYmUgaW5zZXJ0ZWRcbiAgICAgKiAgaW50byBgYXJyYXlgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLnNvcnRlZEluZGV4KFsyMCwgMzAsIDUwXSwgNDApO1xuICAgICAqIC8vID0+IDJcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIFwiXy5wbHVja1wiIGNhbGxiYWNrIHNob3J0aGFuZFxuICAgICAqIF8uc29ydGVkSW5kZXgoW3sgJ3gnOiAyMCB9LCB7ICd4JzogMzAgfSwgeyAneCc6IDUwIH1dLCB7ICd4JzogNDAgfSwgJ3gnKTtcbiAgICAgKiAvLyA9PiAyXG4gICAgICpcbiAgICAgKiB2YXIgZGljdCA9IHtcbiAgICAgKiAgICd3b3JkVG9OdW1iZXInOiB7ICd0d2VudHknOiAyMCwgJ3RoaXJ0eSc6IDMwLCAnZm91cnR5JzogNDAsICdmaWZ0eSc6IDUwIH1cbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogXy5zb3J0ZWRJbmRleChbJ3R3ZW50eScsICd0aGlydHknLCAnZmlmdHknXSwgJ2ZvdXJ0eScsIGZ1bmN0aW9uKHdvcmQpIHtcbiAgICAgKiAgIHJldHVybiBkaWN0LndvcmRUb051bWJlclt3b3JkXTtcbiAgICAgKiB9KTtcbiAgICAgKiAvLyA9PiAyXG4gICAgICpcbiAgICAgKiBfLnNvcnRlZEluZGV4KFsndHdlbnR5JywgJ3RoaXJ0eScsICdmaWZ0eSddLCAnZm91cnR5JywgZnVuY3Rpb24od29yZCkge1xuICAgICAqICAgcmV0dXJuIHRoaXMud29yZFRvTnVtYmVyW3dvcmRdO1xuICAgICAqIH0sIGRpY3QpO1xuICAgICAqIC8vID0+IDJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBzb3J0ZWRJbmRleChhcnJheSwgdmFsdWUsIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICB2YXIgbG93ID0gMCxcbiAgICAgICAgICBoaWdoID0gYXJyYXkgPyBhcnJheS5sZW5ndGggOiBsb3c7XG5cbiAgICAgIC8vIGV4cGxpY2l0bHkgcmVmZXJlbmNlIGBpZGVudGl0eWAgZm9yIGJldHRlciBpbmxpbmluZyBpbiBGaXJlZm94XG4gICAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gbG9kYXNoLmNyZWF0ZUNhbGxiYWNrKGNhbGxiYWNrLCB0aGlzQXJnLCAxKSA6IGlkZW50aXR5O1xuICAgICAgdmFsdWUgPSBjYWxsYmFjayh2YWx1ZSk7XG5cbiAgICAgIHdoaWxlIChsb3cgPCBoaWdoKSB7XG4gICAgICAgIHZhciBtaWQgPSAobG93ICsgaGlnaCkgPj4+IDE7XG4gICAgICAgIChjYWxsYmFjayhhcnJheVttaWRdKSA8IHZhbHVlKVxuICAgICAgICAgID8gbG93ID0gbWlkICsgMVxuICAgICAgICAgIDogaGlnaCA9IG1pZDtcbiAgICAgIH1cbiAgICAgIHJldHVybiBsb3c7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBhcnJheSBvZiB1bmlxdWUgdmFsdWVzLCBpbiBvcmRlciwgb2YgdGhlIHByb3ZpZGVkIGFycmF5cyB1c2luZ1xuICAgICAqIHN0cmljdCBlcXVhbGl0eSBmb3IgY29tcGFyaXNvbnMsIGkuZS4gYD09PWAuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgQXJyYXlzXG4gICAgICogQHBhcmFtIHsuLi5BcnJheX0gW2FycmF5XSBUaGUgYXJyYXlzIHRvIGluc3BlY3QuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGFuIGFycmF5IG9mIGNvbWJpbmVkIHZhbHVlcy5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy51bmlvbihbMSwgMiwgM10sIFs1LCAyLCAxLCA0XSwgWzIsIDFdKTtcbiAgICAgKiAvLyA9PiBbMSwgMiwgMywgNSwgNF1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB1bmlvbigpIHtcbiAgICAgIHJldHVybiBiYXNlVW5pcShiYXNlRmxhdHRlbihhcmd1bWVudHMsIHRydWUsIHRydWUpKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgZHVwbGljYXRlLXZhbHVlLWZyZWUgdmVyc2lvbiBvZiBhbiBhcnJheSB1c2luZyBzdHJpY3QgZXF1YWxpdHlcbiAgICAgKiBmb3IgY29tcGFyaXNvbnMsIGkuZS4gYD09PWAuIElmIHRoZSBhcnJheSBpcyBzb3J0ZWQsIHByb3ZpZGluZ1xuICAgICAqIGB0cnVlYCBmb3IgYGlzU29ydGVkYCB3aWxsIHVzZSBhIGZhc3RlciBhbGdvcml0aG0uIElmIGEgY2FsbGJhY2sgaXMgcHJvdmlkZWRcbiAgICAgKiBlYWNoIGVsZW1lbnQgb2YgYGFycmF5YCBpcyBwYXNzZWQgdGhyb3VnaCB0aGUgY2FsbGJhY2sgYmVmb3JlIHVuaXF1ZW5lc3NcbiAgICAgKiBpcyBjb21wdXRlZC4gVGhlIGNhbGxiYWNrIGlzIGJvdW5kIHRvIGB0aGlzQXJnYCBhbmQgaW52b2tlZCB3aXRoIHRocmVlXG4gICAgICogYXJndW1lbnRzOyAodmFsdWUsIGluZGV4LCBhcnJheSkuXG4gICAgICpcbiAgICAgKiBJZiBhIHByb3BlcnR5IG5hbWUgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLnBsdWNrXCIgc3R5bGVcbiAgICAgKiBjYWxsYmFjayB3aWxsIHJldHVybiB0aGUgcHJvcGVydHkgdmFsdWUgb2YgdGhlIGdpdmVuIGVsZW1lbnQuXG4gICAgICpcbiAgICAgKiBJZiBhbiBvYmplY3QgaXMgcHJvdmlkZWQgZm9yIGBjYWxsYmFja2AgdGhlIGNyZWF0ZWQgXCJfLndoZXJlXCIgc3R5bGUgY2FsbGJhY2tcbiAgICAgKiB3aWxsIHJldHVybiBgdHJ1ZWAgZm9yIGVsZW1lbnRzIHRoYXQgaGF2ZSB0aGUgcHJvcGVydGllcyBvZiB0aGUgZ2l2ZW4gb2JqZWN0LFxuICAgICAqIGVsc2UgYGZhbHNlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBhbGlhcyB1bmlxdWVcbiAgICAgKiBAY2F0ZWdvcnkgQXJyYXlzXG4gICAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHByb2Nlc3MuXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbaXNTb3J0ZWQ9ZmFsc2VdIEEgZmxhZyB0byBpbmRpY2F0ZSB0aGF0IGBhcnJheWAgaXMgc29ydGVkLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fHN0cmluZ30gW2NhbGxiYWNrPWlkZW50aXR5XSBUaGUgZnVuY3Rpb24gY2FsbGVkXG4gICAgICogIHBlciBpdGVyYXRpb24uIElmIGEgcHJvcGVydHkgbmFtZSBvciBvYmplY3QgaXMgcHJvdmlkZWQgaXQgd2lsbCBiZSB1c2VkXG4gICAgICogIHRvIGNyZWF0ZSBhIFwiXy5wbHVja1wiIG9yIFwiXy53aGVyZVwiIHN0eWxlIGNhbGxiYWNrLCByZXNwZWN0aXZlbHkuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBjYWxsYmFja2AuXG4gICAgICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGEgZHVwbGljYXRlLXZhbHVlLWZyZWUgYXJyYXkuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8udW5pcShbMSwgMiwgMSwgMywgMV0pO1xuICAgICAqIC8vID0+IFsxLCAyLCAzXVxuICAgICAqXG4gICAgICogXy51bmlxKFsxLCAxLCAyLCAyLCAzXSwgdHJ1ZSk7XG4gICAgICogLy8gPT4gWzEsIDIsIDNdXG4gICAgICpcbiAgICAgKiBfLnVuaXEoWydBJywgJ2InLCAnQycsICdhJywgJ0InLCAnYyddLCBmdW5jdGlvbihsZXR0ZXIpIHsgcmV0dXJuIGxldHRlci50b0xvd2VyQ2FzZSgpOyB9KTtcbiAgICAgKiAvLyA9PiBbJ0EnLCAnYicsICdDJ11cbiAgICAgKlxuICAgICAqIF8udW5pcShbMSwgMi41LCAzLCAxLjUsIDIsIDMuNV0sIGZ1bmN0aW9uKG51bSkgeyByZXR1cm4gdGhpcy5mbG9vcihudW0pOyB9LCBNYXRoKTtcbiAgICAgKiAvLyA9PiBbMSwgMi41LCAzXVxuICAgICAqXG4gICAgICogLy8gdXNpbmcgXCJfLnBsdWNrXCIgY2FsbGJhY2sgc2hvcnRoYW5kXG4gICAgICogXy51bmlxKFt7ICd4JzogMSB9LCB7ICd4JzogMiB9LCB7ICd4JzogMSB9XSwgJ3gnKTtcbiAgICAgKiAvLyA9PiBbeyAneCc6IDEgfSwgeyAneCc6IDIgfV1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB1bmlxKGFycmF5LCBpc1NvcnRlZCwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIC8vIGp1Z2dsZSBhcmd1bWVudHNcbiAgICAgIGlmICh0eXBlb2YgaXNTb3J0ZWQgIT0gJ2Jvb2xlYW4nICYmIGlzU29ydGVkICE9IG51bGwpIHtcbiAgICAgICAgdGhpc0FyZyA9IGNhbGxiYWNrO1xuICAgICAgICBjYWxsYmFjayA9ICh0eXBlb2YgaXNTb3J0ZWQgIT0gJ2Z1bmN0aW9uJyAmJiB0aGlzQXJnICYmIHRoaXNBcmdbaXNTb3J0ZWRdID09PSBhcnJheSkgPyBudWxsIDogaXNTb3J0ZWQ7XG4gICAgICAgIGlzU29ydGVkID0gZmFsc2U7XG4gICAgICB9XG4gICAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkge1xuICAgICAgICBjYWxsYmFjayA9IGxvZGFzaC5jcmVhdGVDYWxsYmFjayhjYWxsYmFjaywgdGhpc0FyZywgMyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gYmFzZVVuaXEoYXJyYXksIGlzU29ydGVkLCBjYWxsYmFjayk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBhcnJheSBleGNsdWRpbmcgYWxsIHByb3ZpZGVkIHZhbHVlcyB1c2luZyBzdHJpY3QgZXF1YWxpdHkgZm9yXG4gICAgICogY29tcGFyaXNvbnMsIGkuZS4gYD09PWAuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgQXJyYXlzXG4gICAgICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGZpbHRlci5cbiAgICAgKiBAcGFyYW0gey4uLip9IFt2YWx1ZV0gVGhlIHZhbHVlcyB0byBleGNsdWRlLlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhIG5ldyBhcnJheSBvZiBmaWx0ZXJlZCB2YWx1ZXMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8ud2l0aG91dChbMSwgMiwgMSwgMCwgMywgMSwgNF0sIDAsIDEpO1xuICAgICAqIC8vID0+IFsyLCAzLCA0XVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHdpdGhvdXQoYXJyYXkpIHtcbiAgICAgIHJldHVybiBiYXNlRGlmZmVyZW5jZShhcnJheSwgc2xpY2UoYXJndW1lbnRzLCAxKSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBhcnJheSB0aGF0IGlzIHRoZSBzeW1tZXRyaWMgZGlmZmVyZW5jZSBvZiB0aGUgcHJvdmlkZWQgYXJyYXlzLlxuICAgICAqIFNlZSBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1N5bW1ldHJpY19kaWZmZXJlbmNlLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEFycmF5c1xuICAgICAqIEBwYXJhbSB7Li4uQXJyYXl9IFthcnJheV0gVGhlIGFycmF5cyB0byBpbnNwZWN0LlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhbiBhcnJheSBvZiB2YWx1ZXMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8ueG9yKFsxLCAyLCAzXSwgWzUsIDIsIDEsIDRdKTtcbiAgICAgKiAvLyA9PiBbMywgNSwgNF1cbiAgICAgKlxuICAgICAqIF8ueG9yKFsxLCAyLCA1XSwgWzIsIDMsIDVdLCBbMywgNCwgNV0pO1xuICAgICAqIC8vID0+IFsxLCA0LCA1XVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHhvcigpIHtcbiAgICAgIHZhciBpbmRleCA9IC0xLFxuICAgICAgICAgIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG5cbiAgICAgIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciBhcnJheSA9IGFyZ3VtZW50c1tpbmRleF07XG4gICAgICAgIGlmIChpc0FycmF5KGFycmF5KSB8fCBpc0FyZ3VtZW50cyhhcnJheSkpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0ID0gcmVzdWx0XG4gICAgICAgICAgICA/IGJhc2VVbmlxKGJhc2VEaWZmZXJlbmNlKHJlc3VsdCwgYXJyYXkpLmNvbmNhdChiYXNlRGlmZmVyZW5jZShhcnJheSwgcmVzdWx0KSkpXG4gICAgICAgICAgICA6IGFycmF5O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0IHx8IFtdO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgZ3JvdXBlZCBlbGVtZW50cywgdGhlIGZpcnN0IG9mIHdoaWNoIGNvbnRhaW5zIHRoZSBmaXJzdFxuICAgICAqIGVsZW1lbnRzIG9mIHRoZSBnaXZlbiBhcnJheXMsIHRoZSBzZWNvbmQgb2Ygd2hpY2ggY29udGFpbnMgdGhlIHNlY29uZFxuICAgICAqIGVsZW1lbnRzIG9mIHRoZSBnaXZlbiBhcnJheXMsIGFuZCBzbyBvbi5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBhbGlhcyB1bnppcFxuICAgICAqIEBjYXRlZ29yeSBBcnJheXNcbiAgICAgKiBAcGFyYW0gey4uLkFycmF5fSBbYXJyYXldIEFycmF5cyB0byBwcm9jZXNzLlxuICAgICAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBhIG5ldyBhcnJheSBvZiBncm91cGVkIGVsZW1lbnRzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLnppcChbJ2ZyZWQnLCAnYmFybmV5J10sIFszMCwgNDBdLCBbdHJ1ZSwgZmFsc2VdKTtcbiAgICAgKiAvLyA9PiBbWydmcmVkJywgMzAsIHRydWVdLCBbJ2Jhcm5leScsIDQwLCBmYWxzZV1dXG4gICAgICovXG4gICAgZnVuY3Rpb24gemlwKCkge1xuICAgICAgdmFyIGFycmF5ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHMgOiBhcmd1bWVudHNbMF0sXG4gICAgICAgICAgaW5kZXggPSAtMSxcbiAgICAgICAgICBsZW5ndGggPSBhcnJheSA/IG1heChwbHVjayhhcnJheSwgJ2xlbmd0aCcpKSA6IDAsXG4gICAgICAgICAgcmVzdWx0ID0gQXJyYXkobGVuZ3RoIDwgMCA/IDAgOiBsZW5ndGgpO1xuXG4gICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICByZXN1bHRbaW5kZXhdID0gcGx1Y2soYXJyYXksIGluZGV4KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBvYmplY3QgY29tcG9zZWQgZnJvbSBhcnJheXMgb2YgYGtleXNgIGFuZCBgdmFsdWVzYC4gUHJvdmlkZVxuICAgICAqIGVpdGhlciBhIHNpbmdsZSB0d28gZGltZW5zaW9uYWwgYXJyYXksIGkuZS4gYFtba2V5MSwgdmFsdWUxXSwgW2tleTIsIHZhbHVlMl1dYFxuICAgICAqIG9yIHR3byBhcnJheXMsIG9uZSBvZiBga2V5c2AgYW5kIG9uZSBvZiBjb3JyZXNwb25kaW5nIGB2YWx1ZXNgLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGFsaWFzIG9iamVjdFxuICAgICAqIEBjYXRlZ29yeSBBcnJheXNcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBrZXlzIFRoZSBhcnJheSBvZiBrZXlzLlxuICAgICAqIEBwYXJhbSB7QXJyYXl9IFt2YWx1ZXM9W11dIFRoZSBhcnJheSBvZiB2YWx1ZXMuXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBhbiBvYmplY3QgY29tcG9zZWQgb2YgdGhlIGdpdmVuIGtleXMgYW5kXG4gICAgICogIGNvcnJlc3BvbmRpbmcgdmFsdWVzLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLnppcE9iamVjdChbJ2ZyZWQnLCAnYmFybmV5J10sIFszMCwgNDBdKTtcbiAgICAgKiAvLyA9PiB7ICdmcmVkJzogMzAsICdiYXJuZXknOiA0MCB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gemlwT2JqZWN0KGtleXMsIHZhbHVlcykge1xuICAgICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgICAgbGVuZ3RoID0ga2V5cyA/IGtleXMubGVuZ3RoIDogMCxcbiAgICAgICAgICByZXN1bHQgPSB7fTtcblxuICAgICAgaWYgKCF2YWx1ZXMgJiYgbGVuZ3RoICYmICFpc0FycmF5KGtleXNbMF0pKSB7XG4gICAgICAgIHZhbHVlcyA9IFtdO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICAgICAgdmFyIGtleSA9IGtleXNbaW5kZXhdO1xuICAgICAgICBpZiAodmFsdWVzKSB7XG4gICAgICAgICAgcmVzdWx0W2tleV0gPSB2YWx1ZXNbaW5kZXhdO1xuICAgICAgICB9IGVsc2UgaWYgKGtleSkge1xuICAgICAgICAgIHJlc3VsdFtrZXlbMF1dID0ga2V5WzFdO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgZXhlY3V0ZXMgYGZ1bmNgLCB3aXRoICB0aGUgYHRoaXNgIGJpbmRpbmcgYW5kXG4gICAgICogYXJndW1lbnRzIG9mIHRoZSBjcmVhdGVkIGZ1bmN0aW9uLCBvbmx5IGFmdGVyIGJlaW5nIGNhbGxlZCBgbmAgdGltZXMuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgRnVuY3Rpb25zXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG4gVGhlIG51bWJlciBvZiB0aW1lcyB0aGUgZnVuY3Rpb24gbXVzdCBiZSBjYWxsZWQgYmVmb3JlXG4gICAgICogIGBmdW5jYCBpcyBleGVjdXRlZC5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byByZXN0cmljdC5cbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyByZXN0cmljdGVkIGZ1bmN0aW9uLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgc2F2ZXMgPSBbJ3Byb2ZpbGUnLCAnc2V0dGluZ3MnXTtcbiAgICAgKlxuICAgICAqIHZhciBkb25lID0gXy5hZnRlcihzYXZlcy5sZW5ndGgsIGZ1bmN0aW9uKCkge1xuICAgICAqICAgY29uc29sZS5sb2coJ0RvbmUgc2F2aW5nIScpO1xuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogXy5mb3JFYWNoKHNhdmVzLCBmdW5jdGlvbih0eXBlKSB7XG4gICAgICogICBhc3luY1NhdmUoeyAndHlwZSc6IHR5cGUsICdjb21wbGV0ZSc6IGRvbmUgfSk7XG4gICAgICogfSk7XG4gICAgICogLy8gPT4gbG9ncyAnRG9uZSBzYXZpbmchJywgYWZ0ZXIgYWxsIHNhdmVzIGhhdmUgY29tcGxldGVkXG4gICAgICovXG4gICAgZnVuY3Rpb24gYWZ0ZXIobiwgZnVuYykge1xuICAgICAgaWYgKCFpc0Z1bmN0aW9uKGZ1bmMpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3I7XG4gICAgICB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmICgtLW4gPCAxKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCwgd2hlbiBjYWxsZWQsIGludm9rZXMgYGZ1bmNgIHdpdGggdGhlIGB0aGlzYFxuICAgICAqIGJpbmRpbmcgb2YgYHRoaXNBcmdgIGFuZCBwcmVwZW5kcyBhbnkgYWRkaXRpb25hbCBgYmluZGAgYXJndW1lbnRzIHRvIHRob3NlXG4gICAgICogcHJvdmlkZWQgdG8gdGhlIGJvdW5kIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEZ1bmN0aW9uc1xuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGJpbmQuXG4gICAgICogQHBhcmFtIHsqfSBbdGhpc0FyZ10gVGhlIGB0aGlzYCBiaW5kaW5nIG9mIGBmdW5jYC5cbiAgICAgKiBAcGFyYW0gey4uLip9IFthcmddIEFyZ3VtZW50cyB0byBiZSBwYXJ0aWFsbHkgYXBwbGllZC5cbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBib3VuZCBmdW5jdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGZ1bmMgPSBmdW5jdGlvbihncmVldGluZykge1xuICAgICAqICAgcmV0dXJuIGdyZWV0aW5nICsgJyAnICsgdGhpcy5uYW1lO1xuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBmdW5jID0gXy5iaW5kKGZ1bmMsIHsgJ25hbWUnOiAnZnJlZCcgfSwgJ2hpJyk7XG4gICAgICogZnVuYygpO1xuICAgICAqIC8vID0+ICdoaSBmcmVkJ1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGJpbmQoZnVuYywgdGhpc0FyZykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAyXG4gICAgICAgID8gY3JlYXRlV3JhcHBlcihmdW5jLCAxNywgc2xpY2UoYXJndW1lbnRzLCAyKSwgbnVsbCwgdGhpc0FyZylcbiAgICAgICAgOiBjcmVhdGVXcmFwcGVyKGZ1bmMsIDEsIG51bGwsIG51bGwsIHRoaXNBcmcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEJpbmRzIG1ldGhvZHMgb2YgYW4gb2JqZWN0IHRvIHRoZSBvYmplY3QgaXRzZWxmLCBvdmVyd3JpdGluZyB0aGUgZXhpc3RpbmdcbiAgICAgKiBtZXRob2QuIE1ldGhvZCBuYW1lcyBtYXkgYmUgc3BlY2lmaWVkIGFzIGluZGl2aWR1YWwgYXJndW1lbnRzIG9yIGFzIGFycmF5c1xuICAgICAqIG9mIG1ldGhvZCBuYW1lcy4gSWYgbm8gbWV0aG9kIG5hbWVzIGFyZSBwcm92aWRlZCBhbGwgdGhlIGZ1bmN0aW9uIHByb3BlcnRpZXNcbiAgICAgKiBvZiBgb2JqZWN0YCB3aWxsIGJlIGJvdW5kLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEZ1bmN0aW9uc1xuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBiaW5kIGFuZCBhc3NpZ24gdGhlIGJvdW5kIG1ldGhvZHMgdG8uXG4gICAgICogQHBhcmFtIHsuLi5zdHJpbmd9IFttZXRob2ROYW1lXSBUaGUgb2JqZWN0IG1ldGhvZCBuYW1lcyB0b1xuICAgICAqICBiaW5kLCBzcGVjaWZpZWQgYXMgaW5kaXZpZHVhbCBtZXRob2QgbmFtZXMgb3IgYXJyYXlzIG9mIG1ldGhvZCBuYW1lcy5cbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgdmlldyA9IHtcbiAgICAgKiAgICdsYWJlbCc6ICdkb2NzJyxcbiAgICAgKiAgICdvbkNsaWNrJzogZnVuY3Rpb24oKSB7IGNvbnNvbGUubG9nKCdjbGlja2VkICcgKyB0aGlzLmxhYmVsKTsgfVxuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBfLmJpbmRBbGwodmlldyk7XG4gICAgICogalF1ZXJ5KCcjZG9jcycpLm9uKCdjbGljaycsIHZpZXcub25DbGljayk7XG4gICAgICogLy8gPT4gbG9ncyAnY2xpY2tlZCBkb2NzJywgd2hlbiB0aGUgYnV0dG9uIGlzIGNsaWNrZWRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBiaW5kQWxsKG9iamVjdCkge1xuICAgICAgdmFyIGZ1bmNzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBiYXNlRmxhdHRlbihhcmd1bWVudHMsIHRydWUsIGZhbHNlLCAxKSA6IGZ1bmN0aW9ucyhvYmplY3QpLFxuICAgICAgICAgIGluZGV4ID0gLTEsXG4gICAgICAgICAgbGVuZ3RoID0gZnVuY3MubGVuZ3RoO1xuXG4gICAgICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgICAgICB2YXIga2V5ID0gZnVuY3NbaW5kZXhdO1xuICAgICAgICBvYmplY3Rba2V5XSA9IGNyZWF0ZVdyYXBwZXIob2JqZWN0W2tleV0sIDEsIG51bGwsIG51bGwsIG9iamVjdCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCwgaW52b2tlcyB0aGUgbWV0aG9kIGF0IGBvYmplY3Rba2V5XWBcbiAgICAgKiBhbmQgcHJlcGVuZHMgYW55IGFkZGl0aW9uYWwgYGJpbmRLZXlgIGFyZ3VtZW50cyB0byB0aG9zZSBwcm92aWRlZCB0byB0aGUgYm91bmRcbiAgICAgKiBmdW5jdGlvbi4gVGhpcyBtZXRob2QgZGlmZmVycyBmcm9tIGBfLmJpbmRgIGJ5IGFsbG93aW5nIGJvdW5kIGZ1bmN0aW9ucyB0b1xuICAgICAqIHJlZmVyZW5jZSBtZXRob2RzIHRoYXQgd2lsbCBiZSByZWRlZmluZWQgb3IgZG9uJ3QgeWV0IGV4aXN0LlxuICAgICAqIFNlZSBodHRwOi8vbWljaGF1eC5jYS9hcnRpY2xlcy9sYXp5LWZ1bmN0aW9uLWRlZmluaXRpb24tcGF0dGVybi5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBGdW5jdGlvbnNcbiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdGhlIG1ldGhvZCBiZWxvbmdzIHRvLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgbWV0aG9kLlxuICAgICAqIEBwYXJhbSB7Li4uKn0gW2FyZ10gQXJndW1lbnRzIHRvIGJlIHBhcnRpYWxseSBhcHBsaWVkLlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGJvdW5kIGZ1bmN0aW9uLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgb2JqZWN0ID0ge1xuICAgICAqICAgJ25hbWUnOiAnZnJlZCcsXG4gICAgICogICAnZ3JlZXQnOiBmdW5jdGlvbihncmVldGluZykge1xuICAgICAqICAgICByZXR1cm4gZ3JlZXRpbmcgKyAnICcgKyB0aGlzLm5hbWU7XG4gICAgICogICB9XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIHZhciBmdW5jID0gXy5iaW5kS2V5KG9iamVjdCwgJ2dyZWV0JywgJ2hpJyk7XG4gICAgICogZnVuYygpO1xuICAgICAqIC8vID0+ICdoaSBmcmVkJ1xuICAgICAqXG4gICAgICogb2JqZWN0LmdyZWV0ID0gZnVuY3Rpb24oZ3JlZXRpbmcpIHtcbiAgICAgKiAgIHJldHVybiBncmVldGluZyArICd5YSAnICsgdGhpcy5uYW1lICsgJyEnO1xuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBmdW5jKCk7XG4gICAgICogLy8gPT4gJ2hpeWEgZnJlZCEnXG4gICAgICovXG4gICAgZnVuY3Rpb24gYmluZEtleShvYmplY3QsIGtleSkge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAyXG4gICAgICAgID8gY3JlYXRlV3JhcHBlcihrZXksIDE5LCBzbGljZShhcmd1bWVudHMsIDIpLCBudWxsLCBvYmplY3QpXG4gICAgICAgIDogY3JlYXRlV3JhcHBlcihrZXksIDMsIG51bGwsIG51bGwsIG9iamVjdCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQgaXMgdGhlIGNvbXBvc2l0aW9uIG9mIHRoZSBwcm92aWRlZCBmdW5jdGlvbnMsXG4gICAgICogd2hlcmUgZWFjaCBmdW5jdGlvbiBjb25zdW1lcyB0aGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBmdW5jdGlvbiB0aGF0IGZvbGxvd3MuXG4gICAgICogRm9yIGV4YW1wbGUsIGNvbXBvc2luZyB0aGUgZnVuY3Rpb25zIGBmKClgLCBgZygpYCwgYW5kIGBoKClgIHByb2R1Y2VzIGBmKGcoaCgpKSlgLlxuICAgICAqIEVhY2ggZnVuY3Rpb24gaXMgZXhlY3V0ZWQgd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgdGhlIGNvbXBvc2VkIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEZ1bmN0aW9uc1xuICAgICAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IFtmdW5jXSBGdW5jdGlvbnMgdG8gY29tcG9zZS5cbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBjb21wb3NlZCBmdW5jdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIHJlYWxOYW1lTWFwID0ge1xuICAgICAqICAgJ3BlYmJsZXMnOiAncGVuZWxvcGUnXG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIHZhciBmb3JtYXQgPSBmdW5jdGlvbihuYW1lKSB7XG4gICAgICogICBuYW1lID0gcmVhbE5hbWVNYXBbbmFtZS50b0xvd2VyQ2FzZSgpXSB8fCBuYW1lO1xuICAgICAqICAgcmV0dXJuIG5hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCk7XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIHZhciBncmVldCA9IGZ1bmN0aW9uKGZvcm1hdHRlZCkge1xuICAgICAqICAgcmV0dXJuICdIaXlhICcgKyBmb3JtYXR0ZWQgKyAnISc7XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIHZhciB3ZWxjb21lID0gXy5jb21wb3NlKGdyZWV0LCBmb3JtYXQpO1xuICAgICAqIHdlbGNvbWUoJ3BlYmJsZXMnKTtcbiAgICAgKiAvLyA9PiAnSGl5YSBQZW5lbG9wZSEnXG4gICAgICovXG4gICAgZnVuY3Rpb24gY29tcG9zZSgpIHtcbiAgICAgIHZhciBmdW5jcyA9IGFyZ3VtZW50cyxcbiAgICAgICAgICBsZW5ndGggPSBmdW5jcy5sZW5ndGg7XG5cbiAgICAgIHdoaWxlIChsZW5ndGgtLSkge1xuICAgICAgICBpZiAoIWlzRnVuY3Rpb24oZnVuY3NbbGVuZ3RoXSkpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzLFxuICAgICAgICAgICAgbGVuZ3RoID0gZnVuY3MubGVuZ3RoO1xuXG4gICAgICAgIHdoaWxlIChsZW5ndGgtLSkge1xuICAgICAgICAgIGFyZ3MgPSBbZnVuY3NbbGVuZ3RoXS5hcHBseSh0aGlzLCBhcmdzKV07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFyZ3NbMF07XG4gICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB3aGljaCBhY2NlcHRzIG9uZSBvciBtb3JlIGFyZ3VtZW50cyBvZiBgZnVuY2AgdGhhdCB3aGVuXG4gICAgICogaW52b2tlZCBlaXRoZXIgZXhlY3V0ZXMgYGZ1bmNgIHJldHVybmluZyBpdHMgcmVzdWx0LCBpZiBhbGwgYGZ1bmNgIGFyZ3VtZW50c1xuICAgICAqIGhhdmUgYmVlbiBwcm92aWRlZCwgb3IgcmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgYWNjZXB0cyBvbmUgb3IgbW9yZSBvZiB0aGVcbiAgICAgKiByZW1haW5pbmcgYGZ1bmNgIGFyZ3VtZW50cywgYW5kIHNvIG9uLiBUaGUgYXJpdHkgb2YgYGZ1bmNgIGNhbiBiZSBzcGVjaWZpZWRcbiAgICAgKiBpZiBgZnVuYy5sZW5ndGhgIGlzIG5vdCBzdWZmaWNpZW50LlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEZ1bmN0aW9uc1xuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGN1cnJ5LlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbYXJpdHk9ZnVuYy5sZW5ndGhdIFRoZSBhcml0eSBvZiBgZnVuY2AuXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgY3VycmllZCBmdW5jdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGN1cnJpZWQgPSBfLmN1cnJ5KGZ1bmN0aW9uKGEsIGIsIGMpIHtcbiAgICAgKiAgIGNvbnNvbGUubG9nKGEgKyBiICsgYyk7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiBjdXJyaWVkKDEpKDIpKDMpO1xuICAgICAqIC8vID0+IDZcbiAgICAgKlxuICAgICAqIGN1cnJpZWQoMSwgMikoMyk7XG4gICAgICogLy8gPT4gNlxuICAgICAqXG4gICAgICogY3VycmllZCgxLCAyLCAzKTtcbiAgICAgKiAvLyA9PiA2XG4gICAgICovXG4gICAgZnVuY3Rpb24gY3VycnkoZnVuYywgYXJpdHkpIHtcbiAgICAgIGFyaXR5ID0gdHlwZW9mIGFyaXR5ID09ICdudW1iZXInID8gYXJpdHkgOiAoK2FyaXR5IHx8IGZ1bmMubGVuZ3RoKTtcbiAgICAgIHJldHVybiBjcmVhdGVXcmFwcGVyKGZ1bmMsIDQsIG51bGwsIG51bGwsIG51bGwsIGFyaXR5KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCB3aWxsIGRlbGF5IHRoZSBleGVjdXRpb24gb2YgYGZ1bmNgIHVudGlsIGFmdGVyXG4gICAgICogYHdhaXRgIG1pbGxpc2Vjb25kcyBoYXZlIGVsYXBzZWQgc2luY2UgdGhlIGxhc3QgdGltZSBpdCB3YXMgaW52b2tlZC5cbiAgICAgKiBQcm92aWRlIGFuIG9wdGlvbnMgb2JqZWN0IHRvIGluZGljYXRlIHRoYXQgYGZ1bmNgIHNob3VsZCBiZSBpbnZva2VkIG9uXG4gICAgICogdGhlIGxlYWRpbmcgYW5kL29yIHRyYWlsaW5nIGVkZ2Ugb2YgdGhlIGB3YWl0YCB0aW1lb3V0LiBTdWJzZXF1ZW50IGNhbGxzXG4gICAgICogdG8gdGhlIGRlYm91bmNlZCBmdW5jdGlvbiB3aWxsIHJldHVybiB0aGUgcmVzdWx0IG9mIHRoZSBsYXN0IGBmdW5jYCBjYWxsLlxuICAgICAqXG4gICAgICogTm90ZTogSWYgYGxlYWRpbmdgIGFuZCBgdHJhaWxpbmdgIG9wdGlvbnMgYXJlIGB0cnVlYCBgZnVuY2Agd2lsbCBiZSBjYWxsZWRcbiAgICAgKiBvbiB0aGUgdHJhaWxpbmcgZWRnZSBvZiB0aGUgdGltZW91dCBvbmx5IGlmIHRoZSB0aGUgZGVib3VuY2VkIGZ1bmN0aW9uIGlzXG4gICAgICogaW52b2tlZCBtb3JlIHRoYW4gb25jZSBkdXJpbmcgdGhlIGB3YWl0YCB0aW1lb3V0LlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEZ1bmN0aW9uc1xuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRlYm91bmNlLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB3YWl0IFRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIHRvIGRlbGF5LlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gVGhlIG9wdGlvbnMgb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMubGVhZGluZz1mYWxzZV0gU3BlY2lmeSBleGVjdXRpb24gb24gdGhlIGxlYWRpbmcgZWRnZSBvZiB0aGUgdGltZW91dC5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubWF4V2FpdF0gVGhlIG1heGltdW0gdGltZSBgZnVuY2AgaXMgYWxsb3dlZCB0byBiZSBkZWxheWVkIGJlZm9yZSBpdCdzIGNhbGxlZC5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnRyYWlsaW5nPXRydWVdIFNwZWNpZnkgZXhlY3V0aW9uIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGRlYm91bmNlZCBmdW5jdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy8gYXZvaWQgY29zdGx5IGNhbGN1bGF0aW9ucyB3aGlsZSB0aGUgd2luZG93IHNpemUgaXMgaW4gZmx1eFxuICAgICAqIHZhciBsYXp5TGF5b3V0ID0gXy5kZWJvdW5jZShjYWxjdWxhdGVMYXlvdXQsIDE1MCk7XG4gICAgICogalF1ZXJ5KHdpbmRvdykub24oJ3Jlc2l6ZScsIGxhenlMYXlvdXQpO1xuICAgICAqXG4gICAgICogLy8gZXhlY3V0ZSBgc2VuZE1haWxgIHdoZW4gdGhlIGNsaWNrIGV2ZW50IGlzIGZpcmVkLCBkZWJvdW5jaW5nIHN1YnNlcXVlbnQgY2FsbHNcbiAgICAgKiBqUXVlcnkoJyNwb3N0Ym94Jykub24oJ2NsaWNrJywgXy5kZWJvdW5jZShzZW5kTWFpbCwgMzAwLCB7XG4gICAgICogICAnbGVhZGluZyc6IHRydWUsXG4gICAgICogICAndHJhaWxpbmcnOiBmYWxzZVxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogLy8gZW5zdXJlIGBiYXRjaExvZ2AgaXMgZXhlY3V0ZWQgb25jZSBhZnRlciAxIHNlY29uZCBvZiBkZWJvdW5jZWQgY2FsbHNcbiAgICAgKiB2YXIgc291cmNlID0gbmV3IEV2ZW50U291cmNlKCcvc3RyZWFtJyk7XG4gICAgICogc291cmNlLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBfLmRlYm91bmNlKGJhdGNoTG9nLCAyNTAsIHtcbiAgICAgKiAgICdtYXhXYWl0JzogMTAwMFxuICAgICAqIH0sIGZhbHNlKTtcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBvcHRpb25zKSB7XG4gICAgICB2YXIgYXJncyxcbiAgICAgICAgICBtYXhUaW1lb3V0SWQsXG4gICAgICAgICAgcmVzdWx0LFxuICAgICAgICAgIHN0YW1wLFxuICAgICAgICAgIHRoaXNBcmcsXG4gICAgICAgICAgdGltZW91dElkLFxuICAgICAgICAgIHRyYWlsaW5nQ2FsbCxcbiAgICAgICAgICBsYXN0Q2FsbGVkID0gMCxcbiAgICAgICAgICBtYXhXYWl0ID0gZmFsc2UsXG4gICAgICAgICAgdHJhaWxpbmcgPSB0cnVlO1xuXG4gICAgICBpZiAoIWlzRnVuY3Rpb24oZnVuYykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcjtcbiAgICAgIH1cbiAgICAgIHdhaXQgPSBuYXRpdmVNYXgoMCwgd2FpdCkgfHwgMDtcbiAgICAgIGlmIChvcHRpb25zID09PSB0cnVlKSB7XG4gICAgICAgIHZhciBsZWFkaW5nID0gdHJ1ZTtcbiAgICAgICAgdHJhaWxpbmcgPSBmYWxzZTtcbiAgICAgIH0gZWxzZSBpZiAoaXNPYmplY3Qob3B0aW9ucykpIHtcbiAgICAgICAgbGVhZGluZyA9IG9wdGlvbnMubGVhZGluZztcbiAgICAgICAgbWF4V2FpdCA9ICdtYXhXYWl0JyBpbiBvcHRpb25zICYmIChuYXRpdmVNYXgod2FpdCwgb3B0aW9ucy5tYXhXYWl0KSB8fCAwKTtcbiAgICAgICAgdHJhaWxpbmcgPSAndHJhaWxpbmcnIGluIG9wdGlvbnMgPyBvcHRpb25zLnRyYWlsaW5nIDogdHJhaWxpbmc7XG4gICAgICB9XG4gICAgICB2YXIgZGVsYXllZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgcmVtYWluaW5nID0gd2FpdCAtIChub3coKSAtIHN0YW1wKTtcbiAgICAgICAgaWYgKHJlbWFpbmluZyA8PSAwKSB7XG4gICAgICAgICAgaWYgKG1heFRpbWVvdXRJZCkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KG1heFRpbWVvdXRJZCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhciBpc0NhbGxlZCA9IHRyYWlsaW5nQ2FsbDtcbiAgICAgICAgICBtYXhUaW1lb3V0SWQgPSB0aW1lb3V0SWQgPSB0cmFpbGluZ0NhbGwgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgaWYgKGlzQ2FsbGVkKSB7XG4gICAgICAgICAgICBsYXN0Q2FsbGVkID0gbm93KCk7XG4gICAgICAgICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgICAgICAgaWYgKCF0aW1lb3V0SWQgJiYgIW1heFRpbWVvdXRJZCkge1xuICAgICAgICAgICAgICBhcmdzID0gdGhpc0FyZyA9IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZGVsYXllZCwgcmVtYWluaW5nKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgdmFyIG1heERlbGF5ZWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHRpbWVvdXRJZCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICB9XG4gICAgICAgIG1heFRpbWVvdXRJZCA9IHRpbWVvdXRJZCA9IHRyYWlsaW5nQ2FsbCA9IHVuZGVmaW5lZDtcbiAgICAgICAgaWYgKHRyYWlsaW5nIHx8IChtYXhXYWl0ICE9PSB3YWl0KSkge1xuICAgICAgICAgIGxhc3RDYWxsZWQgPSBub3coKTtcbiAgICAgICAgICByZXN1bHQgPSBmdW5jLmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgICAgIGlmICghdGltZW91dElkICYmICFtYXhUaW1lb3V0SWQpIHtcbiAgICAgICAgICAgIGFyZ3MgPSB0aGlzQXJnID0gbnVsbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcbiAgICAgICAgc3RhbXAgPSBub3coKTtcbiAgICAgICAgdGhpc0FyZyA9IHRoaXM7XG4gICAgICAgIHRyYWlsaW5nQ2FsbCA9IHRyYWlsaW5nICYmICh0aW1lb3V0SWQgfHwgIWxlYWRpbmcpO1xuXG4gICAgICAgIGlmIChtYXhXYWl0ID09PSBmYWxzZSkge1xuICAgICAgICAgIHZhciBsZWFkaW5nQ2FsbCA9IGxlYWRpbmcgJiYgIXRpbWVvdXRJZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoIW1heFRpbWVvdXRJZCAmJiAhbGVhZGluZykge1xuICAgICAgICAgICAgbGFzdENhbGxlZCA9IHN0YW1wO1xuICAgICAgICAgIH1cbiAgICAgICAgICB2YXIgcmVtYWluaW5nID0gbWF4V2FpdCAtIChzdGFtcCAtIGxhc3RDYWxsZWQpLFxuICAgICAgICAgICAgICBpc0NhbGxlZCA9IHJlbWFpbmluZyA8PSAwO1xuXG4gICAgICAgICAgaWYgKGlzQ2FsbGVkKSB7XG4gICAgICAgICAgICBpZiAobWF4VGltZW91dElkKSB7XG4gICAgICAgICAgICAgIG1heFRpbWVvdXRJZCA9IGNsZWFyVGltZW91dChtYXhUaW1lb3V0SWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGFzdENhbGxlZCA9IHN0YW1wO1xuICAgICAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSBpZiAoIW1heFRpbWVvdXRJZCkge1xuICAgICAgICAgICAgbWF4VGltZW91dElkID0gc2V0VGltZW91dChtYXhEZWxheWVkLCByZW1haW5pbmcpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNDYWxsZWQgJiYgdGltZW91dElkKSB7XG4gICAgICAgICAgdGltZW91dElkID0gY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIXRpbWVvdXRJZCAmJiB3YWl0ICE9PSBtYXhXYWl0KSB7XG4gICAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dChkZWxheWVkLCB3YWl0KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobGVhZGluZ0NhbGwpIHtcbiAgICAgICAgICBpc0NhbGxlZCA9IHRydWU7XG4gICAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNDYWxsZWQgJiYgIXRpbWVvdXRJZCAmJiAhbWF4VGltZW91dElkKSB7XG4gICAgICAgICAgYXJncyA9IHRoaXNBcmcgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIERlZmVycyBleGVjdXRpbmcgdGhlIGBmdW5jYCBmdW5jdGlvbiB1bnRpbCB0aGUgY3VycmVudCBjYWxsIHN0YWNrIGhhcyBjbGVhcmVkLlxuICAgICAqIEFkZGl0aW9uYWwgYXJndW1lbnRzIHdpbGwgYmUgcHJvdmlkZWQgdG8gYGZ1bmNgIHdoZW4gaXQgaXMgaW52b2tlZC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBGdW5jdGlvbnNcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBkZWZlci5cbiAgICAgKiBAcGFyYW0gey4uLip9IFthcmddIEFyZ3VtZW50cyB0byBpbnZva2UgdGhlIGZ1bmN0aW9uIHdpdGguXG4gICAgICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgdGltZXIgaWQuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8uZGVmZXIoZnVuY3Rpb24odGV4dCkgeyBjb25zb2xlLmxvZyh0ZXh0KTsgfSwgJ2RlZmVycmVkJyk7XG4gICAgICogLy8gbG9ncyAnZGVmZXJyZWQnIGFmdGVyIG9uZSBvciBtb3JlIG1pbGxpc2Vjb25kc1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRlZmVyKGZ1bmMpIHtcbiAgICAgIGlmICghaXNGdW5jdGlvbihmdW5jKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yO1xuICAgICAgfVxuICAgICAgdmFyIGFyZ3MgPSBzbGljZShhcmd1bWVudHMsIDEpO1xuICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IGZ1bmMuYXBwbHkodW5kZWZpbmVkLCBhcmdzKTsgfSwgMSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRXhlY3V0ZXMgdGhlIGBmdW5jYCBmdW5jdGlvbiBhZnRlciBgd2FpdGAgbWlsbGlzZWNvbmRzLiBBZGRpdGlvbmFsIGFyZ3VtZW50c1xuICAgICAqIHdpbGwgYmUgcHJvdmlkZWQgdG8gYGZ1bmNgIHdoZW4gaXQgaXMgaW52b2tlZC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBGdW5jdGlvbnNcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBkZWxheS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gd2FpdCBUaGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byBkZWxheSBleGVjdXRpb24uXG4gICAgICogQHBhcmFtIHsuLi4qfSBbYXJnXSBBcmd1bWVudHMgdG8gaW52b2tlIHRoZSBmdW5jdGlvbiB3aXRoLlxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIHRpbWVyIGlkLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmRlbGF5KGZ1bmN0aW9uKHRleHQpIHsgY29uc29sZS5sb2codGV4dCk7IH0sIDEwMDAsICdsYXRlcicpO1xuICAgICAqIC8vID0+IGxvZ3MgJ2xhdGVyJyBhZnRlciBvbmUgc2Vjb25kXG4gICAgICovXG4gICAgZnVuY3Rpb24gZGVsYXkoZnVuYywgd2FpdCkge1xuICAgICAgaWYgKCFpc0Z1bmN0aW9uKGZ1bmMpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3I7XG4gICAgICB9XG4gICAgICB2YXIgYXJncyA9IHNsaWNlKGFyZ3VtZW50cywgMik7XG4gICAgICByZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpIHsgZnVuYy5hcHBseSh1bmRlZmluZWQsIGFyZ3MpOyB9LCB3YWl0KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBtZW1vaXplcyB0aGUgcmVzdWx0IG9mIGBmdW5jYC4gSWYgYHJlc29sdmVyYCBpc1xuICAgICAqIHByb3ZpZGVkIGl0IHdpbGwgYmUgdXNlZCB0byBkZXRlcm1pbmUgdGhlIGNhY2hlIGtleSBmb3Igc3RvcmluZyB0aGUgcmVzdWx0XG4gICAgICogYmFzZWQgb24gdGhlIGFyZ3VtZW50cyBwcm92aWRlZCB0byB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24uIEJ5IGRlZmF1bHQsIHRoZVxuICAgICAqIGZpcnN0IGFyZ3VtZW50IHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbiBpcyB1c2VkIGFzIHRoZSBjYWNoZSBrZXkuXG4gICAgICogVGhlIGBmdW5jYCBpcyBleGVjdXRlZCB3aXRoIHRoZSBgdGhpc2AgYmluZGluZyBvZiB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24uXG4gICAgICogVGhlIHJlc3VsdCBjYWNoZSBpcyBleHBvc2VkIGFzIHRoZSBgY2FjaGVgIHByb3BlcnR5IG9uIHRoZSBtZW1vaXplZCBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBGdW5jdGlvbnNcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBoYXZlIGl0cyBvdXRwdXQgbWVtb2l6ZWQuXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW3Jlc29sdmVyXSBBIGZ1bmN0aW9uIHVzZWQgdG8gcmVzb2x2ZSB0aGUgY2FjaGUga2V5LlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IG1lbW9pemluZyBmdW5jdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGZpYm9uYWNjaSA9IF8ubWVtb2l6ZShmdW5jdGlvbihuKSB7XG4gICAgICogICByZXR1cm4gbiA8IDIgPyBuIDogZmlib25hY2NpKG4gLSAxKSArIGZpYm9uYWNjaShuIC0gMik7XG4gICAgICogfSk7XG4gICAgICpcbiAgICAgKiBmaWJvbmFjY2koOSlcbiAgICAgKiAvLyA9PiAzNFxuICAgICAqXG4gICAgICogdmFyIGRhdGEgPSB7XG4gICAgICogICAnZnJlZCc6IHsgJ25hbWUnOiAnZnJlZCcsICdhZ2UnOiA0MCB9LFxuICAgICAqICAgJ3BlYmJsZXMnOiB7ICduYW1lJzogJ3BlYmJsZXMnLCAnYWdlJzogMSB9XG4gICAgICogfTtcbiAgICAgKlxuICAgICAqIC8vIG1vZGlmeWluZyB0aGUgcmVzdWx0IGNhY2hlXG4gICAgICogdmFyIGdldCA9IF8ubWVtb2l6ZShmdW5jdGlvbihuYW1lKSB7IHJldHVybiBkYXRhW25hbWVdOyB9LCBfLmlkZW50aXR5KTtcbiAgICAgKiBnZXQoJ3BlYmJsZXMnKTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ3BlYmJsZXMnLCAnYWdlJzogMSB9XG4gICAgICpcbiAgICAgKiBnZXQuY2FjaGUucGViYmxlcy5uYW1lID0gJ3BlbmVsb3BlJztcbiAgICAgKiBnZXQoJ3BlYmJsZXMnKTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ3BlbmVsb3BlJywgJ2FnZSc6IDEgfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIG1lbW9pemUoZnVuYywgcmVzb2x2ZXIpIHtcbiAgICAgIGlmICghaXNGdW5jdGlvbihmdW5jKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yO1xuICAgICAgfVxuICAgICAgdmFyIG1lbW9pemVkID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBjYWNoZSA9IG1lbW9pemVkLmNhY2hlLFxuICAgICAgICAgICAga2V5ID0gcmVzb2x2ZXIgPyByZXNvbHZlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDoga2V5UHJlZml4ICsgYXJndW1lbnRzWzBdO1xuXG4gICAgICAgIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGNhY2hlLCBrZXkpXG4gICAgICAgICAgPyBjYWNoZVtrZXldXG4gICAgICAgICAgOiAoY2FjaGVba2V5XSA9IGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gICAgICB9XG4gICAgICBtZW1vaXplZC5jYWNoZSA9IHt9O1xuICAgICAgcmV0dXJuIG1lbW9pemVkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IGlzIHJlc3RyaWN0ZWQgdG8gZXhlY3V0ZSBgZnVuY2Agb25jZS4gUmVwZWF0IGNhbGxzIHRvXG4gICAgICogdGhlIGZ1bmN0aW9uIHdpbGwgcmV0dXJuIHRoZSB2YWx1ZSBvZiB0aGUgZmlyc3QgY2FsbC4gVGhlIGBmdW5jYCBpcyBleGVjdXRlZFxuICAgICAqIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIHRoZSBjcmVhdGVkIGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEZ1bmN0aW9uc1xuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHJlc3RyaWN0LlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHJlc3RyaWN0ZWQgZnVuY3Rpb24uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBpbml0aWFsaXplID0gXy5vbmNlKGNyZWF0ZUFwcGxpY2F0aW9uKTtcbiAgICAgKiBpbml0aWFsaXplKCk7XG4gICAgICogaW5pdGlhbGl6ZSgpO1xuICAgICAqIC8vIGBpbml0aWFsaXplYCBleGVjdXRlcyBgY3JlYXRlQXBwbGljYXRpb25gIG9uY2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBvbmNlKGZ1bmMpIHtcbiAgICAgIHZhciByYW4sXG4gICAgICAgICAgcmVzdWx0O1xuXG4gICAgICBpZiAoIWlzRnVuY3Rpb24oZnVuYykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKHJhbikge1xuICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmFuID0gdHJ1ZTtcbiAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgICAgIC8vIGNsZWFyIHRoZSBgZnVuY2AgdmFyaWFibGUgc28gdGhlIGZ1bmN0aW9uIG1heSBiZSBnYXJiYWdlIGNvbGxlY3RlZFxuICAgICAgICBmdW5jID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gY2FsbGVkLCBpbnZva2VzIGBmdW5jYCB3aXRoIGFueSBhZGRpdGlvbmFsXG4gICAgICogYHBhcnRpYWxgIGFyZ3VtZW50cyBwcmVwZW5kZWQgdG8gdGhvc2UgcHJvdmlkZWQgdG8gdGhlIG5ldyBmdW5jdGlvbi4gVGhpc1xuICAgICAqIG1ldGhvZCBpcyBzaW1pbGFyIHRvIGBfLmJpbmRgIGV4Y2VwdCBpdCBkb2VzICoqbm90KiogYWx0ZXIgdGhlIGB0aGlzYCBiaW5kaW5nLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEZ1bmN0aW9uc1xuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHBhcnRpYWxseSBhcHBseSBhcmd1bWVudHMgdG8uXG4gICAgICogQHBhcmFtIHsuLi4qfSBbYXJnXSBBcmd1bWVudHMgdG8gYmUgcGFydGlhbGx5IGFwcGxpZWQuXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgcGFydGlhbGx5IGFwcGxpZWQgZnVuY3Rpb24uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBncmVldCA9IGZ1bmN0aW9uKGdyZWV0aW5nLCBuYW1lKSB7IHJldHVybiBncmVldGluZyArICcgJyArIG5hbWU7IH07XG4gICAgICogdmFyIGhpID0gXy5wYXJ0aWFsKGdyZWV0LCAnaGknKTtcbiAgICAgKiBoaSgnZnJlZCcpO1xuICAgICAqIC8vID0+ICdoaSBmcmVkJ1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHBhcnRpYWwoZnVuYykge1xuICAgICAgcmV0dXJuIGNyZWF0ZVdyYXBwZXIoZnVuYywgMTYsIHNsaWNlKGFyZ3VtZW50cywgMSkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIGlzIGxpa2UgYF8ucGFydGlhbGAgZXhjZXB0IHRoYXQgYHBhcnRpYWxgIGFyZ3VtZW50cyBhcmVcbiAgICAgKiBhcHBlbmRlZCB0byB0aG9zZSBwcm92aWRlZCB0byB0aGUgbmV3IGZ1bmN0aW9uLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IEZ1bmN0aW9uc1xuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIHBhcnRpYWxseSBhcHBseSBhcmd1bWVudHMgdG8uXG4gICAgICogQHBhcmFtIHsuLi4qfSBbYXJnXSBBcmd1bWVudHMgdG8gYmUgcGFydGlhbGx5IGFwcGxpZWQuXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgcGFydGlhbGx5IGFwcGxpZWQgZnVuY3Rpb24uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBkZWZhdWx0c0RlZXAgPSBfLnBhcnRpYWxSaWdodChfLm1lcmdlLCBfLmRlZmF1bHRzKTtcbiAgICAgKlxuICAgICAqIHZhciBvcHRpb25zID0ge1xuICAgICAqICAgJ3ZhcmlhYmxlJzogJ2RhdGEnLFxuICAgICAqICAgJ2ltcG9ydHMnOiB7ICdqcSc6ICQgfVxuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBkZWZhdWx0c0RlZXAob3B0aW9ucywgXy50ZW1wbGF0ZVNldHRpbmdzKTtcbiAgICAgKlxuICAgICAqIG9wdGlvbnMudmFyaWFibGVcbiAgICAgKiAvLyA9PiAnZGF0YSdcbiAgICAgKlxuICAgICAqIG9wdGlvbnMuaW1wb3J0c1xuICAgICAqIC8vID0+IHsgJ18nOiBfLCAnanEnOiAkIH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBwYXJ0aWFsUmlnaHQoZnVuYykge1xuICAgICAgcmV0dXJuIGNyZWF0ZVdyYXBwZXIoZnVuYywgMzIsIG51bGwsIHNsaWNlKGFyZ3VtZW50cywgMSkpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGV4ZWN1dGVkLCB3aWxsIG9ubHkgY2FsbCB0aGUgYGZ1bmNgIGZ1bmN0aW9uXG4gICAgICogYXQgbW9zdCBvbmNlIHBlciBldmVyeSBgd2FpdGAgbWlsbGlzZWNvbmRzLiBQcm92aWRlIGFuIG9wdGlvbnMgb2JqZWN0IHRvXG4gICAgICogaW5kaWNhdGUgdGhhdCBgZnVuY2Agc2hvdWxkIGJlIGludm9rZWQgb24gdGhlIGxlYWRpbmcgYW5kL29yIHRyYWlsaW5nIGVkZ2VcbiAgICAgKiBvZiB0aGUgYHdhaXRgIHRpbWVvdXQuIFN1YnNlcXVlbnQgY2FsbHMgdG8gdGhlIHRocm90dGxlZCBmdW5jdGlvbiB3aWxsXG4gICAgICogcmV0dXJuIHRoZSByZXN1bHQgb2YgdGhlIGxhc3QgYGZ1bmNgIGNhbGwuXG4gICAgICpcbiAgICAgKiBOb3RlOiBJZiBgbGVhZGluZ2AgYW5kIGB0cmFpbGluZ2Agb3B0aW9ucyBhcmUgYHRydWVgIGBmdW5jYCB3aWxsIGJlIGNhbGxlZFxuICAgICAqIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0IG9ubHkgaWYgdGhlIHRoZSB0aHJvdHRsZWQgZnVuY3Rpb24gaXNcbiAgICAgKiBpbnZva2VkIG1vcmUgdGhhbiBvbmNlIGR1cmluZyB0aGUgYHdhaXRgIHRpbWVvdXQuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgRnVuY3Rpb25zXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gdGhyb3R0bGUuXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHdhaXQgVGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdG8gdGhyb3R0bGUgZXhlY3V0aW9ucyB0by5cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIFRoZSBvcHRpb25zIG9iamVjdC5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmxlYWRpbmc9dHJ1ZV0gU3BlY2lmeSBleGVjdXRpb24gb24gdGhlIGxlYWRpbmcgZWRnZSBvZiB0aGUgdGltZW91dC5cbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnRyYWlsaW5nPXRydWVdIFNwZWNpZnkgZXhlY3V0aW9uIG9uIHRoZSB0cmFpbGluZyBlZGdlIG9mIHRoZSB0aW1lb3V0LlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHRocm90dGxlZCBmdW5jdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogLy8gYXZvaWQgZXhjZXNzaXZlbHkgdXBkYXRpbmcgdGhlIHBvc2l0aW9uIHdoaWxlIHNjcm9sbGluZ1xuICAgICAqIHZhciB0aHJvdHRsZWQgPSBfLnRocm90dGxlKHVwZGF0ZVBvc2l0aW9uLCAxMDApO1xuICAgICAqIGpRdWVyeSh3aW5kb3cpLm9uKCdzY3JvbGwnLCB0aHJvdHRsZWQpO1xuICAgICAqXG4gICAgICogLy8gZXhlY3V0ZSBgcmVuZXdUb2tlbmAgd2hlbiB0aGUgY2xpY2sgZXZlbnQgaXMgZmlyZWQsIGJ1dCBub3QgbW9yZSB0aGFuIG9uY2UgZXZlcnkgNSBtaW51dGVzXG4gICAgICogalF1ZXJ5KCcuaW50ZXJhY3RpdmUnKS5vbignY2xpY2snLCBfLnRocm90dGxlKHJlbmV3VG9rZW4sIDMwMDAwMCwge1xuICAgICAqICAgJ3RyYWlsaW5nJzogZmFsc2VcbiAgICAgKiB9KSk7XG4gICAgICovXG4gICAgZnVuY3Rpb24gdGhyb3R0bGUoZnVuYywgd2FpdCwgb3B0aW9ucykge1xuICAgICAgdmFyIGxlYWRpbmcgPSB0cnVlLFxuICAgICAgICAgIHRyYWlsaW5nID0gdHJ1ZTtcblxuICAgICAgaWYgKCFpc0Z1bmN0aW9uKGZ1bmMpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3I7XG4gICAgICB9XG4gICAgICBpZiAob3B0aW9ucyA9PT0gZmFsc2UpIHtcbiAgICAgICAgbGVhZGluZyA9IGZhbHNlO1xuICAgICAgfSBlbHNlIGlmIChpc09iamVjdChvcHRpb25zKSkge1xuICAgICAgICBsZWFkaW5nID0gJ2xlYWRpbmcnIGluIG9wdGlvbnMgPyBvcHRpb25zLmxlYWRpbmcgOiBsZWFkaW5nO1xuICAgICAgICB0cmFpbGluZyA9ICd0cmFpbGluZycgaW4gb3B0aW9ucyA/IG9wdGlvbnMudHJhaWxpbmcgOiB0cmFpbGluZztcbiAgICAgIH1cbiAgICAgIGRlYm91bmNlT3B0aW9ucy5sZWFkaW5nID0gbGVhZGluZztcbiAgICAgIGRlYm91bmNlT3B0aW9ucy5tYXhXYWl0ID0gd2FpdDtcbiAgICAgIGRlYm91bmNlT3B0aW9ucy50cmFpbGluZyA9IHRyYWlsaW5nO1xuXG4gICAgICByZXR1cm4gZGVib3VuY2UoZnVuYywgd2FpdCwgZGVib3VuY2VPcHRpb25zKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBwcm92aWRlcyBgdmFsdWVgIHRvIHRoZSB3cmFwcGVyIGZ1bmN0aW9uIGFzIGl0c1xuICAgICAqIGZpcnN0IGFyZ3VtZW50LiBBZGRpdGlvbmFsIGFyZ3VtZW50cyBwcm92aWRlZCB0byB0aGUgZnVuY3Rpb24gYXJlIGFwcGVuZGVkXG4gICAgICogdG8gdGhvc2UgcHJvdmlkZWQgdG8gdGhlIHdyYXBwZXIgZnVuY3Rpb24uIFRoZSB3cmFwcGVyIGlzIGV4ZWN1dGVkIHdpdGhcbiAgICAgKiB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgdGhlIGNyZWF0ZWQgZnVuY3Rpb24uXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgRnVuY3Rpb25zXG4gICAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gd3JhcC5cbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSB3cmFwcGVyIFRoZSB3cmFwcGVyIGZ1bmN0aW9uLlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgcCA9IF8ud3JhcChfLmVzY2FwZSwgZnVuY3Rpb24oZnVuYywgdGV4dCkge1xuICAgICAqICAgcmV0dXJuICc8cD4nICsgZnVuYyh0ZXh0KSArICc8L3A+JztcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIHAoJ0ZyZWQsIFdpbG1hLCAmIFBlYmJsZXMnKTtcbiAgICAgKiAvLyA9PiAnPHA+RnJlZCwgV2lsbWEsICZhbXA7IFBlYmJsZXM8L3A+J1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHdyYXAodmFsdWUsIHdyYXBwZXIpIHtcbiAgICAgIHJldHVybiBjcmVhdGVXcmFwcGVyKHdyYXBwZXIsIDE2LCBbdmFsdWVdKTtcbiAgICB9XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYHZhbHVlYC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBVdGlsaXRpZXNcbiAgICAgKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byByZXR1cm4gZnJvbSB0aGUgbmV3IGZ1bmN0aW9uLlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGZ1bmN0aW9uLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgb2JqZWN0ID0geyAnbmFtZSc6ICdmcmVkJyB9O1xuICAgICAqIHZhciBnZXR0ZXIgPSBfLmNvbnN0YW50KG9iamVjdCk7XG4gICAgICogZ2V0dGVyKCkgPT09IG9iamVjdDtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICovXG4gICAgZnVuY3Rpb24gY29uc3RhbnQodmFsdWUpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQcm9kdWNlcyBhIGNhbGxiYWNrIGJvdW5kIHRvIGFuIG9wdGlvbmFsIGB0aGlzQXJnYC4gSWYgYGZ1bmNgIGlzIGEgcHJvcGVydHlcbiAgICAgKiBuYW1lIHRoZSBjcmVhdGVkIGNhbGxiYWNrIHdpbGwgcmV0dXJuIHRoZSBwcm9wZXJ0eSB2YWx1ZSBmb3IgYSBnaXZlbiBlbGVtZW50LlxuICAgICAqIElmIGBmdW5jYCBpcyBhbiBvYmplY3QgdGhlIGNyZWF0ZWQgY2FsbGJhY2sgd2lsbCByZXR1cm4gYHRydWVgIGZvciBlbGVtZW50c1xuICAgICAqIHRoYXQgY29udGFpbiB0aGUgZXF1aXZhbGVudCBvYmplY3QgcHJvcGVydGllcywgb3RoZXJ3aXNlIGl0IHdpbGwgcmV0dXJuIGBmYWxzZWAuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgVXRpbGl0aWVzXG4gICAgICogQHBhcmFtIHsqfSBbZnVuYz1pZGVudGl0eV0gVGhlIHZhbHVlIHRvIGNvbnZlcnQgdG8gYSBjYWxsYmFjay5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgdGhlIGNyZWF0ZWQgY2FsbGJhY2suXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IFthcmdDb3VudF0gVGhlIG51bWJlciBvZiBhcmd1bWVudHMgdGhlIGNhbGxiYWNrIGFjY2VwdHMuXG4gICAgICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIGEgY2FsbGJhY2sgZnVuY3Rpb24uXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzYgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogLy8gd3JhcCB0byBjcmVhdGUgY3VzdG9tIGNhbGxiYWNrIHNob3J0aGFuZHNcbiAgICAgKiBfLmNyZWF0ZUNhbGxiYWNrID0gXy53cmFwKF8uY3JlYXRlQ2FsbGJhY2ssIGZ1bmN0aW9uKGZ1bmMsIGNhbGxiYWNrLCB0aGlzQXJnKSB7XG4gICAgICogICB2YXIgbWF0Y2ggPSAvXiguKz8pX18oW2dsXXQpKC4rKSQvLmV4ZWMoY2FsbGJhY2spO1xuICAgICAqICAgcmV0dXJuICFtYXRjaCA/IGZ1bmMoY2FsbGJhY2ssIHRoaXNBcmcpIDogZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICogICAgIHJldHVybiBtYXRjaFsyXSA9PSAnZ3QnID8gb2JqZWN0W21hdGNoWzFdXSA+IG1hdGNoWzNdIDogb2JqZWN0W21hdGNoWzFdXSA8IG1hdGNoWzNdO1xuICAgICAqICAgfTtcbiAgICAgKiB9KTtcbiAgICAgKlxuICAgICAqIF8uZmlsdGVyKGNoYXJhY3RlcnMsICdhZ2VfX2d0MzgnKTtcbiAgICAgKiAvLyA9PiBbeyAnbmFtZSc6ICdmcmVkJywgJ2FnZSc6IDQwIH1dXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlQ2FsbGJhY2soZnVuYywgdGhpc0FyZywgYXJnQ291bnQpIHtcbiAgICAgIHZhciB0eXBlID0gdHlwZW9mIGZ1bmM7XG4gICAgICBpZiAoZnVuYyA9PSBudWxsIHx8IHR5cGUgPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gYmFzZUNyZWF0ZUNhbGxiYWNrKGZ1bmMsIHRoaXNBcmcsIGFyZ0NvdW50KTtcbiAgICAgIH1cbiAgICAgIC8vIGhhbmRsZSBcIl8ucGx1Y2tcIiBzdHlsZSBjYWxsYmFjayBzaG9ydGhhbmRzXG4gICAgICBpZiAodHlwZSAhPSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gcHJvcGVydHkoZnVuYyk7XG4gICAgICB9XG4gICAgICB2YXIgcHJvcHMgPSBrZXlzKGZ1bmMpLFxuICAgICAgICAgIGtleSA9IHByb3BzWzBdLFxuICAgICAgICAgIGEgPSBmdW5jW2tleV07XG5cbiAgICAgIC8vIGhhbmRsZSBcIl8ud2hlcmVcIiBzdHlsZSBjYWxsYmFjayBzaG9ydGhhbmRzXG4gICAgICBpZiAocHJvcHMubGVuZ3RoID09IDEgJiYgYSA9PT0gYSAmJiAhaXNPYmplY3QoYSkpIHtcbiAgICAgICAgLy8gZmFzdCBwYXRoIHRoZSBjb21tb24gY2FzZSBvZiBwcm92aWRpbmcgYW4gb2JqZWN0IHdpdGggYSBzaW5nbGVcbiAgICAgICAgLy8gcHJvcGVydHkgY29udGFpbmluZyBhIHByaW1pdGl2ZSB2YWx1ZVxuICAgICAgICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICAgICAgdmFyIGIgPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICByZXR1cm4gYSA9PT0gYiAmJiAoYSAhPT0gMCB8fCAoMSAvIGEgPT0gMSAvIGIpKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgICAgdmFyIGxlbmd0aCA9IHByb3BzLmxlbmd0aCxcbiAgICAgICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuXG4gICAgICAgIHdoaWxlIChsZW5ndGgtLSkge1xuICAgICAgICAgIGlmICghKHJlc3VsdCA9IGJhc2VJc0VxdWFsKG9iamVjdFtwcm9wc1tsZW5ndGhdXSwgZnVuY1twcm9wc1tsZW5ndGhdXSwgbnVsbCwgdHJ1ZSkpKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29udmVydHMgdGhlIGNoYXJhY3RlcnMgYCZgLCBgPGAsIGA+YCwgYFwiYCwgYW5kIGAnYCBpbiBgc3RyaW5nYCB0byB0aGVpclxuICAgICAqIGNvcnJlc3BvbmRpbmcgSFRNTCBlbnRpdGllcy5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBVdGlsaXRpZXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gZXNjYXBlLlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGVzY2FwZWQgc3RyaW5nLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLmVzY2FwZSgnRnJlZCwgV2lsbWEsICYgUGViYmxlcycpO1xuICAgICAqIC8vID0+ICdGcmVkLCBXaWxtYSwgJmFtcDsgUGViYmxlcydcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBlc2NhcGUoc3RyaW5nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nID09IG51bGwgPyAnJyA6IFN0cmluZyhzdHJpbmcpLnJlcGxhY2UocmVVbmVzY2FwZWRIdG1sLCBlc2NhcGVIdG1sQ2hhcik7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgcmV0dXJucyB0aGUgZmlyc3QgYXJndW1lbnQgcHJvdmlkZWQgdG8gaXQuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgVXRpbGl0aWVzXG4gICAgICogQHBhcmFtIHsqfSB2YWx1ZSBBbnkgdmFsdWUuXG4gICAgICogQHJldHVybnMgeyp9IFJldHVybnMgYHZhbHVlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIG9iamVjdCA9IHsgJ25hbWUnOiAnZnJlZCcgfTtcbiAgICAgKiBfLmlkZW50aXR5KG9iamVjdCkgPT09IG9iamVjdDtcbiAgICAgKiAvLyA9PiB0cnVlXG4gICAgICovXG4gICAgZnVuY3Rpb24gaWRlbnRpdHkodmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGRzIGZ1bmN0aW9uIHByb3BlcnRpZXMgb2YgYSBzb3VyY2Ugb2JqZWN0IHRvIHRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gICAgICogSWYgYG9iamVjdGAgaXMgYSBmdW5jdGlvbiBtZXRob2RzIHdpbGwgYmUgYWRkZWQgdG8gaXRzIHByb3RvdHlwZSBhcyB3ZWxsLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IFV0aWxpdGllc1xuICAgICAqIEBwYXJhbSB7RnVuY3Rpb258T2JqZWN0fSBbb2JqZWN0PWxvZGFzaF0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IG9mIGZ1bmN0aW9ucyB0byBhZGQuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBUaGUgb3B0aW9ucyBvYmplY3QuXG4gICAgICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5jaGFpbj10cnVlXSBTcGVjaWZ5IHdoZXRoZXIgdGhlIGZ1bmN0aW9ucyBhZGRlZCBhcmUgY2hhaW5hYmxlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBmdW5jdGlvbiBjYXBpdGFsaXplKHN0cmluZykge1xuICAgICAqICAgcmV0dXJuIHN0cmluZy5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0cmluZy5zbGljZSgxKS50b0xvd2VyQ2FzZSgpO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIF8ubWl4aW4oeyAnY2FwaXRhbGl6ZSc6IGNhcGl0YWxpemUgfSk7XG4gICAgICogXy5jYXBpdGFsaXplKCdmcmVkJyk7XG4gICAgICogLy8gPT4gJ0ZyZWQnXG4gICAgICpcbiAgICAgKiBfKCdmcmVkJykuY2FwaXRhbGl6ZSgpLnZhbHVlKCk7XG4gICAgICogLy8gPT4gJ0ZyZWQnXG4gICAgICpcbiAgICAgKiBfLm1peGluKHsgJ2NhcGl0YWxpemUnOiBjYXBpdGFsaXplIH0sIHsgJ2NoYWluJzogZmFsc2UgfSk7XG4gICAgICogXygnZnJlZCcpLmNhcGl0YWxpemUoKTtcbiAgICAgKiAvLyA9PiAnRnJlZCdcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBtaXhpbihvYmplY3QsIHNvdXJjZSwgb3B0aW9ucykge1xuICAgICAgdmFyIGNoYWluID0gdHJ1ZSxcbiAgICAgICAgICBtZXRob2ROYW1lcyA9IHNvdXJjZSAmJiBmdW5jdGlvbnMoc291cmNlKTtcblxuICAgICAgaWYgKCFzb3VyY2UgfHwgKCFvcHRpb25zICYmICFtZXRob2ROYW1lcy5sZW5ndGgpKSB7XG4gICAgICAgIGlmIChvcHRpb25zID09IG51bGwpIHtcbiAgICAgICAgICBvcHRpb25zID0gc291cmNlO1xuICAgICAgICB9XG4gICAgICAgIGN0b3IgPSBsb2Rhc2hXcmFwcGVyO1xuICAgICAgICBzb3VyY2UgPSBvYmplY3Q7XG4gICAgICAgIG9iamVjdCA9IGxvZGFzaDtcbiAgICAgICAgbWV0aG9kTmFtZXMgPSBmdW5jdGlvbnMoc291cmNlKTtcbiAgICAgIH1cbiAgICAgIGlmIChvcHRpb25zID09PSBmYWxzZSkge1xuICAgICAgICBjaGFpbiA9IGZhbHNlO1xuICAgICAgfSBlbHNlIGlmIChpc09iamVjdChvcHRpb25zKSAmJiAnY2hhaW4nIGluIG9wdGlvbnMpIHtcbiAgICAgICAgY2hhaW4gPSBvcHRpb25zLmNoYWluO1xuICAgICAgfVxuICAgICAgdmFyIGN0b3IgPSBvYmplY3QsXG4gICAgICAgICAgaXNGdW5jID0gaXNGdW5jdGlvbihjdG9yKTtcblxuICAgICAgZm9yRWFjaChtZXRob2ROYW1lcywgZnVuY3Rpb24obWV0aG9kTmFtZSkge1xuICAgICAgICB2YXIgZnVuYyA9IG9iamVjdFttZXRob2ROYW1lXSA9IHNvdXJjZVttZXRob2ROYW1lXTtcbiAgICAgICAgaWYgKGlzRnVuYykge1xuICAgICAgICAgIGN0b3IucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgY2hhaW5BbGwgPSB0aGlzLl9fY2hhaW5fXyxcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHRoaXMuX193cmFwcGVkX18sXG4gICAgICAgICAgICAgICAgYXJncyA9IFt2YWx1ZV07XG5cbiAgICAgICAgICAgIHB1c2guYXBwbHkoYXJncywgYXJndW1lbnRzKTtcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSBmdW5jLmFwcGx5KG9iamVjdCwgYXJncyk7XG4gICAgICAgICAgICBpZiAoY2hhaW4gfHwgY2hhaW5BbGwpIHtcbiAgICAgICAgICAgICAgaWYgKHZhbHVlID09PSByZXN1bHQgJiYgaXNPYmplY3QocmVzdWx0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJlc3VsdCA9IG5ldyBjdG9yKHJlc3VsdCk7XG4gICAgICAgICAgICAgIHJlc3VsdC5fX2NoYWluX18gPSBjaGFpbkFsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV2ZXJ0cyB0aGUgJ18nIHZhcmlhYmxlIHRvIGl0cyBwcmV2aW91cyB2YWx1ZSBhbmQgcmV0dXJucyBhIHJlZmVyZW5jZSB0b1xuICAgICAqIHRoZSBgbG9kYXNoYCBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBVdGlsaXRpZXNcbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIGBsb2Rhc2hgIGZ1bmN0aW9uLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiB2YXIgbG9kYXNoID0gXy5ub0NvbmZsaWN0KCk7XG4gICAgICovXG4gICAgZnVuY3Rpb24gbm9Db25mbGljdCgpIHtcbiAgICAgIGNvbnRleHQuXyA9IG9sZERhc2g7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBIG5vLW9wZXJhdGlvbiBmdW5jdGlvbi5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBVdGlsaXRpZXNcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIG9iamVjdCA9IHsgJ25hbWUnOiAnZnJlZCcgfTtcbiAgICAgKiBfLm5vb3Aob2JqZWN0KSA9PT0gdW5kZWZpbmVkO1xuICAgICAqIC8vID0+IHRydWVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBub29wKCkge1xuICAgICAgLy8gbm8gb3BlcmF0aW9uIHBlcmZvcm1lZFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgdGhhdCBoYXZlIGVsYXBzZWQgc2luY2UgdGhlIFVuaXggZXBvY2hcbiAgICAgKiAoMSBKYW51YXJ5IDE5NzAgMDA6MDA6MDAgVVRDKS5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBVdGlsaXRpZXNcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIHN0YW1wID0gXy5ub3coKTtcbiAgICAgKiBfLmRlZmVyKGZ1bmN0aW9uKCkgeyBjb25zb2xlLmxvZyhfLm5vdygpIC0gc3RhbXApOyB9KTtcbiAgICAgKiAvLyA9PiBsb2dzIHRoZSBudW1iZXIgb2YgbWlsbGlzZWNvbmRzIGl0IHRvb2sgZm9yIHRoZSBkZWZlcnJlZCBmdW5jdGlvbiB0byBiZSBjYWxsZWRcbiAgICAgKi9cbiAgICB2YXIgbm93ID0gaXNOYXRpdmUobm93ID0gRGF0ZS5ub3cpICYmIG5vdyB8fCBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQ29udmVydHMgdGhlIGdpdmVuIHZhbHVlIGludG8gYW4gaW50ZWdlciBvZiB0aGUgc3BlY2lmaWVkIHJhZGl4LlxuICAgICAqIElmIGByYWRpeGAgaXMgYHVuZGVmaW5lZGAgb3IgYDBgIGEgYHJhZGl4YCBvZiBgMTBgIGlzIHVzZWQgdW5sZXNzIHRoZVxuICAgICAqIGB2YWx1ZWAgaXMgYSBoZXhhZGVjaW1hbCwgaW4gd2hpY2ggY2FzZSBhIGByYWRpeGAgb2YgYDE2YCBpcyB1c2VkLlxuICAgICAqXG4gICAgICogTm90ZTogVGhpcyBtZXRob2QgYXZvaWRzIGRpZmZlcmVuY2VzIGluIG5hdGl2ZSBFUzMgYW5kIEVTNSBgcGFyc2VJbnRgXG4gICAgICogaW1wbGVtZW50YXRpb25zLiBTZWUgaHR0cDovL2VzNS5naXRodWIuaW8vI0UuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgVXRpbGl0aWVzXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlIFRoZSB2YWx1ZSB0byBwYXJzZS5cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gW3JhZGl4XSBUaGUgcmFkaXggdXNlZCB0byBpbnRlcnByZXQgdGhlIHZhbHVlIHRvIHBhcnNlLlxuICAgICAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIG5ldyBpbnRlZ2VyIHZhbHVlLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLnBhcnNlSW50KCcwOCcpO1xuICAgICAqIC8vID0+IDhcbiAgICAgKi9cbiAgICB2YXIgcGFyc2VJbnQgPSBuYXRpdmVQYXJzZUludCh3aGl0ZXNwYWNlICsgJzA4JykgPT0gOCA/IG5hdGl2ZVBhcnNlSW50IDogZnVuY3Rpb24odmFsdWUsIHJhZGl4KSB7XG4gICAgICAvLyBGaXJlZm94IDwgMjEgYW5kIE9wZXJhIDwgMTUgZm9sbG93IHRoZSBFUzMgc3BlY2lmaWVkIGltcGxlbWVudGF0aW9uIG9mIGBwYXJzZUludGBcbiAgICAgIHJldHVybiBuYXRpdmVQYXJzZUludChpc1N0cmluZyh2YWx1ZSkgPyB2YWx1ZS5yZXBsYWNlKHJlTGVhZGluZ1NwYWNlc0FuZFplcm9zLCAnJykgOiB2YWx1ZSwgcmFkaXggfHwgMCk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBcIl8ucGx1Y2tcIiBzdHlsZSBmdW5jdGlvbiwgd2hpY2ggcmV0dXJucyB0aGUgYGtleWAgdmFsdWUgb2YgYVxuICAgICAqIGdpdmVuIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBVdGlsaXRpZXNcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBuYW1lIG9mIHRoZSBwcm9wZXJ0eSB0byByZXRyaWV2ZS5cbiAgICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGNoYXJhY3RlcnMgPSBbXG4gICAgICogICB7ICduYW1lJzogJ2ZyZWQnLCAgICdhZ2UnOiA0MCB9LFxuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzYgfVxuICAgICAqIF07XG4gICAgICpcbiAgICAgKiB2YXIgZ2V0TmFtZSA9IF8ucHJvcGVydHkoJ25hbWUnKTtcbiAgICAgKlxuICAgICAqIF8ubWFwKGNoYXJhY3RlcnMsIGdldE5hbWUpO1xuICAgICAqIC8vID0+IFsnYmFybmV5JywgJ2ZyZWQnXVxuICAgICAqXG4gICAgICogXy5zb3J0QnkoY2hhcmFjdGVycywgZ2V0TmFtZSk7XG4gICAgICogLy8gPT4gW3sgJ25hbWUnOiAnYmFybmV5JywgJ2FnZSc6IDM2IH0sIHsgJ25hbWUnOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH1dXG4gICAgICovXG4gICAgZnVuY3Rpb24gcHJvcGVydHkoa2V5KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICAgIHJldHVybiBvYmplY3Rba2V5XTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUHJvZHVjZXMgYSByYW5kb20gbnVtYmVyIGJldHdlZW4gYG1pbmAgYW5kIGBtYXhgIChpbmNsdXNpdmUpLiBJZiBvbmx5IG9uZVxuICAgICAqIGFyZ3VtZW50IGlzIHByb3ZpZGVkIGEgbnVtYmVyIGJldHdlZW4gYDBgIGFuZCB0aGUgZ2l2ZW4gbnVtYmVyIHdpbGwgYmVcbiAgICAgKiByZXR1cm5lZC4gSWYgYGZsb2F0aW5nYCBpcyB0cnVleSBvciBlaXRoZXIgYG1pbmAgb3IgYG1heGAgYXJlIGZsb2F0cyBhXG4gICAgICogZmxvYXRpbmctcG9pbnQgbnVtYmVyIHdpbGwgYmUgcmV0dXJuZWQgaW5zdGVhZCBvZiBhbiBpbnRlZ2VyLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IFV0aWxpdGllc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbbWluPTBdIFRoZSBtaW5pbXVtIHBvc3NpYmxlIHZhbHVlLlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbbWF4PTFdIFRoZSBtYXhpbXVtIHBvc3NpYmxlIHZhbHVlLlxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zsb2F0aW5nPWZhbHNlXSBTcGVjaWZ5IHJldHVybmluZyBhIGZsb2F0aW5nLXBvaW50IG51bWJlci5cbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSBSZXR1cm5zIGEgcmFuZG9tIG51bWJlci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXy5yYW5kb20oMCwgNSk7XG4gICAgICogLy8gPT4gYW4gaW50ZWdlciBiZXR3ZWVuIDAgYW5kIDVcbiAgICAgKlxuICAgICAqIF8ucmFuZG9tKDUpO1xuICAgICAqIC8vID0+IGFsc28gYW4gaW50ZWdlciBiZXR3ZWVuIDAgYW5kIDVcbiAgICAgKlxuICAgICAqIF8ucmFuZG9tKDUsIHRydWUpO1xuICAgICAqIC8vID0+IGEgZmxvYXRpbmctcG9pbnQgbnVtYmVyIGJldHdlZW4gMCBhbmQgNVxuICAgICAqXG4gICAgICogXy5yYW5kb20oMS4yLCA1LjIpO1xuICAgICAqIC8vID0+IGEgZmxvYXRpbmctcG9pbnQgbnVtYmVyIGJldHdlZW4gMS4yIGFuZCA1LjJcbiAgICAgKi9cbiAgICBmdW5jdGlvbiByYW5kb20obWluLCBtYXgsIGZsb2F0aW5nKSB7XG4gICAgICB2YXIgbm9NaW4gPSBtaW4gPT0gbnVsbCxcbiAgICAgICAgICBub01heCA9IG1heCA9PSBudWxsO1xuXG4gICAgICBpZiAoZmxvYXRpbmcgPT0gbnVsbCkge1xuICAgICAgICBpZiAodHlwZW9mIG1pbiA9PSAnYm9vbGVhbicgJiYgbm9NYXgpIHtcbiAgICAgICAgICBmbG9hdGluZyA9IG1pbjtcbiAgICAgICAgICBtaW4gPSAxO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKCFub01heCAmJiB0eXBlb2YgbWF4ID09ICdib29sZWFuJykge1xuICAgICAgICAgIGZsb2F0aW5nID0gbWF4O1xuICAgICAgICAgIG5vTWF4ID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG5vTWluICYmIG5vTWF4KSB7XG4gICAgICAgIG1heCA9IDE7XG4gICAgICB9XG4gICAgICBtaW4gPSArbWluIHx8IDA7XG4gICAgICBpZiAobm9NYXgpIHtcbiAgICAgICAgbWF4ID0gbWluO1xuICAgICAgICBtaW4gPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbWF4ID0gK21heCB8fCAwO1xuICAgICAgfVxuICAgICAgaWYgKGZsb2F0aW5nIHx8IG1pbiAlIDEgfHwgbWF4ICUgMSkge1xuICAgICAgICB2YXIgcmFuZCA9IG5hdGl2ZVJhbmRvbSgpO1xuICAgICAgICByZXR1cm4gbmF0aXZlTWluKG1pbiArIChyYW5kICogKG1heCAtIG1pbiArIHBhcnNlRmxvYXQoJzFlLScgKyAoKHJhbmQgKycnKS5sZW5ndGggLSAxKSkpKSwgbWF4KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBiYXNlUmFuZG9tKG1pbiwgbWF4KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXNvbHZlcyB0aGUgdmFsdWUgb2YgcHJvcGVydHkgYGtleWAgb24gYG9iamVjdGAuIElmIGBrZXlgIGlzIGEgZnVuY3Rpb25cbiAgICAgKiBpdCB3aWxsIGJlIGludm9rZWQgd2l0aCB0aGUgYHRoaXNgIGJpbmRpbmcgb2YgYG9iamVjdGAgYW5kIGl0cyByZXN1bHQgcmV0dXJuZWQsXG4gICAgICogZWxzZSB0aGUgcHJvcGVydHkgdmFsdWUgaXMgcmV0dXJuZWQuIElmIGBvYmplY3RgIGlzIGZhbHNleSB0aGVuIGB1bmRlZmluZWRgXG4gICAgICogaXMgcmV0dXJuZWQuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgVXRpbGl0aWVzXG4gICAgICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGluc3BlY3QuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUgbmFtZSBvZiB0aGUgcHJvcGVydHkgdG8gcmVzb2x2ZS5cbiAgICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcmVzb2x2ZWQgdmFsdWUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBvYmplY3QgPSB7XG4gICAgICogICAnY2hlZXNlJzogJ2NydW1wZXRzJyxcbiAgICAgKiAgICdzdHVmZic6IGZ1bmN0aW9uKCkge1xuICAgICAqICAgICByZXR1cm4gJ25vbnNlbnNlJztcbiAgICAgKiAgIH1cbiAgICAgKiB9O1xuICAgICAqXG4gICAgICogXy5yZXN1bHQob2JqZWN0LCAnY2hlZXNlJyk7XG4gICAgICogLy8gPT4gJ2NydW1wZXRzJ1xuICAgICAqXG4gICAgICogXy5yZXN1bHQob2JqZWN0LCAnc3R1ZmYnKTtcbiAgICAgKiAvLyA9PiAnbm9uc2Vuc2UnXG4gICAgICovXG4gICAgZnVuY3Rpb24gcmVzdWx0KG9iamVjdCwga2V5KSB7XG4gICAgICBpZiAob2JqZWN0KSB7XG4gICAgICAgIHZhciB2YWx1ZSA9IG9iamVjdFtrZXldO1xuICAgICAgICByZXR1cm4gaXNGdW5jdGlvbih2YWx1ZSkgPyBvYmplY3Rba2V5XSgpIDogdmFsdWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQSBtaWNyby10ZW1wbGF0aW5nIG1ldGhvZCB0aGF0IGhhbmRsZXMgYXJiaXRyYXJ5IGRlbGltaXRlcnMsIHByZXNlcnZlc1xuICAgICAqIHdoaXRlc3BhY2UsIGFuZCBjb3JyZWN0bHkgZXNjYXBlcyBxdW90ZXMgd2l0aGluIGludGVycG9sYXRlZCBjb2RlLlxuICAgICAqXG4gICAgICogTm90ZTogSW4gdGhlIGRldmVsb3BtZW50IGJ1aWxkLCBgXy50ZW1wbGF0ZWAgdXRpbGl6ZXMgc291cmNlVVJMcyBmb3IgZWFzaWVyXG4gICAgICogZGVidWdnaW5nLiBTZWUgaHR0cDovL3d3dy5odG1sNXJvY2tzLmNvbS9lbi90dXRvcmlhbHMvZGV2ZWxvcGVydG9vbHMvc291cmNlbWFwcy8jdG9jLXNvdXJjZXVybFxuICAgICAqXG4gICAgICogRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gcHJlY29tcGlsaW5nIHRlbXBsYXRlcyBzZWU6XG4gICAgICogaHR0cDovL2xvZGFzaC5jb20vY3VzdG9tLWJ1aWxkc1xuICAgICAqXG4gICAgICogRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gQ2hyb21lIGV4dGVuc2lvbiBzYW5kYm94ZXMgc2VlOlxuICAgICAqIGh0dHA6Ly9kZXZlbG9wZXIuY2hyb21lLmNvbS9zdGFibGUvZXh0ZW5zaW9ucy9zYW5kYm94aW5nRXZhbC5odG1sXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgVXRpbGl0aWVzXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRleHQgVGhlIHRlbXBsYXRlIHRleHQuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGEgVGhlIGRhdGEgb2JqZWN0IHVzZWQgdG8gcG9wdWxhdGUgdGhlIHRleHQuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBUaGUgb3B0aW9ucyBvYmplY3QuXG4gICAgICogQHBhcmFtIHtSZWdFeHB9IFtvcHRpb25zLmVzY2FwZV0gVGhlIFwiZXNjYXBlXCIgZGVsaW1pdGVyLlxuICAgICAqIEBwYXJhbSB7UmVnRXhwfSBbb3B0aW9ucy5ldmFsdWF0ZV0gVGhlIFwiZXZhbHVhdGVcIiBkZWxpbWl0ZXIuXG4gICAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmltcG9ydHNdIEFuIG9iamVjdCB0byBpbXBvcnQgaW50byB0aGUgdGVtcGxhdGUgYXMgbG9jYWwgdmFyaWFibGVzLlxuICAgICAqIEBwYXJhbSB7UmVnRXhwfSBbb3B0aW9ucy5pbnRlcnBvbGF0ZV0gVGhlIFwiaW50ZXJwb2xhdGVcIiBkZWxpbWl0ZXIuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtzb3VyY2VVUkxdIFRoZSBzb3VyY2VVUkwgb2YgdGhlIHRlbXBsYXRlJ3MgY29tcGlsZWQgc291cmNlLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBbdmFyaWFibGVdIFRoZSBkYXRhIG9iamVjdCB2YXJpYWJsZSBuYW1lLlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbnxzdHJpbmd9IFJldHVybnMgYSBjb21waWxlZCBmdW5jdGlvbiB3aGVuIG5vIGBkYXRhYCBvYmplY3RcbiAgICAgKiAgaXMgZ2l2ZW4sIGVsc2UgaXQgcmV0dXJucyB0aGUgaW50ZXJwb2xhdGVkIHRleHQuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIHRoZSBcImludGVycG9sYXRlXCIgZGVsaW1pdGVyIHRvIGNyZWF0ZSBhIGNvbXBpbGVkIHRlbXBsYXRlXG4gICAgICogdmFyIGNvbXBpbGVkID0gXy50ZW1wbGF0ZSgnaGVsbG8gPCU9IG5hbWUgJT4nKTtcbiAgICAgKiBjb21waWxlZCh7ICduYW1lJzogJ2ZyZWQnIH0pO1xuICAgICAqIC8vID0+ICdoZWxsbyBmcmVkJ1xuICAgICAqXG4gICAgICogLy8gdXNpbmcgdGhlIFwiZXNjYXBlXCIgZGVsaW1pdGVyIHRvIGVzY2FwZSBIVE1MIGluIGRhdGEgcHJvcGVydHkgdmFsdWVzXG4gICAgICogXy50ZW1wbGF0ZSgnPGI+PCUtIHZhbHVlICU+PC9iPicsIHsgJ3ZhbHVlJzogJzxzY3JpcHQ+JyB9KTtcbiAgICAgKiAvLyA9PiAnPGI+Jmx0O3NjcmlwdCZndDs8L2I+J1xuICAgICAqXG4gICAgICogLy8gdXNpbmcgdGhlIFwiZXZhbHVhdGVcIiBkZWxpbWl0ZXIgdG8gZ2VuZXJhdGUgSFRNTFxuICAgICAqIHZhciBsaXN0ID0gJzwlIF8uZm9yRWFjaChwZW9wbGUsIGZ1bmN0aW9uKG5hbWUpIHsgJT48bGk+PCUtIG5hbWUgJT48L2xpPjwlIH0pOyAlPic7XG4gICAgICogXy50ZW1wbGF0ZShsaXN0LCB7ICdwZW9wbGUnOiBbJ2ZyZWQnLCAnYmFybmV5J10gfSk7XG4gICAgICogLy8gPT4gJzxsaT5mcmVkPC9saT48bGk+YmFybmV5PC9saT4nXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyB0aGUgRVM2IGRlbGltaXRlciBhcyBhbiBhbHRlcm5hdGl2ZSB0byB0aGUgZGVmYXVsdCBcImludGVycG9sYXRlXCIgZGVsaW1pdGVyXG4gICAgICogXy50ZW1wbGF0ZSgnaGVsbG8gJHsgbmFtZSB9JywgeyAnbmFtZSc6ICdwZWJibGVzJyB9KTtcbiAgICAgKiAvLyA9PiAnaGVsbG8gcGViYmxlcydcbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIHRoZSBpbnRlcm5hbCBgcHJpbnRgIGZ1bmN0aW9uIGluIFwiZXZhbHVhdGVcIiBkZWxpbWl0ZXJzXG4gICAgICogXy50ZW1wbGF0ZSgnPCUgcHJpbnQoXCJoZWxsbyBcIiArIG5hbWUpOyAlPiEnLCB7ICduYW1lJzogJ2Jhcm5leScgfSk7XG4gICAgICogLy8gPT4gJ2hlbGxvIGJhcm5leSEnXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyBhIGN1c3RvbSB0ZW1wbGF0ZSBkZWxpbWl0ZXJzXG4gICAgICogXy50ZW1wbGF0ZVNldHRpbmdzID0ge1xuICAgICAqICAgJ2ludGVycG9sYXRlJzogL3t7KFtcXHNcXFNdKz8pfX0vZ1xuICAgICAqIH07XG4gICAgICpcbiAgICAgKiBfLnRlbXBsYXRlKCdoZWxsbyB7eyBuYW1lIH19IScsIHsgJ25hbWUnOiAnbXVzdGFjaGUnIH0pO1xuICAgICAqIC8vID0+ICdoZWxsbyBtdXN0YWNoZSEnXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyB0aGUgYGltcG9ydHNgIG9wdGlvbiB0byBpbXBvcnQgalF1ZXJ5XG4gICAgICogdmFyIGxpc3QgPSAnPCUganEuZWFjaChwZW9wbGUsIGZ1bmN0aW9uKG5hbWUpIHsgJT48bGk+PCUtIG5hbWUgJT48L2xpPjwlIH0pOyAlPic7XG4gICAgICogXy50ZW1wbGF0ZShsaXN0LCB7ICdwZW9wbGUnOiBbJ2ZyZWQnLCAnYmFybmV5J10gfSwgeyAnaW1wb3J0cyc6IHsgJ2pxJzogalF1ZXJ5IH0gfSk7XG4gICAgICogLy8gPT4gJzxsaT5mcmVkPC9saT48bGk+YmFybmV5PC9saT4nXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyB0aGUgYHNvdXJjZVVSTGAgb3B0aW9uIHRvIHNwZWNpZnkgYSBjdXN0b20gc291cmNlVVJMIGZvciB0aGUgdGVtcGxhdGVcbiAgICAgKiB2YXIgY29tcGlsZWQgPSBfLnRlbXBsYXRlKCdoZWxsbyA8JT0gbmFtZSAlPicsIG51bGwsIHsgJ3NvdXJjZVVSTCc6ICcvYmFzaWMvZ3JlZXRpbmcuanN0JyB9KTtcbiAgICAgKiBjb21waWxlZChkYXRhKTtcbiAgICAgKiAvLyA9PiBmaW5kIHRoZSBzb3VyY2Ugb2YgXCJncmVldGluZy5qc3RcIiB1bmRlciB0aGUgU291cmNlcyB0YWIgb3IgUmVzb3VyY2VzIHBhbmVsIG9mIHRoZSB3ZWIgaW5zcGVjdG9yXG4gICAgICpcbiAgICAgKiAvLyB1c2luZyB0aGUgYHZhcmlhYmxlYCBvcHRpb24gdG8gZW5zdXJlIGEgd2l0aC1zdGF0ZW1lbnQgaXNuJ3QgdXNlZCBpbiB0aGUgY29tcGlsZWQgdGVtcGxhdGVcbiAgICAgKiB2YXIgY29tcGlsZWQgPSBfLnRlbXBsYXRlKCdoaSA8JT0gZGF0YS5uYW1lICU+IScsIG51bGwsIHsgJ3ZhcmlhYmxlJzogJ2RhdGEnIH0pO1xuICAgICAqIGNvbXBpbGVkLnNvdXJjZTtcbiAgICAgKiAvLyA9PiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICogICB2YXIgX190LCBfX3AgPSAnJywgX19lID0gXy5lc2NhcGU7XG4gICAgICogICBfX3AgKz0gJ2hpICcgKyAoKF9fdCA9ICggZGF0YS5uYW1lICkpID09IG51bGwgPyAnJyA6IF9fdCkgKyAnISc7XG4gICAgICogICByZXR1cm4gX19wO1xuICAgICAqIH1cbiAgICAgKlxuICAgICAqIC8vIHVzaW5nIHRoZSBgc291cmNlYCBwcm9wZXJ0eSB0byBpbmxpbmUgY29tcGlsZWQgdGVtcGxhdGVzIGZvciBtZWFuaW5nZnVsXG4gICAgICogLy8gbGluZSBudW1iZXJzIGluIGVycm9yIG1lc3NhZ2VzIGFuZCBhIHN0YWNrIHRyYWNlXG4gICAgICogZnMud3JpdGVGaWxlU3luYyhwYXRoLmpvaW4oY3dkLCAnanN0LmpzJyksICdcXFxuICAgICAqICAgdmFyIEpTVCA9IHtcXFxuICAgICAqICAgICBcIm1haW5cIjogJyArIF8udGVtcGxhdGUobWFpblRleHQpLnNvdXJjZSArICdcXFxuICAgICAqICAgfTtcXFxuICAgICAqICcpO1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHRlbXBsYXRlKHRleHQsIGRhdGEsIG9wdGlvbnMpIHtcbiAgICAgIC8vIGJhc2VkIG9uIEpvaG4gUmVzaWcncyBgdG1wbGAgaW1wbGVtZW50YXRpb25cbiAgICAgIC8vIGh0dHA6Ly9lam9obi5vcmcvYmxvZy9qYXZhc2NyaXB0LW1pY3JvLXRlbXBsYXRpbmcvXG4gICAgICAvLyBhbmQgTGF1cmEgRG9rdG9yb3ZhJ3MgZG9ULmpzXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vb2xhZG8vZG9UXG4gICAgICB2YXIgc2V0dGluZ3MgPSBsb2Rhc2gudGVtcGxhdGVTZXR0aW5ncztcbiAgICAgIHRleHQgPSBTdHJpbmcodGV4dCB8fCAnJyk7XG5cbiAgICAgIC8vIGF2b2lkIG1pc3NpbmcgZGVwZW5kZW5jaWVzIHdoZW4gYGl0ZXJhdG9yVGVtcGxhdGVgIGlzIG5vdCBkZWZpbmVkXG4gICAgICBvcHRpb25zID0gZGVmYXVsdHMoe30sIG9wdGlvbnMsIHNldHRpbmdzKTtcblxuICAgICAgdmFyIGltcG9ydHMgPSBkZWZhdWx0cyh7fSwgb3B0aW9ucy5pbXBvcnRzLCBzZXR0aW5ncy5pbXBvcnRzKSxcbiAgICAgICAgICBpbXBvcnRzS2V5cyA9IGtleXMoaW1wb3J0cyksXG4gICAgICAgICAgaW1wb3J0c1ZhbHVlcyA9IHZhbHVlcyhpbXBvcnRzKTtcblxuICAgICAgdmFyIGlzRXZhbHVhdGluZyxcbiAgICAgICAgICBpbmRleCA9IDAsXG4gICAgICAgICAgaW50ZXJwb2xhdGUgPSBvcHRpb25zLmludGVycG9sYXRlIHx8IHJlTm9NYXRjaCxcbiAgICAgICAgICBzb3VyY2UgPSBcIl9fcCArPSAnXCI7XG5cbiAgICAgIC8vIGNvbXBpbGUgdGhlIHJlZ2V4cCB0byBtYXRjaCBlYWNoIGRlbGltaXRlclxuICAgICAgdmFyIHJlRGVsaW1pdGVycyA9IFJlZ0V4cChcbiAgICAgICAgKG9wdGlvbnMuZXNjYXBlIHx8IHJlTm9NYXRjaCkuc291cmNlICsgJ3wnICtcbiAgICAgICAgaW50ZXJwb2xhdGUuc291cmNlICsgJ3wnICtcbiAgICAgICAgKGludGVycG9sYXRlID09PSByZUludGVycG9sYXRlID8gcmVFc1RlbXBsYXRlIDogcmVOb01hdGNoKS5zb3VyY2UgKyAnfCcgK1xuICAgICAgICAob3B0aW9ucy5ldmFsdWF0ZSB8fCByZU5vTWF0Y2gpLnNvdXJjZSArICd8JCdcbiAgICAgICwgJ2cnKTtcblxuICAgICAgdGV4dC5yZXBsYWNlKHJlRGVsaW1pdGVycywgZnVuY3Rpb24obWF0Y2gsIGVzY2FwZVZhbHVlLCBpbnRlcnBvbGF0ZVZhbHVlLCBlc1RlbXBsYXRlVmFsdWUsIGV2YWx1YXRlVmFsdWUsIG9mZnNldCkge1xuICAgICAgICBpbnRlcnBvbGF0ZVZhbHVlIHx8IChpbnRlcnBvbGF0ZVZhbHVlID0gZXNUZW1wbGF0ZVZhbHVlKTtcblxuICAgICAgICAvLyBlc2NhcGUgY2hhcmFjdGVycyB0aGF0IGNhbm5vdCBiZSBpbmNsdWRlZCBpbiBzdHJpbmcgbGl0ZXJhbHNcbiAgICAgICAgc291cmNlICs9IHRleHQuc2xpY2UoaW5kZXgsIG9mZnNldCkucmVwbGFjZShyZVVuZXNjYXBlZFN0cmluZywgZXNjYXBlU3RyaW5nQ2hhcik7XG5cbiAgICAgICAgLy8gcmVwbGFjZSBkZWxpbWl0ZXJzIHdpdGggc25pcHBldHNcbiAgICAgICAgaWYgKGVzY2FwZVZhbHVlKSB7XG4gICAgICAgICAgc291cmNlICs9IFwiJyArXFxuX19lKFwiICsgZXNjYXBlVmFsdWUgKyBcIikgK1xcbidcIjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXZhbHVhdGVWYWx1ZSkge1xuICAgICAgICAgIGlzRXZhbHVhdGluZyA9IHRydWU7XG4gICAgICAgICAgc291cmNlICs9IFwiJztcXG5cIiArIGV2YWx1YXRlVmFsdWUgKyBcIjtcXG5fX3AgKz0gJ1wiO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbnRlcnBvbGF0ZVZhbHVlKSB7XG4gICAgICAgICAgc291cmNlICs9IFwiJyArXFxuKChfX3QgPSAoXCIgKyBpbnRlcnBvbGF0ZVZhbHVlICsgXCIpKSA9PSBudWxsID8gJycgOiBfX3QpICtcXG4nXCI7XG4gICAgICAgIH1cbiAgICAgICAgaW5kZXggPSBvZmZzZXQgKyBtYXRjaC5sZW5ndGg7XG5cbiAgICAgICAgLy8gdGhlIEpTIGVuZ2luZSBlbWJlZGRlZCBpbiBBZG9iZSBwcm9kdWN0cyByZXF1aXJlcyByZXR1cm5pbmcgdGhlIGBtYXRjaGBcbiAgICAgICAgLy8gc3RyaW5nIGluIG9yZGVyIHRvIHByb2R1Y2UgdGhlIGNvcnJlY3QgYG9mZnNldGAgdmFsdWVcbiAgICAgICAgcmV0dXJuIG1hdGNoO1xuICAgICAgfSk7XG5cbiAgICAgIHNvdXJjZSArPSBcIic7XFxuXCI7XG5cbiAgICAgIC8vIGlmIGB2YXJpYWJsZWAgaXMgbm90IHNwZWNpZmllZCwgd3JhcCBhIHdpdGgtc3RhdGVtZW50IGFyb3VuZCB0aGUgZ2VuZXJhdGVkXG4gICAgICAvLyBjb2RlIHRvIGFkZCB0aGUgZGF0YSBvYmplY3QgdG8gdGhlIHRvcCBvZiB0aGUgc2NvcGUgY2hhaW5cbiAgICAgIHZhciB2YXJpYWJsZSA9IG9wdGlvbnMudmFyaWFibGUsXG4gICAgICAgICAgaGFzVmFyaWFibGUgPSB2YXJpYWJsZTtcblxuICAgICAgaWYgKCFoYXNWYXJpYWJsZSkge1xuICAgICAgICB2YXJpYWJsZSA9ICdvYmonO1xuICAgICAgICBzb3VyY2UgPSAnd2l0aCAoJyArIHZhcmlhYmxlICsgJykge1xcbicgKyBzb3VyY2UgKyAnXFxufVxcbic7XG4gICAgICB9XG4gICAgICAvLyBjbGVhbnVwIGNvZGUgYnkgc3RyaXBwaW5nIGVtcHR5IHN0cmluZ3NcbiAgICAgIHNvdXJjZSA9IChpc0V2YWx1YXRpbmcgPyBzb3VyY2UucmVwbGFjZShyZUVtcHR5U3RyaW5nTGVhZGluZywgJycpIDogc291cmNlKVxuICAgICAgICAucmVwbGFjZShyZUVtcHR5U3RyaW5nTWlkZGxlLCAnJDEnKVxuICAgICAgICAucmVwbGFjZShyZUVtcHR5U3RyaW5nVHJhaWxpbmcsICckMTsnKTtcblxuICAgICAgLy8gZnJhbWUgY29kZSBhcyB0aGUgZnVuY3Rpb24gYm9keVxuICAgICAgc291cmNlID0gJ2Z1bmN0aW9uKCcgKyB2YXJpYWJsZSArICcpIHtcXG4nICtcbiAgICAgICAgKGhhc1ZhcmlhYmxlID8gJycgOiB2YXJpYWJsZSArICcgfHwgKCcgKyB2YXJpYWJsZSArICcgPSB7fSk7XFxuJykgK1xuICAgICAgICBcInZhciBfX3QsIF9fcCA9ICcnLCBfX2UgPSBfLmVzY2FwZVwiICtcbiAgICAgICAgKGlzRXZhbHVhdGluZ1xuICAgICAgICAgID8gJywgX19qID0gQXJyYXkucHJvdG90eXBlLmpvaW47XFxuJyArXG4gICAgICAgICAgICBcImZ1bmN0aW9uIHByaW50KCkgeyBfX3AgKz0gX19qLmNhbGwoYXJndW1lbnRzLCAnJykgfVxcblwiXG4gICAgICAgICAgOiAnO1xcbidcbiAgICAgICAgKSArXG4gICAgICAgIHNvdXJjZSArXG4gICAgICAgICdyZXR1cm4gX19wXFxufSc7XG5cbiAgICAgIC8vIFVzZSBhIHNvdXJjZVVSTCBmb3IgZWFzaWVyIGRlYnVnZ2luZy5cbiAgICAgIC8vIGh0dHA6Ly93d3cuaHRtbDVyb2Nrcy5jb20vZW4vdHV0b3JpYWxzL2RldmVsb3BlcnRvb2xzL3NvdXJjZW1hcHMvI3RvYy1zb3VyY2V1cmxcbiAgICAgIHZhciBzb3VyY2VVUkwgPSAnXFxuLypcXG4vLyMgc291cmNlVVJMPScgKyAob3B0aW9ucy5zb3VyY2VVUkwgfHwgJy9sb2Rhc2gvdGVtcGxhdGUvc291cmNlWycgKyAodGVtcGxhdGVDb3VudGVyKyspICsgJ10nKSArICdcXG4qLyc7XG5cbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBGdW5jdGlvbihpbXBvcnRzS2V5cywgJ3JldHVybiAnICsgc291cmNlICsgc291cmNlVVJMKS5hcHBseSh1bmRlZmluZWQsIGltcG9ydHNWYWx1ZXMpO1xuICAgICAgfSBjYXRjaChlKSB7XG4gICAgICAgIGUuc291cmNlID0gc291cmNlO1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdChkYXRhKTtcbiAgICAgIH1cbiAgICAgIC8vIHByb3ZpZGUgdGhlIGNvbXBpbGVkIGZ1bmN0aW9uJ3Mgc291cmNlIGJ5IGl0cyBgdG9TdHJpbmdgIG1ldGhvZCwgaW5cbiAgICAgIC8vIHN1cHBvcnRlZCBlbnZpcm9ubWVudHMsIG9yIHRoZSBgc291cmNlYCBwcm9wZXJ0eSBhcyBhIGNvbnZlbmllbmNlIGZvclxuICAgICAgLy8gaW5saW5pbmcgY29tcGlsZWQgdGVtcGxhdGVzIGR1cmluZyB0aGUgYnVpbGQgcHJvY2Vzc1xuICAgICAgcmVzdWx0LnNvdXJjZSA9IHNvdXJjZTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRXhlY3V0ZXMgdGhlIGNhbGxiYWNrIGBuYCB0aW1lcywgcmV0dXJuaW5nIGFuIGFycmF5IG9mIHRoZSByZXN1bHRzXG4gICAgICogb2YgZWFjaCBjYWxsYmFjayBleGVjdXRpb24uIFRoZSBjYWxsYmFjayBpcyBib3VuZCB0byBgdGhpc0FyZ2AgYW5kIGludm9rZWRcbiAgICAgKiB3aXRoIG9uZSBhcmd1bWVudDsgKGluZGV4KS5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBVdGlsaXRpZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbiBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIGV4ZWN1dGUgdGhlIGNhbGxiYWNrLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiBjYWxsZWQgcGVyIGl0ZXJhdGlvbi5cbiAgICAgKiBAcGFyYW0geyp9IFt0aGlzQXJnXSBUaGUgYHRoaXNgIGJpbmRpbmcgb2YgYGNhbGxiYWNrYC5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYW4gYXJyYXkgb2YgdGhlIHJlc3VsdHMgb2YgZWFjaCBgY2FsbGJhY2tgIGV4ZWN1dGlvbi5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogdmFyIGRpY2VSb2xscyA9IF8udGltZXMoMywgXy5wYXJ0aWFsKF8ucmFuZG9tLCAxLCA2KSk7XG4gICAgICogLy8gPT4gWzMsIDYsIDRdXG4gICAgICpcbiAgICAgKiBfLnRpbWVzKDMsIGZ1bmN0aW9uKG4pIHsgbWFnZS5jYXN0U3BlbGwobik7IH0pO1xuICAgICAqIC8vID0+IGNhbGxzIGBtYWdlLmNhc3RTcGVsbChuKWAgdGhyZWUgdGltZXMsIHBhc3NpbmcgYG5gIG9mIGAwYCwgYDFgLCBhbmQgYDJgIHJlc3BlY3RpdmVseVxuICAgICAqXG4gICAgICogXy50aW1lcygzLCBmdW5jdGlvbihuKSB7IHRoaXMuY2FzdChuKTsgfSwgbWFnZSk7XG4gICAgICogLy8gPT4gYWxzbyBjYWxscyBgbWFnZS5jYXN0U3BlbGwobilgIHRocmVlIHRpbWVzXG4gICAgICovXG4gICAgZnVuY3Rpb24gdGltZXMobiwgY2FsbGJhY2ssIHRoaXNBcmcpIHtcbiAgICAgIG4gPSAobiA9ICtuKSA+IC0xID8gbiA6IDA7XG4gICAgICB2YXIgaW5kZXggPSAtMSxcbiAgICAgICAgICByZXN1bHQgPSBBcnJheShuKTtcblxuICAgICAgY2FsbGJhY2sgPSBiYXNlQ3JlYXRlQ2FsbGJhY2soY2FsbGJhY2ssIHRoaXNBcmcsIDEpO1xuICAgICAgd2hpbGUgKCsraW5kZXggPCBuKSB7XG4gICAgICAgIHJlc3VsdFtpbmRleF0gPSBjYWxsYmFjayhpbmRleCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBpbnZlcnNlIG9mIGBfLmVzY2FwZWAgdGhpcyBtZXRob2QgY29udmVydHMgdGhlIEhUTUwgZW50aXRpZXNcbiAgICAgKiBgJmFtcDtgLCBgJmx0O2AsIGAmZ3Q7YCwgYCZxdW90O2AsIGFuZCBgJiMzOTtgIGluIGBzdHJpbmdgIHRvIHRoZWlyXG4gICAgICogY29ycmVzcG9uZGluZyBjaGFyYWN0ZXJzLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IFV0aWxpdGllc1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byB1bmVzY2FwZS5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSB1bmVzY2FwZWQgc3RyaW5nLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLnVuZXNjYXBlKCdGcmVkLCBCYXJuZXkgJmFtcDsgUGViYmxlcycpO1xuICAgICAqIC8vID0+ICdGcmVkLCBCYXJuZXkgJiBQZWJibGVzJ1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHVuZXNjYXBlKHN0cmluZykge1xuICAgICAgcmV0dXJuIHN0cmluZyA9PSBudWxsID8gJycgOiBTdHJpbmcoc3RyaW5nKS5yZXBsYWNlKHJlRXNjYXBlZEh0bWwsIHVuZXNjYXBlSHRtbENoYXIpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhIHVuaXF1ZSBJRC4gSWYgYHByZWZpeGAgaXMgcHJvdmlkZWQgdGhlIElEIHdpbGwgYmUgYXBwZW5kZWQgdG8gaXQuXG4gICAgICpcbiAgICAgKiBAc3RhdGljXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgVXRpbGl0aWVzXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtwcmVmaXhdIFRoZSB2YWx1ZSB0byBwcmVmaXggdGhlIElEIHdpdGguXG4gICAgICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgdW5pcXVlIElELlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBfLnVuaXF1ZUlkKCdjb250YWN0XycpO1xuICAgICAqIC8vID0+ICdjb250YWN0XzEwNCdcbiAgICAgKlxuICAgICAqIF8udW5pcXVlSWQoKTtcbiAgICAgKiAvLyA9PiAnMTA1J1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHVuaXF1ZUlkKHByZWZpeCkge1xuICAgICAgdmFyIGlkID0gKytpZENvdW50ZXI7XG4gICAgICByZXR1cm4gU3RyaW5nKHByZWZpeCA9PSBudWxsID8gJycgOiBwcmVmaXgpICsgaWQ7XG4gICAgfVxuXG4gICAgLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgYGxvZGFzaGAgb2JqZWN0IHRoYXQgd3JhcHMgdGhlIGdpdmVuIHZhbHVlIHdpdGggZXhwbGljaXRcbiAgICAgKiBtZXRob2QgY2hhaW5pbmcgZW5hYmxlZC5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBDaGFpbmluZ1xuICAgICAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHdyYXAuXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgd3JhcHBlciBvYmplY3QuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAgJ2FnZSc6IDM2IH0sXG4gICAgICogICB7ICduYW1lJzogJ2ZyZWQnLCAgICAnYWdlJzogNDAgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAncGViYmxlcycsICdhZ2UnOiAxIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogdmFyIHlvdW5nZXN0ID0gXy5jaGFpbihjaGFyYWN0ZXJzKVxuICAgICAqICAgICAuc29ydEJ5KCdhZ2UnKVxuICAgICAqICAgICAubWFwKGZ1bmN0aW9uKGNocikgeyByZXR1cm4gY2hyLm5hbWUgKyAnIGlzICcgKyBjaHIuYWdlOyB9KVxuICAgICAqICAgICAuZmlyc3QoKVxuICAgICAqICAgICAudmFsdWUoKTtcbiAgICAgKiAvLyA9PiAncGViYmxlcyBpcyAxJ1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNoYWluKHZhbHVlKSB7XG4gICAgICB2YWx1ZSA9IG5ldyBsb2Rhc2hXcmFwcGVyKHZhbHVlKTtcbiAgICAgIHZhbHVlLl9fY2hhaW5fXyA9IHRydWU7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogSW52b2tlcyBgaW50ZXJjZXB0b3JgIHdpdGggdGhlIGB2YWx1ZWAgYXMgdGhlIGZpcnN0IGFyZ3VtZW50IGFuZCB0aGVuXG4gICAgICogcmV0dXJucyBgdmFsdWVgLiBUaGUgcHVycG9zZSBvZiB0aGlzIG1ldGhvZCBpcyB0byBcInRhcCBpbnRvXCIgYSBtZXRob2RcbiAgICAgKiBjaGFpbiBpbiBvcmRlciB0byBwZXJmb3JtIG9wZXJhdGlvbnMgb24gaW50ZXJtZWRpYXRlIHJlc3VsdHMgd2l0aGluXG4gICAgICogdGhlIGNoYWluLlxuICAgICAqXG4gICAgICogQHN0YXRpY1xuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGNhdGVnb3J5IENoYWluaW5nXG4gICAgICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcHJvdmlkZSB0byBgaW50ZXJjZXB0b3JgLlxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGludGVyY2VwdG9yIFRoZSBmdW5jdGlvbiB0byBpbnZva2UuXG4gICAgICogQHJldHVybnMgeyp9IFJldHVybnMgYHZhbHVlYC5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqXG4gICAgICogXyhbMSwgMiwgMywgNF0pXG4gICAgICogIC50YXAoZnVuY3Rpb24oYXJyYXkpIHsgYXJyYXkucG9wKCk7IH0pXG4gICAgICogIC5yZXZlcnNlKClcbiAgICAgKiAgLnZhbHVlKCk7XG4gICAgICogLy8gPT4gWzMsIDIsIDFdXG4gICAgICovXG4gICAgZnVuY3Rpb24gdGFwKHZhbHVlLCBpbnRlcmNlcHRvcikge1xuICAgICAgaW50ZXJjZXB0b3IodmFsdWUpO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEVuYWJsZXMgZXhwbGljaXQgbWV0aG9kIGNoYWluaW5nIG9uIHRoZSB3cmFwcGVyIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEBuYW1lIGNoYWluXG4gICAgICogQG1lbWJlck9mIF9cbiAgICAgKiBAY2F0ZWdvcnkgQ2hhaW5pbmdcbiAgICAgKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgd3JhcHBlciBvYmplY3QuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIHZhciBjaGFyYWN0ZXJzID0gW1xuICAgICAqICAgeyAnbmFtZSc6ICdiYXJuZXknLCAnYWdlJzogMzYgfSxcbiAgICAgKiAgIHsgJ25hbWUnOiAnZnJlZCcsICAgJ2FnZSc6IDQwIH1cbiAgICAgKiBdO1xuICAgICAqXG4gICAgICogLy8gd2l0aG91dCBleHBsaWNpdCBjaGFpbmluZ1xuICAgICAqIF8oY2hhcmFjdGVycykuZmlyc3QoKTtcbiAgICAgKiAvLyA9PiB7ICduYW1lJzogJ2Jhcm5leScsICdhZ2UnOiAzNiB9XG4gICAgICpcbiAgICAgKiAvLyB3aXRoIGV4cGxpY2l0IGNoYWluaW5nXG4gICAgICogXyhjaGFyYWN0ZXJzKS5jaGFpbigpXG4gICAgICogICAuZmlyc3QoKVxuICAgICAqICAgLnBpY2soJ2FnZScpXG4gICAgICogICAudmFsdWUoKTtcbiAgICAgKiAvLyA9PiB7ICdhZ2UnOiAzNiB9XG4gICAgICovXG4gICAgZnVuY3Rpb24gd3JhcHBlckNoYWluKCkge1xuICAgICAgdGhpcy5fX2NoYWluX18gPSB0cnVlO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUHJvZHVjZXMgdGhlIGB0b1N0cmluZ2AgcmVzdWx0IG9mIHRoZSB3cmFwcGVkIHZhbHVlLlxuICAgICAqXG4gICAgICogQG5hbWUgdG9TdHJpbmdcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEBjYXRlZ29yeSBDaGFpbmluZ1xuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHN0cmluZyByZXN1bHQuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8oWzEsIDIsIDNdKS50b1N0cmluZygpO1xuICAgICAqIC8vID0+ICcxLDIsMydcbiAgICAgKi9cbiAgICBmdW5jdGlvbiB3cmFwcGVyVG9TdHJpbmcoKSB7XG4gICAgICByZXR1cm4gU3RyaW5nKHRoaXMuX193cmFwcGVkX18pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4dHJhY3RzIHRoZSB3cmFwcGVkIHZhbHVlLlxuICAgICAqXG4gICAgICogQG5hbWUgdmFsdWVPZlxuICAgICAqIEBtZW1iZXJPZiBfXG4gICAgICogQGFsaWFzIHZhbHVlXG4gICAgICogQGNhdGVnb3J5IENoYWluaW5nXG4gICAgICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHdyYXBwZWQgdmFsdWUuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIF8oWzEsIDIsIDNdKS52YWx1ZU9mKCk7XG4gICAgICogLy8gPT4gWzEsIDIsIDNdXG4gICAgICovXG4gICAgZnVuY3Rpb24gd3JhcHBlclZhbHVlT2YoKSB7XG4gICAgICByZXR1cm4gdGhpcy5fX3dyYXBwZWRfXztcbiAgICB9XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgIC8vIGFkZCBmdW5jdGlvbnMgdGhhdCByZXR1cm4gd3JhcHBlZCB2YWx1ZXMgd2hlbiBjaGFpbmluZ1xuICAgIGxvZGFzaC5hZnRlciA9IGFmdGVyO1xuICAgIGxvZGFzaC5hc3NpZ24gPSBhc3NpZ247XG4gICAgbG9kYXNoLmF0ID0gYXQ7XG4gICAgbG9kYXNoLmJpbmQgPSBiaW5kO1xuICAgIGxvZGFzaC5iaW5kQWxsID0gYmluZEFsbDtcbiAgICBsb2Rhc2guYmluZEtleSA9IGJpbmRLZXk7XG4gICAgbG9kYXNoLmNoYWluID0gY2hhaW47XG4gICAgbG9kYXNoLmNvbXBhY3QgPSBjb21wYWN0O1xuICAgIGxvZGFzaC5jb21wb3NlID0gY29tcG9zZTtcbiAgICBsb2Rhc2guY29uc3RhbnQgPSBjb25zdGFudDtcbiAgICBsb2Rhc2guY291bnRCeSA9IGNvdW50Qnk7XG4gICAgbG9kYXNoLmNyZWF0ZSA9IGNyZWF0ZTtcbiAgICBsb2Rhc2guY3JlYXRlQ2FsbGJhY2sgPSBjcmVhdGVDYWxsYmFjaztcbiAgICBsb2Rhc2guY3VycnkgPSBjdXJyeTtcbiAgICBsb2Rhc2guZGVib3VuY2UgPSBkZWJvdW5jZTtcbiAgICBsb2Rhc2guZGVmYXVsdHMgPSBkZWZhdWx0cztcbiAgICBsb2Rhc2guZGVmZXIgPSBkZWZlcjtcbiAgICBsb2Rhc2guZGVsYXkgPSBkZWxheTtcbiAgICBsb2Rhc2guZGlmZmVyZW5jZSA9IGRpZmZlcmVuY2U7XG4gICAgbG9kYXNoLmZpbHRlciA9IGZpbHRlcjtcbiAgICBsb2Rhc2guZmxhdHRlbiA9IGZsYXR0ZW47XG4gICAgbG9kYXNoLmZvckVhY2ggPSBmb3JFYWNoO1xuICAgIGxvZGFzaC5mb3JFYWNoUmlnaHQgPSBmb3JFYWNoUmlnaHQ7XG4gICAgbG9kYXNoLmZvckluID0gZm9ySW47XG4gICAgbG9kYXNoLmZvckluUmlnaHQgPSBmb3JJblJpZ2h0O1xuICAgIGxvZGFzaC5mb3JPd24gPSBmb3JPd247XG4gICAgbG9kYXNoLmZvck93blJpZ2h0ID0gZm9yT3duUmlnaHQ7XG4gICAgbG9kYXNoLmZ1bmN0aW9ucyA9IGZ1bmN0aW9ucztcbiAgICBsb2Rhc2guZ3JvdXBCeSA9IGdyb3VwQnk7XG4gICAgbG9kYXNoLmluZGV4QnkgPSBpbmRleEJ5O1xuICAgIGxvZGFzaC5pbml0aWFsID0gaW5pdGlhbDtcbiAgICBsb2Rhc2guaW50ZXJzZWN0aW9uID0gaW50ZXJzZWN0aW9uO1xuICAgIGxvZGFzaC5pbnZlcnQgPSBpbnZlcnQ7XG4gICAgbG9kYXNoLmludm9rZSA9IGludm9rZTtcbiAgICBsb2Rhc2gua2V5cyA9IGtleXM7XG4gICAgbG9kYXNoLm1hcCA9IG1hcDtcbiAgICBsb2Rhc2gubWFwVmFsdWVzID0gbWFwVmFsdWVzO1xuICAgIGxvZGFzaC5tYXggPSBtYXg7XG4gICAgbG9kYXNoLm1lbW9pemUgPSBtZW1vaXplO1xuICAgIGxvZGFzaC5tZXJnZSA9IG1lcmdlO1xuICAgIGxvZGFzaC5taW4gPSBtaW47XG4gICAgbG9kYXNoLm9taXQgPSBvbWl0O1xuICAgIGxvZGFzaC5vbmNlID0gb25jZTtcbiAgICBsb2Rhc2gucGFpcnMgPSBwYWlycztcbiAgICBsb2Rhc2gucGFydGlhbCA9IHBhcnRpYWw7XG4gICAgbG9kYXNoLnBhcnRpYWxSaWdodCA9IHBhcnRpYWxSaWdodDtcbiAgICBsb2Rhc2gucGljayA9IHBpY2s7XG4gICAgbG9kYXNoLnBsdWNrID0gcGx1Y2s7XG4gICAgbG9kYXNoLnByb3BlcnR5ID0gcHJvcGVydHk7XG4gICAgbG9kYXNoLnB1bGwgPSBwdWxsO1xuICAgIGxvZGFzaC5yYW5nZSA9IHJhbmdlO1xuICAgIGxvZGFzaC5yZWplY3QgPSByZWplY3Q7XG4gICAgbG9kYXNoLnJlbW92ZSA9IHJlbW92ZTtcbiAgICBsb2Rhc2gucmVzdCA9IHJlc3Q7XG4gICAgbG9kYXNoLnNodWZmbGUgPSBzaHVmZmxlO1xuICAgIGxvZGFzaC5zb3J0QnkgPSBzb3J0Qnk7XG4gICAgbG9kYXNoLnRhcCA9IHRhcDtcbiAgICBsb2Rhc2gudGhyb3R0bGUgPSB0aHJvdHRsZTtcbiAgICBsb2Rhc2gudGltZXMgPSB0aW1lcztcbiAgICBsb2Rhc2gudG9BcnJheSA9IHRvQXJyYXk7XG4gICAgbG9kYXNoLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbiAgICBsb2Rhc2gudW5pb24gPSB1bmlvbjtcbiAgICBsb2Rhc2gudW5pcSA9IHVuaXE7XG4gICAgbG9kYXNoLnZhbHVlcyA9IHZhbHVlcztcbiAgICBsb2Rhc2gud2hlcmUgPSB3aGVyZTtcbiAgICBsb2Rhc2gud2l0aG91dCA9IHdpdGhvdXQ7XG4gICAgbG9kYXNoLndyYXAgPSB3cmFwO1xuICAgIGxvZGFzaC54b3IgPSB4b3I7XG4gICAgbG9kYXNoLnppcCA9IHppcDtcbiAgICBsb2Rhc2guemlwT2JqZWN0ID0gemlwT2JqZWN0O1xuXG4gICAgLy8gYWRkIGFsaWFzZXNcbiAgICBsb2Rhc2guY29sbGVjdCA9IG1hcDtcbiAgICBsb2Rhc2guZHJvcCA9IHJlc3Q7XG4gICAgbG9kYXNoLmVhY2ggPSBmb3JFYWNoO1xuICAgIGxvZGFzaC5lYWNoUmlnaHQgPSBmb3JFYWNoUmlnaHQ7XG4gICAgbG9kYXNoLmV4dGVuZCA9IGFzc2lnbjtcbiAgICBsb2Rhc2gubWV0aG9kcyA9IGZ1bmN0aW9ucztcbiAgICBsb2Rhc2gub2JqZWN0ID0gemlwT2JqZWN0O1xuICAgIGxvZGFzaC5zZWxlY3QgPSBmaWx0ZXI7XG4gICAgbG9kYXNoLnRhaWwgPSByZXN0O1xuICAgIGxvZGFzaC51bmlxdWUgPSB1bmlxO1xuICAgIGxvZGFzaC51bnppcCA9IHppcDtcblxuICAgIC8vIGFkZCBmdW5jdGlvbnMgdG8gYGxvZGFzaC5wcm90b3R5cGVgXG4gICAgbWl4aW4obG9kYXNoKTtcblxuICAgIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gICAgLy8gYWRkIGZ1bmN0aW9ucyB0aGF0IHJldHVybiB1bndyYXBwZWQgdmFsdWVzIHdoZW4gY2hhaW5pbmdcbiAgICBsb2Rhc2guY2xvbmUgPSBjbG9uZTtcbiAgICBsb2Rhc2guY2xvbmVEZWVwID0gY2xvbmVEZWVwO1xuICAgIGxvZGFzaC5jb250YWlucyA9IGNvbnRhaW5zO1xuICAgIGxvZGFzaC5lc2NhcGUgPSBlc2NhcGU7XG4gICAgbG9kYXNoLmV2ZXJ5ID0gZXZlcnk7XG4gICAgbG9kYXNoLmZpbmQgPSBmaW5kO1xuICAgIGxvZGFzaC5maW5kSW5kZXggPSBmaW5kSW5kZXg7XG4gICAgbG9kYXNoLmZpbmRLZXkgPSBmaW5kS2V5O1xuICAgIGxvZGFzaC5maW5kTGFzdCA9IGZpbmRMYXN0O1xuICAgIGxvZGFzaC5maW5kTGFzdEluZGV4ID0gZmluZExhc3RJbmRleDtcbiAgICBsb2Rhc2guZmluZExhc3RLZXkgPSBmaW5kTGFzdEtleTtcbiAgICBsb2Rhc2guaGFzID0gaGFzO1xuICAgIGxvZGFzaC5pZGVudGl0eSA9IGlkZW50aXR5O1xuICAgIGxvZGFzaC5pbmRleE9mID0gaW5kZXhPZjtcbiAgICBsb2Rhc2guaXNBcmd1bWVudHMgPSBpc0FyZ3VtZW50cztcbiAgICBsb2Rhc2guaXNBcnJheSA9IGlzQXJyYXk7XG4gICAgbG9kYXNoLmlzQm9vbGVhbiA9IGlzQm9vbGVhbjtcbiAgICBsb2Rhc2guaXNEYXRlID0gaXNEYXRlO1xuICAgIGxvZGFzaC5pc0VsZW1lbnQgPSBpc0VsZW1lbnQ7XG4gICAgbG9kYXNoLmlzRW1wdHkgPSBpc0VtcHR5O1xuICAgIGxvZGFzaC5pc0VxdWFsID0gaXNFcXVhbDtcbiAgICBsb2Rhc2guaXNGaW5pdGUgPSBpc0Zpbml0ZTtcbiAgICBsb2Rhc2guaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG4gICAgbG9kYXNoLmlzTmFOID0gaXNOYU47XG4gICAgbG9kYXNoLmlzTnVsbCA9IGlzTnVsbDtcbiAgICBsb2Rhc2guaXNOdW1iZXIgPSBpc051bWJlcjtcbiAgICBsb2Rhc2guaXNPYmplY3QgPSBpc09iamVjdDtcbiAgICBsb2Rhc2guaXNQbGFpbk9iamVjdCA9IGlzUGxhaW5PYmplY3Q7XG4gICAgbG9kYXNoLmlzUmVnRXhwID0gaXNSZWdFeHA7XG4gICAgbG9kYXNoLmlzU3RyaW5nID0gaXNTdHJpbmc7XG4gICAgbG9kYXNoLmlzVW5kZWZpbmVkID0gaXNVbmRlZmluZWQ7XG4gICAgbG9kYXNoLmxhc3RJbmRleE9mID0gbGFzdEluZGV4T2Y7XG4gICAgbG9kYXNoLm1peGluID0gbWl4aW47XG4gICAgbG9kYXNoLm5vQ29uZmxpY3QgPSBub0NvbmZsaWN0O1xuICAgIGxvZGFzaC5ub29wID0gbm9vcDtcbiAgICBsb2Rhc2gubm93ID0gbm93O1xuICAgIGxvZGFzaC5wYXJzZUludCA9IHBhcnNlSW50O1xuICAgIGxvZGFzaC5yYW5kb20gPSByYW5kb207XG4gICAgbG9kYXNoLnJlZHVjZSA9IHJlZHVjZTtcbiAgICBsb2Rhc2gucmVkdWNlUmlnaHQgPSByZWR1Y2VSaWdodDtcbiAgICBsb2Rhc2gucmVzdWx0ID0gcmVzdWx0O1xuICAgIGxvZGFzaC5ydW5JbkNvbnRleHQgPSBydW5JbkNvbnRleHQ7XG4gICAgbG9kYXNoLnNpemUgPSBzaXplO1xuICAgIGxvZGFzaC5zb21lID0gc29tZTtcbiAgICBsb2Rhc2guc29ydGVkSW5kZXggPSBzb3J0ZWRJbmRleDtcbiAgICBsb2Rhc2gudGVtcGxhdGUgPSB0ZW1wbGF0ZTtcbiAgICBsb2Rhc2gudW5lc2NhcGUgPSB1bmVzY2FwZTtcbiAgICBsb2Rhc2gudW5pcXVlSWQgPSB1bmlxdWVJZDtcblxuICAgIC8vIGFkZCBhbGlhc2VzXG4gICAgbG9kYXNoLmFsbCA9IGV2ZXJ5O1xuICAgIGxvZGFzaC5hbnkgPSBzb21lO1xuICAgIGxvZGFzaC5kZXRlY3QgPSBmaW5kO1xuICAgIGxvZGFzaC5maW5kV2hlcmUgPSBmaW5kO1xuICAgIGxvZGFzaC5mb2xkbCA9IHJlZHVjZTtcbiAgICBsb2Rhc2guZm9sZHIgPSByZWR1Y2VSaWdodDtcbiAgICBsb2Rhc2guaW5jbHVkZSA9IGNvbnRhaW5zO1xuICAgIGxvZGFzaC5pbmplY3QgPSByZWR1Y2U7XG5cbiAgICBtaXhpbihmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzb3VyY2UgPSB7fVxuICAgICAgZm9yT3duKGxvZGFzaCwgZnVuY3Rpb24oZnVuYywgbWV0aG9kTmFtZSkge1xuICAgICAgICBpZiAoIWxvZGFzaC5wcm90b3R5cGVbbWV0aG9kTmFtZV0pIHtcbiAgICAgICAgICBzb3VyY2VbbWV0aG9kTmFtZV0gPSBmdW5jO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBzb3VyY2U7XG4gICAgfSgpLCBmYWxzZSk7XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgIC8vIGFkZCBmdW5jdGlvbnMgY2FwYWJsZSBvZiByZXR1cm5pbmcgd3JhcHBlZCBhbmQgdW53cmFwcGVkIHZhbHVlcyB3aGVuIGNoYWluaW5nXG4gICAgbG9kYXNoLmZpcnN0ID0gZmlyc3Q7XG4gICAgbG9kYXNoLmxhc3QgPSBsYXN0O1xuICAgIGxvZGFzaC5zYW1wbGUgPSBzYW1wbGU7XG5cbiAgICAvLyBhZGQgYWxpYXNlc1xuICAgIGxvZGFzaC50YWtlID0gZmlyc3Q7XG4gICAgbG9kYXNoLmhlYWQgPSBmaXJzdDtcblxuICAgIGZvck93bihsb2Rhc2gsIGZ1bmN0aW9uKGZ1bmMsIG1ldGhvZE5hbWUpIHtcbiAgICAgIHZhciBjYWxsYmFja2FibGUgPSBtZXRob2ROYW1lICE9PSAnc2FtcGxlJztcbiAgICAgIGlmICghbG9kYXNoLnByb3RvdHlwZVttZXRob2ROYW1lXSkge1xuICAgICAgICBsb2Rhc2gucHJvdG90eXBlW21ldGhvZE5hbWVdPSBmdW5jdGlvbihuLCBndWFyZCkge1xuICAgICAgICAgIHZhciBjaGFpbkFsbCA9IHRoaXMuX19jaGFpbl9fLFxuICAgICAgICAgICAgICByZXN1bHQgPSBmdW5jKHRoaXMuX193cmFwcGVkX18sIG4sIGd1YXJkKTtcblxuICAgICAgICAgIHJldHVybiAhY2hhaW5BbGwgJiYgKG4gPT0gbnVsbCB8fCAoZ3VhcmQgJiYgIShjYWxsYmFja2FibGUgJiYgdHlwZW9mIG4gPT0gJ2Z1bmN0aW9uJykpKVxuICAgICAgICAgICAgPyByZXN1bHRcbiAgICAgICAgICAgIDogbmV3IGxvZGFzaFdyYXBwZXIocmVzdWx0LCBjaGFpbkFsbCk7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSBzZW1hbnRpYyB2ZXJzaW9uIG51bWJlci5cbiAgICAgKlxuICAgICAqIEBzdGF0aWNcbiAgICAgKiBAbWVtYmVyT2YgX1xuICAgICAqIEB0eXBlIHN0cmluZ1xuICAgICAqL1xuICAgIGxvZGFzaC5WRVJTSU9OID0gJzIuNC4xJztcblxuICAgIC8vIGFkZCBcIkNoYWluaW5nXCIgZnVuY3Rpb25zIHRvIHRoZSB3cmFwcGVyXG4gICAgbG9kYXNoLnByb3RvdHlwZS5jaGFpbiA9IHdyYXBwZXJDaGFpbjtcbiAgICBsb2Rhc2gucHJvdG90eXBlLnRvU3RyaW5nID0gd3JhcHBlclRvU3RyaW5nO1xuICAgIGxvZGFzaC5wcm90b3R5cGUudmFsdWUgPSB3cmFwcGVyVmFsdWVPZjtcbiAgICBsb2Rhc2gucHJvdG90eXBlLnZhbHVlT2YgPSB3cmFwcGVyVmFsdWVPZjtcblxuICAgIC8vIGFkZCBgQXJyYXlgIGZ1bmN0aW9ucyB0aGF0IHJldHVybiB1bndyYXBwZWQgdmFsdWVzXG4gICAgZm9yRWFjaChbJ2pvaW4nLCAncG9wJywgJ3NoaWZ0J10sIGZ1bmN0aW9uKG1ldGhvZE5hbWUpIHtcbiAgICAgIHZhciBmdW5jID0gYXJyYXlSZWZbbWV0aG9kTmFtZV07XG4gICAgICBsb2Rhc2gucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBjaGFpbkFsbCA9IHRoaXMuX19jaGFpbl9fLFxuICAgICAgICAgICAgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLl9fd3JhcHBlZF9fLCBhcmd1bWVudHMpO1xuXG4gICAgICAgIHJldHVybiBjaGFpbkFsbFxuICAgICAgICAgID8gbmV3IGxvZGFzaFdyYXBwZXIocmVzdWx0LCBjaGFpbkFsbClcbiAgICAgICAgICA6IHJlc3VsdDtcbiAgICAgIH07XG4gICAgfSk7XG5cbiAgICAvLyBhZGQgYEFycmF5YCBmdW5jdGlvbnMgdGhhdCByZXR1cm4gdGhlIGV4aXN0aW5nIHdyYXBwZWQgdmFsdWVcbiAgICBmb3JFYWNoKFsncHVzaCcsICdyZXZlcnNlJywgJ3NvcnQnLCAndW5zaGlmdCddLCBmdW5jdGlvbihtZXRob2ROYW1lKSB7XG4gICAgICB2YXIgZnVuYyA9IGFycmF5UmVmW21ldGhvZE5hbWVdO1xuICAgICAgbG9kYXNoLnByb3RvdHlwZVttZXRob2ROYW1lXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBmdW5jLmFwcGx5KHRoaXMuX193cmFwcGVkX18sIGFyZ3VtZW50cyk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfTtcbiAgICB9KTtcblxuICAgIC8vIGFkZCBgQXJyYXlgIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBuZXcgd3JhcHBlZCB2YWx1ZXNcbiAgICBmb3JFYWNoKFsnY29uY2F0JywgJ3NsaWNlJywgJ3NwbGljZSddLCBmdW5jdGlvbihtZXRob2ROYW1lKSB7XG4gICAgICB2YXIgZnVuYyA9IGFycmF5UmVmW21ldGhvZE5hbWVdO1xuICAgICAgbG9kYXNoLnByb3RvdHlwZVttZXRob2ROYW1lXSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbmV3IGxvZGFzaFdyYXBwZXIoZnVuYy5hcHBseSh0aGlzLl9fd3JhcHBlZF9fLCBhcmd1bWVudHMpLCB0aGlzLl9fY2hhaW5fXyk7XG4gICAgICB9O1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGxvZGFzaDtcbiAgfVxuXG4gIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4gIC8vIGV4cG9zZSBMby1EYXNoXG4gIHZhciBfID0gcnVuSW5Db250ZXh0KCk7XG5cbiAgLy8gc29tZSBBTUQgYnVpbGQgb3B0aW1pemVycyBsaWtlIHIuanMgY2hlY2sgZm9yIGNvbmRpdGlvbiBwYXR0ZXJucyBsaWtlIHRoZSBmb2xsb3dpbmc6XG4gIGlmICh0eXBlb2YgZGVmaW5lID09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuICAgIC8vIEV4cG9zZSBMby1EYXNoIHRvIHRoZSBnbG9iYWwgb2JqZWN0IGV2ZW4gd2hlbiBhbiBBTUQgbG9hZGVyIGlzIHByZXNlbnQgaW5cbiAgICAvLyBjYXNlIExvLURhc2ggaXMgbG9hZGVkIHdpdGggYSBSZXF1aXJlSlMgc2hpbSBjb25maWcuXG4gICAgLy8gU2VlIGh0dHA6Ly9yZXF1aXJlanMub3JnL2RvY3MvYXBpLmh0bWwjY29uZmlnLXNoaW1cbiAgICByb290Ll8gPSBfO1xuXG4gICAgLy8gZGVmaW5lIGFzIGFuIGFub255bW91cyBtb2R1bGUgc28sIHRocm91Z2ggcGF0aCBtYXBwaW5nLCBpdCBjYW4gYmVcbiAgICAvLyByZWZlcmVuY2VkIGFzIHRoZSBcInVuZGVyc2NvcmVcIiBtb2R1bGVcbiAgICBkZWZpbmUoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gXztcbiAgICB9KTtcbiAgfVxuICAvLyBjaGVjayBmb3IgYGV4cG9ydHNgIGFmdGVyIGBkZWZpbmVgIGluIGNhc2UgYSBidWlsZCBvcHRpbWl6ZXIgYWRkcyBhbiBgZXhwb3J0c2Agb2JqZWN0XG4gIGVsc2UgaWYgKGZyZWVFeHBvcnRzICYmIGZyZWVNb2R1bGUpIHtcbiAgICAvLyBpbiBOb2RlLmpzIG9yIFJpbmdvSlNcbiAgICBpZiAobW9kdWxlRXhwb3J0cykge1xuICAgICAgKGZyZWVNb2R1bGUuZXhwb3J0cyA9IF8pLl8gPSBfO1xuICAgIH1cbiAgICAvLyBpbiBOYXJ3aGFsIG9yIFJoaW5vIC1yZXF1aXJlXG4gICAgZWxzZSB7XG4gICAgICBmcmVlRXhwb3J0cy5fID0gXztcbiAgICB9XG4gIH1cbiAgZWxzZSB7XG4gICAgLy8gaW4gYSBicm93c2VyIG9yIFJoaW5vXG4gICAgcm9vdC5fID0gXztcbiAgfVxufS5jYWxsKHRoaXMpKTtcbiIsIi8vIGh0dHA6Ly93aWtpLmNvbW1vbmpzLm9yZy93aWtpL1VuaXRfVGVzdGluZy8xLjBcbi8vXG4vLyBUSElTIElTIE5PVCBURVNURUQgTk9SIExJS0VMWSBUTyBXT1JLIE9VVFNJREUgVjghXG4vL1xuLy8gT3JpZ2luYWxseSBmcm9tIG5hcndoYWwuanMgKGh0dHA6Ly9uYXJ3aGFsanMub3JnKVxuLy8gQ29weXJpZ2h0IChjKSAyMDA5IFRob21hcyBSb2JpbnNvbiA8Mjgwbm9ydGguY29tPlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICdTb2Z0d2FyZScpLCB0b1xuLy8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGVcbi8vIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vclxuLy8gc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCAnQVMgSVMnLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU5cbi8vIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT05cbi8vIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4vLyB3aGVuIHVzZWQgaW4gbm9kZSwgdGhpcyB3aWxsIGFjdHVhbGx5IGxvYWQgdGhlIHV0aWwgbW9kdWxlIHdlIGRlcGVuZCBvblxuLy8gdmVyc3VzIGxvYWRpbmcgdGhlIGJ1aWx0aW4gdXRpbCBtb2R1bGUgYXMgaGFwcGVucyBvdGhlcndpc2Vcbi8vIHRoaXMgaXMgYSBidWcgaW4gbm9kZSBtb2R1bGUgbG9hZGluZyBhcyBmYXIgYXMgSSBhbSBjb25jZXJuZWRcbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbC8nKTtcblxudmFyIHBTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbnZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vLyAxLiBUaGUgYXNzZXJ0IG1vZHVsZSBwcm92aWRlcyBmdW5jdGlvbnMgdGhhdCB0aHJvd1xuLy8gQXNzZXJ0aW9uRXJyb3IncyB3aGVuIHBhcnRpY3VsYXIgY29uZGl0aW9ucyBhcmUgbm90IG1ldC4gVGhlXG4vLyBhc3NlcnQgbW9kdWxlIG11c3QgY29uZm9ybSB0byB0aGUgZm9sbG93aW5nIGludGVyZmFjZS5cblxudmFyIGFzc2VydCA9IG1vZHVsZS5leHBvcnRzID0gb2s7XG5cbi8vIDIuIFRoZSBBc3NlcnRpb25FcnJvciBpcyBkZWZpbmVkIGluIGFzc2VydC5cbi8vIG5ldyBhc3NlcnQuQXNzZXJ0aW9uRXJyb3IoeyBtZXNzYWdlOiBtZXNzYWdlLFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCB9KVxuXG5hc3NlcnQuQXNzZXJ0aW9uRXJyb3IgPSBmdW5jdGlvbiBBc3NlcnRpb25FcnJvcihvcHRpb25zKSB7XG4gIHRoaXMubmFtZSA9ICdBc3NlcnRpb25FcnJvcic7XG4gIHRoaXMuYWN0dWFsID0gb3B0aW9ucy5hY3R1YWw7XG4gIHRoaXMuZXhwZWN0ZWQgPSBvcHRpb25zLmV4cGVjdGVkO1xuICB0aGlzLm9wZXJhdG9yID0gb3B0aW9ucy5vcGVyYXRvcjtcbiAgaWYgKG9wdGlvbnMubWVzc2FnZSkge1xuICAgIHRoaXMubWVzc2FnZSA9IG9wdGlvbnMubWVzc2FnZTtcbiAgICB0aGlzLmdlbmVyYXRlZE1lc3NhZ2UgPSBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLm1lc3NhZ2UgPSBnZXRNZXNzYWdlKHRoaXMpO1xuICAgIHRoaXMuZ2VuZXJhdGVkTWVzc2FnZSA9IHRydWU7XG4gIH1cbiAgdmFyIHN0YWNrU3RhcnRGdW5jdGlvbiA9IG9wdGlvbnMuc3RhY2tTdGFydEZ1bmN0aW9uIHx8IGZhaWw7XG5cbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgc3RhY2tTdGFydEZ1bmN0aW9uKTtcbiAgfVxuICBlbHNlIHtcbiAgICAvLyBub24gdjggYnJvd3NlcnMgc28gd2UgY2FuIGhhdmUgYSBzdGFja3RyYWNlXG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcigpO1xuICAgIGlmIChlcnIuc3RhY2spIHtcbiAgICAgIHZhciBvdXQgPSBlcnIuc3RhY2s7XG5cbiAgICAgIC8vIHRyeSB0byBzdHJpcCB1c2VsZXNzIGZyYW1lc1xuICAgICAgdmFyIGZuX25hbWUgPSBzdGFja1N0YXJ0RnVuY3Rpb24ubmFtZTtcbiAgICAgIHZhciBpZHggPSBvdXQuaW5kZXhPZignXFxuJyArIGZuX25hbWUpO1xuICAgICAgaWYgKGlkeCA+PSAwKSB7XG4gICAgICAgIC8vIG9uY2Ugd2UgaGF2ZSBsb2NhdGVkIHRoZSBmdW5jdGlvbiBmcmFtZVxuICAgICAgICAvLyB3ZSBuZWVkIHRvIHN0cmlwIG91dCBldmVyeXRoaW5nIGJlZm9yZSBpdCAoYW5kIGl0cyBsaW5lKVxuICAgICAgICB2YXIgbmV4dF9saW5lID0gb3V0LmluZGV4T2YoJ1xcbicsIGlkeCArIDEpO1xuICAgICAgICBvdXQgPSBvdXQuc3Vic3RyaW5nKG5leHRfbGluZSArIDEpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnN0YWNrID0gb3V0O1xuICAgIH1cbiAgfVxufTtcblxuLy8gYXNzZXJ0LkFzc2VydGlvbkVycm9yIGluc3RhbmNlb2YgRXJyb3JcbnV0aWwuaW5oZXJpdHMoYXNzZXJ0LkFzc2VydGlvbkVycm9yLCBFcnJvcik7XG5cbmZ1bmN0aW9uIHJlcGxhY2VyKGtleSwgdmFsdWUpIHtcbiAgaWYgKHV0aWwuaXNVbmRlZmluZWQodmFsdWUpKSB7XG4gICAgcmV0dXJuICcnICsgdmFsdWU7XG4gIH1cbiAgaWYgKHV0aWwuaXNOdW1iZXIodmFsdWUpICYmICFpc0Zpbml0ZSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWUudG9TdHJpbmcoKTtcbiAgfVxuICBpZiAodXRpbC5pc0Z1bmN0aW9uKHZhbHVlKSB8fCB1dGlsLmlzUmVnRXhwKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZS50b1N0cmluZygpO1xuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZnVuY3Rpb24gdHJ1bmNhdGUocywgbikge1xuICBpZiAodXRpbC5pc1N0cmluZyhzKSkge1xuICAgIHJldHVybiBzLmxlbmd0aCA8IG4gPyBzIDogcy5zbGljZSgwLCBuKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gcztcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRNZXNzYWdlKHNlbGYpIHtcbiAgcmV0dXJuIHRydW5jYXRlKEpTT04uc3RyaW5naWZ5KHNlbGYuYWN0dWFsLCByZXBsYWNlciksIDEyOCkgKyAnICcgK1xuICAgICAgICAgc2VsZi5vcGVyYXRvciArICcgJyArXG4gICAgICAgICB0cnVuY2F0ZShKU09OLnN0cmluZ2lmeShzZWxmLmV4cGVjdGVkLCByZXBsYWNlciksIDEyOCk7XG59XG5cbi8vIEF0IHByZXNlbnQgb25seSB0aGUgdGhyZWUga2V5cyBtZW50aW9uZWQgYWJvdmUgYXJlIHVzZWQgYW5kXG4vLyB1bmRlcnN0b29kIGJ5IHRoZSBzcGVjLiBJbXBsZW1lbnRhdGlvbnMgb3Igc3ViIG1vZHVsZXMgY2FuIHBhc3Ncbi8vIG90aGVyIGtleXMgdG8gdGhlIEFzc2VydGlvbkVycm9yJ3MgY29uc3RydWN0b3IgLSB0aGV5IHdpbGwgYmVcbi8vIGlnbm9yZWQuXG5cbi8vIDMuIEFsbCBvZiB0aGUgZm9sbG93aW5nIGZ1bmN0aW9ucyBtdXN0IHRocm93IGFuIEFzc2VydGlvbkVycm9yXG4vLyB3aGVuIGEgY29ycmVzcG9uZGluZyBjb25kaXRpb24gaXMgbm90IG1ldCwgd2l0aCBhIG1lc3NhZ2UgdGhhdFxuLy8gbWF5IGJlIHVuZGVmaW5lZCBpZiBub3QgcHJvdmlkZWQuICBBbGwgYXNzZXJ0aW9uIG1ldGhvZHMgcHJvdmlkZVxuLy8gYm90aCB0aGUgYWN0dWFsIGFuZCBleHBlY3RlZCB2YWx1ZXMgdG8gdGhlIGFzc2VydGlvbiBlcnJvciBmb3Jcbi8vIGRpc3BsYXkgcHVycG9zZXMuXG5cbmZ1bmN0aW9uIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSwgb3BlcmF0b3IsIHN0YWNrU3RhcnRGdW5jdGlvbikge1xuICB0aHJvdyBuZXcgYXNzZXJ0LkFzc2VydGlvbkVycm9yKHtcbiAgICBtZXNzYWdlOiBtZXNzYWdlLFxuICAgIGFjdHVhbDogYWN0dWFsLFxuICAgIGV4cGVjdGVkOiBleHBlY3RlZCxcbiAgICBvcGVyYXRvcjogb3BlcmF0b3IsXG4gICAgc3RhY2tTdGFydEZ1bmN0aW9uOiBzdGFja1N0YXJ0RnVuY3Rpb25cbiAgfSk7XG59XG5cbi8vIEVYVEVOU0lPTiEgYWxsb3dzIGZvciB3ZWxsIGJlaGF2ZWQgZXJyb3JzIGRlZmluZWQgZWxzZXdoZXJlLlxuYXNzZXJ0LmZhaWwgPSBmYWlsO1xuXG4vLyA0LiBQdXJlIGFzc2VydGlvbiB0ZXN0cyB3aGV0aGVyIGEgdmFsdWUgaXMgdHJ1dGh5LCBhcyBkZXRlcm1pbmVkXG4vLyBieSAhIWd1YXJkLlxuLy8gYXNzZXJ0Lm9rKGd1YXJkLCBtZXNzYWdlX29wdCk7XG4vLyBUaGlzIHN0YXRlbWVudCBpcyBlcXVpdmFsZW50IHRvIGFzc2VydC5lcXVhbCh0cnVlLCAhIWd1YXJkLFxuLy8gbWVzc2FnZV9vcHQpOy4gVG8gdGVzdCBzdHJpY3RseSBmb3IgdGhlIHZhbHVlIHRydWUsIHVzZVxuLy8gYXNzZXJ0LnN0cmljdEVxdWFsKHRydWUsIGd1YXJkLCBtZXNzYWdlX29wdCk7LlxuXG5mdW5jdGlvbiBvayh2YWx1ZSwgbWVzc2FnZSkge1xuICBpZiAoIXZhbHVlKSBmYWlsKHZhbHVlLCB0cnVlLCBtZXNzYWdlLCAnPT0nLCBhc3NlcnQub2spO1xufVxuYXNzZXJ0Lm9rID0gb2s7XG5cbi8vIDUuIFRoZSBlcXVhbGl0eSBhc3NlcnRpb24gdGVzdHMgc2hhbGxvdywgY29lcmNpdmUgZXF1YWxpdHkgd2l0aFxuLy8gPT0uXG4vLyBhc3NlcnQuZXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZV9vcHQpO1xuXG5hc3NlcnQuZXF1YWwgPSBmdW5jdGlvbiBlcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7XG4gIGlmIChhY3R1YWwgIT0gZXhwZWN0ZWQpIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSwgJz09JywgYXNzZXJ0LmVxdWFsKTtcbn07XG5cbi8vIDYuIFRoZSBub24tZXF1YWxpdHkgYXNzZXJ0aW9uIHRlc3RzIGZvciB3aGV0aGVyIHR3byBvYmplY3RzIGFyZSBub3QgZXF1YWxcbi8vIHdpdGggIT0gYXNzZXJ0Lm5vdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2Vfb3B0KTtcblxuYXNzZXJ0Lm5vdEVxdWFsID0gZnVuY3Rpb24gbm90RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoYWN0dWFsID09IGV4cGVjdGVkKSB7XG4gICAgZmFpbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlLCAnIT0nLCBhc3NlcnQubm90RXF1YWwpO1xuICB9XG59O1xuXG4vLyA3LiBUaGUgZXF1aXZhbGVuY2UgYXNzZXJ0aW9uIHRlc3RzIGEgZGVlcCBlcXVhbGl0eSByZWxhdGlvbi5cbi8vIGFzc2VydC5kZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZV9vcHQpO1xuXG5hc3NlcnQuZGVlcEVxdWFsID0gZnVuY3Rpb24gZGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgaWYgKCFfZGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQpKSB7XG4gICAgZmFpbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlLCAnZGVlcEVxdWFsJywgYXNzZXJ0LmRlZXBFcXVhbCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIF9kZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCkge1xuICAvLyA3LjEuIEFsbCBpZGVudGljYWwgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbiAgaWYgKGFjdHVhbCA9PT0gZXhwZWN0ZWQpIHtcbiAgICByZXR1cm4gdHJ1ZTtcblxuICB9IGVsc2UgaWYgKHV0aWwuaXNCdWZmZXIoYWN0dWFsKSAmJiB1dGlsLmlzQnVmZmVyKGV4cGVjdGVkKSkge1xuICAgIGlmIChhY3R1YWwubGVuZ3RoICE9IGV4cGVjdGVkLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhY3R1YWwubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChhY3R1YWxbaV0gIT09IGV4cGVjdGVkW2ldKSByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWU7XG5cbiAgLy8gNy4yLiBJZiB0aGUgZXhwZWN0ZWQgdmFsdWUgaXMgYSBEYXRlIG9iamVjdCwgdGhlIGFjdHVhbCB2YWx1ZSBpc1xuICAvLyBlcXVpdmFsZW50IGlmIGl0IGlzIGFsc28gYSBEYXRlIG9iamVjdCB0aGF0IHJlZmVycyB0byB0aGUgc2FtZSB0aW1lLlxuICB9IGVsc2UgaWYgKHV0aWwuaXNEYXRlKGFjdHVhbCkgJiYgdXRpbC5pc0RhdGUoZXhwZWN0ZWQpKSB7XG4gICAgcmV0dXJuIGFjdHVhbC5nZXRUaW1lKCkgPT09IGV4cGVjdGVkLmdldFRpbWUoKTtcblxuICAvLyA3LjMgSWYgdGhlIGV4cGVjdGVkIHZhbHVlIGlzIGEgUmVnRXhwIG9iamVjdCwgdGhlIGFjdHVhbCB2YWx1ZSBpc1xuICAvLyBlcXVpdmFsZW50IGlmIGl0IGlzIGFsc28gYSBSZWdFeHAgb2JqZWN0IHdpdGggdGhlIHNhbWUgc291cmNlIGFuZFxuICAvLyBwcm9wZXJ0aWVzIChgZ2xvYmFsYCwgYG11bHRpbGluZWAsIGBsYXN0SW5kZXhgLCBgaWdub3JlQ2FzZWApLlxuICB9IGVsc2UgaWYgKHV0aWwuaXNSZWdFeHAoYWN0dWFsKSAmJiB1dGlsLmlzUmVnRXhwKGV4cGVjdGVkKSkge1xuICAgIHJldHVybiBhY3R1YWwuc291cmNlID09PSBleHBlY3RlZC5zb3VyY2UgJiZcbiAgICAgICAgICAgYWN0dWFsLmdsb2JhbCA9PT0gZXhwZWN0ZWQuZ2xvYmFsICYmXG4gICAgICAgICAgIGFjdHVhbC5tdWx0aWxpbmUgPT09IGV4cGVjdGVkLm11bHRpbGluZSAmJlxuICAgICAgICAgICBhY3R1YWwubGFzdEluZGV4ID09PSBleHBlY3RlZC5sYXN0SW5kZXggJiZcbiAgICAgICAgICAgYWN0dWFsLmlnbm9yZUNhc2UgPT09IGV4cGVjdGVkLmlnbm9yZUNhc2U7XG5cbiAgLy8gNy40LiBPdGhlciBwYWlycyB0aGF0IGRvIG5vdCBib3RoIHBhc3MgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnLFxuICAvLyBlcXVpdmFsZW5jZSBpcyBkZXRlcm1pbmVkIGJ5ID09LlxuICB9IGVsc2UgaWYgKCF1dGlsLmlzT2JqZWN0KGFjdHVhbCkgJiYgIXV0aWwuaXNPYmplY3QoZXhwZWN0ZWQpKSB7XG4gICAgcmV0dXJuIGFjdHVhbCA9PSBleHBlY3RlZDtcblxuICAvLyA3LjUgRm9yIGFsbCBvdGhlciBPYmplY3QgcGFpcnMsIGluY2x1ZGluZyBBcnJheSBvYmplY3RzLCBlcXVpdmFsZW5jZSBpc1xuICAvLyBkZXRlcm1pbmVkIGJ5IGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoYXMgdmVyaWZpZWRcbiAgLy8gd2l0aCBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwpLCB0aGUgc2FtZSBzZXQgb2Yga2V5c1xuICAvLyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSwgZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5XG4gIC8vIGNvcnJlc3BvbmRpbmcga2V5LCBhbmQgYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5LiBOb3RlOiB0aGlzXG4gIC8vIGFjY291bnRzIGZvciBib3RoIG5hbWVkIGFuZCBpbmRleGVkIHByb3BlcnRpZXMgb24gQXJyYXlzLlxuICB9IGVsc2Uge1xuICAgIHJldHVybiBvYmpFcXVpdihhY3R1YWwsIGV4cGVjdGVkKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc0FyZ3VtZW50cyhvYmplY3QpIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmplY3QpID09ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xufVxuXG5mdW5jdGlvbiBvYmpFcXVpdihhLCBiKSB7XG4gIGlmICh1dGlsLmlzTnVsbE9yVW5kZWZpbmVkKGEpIHx8IHV0aWwuaXNOdWxsT3JVbmRlZmluZWQoYikpXG4gICAgcmV0dXJuIGZhbHNlO1xuICAvLyBhbiBpZGVudGljYWwgJ3Byb3RvdHlwZScgcHJvcGVydHkuXG4gIGlmIChhLnByb3RvdHlwZSAhPT0gYi5wcm90b3R5cGUpIHJldHVybiBmYWxzZTtcbiAgLy8gaWYgb25lIGlzIGEgcHJpbWl0aXZlLCB0aGUgb3RoZXIgbXVzdCBiZSBzYW1lXG4gIGlmICh1dGlsLmlzUHJpbWl0aXZlKGEpIHx8IHV0aWwuaXNQcmltaXRpdmUoYikpIHtcbiAgICByZXR1cm4gYSA9PT0gYjtcbiAgfVxuICB2YXIgYUlzQXJncyA9IGlzQXJndW1lbnRzKGEpLFxuICAgICAgYklzQXJncyA9IGlzQXJndW1lbnRzKGIpO1xuICBpZiAoKGFJc0FyZ3MgJiYgIWJJc0FyZ3MpIHx8ICghYUlzQXJncyAmJiBiSXNBcmdzKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIGlmIChhSXNBcmdzKSB7XG4gICAgYSA9IHBTbGljZS5jYWxsKGEpO1xuICAgIGIgPSBwU2xpY2UuY2FsbChiKTtcbiAgICByZXR1cm4gX2RlZXBFcXVhbChhLCBiKTtcbiAgfVxuICB2YXIga2EgPSBvYmplY3RLZXlzKGEpLFxuICAgICAga2IgPSBvYmplY3RLZXlzKGIpLFxuICAgICAga2V5LCBpO1xuICAvLyBoYXZpbmcgdGhlIHNhbWUgbnVtYmVyIG9mIG93bmVkIHByb3BlcnRpZXMgKGtleXMgaW5jb3Jwb3JhdGVzXG4gIC8vIGhhc093blByb3BlcnR5KVxuICBpZiAoa2EubGVuZ3RoICE9IGtiLmxlbmd0aClcbiAgICByZXR1cm4gZmFsc2U7XG4gIC8vdGhlIHNhbWUgc2V0IG9mIGtleXMgKGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBvcmRlciksXG4gIGthLnNvcnQoKTtcbiAga2Iuc29ydCgpO1xuICAvL35+fmNoZWFwIGtleSB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgaWYgKGthW2ldICE9IGtiW2ldKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5IGNvcnJlc3BvbmRpbmcga2V5LCBhbmRcbiAgLy9+fn5wb3NzaWJseSBleHBlbnNpdmUgZGVlcCB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAga2V5ID0ga2FbaV07XG4gICAgaWYgKCFfZGVlcEVxdWFsKGFba2V5XSwgYltrZXldKSkgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG4vLyA4LiBUaGUgbm9uLWVxdWl2YWxlbmNlIGFzc2VydGlvbiB0ZXN0cyBmb3IgYW55IGRlZXAgaW5lcXVhbGl0eS5cbi8vIGFzc2VydC5ub3REZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZV9vcHQpO1xuXG5hc3NlcnQubm90RGVlcEVxdWFsID0gZnVuY3Rpb24gbm90RGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgaWYgKF9kZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCkpIHtcbiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsICdub3REZWVwRXF1YWwnLCBhc3NlcnQubm90RGVlcEVxdWFsKTtcbiAgfVxufTtcblxuLy8gOS4gVGhlIHN0cmljdCBlcXVhbGl0eSBhc3NlcnRpb24gdGVzdHMgc3RyaWN0IGVxdWFsaXR5LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbi8vIGFzc2VydC5zdHJpY3RFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlX29wdCk7XG5cbmFzc2VydC5zdHJpY3RFcXVhbCA9IGZ1bmN0aW9uIHN0cmljdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpIHtcbiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsICc9PT0nLCBhc3NlcnQuc3RyaWN0RXF1YWwpO1xuICB9XG59O1xuXG4vLyAxMC4gVGhlIHN0cmljdCBub24tZXF1YWxpdHkgYXNzZXJ0aW9uIHRlc3RzIGZvciBzdHJpY3QgaW5lcXVhbGl0eSwgYXNcbi8vIGRldGVybWluZWQgYnkgIT09LiAgYXNzZXJ0Lm5vdFN0cmljdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2Vfb3B0KTtcblxuYXNzZXJ0Lm5vdFN0cmljdEVxdWFsID0gZnVuY3Rpb24gbm90U3RyaWN0RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoYWN0dWFsID09PSBleHBlY3RlZCkge1xuICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSwgJyE9PScsIGFzc2VydC5ub3RTdHJpY3RFcXVhbCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGV4cGVjdGVkRXhjZXB0aW9uKGFjdHVhbCwgZXhwZWN0ZWQpIHtcbiAgaWYgKCFhY3R1YWwgfHwgIWV4cGVjdGVkKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChleHBlY3RlZCkgPT0gJ1tvYmplY3QgUmVnRXhwXScpIHtcbiAgICByZXR1cm4gZXhwZWN0ZWQudGVzdChhY3R1YWwpO1xuICB9IGVsc2UgaWYgKGFjdHVhbCBpbnN0YW5jZW9mIGV4cGVjdGVkKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gZWxzZSBpZiAoZXhwZWN0ZWQuY2FsbCh7fSwgYWN0dWFsKSA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBfdGhyb3dzKHNob3VsZFRocm93LCBibG9jaywgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgdmFyIGFjdHVhbDtcblxuICBpZiAodXRpbC5pc1N0cmluZyhleHBlY3RlZCkpIHtcbiAgICBtZXNzYWdlID0gZXhwZWN0ZWQ7XG4gICAgZXhwZWN0ZWQgPSBudWxsO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBibG9jaygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgYWN0dWFsID0gZTtcbiAgfVxuXG4gIG1lc3NhZ2UgPSAoZXhwZWN0ZWQgJiYgZXhwZWN0ZWQubmFtZSA/ICcgKCcgKyBleHBlY3RlZC5uYW1lICsgJykuJyA6ICcuJykgK1xuICAgICAgICAgICAgKG1lc3NhZ2UgPyAnICcgKyBtZXNzYWdlIDogJy4nKTtcblxuICBpZiAoc2hvdWxkVGhyb3cgJiYgIWFjdHVhbCkge1xuICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgJ01pc3NpbmcgZXhwZWN0ZWQgZXhjZXB0aW9uJyArIG1lc3NhZ2UpO1xuICB9XG5cbiAgaWYgKCFzaG91bGRUaHJvdyAmJiBleHBlY3RlZEV4Y2VwdGlvbihhY3R1YWwsIGV4cGVjdGVkKSkge1xuICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgJ0dvdCB1bndhbnRlZCBleGNlcHRpb24nICsgbWVzc2FnZSk7XG4gIH1cblxuICBpZiAoKHNob3VsZFRocm93ICYmIGFjdHVhbCAmJiBleHBlY3RlZCAmJlxuICAgICAgIWV4cGVjdGVkRXhjZXB0aW9uKGFjdHVhbCwgZXhwZWN0ZWQpKSB8fCAoIXNob3VsZFRocm93ICYmIGFjdHVhbCkpIHtcbiAgICB0aHJvdyBhY3R1YWw7XG4gIH1cbn1cblxuLy8gMTEuIEV4cGVjdGVkIHRvIHRocm93IGFuIGVycm9yOlxuLy8gYXNzZXJ0LnRocm93cyhibG9jaywgRXJyb3Jfb3B0LCBtZXNzYWdlX29wdCk7XG5cbmFzc2VydC50aHJvd3MgPSBmdW5jdGlvbihibG9jaywgLypvcHRpb25hbCovZXJyb3IsIC8qb3B0aW9uYWwqL21lc3NhZ2UpIHtcbiAgX3Rocm93cy5hcHBseSh0aGlzLCBbdHJ1ZV0uY29uY2F0KHBTbGljZS5jYWxsKGFyZ3VtZW50cykpKTtcbn07XG5cbi8vIEVYVEVOU0lPTiEgVGhpcyBpcyBhbm5veWluZyB0byB3cml0ZSBvdXRzaWRlIHRoaXMgbW9kdWxlLlxuYXNzZXJ0LmRvZXNOb3RUaHJvdyA9IGZ1bmN0aW9uKGJsb2NrLCAvKm9wdGlvbmFsKi9tZXNzYWdlKSB7XG4gIF90aHJvd3MuYXBwbHkodGhpcywgW2ZhbHNlXS5jb25jYXQocFNsaWNlLmNhbGwoYXJndW1lbnRzKSkpO1xufTtcblxuYXNzZXJ0LmlmRXJyb3IgPSBmdW5jdGlvbihlcnIpIHsgaWYgKGVycikge3Rocm93IGVycjt9fTtcblxudmFyIG9iamVjdEtleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gIHZhciBrZXlzID0gW107XG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAoaGFzT3duLmNhbGwob2JqLCBrZXkpKSBrZXlzLnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4ga2V5cztcbn07XG4iLCJpZiAodHlwZW9mIE9iamVjdC5jcmVhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgLy8gaW1wbGVtZW50YXRpb24gZnJvbSBzdGFuZGFyZCBub2RlLmpzICd1dGlsJyBtb2R1bGVcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIGN0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckN0b3IucHJvdG90eXBlLCB7XG4gICAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgICB2YWx1ZTogY3RvcixcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcbn0gZWxzZSB7XG4gIC8vIG9sZCBzY2hvb2wgc2hpbSBmb3Igb2xkIGJyb3dzZXJzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICB2YXIgVGVtcEN0b3IgPSBmdW5jdGlvbiAoKSB7fVxuICAgIFRlbXBDdG9yLnByb3RvdHlwZSA9IHN1cGVyQ3Rvci5wcm90b3R5cGVcbiAgICBjdG9yLnByb3RvdHlwZSA9IG5ldyBUZW1wQ3RvcigpXG4gICAgY3Rvci5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBjdG9yXG4gIH1cbn1cbiIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBpcyBub3QgZGVmaW5lZCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGlzIG5vdCBkZWZpbmVkJyk7XG4gICAgICAgIH1cbiAgICB9XG59ICgpKVxuZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHtcbiAgICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0J1ZmZlcihhcmcpIHtcbiAgcmV0dXJuIGFyZyAmJiB0eXBlb2YgYXJnID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBhcmcuY29weSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcuZmlsbCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcucmVhZFVJbnQ4ID09PSAnZnVuY3Rpb24nO1xufSIsIi8vIENvcHlyaWdodCBKb3llbnQsIEluYy4gYW5kIG90aGVyIE5vZGUgY29udHJpYnV0b3JzLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhXG4vLyBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlXG4vLyBcIlNvZnR3YXJlXCIpLCB0byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmdcbi8vIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCxcbi8vIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXRcbi8vIHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZVxuLy8gZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWRcbi8vIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1Ncbi8vIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbi8vIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU5cbi8vIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLFxuLy8gREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SXG4vLyBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFXG4vLyBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG52YXIgZm9ybWF0UmVnRXhwID0gLyVbc2RqJV0vZztcbmV4cG9ydHMuZm9ybWF0ID0gZnVuY3Rpb24oZikge1xuICBpZiAoIWlzU3RyaW5nKGYpKSB7XG4gICAgdmFyIG9iamVjdHMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgb2JqZWN0cy5wdXNoKGluc3BlY3QoYXJndW1lbnRzW2ldKSk7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3RzLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHZhciBpID0gMTtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gIHZhciBsZW4gPSBhcmdzLmxlbmd0aDtcbiAgdmFyIHN0ciA9IFN0cmluZyhmKS5yZXBsYWNlKGZvcm1hdFJlZ0V4cCwgZnVuY3Rpb24oeCkge1xuICAgIGlmICh4ID09PSAnJSUnKSByZXR1cm4gJyUnO1xuICAgIGlmIChpID49IGxlbikgcmV0dXJuIHg7XG4gICAgc3dpdGNoICh4KSB7XG4gICAgICBjYXNlICclcyc6IHJldHVybiBTdHJpbmcoYXJnc1tpKytdKTtcbiAgICAgIGNhc2UgJyVkJzogcmV0dXJuIE51bWJlcihhcmdzW2krK10pO1xuICAgICAgY2FzZSAnJWonOlxuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhcmdzW2krK10pO1xuICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgcmV0dXJuICdbQ2lyY3VsYXJdJztcbiAgICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICB9KTtcbiAgZm9yICh2YXIgeCA9IGFyZ3NbaV07IGkgPCBsZW47IHggPSBhcmdzWysraV0pIHtcbiAgICBpZiAoaXNOdWxsKHgpIHx8ICFpc09iamVjdCh4KSkge1xuICAgICAgc3RyICs9ICcgJyArIHg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciArPSAnICcgKyBpbnNwZWN0KHgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc3RyO1xufTtcblxuXG4vLyBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLlxuLy8gUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC5cbi8vIElmIC0tbm8tZGVwcmVjYXRpb24gaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuXG5leHBvcnRzLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKGZuLCBtc2cpIHtcbiAgLy8gQWxsb3cgZm9yIGRlcHJlY2F0aW5nIHRoaW5ncyBpbiB0aGUgcHJvY2VzcyBvZiBzdGFydGluZyB1cC5cbiAgaWYgKGlzVW5kZWZpbmVkKGdsb2JhbC5wcm9jZXNzKSkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBleHBvcnRzLmRlcHJlY2F0ZShmbiwgbXNnKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgIH07XG4gIH1cblxuICBpZiAocHJvY2Vzcy5ub0RlcHJlY2F0aW9uID09PSB0cnVlKSB7XG4gICAgcmV0dXJuIGZuO1xuICB9XG5cbiAgdmFyIHdhcm5lZCA9IGZhbHNlO1xuICBmdW5jdGlvbiBkZXByZWNhdGVkKCkge1xuICAgIGlmICghd2FybmVkKSB7XG4gICAgICBpZiAocHJvY2Vzcy50aHJvd0RlcHJlY2F0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cpO1xuICAgICAgfSBlbHNlIGlmIChwcm9jZXNzLnRyYWNlRGVwcmVjYXRpb24pIHtcbiAgICAgICAgY29uc29sZS50cmFjZShtc2cpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtc2cpO1xuICAgICAgfVxuICAgICAgd2FybmVkID0gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIH1cblxuICByZXR1cm4gZGVwcmVjYXRlZDtcbn07XG5cblxudmFyIGRlYnVncyA9IHt9O1xudmFyIGRlYnVnRW52aXJvbjtcbmV4cG9ydHMuZGVidWdsb2cgPSBmdW5jdGlvbihzZXQpIHtcbiAgaWYgKGlzVW5kZWZpbmVkKGRlYnVnRW52aXJvbikpXG4gICAgZGVidWdFbnZpcm9uID0gcHJvY2Vzcy5lbnYuTk9ERV9ERUJVRyB8fCAnJztcbiAgc2V0ID0gc2V0LnRvVXBwZXJDYXNlKCk7XG4gIGlmICghZGVidWdzW3NldF0pIHtcbiAgICBpZiAobmV3IFJlZ0V4cCgnXFxcXGInICsgc2V0ICsgJ1xcXFxiJywgJ2knKS50ZXN0KGRlYnVnRW52aXJvbikpIHtcbiAgICAgIHZhciBwaWQgPSBwcm9jZXNzLnBpZDtcbiAgICAgIGRlYnVnc1tzZXRdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBtc2cgPSBleHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLCBhcmd1bWVudHMpO1xuICAgICAgICBjb25zb2xlLmVycm9yKCclcyAlZDogJXMnLCBzZXQsIHBpZCwgbXNnKTtcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlYnVnc1tzZXRdID0gZnVuY3Rpb24oKSB7fTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGRlYnVnc1tzZXRdO1xufTtcblxuXG4vKipcbiAqIEVjaG9zIHRoZSB2YWx1ZSBvZiBhIHZhbHVlLiBUcnlzIHRvIHByaW50IHRoZSB2YWx1ZSBvdXRcbiAqIGluIHRoZSBiZXN0IHdheSBwb3NzaWJsZSBnaXZlbiB0aGUgZGlmZmVyZW50IHR5cGVzLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmogVGhlIG9iamVjdCB0byBwcmludCBvdXQuXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0cyBPcHRpb25hbCBvcHRpb25zIG9iamVjdCB0aGF0IGFsdGVycyB0aGUgb3V0cHV0LlxuICovXG4vKiBsZWdhY3k6IG9iaiwgc2hvd0hpZGRlbiwgZGVwdGgsIGNvbG9ycyovXG5mdW5jdGlvbiBpbnNwZWN0KG9iaiwgb3B0cykge1xuICAvLyBkZWZhdWx0IG9wdGlvbnNcbiAgdmFyIGN0eCA9IHtcbiAgICBzZWVuOiBbXSxcbiAgICBzdHlsaXplOiBzdHlsaXplTm9Db2xvclxuICB9O1xuICAvLyBsZWdhY3kuLi5cbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPj0gMykgY3R4LmRlcHRoID0gYXJndW1lbnRzWzJdO1xuICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+PSA0KSBjdHguY29sb3JzID0gYXJndW1lbnRzWzNdO1xuICBpZiAoaXNCb29sZWFuKG9wdHMpKSB7XG4gICAgLy8gbGVnYWN5Li4uXG4gICAgY3R4LnNob3dIaWRkZW4gPSBvcHRzO1xuICB9IGVsc2UgaWYgKG9wdHMpIHtcbiAgICAvLyBnb3QgYW4gXCJvcHRpb25zXCIgb2JqZWN0XG4gICAgZXhwb3J0cy5fZXh0ZW5kKGN0eCwgb3B0cyk7XG4gIH1cbiAgLy8gc2V0IGRlZmF1bHQgb3B0aW9uc1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LnNob3dIaWRkZW4pKSBjdHguc2hvd0hpZGRlbiA9IGZhbHNlO1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LmRlcHRoKSkgY3R4LmRlcHRoID0gMjtcbiAgaWYgKGlzVW5kZWZpbmVkKGN0eC5jb2xvcnMpKSBjdHguY29sb3JzID0gZmFsc2U7XG4gIGlmIChpc1VuZGVmaW5lZChjdHguY3VzdG9tSW5zcGVjdCkpIGN0eC5jdXN0b21JbnNwZWN0ID0gdHJ1ZTtcbiAgaWYgKGN0eC5jb2xvcnMpIGN0eC5zdHlsaXplID0gc3R5bGl6ZVdpdGhDb2xvcjtcbiAgcmV0dXJuIGZvcm1hdFZhbHVlKGN0eCwgb2JqLCBjdHguZGVwdGgpO1xufVxuZXhwb3J0cy5pbnNwZWN0ID0gaW5zcGVjdDtcblxuXG4vLyBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0FOU0lfZXNjYXBlX2NvZGUjZ3JhcGhpY3Ncbmluc3BlY3QuY29sb3JzID0ge1xuICAnYm9sZCcgOiBbMSwgMjJdLFxuICAnaXRhbGljJyA6IFszLCAyM10sXG4gICd1bmRlcmxpbmUnIDogWzQsIDI0XSxcbiAgJ2ludmVyc2UnIDogWzcsIDI3XSxcbiAgJ3doaXRlJyA6IFszNywgMzldLFxuICAnZ3JleScgOiBbOTAsIDM5XSxcbiAgJ2JsYWNrJyA6IFszMCwgMzldLFxuICAnYmx1ZScgOiBbMzQsIDM5XSxcbiAgJ2N5YW4nIDogWzM2LCAzOV0sXG4gICdncmVlbicgOiBbMzIsIDM5XSxcbiAgJ21hZ2VudGEnIDogWzM1LCAzOV0sXG4gICdyZWQnIDogWzMxLCAzOV0sXG4gICd5ZWxsb3cnIDogWzMzLCAzOV1cbn07XG5cbi8vIERvbid0IHVzZSAnYmx1ZScgbm90IHZpc2libGUgb24gY21kLmV4ZVxuaW5zcGVjdC5zdHlsZXMgPSB7XG4gICdzcGVjaWFsJzogJ2N5YW4nLFxuICAnbnVtYmVyJzogJ3llbGxvdycsXG4gICdib29sZWFuJzogJ3llbGxvdycsXG4gICd1bmRlZmluZWQnOiAnZ3JleScsXG4gICdudWxsJzogJ2JvbGQnLFxuICAnc3RyaW5nJzogJ2dyZWVuJyxcbiAgJ2RhdGUnOiAnbWFnZW50YScsXG4gIC8vIFwibmFtZVwiOiBpbnRlbnRpb25hbGx5IG5vdCBzdHlsaW5nXG4gICdyZWdleHAnOiAncmVkJ1xufTtcblxuXG5mdW5jdGlvbiBzdHlsaXplV2l0aENvbG9yKHN0ciwgc3R5bGVUeXBlKSB7XG4gIHZhciBzdHlsZSA9IGluc3BlY3Quc3R5bGVzW3N0eWxlVHlwZV07XG5cbiAgaWYgKHN0eWxlKSB7XG4gICAgcmV0dXJuICdcXHUwMDFiWycgKyBpbnNwZWN0LmNvbG9yc1tzdHlsZV1bMF0gKyAnbScgKyBzdHIgK1xuICAgICAgICAgICAnXFx1MDAxYlsnICsgaW5zcGVjdC5jb2xvcnNbc3R5bGVdWzFdICsgJ20nO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzdHI7XG4gIH1cbn1cblxuXG5mdW5jdGlvbiBzdHlsaXplTm9Db2xvcihzdHIsIHN0eWxlVHlwZSkge1xuICByZXR1cm4gc3RyO1xufVxuXG5cbmZ1bmN0aW9uIGFycmF5VG9IYXNoKGFycmF5KSB7XG4gIHZhciBoYXNoID0ge307XG5cbiAgYXJyYXkuZm9yRWFjaChmdW5jdGlvbih2YWwsIGlkeCkge1xuICAgIGhhc2hbdmFsXSA9IHRydWU7XG4gIH0pO1xuXG4gIHJldHVybiBoYXNoO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdFZhbHVlKGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcykge1xuICAvLyBQcm92aWRlIGEgaG9vayBmb3IgdXNlci1zcGVjaWZpZWQgaW5zcGVjdCBmdW5jdGlvbnMuXG4gIC8vIENoZWNrIHRoYXQgdmFsdWUgaXMgYW4gb2JqZWN0IHdpdGggYW4gaW5zcGVjdCBmdW5jdGlvbiBvbiBpdFxuICBpZiAoY3R4LmN1c3RvbUluc3BlY3QgJiZcbiAgICAgIHZhbHVlICYmXG4gICAgICBpc0Z1bmN0aW9uKHZhbHVlLmluc3BlY3QpICYmXG4gICAgICAvLyBGaWx0ZXIgb3V0IHRoZSB1dGlsIG1vZHVsZSwgaXQncyBpbnNwZWN0IGZ1bmN0aW9uIGlzIHNwZWNpYWxcbiAgICAgIHZhbHVlLmluc3BlY3QgIT09IGV4cG9ydHMuaW5zcGVjdCAmJlxuICAgICAgLy8gQWxzbyBmaWx0ZXIgb3V0IGFueSBwcm90b3R5cGUgb2JqZWN0cyB1c2luZyB0aGUgY2lyY3VsYXIgY2hlY2suXG4gICAgICAhKHZhbHVlLmNvbnN0cnVjdG9yICYmIHZhbHVlLmNvbnN0cnVjdG9yLnByb3RvdHlwZSA9PT0gdmFsdWUpKSB7XG4gICAgdmFyIHJldCA9IHZhbHVlLmluc3BlY3QocmVjdXJzZVRpbWVzLCBjdHgpO1xuICAgIGlmICghaXNTdHJpbmcocmV0KSkge1xuICAgICAgcmV0ID0gZm9ybWF0VmFsdWUoY3R4LCByZXQsIHJlY3Vyc2VUaW1lcyk7XG4gICAgfVxuICAgIHJldHVybiByZXQ7XG4gIH1cblxuICAvLyBQcmltaXRpdmUgdHlwZXMgY2Fubm90IGhhdmUgcHJvcGVydGllc1xuICB2YXIgcHJpbWl0aXZlID0gZm9ybWF0UHJpbWl0aXZlKGN0eCwgdmFsdWUpO1xuICBpZiAocHJpbWl0aXZlKSB7XG4gICAgcmV0dXJuIHByaW1pdGl2ZTtcbiAgfVxuXG4gIC8vIExvb2sgdXAgdGhlIGtleXMgb2YgdGhlIG9iamVjdC5cbiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG4gIHZhciB2aXNpYmxlS2V5cyA9IGFycmF5VG9IYXNoKGtleXMpO1xuXG4gIGlmIChjdHguc2hvd0hpZGRlbikge1xuICAgIGtleXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh2YWx1ZSk7XG4gIH1cblxuICAvLyBJRSBkb2Vzbid0IG1ha2UgZXJyb3IgZmllbGRzIG5vbi1lbnVtZXJhYmxlXG4gIC8vIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9kd3c1MnNidCh2PXZzLjk0KS5hc3B4XG4gIGlmIChpc0Vycm9yKHZhbHVlKVxuICAgICAgJiYgKGtleXMuaW5kZXhPZignbWVzc2FnZScpID49IDAgfHwga2V5cy5pbmRleE9mKCdkZXNjcmlwdGlvbicpID49IDApKSB7XG4gICAgcmV0dXJuIGZvcm1hdEVycm9yKHZhbHVlKTtcbiAgfVxuXG4gIC8vIFNvbWUgdHlwZSBvZiBvYmplY3Qgd2l0aG91dCBwcm9wZXJ0aWVzIGNhbiBiZSBzaG9ydGN1dHRlZC5cbiAgaWYgKGtleXMubGVuZ3RoID09PSAwKSB7XG4gICAgaWYgKGlzRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgICB2YXIgbmFtZSA9IHZhbHVlLm5hbWUgPyAnOiAnICsgdmFsdWUubmFtZSA6ICcnO1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKCdbRnVuY3Rpb24nICsgbmFtZSArICddJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gICAgaWYgKGlzUmVnRXhwKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGN0eC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksICdyZWdleHAnKTtcbiAgICB9XG4gICAgaWYgKGlzRGF0ZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZShEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSwgJ2RhdGUnKTtcbiAgICB9XG4gICAgaWYgKGlzRXJyb3IodmFsdWUpKSB7XG4gICAgICByZXR1cm4gZm9ybWF0RXJyb3IodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBiYXNlID0gJycsIGFycmF5ID0gZmFsc2UsIGJyYWNlcyA9IFsneycsICd9J107XG5cbiAgLy8gTWFrZSBBcnJheSBzYXkgdGhhdCB0aGV5IGFyZSBBcnJheVxuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICBhcnJheSA9IHRydWU7XG4gICAgYnJhY2VzID0gWydbJywgJ10nXTtcbiAgfVxuXG4gIC8vIE1ha2UgZnVuY3Rpb25zIHNheSB0aGF0IHRoZXkgYXJlIGZ1bmN0aW9uc1xuICBpZiAoaXNGdW5jdGlvbih2YWx1ZSkpIHtcbiAgICB2YXIgbiA9IHZhbHVlLm5hbWUgPyAnOiAnICsgdmFsdWUubmFtZSA6ICcnO1xuICAgIGJhc2UgPSAnIFtGdW5jdGlvbicgKyBuICsgJ10nO1xuICB9XG5cbiAgLy8gTWFrZSBSZWdFeHBzIHNheSB0aGF0IHRoZXkgYXJlIFJlZ0V4cHNcbiAgaWYgKGlzUmVnRXhwKHZhbHVlKSkge1xuICAgIGJhc2UgPSAnICcgKyBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICB9XG5cbiAgLy8gTWFrZSBkYXRlcyB3aXRoIHByb3BlcnRpZXMgZmlyc3Qgc2F5IHRoZSBkYXRlXG4gIGlmIChpc0RhdGUodmFsdWUpKSB7XG4gICAgYmFzZSA9ICcgJyArIERhdGUucHJvdG90eXBlLnRvVVRDU3RyaW5nLmNhbGwodmFsdWUpO1xuICB9XG5cbiAgLy8gTWFrZSBlcnJvciB3aXRoIG1lc3NhZ2UgZmlyc3Qgc2F5IHRoZSBlcnJvclxuICBpZiAoaXNFcnJvcih2YWx1ZSkpIHtcbiAgICBiYXNlID0gJyAnICsgZm9ybWF0RXJyb3IodmFsdWUpO1xuICB9XG5cbiAgaWYgKGtleXMubGVuZ3RoID09PSAwICYmICghYXJyYXkgfHwgdmFsdWUubGVuZ3RoID09IDApKSB7XG4gICAgcmV0dXJuIGJyYWNlc1swXSArIGJhc2UgKyBicmFjZXNbMV07XG4gIH1cblxuICBpZiAocmVjdXJzZVRpbWVzIDwgMCkge1xuICAgIGlmIChpc1JlZ0V4cCh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZShSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLCAncmVnZXhwJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZSgnW09iamVjdF0nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgfVxuXG4gIGN0eC5zZWVuLnB1c2godmFsdWUpO1xuXG4gIHZhciBvdXRwdXQ7XG4gIGlmIChhcnJheSkge1xuICAgIG91dHB1dCA9IGZvcm1hdEFycmF5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleXMpO1xuICB9IGVsc2Uge1xuICAgIG91dHB1dCA9IGtleXMubWFwKGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIGZvcm1hdFByb3BlcnR5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleSwgYXJyYXkpO1xuICAgIH0pO1xuICB9XG5cbiAgY3R4LnNlZW4ucG9wKCk7XG5cbiAgcmV0dXJuIHJlZHVjZVRvU2luZ2xlU3RyaW5nKG91dHB1dCwgYmFzZSwgYnJhY2VzKTtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRQcmltaXRpdmUoY3R4LCB2YWx1ZSkge1xuICBpZiAoaXNVbmRlZmluZWQodmFsdWUpKVxuICAgIHJldHVybiBjdHguc3R5bGl6ZSgndW5kZWZpbmVkJywgJ3VuZGVmaW5lZCcpO1xuICBpZiAoaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgdmFyIHNpbXBsZSA9ICdcXCcnICsgSlNPTi5zdHJpbmdpZnkodmFsdWUpLnJlcGxhY2UoL15cInxcIiQvZywgJycpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvJy9nLCBcIlxcXFwnXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFxcXFwiL2csICdcIicpICsgJ1xcJyc7XG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKHNpbXBsZSwgJ3N0cmluZycpO1xuICB9XG4gIGlmIChpc051bWJlcih2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCcnICsgdmFsdWUsICdudW1iZXInKTtcbiAgaWYgKGlzQm9vbGVhbih2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCcnICsgdmFsdWUsICdib29sZWFuJyk7XG4gIC8vIEZvciBzb21lIHJlYXNvbiB0eXBlb2YgbnVsbCBpcyBcIm9iamVjdFwiLCBzbyBzcGVjaWFsIGNhc2UgaGVyZS5cbiAgaWYgKGlzTnVsbCh2YWx1ZSkpXG4gICAgcmV0dXJuIGN0eC5zdHlsaXplKCdudWxsJywgJ251bGwnKTtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRFcnJvcih2YWx1ZSkge1xuICByZXR1cm4gJ1snICsgRXJyb3IucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpICsgJ10nO1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdEFycmF5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleXMpIHtcbiAgdmFyIG91dHB1dCA9IFtdO1xuICBmb3IgKHZhciBpID0gMCwgbCA9IHZhbHVlLmxlbmd0aDsgaSA8IGw7ICsraSkge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eSh2YWx1ZSwgU3RyaW5nKGkpKSkge1xuICAgICAgb3V0cHV0LnB1c2goZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cyxcbiAgICAgICAgICBTdHJpbmcoaSksIHRydWUpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3V0cHV0LnB1c2goJycpO1xuICAgIH1cbiAgfVxuICBrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgaWYgKCFrZXkubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgICBvdXRwdXQucHVzaChmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLFxuICAgICAgICAgIGtleSwgdHJ1ZSkpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cywga2V5LCBhcnJheSkge1xuICB2YXIgbmFtZSwgc3RyLCBkZXNjO1xuICBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih2YWx1ZSwga2V5KSB8fCB7IHZhbHVlOiB2YWx1ZVtrZXldIH07XG4gIGlmIChkZXNjLmdldCkge1xuICAgIGlmIChkZXNjLnNldCkge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tHZXR0ZXIvU2V0dGVyXScsICdzcGVjaWFsJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciA9IGN0eC5zdHlsaXplKCdbR2V0dGVyXScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGlmIChkZXNjLnNldCkge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tTZXR0ZXJdJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gIH1cbiAgaWYgKCFoYXNPd25Qcm9wZXJ0eSh2aXNpYmxlS2V5cywga2V5KSkge1xuICAgIG5hbWUgPSAnWycgKyBrZXkgKyAnXSc7XG4gIH1cbiAgaWYgKCFzdHIpIHtcbiAgICBpZiAoY3R4LnNlZW4uaW5kZXhPZihkZXNjLnZhbHVlKSA8IDApIHtcbiAgICAgIGlmIChpc051bGwocmVjdXJzZVRpbWVzKSkge1xuICAgICAgICBzdHIgPSBmb3JtYXRWYWx1ZShjdHgsIGRlc2MudmFsdWUsIG51bGwpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RyID0gZm9ybWF0VmFsdWUoY3R4LCBkZXNjLnZhbHVlLCByZWN1cnNlVGltZXMgLSAxKTtcbiAgICAgIH1cbiAgICAgIGlmIChzdHIuaW5kZXhPZignXFxuJykgPiAtMSkge1xuICAgICAgICBpZiAoYXJyYXkpIHtcbiAgICAgICAgICBzdHIgPSBzdHIuc3BsaXQoJ1xcbicpLm1hcChmdW5jdGlvbihsaW5lKSB7XG4gICAgICAgICAgICByZXR1cm4gJyAgJyArIGxpbmU7XG4gICAgICAgICAgfSkuam9pbignXFxuJykuc3Vic3RyKDIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN0ciA9ICdcXG4nICsgc3RyLnNwbGl0KCdcXG4nKS5tYXAoZnVuY3Rpb24obGluZSkge1xuICAgICAgICAgICAgcmV0dXJuICcgICAnICsgbGluZTtcbiAgICAgICAgICB9KS5qb2luKCdcXG4nKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW0NpcmN1bGFyXScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9XG4gIGlmIChpc1VuZGVmaW5lZChuYW1lKSkge1xuICAgIGlmIChhcnJheSAmJiBrZXkubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgICByZXR1cm4gc3RyO1xuICAgIH1cbiAgICBuYW1lID0gSlNPTi5zdHJpbmdpZnkoJycgKyBrZXkpO1xuICAgIGlmIChuYW1lLm1hdGNoKC9eXCIoW2EtekEtWl9dW2EtekEtWl8wLTldKilcIiQvKSkge1xuICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyKDEsIG5hbWUubGVuZ3RoIC0gMik7XG4gICAgICBuYW1lID0gY3R4LnN0eWxpemUobmFtZSwgJ25hbWUnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmFtZSA9IG5hbWUucmVwbGFjZSgvJy9nLCBcIlxcXFwnXCIpXG4gICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcXCIvZywgJ1wiJylcbiAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLyheXCJ8XCIkKS9nLCBcIidcIik7XG4gICAgICBuYW1lID0gY3R4LnN0eWxpemUobmFtZSwgJ3N0cmluZycpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBuYW1lICsgJzogJyArIHN0cjtcbn1cblxuXG5mdW5jdGlvbiByZWR1Y2VUb1NpbmdsZVN0cmluZyhvdXRwdXQsIGJhc2UsIGJyYWNlcykge1xuICB2YXIgbnVtTGluZXNFc3QgPSAwO1xuICB2YXIgbGVuZ3RoID0gb3V0cHV0LnJlZHVjZShmdW5jdGlvbihwcmV2LCBjdXIpIHtcbiAgICBudW1MaW5lc0VzdCsrO1xuICAgIGlmIChjdXIuaW5kZXhPZignXFxuJykgPj0gMCkgbnVtTGluZXNFc3QrKztcbiAgICByZXR1cm4gcHJldiArIGN1ci5yZXBsYWNlKC9cXHUwMDFiXFxbXFxkXFxkP20vZywgJycpLmxlbmd0aCArIDE7XG4gIH0sIDApO1xuXG4gIGlmIChsZW5ndGggPiA2MCkge1xuICAgIHJldHVybiBicmFjZXNbMF0gK1xuICAgICAgICAgICAoYmFzZSA9PT0gJycgPyAnJyA6IGJhc2UgKyAnXFxuICcpICtcbiAgICAgICAgICAgJyAnICtcbiAgICAgICAgICAgb3V0cHV0LmpvaW4oJyxcXG4gICcpICtcbiAgICAgICAgICAgJyAnICtcbiAgICAgICAgICAgYnJhY2VzWzFdO1xuICB9XG5cbiAgcmV0dXJuIGJyYWNlc1swXSArIGJhc2UgKyAnICcgKyBvdXRwdXQuam9pbignLCAnKSArICcgJyArIGJyYWNlc1sxXTtcbn1cblxuXG4vLyBOT1RFOiBUaGVzZSB0eXBlIGNoZWNraW5nIGZ1bmN0aW9ucyBpbnRlbnRpb25hbGx5IGRvbid0IHVzZSBgaW5zdGFuY2VvZmBcbi8vIGJlY2F1c2UgaXQgaXMgZnJhZ2lsZSBhbmQgY2FuIGJlIGVhc2lseSBmYWtlZCB3aXRoIGBPYmplY3QuY3JlYXRlKClgLlxuZnVuY3Rpb24gaXNBcnJheShhcikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShhcik7XG59XG5leHBvcnRzLmlzQXJyYXkgPSBpc0FycmF5O1xuXG5mdW5jdGlvbiBpc0Jvb2xlYW4oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnYm9vbGVhbic7XG59XG5leHBvcnRzLmlzQm9vbGVhbiA9IGlzQm9vbGVhbjtcblxuZnVuY3Rpb24gaXNOdWxsKGFyZykge1xuICByZXR1cm4gYXJnID09PSBudWxsO1xufVxuZXhwb3J0cy5pc051bGwgPSBpc051bGw7XG5cbmZ1bmN0aW9uIGlzTnVsbE9yVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09IG51bGw7XG59XG5leHBvcnRzLmlzTnVsbE9yVW5kZWZpbmVkID0gaXNOdWxsT3JVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzTnVtYmVyKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ251bWJlcic7XG59XG5leHBvcnRzLmlzTnVtYmVyID0gaXNOdW1iZXI7XG5cbmZ1bmN0aW9uIGlzU3RyaW5nKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N0cmluZyc7XG59XG5leHBvcnRzLmlzU3RyaW5nID0gaXNTdHJpbmc7XG5cbmZ1bmN0aW9uIGlzU3ltYm9sKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ3N5bWJvbCc7XG59XG5leHBvcnRzLmlzU3ltYm9sID0gaXNTeW1ib2w7XG5cbmZ1bmN0aW9uIGlzVW5kZWZpbmVkKGFyZykge1xuICByZXR1cm4gYXJnID09PSB2b2lkIDA7XG59XG5leHBvcnRzLmlzVW5kZWZpbmVkID0gaXNVbmRlZmluZWQ7XG5cbmZ1bmN0aW9uIGlzUmVnRXhwKHJlKSB7XG4gIHJldHVybiBpc09iamVjdChyZSkgJiYgb2JqZWN0VG9TdHJpbmcocmUpID09PSAnW29iamVjdCBSZWdFeHBdJztcbn1cbmV4cG9ydHMuaXNSZWdFeHAgPSBpc1JlZ0V4cDtcblxuZnVuY3Rpb24gaXNPYmplY3QoYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnb2JqZWN0JyAmJiBhcmcgIT09IG51bGw7XG59XG5leHBvcnRzLmlzT2JqZWN0ID0gaXNPYmplY3Q7XG5cbmZ1bmN0aW9uIGlzRGF0ZShkKSB7XG4gIHJldHVybiBpc09iamVjdChkKSAmJiBvYmplY3RUb1N0cmluZyhkKSA9PT0gJ1tvYmplY3QgRGF0ZV0nO1xufVxuZXhwb3J0cy5pc0RhdGUgPSBpc0RhdGU7XG5cbmZ1bmN0aW9uIGlzRXJyb3IoZSkge1xuICByZXR1cm4gaXNPYmplY3QoZSkgJiZcbiAgICAgIChvYmplY3RUb1N0cmluZyhlKSA9PT0gJ1tvYmplY3QgRXJyb3JdJyB8fCBlIGluc3RhbmNlb2YgRXJyb3IpO1xufVxuZXhwb3J0cy5pc0Vycm9yID0gaXNFcnJvcjtcblxuZnVuY3Rpb24gaXNGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XG59XG5leHBvcnRzLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uO1xuXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZShhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbCB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnbnVtYmVyJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnIHx8ICAvLyBFUzYgc3ltYm9sXG4gICAgICAgICB0eXBlb2YgYXJnID09PSAndW5kZWZpbmVkJztcbn1cbmV4cG9ydHMuaXNQcmltaXRpdmUgPSBpc1ByaW1pdGl2ZTtcblxuZXhwb3J0cy5pc0J1ZmZlciA9IHJlcXVpcmUoJy4vc3VwcG9ydC9pc0J1ZmZlcicpO1xuXG5mdW5jdGlvbiBvYmplY3RUb1N0cmluZyhvKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobyk7XG59XG5cblxuZnVuY3Rpb24gcGFkKG4pIHtcbiAgcmV0dXJuIG4gPCAxMCA/ICcwJyArIG4udG9TdHJpbmcoMTApIDogbi50b1N0cmluZygxMCk7XG59XG5cblxudmFyIG1vbnRocyA9IFsnSmFuJywgJ0ZlYicsICdNYXInLCAnQXByJywgJ01heScsICdKdW4nLCAnSnVsJywgJ0F1ZycsICdTZXAnLFxuICAgICAgICAgICAgICAnT2N0JywgJ05vdicsICdEZWMnXTtcblxuLy8gMjYgRmViIDE2OjE5OjM0XG5mdW5jdGlvbiB0aW1lc3RhbXAoKSB7XG4gIHZhciBkID0gbmV3IERhdGUoKTtcbiAgdmFyIHRpbWUgPSBbcGFkKGQuZ2V0SG91cnMoKSksXG4gICAgICAgICAgICAgIHBhZChkLmdldE1pbnV0ZXMoKSksXG4gICAgICAgICAgICAgIHBhZChkLmdldFNlY29uZHMoKSldLmpvaW4oJzonKTtcbiAgcmV0dXJuIFtkLmdldERhdGUoKSwgbW9udGhzW2QuZ2V0TW9udGgoKV0sIHRpbWVdLmpvaW4oJyAnKTtcbn1cblxuXG4vLyBsb2cgaXMganVzdCBhIHRoaW4gd3JhcHBlciB0byBjb25zb2xlLmxvZyB0aGF0IHByZXBlbmRzIGEgdGltZXN0YW1wXG5leHBvcnRzLmxvZyA9IGZ1bmN0aW9uKCkge1xuICBjb25zb2xlLmxvZygnJXMgLSAlcycsIHRpbWVzdGFtcCgpLCBleHBvcnRzLmZvcm1hdC5hcHBseShleHBvcnRzLCBhcmd1bWVudHMpKTtcbn07XG5cblxuLyoqXG4gKiBJbmhlcml0IHRoZSBwcm90b3R5cGUgbWV0aG9kcyBmcm9tIG9uZSBjb25zdHJ1Y3RvciBpbnRvIGFub3RoZXIuXG4gKlxuICogVGhlIEZ1bmN0aW9uLnByb3RvdHlwZS5pbmhlcml0cyBmcm9tIGxhbmcuanMgcmV3cml0dGVuIGFzIGEgc3RhbmRhbG9uZVxuICogZnVuY3Rpb24gKG5vdCBvbiBGdW5jdGlvbi5wcm90b3R5cGUpLiBOT1RFOiBJZiB0aGlzIGZpbGUgaXMgdG8gYmUgbG9hZGVkXG4gKiBkdXJpbmcgYm9vdHN0cmFwcGluZyB0aGlzIGZ1bmN0aW9uIG5lZWRzIHRvIGJlIHJld3JpdHRlbiB1c2luZyBzb21lIG5hdGl2ZVxuICogZnVuY3Rpb25zIGFzIHByb3RvdHlwZSBzZXR1cCB1c2luZyBub3JtYWwgSmF2YVNjcmlwdCBkb2VzIG5vdCB3b3JrIGFzXG4gKiBleHBlY3RlZCBkdXJpbmcgYm9vdHN0cmFwcGluZyAoc2VlIG1pcnJvci5qcyBpbiByMTE0OTAzKS5cbiAqXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBjdG9yIENvbnN0cnVjdG9yIGZ1bmN0aW9uIHdoaWNoIG5lZWRzIHRvIGluaGVyaXQgdGhlXG4gKiAgICAgcHJvdG90eXBlLlxuICogQHBhcmFtIHtmdW5jdGlvbn0gc3VwZXJDdG9yIENvbnN0cnVjdG9yIGZ1bmN0aW9uIHRvIGluaGVyaXQgcHJvdG90eXBlIGZyb20uXG4gKi9cbmV4cG9ydHMuaW5oZXJpdHMgPSByZXF1aXJlKCdpbmhlcml0cycpO1xuXG5leHBvcnRzLl9leHRlbmQgPSBmdW5jdGlvbihvcmlnaW4sIGFkZCkge1xuICAvLyBEb24ndCBkbyBhbnl0aGluZyBpZiBhZGQgaXNuJ3QgYW4gb2JqZWN0XG4gIGlmICghYWRkIHx8ICFpc09iamVjdChhZGQpKSByZXR1cm4gb3JpZ2luO1xuXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMoYWRkKTtcbiAgdmFyIGkgPSBrZXlzLmxlbmd0aDtcbiAgd2hpbGUgKGktLSkge1xuICAgIG9yaWdpbltrZXlzW2ldXSA9IGFkZFtrZXlzW2ldXTtcbiAgfVxuICByZXR1cm4gb3JpZ2luO1xufTtcblxuZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cbiIsIm1vZHVsZS5leHBvcnRzPXtcIkdMQVNTXCI6XCJNNjEuMTY0LTU3Ljc0M3EwIDEuMjYtMS41NDggMi44MDhsLTIyLjc1MiAyMi43NTJ2MjcuNjQ4aDExLjUycS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjItLjY4NCAxLjYyLTEuNjIuNjg0aC0zMi4yNTZxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODRoMTEuNTJ2LTI3LjY0OGwtMjIuNzUyLTIyLjc1MnEtMS41NDgtMS41NDgtMS41NDgtMi44MDggMC0uODI4LjY0OC0xLjMxNHQxLjM2OC0uNjMgMS41NDgtLjE0NGg1MC42ODhxLjgyOCAwIDEuNTQ4LjE0NHQxLjM2OC42My42NDggMS4zMTR6XCIsXCJNVVNJQ1wiOlwiTTU1LjI5Ni01Ni4zNzV2NDAuMzJxMCAxLjgtMS4yMjQgMy4yMDR0LTMuMDk2IDIuMTc4LTMuNzI2IDEuMTUyLTMuNDc0LjM3OC0zLjQ3NC0uMzc4LTMuNzI2LTEuMTUyLTMuMDk2LTIuMTc4LTEuMjI0LTMuMjA0IDEuMjI0LTMuMjA0IDMuMDk2LTIuMTc4IDMuNzI2LTEuMTUyIDMuNDc0LS4zNzhxMy43OCAwIDYuOTEyIDEuNDA0di0xOS4zMzJsLTI3LjY0OCA4LjUzMnYyNS41MjRxMCAxLjgtMS4yMjQgMy4yMDR0LTMuMDk2IDIuMTc4LTMuNzI2IDEuMTUyLTMuNDc0LjM3OC0zLjQ3NC0uMzc4LTMuNzI2LTEuMTUyLTMuMDk2LTIuMTc4LTEuMjI0LTMuMjA0IDEuMjI0LTMuMjA0IDMuMDk2LTIuMTc4IDMuNzI2LTEuMTUyIDMuNDc0LS4zNzhxMy43OCAwIDYuOTEyIDEuNDA0di0zNC44MTJxMC0xLjExNi42ODQtMi4wMzR0MS43NjQtMS4yNzhsMjkuOTUyLTkuMjE2cS40MzItLjE0NCAxLjAwOC0uMTQ0IDEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHpcIixcIlNFQVJDSFwiOlwiTTQxLjQ3Mi0zNC40ODdxMC02LjY2LTQuNzM0LTExLjM5NHQtMTEuMzk0LTQuNzM0LTExLjM5NCA0LjczNC00LjczNCAxMS4zOTQgNC43MzQgMTEuMzk0IDExLjM5NCA0LjczNCAxMS4zOTQtNC43MzQgNC43MzQtMTEuMzk0em0xOC40MzIgMjkuOTUycTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OHEtMS45NDQgMC0zLjI0LTEuMzY4bC0xMi4zNDgtMTIuMzEycS02LjQ0NCA0LjQ2NC0xNC4zNjQgNC40NjQtNS4xNDggMC05Ljg0Ni0xLjk5OHQtOC4xLTUuNC01LjQtOC4xLTEuOTk4LTkuODQ2IDEuOTk4LTkuODQ2IDUuNC04LjEgOC4xLTUuNCA5Ljg0Ni0xLjk5OCA5Ljg0NiAxLjk5OCA4LjEgNS40IDUuNCA4LjEgMS45OTggOS44NDZxMCA3LjkyLTQuNDY0IDE0LjM2NGwxMi4zNDggMTIuMzQ4cTEuMzMyIDEuMzMyIDEuMzMyIDMuMjR6XCIsXCJFTlZFTE9QRV9PXCI6XCJNNTkuOTA0LTEwLjI5NXYtMjcuNjQ4cS0xLjE1MiAxLjI5Ni0yLjQ4NCAyLjM3Ni05LjY0OCA3LjQxNi0xNS4zMzYgMTIuMTY4LTEuODM2IDEuNTQ4LTIuOTg4IDIuNDEydC0zLjExNCAxLjc0Ni0zLjY5Ljg4MmgtLjA3MnEtMS43MjggMC0zLjY5LS44ODJ0LTMuMTE0LTEuNzQ2LTIuOTg4LTIuNDEycS01LjY4OC00Ljc1Mi0xNS4zMzYtMTIuMTY4LTEuMzMyLTEuMDgtMi40ODQtMi4zNzZ2MjcuNjQ4cTAgLjQ2OC4zNDIuODF0LjgxLjM0Mmg1Mi45OTJxLjQ2OCAwIC44MS0uMzQydC4zNDItLjgxem0wLTM3LjgzNnYtLjg4MmwtLjAxOC0uNDY4LS4xMDgtLjQ1LS4xOTgtLjMyNC0uMzI0LS4yNy0uNTA0LS4wOWgtNTIuOTkycS0uNDY4IDAtLjgxLjM0MnQtLjM0Mi44MXEwIDYuMDQ4IDUuMjkyIDEwLjIyNCA2Ljk0OCA1LjQ3MiAxNC40MzYgMTEuNDEyLjIxNi4xOCAxLjI2IDEuMDYydDEuNjU2IDEuMzUgMS42MDIgMS4xMzQgMS44MTguOTkgMS41NDguMzI0aC4wNzJxLjcyIDAgMS41NDgtLjMyNHQxLjgxOC0uOTkgMS42MDItMS4xMzQgMS42NTYtMS4zNSAxLjI2LTEuMDYycTcuNDg4LTUuOTQgMTQuNDM2LTExLjQxMiAxLjk0NC0xLjU0OCAzLjYxOC00LjE1OHQxLjY3NC00LjczNHptNC42MDgtMS4zMzJ2MzkuMTY4cTAgMi4zNzYtMS42OTIgNC4wNjh0LTQuMDY4IDEuNjkyaC01Mi45OTJxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di0zOS4xNjhxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5Mmg1Mi45OTJxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHpcIixcIkhFQVJUXCI6XCJNMzIuMjU2LTQuNTM1cS0uOTM2IDAtMS41ODQtLjY0OGwtMjIuNDY0LTIxLjY3MnEtLjM2LS4yODgtLjk5LS45MzZ0LTEuOTk4LTIuMzU4LTIuNDQ4LTMuNTEtMS45MjYtNC4zNTYtLjg0Ni00Ljk2OHEwLTcuOTIgNC41NzItMTIuMzg0dDEyLjYzNi00LjQ2NHEyLjIzMiAwIDQuNTU0Ljc3NHQ0LjMyIDIuMDg4IDMuNDM4IDIuNDY2IDIuNzM2IDIuNDQ4cTEuMjk2LTEuMjk2IDIuNzM2LTIuNDQ4dDMuNDM4LTIuNDY2IDQuMzItMi4wODggNC41NTQtLjc3NHE4LjA2NCAwIDEyLjYzNiA0LjQ2NHQ0LjU3MiAxMi4zODRxMCA3Ljk1Ni04LjI0NCAxNi4ybC0yMi40MjggMjEuNnEtLjY0OC42NDgtMS41ODQuNjQ4elwiLFwiU1RBUlwiOlwiTTU5LjkwNC00MS4xNDdxMCAuNzkyLS45MzYgMS43MjhsLTEzLjA2OCAxMi43NDQgMy4wOTYgMThxLjAzNi4yNTIuMDM2LjcyIDAgLjc1Ni0uMzc4IDEuMjc4dC0xLjA5OC41MjJxLS42ODQgMC0xLjQ0LS40MzJsLTE2LjE2NC04LjQ5Ni0xNi4xNjQgOC40OTZxLS43OTIuNDMyLTEuNDQuNDMyLS43NTYgMC0xLjEzNC0uNTIydC0uMzc4LTEuMjc4cTAtLjIxNi4wNzItLjcybDMuMDk2LTE4LTEzLjEwNC0xMi43NDRxLS45LS45NzItLjktMS43MjggMC0xLjMzMiAyLjAxNi0xLjY1NmwxOC4wNzItMi42MjggOC4xLTE2LjM4cS42ODQtMS40NzYgMS43NjQtMS40NzZ0MS43NjQgMS40NzZsOC4xIDE2LjM4IDE4LjA3MiAyLjYyOHEyLjAxNi4zMjQgMi4wMTYgMS42NTZ6XCIsXCJTVEFSX09cIjpcIk00MC45MzItMjguMjk1bDExLjAxNi0xMC42OTItMTUuMTkyLTIuMjMyLTYuODA0LTEzLjc1Mi02LjgwNCAxMy43NTItMTUuMTkyIDIuMjMyIDExLjAxNiAxMC42OTItMi42MjggMTUuMTU2IDEzLjYwOC03LjE2NCAxMy41NzIgNy4xNjR6bTE4Ljk3Mi0xMi44NTJxMCAuNzkyLS45MzYgMS43MjhsLTEzLjA2OCAxMi43NDQgMy4wOTYgMThxLjAzNi4yNTIuMDM2LjcyIDAgMS44LTEuNDc2IDEuOC0uNjg0IDAtMS40NC0uNDMybC0xNi4xNjQtOC40OTYtMTYuMTY0IDguNDk2cS0uNzkyLjQzMi0xLjQ0LjQzMi0uNzU2IDAtMS4xMzQtLjUyMnQtLjM3OC0xLjI3OHEwLS4yMTYuMDcyLS43MmwzLjA5Ni0xOC0xMy4xMDQtMTIuNzQ0cS0uOS0uOTcyLS45LTEuNzI4IDAtMS4zMzIgMi4wMTYtMS42NTZsMTguMDcyLTIuNjI4IDguMS0xNi4zOHEuNjg0LTEuNDc2IDEuNzY0LTEuNDc2dDEuNzY0IDEuNDc2bDguMSAxNi4zOCAxOC4wNzIgMi42MjhxMi4wMTYuMzI0IDIuMDE2IDEuNjU2elwiLFwiVVNFUlwiOlwiTTUwLjY4OC0xMy44NTlxMCA0LjMyLTIuNjI4IDYuODIydC02Ljk4NCAyLjUwMmgtMzEuNDY0cS00LjM1NiAwLTYuOTg0LTIuNTAydC0yLjYyOC02LjgyMnEwLTEuOTA4LjEyNi0zLjcyNnQuNTA0LTMuOTI0Ljk1NC0zLjkwNiAxLjU0OC0zLjUxIDIuMjMyLTIuOTE2IDMuMDc4LTEuOTI2IDQuMDE0LS43MnEuMzI0IDAgMS41MTIuNzc0dDIuNjgyIDEuNzI4IDMuODg4IDEuNzI4IDQuODA2Ljc3NCA0LjgwNi0uNzc0IDMuODg4LTEuNzI4IDIuNjgyLTEuNzI4IDEuNTEyLS43NzRxMi4xOTYgMCA0LjAxNC43MnQzLjA3OCAxLjkyNiAyLjIzMiAyLjkxNiAxLjU0OCAzLjUxLjk1NCAzLjkwNi41MDQgMy45MjQuMTI2IDMuNzI2em0tMTEuNTItMzIuMTQ4cTAgNS43MjQtNC4wNSA5Ljc3NHQtOS43NzQgNC4wNS05Ljc3NC00LjA1LTQuMDUtOS43NzQgNC4wNS05Ljc3NCA5Ljc3NC00LjA1IDkuNzc0IDQuMDUgNC4wNSA5Ljc3NHpcIixcIkZJTE1cIjpcIk0xMy44MjQtNi44Mzl2LTQuNjA4cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtNC42MDhxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYydjQuNjA4cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NGg0LjYwOHEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptMC0xMy44MjR2LTQuNjA4cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtNC42MDhxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYydjQuNjA4cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NGg0LjYwOHEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptMC0xMy44MjR2LTQuNjA4cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtNC42MDhxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYydjQuNjA4cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NGg0LjYwOHEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptMzYuODY0IDI3LjY0OHYtMTguNDMycTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtMjcuNjQ4cS0uOTM2IDAtMS42Mi42ODR0LS42ODQgMS42MnYxOC40MzJxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDI3LjY0OHEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptLTM2Ljg2NC00MS40NzJ2LTQuNjA4cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtNC42MDhxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYydjQuNjA4cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NGg0LjYwOHEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptNTAuNjg4IDQxLjQ3MnYtNC42MDhxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC00LjYwOHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2NC42MDhxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDQuNjA4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyem0tMTMuODI0LTI3LjY0OHYtMTguNDMycTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtMjcuNjQ4cS0uOTM2IDAtMS42Mi42ODR0LS42ODQgMS42MnYxOC40MzJxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDI3LjY0OHEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptMTMuODI0IDEzLjgyNHYtNC42MDhxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC00LjYwOHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2NC42MDhxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDQuNjA4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyem0wLTEzLjgyNHYtNC42MDhxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC00LjYwOHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2NC42MDhxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDQuNjA4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyem0wLTEzLjgyNHYtNC42MDhxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC00LjYwOHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2NC42MDhxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDQuNjA4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyem00LjYwOC01Ljc2djQ4LjM4NHEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5MmgtNTcuNnEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTQ4LjM4NHEwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyaDU3LjZxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHpcIixcIlRIX0xBUkdFXCI6XCJNMjcuNjQ4LTI3LjU3NXYxMy44MjRxMCAxLjg3Mi0xLjM2OCAzLjI0dC0zLjI0IDEuMzY4aC0xOC40MzJxLTEuODcyIDAtMy4yNC0xLjM2OHQtMS4zNjgtMy4yNHYtMTMuODI0cTAtMS44NzIgMS4zNjgtMy4yNHQzLjI0LTEuMzY4aDE4LjQzMnExLjg3MiAwIDMuMjQgMS4zNjh0MS4zNjggMy4yNHptMC0yNy42NDh2MTMuODI0cTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OGgtMTguNDMycS0xLjg3MiAwLTMuMjQtMS4zNjh0LTEuMzY4LTMuMjR2LTEzLjgyNHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGgxOC40MzJxMS44NzIgMCAzLjI0IDEuMzY4dDEuMzY4IDMuMjR6bTMyLjI1NiAyNy42NDh2MTMuODI0cTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OGgtMTguNDMycS0xLjg3MiAwLTMuMjQtMS4zNjh0LTEuMzY4LTMuMjR2LTEzLjgyNHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGgxOC40MzJxMS44NzIgMCAzLjI0IDEuMzY4dDEuMzY4IDMuMjR6bTAtMjcuNjQ4djEzLjgyNHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTE4LjQzMnEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di0xMy44MjRxMC0xLjg3MiAxLjM2OC0zLjI0dDMuMjQtMS4zNjhoMTguNDMycTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0elwiLFwiVEhcIjpcIk0xOC40MzItMTkuNTExdjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTExLjUycS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMTEuNTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4em0wLTE4LjQzMnY2LjkxMnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0xMS41MnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNi45MTJxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDExLjUycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHptMjMuMDQgMTguNDMydjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTExLjUycS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMTEuNTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4em0tMjMuMDQtMzYuODY0djYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTExLjUycS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMTEuNTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4em0yMy4wNCAxOC40MzJ2Ni45MTJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMTEuNTJxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTYuOTEycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgxMS41MnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh6bTIzLjA0IDE4LjQzMnY2LjkxMnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0xMS41MnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNi45MTJxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDExLjUycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHptLTIzLjA0LTM2Ljg2NHY2LjkxMnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0xMS41MnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNi45MTJxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDExLjUycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHptMjMuMDQgMTguNDMydjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTExLjUycS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMTEuNTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4em0wLTE4LjQzMnY2LjkxMnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0xMS41MnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNi45MTJxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDExLjUycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHpcIixcIlRIX0xJU1RcIjpcIk0xOC40MzItMTkuNTExdjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTExLjUycS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMTEuNTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4em0wLTE4LjQzMnY2LjkxMnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0xMS41MnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNi45MTJxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDExLjUycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHptNDYuMDggMTguNDMydjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTM0LjU2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMzQuNTZxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4em0tNDYuMDgtMzYuODY0djYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTExLjUycS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMTEuNTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4em00Ni4wOCAxOC40MzJ2Ni45MTJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMzQuNTZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTYuOTEycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgzNC41NnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh6bTAtMTguNDMydjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTM0LjU2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMzQuNTZxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4elwiLFwiQ0hFQ0tcIjpcIk02MC4xNTYtNDQuMDYzcTAgMS40NC0xLjAwOCAyLjQ0OGwtMjYuMDY0IDI2LjA2NC00Ljg5NiA0Ljg5NnEtMS4wMDggMS4wMDgtMi40NDggMS4wMDh0LTIuNDQ4LTEuMDA4bC00Ljg5Ni00Ljg5Ni0xMy4wMzItMTMuMDMycS0xLjAwOC0xLjAwOC0xLjAwOC0yLjQ0OHQxLjAwOC0yLjQ0OGw0Ljg5Ni00Ljg5NnExLjAwOC0xLjAwOCAyLjQ0OC0xLjAwOHQyLjQ0OCAxLjAwOGwxMC41ODQgMTAuNjIgMjMuNjE2LTIzLjY1MnExLjAwOC0xLjAwOCAyLjQ0OC0xLjAwOHQyLjQ0OCAxLjAwOGw0Ljg5NiA0Ljg5NnExLjAwOCAxLjAwOCAxLjAwOCAyLjQ0OHpcIixcIlRJTUVTXCI6XCJNNDYuNzI4LTE2Ljg0N3EwIDEuNDQtMS4wMDggMi40NDhsLTQuODk2IDQuODk2cS0xLjAwOCAxLjAwOC0yLjQ0OCAxLjAwOHQtMi40NDgtMS4wMDhsLTEwLjU4NC0xMC41ODQtMTAuNTg0IDEwLjU4NHEtMS4wMDggMS4wMDgtMi40NDggMS4wMDh0LTIuNDQ4LTEuMDA4bC00Ljg5Ni00Ljg5NnEtMS4wMDgtMS4wMDgtMS4wMDgtMi40NDh0MS4wMDgtMi40NDhsMTAuNTg0LTEwLjU4NC0xMC41ODQtMTAuNTg0cS0xLjAwOC0xLjAwOC0xLjAwOC0yLjQ0OHQxLjAwOC0yLjQ0OGw0Ljg5Ni00Ljg5NnExLjAwOC0xLjAwOCAyLjQ0OC0xLjAwOHQyLjQ0OCAxLjAwOGwxMC41ODQgMTAuNTg0IDEwLjU4NC0xMC41ODRxMS4wMDgtMS4wMDggMi40NDgtMS4wMDh0Mi40NDggMS4wMDhsNC44OTYgNC44OTZxMS4wMDggMS4wMDggMS4wMDggMi40NDh0LTEuMDA4IDIuNDQ4bC0xMC41ODQgMTAuNTg0IDEwLjU4NCAxMC41ODRxMS4wMDggMS4wMDggMS4wMDggMi40NDh6XCIsXCJTRUFSQ0hfUExVU1wiOlwiTTM2Ljg2NC0zNS42Mzl2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTguMDY0djguMDY0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtOC4wNjRoLTguMDY0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg4LjA2NHYtOC4wNjRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXY4LjA2NGg4LjA2NHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem00LjYwOCAxLjE1MnEwLTYuNjYtNC43MzQtMTEuMzk0dC0xMS4zOTQtNC43MzQtMTEuMzk0IDQuNzM0LTQuNzM0IDExLjM5NCA0LjczNCAxMS4zOTQgMTEuMzk0IDQuNzM0IDExLjM5NC00LjczNCA0LjczNC0xMS4zOTR6bTE4LjQzMiAyOS45NTJxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1cS0xLjk0NCAwLTMuMjQtMS4zNjhsLTEyLjM0OC0xMi4zMTJxLTYuNDQ0IDQuNDY0LTE0LjM2NCA0LjQ2NC01LjE0OCAwLTkuODQ2LTEuOTk4dC04LjEtNS40LTUuNC04LjEtMS45OTgtOS44NDYgMS45OTgtOS44NDYgNS40LTguMSA4LjEtNS40IDkuODQ2LTEuOTk4IDkuODQ2IDEuOTk4IDguMSA1LjQgNS40IDguMSAxLjk5OCA5Ljg0NnEwIDcuOTItNC40NjQgMTQuMzY0bDEyLjM0OCAxMi4zNDhxMS4zMzIgMS4zMzIgMS4zMzIgMy4yNHpcIixcIlNFQVJDSF9NSU5VU1wiOlwiTTM2Ljg2NC0zNS42Mzl2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIwLjczNnEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMjAuNzM2cS40NjggMCAuODEuMzQydC4zNDIuODF6bTQuNjA4IDEuMTUycTAtNi42Ni00LjczNC0xMS4zOTR0LTExLjM5NC00LjczNC0xMS4zOTQgNC43MzQtNC43MzQgMTEuMzk0IDQuNzM0IDExLjM5NCAxMS4zOTQgNC43MzQgMTEuMzk0LTQuNzM0IDQuNzM0LTExLjM5NHptMTguNDMyIDI5Ljk1MnEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzVxLTEuOTQ0IDAtMy4yNC0xLjM2OGwtMTIuMzQ4LTEyLjMxMnEtNi40NDQgNC40NjQtMTQuMzY0IDQuNDY0LTUuMTQ4IDAtOS44NDYtMS45OTh0LTguMS01LjQtNS40LTguMS0xLjk5OC05Ljg0NiAxLjk5OC05Ljg0NiA1LjQtOC4xIDguMS01LjQgOS44NDYtMS45OTggOS44NDYgMS45OTggOC4xIDUuNCA1LjQgOC4xIDEuOTk4IDkuODQ2cTAgNy45Mi00LjQ2NCAxNC4zNjRsMTIuMzQ4IDEyLjM0OHExLjMzMiAxLjMzMiAxLjMzMiAzLjI0elwiLFwiUE9XRVJfT0ZGXCI6XCJNNTUuMjk2LTMyLjE4M3EwIDUuNjE2LTIuMTk2IDEwLjcyOHQtNS45MDQgOC44Mi04LjgyIDUuOTA0LTEwLjcyOCAyLjE5Ni0xMC43MjgtMi4xOTYtOC44Mi01LjkwNC01LjkwNC04LjgyLTIuMTk2LTEwLjcyOHEwLTYuNTUyIDIuODk4LTEyLjM0OHQ4LjE1NC05LjcycTEuNTQ4LTEuMTUyIDMuNDM4LS45dDMuMDA2IDEuOHExLjE1MiAxLjUxMi44ODIgMy40MDJ0LTEuNzgyIDMuMDQycS0zLjUyOCAyLjY2NC01LjQ1NCA2LjUxNnQtMS45MjYgOC4yMDhxMCAzLjc0NCAxLjQ1OCA3LjE0NnQzLjk0MiA1Ljg4NiA1Ljg4NiAzLjk0MiA3LjE0NiAxLjQ1OCA3LjE0Ni0xLjQ1OCA1Ljg4Ni0zLjk0MiAzLjk0Mi01Ljg4NiAxLjQ1OC03LjE0NnEwLTQuMzU2LTEuOTI2LTguMjA4dC01LjQ1NC02LjUxNnEtMS41MTItMS4xNTItMS43ODItMy4wNDJ0Ljg4Mi0zLjQwMnExLjExNi0xLjU0OCAzLjAyNC0xLjh0My40Mi45cTUuMjU2IDMuOTI0IDguMTU0IDkuNzJ0Mi44OTggMTIuMzQ4em0tMjMuMDQtMjcuNjQ4djIzLjA0cTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OC0zLjI0LTEuMzY4LTEuMzY4LTMuMjR2LTIzLjA0cTAtMS44NzIgMS4zNjgtMy4yNHQzLjI0LTEuMzY4IDMuMjQgMS4zNjggMS4zNjggMy4yNHpcIixcIlNJR05BTFwiOlwiTTkuMjE2LTEyLjU5OXY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC02LjkxMnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptMTMuODI0LTQuNjA4djExLjUycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTExLjUycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0xMy44MjQtOS4yMTZ2MjAuNzM2cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIwLjczNnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptMTMuODI0LTEzLjgyNHYzNC41NnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC02LjkxMnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0zNC41NnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptMTMuODI0LTE4LjQzMnY1Mi45OTJxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNi45MTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNTIuOTkycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4elwiLFwiR0VBUlwiOlwiTTM2Ljg2NC0zMi4xODNxMC0zLjgxNi0yLjctNi41MTZ0LTYuNTE2LTIuNy02LjUxNiAyLjctMi43IDYuNTE2IDIuNyA2LjUxNiA2LjUxNiAyLjcgNi41MTYtMi43IDIuNy02LjUxNnptMTguNDMyLTMuOTI0djcuOTkycTAgLjQzMi0uMjg4LjgyOHQtLjcyLjQ2OGwtNi42NiAxLjAwOHEtLjY4NCAxLjk0NC0xLjQwNCAzLjI3NiAxLjI2IDEuOCAzLjg1MiA0Ljk2OC4zNi40MzIuMzYuOXQtLjMyNC44MjhxLS45NzIgMS4zMzItMy41NjQgMy44ODh0LTMuMzg0IDIuNTU2cS0uNDMyIDAtLjkzNi0uMzI0bC00Ljk2OC0zLjg4OHEtMS41ODQuODI4LTMuMjc2IDEuMzY4LS41NzYgNC44OTYtMS4wNDQgNi42OTYtLjI1MiAxLjAwOC0xLjI5NiAxLjAwOGgtNy45OTJxLS41MDQgMC0uODgyLS4zMDZ0LS40MTQtLjc3NGwtMS4wMDgtNi42MjRxLTEuNzY0LS41NzYtMy4yNC0xLjMzMmwtNS4wNzYgMy44NTJxLS4zNi4zMjQtLjkuMzI0LS41MDQgMC0uOS0uMzk2LTQuNTM2LTQuMTA0LTUuOTQtNi4wNDgtLjI1Mi0uMzYtLjI1Mi0uODI4IDAtLjQzMi4yODgtLjgyOC41NC0uNzU2IDEuODM2LTIuMzk0dDEuOTQ0LTIuNTM4cS0uOTcyLTEuOC0xLjQ3Ni0zLjU2NGwtNi41ODgtLjk3MnEtLjQ2OC0uMDcyLS43NTYtLjQ1dC0uMjg4LS44NDZ2LTcuOTkycTAtLjQzMi4yODgtLjgyOHQuNjg0LS40NjhsNi42OTYtMS4wMDhxLjUwNC0xLjY1NiAxLjQwNC0zLjMxMi0xLjQ0LTIuMDUyLTMuODUyLTQuOTY4LS4zNi0uNDMyLS4zNi0uODY0IDAtLjM2LjMyNC0uODI4LjkzNi0xLjI5NiAzLjU0Ni0zLjg3dDMuNDAyLTIuNTc0cS40NjggMCAuOTM2LjM2bDQuOTY4IDMuODUycTEuNTg0LS44MjggMy4yNzYtMS4zNjguNTc2LTQuODk2IDEuMDQ0LTYuNjk2LjI1Mi0xLjAwOCAxLjI5Ni0xLjAwOGg3Ljk5MnEuNTA0IDAgLjg4Mi4zMDZ0LjQxNC43NzRsMS4wMDggNi42MjRxMS43NjQuNTc2IDMuMjQgMS4zMzJsNS4xMTItMy44NTJxLjMyNC0uMzI0Ljg2NC0uMzI0LjQ2OCAwIC45LjM2IDQuNjQ0IDQuMjg0IDUuOTQgNi4xMi4yNTIuMjg4LjI1Mi43OTIgMCAuNDMyLS4yODguODI4LS41NC43NTYtMS44MzYgMi4zOTR0LTEuOTQ0IDIuNTM4cS45MzYgMS44IDEuNDc2IDMuNTI4bDYuNTg4IDEuMDA4cS40NjguMDcyLjc1Ni40NXQuMjg4Ljg0NnpcIixcIlRSQVNIX09cIjpcIk0xOC40MzItMzcuOTQzdjIwLjczNnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yMC43MzZxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgyLjMwNHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTkuMjE2IDB2MjAuNzM2cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIwLjczNnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIuMzA0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptOS4yMTYgMHYyMC43MzZxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMjAuNzM2cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMi4zMDRxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em00LjYwOCAyNi4wNjR2LTM0LjEyOGgtMzIuMjU2djM0LjEyOHEwIC43OTIuMjUyIDEuNDU4dC41MjIuOTcyLjM3OC4zMDZoMjkuOTUycS4xMDggMCAuMzc4LS4zMDZ0LjUyMi0uOTcyLjI1Mi0xLjQ1OHptLTI0LjE5Mi0zOC43MzZoMTYuMTI4bC0xLjcyOC00LjIxMnEtLjI1Mi0uMzI0LS42MTItLjM5NmgtMTEuNDEycS0uMzYuMDcyLS42MTIuMzk2em0zMy40MDggMS4xNTJ2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMy40NTZ2MzQuMTI4cTAgMi45ODgtMS42OTIgNS4xNjZ0LTQuMDY4IDIuMTc4aC0yOS45NTJxLTIuMzc2IDAtNC4wNjgtMi4xMDZ0LTEuNjkyLTUuMDk0di0zNC4yNzJoLTMuNDU2cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTEuMTI0bDIuNTItNi4wMTJxLjU0LTEuMzMyIDEuOTQ0LTIuMjY4dDIuODQ0LS45MzZoMTEuNTJxMS40NCAwIDIuODQ0LjkzNnQxLjk0NCAyLjI2OGwyLjUyIDYuMDEyaDExLjEyNHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6XCIsXCJIT01FXCI6XCJNNTAuNjg4LTI4LjcyN3YxNy4yOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMTMuODI0di0xMy44MjRoLTkuMjE2djEzLjgyNGgtMTMuODI0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTE3LjI4bC4wMTgtLjEwOC4wMTgtLjEwOCAyMC43LTE3LjA2NCAyMC43IDE3LjA2NHEuMDM2LjA3Mi4wMzYuMjE2em04LjAyOC0yLjQ4NGwtMi4yMzIgMi42NjRxLS4yODguMzI0LS43NTYuMzk2aC0uMTA4cS0uNDY4IDAtLjc1Ni0uMjUybC0yNC45MTItMjAuNzcyLTI0LjkxMiAyMC43NzJxLS40MzIuMjg4LS44NjQuMjUyLS40NjgtLjA3Mi0uNzU2LS4zOTZsLTIuMjMyLTIuNjY0cS0uMjg4LS4zNi0uMjUyLS44NDZ0LjM5Ni0uNzc0bDI1Ljg4NC0yMS41NjRxMS4xNTItLjkzNiAyLjczNi0uOTM2dDIuNzM2LjkzNmw4Ljc4NCA3LjM0NHYtNy4wMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYxNC42ODhsNy44ODQgNi41NTJxLjM2LjI4OC4zOTYuNzc0dC0uMjUyLjg0NnpcIixcIkZJTEVfT1wiOlwiTTUyLjg0OC01MC43NTlxMS4wMDggMS4wMDggMS43MjggMi43MzZ0LjcyIDMuMTY4djQxLjQ3MnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC00OC4zODRxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTU3LjZxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDMyLjI1NnExLjQ0IDAgMy4xNjguNzJ0Mi43MzYgMS43Mjh6bS0xNS45ODQtOC43ODR2MTMuNTM2aDEzLjUzNnEtLjM2LTEuMDQ0LS43OTItMS40NzZsLTExLjI2OC0xMS4yNjhxLS40MzItLjQzMi0xLjQ3Ni0uNzkyem0xMy44MjQgNTUuMDA4di0zNi44NjRoLTE0Ljk3NnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMTQuOTc2aC0yNy42NDh2NTUuMjk2aDQ2LjA4elwiLFwiQ0xPQ0tfT1wiOlwiTTMyLjI1Ni00NC44NTV2MTYuMTI4cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTExLjUycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoOC4wNjR2LTEyLjY3MnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIuMzA0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptMTQuOTc2IDEyLjY3MnEwLTUuMzI4LTIuNjI4LTkuODI4dC03LjEyOC03LjEyOC05LjgyOC0yLjYyOC05LjgyOCAyLjYyOC03LjEyOCA3LjEyOC0yLjYyOCA5LjgyOCAyLjYyOCA5LjgyOCA3LjEyOCA3LjEyOCA5LjgyOCAyLjYyOCA5LjgyOC0yLjYyOCA3LjEyOC03LjEyOCAyLjYyOC05LjgyOHptOC4wNjQgMHEwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJST0FEXCI6XCJNMzkuOTk2LTI4LjU4M3YtLjE0NGwtLjg2NC0xMS41MnEtLjAzNi0uNDY4LS4zOTYtLjgxdC0uODI4LS4zNDJoLTYuNjk2cS0uNDY4IDAtLjgyOC4zNDJ0LS4zOTYuODFsLS44NjQgMTEuNTJ2LjE0NHEtLjAzNi40MzIuMjg4LjcydC43NTYuMjg4aDguNzg0cS40MzIgMCAuNzU2LS4yODh0LjI4OC0uNzJ6bTI3LjMyNCAxNi44MTJxMCAyLjYyOC0xLjY1NiAyLjYyOGgtMjUuMzQ0cS40NjggMCAuNzkyLS4zNDJ0LjI4OC0uODFsLS43Mi05LjIxNnEtLjAzNi0uNDY4LS4zOTYtLjgxdC0uODI4LS4zNDJoLTkuNzkycS0uNDY4IDAtLjgyOC4zNDJ0LS4zOTYuODFsLS43MiA5LjIxNnEtLjAzNi40NjguMjg4LjgxdC43OTIuMzQyaC0yNS4zNDRxLTEuNjU2IDAtMS42NTYtMi42MjggMC0xLjk0NC45MzYtNC4xNzZsMTUuMDEyLTM3LjU4NHEuMjg4LS42ODQuOTM2LTEuMTg4dDEuMzY4LS41MDRoMTIuMjA0cS0uNDY4IDAtLjgyOC4zNDJ0LS4zOTYuODFsLS41NCA2LjkxMnEtLjAzNi41MDQuMjg4LjgyOHQuNzkyLjMyNGg1Ljk3NnEuNDY4IDAgLjc5Mi0uMzI0dC4yODgtLjgyOGwtLjU0LTYuOTEycS0uMDM2LS40NjgtLjM5Ni0uODF0LS44MjgtLjM0MmgxMi4yMDRxLjcyIDAgMS4zNjguNTA0dC45MzYgMS4xODhsMTUuMDEyIDM3LjU4NHEuOTM2IDIuMjMyLjkzNiA0LjE3NnpcIixcIkRPV05MT0FEXCI6XCJNNDYuMDgtMTYuMDU1cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NC0xLjYyLjY4NC0uNjg0IDEuNjIuNjg0IDEuNjIgMS42Mi42ODQgMS42Mi0uNjg0LjY4NC0xLjYyem05LjIxNiAwcTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NC0xLjYyLjY4NC0uNjg0IDEuNjIuNjg0IDEuNjIgMS42Mi42ODQgMS42Mi0uNjg0LjY4NC0xLjYyem00LjYwOC04LjA2NHYxMS41MnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC01Mi45OTJxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTExLjUycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgxNi43NGw0Ljg2IDQuODk2cTIuMDg4IDIuMDE2IDQuODk2IDIuMDE2dDQuODk2LTIuMDE2bDQuODk2LTQuODk2aDE2LjcwNHExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh6bS0xMS43LTIwLjQ4NHEuNjEyIDEuNDc2LS41MDQgMi41MmwtMTYuMTI4IDE2LjEyOHEtLjY0OC42ODQtMS42Mi42ODR0LTEuNjItLjY4NGwtMTYuMTI4LTE2LjEyOHEtMS4xMTYtMS4wNDQtLjUwNC0yLjUyLjYxMi0xLjQwNCAyLjEyNC0xLjQwNGg5LjIxNnYtMTYuMTI4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoOS4yMTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnYxNi4xMjhoOS4yMTZxMS41MTIgMCAyLjEyNCAxLjQwNHpcIixcIkFSUk9XX0NJUkNMRV9PX0RPV05cIjpcIk00MC4zMi0zMS4wMzFxMCAuNDMyLS4zNi44NjRsLTExLjQ4NCAxMS40ODRxLS4zOTYuMzI0LS44MjguMzI0dC0uODI4LS4zMjRsLTExLjUyLTExLjUycS0uNTQtLjU3Ni0uMjUyLTEuMjYuMjg4LS43MiAxLjA4LS43Mmg2LjkxMnYtMTIuNjcycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djEyLjY3Mmg2LjkxMnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bS0xMi42NzItMjAuNzM2cS01LjMyOCAwLTkuODI4IDIuNjI4dC03LjEyOCA3LjEyOC0yLjYyOCA5LjgyOCAyLjYyOCA5LjgyOCA3LjEyOCA3LjEyOCA5LjgyOCAyLjYyOCA5LjgyOC0yLjYyOCA3LjEyOC03LjEyOCAyLjYyOC05LjgyOC0yLjYyOC05LjgyOC03LjEyOC03LjEyOC05LjgyOC0yLjYyOHptMjcuNjQ4IDE5LjU4NHEwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJBUlJPV19DSVJDTEVfT19VUFwiOlwiTTQwLjI0OC0zMi45MDNxLS4yODguNzItMS4wOC43MmgtNi45MTJ2MTIuNjcycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTEyLjY3MmgtNi45MTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHEwLS40MzIuMzYtLjg2NGwxMS40ODQtMTEuNDg0cS4zOTYtLjMyNC44MjgtLjMyNHQuODI4LjMyNGwxMS41MiAxMS41MnEuNTQuNTc2LjI1MiAxLjI2em0tMTIuNi0xOC44NjRxLTUuMzI4IDAtOS44MjggMi42Mjh0LTcuMTI4IDcuMTI4LTIuNjI4IDkuODI4IDIuNjI4IDkuODI4IDcuMTI4IDcuMTI4IDkuODI4IDIuNjI4IDkuODI4LTIuNjI4IDcuMTI4LTcuMTI4IDIuNjI4LTkuODI4LTIuNjI4LTkuODI4LTcuMTI4LTcuMTI4LTkuODI4LTIuNjI4em0yNy42NDggMTkuNTg0cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIklOQk9YXCI6XCJNMzYuODI4LTI5Ljg3OWgxMS4zNzZsLS4wOS0uMjg4LS4wOS0uMjg4LTcuNjMyLTE3Ljg1NmgtMjUuNDg4bC03LjYzMiAxNy44NTYtLjA5LjI4OC0uMDkuMjg4aDExLjM3NmwzLjQyIDYuOTEyaDExLjUyem0xOC40NjggMS4wOHYxNy4zNTJxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTUwLjY4OHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0xNy4zNTJxMC0yLjIzMi45LTQuNDI4bDguNTY4LTE5Ljg3MnEuMzYtLjkgMS4zMTQtMS41MTJ0MS44OS0uNjEyaDI5Ljk1MnEuOTM2IDAgMS44OS42MTJ0MS4zMTQgMS41MTJsOC41NjggMTkuODcycS45IDIuMTk2LjkgNC40Mjh6XCIsXCJQTEFZX0NJUkNMRV9PXCI6XCJNNDIuNjI0LTMyLjE4M3EwIDEuMzMyLTEuMTUyIDEuOThsLTE5LjU4NCAxMS41MnEtLjU0LjMyNC0xLjE1Mi4zMjQtLjU3NiAwLTEuMTUyLS4yODgtMS4xNTItLjY4NC0xLjE1Mi0yLjAxNnYtMjMuMDRxMC0xLjMzMiAxLjE1Mi0yLjAxNiAxLjE4OC0uNjQ4IDIuMzA0LjAzNmwxOS41ODQgMTEuNTJxMS4xNTIuNjQ4IDEuMTUyIDEuOTh6bTQuNjA4IDBxMC01LjMyOC0yLjYyOC05LjgyOHQtNy4xMjgtNy4xMjgtOS44MjgtMi42MjgtOS44MjggMi42MjgtNy4xMjggNy4xMjgtMi42MjggOS44MjggMi42MjggOS44MjggNy4xMjggNy4xMjggOS44MjggMi42MjggOS44MjgtMi42MjggNy4xMjgtNy4xMjggMi42MjgtOS44Mjh6bTguMDY0IDBxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiUk9UQVRFX1JJR0hUXCI6XCJNNTUuMjk2LTU1LjIyM3YxNi4xMjhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTE2LjEyOHEtMS41MTIgMC0yLjEyNC0xLjQ0LS42MTItMS40MDQuNTA0LTIuNDg0bDQuOTY4LTQuOTY4cS01LjMyOC00LjkzMi0xMi41NjQtNC45MzItMy43NDQgMC03LjE0NiAxLjQ1OHQtNS44ODYgMy45NDItMy45NDIgNS44ODYtMS40NTggNy4xNDYgMS40NTggNy4xNDYgMy45NDIgNS44ODYgNS44ODYgMy45NDIgNy4xNDYgMS40NThxNC4yODQgMCA4LjEtMS44NzJ0Ni40NDQtNS4yOTJxLjI1Mi0uMzYuODI4LS40MzIuNTA0IDAgLjkuMzI0bDQuOTMyIDQuOTY4cS4zMjQuMjg4LjM0Mi43Mzh0LS4yNy44MXEtMy45MjQgNC43NTItOS41MDQgNy4zNjJ0LTExLjc3MiAyLjYxcS01LjYxNiAwLTEwLjcyOC0yLjE5NnQtOC44Mi01LjkwNC01LjkwNC04LjgyLTIuMTk2LTEwLjcyOCAyLjE5Ni0xMC43MjggNS45MDQtOC44MiA4LjgyLTUuOTA0IDEwLjcyOC0yLjE5NnE1LjI5MiAwIDEwLjI0MiAxLjk5OHQ4LjgwMiA1LjYzNGw0LjY4LTQuNjQ0cTEuMDQ0LTEuMTE2IDIuNTItLjUwNCAxLjQwNC42MTIgMS40MDQgMi4xMjR6XCIsXCJSRUZSRVNIXCI6XCJNNTQuMzk2LTI2LjQyM3EwIC4xOC0uMDM2LjI1Mi0yLjMwNCA5LjY0OC05LjY0OCAxNS42NDJ0LTE3LjIwOCA1Ljk5NHEtNS4yNTYgMC0xMC4xNy0xLjk4dC04Ljc2Ni01LjY1MmwtNC42NDQgNC42NDRxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODQtLjY4NC0xLjYydi0xNi4xMjhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGgxNi4xMjhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42Mi0uNjg0IDEuNjJsLTQuOTMyIDQuOTMycTIuNTU2IDIuMzc2IDUuNzk2IDMuNjcydDYuNzMyIDEuMjk2cTQuODI0IDAgOS0yLjM0dDYuNjk2LTYuNDQ0cS4zOTYtLjYxMiAxLjkwOC00LjIxMi4yODgtLjgyOCAxLjA4LS44MjhoNi45MTJxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptLjktMjguOHYxNi4xMjhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTE2LjEyOHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYyLjY4NC0xLjYybDQuOTY4LTQuOTY4cS01LjMyOC00LjkzMi0xMi41NjQtNC45MzItNC44MjQgMC05IDIuMzR0LTYuNjk2IDYuNDQ0cS0uMzk2LjYxMi0xLjkwOCA0LjIxMi0uMjg4LjgyOC0xLjA4LjgyOGgtNy4xNjRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LS4yNTJxMi4zNC05LjY0OCA5LjcyLTE1LjY0MnQxNy4yOC01Ljk5NHE1LjI1NiAwIDEwLjIyNCAxLjk5OHQ4LjgyIDUuNjM0bDQuNjgtNC42NDRxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NC42ODQgMS42MnpcIixcIkxJU1RfQUxUXCI6XCJNMTMuODI0LTIxLjgxNXYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bTAtOS4yMTZ2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIuMzA0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjMwNHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0wLTkuMjE2djIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptNDEuNDcyIDE4LjQzMnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMzQuNTZxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDM0LjU2cS40NjggMCAuODEuMzQydC4zNDIuODF6bTAtOS4yMTZ2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTM0LjU2cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgzNC41NnEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0wLTkuMjE2djIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0zNC41NnEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMzQuNTZxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptNC42MDggMjUuMzQ0di0yOS45NTJxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtNTIuOTkycS0uNDY4IDAtLjgxLjM0MnQtLjM0Mi44MXYyOS45NTJxMCAuNDY4LjM0Mi44MXQuODEuMzQyaDUyLjk5MnEuNDY4IDAgLjgxLS4zNDJ0LjM0Mi0uODF6bTQuNjA4LTM5LjE2OHYzOS4xNjhxMCAyLjM3Ni0xLjY5MiA0LjA2OHQtNC4wNjggMS42OTJoLTUyLjk5MnEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTM5LjE2OHEwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyaDUyLjk5MnEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4elwiLFwiTE9DS1wiOlwiTTExLjUyLTM2Ljc5MWgxOC40MzJ2LTYuOTEycTAtMy44MTYtMi43LTYuNTE2dC02LjUxNi0yLjctNi41MTYgMi43LTIuNyA2LjUxNnY2LjkxMnptMjkuOTUyIDMuNDU2djIwLjczNnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0zNC41NnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMjAuNzM2cTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgxLjE1MnYtNi45MTJxMC02LjYyNCA0Ljc1Mi0xMS4zNzZ0MTEuMzc2LTQuNzUyIDExLjM3NiA0Ljc1MiA0Ljc1MiAxMS4zNzZ2Ni45MTJoMS4xNTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4elwiLFwiRkxBR1wiOlwiTTExLjUyLTU1LjIyM3EwIDIuNTkyLTIuMzA0IDMuOTZ2NDUuNTc2cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNDUuNTc2cS0yLjMwNC0xLjM2OC0yLjMwNC0zLjk2IDAtMS45MDggMS4zNS0zLjI1OHQzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptNTIuOTkyIDIuMzA0djI3LjQ2OHEwIC45LS40NSAxLjM4NnQtMS40MjIuOTlxLTcuNzQgNC4xNzYtMTMuMjg0IDQuMTc2LTIuMTk2IDAtNC40NDYtLjc5MnQtMy45MDYtMS43MjgtNC4xNTgtMS43MjgtNS4xMy0uNzkycS02LjkxMiAwLTE2LjcwNCA1LjI1Ni0uNjEyLjMyNC0xLjE4OC4zMjQtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0yNi43MTJxMC0xLjE1MiAxLjExNi0xLjk4Ljc1Ni0uNTA0IDIuODQ0LTEuNTQ4IDguNDk2LTQuMzIgMTUuMTU2LTQuMzIgMy44NTIgMCA3LjIgMS4wNDR0Ny44ODQgMy4xNjhxMS4zNjguNjg0IDMuMTY4LjY4NCAxLjk0NCAwIDQuMjMtLjc1NnQzLjk2LTEuNjkyIDMuMTY4LTEuNjkyIDEuOTYyLS43NTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIkhFQURQSE9ORVNcIjpcIk01OS45MDQtMzIuNTQzcTAgNS45NzYtMi4xNiAxMS4zMDRsLS43MiAxLjc2NC02LjY2IDEuMTg4cS0uNzkyIDIuOTg4LTMuMjU4IDQuOTE0dC01LjYzNCAxLjkyNnYxLjE1MnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yMC43MzZxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgyLjMwNHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2MS4xNTJxMi41NTYgMCA0LjY4IDEuMjc4dDMuMzQ4IDMuNDM4bDIuNDQ4LS40MzJxMS4wNDQtMy40MiAxLjA0NC02Ljk0OCAwLTUuMzI4LTMuMTY4LTEwLjA0NHQtOC41MTQtNy41MjQtMTEuMzU4LTIuODA4LTExLjM1OCAyLjgwOC04LjUxNCA3LjUyNC0zLjE2OCAxMC4wNDRxMCAzLjUyOCAxLjA0NCA2Ljk0OGwyLjQ0OC40MzJxMS4yMjQtMi4xNiAzLjM0OC0zLjQzOHQ0LjY4LTEuMjc4di0xLjE1MnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIuMzA0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyMC43MzZxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMS4xNTJxLTMuMTY4IDAtNS42MzQtMS45MjZ0LTMuMjU4LTQuOTE0bC02LjY2LTEuMTg4LS43Mi0xLjc2NHEtMi4xNi01LjMyOC0yLjE2LTExLjMwNCAwLTUuNDM2IDIuNDEyLTEwLjQ3NnQ2LjQ0NC04LjczIDkuNTc2LTUuODg2IDExLjUyLTIuMTk2IDExLjUyIDIuMTk2IDkuNTc2IDUuODg2IDYuNDQ0IDguNzMgMi40MTIgMTAuNDc2elwiLFwiVk9MVU1FX09GRlwiOlwiTTI3LjY0OC01MS43Njd2MzkuMTY4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0LTEuNjItLjY4NGwtMTEuOTg4LTExLjk4OGgtOS40MzJxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtMTMuODI0cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoOS40MzJsMTEuOTg4LTExLjk4OHEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0LjY4NCAxLjYyelwiLFwiVk9MVU1FX0RPV05cIjpcIk0yNy42NDgtNTEuNzY3djM5LjE2OHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NC0xLjYyLS42ODRsLTExLjk4OC0xMS45ODhoLTkuNDMycS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTEzLjgyNHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDkuNDMybDExLjk4OC0xMS45ODhxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NC42ODQgMS42MnptMTMuODI0IDE5LjU4NHEwIDIuNzM2LTEuNTMgNS4wOTR0LTQuMDUgMy4zNjZxLS4zNi4xOC0uOS4xOC0uOTM2IDAtMS42Mi0uNjY2dC0uNjg0LTEuNjM4cTAtLjc1Ni40MzItMS4yNzh0MS4wNDQtLjkgMS4yMjQtLjgyOCAxLjA0NC0xLjI3OC40MzItMi4wNTItLjQzMi0yLjA1Mi0xLjA0NC0xLjI3OC0xLjIyNC0uODI4LTEuMDQ0LS45LS40MzItMS4yNzhxMC0uOTcyLjY4NC0xLjYzOHQxLjYyLS42NjZxLjU0IDAgLjkuMTggMi41Mi45NzIgNC4wNSAzLjM0OHQxLjUzIDUuMTEyelwiLFwiVk9MVU1FX1VQXCI6XCJNMjcuNjQ4LTUxLjc2N3YzOS4xNjhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODQtMS42Mi0uNjg0bC0xMS45ODgtMTEuOTg4aC05LjQzMnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0xMy44MjRxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg5LjQzMmwxMS45ODgtMTEuOTg4cS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODQuNjg0IDEuNjJ6bTEzLjgyNCAxOS41ODRxMCAyLjczNi0xLjUzIDUuMDk0dC00LjA1IDMuMzY2cS0uMzYuMTgtLjkuMTgtLjkzNiAwLTEuNjItLjY2NnQtLjY4NC0xLjYzOHEwLS43NTYuNDMyLTEuMjc4dDEuMDQ0LS45IDEuMjI0LS44MjggMS4wNDQtMS4yNzguNDMyLTIuMDUyLS40MzItMi4wNTItMS4wNDQtMS4yNzgtMS4yMjQtLjgyOC0xLjA0NC0uOS0uNDMyLTEuMjc4cTAtLjk3Mi42ODQtMS42Mzh0MS42Mi0uNjY2cS41NCAwIC45LjE4IDIuNTIuOTcyIDQuMDUgMy4zNDh0MS41MyA1LjExMnptOS4yMTYgMHEwIDUuNTA4LTMuMDYgMTAuMTd0LTguMSA2Ljc4NnEtLjQ2OC4xOC0uOS4xOC0uOTcyIDAtMS42NTYtLjY4NHQtLjY4NC0xLjYycTAtMS40MDQgMS40MDQtMi4xMjQgMi4wMTYtMS4wNDQgMi43MzYtMS41ODQgMi42NjQtMS45NDQgNC4xNTgtNC44Nzh0MS40OTQtNi4yNDYtMS40OTQtNi4yNDYtNC4xNTgtNC44NzhxLS43Mi0uNTQtMi43MzYtMS41ODQtMS40MDQtLjcyLTEuNDA0LTIuMTI0IDAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRxLjQ2OCAwIC45MzYuMTggNS4wNCAyLjEyNCA4LjEgNi43ODZ0My4wNiAxMC4xN3ptOS4yMTYgMHEwIDguMjgtNC41NzIgMTUuMjF0LTEyLjE2OCAxMC4yMDZxLS40NjguMTgtLjkzNi4xOC0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJxMC0xLjI5NiAxLjQwNC0yLjEyNC4yNTItLjE0NC44MS0uMzc4dC44MS0uMzc4cTEuNjU2LS45IDIuOTUyLTEuODM2IDQuNDI4LTMuMjc2IDYuOTEyLTguMTcydDIuNDg0LTEwLjQwNC0yLjQ4NC0xMC40MDQtNi45MTItOC4xNzJxLTEuMjk2LS45MzYtMi45NTItMS44MzYtLjI1Mi0uMTQ0LS44MS0uMzc4dC0uODEtLjM3OHEtMS40MDQtLjgyOC0xLjQwNC0yLjEyNCAwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0cS40NjggMCAuOTM2LjE4IDcuNTk2IDMuMjc2IDEyLjE2OCAxMC4yMDZ0NC41NzIgMTUuMjF6XCIsXCJRUkNPREVcIjpcIk0xMy44MjQtMjIuOTY3djQuNjA4aC00LjYwOHYtNC42MDhoNC42MDh6bTAtMjcuNjQ4djQuNjA4aC00LjYwOHYtNC42MDhoNC42MDh6bTI3LjY0OCAwdjQuNjA4aC00LjYwOHYtNC42MDhoNC42MDh6bS0zNi44NjQgMzYuODI4aDEzLjgyNHYtMTMuNzg4aC0xMy44MjR2MTMuNzg4em0wLTI3LjYxMmgxMy44MjR2LTEzLjgyNGgtMTMuODI0djEzLjgyNHptMjcuNjQ4IDBoMTMuODI0di0xMy44MjRoLTEzLjgyNHYxMy44MjR6bS05LjIxNiA5LjIxNnYyMy4wNGgtMjMuMDR2LTIzLjA0aDIzLjA0em0xOC40MzIgMTguNDMydjQuNjA4aC00LjYwOHYtNC42MDhoNC42MDh6bTkuMjE2IDB2NC42MDhoLTQuNjA4di00LjYwOGg0LjYwOHptMC0xOC40MzJ2MTMuODI0aC0xMy44MjR2LTQuNjA4aC00LjYwOHYxMy44MjRoLTQuNjA4di0yMy4wNGgxMy44MjR2NC42MDhoNC42MDh2LTQuNjA4aDQuNjA4em0tMjcuNjQ4LTI3LjY0OHYyMy4wNGgtMjMuMDR2LTIzLjA0aDIzLjA0em0yNy42NDggMHYyMy4wNGgtMjMuMDR2LTIzLjA0aDIzLjA0elwiLFwiQkFSQ09ERVwiOlwiTTIuMjY4LTkuMTQzaC0yLjI2OHYtNTAuNjg4aDIuMjY4djUwLjY4OHptMi4yNjgtLjAzNmgtMS4xNTJ2LTUwLjY1MmgxLjE1MnY1MC42NTJ6bTMuMzg0IDBoLTEuMTE2di01MC42NTJoMS4xMTZ2NTAuNjUyem01LjY1MiAwaC0xLjExNnYtNTAuNjUyaDEuMTE2djUwLjY1MnptNS42NTIgMGgtMi4yMzJ2LTUwLjY1MmgyLjIzMnY1MC42NTJ6bTQuNTM2IDBoLTEuMTE2di01MC42NTJoMS4xMTZ2NTAuNjUyem0yLjI2OCAwaC0xLjExNnYtNTAuNjUyaDEuMTE2djUwLjY1MnptMi4yNjggMGgtMS4xMTZ2LTUwLjY1MmgxLjExNnY1MC42NTJ6bTUuNjUyIDBoLTIuMjY4di01MC42NTJoMi4yNjh2NTAuNjUyem01LjY1MiAwaC0yLjI2OHYtNTAuNjUyaDIuMjY4djUwLjY1MnptNC41MzYgMGgtMi4yNjh2LTUwLjY1MmgyLjI2OHY1MC42NTJ6bTQuNTM2IDBoLTIuMjY4di01MC42NTJoMi4yNjh2NTAuNjUyem0zLjM4NCAwaC0yLjI2OHYtNTAuNjUyaDIuMjY4djUwLjY1MnptNi44MDQgMGgtMy4zODR2LTUwLjY1MmgzLjM4NHY1MC42NTJ6bTIuMjY4IDBoLTEuMTUydi01MC42NTJoMS4xNTJ2NTAuNjUyem0zLjM4NC4wMzZoLTIuMjY4di01MC42ODhoMi4yNjh2NTAuNjg4elwiLFwiVEFHXCI6XCJNMTYuMTI4LTQ4LjMxMXEwLTEuOTA4LTEuMzUtMy4yNTh0LTMuMjU4LTEuMzUtMy4yNTggMS4zNS0xLjM1IDMuMjU4IDEuMzUgMy4yNTggMy4yNTggMS4zNSAzLjI1OC0xLjM1IDEuMzUtMy4yNTh6bTM4LjQxMiAyMC43MzZxMCAxLjkwOC0xLjMzMiAzLjI0bC0xNy42NzYgMTcuNzEycS0xLjQwNCAxLjMzMi0zLjI3NiAxLjMzMi0xLjkwOCAwLTMuMjQtMS4zMzJsLTI1Ljc0LTI1Ljc3NnEtMS4zNjgtMS4zMzItMi4zMjItMy42MzZ0LS45NTQtNC4yMTJ2LTE0Ljk3NnEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGgxNC45NzZxMS45MDggMCA0LjIxMi45NTR0My42NzIgMi4zMjJsMjUuNzQgMjUuNzA0cTEuMzMyIDEuNDA0IDEuMzMyIDMuMjc2elwiLFwiVEFHU1wiOlwiTTE2LjEyOC00OC4zMTFxMC0xLjkwOC0xLjM1LTMuMjU4dC0zLjI1OC0xLjM1LTMuMjU4IDEuMzUtMS4zNSAzLjI1OCAxLjM1IDMuMjU4IDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4em0zOC40MTIgMjAuNzM2cTAgMS45MDgtMS4zMzIgMy4yNGwtMTcuNjc2IDE3LjcxMnEtMS40MDQgMS4zMzItMy4yNzYgMS4zMzItMS45MDggMC0zLjI0LTEuMzMybC0yNS43NC0yNS43NzZxLTEuMzY4LTEuMzMyLTIuMzIyLTMuNjM2dC0uOTU0LTQuMjEydi0xNC45NzZxMC0xLjg3MiAxLjM2OC0zLjI0dDMuMjQtMS4zNjhoMTQuOTc2cTEuOTA4IDAgNC4yMTIuOTU0dDMuNjcyIDIuMzIybDI1Ljc0IDI1LjcwNHExLjMzMiAxLjQwNCAxLjMzMiAzLjI3NnptMTMuODI0IDBxMCAxLjkwOC0xLjMzMiAzLjI0bC0xNy42NzYgMTcuNzEycS0xLjQwNCAxLjMzMi0zLjI3NiAxLjMzMi0xLjI5NiAwLTIuMTI0LS41MDR0LTEuOTA4LTEuNjJsMTYuOTItMTYuOTJxMS4zMzItMS4zMzIgMS4zMzItMy4yNCAwLTEuODcyLTEuMzMyLTMuMjc2bC0yNS43NC0yNS43MDRxLTEuMzY4LTEuMzY4LTMuNjcyLTIuMzIydC00LjIxMi0uOTU0aDguMDY0cTEuOTA4IDAgNC4yMTIuOTU0dDMuNjcyIDIuMzIybDI1Ljc0IDI1LjcwNHExLjMzMiAxLjQwNCAxLjMzMiAzLjI3NnpcIixcIkJPT0tcIjpcIk01OS4wMDQtNDcuMjMxcTEuNDQgMi4wNTIuNjQ4IDQuNjQ0bC05LjkgMzIuNjE2cS0uNjg0IDIuMzA0LTIuNzU0IDMuODd0LTQuNDEgMS41NjZoLTMzLjIyOHEtMi43NzIgMC01LjM0Ni0xLjkyNnQtMy41ODItNC43MzRxLS44NjQtMi40MTItLjA3Mi00LjU3MiAwLS4xNDQuMTA4LS45NzJ0LjE0NC0xLjMzMnEuMDM2LS4yODgtLjEwOC0uNzc0dC0uMTA4LS43MDJxLjA3Mi0uMzk2LjI4OC0uNzU2dC41OTQtLjg0Ni41OTQtLjg0NnEuODI4LTEuMzY4IDEuNjItMy4yOTR0MS4wOC0zLjI5NHEuMTA4LS4zNi4wMTgtMS4wOHQtLjAxOC0xLjAwOHEuMTA4LS4zOTYuNjEyLTEuMDA4dC42MTItLjgyOHEuNzU2LTEuMjk2IDEuNTEyLTMuMzEydC45LTMuMjRxLjAzNi0uMzI0LS4wOS0xLjE1MnQuMDE4LTEuMDA4cS4xNDQtLjQ2OC43OTItMS4wOTh0Ljc5Mi0uODFxLjY4NC0uOTM2IDEuNTMtMy4wNDJ0Ljk5LTMuNDc0cS4wMzYtLjI4OC0uMTA4LS45MTh0LS4wNzItLjk1NHEuMDcyLS4yODguMzI0LS42NDh0LjY0OC0uODI4LjYxMi0uNzU2cS4yODgtLjQzMi41OTQtMS4wOTh0LjU0LTEuMjYuNTc2LTEuMjk2LjcwMi0xLjE1Mi45NTQtLjg0NiAxLjI5Ni0uNDE0IDEuNzEuMTk4bC0uMDM2LjEwOHExLjM2OC0uMzI0IDEuODM2LS4zMjRoMjcuMzk2cTIuNjY0IDAgNC4xMDQgMi4wMTZ0LjY0OCA0LjY4bC05Ljg2NCAzMi42MTZxLTEuMjk2IDQuMjg0LTIuNTc0IDUuNTI2dC00LjYyNiAxLjI0MmgtMzEuMjg0cS0uOTcyIDAtMS4zNjguNTQtLjM5Ni41NzYtLjAzNiAxLjU0OC44NjQgMi41MiA1LjE4NCAyLjUyaDMzLjIyOHExLjA0NCAwIDIuMDE2LS41NTh0MS4yNi0xLjQ5NGwxMC44LTM1LjUzMnEuMjUyLS43OTIuMTgtMi4wNTIgMS4zNjguNTQgMi4xMjQgMS41NDh6bS0zOC4zMDQuMDcycS0uMTQ0LjQ2OC4wNzIuODF0LjcyLjM0MmgyMS44ODhxLjQ2OCAwIC45MTgtLjM0MnQuNTk0LS44MWwuNzU2LTIuMzA0cS4xNDQtLjQ2OC0uMDcyLS44MXQtLjcyLS4zNDJoLTIxLjg4OHEtLjQ2OCAwLS45MTguMzQydC0uNTk0Ljgxem0tMi45ODggOS4yMTZxLS4xNDQuNDY4LjA3Mi44MXQuNzIuMzQyaDIxLjg4OHEuNDY4IDAgLjkxOC0uMzQydC41OTQtLjgxbC43NTYtMi4zMDRxLjE0NC0uNDY4LS4wNzItLjgxdC0uNzItLjM0MmgtMjEuODg4cS0uNDY4IDAtLjkxOC4zNDJ0LS41OTQuODF6XCIsXCJCT09LTUFSS1wiOlwiTTQxLjkwNC01OS44MzFxLjgyOCAwIDEuNTg0LjMyNCAxLjE4OC40NjggMS44OSAxLjQ3NnQuNzAyIDIuMjMydjQ2LjQwNHEwIDEuMjI0LS43MDIgMi4yMzJ0LTEuODkgMS40NzZxLS42ODQuMjg4LTEuNTg0LjI4OC0xLjcyOCAwLTIuOTg4LTEuMTUybC0xNS44NzYtMTUuMjY0LTE1Ljg3NiAxNS4yNjRxLTEuMjk2IDEuMTg4LTIuOTg4IDEuMTg4LS44MjggMC0xLjU4NC0uMzI0LTEuMTg4LS40NjgtMS44OS0xLjQ3NnQtLjcwMi0yLjIzMnYtNDYuNDA0cTAtMS4yMjQuNzAyLTIuMjMydDEuODktMS40NzZxLjc1Ni0uMzI0IDEuNTg0LS4zMjRoMzcuNzI4elwiLFwiUFJJTlRcIjpcIk0xMy44MjQtOS4xNDNoMzIuMjU2di05LjIxNmgtMzIuMjU2djkuMjE2em0wLTIzLjA0aDMyLjI1NnYtMTMuODI0aC01Ljc2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di01Ljc2aC0yMy4wNHYyMy4wNHptNDEuNDcyIDIuMzA0cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NC0xLjYyLjY4NC0uNjg0IDEuNjIuNjg0IDEuNjIgMS42Mi42ODQgMS42Mi0uNjg0LjY4NC0xLjYyem00LjYwOCAwdjE0Ljk3NnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtOC4wNjR2NS43NnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0zNC41NnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNS43NmgtOC4wNjRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTE0Ljk3NnEwLTIuODQ0IDIuMDM0LTQuODc4dDQuODc4LTIuMDM0aDIuMzA0di0xOS41ODRxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDI0LjE5MnExLjQ0IDAgMy4xNjguNzJ0Mi43MzYgMS43MjhsNS40NzIgNS40NzJxMS4wMDggMS4wMDggMS43MjggMi43MzZ0LjcyIDMuMTY4djkuMjE2aDIuMzA0cTIuODQ0IDAgNC44NzggMi4wMzR0Mi4wMzQgNC44Nzh6XCIsXCJDQU1FUkFcIjpcIk0zNC41Ni00MC4yNDdxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNi0zLjA0MiA3LjMyNi03LjMyNiAzLjA0Mi03LjMyNi0zLjA0Mi0zLjA0Mi03LjMyNiAzLjA0Mi03LjMyNiA3LjMyNi0zLjA0MnptMjUuMzQ0LTE0Ljk3NnEzLjgxNiAwIDYuNTE2IDIuN3QyLjcgNi41MTZ2MzIuMjU2cTAgMy44MTYtMi43IDYuNTE2dC02LjUxNiAyLjdoLTUwLjY4OHEtMy44MTYgMC02LjUxNi0yLjd0LTIuNy02LjUxNnYtMzIuMjU2cTAtMy44MTYgMi43LTYuNTE2dDYuNTE2LTIuN2g4LjA2NGwxLjgzNi00Ljg5NnEuNjg0LTEuNzY0IDIuNTAyLTMuMDQydDMuNzI2LTEuMjc4aDE4LjQzMnExLjkwOCAwIDMuNzI2IDEuMjc4dDIuNTAyIDMuMDQybDEuODM2IDQuODk2aDguMDY0em0tMjUuMzQ0IDQxLjQ3MnE2LjY2IDAgMTEuMzk0LTQuNzM0dDQuNzM0LTExLjM5NC00LjczNC0xMS4zOTQtMTEuMzk0LTQuNzM0LTExLjM5NCA0LjczNC00LjczNCAxMS4zOTQgNC43MzQgMTEuMzk0IDExLjM5NCA0LjczNHpcIixcIkZPTlRcIjpcIk0yNi4xLTQ0LjMxNWwtNi4xMiAxNi4ycTEuMTg4IDAgNC45MTQuMDcydDUuNzc4LjA3MnEuNjg0IDAgMi4wNTItLjA3Mi0zLjEzMi05LjEwOC02LjYyNC0xNi4yNzJ6bS0yNi4xIDM5Ljc4bC4wNzItMi44NDRxLjgyOC0uMjUyIDIuMDE2LS40NXQyLjA1Mi0uMzc4IDEuNzgyLS41MjIgMS42MDItMS4wNDQgMS4xMTYtMS44MThsOC41MzItMjIuMTc2IDEwLjA4LTI2LjA2NGg0LjYwODAwMDAwMDAwMDAwMDVxLjI4OC41MDQuMzk2Ljc1Nmw3LjM4IDE3LjI4cTEuMTg4IDIuODA4IDMuODE2IDkuMjd0NC4xMDQgOS44ODJxLjU0IDEuMjI0IDIuMDg4IDUuMjAydDIuNTkyIDYuMDY2cS43MiAxLjYyIDEuMjYgMi4wNTIuNjg0LjU0IDMuMTY4IDEuMDYydDMuMDI0LjczOHEuMjE2IDEuMzY4LjIxNiAyLjA1MmwtLjAxOC40NjgtLjAxOC40NjhxLTIuMjY4IDAtNi44NC0uMjg4dC02Ljg3Ni0uMjg4cS0yLjczNiAwLTcuNzQuMjUydC02LjQwOC4yODhxMC0xLjU0OC4xNDQtMi44MDhsNC43MTYtMS4wMDhxLjAzNiAwIC40NS0uMDl0LjU1OC0uMTI2LjUyMi0uMTYyLjU0LS4yMzQuMzk2LS4yODguMzI0LS4zOTYuMDktLjUwNHEwLS41NzYtMS4xMTYtMy40NzR0LTIuNTkyLTYuMzktMS41MTItMy42bC0xNi4yLS4wNzJxLS45MzYgMi4wODgtMi43NTQgNy4wMzh0LTEuODE4IDUuODVxMCAuNzkyLjUwNCAxLjM1dDEuNTY2Ljg4MiAxLjc0Ni40ODYgMi4wNTIuMzA2IDEuNDc2LjE0NHEuMDM2LjY4NC4wMzYgMi4wODggMCAuMzI0LS4wNzIuOTcyLTIuMDg4IDAtNi4yODItLjM2dC02LjI4Mi0uMzZxLS4yODggMC0uOTU0LjE0NHQtLjc3NC4xNDRxLTIuODguNTA0LTYuNzY4LjUwNHpcIixcIkJPTERcIjpcIk0xOS45OC05LjY4M3EyLjY2NCAxLjE1MiA1LjA0IDEuMTUyIDEzLjUzNiAwIDEzLjUzNi0xMi4wNiAwLTQuMTA0LTEuNDc2LTYuNDgtLjk3Mi0xLjU4NC0yLjIxNC0yLjY2NHQtMi40My0xLjY3NC0yLjg5OC0uOS0zLjAyNC0uMzc4LTMuNDAyLS4wNzJxLTIuNjI4IDAtMy42MzYuMzYgMCAxLjkwOC0uMDE4IDUuNzI0dC0uMDE4IDUuNjg4cTAgLjI4OC0uMDM2IDIuNDN0LS4wMTggMy40NzQuMTYyIDMuMDA2LjQzMiAyLjM5NHptLS41MDQtMjYuODU2cTEuNTEyLjI1MiAzLjkyNC4yNTIgMi45NTIgMCA1LjE0OC0uNDY4dDMuOTYtMS42MDIgMi42ODItMy4yMjIuOTE4LTUuMTEycTAtMi41Mi0xLjA0NC00LjQxdC0yLjg0NC0yLjk1Mi0zLjg4OC0xLjU2Ni00LjQ2NC0uNTA0cS0xLjggMC00LjY4LjQ2OCAwIDEuOC4xNDQgNS40MzZ0LjE0NCA1LjQ3MnEwIC45NzItLjAxOCAyLjg4dC0uMDE4IDIuODQ0cTAgMS42NTYuMDM2IDIuNDg0em0tMTkuNDc2IDMyLjAwNGwuMDcyLTMuMzg0cS41NC0uMTQ0IDMuMDYtLjU3NnQzLjgxNi0uOTcycS4yNTItLjQzMi40NS0uOTcydC4zMDYtMS4yMDYuMTk4LTEuMTcuMTA4LTEuMzUuMDE4LTEuMjI0di0yLjM1OHEwLTM1LjM1Mi0uNzkyLTM2LjktLjE0NC0uMjg4LS43OTItLjUyMnQtMS42MDItLjM5Ni0xLjc4Mi0uMjUyLTEuNzQ2LS4xNjItMS4wOTgtLjEwOGwtLjE0NC0yLjk4OHEzLjUyOC0uMDcyIDEyLjI0LS40MTR0MTMuNDI4LS4zNDJxLjgyOCAwIDIuNDY2LjAxOHQyLjQzLjAxOHEyLjUyIDAgNC45MTQuNDY4dDQuNjI2IDEuNTEyIDMuODg4IDIuNTU2IDIuNjY0IDMuNzYyIDEuMDA4IDQuOTVxMCAxLjg3Mi0uNTk0IDMuNDM4dC0xLjQwNCAyLjU5Mi0yLjMyMiAyLjA3LTIuNjI4IDEuNjItMy4wMjQgMS40NHE1LjU0NCAxLjI2IDkuMjM0IDQuODI0dDMuNjkgOC45MjhxMCAzLjYtMS4yNiA2LjQ2MnQtMy4zNjYgNC42OTgtNC45NjggMy4wNzgtNS44ODYgMS43NDYtNi4zMzYuNTA0cS0xLjU4NCAwLTQuNzUyLS4xMDh0LTQuNzUyLS4xMDhxLTMuODE2IDAtMTEuMDUyLjM5NnQtOC4zMTYuNDMyelwiLFwiSVRBTElDXCI6XCJNMC00LjYwN2wuNjEyLTMuMDZxLjIxNi0uMDcyIDIuOTM0LS43NzR0NC4wMTQtMS4zNXExLjAwOC0xLjI2IDEuNDc2LTMuNjM2LjAzNi0uMjUyIDIuMjMyLTEwLjQwNHQ0LjEwNC0xOS41NjYgMS44NzItMTAuNjc0di0uOXEtLjg2NC0uNDY4LTEuOTYyLS42NjZ0LTIuNTAyLS4yODgtMi4wODgtLjE5OGwuNjg0LTMuNzA4cTEuMTg4LjA3MiA0LjMyLjIzNHQ1LjM4Mi4yNTIgNC4zMzguMDlxMS43MjggMCAzLjU0Ni0uMDl0NC4zNTYtLjI1MiAzLjU0Ni0uMjM0cS0uMTggMS40MDQtLjY4NCAzLjIwNC0xLjA4LjM2LTMuNjU0IDEuMDI2dC0zLjkwNiAxLjIwNnEtLjI4OC42ODQtLjUwNCAxLjUzdC0uMzI0IDEuNDQtLjI3IDEuNjM4LS4yMzQgMS41MTJxLS45NzIgNS4zMjgtMy4xNSAxNS4xMDJ0LTIuNzkgMTIuNzk4cS0uMDcyLjMyNC0uNDY4IDIuMDg4dC0uNzIgMy4yNC0uNTc2IDMuMDA2LS4yMTYgMi4wN2wuMDM2LjY0OHEuNjEyLjE0NCA2LjY2IDEuMTE2LS4xMDggMS41ODQtLjU3NiAzLjU2NC0uMzk2IDAtMS4xNy4wNTR0LTEuMTcuMDU0cS0xLjA0NCAwLTMuMTMyLS4zNnQtMy4wOTYtLjM2cS00Ljk2OC0uMDcyLTcuNDE2LS4wNzItMS44MzYgMC01LjE0OC4zMjR0LTQuMzU2LjM5NnpcIixcIlRFWFRfSEVJR0hUXCI6XCJNNjIuNzg0LTEzLjc1MXExLjE4OCAwIDEuNTEyLjY2NnQtLjM5NiAxLjYwMmwtNC41MzYgNS44MzJxLS43Mi45MzYtMS43NjQuOTM2dC0xLjc2NC0uOTM2bC00LjUzNi01LjgzMnEtLjcyLS45MzYtLjM5Ni0xLjYwMnQxLjUxMi0uNjY2aDIuODh2LTM2Ljg2NGgtMi44OHEtMS4xODggMC0xLjUxMi0uNjY2dC4zOTYtMS42MDJsNC41MzYtNS44MzJxLjcyLS45MzYgMS43NjQtLjkzNnQxLjc2NC45MzZsNC41MzYgNS44MzJxLjcyLjkzNi4zOTYgMS42MDJ0LTEuNTEyLjY2NmgtMi44OHYzNi44NjRoMi44OHptLTU5Ljg2OC00Ni4wNDRsMS45NDQuOTcycS40MzIuMTggNy41OTYuMTggMS41ODQgMCA0Ljc1Mi0uMDcydDQuNzUyLS4wNzJxMS4yOTYgMCAzLjg3LjAxOHQzLjg3LjAxOGgxMC41NDhxLjIxNiAwIC43NTYuMDE4dC43MzggMCAuNTc2LS4xMDguNjMtLjMyNC41NC0uNjNsMS41MTItLjAzNi41MDQuMDE4LjUwNC4wMThxLjA3MiA0LjAzMi4wNzIgMTIuMDk2IDAgMi44OC0uMTggMy45MjQtMS40MDQuNTA0LTIuNDQ4LjY0OC0uOS0xLjU4NC0xLjk0NC00LjYwOC0uMTA4LS4zMjQtLjM5Ni0xLjcyOHQtLjUyMi0yLjY0Ni0uMjctMS4yNzhxLS4yMTYtLjI4OC0uNDMyLS40NXQtLjU1OC0uMjE2LS40NjgtLjA5LS42NDgtLjAxOC0uNTk0LjAxOHEtLjYxMiAwLTIuMzk0LS4wMTh0LTIuNjgyLS4wMTgtMi4zMDQuMDcyLTIuNTU2LjIxNnEtLjMyNCAyLjkxNi0uMjg4IDQuODk2IDAgMy4zODQuMDcyIDEzLjk2OHQuMDcyIDE2LjM4cTAgLjU3Ni0uMDkgMi41NzR0MCAzLjI5NC40NSAyLjQ4NHExLjQ0Ljc1NiA0LjQ2NCAxLjUzdDQuMzIgMS4zNXEuMTggMS40NC4xOCAxLjggMCAuNTA0LS4xMDggMS4wNDRsLTEuMjI0LjAzNnEtMi43MzYuMDcyLTcuODQ4LS4yODh0LTcuNDUyLS4zNnEtMS44IDAtNS40MzYuMzI0dC01LjQ3Mi4zMjRsLS4xMDgtMS44NzJ2LS4zMjRxLjYxMi0uOTcyIDIuMjE0LTEuNTQ4dDMuNTQ2LTEuMDQ0IDIuODA4LS45NzJxLjY4NC0xLjUxMi42ODQtMTMuNzg4IDAtMy42MzYtLjEwOC0xMC45MDh0LS4xMDgtMTAuOTA4di00LjIxMnEwLS4wNzIuMDE4LS41NTh0LjAxOC0uOS0uMDM2LS45MTgtLjEwOC0uODY0LS4xOC0uNTA0cS0uMzk2LS40MzItNS44MzItLjQzMi0xLjE4OCAwLTMuMzQ4LjQzMnQtMi44OC45MzZxLS42ODQuNDY4LTEuMjI0IDIuNjF0LTEuMTM0IDMuOTk2LTEuNTMgMS45MjZxLTEuNTEyLS45MzYtMi4wMTYtMS41ODR2LTEzLjc4OHpcIixcIlRFWFRfV0lEVEhcIjpcIk0yLjkxNi01OS43OTVsMS45NDQuOTcycS40MzIuMTggNy41OTYuMTggMS41ODQgMCA0Ljc1Mi0uMDcydDQuNzUyLS4wNzJxMi41MiAwIDguODc0LS4wMzZ0MTAuOTYyLS4wMTggOC44OTIuMTYycTEuMTg4LjAzNiAyLjAxNi0xLjExNmwxLjUxMi0uMDM2LjUwNC4wMTguNTA0LjAxOHEuMDcyIDQuMDMyLjA3MiAxMi4wOTYgMCAyLjg4LS4xOCAzLjkyNC0xLjQwNC41MDQtMi40NDguNjQ4LS45LTEuNTg0LTEuOTQ0LTQuNjA4LS4xMDgtLjMyNC0uMzk2LTEuNzF0LS41NC0yLjY0Ni0uMjUyLTEuMjk2cS0uMzYtLjQ2OC0uOTcyLS42ODQtLjE4LS4wNzItMi4zNzYtLjA3Mi0xLjA4IDAtMy4zNDgtLjAzNnQtMy43MDgtLjAzNi0zLjM4NC4wNzItMy40NTYuMjUycS0uMzI0IDIuOTE2LS4yODggNC44OTZsLjAzNiA1LjQ3MnYtMS44NzJxMCAxLjk4LjAzNiA1LjU0NHQuMDU0IDYuNDguMDE4IDUuNTA4cTAgLjU3Ni0uMDkgMi41NzR0MCAzLjI5NC40NSAyLjQ4NHExLjQ0Ljc1NiA0LjQ2NCAxLjUzdDQuMzIgMS4zNXEuMTggMS40NC4xOCAxLjggMCAuNTA0LS4xMDggMS4wNDRsLTEuMjI0LjAzNnEtMi43MzYuMDcyLTcuODQ4LS4yODh0LTcuNDUyLS4zNnEtMS44IDAtNS40MzYuMzI0dC01LjQ3Mi4zMjRsLS4xMDgtMS44NzJ2LS4zMjRxLjYxMi0uOTcyIDIuMjE0LTEuNTQ4dDMuNTQ2LTEuMDQ0IDIuODA4LS45NzJxLjI1Mi0uNTc2LjQxNC0yLjY2NHQuMjE2LTUuMjM4LjA1NC01LjU4LS4wMTgtNS41MjYtLjAxOC0zLjIwNHEwLS4yNTItLjA5LS43NzR0LS4wOS0uODFxMC0uMjUyLjAxOC0xLjU4NHQuMDM2LTIuNjI4IDAtMi43NTQtLjEwOC0yLjQzLS4yMzQtMS4xNTJxLS4zOTYtLjQzMi01LjgzMi0uNDMyLTEuNDc2IDAtNS44NjguNDg2dC00Ljk2OC44ODJxLS42ODQuNDMyLTEuMjI0IDIuNTc0dC0xLjEzNCA0LjAxNC0xLjUzIDEuOTQ0cS0xLjUxMi0uOTM2LTIuMDE2LTEuNTg0di0xMy43ODh6bTQ0LjI0NCA0Ni4xNTJxLjQzMiAwIDEuNTEyLjcwMnQyLjA3IDEuNDk0IDIuMTQyIDEuNzY0IDEuMjk2IDEuMDhxLjkzNi43NTYuOTM2IDEuNzY0dC0uOTM2IDEuNzY0cS0uMTQ0LjEwOC0xLjI5NiAxLjA4dC0yLjE0MiAxLjc2NC0yLjA3IDEuNDk0LTEuNTEyLjcwMnEtLjQ2OCAwLS43MzgtLjM3OHQtLjM2LTEuMDI2LS4wOS0xLjIwNi4wNTQtMS4xODguMDU0LS43MDJoLTM2Ljg2NHEwIC4wNzIuMDU0LjcwMnQuMDU0IDEuMTg4LS4wOSAxLjIwNi0uMzYgMS4wMjYtLjczOC4zNzhxLS40MzIgMC0xLjUxMi0uNzAydC0yLjA3LTEuNDk0LTIuMTQyLTEuNzY0LTEuMjk2LTEuMDhxLS45MzYtLjc1Ni0uOTM2LTEuNzY0dC45MzYtMS43NjRxLjE0NC0uMTA4IDEuMjk2LTEuMDh0Mi4xNDItMS43NjQgMi4wNy0xLjQ5NCAxLjUxMi0uNzAycS40NjggMCAuNzM4LjM3OHQuMzYgMS4wMjYuMDkgMS4yMDYtLjA1NCAxLjE4OC0uMDU0LjcwMmgzNi44NjRxMC0uMDcyLS4wNTQtLjcwMnQtLjA1NC0xLjE4OC4wOS0xLjIwNi4zNi0xLjAyNi43MzgtLjM3OHpcIixcIkFMSUdOX0xFRlRcIjpcIk02NC41MTItMTYuMDU1djQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC01OS45MDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg1OS45MDRxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptLTEzLjgyNC0xMy44MjR2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTQ2LjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNDYuMDhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptOS4yMTYtMTMuODI0djQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC01NS4yOTZxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg1NS4yOTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptLTEzLjgyNC0xMy44MjR2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTQxLjQ3MnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQxLjQ3MnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiQUxJR05fQ0VOVEVSXCI6XCJNNjQuNTEyLTE2LjA1NXY0LjYwOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNTkuOTA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNTkuOTA0cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bS0xMy44MjQtMTMuODI0djQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0zMi4yNTZxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGgzMi4yNTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptOS4yMTYtMTMuODI0djQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC01MC42ODhxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg1MC42ODhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptLTEzLjgyNC0xMy44MjR2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTIzLjA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoMjMuMDRxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIkFMSUdOX1JJR0hUXCI6XCJNNjQuNTEyLTE2LjA1NXY0LjYwOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNTkuOTA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNTkuOTA0cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bTAtMTMuODI0djQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC00Ni4wOHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQ2LjA4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bTAtMTMuODI0djQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC01NS4yOTZxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg1NS4yOTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptMC0xMy44MjR2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTQxLjQ3MnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQxLjQ3MnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiQUxJR05fSlVTVElGWVwiOlwiTTY0LjUxMi0xNi4wNTV2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTU5LjkwNHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDU5LjkwNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0wLTEzLjgyNHY0LjYwOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNTkuOTA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNTkuOTA0cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bTAtMTMuODI0djQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC01OS45MDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg1OS45MDRxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptMC0xMy44MjR2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTU5LjkwNHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDU5LjkwNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiTElTVFwiOlwiTTkuMjE2LTE3LjIwN3Y2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNi45MTJxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTYuOTEycTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDYuOTEycS40NjggMCAuODEuMzQydC4zNDIuODF6bTAtMTMuODI0djYuOTEycTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC02LjkxMnEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi45MTJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoNi45MTJxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptMC0xMy44MjR2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTYuOTEycS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg2LjkxMnEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem01NS4yOTYgMjcuNjQ4djYuOTEycTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC00OC4zODRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTYuOTEycTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDQ4LjM4NHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0tNTUuMjk2LTQxLjQ3MnY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNi45MTJxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTYuOTEycTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDYuOTEycS40NjggMCAuODEuMzQydC4zNDIuODF6bTU1LjI5NiAyNy42NDh2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTQ4LjM4NHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi45MTJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoNDguMzg0cS40NjggMCAuODEuMzQydC4zNDIuODF6bTAtMTMuODI0djYuOTEycTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC00OC4zODRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTYuOTEycTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDQ4LjM4NHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0wLTEzLjgyNHY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNDguMzg0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg0OC4zODRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXpcIixcIk9VVERFTlRcIjpcIk0xMy44MjQtNDQuODU1djIwLjczNnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MnEtLjUwNCAwLS44MjgtLjMyNGwtMTAuMzY4LTEwLjM2OHEtLjMyNC0uMzI0LS4zMjQtLjgyOHQuMzI0LS44MjhsMTAuMzY4LTEwLjM2OHEuMzI0LS4zMjQuODI4LS4zMjQuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem01MC42ODggMjcuNjQ4djYuOTEycTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC02Mi4yMDhxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTYuOTEycTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDYyLjIwOHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0wLTEzLjgyNHY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMzkuMTY4cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0MmgzOS4xNjhxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptMC0xMy44MjR2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTM5LjE2OHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi45MTJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMzkuMTY4cS40NjggMCAuODEuMzQydC4zNDIuODF6bTAtMTMuODI0djYuOTEycTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC02Mi4yMDhxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTYuOTEycTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDYyLjIwOHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxelwiLFwiSU5ERU5UXCI6XCJNMTIuNjcyLTM0LjQ4N3EwIC41MDQtLjMyNC44MjhsLTEwLjM2OCAxMC4zNjhxLS4zMjQuMzI0LS44MjguMzI0LS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIwLjczNnEwLS40NjguMzQyLS44MXQuODEtLjM0MnEuNTA0IDAgLjgyOC4zMjRsMTAuMzY4IDEwLjM2OHEuMzI0LjMyNC4zMjQuODI4em01MS44NCAxNy4yOHY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNjIuMjA4cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg2Mi4yMDhxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptMC0xMy44MjR2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTM5LjE2OHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi45MTJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMzkuMTY4cS40NjggMCAuODEuMzQydC4zNDIuODF6bTAtMTMuODI0djYuOTEycTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0zOS4xNjhxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTYuOTEycTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDM5LjE2OHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0wLTEzLjgyNHY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNjIuMjA4cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg2Mi4yMDhxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXpcIixcIlZJREVPX0NBTUVSQVwiOlwiTTY0LjUxMi01MS43Njd2MzkuMTY4cTAgMS41MTItMS40MDQgMi4xMjQtLjQ2OC4xOC0uOS4xOC0uOTcyIDAtMS42Mi0uNjg0bC0xNC41MDgtMTQuNTA4djUuOTc2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0yNS4zNDRxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0yNS4zNDRxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgyNS4zNDRxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnY1Ljk0bDE0LjUwOC0xNC40NzJxLjY0OC0uNjg0IDEuNjItLjY4NC40MzIgMCAuOS4xOCAxLjQwNC42MTIgMS40MDQgMi4xMjR6XCIsXCJQSUNUVVJFX09cIjpcIk0yMy4wNC00My43MDNxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptMzYuODY0IDEzLjgyNHYxNi4xMjhoLTUwLjY4OHYtNi45MTJsMTEuNTItMTEuNTIgNS43NiA1Ljc2IDE4LjQzMi0xOC40MzJ6bTMuNDU2LTI1LjM0NGgtNTcuNnEtLjQ2OCAwLS44MS4zNDJ0LS4zNDIuODF2NDMuNzc2cTAgLjQ2OC4zNDIuODF0LjgxLjM0Mmg1Ny42cS40NjggMCAuODEtLjM0MnQuMzQyLS44MXYtNDMuNzc2cTAtLjQ2OC0uMzQyLS44MXQtLjgxLS4zNDJ6bTUuNzYgMS4xNTJ2NDMuNzc2cTAgMi4zNzYtMS42OTIgNC4wNjh0LTQuMDY4IDEuNjkyaC01Ny42cS0yLjM3NiAwLTQuMDY4LTEuNjkydC0xLjY5Mi00LjA2OHYtNDMuNzc2cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoNTcuNnEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4elwiLFwiUEVOQ0lMXCI6XCJNMTMuMDY4LTkuMTQzbDMuMjc2LTMuMjc2LTguNDYtOC40Ni0zLjI3NiAzLjI3NnYzLjg1Mmg0LjYwOHY0LjYwOGgzLjg1MnptMTguODI4LTMzLjQwOHEwLS43OTItLjc5Mi0uNzkyLS4zNiAwLS42MTIuMjUybC0xOS41MTIgMTkuNTEycS0uMjUyLjI1Mi0uMjUyLjYxMiAwIC43OTIuNzkyLjc5Mi4zNiAwIC42MTItLjI1MmwxOS41MTItMTkuNTEycS4yNTItLjI1Mi4yNTItLjYxMnptLTEuOTQ0LTYuOTEybDE0Ljk3NiAxNC45NzYtMjkuOTUyIDI5Ljk1MmgtMTQuOTc2di0xNC45NzZ6bTI0LjU4OCAzLjQ1NnEwIDEuOTA4LTEuMzMyIDMuMjRsLTUuOTc2IDUuOTc2LTE0Ljk3Ni0xNC45NzYgNS45NzYtNS45NHExLjI5Ni0xLjM2OCAzLjI0LTEuMzY4IDEuOTA4IDAgMy4yNzYgMS4zNjhsOC40NiA4LjQyNHExLjMzMiAxLjQwNCAxLjMzMiAzLjI3NnpcIixcIk1BUF9NQVJLRVJcIjpcIk0yNy42NDgtNDEuMzk5cTAtMy44MTYtMi43LTYuNTE2dC02LjUxNi0yLjctNi41MTYgMi43LTIuNyA2LjUxNiAyLjcgNi41MTYgNi41MTYgMi43IDYuNTE2LTIuNyAyLjctNi41MTZ6bTkuMjE2IDBxMCAzLjkyNC0xLjE4OCA2LjQ0NGwtMTMuMTA0IDI3Ljg2NHEtLjU3NiAxLjE4OC0xLjcxIDEuODcydC0yLjQzLjY4NC0yLjQzLS42ODQtMS42NzQtMS44NzJsLTEzLjE0LTI3Ljg2NHEtMS4xODgtMi41Mi0xLjE4OC02LjQ0NCAwLTcuNjMyIDUuNC0xMy4wMzJ0MTMuMDMyLTUuNCAxMy4wMzIgNS40IDUuNCAxMy4wMzJ6XCIsXCJBREpVU1RcIjpcIk0yNy42NDgtMTIuNTk5di0zOS4xNjhxLTUuMzI4IDAtOS44MjggMi42Mjh0LTcuMTI4IDcuMTI4LTIuNjI4IDkuODI4IDIuNjI4IDkuODI4IDcuMTI4IDcuMTI4IDkuODI4IDIuNjI4em0yNy42NDgtMTkuNTg0cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIlRJTlRcIjpcIk0xOC40MzItMjIuOTY3cTAtMS4yOTYtLjcyLTIuNDg0LS4wMzYtLjAzNi0uNTU4LS44MXQtLjkxOC0xLjM2OC0uOS0xLjU4NC0uNzU2LTEuODE4cS0uMTQ0LS41NzYtLjc1Ni0uNTc2dC0uNzU2LjU3NnEtLjI1Mi44MjgtLjc1NiAxLjgxOHQtLjkgMS41ODQtLjkxOCAxLjM2OC0uNTU4LjgxcS0uNzIgMS4xODgtLjcyIDIuNDg0IDAgMS45MDggMS4zNSAzLjI1OHQzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptMTguNDMyLTQuNjA4cTAgNy42MzItNS40IDEzLjAzMnQtMTMuMDMyIDUuNC0xMy4wMzItNS40LTUuNC0xMy4wMzJxMC01LjIyIDIuOTE2LTkuOS4yMTYtLjMyNCAyLjI1LTMuMjU4dDMuNjM2LTUuNDM2IDMuNTgyLTYuNDA4IDIuOTg4LTcuMjU0cS4zMjQtMS4wOCAxLjIyNC0xLjY5MnQxLjgzNi0uNjEyIDEuODU0LjYxMiAxLjIwNiAxLjY5MnExLjAwOCAzLjM0OCAyLjk4OCA3LjI1NHQzLjU4MiA2LjQwOCAzLjYzNiA1LjQzNiAyLjI1IDMuMjU4cTIuOTE2IDQuNTcyIDIuOTE2IDkuOXpcIixcIlBFTkNJTF9TUVVBUkVfT1wiOlwiTTMxLjk2OC0yMS44MTVsNC4xNzYtNC4xNzYtNS40NzItNS40NzItNC4xNzYgNC4xNzZ2Mi4wMTZoMy40NTZ2My40NTZoMi4wMTZ6bTE1Ljg0LTI1LjkycS0uNTc2LS41NzYtMS4xODguMDM2bC0xMi42IDEyLjZxLS42MTIuNjEyLS4wMzYgMS4xODh0MS4xODgtLjAzNmwxMi42LTEyLjZxLjYxMi0uNjEyLjAzNi0xLjE4OHptMi44OCAyMS4zODR2Ni44NHEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMjkuOTUycS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMjkuOTUycTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMjkuOTUycTIuMjY4IDAgNC4yMTIuOS41NC4yNTIuNjQ4LjgyOC4xMDguNjEyLS4zMjQgMS4wNDRsLTEuNzY0IDEuNzY0cS0uNTA0LjUwNC0xLjE1Mi4yODgtLjgyOC0uMjE2LTEuNjItLjIxNmgtMjkuOTUycS0yLjM3NiAwLTQuMDY4IDEuNjkydC0xLjY5MiA0LjA2OHYyOS45NTJxMCAyLjM3NiAxLjY5MiA0LjA2OHQ0LjA2OCAxLjY5MmgyOS45NTJxMi4zNzYgMCA0LjA2OC0xLjY5MnQxLjY5Mi00LjA2OHYtNC41MzZxMC0uNDY4LjMyNC0uNzkybDIuMzA0LTIuMzA0cS41NC0uNTQgMS4yNi0uMjUydC43MiAxLjA0NHptLTMuNDU2LTI2LjU2OGwxMC4zNjggMTAuMzY4LTI0LjE5MiAyNC4xOTJoLTEwLjM2OHYtMTAuMzY4em0xNS45ODQgNC43NTJsLTMuMzEyIDMuMzEyLTEwLjM2OC0xMC4zNjggMy4zMTItMy4zMTJxMS4wMDgtMS4wMDggMi40NDgtMS4wMDh0Mi40NDggMS4wMDhsNS40NzIgNS40NzJxMS4wMDggMS4wMDggMS4wMDggMi40NDh0LTEuMDA4IDIuNDQ4elwiLFwiU0hBUkVfU1FVQVJFX09cIjpcIk01MC42ODgtMjguODM1djkuMzI0cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0yOS45NTJxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0yOS45NTJxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0Mmg5LjE4cS40NjggMCAuODEuMzQydC4zNDIuODFxMCAuOTcyLS45MzYgMS4xNTItMi43NzIuOTM2LTQuNzg4IDIuMTYtLjM2LjE0NC0uNTc2LjE0NGgtNC4wMzJxLTIuMzc2IDAtNC4wNjggMS42OTJ0LTEuNjkyIDQuMDY4djI5Ljk1MnEwIDIuMzc2IDEuNjkyIDQuMDY4dDQuMDY4IDEuNjkyaDI5Ljk1MnEyLjM3NiAwIDQuMDY4LTEuNjkydDEuNjkyLTQuMDY4di03LjcwNHEwLS42ODQuNjQ4LTEuMDQ0IDEuMDA4LS40NjggMS45NDQtMS4zMzIuNTc2LS41NzYgMS4yNi0uMjg4Ljc1Ni4zMjQuNzU2IDEuMDQ0em04LjUzMi0xNy44NTZsLTEzLjgyNCAxMy44MjRxLS42NDguNjg0LTEuNjIuNjg0LS40MzIgMC0uOS0uMTgtMS40MDQtLjYxMi0xLjQwNC0yLjEyNHYtNi45MTJoLTUuNzZxLTExLjYyOCAwLTE1Ljc2OCA0LjcxNi00LjI4NCA0LjkzMi0yLjY2NCAxNy4wMjguMTA4LjgyOC0uNzIgMS4yMjQtLjI4OC4wNzItLjQzMi4wNzItLjU3NiAwLS45MzYtLjQ2OC0uMzYtLjUwNC0uNzU2LTEuMTE2dC0xLjQyMi0yLjQ2Ni0xLjc4Mi0zLjU4Mi0xLjM4Ni00LjEwNC0uNjMtNC4zOTJxMC0xLjc2NC4xMjYtMy4yNzZ0LjUwNC0zLjI0IDEuMDA4LTMuMTY4IDEuNjkyLTIuOTM0IDIuNDY2LTIuNjY0IDMuNDAyLTIuMjE0IDQuNDgyLTEuNzQ2IDUuNzQyLTEuMDk4IDcuMDc0LS4zOTZoNS43NnYtNi45MTJxMC0xLjUxMiAxLjQwNC0yLjEyNC40NjgtLjE4LjktLjE4LjkzNiAwIDEuNjIuNjg0bDEzLjgyNCAxMy44MjRxLjY4NC42ODQuNjg0IDEuNjJ0LS42ODQgMS42MnpcIixcIkNIRUNLX1NRVUFSRV9PXCI6XCJNNTAuNjg4LTMwLjk1OXYxMS40NDhxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTI5Ljk1MnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTI5Ljk1MnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDI5Ljk1MnEyLjI2OCAwIDQuMjEyLjkuNTQuMjUyLjY0OC44MjguMTA4LjYxMi0uMzI0IDEuMDQ0bC0xLjc2NCAxLjc2NHEtLjM2LjM2LS44MjguMzYtLjEwOCAwLS4zMjQtLjA3Mi0uODI4LS4yMTYtMS42Mi0uMjE2aC0yOS45NTJxLTIuMzc2IDAtNC4wNjggMS42OTJ0LTEuNjkyIDQuMDY4djI5Ljk1MnEwIDIuMzc2IDEuNjkyIDQuMDY4dDQuMDY4IDEuNjkyaDI5Ljk1MnEyLjM3NiAwIDQuMDY4LTEuNjkydDEuNjkyLTQuMDY4di05LjE0NHEwLS40NjguMzI0LS43OTJsMi4zMDQtMi4zMDRxLjM2LS4zNi44MjgtLjM2LjIxNiAwIC40MzIuMTA4LjcyLjI4OC43MiAxLjA0NHptOC4zMTYtMTcuNjA0bC0yOS4zMDQgMjkuMzA0cS0uODY0Ljg2NC0yLjA1Mi44NjR0LTIuMDUyLS44NjRsLTE1LjQ4LTE1LjQ4cS0uODY0LS44NjQtLjg2NC0yLjA1MnQuODY0LTIuMDUybDMuOTYtMy45NnEuODY0LS44NjQgMi4wNTItLjg2NHQyLjA1Mi44NjRsOS40NjggOS40NjggMjMuMjkyLTIzLjI5MnEuODY0LS44NjQgMi4wNTItLjg2NHQyLjA1Mi44NjRsMy45NiAzLjk2cS44NjQuODY0Ljg2NCAyLjA1MnQtLjg2NCAyLjA1MnpcIixcIkFSUk9XU1wiOlwiTTY0LjUxMi0zMi4xODNxMCAuOTM2LS42ODQgMS42MmwtOS4yMTYgOS4yMTZxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODQtLjY4NC0xLjYydi00LjYwOGgtMTMuODI0djEzLjgyNGg0LjYwOHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyLS42ODQgMS42MmwtOS4yMTYgOS4yMTZxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTkuMjE2LTkuMjE2cS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MiAxLjYyLS42ODRoNC42MDh2LTEzLjgyNGgtMTMuODI0djQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0LTEuNjItLjY4NGwtOS4yMTYtOS4yMTZxLS42ODQtLjY4NC0uNjg0LTEuNjJ0LjY4NC0xLjYybDkuMjE2LTkuMjE2cS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODQuNjg0IDEuNjJ2NC42MDhoMTMuODI0di0xMy44MjRoLTQuNjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjIuNjg0LTEuNjJsOS4yMTYtOS4yMTZxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NGw5LjIxNiA5LjIxNnEuNjg0LjY4NC42ODQgMS42MnQtLjY4NCAxLjYyLTEuNjIuNjg0aC00LjYwOHYxMy44MjRoMTMuODI0di00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0IDEuNjIuNjg0bDkuMjE2IDkuMjE2cS42ODQuNjg0LjY4NCAxLjYyelwiLFwiU1RFUF9CQUNLV0FSRFwiOlwiTTM1LjI0NC01OS4zNjNxLjY4NC0uNjg0IDEuMTUyLS40Njh0LjQ2OCAxLjE1MnY1Mi45OTJxMCAuOTM2LS40NjggMS4xNTJ0LTEuMTUyLS40NjhsLTI1LjU2LTI1LjU2cS0uMzI0LS4zMjQtLjQ2OC0uNjg0djI0LjQwOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNC42MDhxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNTAuNjg4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNC42MDhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnYyNC40MDhxLjE0NC0uMzk2LjQ2OC0uNjg0elwiLFwiRkFTVF9CQUNLV0FSRFwiOlwiTTYyLjg5Mi01OS4zNjNxLjY4NC0uNjg0IDEuMTUyLS40Njh0LjQ2OCAxLjE1MnY1Mi45OTJxMCAuOTM2LS40NjggMS4xNTJ0LTEuMTUyLS40NjhsLTI1LjU2LTI1LjU2cS0uMzI0LS4zMjQtLjQ2OC0uNjg0djI1LjU2cTAgLjkzNi0uNDY4IDEuMTUydC0xLjE1Mi0uNDY4bC0yNS41Ni0yNS41NnEtLjMyNC0uMzI0LS40NjgtLjY4NHYyNC40MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTQuNjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTUwLjY4OHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQuNjA4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MjQuNDA4cS4xNDQtLjM5Ni40NjgtLjY4NGwyNS41Ni0yNS41NnEuNjg0LS42ODQgMS4xNTItLjQ2OHQuNDY4IDEuMTUydjI1LjU2cS4xNDQtLjM5Ni40NjgtLjY4NHpcIixcIkJBQ0tXQVJEXCI6XCJNNTguMjg0LTU5LjM2M3EuNjg0LS42ODQgMS4xNTItLjQ2OHQuNDY4IDEuMTUydjUyLjk5MnEwIC45MzYtLjQ2OCAxLjE1MnQtMS4xNTItLjQ2OGwtMjUuNTYtMjUuNTZxLS4yODgtLjMyNC0uNDY4LS42ODR2MjUuNTZxMCAuOTM2LS40NjggMS4xNTJ0LTEuMTUyLS40NjhsLTI1LjU2LTI1LjU2cS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MmwyNS41Ni0yNS41NnEuNjg0LS42ODQgMS4xNTItLjQ2OHQuNDY4IDEuMTUydjI1LjU2cS4xOC0uMzk2LjQ2OC0uNjg0elwiLFwiUExBWVwiOlwiTTQ5LjgyNC0zMS4wNjdsLTQ3LjgwOCAyNi41NjhxLS44MjguNDY4LTEuNDIyLjEwOHQtLjU5NC0xLjI5NnYtNTIuOTkycTAtLjkzNi41OTQtMS4yOTZ0MS40MjIuMTA4bDQ3LjgwOCAyNi41NjhxLjgyOC40NjguODI4IDEuMTE2dC0uODI4IDEuMTE2elwiLFwiUEFVU0VcIjpcIk01NS4yOTYtNTcuNTI3djUwLjY4OHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMTguNDMycS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTUwLjY4OHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDE4LjQzMnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0tMzIuMjU2IDB2NTAuNjg4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0xOC40MzJxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNTAuNjg4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoMTguNDMycS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6XCIsXCJTVE9QXCI6XCJNNTUuMjk2LTU3LjUyN3Y1MC42ODhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTUwLjY4OHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi01MC42ODhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg1MC42ODhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIkZPUldBUkRcIjpcIk0xLjYyLTUuMDAzcS0uNjg0LjY4NC0xLjE1Mi40Njh0LS40NjgtMS4xNTJ2LTUyLjk5MnEwLS45MzYuNDY4LTEuMTUydDEuMTUyLjQ2OGwyNS41NiAyNS41NnEuMjg4LjI4OC40NjguNjg0di0yNS41NnEwLS45MzYuNDY4LTEuMTUydDEuMTUyLjQ2OGwyNS41NiAyNS41NnEuNjg0LjY4NC42ODQgMS42MnQtLjY4NCAxLjYybC0yNS41NiAyNS41NnEtLjY4NC42ODQtMS4xNTIuNDY4dC0uNDY4LTEuMTUydi0yNS41NnEtLjE4LjM2LS40NjguNjg0elwiLFwiRkFTVF9GT1JXQVJEXCI6XCJNMS42Mi01LjAwM3EtLjY4NC42ODQtMS4xNTIuNDY4dC0uNDY4LTEuMTUydi01Mi45OTJxMC0uOTM2LjQ2OC0xLjE1MnQxLjE1Mi40NjhsMjUuNTYgMjUuNTZxLjI4OC4yODguNDY4LjY4NHYtMjUuNTZxMC0uOTM2LjQ2OC0xLjE1MnQxLjE1Mi40NjhsMjUuNTYgMjUuNTZxLjI4OC4yODguNDY4LjY4NHYtMjQuNDA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNC42MDhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnY1MC42ODhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTQuNjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTI0LjQwOHEtLjE4LjM2LS40NjguNjg0bC0yNS41NiAyNS41NnEtLjY4NC42ODQtMS4xNTIuNDY4dC0uNDY4LTEuMTUydi0yNS41NnEtLjE4LjM2LS40NjguNjg0elwiLFwiU1RFUF9GT1JXQVJEXCI6XCJNMS42Mi01LjAwM3EtLjY4NC42ODQtMS4xNTIuNDY4dC0uNDY4LTEuMTUydi01Mi45OTJxMC0uOTM2LjQ2OC0xLjE1MnQxLjE1Mi40NjhsMjUuNTYgMjUuNTZxLjI4OC4yODguNDY4LjY4NHYtMjQuNDA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNC42MDhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnY1MC42ODhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTQuNjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTI0LjQwOHEtLjE4LjM2LS40NjguNjg0elwiLFwiRUpFQ1RcIjpcIk0uNTA0LTI5LjE5NWwyNS41Ni0yNS41NnEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDI1LjU2IDI1LjU2cS42ODQuNjg0LjQ2OCAxLjE1MnQtMS4xNTIuNDY4aC01Mi45OTJxLS45MzYgMC0xLjE1Mi0uNDY4dC40NjgtMS4xNTJ6bTUyLjUyNCAyMC4wNTJoLTUwLjY4OHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi05LjIxNnEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDUwLjY4OHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjkuMjE2cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0elwiLFwiQ0hFVlJPTl9MRUZUXCI6XCJNNDIuMTU2LTUzLjYwM2wtMTkuMTE2IDE5LjExNiAxOS4xMTYgMTkuMTE2cS42ODQuNjg0LjY4NCAxLjYydC0uNjg0IDEuNjJsLTUuOTc2IDUuOTc2cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC0yNi43MTItMjYuNzEycS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MmwyNi43MTItMjYuNzEycS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODRsNS45NzYgNS45NzZxLjY4NC42ODQuNjg0IDEuNjJ0LS42ODQgMS42MnpcIixcIkNIRVZST05fUklHSFRcIjpcIk0zOS44NTItMzIuODY3bC0yNi43MTIgMjYuNzEycS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC01Ljk3Ni01Ljk3NnEtLjY4NC0uNjg0LS42ODQtMS42MnQuNjg0LTEuNjJsMTkuMTE2LTE5LjExNi0xOS4xMTYtMTkuMTE2cS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42Mmw1Ljk3Ni01Ljk3NnEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDI2LjcxMiAyNi43MTJxLjY4NC42ODQuNjg0IDEuNjJ0LS42ODQgMS42MnpcIixcIlBMVVNfQ0lSQ0xFXCI6XCJNNDMuNzc2LTI5Ljg3OXYtNC42MDhxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC05LjIxNnYtOS4yMTZxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC00LjYwOHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2OS4yMTZoLTkuMjE2cS0uOTM2IDAtMS42Mi42ODR0LS42ODQgMS42MnY0LjYwOHEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRoOS4yMTZ2OS4yMTZxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDQuNjA4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYydi05LjIxNmg5LjIxNnEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptMTEuNTItMi4zMDRxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiTUlOVVNfQ0lSQ0xFXCI6XCJNNDMuNzc2LTI5Ljg3OXYtNC42MDhxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC0yNy42NDhxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYydjQuNjA4cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NGgyNy42NDhxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ6bTExLjUyLTIuMzA0cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIlRJTUVTX0NJUkNMRVwiOlwiTTQxLjM2NC0yNC4wNDdxMC0uOTM2LS42ODQtMS42MmwtNi41MTYtNi41MTYgNi41MTYtNi41MTZxLjY4NC0uNjg0LjY4NC0xLjYyIDAtLjk3Mi0uNjg0LTEuNjU2bC0zLjI0LTMuMjRxLS42ODQtLjY4NC0xLjY1Ni0uNjg0LS45MzYgMC0xLjYyLjY4NGwtNi41MTYgNi41MTYtNi41MTYtNi41MTZxLS42ODQtLjY4NC0xLjYyLS42ODQtLjk3MiAwLTEuNjU2LjY4NGwtMy4yNCAzLjI0cS0uNjg0LjY4NC0uNjg0IDEuNjU2IDAgLjkzNi42ODQgMS42Mmw2LjUxNiA2LjUxNi02LjUxNiA2LjUxNnEtLjY4NC42ODQtLjY4NCAxLjYyIDAgLjk3Mi42ODQgMS42NTZsMy4yNCAzLjI0cS42ODQuNjg0IDEuNjU2LjY4NC45MzYgMCAxLjYyLS42ODRsNi41MTYtNi41MTYgNi41MTYgNi41MTZxLjY4NC42ODQgMS42Mi42ODQuOTcyIDAgMS42NTYtLjY4NGwzLjI0LTMuMjRxLjY4NC0uNjg0LjY4NC0xLjY1NnptMTMuOTMyLTguMTM2cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkNIRUNLX0NJUkNMRVwiOlwiTTQ2LjIyNC0zOC4wMTVxMC0xLjAwOC0uNjQ4LTEuNjU2bC0zLjI3Ni0zLjI0cS0uNjg0LS42ODQtMS42Mi0uNjg0dC0xLjYyLjY4NGwtMTQuNjg4IDE0LjY1Mi04LjEzNi04LjEzNnEtLjY4NC0uNjg0LTEuNjItLjY4NHQtMS42Mi42ODRsLTMuMjc2IDMuMjRxLS42NDguNjQ4LS42NDggMS42NTYgMCAuOTcyLjY0OCAxLjYybDEzLjAzMiAxMy4wMzJxLjY4NC42ODQgMS42Mi42ODQuOTcyIDAgMS42NTYtLjY4NGwxOS41NDgtMTkuNTQ4cS42NDgtLjY0OC42NDgtMS42MnptOS4wNzIgNS44MzJxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiUVVFU1RJT05fQ0lSQ0xFXCI6XCJNMzIuMjU2LTE0LjkwM3YtNi45MTJxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC02LjkxMnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY2LjkxMnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg2LjkxMnEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptOS4yMTYtMjQuMTkycTAtMy4xNjgtMS45OTgtNS44Njh0LTQuOTg2LTQuMTc2LTYuMTItMS40NzZxLTguNzQ4IDAtMTMuMzU2IDcuNjY4LS41NC44NjQuMjg4IDEuNTEybDQuNzUyIDMuNnEuMjUyLjIxNi42ODQuMjE2LjU3NiAwIC45LS40MzIgMS45MDgtMi40NDggMy4wOTYtMy4zMTIgMS4yMjQtLjg2NCAzLjA5Ni0uODY0IDEuNzI4IDAgMy4wNzguOTM2dDEuMzUgMi4xMjRxMCAxLjM2OC0uNzIgMi4xOTZ0LTIuNDQ4IDEuNjJxLTIuMjY4IDEuMDA4LTQuMTU4IDMuMTE0dC0xLjg5IDQuNTE4djEuMjk2cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDYuOTEycS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4cTAtLjY4NC43NzQtMS43ODJ0MS45NjItMS43ODJxMS4xNTItLjY0OCAxLjc2NC0xLjAyNnQxLjY1Ni0xLjI2IDEuNjAyLTEuNzI4IDEuMDA4LTIuMTc4LjQ1LTIuOTE2em0xMy44MjQgNi45MTJxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiSU5GT19DSVJDTEVcIjpcIk0zNi44NjQtMTQuOTAzdi01Ljc2cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMy40NTZ2LTE4LjQzMnEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTExLjUycS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djUuNzZxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMy40NTZ2MTEuNTJoLTMuNDU2cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djUuNzZxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMTYuMTI4cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0tNC42MDgtMzIuMjU2di01Ljc2cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtNi45MTJxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2NS43NnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg2LjkxMnEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMjMuMDQgMTQuOTc2cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkNST1NTSEFJUlNcIjpcIk00My4wOTItMjcuNTc1aC0zLjkyNHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDMuOTI0cS0xLjE1Mi0zLjg4OC00LjA1LTYuNzg2dC02Ljc4Ni00LjA1djMuOTI0cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC00LjYwOHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0zLjkyNHEtMy44ODggMS4xNTItNi43ODYgNC4wNXQtNC4wNSA2Ljc4NmgzLjkyNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0zLjkyNHExLjE1MiAzLjg4OCA0LjA1IDYuNzg2dDYuNzg2IDQuMDV2LTMuOTI0cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNC42MDhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnYzLjkyNHEzLjg4OC0xLjE1MiA2Ljc4Ni00LjA1dDQuMDUtNi43ODZ6bTEyLjIwNC02LjkxMnY0LjYwOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNS4xNDhxLTEuMzMyIDUuNzk2LTUuNTYyIDEwLjAyNnQtMTAuMDI2IDUuNTYydjUuMTQ4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC00LjYwOHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi01LjE0OHEtNS43OTYtMS4zMzItMTAuMDI2LTUuNTYydC01LjU2Mi0xMC4wMjZoLTUuMTQ4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNS4xNDhxMS4zMzItNS43OTYgNS41NjItMTAuMDI2dDEwLjAyNi01LjU2MnYtNS4xNDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg0LjYwOHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjUuMTQ4cTUuNzk2IDEuMzMyIDEwLjAyNiA1LjU2MnQ1LjU2MiAxMC4wMjZoNS4xNDhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIlRJTUVTX0NJUkNMRV9PXCI6XCJNMzkuNDkyLTI1LjU5NWwtNS4yNTYgNS4yNTZxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtNC45MzItNC45MzItNC45MzIgNC45MzJxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtNS4yNTYtNS4yNTZxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsNC45MzItNC45MzItNC45MzItNC45MzJxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsNS4yNTYtNS4yNTZxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsNC45MzIgNC45MzIgNC45MzItNC45MzJxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsNS4yNTYgNS4yNTZxLjM2LjM2LjM2LjgyOHQtLjM2LjgyOGwtNC45MzIgNC45MzIgNC45MzIgNC45MzJxLjM2LjM2LjM2LjgyOHQtLjM2LjgyOHptNy43NC02LjU4OHEwLTUuMzI4LTIuNjI4LTkuODI4dC03LjEyOC03LjEyOC05LjgyOC0yLjYyOC05LjgyOCAyLjYyOC03LjEyOCA3LjEyOC0yLjYyOCA5LjgyOCAyLjYyOCA5LjgyOCA3LjEyOCA3LjEyOCA5LjgyOCAyLjYyOCA5LjgyOC0yLjYyOCA3LjEyOC03LjEyOCAyLjYyOC05LjgyOHptOC4wNjQgMHEwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJDSEVDS19DSVJDTEVfT1wiOlwiTTQyLjE1Ni0zNS4xNzFsLTE1LjE5MiAxNS4xOTJxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTEwLjU4NC0xMC41ODRxLS42ODQtLjY4NC0uNjg0LTEuNjJ0LjY4NC0xLjYybDMuNjcyLTMuNjcycS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODRsNS4yOTIgNS4yOTIgOS45LTkuOXEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDMuNjcyIDMuNjcycS42ODQuNjg0LjY4NCAxLjYydC0uNjg0IDEuNjJ6bTUuMDc2IDIuOTg4cTAtNS4zMjgtMi42MjgtOS44Mjh0LTcuMTI4LTcuMTI4LTkuODI4LTIuNjI4LTkuODI4IDIuNjI4LTcuMTI4IDcuMTI4LTIuNjI4IDkuODI4IDIuNjI4IDkuODI4IDcuMTI4IDcuMTI4IDkuODI4IDIuNjI4IDkuODI4LTIuNjI4IDcuMTI4LTcuMTI4IDIuNjI4LTkuODI4em04LjA2NCAwcTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkJBTlwiOlwiTTQ3LjIzMi0zMi4yOTFxMC01Ljc5Ni0zLjEzMi0xMC42MmwtMjcuMTQ0IDI3LjEwOHE0LjkzMiAzLjIwNCAxMC42OTIgMy4yMDQgMy45OTYgMCA3LjYxNC0xLjU2NnQ2LjI0Ni00LjE5NCA0LjE3Ni02LjI4MiAxLjU0OC03LjY1em0tMzUuOTY0IDEwLjc2NGwyNy4xOC0yNy4xNDRxLTQuODYtMy4yNzYtMTAuOC0zLjI3Ni01LjMyOCAwLTkuODI4IDIuNjI4dC03LjEyOCA3LjE2NC0yLjYyOCA5Ljg2NHEwIDUuODMyIDMuMjA0IDEwLjc2NHptNDQuMDI4LTEwLjc2NHEwIDUuNjUyLTIuMTk2IDEwLjh0LTUuODg2IDguODU2LTguODIgNS45MDQtMTAuNzQ2IDIuMTk2LTEwLjc0Ni0yLjE5Ni04LjgyLTUuOTA0LTUuODg2LTguODU2LTIuMTk2LTEwLjggMi4xOTYtMTAuNzgyIDUuODg2LTguODM4IDguODItNS45MDQgMTAuNzQ2LTIuMTk2IDEwLjc0NiAyLjE5NiA4LjgyIDUuOTA0IDUuODg2IDguODM4IDIuMTk2IDEwLjc4MnpcIixcIkFSUk9XX0xFRlRcIjpcIk01NS4yOTYtMzIuMTgzdjQuNjA4cTAgMS45MDgtMS4xNyAzLjI1OHQtMy4wNDIgMS4zNWgtMjUuMzQ0bDEwLjU0OCAxMC41ODRxMS4zNjggMS4yOTYgMS4zNjggMy4yNHQtMS4zNjggMy4yNGwtMi43IDIuNzM2cS0xLjMzMiAxLjMzMi0zLjI0IDEuMzMyLTEuODcyIDAtMy4yNzYtMS4zMzJsLTIzLjQzNi0yMy40NzJxLTEuMzMyLTEuMzMyLTEuMzMyLTMuMjQgMC0xLjg3MiAxLjMzMi0zLjI3NmwyMy40MzYtMjMuNHExLjM2OC0xLjM2OCAzLjI3Ni0xLjM2OCAxLjg3MiAwIDMuMjQgMS4zNjhsMi43IDIuNjY0cTEuMzY4IDEuMzY4IDEuMzY4IDMuMjc2dC0xLjM2OCAzLjI3NmwtMTAuNTQ4IDEwLjU0OGgyNS4zNDRxMS44NzIgMCAzLjA0MiAxLjM1dDEuMTcgMy4yNTh6XCIsXCJBUlJPV19SSUdIVFwiOlwiTTUyLjk5Mi0yOS44NzlxMCAxLjk0NC0xLjMzMiAzLjI3NmwtMjMuNDM2IDIzLjQzNnEtMS40MDQgMS4zMzItMy4yNzYgMS4zMzItMS44MzYgMC0zLjI0LTEuMzMybC0yLjctMi43cS0xLjM2OC0xLjM2OC0xLjM2OC0zLjI3NnQxLjM2OC0zLjI3NmwxMC41NDgtMTAuNTQ4aC0yNS4zNDRxLTEuODcyIDAtMy4wNDItMS4zNXQtMS4xNy0zLjI1OHYtNC42MDhxMC0xLjkwOCAxLjE3LTMuMjU4dDMuMDQyLTEuMzVoMjUuMzQ0bC0xMC41NDgtMTAuNTg0cS0xLjM2OC0xLjI5Ni0xLjM2OC0zLjI0dDEuMzY4LTMuMjRsMi43LTIuN3ExLjM2OC0xLjM2OCAzLjI0LTEuMzY4IDEuOTA4IDAgMy4yNzYgMS4zNjhsMjMuNDM2IDIzLjQzNnExLjMzMiAxLjI2IDEuMzMyIDMuMjR6XCIsXCJBUlJPV19VUFwiOlwiTTU3Ljk5Ni0yOS40ODNxMCAxLjgzNi0xLjMzMiAzLjI0bC0yLjcgMi43cS0xLjM2OCAxLjM2OC0zLjI3NiAxLjM2OC0xLjk0NCAwLTMuMjQtMS4zNjhsLTEwLjU4NC0xMC41NDh2MjUuMzQ0cTAgMS44NzItMS4zNSAzLjA0MnQtMy4yNTggMS4xN2gtNC42MDhxLTEuOTA4IDAtMy4yNTgtMS4xN3QtMS4zNS0zLjA0MnYtMjUuMzQ0bC0xMC41ODQgMTAuNTQ4cS0xLjI5NiAxLjM2OC0zLjI0IDEuMzY4dC0zLjI0LTEuMzY4bC0yLjctMi43cS0xLjM2OC0xLjM2OC0xLjM2OC0zLjI0IDAtMS45MDggMS4zNjgtMy4yNzZsMjMuNDM2LTIzLjQzNnExLjI2LTEuMzMyIDMuMjQtMS4zMzIgMS45NDQgMCAzLjI3NiAxLjMzMmwyMy40MzYgMjMuNDM2cTEuMzMyIDEuNDA0IDEuMzMyIDMuMjc2elwiLFwiQVJST1dfRE9XTlwiOlwiTTU3Ljk5Ni0zNC40ODdxMCAxLjkwOC0xLjMzMiAzLjI0bC0yMy40MzYgMjMuNDcycS0xLjQwNCAxLjMzMi0zLjI3NiAxLjMzMi0xLjkwOCAwLTMuMjQtMS4zMzJsLTIzLjQzNi0yMy40NzJxLTEuMzY4LTEuMjk2LTEuMzY4LTMuMjQgMC0xLjkwOCAxLjM2OC0zLjI3NmwyLjY2NC0yLjdxMS40MDQtMS4zMzIgMy4yNzYtMS4zMzIgMS45MDggMCAzLjI0IDEuMzMybDEwLjU4NCAxMC41ODR2LTI1LjM0NHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg0LjYwOHExLjg3MiAwIDMuMjQgMS4zNjh0MS4zNjggMy4yNHYyNS4zNDRsMTAuNTg0LTEwLjU4NHExLjMzMi0xLjMzMiAzLjI0LTEuMzMyIDEuODcyIDAgMy4yNzYgMS4zMzJsMi43IDIuN3ExLjMzMiAxLjQwNCAxLjMzMiAzLjI3NnpcIixcIlNIQVJFXCI6XCJNNjQuNTEyLTQxLjM5OXEwIC45MzYtLjY4NCAxLjYybC0xOC40MzIgMTguNDMycS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0LS42ODQtMS42MnYtOS4yMTZoLTguMDY0cS0zLjUyOCAwLTYuMzE4LjIxNnQtNS41NDQuNzc0LTQuNzg4IDEuNTMtMy43OTggMi41MDItMi44OCAzLjYzNi0xLjc0NiA0Ljk4Ni0uNjMgNi41MTZxMCAxLjk4LjE4IDQuNDI4IDAgLjIxNi4wOS44NDZ0LjA5Ljk1NHEwIC41NC0uMzA2Ljl0LS44NDYuMzZxLS41NzYgMC0xLjAwOC0uNjEyLS4yNTItLjMyNC0uNDY4LS43OTJ0LS40ODYtMS4wOC0uMzc4LS44NjRxLTQuNTcyLTEwLjI2LTQuNTcyLTE2LjIzNiAwLTcuMTY0IDEuOTA4LTExLjk4OCA1LjgzMi0xNC41MDggMzEuNS0xNC41MDhoOC4wNjR2LTkuMjE2cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODQgMS42Mi42ODRsMTguNDMyIDE4LjQzMnEuNjg0LjY4NC42ODQgMS42MnpcIixcIkVYUEFORFwiOlwiTTI3LjE4LTI2LjQyM3EwIC40NjgtLjM2LjgyOGwtMTEuOTUyIDExLjk1MiA1LjE4NCA1LjE4NHEuNjg0LjY4NC42ODQgMS42MnQtLjY4NCAxLjYyLTEuNjIuNjg0aC0xNi4xMjhxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtMTYuMTI4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODQgMS42Mi42ODRsNS4xODQgNS4xODQgMTEuOTUyLTExLjk1MnEuMzYtLjM2LjgyOC0uMzZ0LjgyOC4zNmw0LjEwNCA0LjEwNHEuMzYuMzYuMzYuODI4em0yOC4xMTYtMzEuMTA0djE2LjEyOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NC0xLjYyLS42ODRsLTUuMTg0LTUuMTg0LTExLjk1MiAxMS45NTJxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtNC4xMDQtNC4xMDRxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsMTEuOTUyLTExLjk1Mi01LjE4NC01LjE4NHEtLjY4NC0uNjg0LS42ODQtMS42MnQuNjg0LTEuNjIgMS42Mi0uNjg0aDE2LjEyOHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiQ09NUFJFU1NcIjpcIk0yNy42NDgtMjkuODc5djE2LjEyOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NC0xLjYyLS42ODRsLTUuMTg0LTUuMTg0LTExLjk1MiAxMS45NTJxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtNC4xMDQtNC4xMDRxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsMTEuOTUyLTExLjk1Mi01LjE4NC01LjE4NHEtLjY4NC0uNjg0LS42ODQtMS42MnQuNjg0LTEuNjIgMS42Mi0uNjg0aDE2LjEyOHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0yNy4xOC0yNC4xOTJxMCAuNDY4LS4zNi44MjhsLTExLjk1MiAxMS45NTIgNS4xODQgNS4xODRxLjY4NC42ODQuNjg0IDEuNjJ0LS42ODQgMS42Mi0xLjYyLjY4NGgtMTYuMTI4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTE2LjEyOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0IDEuNjIuNjg0bDUuMTg0IDUuMTg0IDExLjk1Mi0xMS45NTJxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsNC4xMDQgNC4xMDRxLjM2LjM2LjM2LjgyOHpcIixcIlBMVVNcIjpcIk01MC42ODgtMzcuOTQzdjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTE0Ljk3NnYxNC45NzZxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtNi45MTJxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTE0Ljk3NmgtMTQuOTc2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMTQuOTc2di0xNC45NzZxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDYuOTEycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHYxNC45NzZoMTQuOTc2cTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHpcIixcIk1JTlVTXCI6XCJNNTAuNjg4LTM3Ljk0M3Y2LjkxMnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC00My43NzZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTYuOTEycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGg0My43NzZxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4elwiLFwiQVNURVJJU0tcIjpcIk01My4zNTItMjYuNjM5cTEuNjU2LjkzNiAyLjE0MiAyLjc5dC0uNDUgMy41MWwtMi4zMDQgMy45NnEtLjkzNiAxLjY1Ni0yLjc5IDIuMTQydC0zLjUxLS40NWwtOS41NzYtNS41MDh2MTEuMDUycTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OGgtNC42MDhxLTEuODcyIDAtMy4yNC0xLjM2OHQtMS4zNjgtMy4yNHYtMTEuMDUybC05LjU3NiA1LjUwOHEtMS42NTYuOTM2LTMuNTEuNDV0LTIuNzktMi4xNDJsLTIuMzA0LTMuOTZxLS45MzYtMS42NTYtLjQ1LTMuNTF0Mi4xNDItMi43OWw5LjU3Ni01LjU0NC05LjU3Ni01LjU0NHEtMS42NTYtLjkzNi0yLjE0Mi0yLjc5dC40NS0zLjUxbDIuMzA0LTMuOTZxLjkzNi0xLjY1NiAyLjc5LTIuMTQydDMuNTEuNDVsOS41NzYgNS41MDh2LTExLjA1MnEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg0LjYwOHExLjg3MiAwIDMuMjQgMS4zNjh0MS4zNjggMy4yNHYxMS4wNTJsOS41NzYtNS41MDhxMS42NTYtLjkzNiAzLjUxLS40NXQyLjc5IDIuMTQybDIuMzA0IDMuOTZxLjkzNiAxLjY1Ni40NSAzLjUxdC0yLjE0MiAyLjc5bC05LjU3NiA1LjU0NHpcIixcIkVYQ0xBTUFUSU9OX0NJUkNMRVwiOlwiTTI3LjY0OC01OS44MzFxNy41MjQgMCAxMy44NzggMy43MDh0MTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44NzgtMy43MDggMTMuODc4LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDh6bTQuNjA4IDQ0Ljg5MnYtNi44NHEwLS41MDQtLjMyNC0uODQ2dC0uNzkyLS4zNDJoLTYuOTEycS0uNDY4IDAtLjgyOC4zNnQtLjM2LjgyOHY2Ljg0cTAgLjQ2OC4zNi44Mjh0LjgyOC4zNmg2LjkxMnEuNDY4IDAgLjc5Mi0uMzQydC4zMjQtLjg0NnptLS4wNzItMTIuMzg0bC42NDgtMjIuMzU2cTAtLjQzMi0uMzYtLjY0OC0uMzYtLjI4OC0uODY0LS4yODhoLTcuOTJxLS41MDQgMC0uODY0LjI4OC0uMzYuMjE2LS4zNi42NDhsLjYxMiAyMi4zNTZxMCAuMzYuMzYuNjN0Ljg2NC4yN2g2LjY2cS41MDQgMCAuODQ2LS4yN3QuMzc4LS42M3pcIixcIkdJRlRcIjpcIk0zMy40MDgtMTUuNjIzdi0yNS43NzU5OTk5OTk5OTk5OTZoLTExLjUydjI1Ljc3NTk5OTk5OTk5OTk5NnEwIC45LjY0OCAxLjM4NnQxLjY1Ni40ODZoNi45MTJxMS4wMDggMCAxLjY1Ni0uNDg2dC42NDgtMS4zODZ6bS0xNi40MTYtMzAuMzg0aDcuMDJsLTQuNTM2LTUuNzk2cS0uOTM2LTEuMTE2LTIuNDg0LTEuMTE2LTEuNDQgMC0yLjQ0OCAxLjAwOHQtMS4wMDggMi40NDggMS4wMDggMi40NDggMi40NDggMS4wMDh6bTI0Ljc2OC0zLjQ1NnEwLTEuNDQtMS4wMDgtMi40NDh0LTIuNDQ4LTEuMDA4cS0xLjU0OCAwLTIuNDg0IDEuMTE2bC00LjUgNS43OTZoNi45ODRxMS40NCAwIDIuNDQ4LTEuMDA4dDEuMDA4LTIuNDQ4em0xMy41MzYgOS4yMTZ2MTEuNTJxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMy40NTZ2MTQuOTc2cTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTM5LjE2OHEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMTQuOTc2aC0zLjQ1NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0xMS41MnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDE1Ljg0cS0zLjM0OCAwLTUuNzA2LTIuMzU4dC0yLjM1OC01LjcwNiAyLjM1OC01LjcwNiA1LjcwNi0yLjM1OHEzLjg1MiAwIDYuMDQ4IDIuNzcybDQuNjA4IDUuOTQgNC42MDgtNS45NHEyLjE5Ni0yLjc3MiA2LjA0OC0yLjc3MiAzLjM0OCAwIDUuNzA2IDIuMzU4dDIuMzU4IDUuNzA2LTIuMzU4IDUuNzA2LTUuNzA2IDIuMzU4aDE1Ljg0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIkxFQUZcIjpcIk00Ni4wOC0zOS4wOTVxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0cS02LjE5MiAwLTExLjQ0OCAxLjc4MnQtOS4zNDIgNC44MjQtOC40NzggNy45MDJxLS42ODQuNzU2LS42ODQgMS42MiAwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRxLjg2NCAwIDEuNjItLjY4NC45NzItLjg2NCAyLjY2NC0yLjU1NnQyLjQxMi0yLjM3NnE0LjkzMi00LjQ2NCA5LjY2Ni02LjMzNnQxMS4yODYtMS44NzJxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ6bTE4LjQzMi03LjEyOHEwIDMuNDItLjcyIDYuOTQ4LTEuNjU2IDguMDY0LTYuNjQyIDEzLjc4OHQtMTIuODcgOS42NDhxLTcuNzA0IDMuODg4LTE1Ljc2OCAzLjg4OC01LjMyOCAwLTEwLjI5Ni0xLjY5Mi0uNTQtLjE4LTMuMTY4LTEuNTEydC0zLjQ1Ni0xLjMzMnEtLjU3NiAwLTEuNDIyIDEuMTUydC0xLjYyIDIuNTItMS44OSAyLjUyLTIuMTYgMS4xNTJxLTEuMDggMC0xLjgzNi0uMzk2dC0xLjExNi0uODY0LS45NzItMS41MTJsLS4yMTYtLjM5Ni0uMTk4LS4zNi0uMTA4LS4zNDItLjA1NC0uNDg2cTAtMS4yNiAxLjExNi0yLjY0NnQyLjQ0OC0yLjM1OCAyLjQ0OC0yLjAxNiAxLjExNi0xLjcyOHEwLS4xNDQtLjUwNC0xLjM2OHQtLjU3Ni0xLjU4NHEtLjMyNC0xLjgzNi0uMzI0LTMuNzQ0IDAtNC4xNCAxLjU2Ni03LjkydDQuMjg0LTYuNjQyIDYuMTM4LTUuMDA0IDcuMzQ0LTMuNDM4cTEuOTgtLjY0OCA1LjIyLS45MTh0Ni40NjItLjMyNCA2LjQyNi0uMjE2IDUuODg2LS44NjQgNC4wODYtMi4wMzRsMS4wNjItMS4wNjIgMS4wNjItMS4wMDguOTcyLS43MiAxLjMxNC0uNTc2IDEuNTY2LS4xNjJxMS40MDQgMCAyLjUzOCAxLjY1NnQxLjcxIDQuMDMyLjg2NCA0LjQ2NC4yODggMy40NTZ6XCIsXCJGSVJFXCI6XCJNNTAuNjg4LTMuMzgzdjIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC00OC4zODRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDQ4LjM4NHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0tOS4yMTYtMzguMDE2cTAgMi44MDgtLjg4MiA1LjE4NHQtMi4zMDQgNC4wNS0zLjE1IDMuMTY4LTMuNDU2IDIuNzktMy4xNSAyLjU5Mi0yLjMwNCAyLjkzNC0uODgyIDMuNDc0cTAgMy40NTYgMi40MTIgOC4wNjRsLS4xNDQtLjAzNi4wMzYuMDM2cS0zLjI0LTEuNDc2LTUuNzYtMi45ODh0LTQuOTg2LTMuNi00LjA4Ni00LjQxLTIuNjEtNS40MTgtLjk5LTYuNjI0cTAtMi44MDguODgyLTUuMTg0dDIuMzA0LTQuMDUgMy4xNS0zLjE2OCAzLjQ1Ni0yLjc5IDMuMTUtMi41OTIgMi4zMDQtMi45MzQuODgyLTMuNDc0cTAtMy4zODQtMi4zNzYtOC4wNjRsLjEwOC4wMzYtLjAzNi0uMDM2cTMuMjQgMS40NzYgNS43NiAyLjk4OHQ0Ljk4NiAzLjYgNC4wODYgNC40MSAyLjYxIDUuNDE4Ljk5IDYuNjI0elwiLFwiRVlFXCI6XCJNNTkuOTA0LTI5Ljg3OXEtNS40NzItOC40OTYtMTMuNzE2LTEyLjcwOCAyLjE5NiAzLjc0NCAyLjE5NiA4LjEgMCA2LjY2LTQuNzM0IDExLjM5NHQtMTEuMzk0IDQuNzM0LTExLjM5NC00LjczNC00LjczNC0xMS4zOTRxMC00LjM1NiAyLjE5Ni04LjEtOC4yNDQgNC4yMTItMTMuNzE2IDEyLjcwOCA0Ljc4OCA3LjM4IDEyLjAwNiAxMS43NTR0MTUuNjQyIDQuMzc0IDE1LjY0Mi00LjM3NCAxMi4wMDYtMTEuNzU0em0tMjUuOTItMTMuODI0cTAtLjcyLS41MDQtMS4yMjR0LTEuMjI0LS41MDRxLTQuNSAwLTcuNzIyIDMuMjIydC0zLjIyMiA3LjcyMnEwIC43Mi41MDQgMS4yMjR0MS4yMjQuNTA0IDEuMjI0LS41MDQuNTA0LTEuMjI0cTAtMy4wOTYgMi4xOTYtNS4yOTJ0NS4yOTItMi4xOTZxLjcyIDAgMS4yMjQtLjUwNHQuNTA0LTEuMjI0em0zMC41MjggMTMuODI0cTAgMS4yMjQtLjcyIDIuNDg0LTUuMDQgOC4yOC0xMy41NTQgMTMuMjY2dC0xNy45ODIgNC45ODYtMTcuOTgyLTUuMDA0LTEzLjU1NC0xMy4yNDhxLS43Mi0xLjI2LS43Mi0yLjQ4NHQuNzItMi40ODRxNS4wNC04LjI0NCAxMy41NTQtMTMuMjQ4dDE3Ljk4Mi01LjAwNCAxNy45ODIgNS4wMDQgMTMuNTU0IDEzLjI0OHEuNzIgMS4yNi43MiAyLjQ4NHpcIixcIkVZRV9TTEFTSFwiOlwiTTE5Ljk4LTE2LjM3OWwyLjgwOC01LjA3NnEtMy4xMzItMi4yNjgtNC44OTYtNS43MjR0LTEuNzY0LTcuMzA4cTAtNC4zNTYgMi4xOTYtOC4xLTguMjQ0IDQuMjEyLTEzLjcxNiAxMi43MDggNi4wMTIgOS4yODggMTUuMzcyIDEzLjV6bTE0LjAwNC0yNy4zMjRxMC0uNzItLjUwNC0xLjIyNHQtMS4yMjQtLjUwNHEtNC41IDAtNy43MjIgMy4yMjJ0LTMuMjIyIDcuNzIycTAgLjcyLjUwNCAxLjIyNHQxLjIyNC41MDQgMS4yMjQtLjUwNC41MDQtMS4yMjRxMC0zLjA5NiAyLjE5Ni01LjI5MnQ1LjI5Mi0yLjE5NnEuNzIgMCAxLjIyNC0uNTA0dC41MDQtMS4yMjR6bTEzLjA2OC02Ljg3NnEwIC4yNTItLjAzNi4zMjQtMy43OCA2Ljc2OC0xMS4zNCAyMC4zNzZ0LTExLjM3NiAyMC40MTJsLTEuNzY0IDMuMjA0cS0uMzYuNTc2LTEuMDA4LjU3Ni0uNDMyIDAtNC44MjQtMi41Mi0uNTc2LS4zNi0uNTc2LTEuMDA4IDAtLjQzMiAxLjU4NC0zLjEzMi01LjE0OC0yLjM0LTkuNDg2LTYuMjI4dC03LjUwNi04LjgycS0uNzItMS4xMTYtLjcyLTIuNDg0dC43Mi0yLjQ4NHE1LjUwOC04LjQ2IDEzLjY4LTEzLjM1NnQxNy44NTYtNC44OTZxMy4yMDQgMCA2LjQ4LjYxMmwxLjk0NC0zLjQ5MnEuMzYtLjU3NiAxLjAwOC0uNTc2LjE4IDAgLjY0OC4yMTZ0MS4xMTYuNTU4IDEuMTg4LjY2NiAxLjEzNC42NjYuNzAyLjQxNHEuNTc2LjM2LjU3Ni45NzJ6bTEuMzMyIDE2LjA5MnEwIDUuMDA0LTIuODQ0IDkuMTI2dC03LjUyNCA1LjkyMmwxMC4wOC0xOC4wNzJxLjI4OCAxLjYyLjI4OCAzLjAyNHptMTYuMTI4IDQuNjA4cTAgMS4yNi0uNzIgMi40ODQtMS40MDQgMi4zMDQtMy45MjQgNS4yMi01LjQgNi4xOTItMTIuNTEgOS42MTJ0LTE1LjEwMiAzLjQybDIuNjY0LTQuNzUycTcuNjMyLS42NDggMTQuMTMtNC45MzJ0MTAuODU0LTExLjA1MnEtNC4xNC02LjQ0NC0xMC4xNTItMTAuNTg0bDIuMjY4LTQuMDMycTMuNDIgMi4zMDQgNi41NyA1LjUwOHQ1LjIwMiA2LjYyNHEuNzIgMS4yMjQuNzIgMi40ODR6XCIsXCJXQVJOSU5HXCI6XCJNMzYuODY0LTE0LjkzOXYtNi44NHEwLS41MDQtLjM0Mi0uODQ2dC0uODEtLjM0MmgtNi45MTJxLS40NjggMC0uODEuMzQydC0uMzQyLjg0NnY2Ljg0cTAgLjUwNC4zNDIuODQ2dC44MS4zNDJoNi45MTJxLjQ2OCAwIC44MS0uMzQydC4zNDItLjg0NnptLS4wNzItMTMuNDY0bC42NDgtMTYuNTI0cTAtLjQzMi0uMzYtLjY4NC0uNDY4LS4zOTYtLjg2NC0uMzk2aC03LjkycS0uMzk2IDAtLjg2NC4zOTYtLjM2LjI1Mi0uMzYuNzU2bC42MTIgMTYuNDUycTAgLjM2LjM2LjU5NHQuODY0LjIzNGg2LjY2cS41MDQgMCAuODQ2LS4yMzR0LjM3OC0uNTk0em0tLjUwNC0zMy42MjRsMjcuNjQ4IDUwLjY4OHExLjI2IDIuMjY4LS4wNzIgNC41MzYtLjYxMiAxLjA0NC0xLjY3NCAxLjY1NnQtMi4yODYuNjEyaC01NS4yOTZxLTEuMjI0IDAtMi4yODYtLjYxMnQtMS42NzQtMS42NTZxLTEuMzMyLTIuMjY4LS4wNzItNC41MzZsMjcuNjQ4LTUwLjY4OHEuNjEyLTEuMTE2IDEuNjkyLTEuNzY0dDIuMzQtLjY0OCAyLjM0LjY0OCAxLjY5MiAxLjc2NHpcIixcIlBMQU5FXCI6XCJNNDkuNTM2LTU4LjY3OXExLjU4NCAxLjg3Mi40MzIgNS4zMjh0LTMuODg4IDYuMTkybC01Ljc5NiA1Ljc5NiA1Ljc2IDI1LjA1NnEuMTguNjg0LS40MzIgMS4xODhsLTQuNjA4IDMuNDU2cS0uMjUyLjIxNi0uNjg0LjIxNi0uMTQ0IDAtLjI1Mi0uMDM2LS41NC0uMTA4LS43NTYtLjU3NmwtMTAuMDQ0LTE4LjI4OC05LjMyNCA5LjMyNCAxLjkwOCA2Ljk4NHEuMTguNjEyLS4yODggMS4xMTZsLTMuNDU2IDMuNDU2cS0uMzI0LjMyNC0uODI4LjMyNGgtLjA3MnEtLjU0LS4wNzItLjg2NC0uNDY4bC02LjgwNC05LjA3Mi05LjA3Mi02LjgwNHEtLjM5Ni0uMjUyLS40NjgtLjgyOC0uMDM2LS40NjguMzI0LS45bDMuNDU2LTMuNDkycS4zMjQtLjMyNC44MjgtLjMyNC4yMTYgMCAuMjg4LjAzNmw2Ljk4NCAxLjkwOCA5LjMyNC05LjMyNC0xOC4yODgtMTAuMDQ0cS0uNTA0LS4yODgtLjYxMi0uODY0LS4wNzItLjU3Ni4zMjQtLjk3Mmw0LjYwOC00LjYwOHEuNTA0LS40NjggMS4wOC0uMjg4bDIzLjk0IDUuNzI0IDUuNzYtNS43NnEyLjczNi0yLjczNiA2LjE5Mi0zLjg4OHQ1LjMyOC40MzJ6XCIsXCJDQUxFTkRBUlwiOlwiTTQuNjA4LTQuNTM1aDEwLjM2OHYtMTAuMzY4aC0xMC4zNjh2MTAuMzY4em0xMi42NzIgMGgxMS41MnYtMTAuMzY4aC0xMS41MnYxMC4zNjh6bS0xMi42NzItMTIuNjcyaDEwLjM2OHYtMTEuNTJoLTEwLjM2OHYxMS41MnptMTIuNjcyIDBoMTEuNTJ2LTExLjUyaC0xMS41MnYxMS41MnptLTEyLjY3Mi0xMy44MjRoMTAuMzY4di0xMC4zNjhoLTEwLjM2OHYxMC4zNjh6bTI2LjQ5NiAyNi40OTZoMTEuNTJ2LTEwLjM2OGgtMTEuNTJ2MTAuMzY4em0tMTMuODI0LTI2LjQ5NmgxMS41MnYtMTAuMzY4aC0xMS41MnYxMC4zNjh6bTI3LjY0OCAyNi40OTZoMTAuMzY4di0xMC4zNjhoLTEwLjM2OHYxMC4zNjh6bS0xMy44MjQtMTIuNjcyaDExLjUydi0xMS41MmgtMTEuNTJ2MTEuNTJ6bS0xMi42NzItMzEuMTA0di0xMC4zNjhxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtMi4zMDRxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjEwLjM2OHEwIC40NjguMzQyLjgxdC44MS4zNDJoMi4zMDRxLjQ2OCAwIC44MS0uMzQydC4zNDItLjgxem0yNi40OTYgMzEuMTA0aDEwLjM2OHYtMTEuNTJoLTEwLjM2OHYxMS41MnptLTEzLjgyNC0xMy44MjRoMTEuNTJ2LTEwLjM2OGgtMTEuNTJ2MTAuMzY4em0xMy44MjQgMGgxMC4zNjh2LTEwLjM2OGgtMTAuMzY4djEwLjM2OHptMS4xNTItMTcuMjh2LTEwLjM2OHEwLS40NjgtLjM0Mi0uODF0LS44MS0uMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS4zNDJ0LS4zNDIuODF2MTAuMzY4cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgyLjMwNHEuNDY4IDAgLjgxLS4zNDJ0LjM0Mi0uODF6bTEzLjgyNC0yLjMwNHY0Ni4wOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTUwLjY4OHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di00Ni4wOHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg0LjYwOHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyLjMwNHEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djMuNDU2aDEzLjgyNHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyLjMwNHEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djMuNDU2aDQuNjA4cTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0elwiLFwiUkFORE9NXCI6XCJNMjMuOTc2LTQ3LjEyM3EtMi4xNiAzLjMxMi00LjkzMiA5LjgyOC0uNzkyLTEuNjItMS4zMzItMi42MXQtMS40NTgtMi4yODYtMS44MzYtMi4wMzQtMi4yNjgtMS4yNi0yLjkzNC0uNTIyaC04LjA2NHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDguMDY0cTkgMCAxNC43NiA4LjF6bTQwLjUzNiAyOC43NjRxMCAuNTA0LS4zMjQuODI4bC0xMS41MiAxMS41MnEtLjMyNC4zMjQtLjgyOC4zMjQtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi45MTJxLTEuMTUyIDAtMy4wNi4wMTh0LTIuOTE2LjAzNi0yLjYyOC0uMDM2LTIuNTU2LS4xOC0yLjMwNC0uMzc4LTIuMjY4LS42NjYtMi4wODgtMS4wMjYtMi4xMjQtMS40NC0xLjk4LTEuOTI2LTIuMDE2LTIuNTAycTIuMTI0LTMuMzQ4IDQuODk2LTkuODI4Ljc5MiAxLjYyIDEuMzMyIDIuNjF0MS40NTggMi4yODYgMS44MzYgMi4wMzQgMi4yNjggMS4yNiAyLjkzNC41MjJoOS4yMTZ2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRxLjQzMiAwIC44NjQuMzZsMTEuNDg0IDExLjQ4NHEuMzI0LjMyNC4zMjQuODI4em0wLTMyLjI1NnEwIC41MDQtLjMyNC44MjhsLTExLjUyIDExLjUycS0uMzI0LjMyNC0uODI4LjMyNC0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMmgtOS4yMTZxLTEuNzI4IDAtMy4xMzIuNTR0LTIuNDg0IDEuNjItMS44MzYgMi4yMTQtMS42MiAyLjc5cS0xLjE1MiAyLjIzMi0yLjgwOCA2LjE1Ni0xLjA0NCAyLjM3Ni0xLjc4MiAzLjk5NnQtMS45NDQgMy43OC0yLjMwNCAzLjYtMi42NjQgMi45ODgtMy4yNCAyLjQ2Ni0zLjgzNCAxLjUxMi00LjYwOC41OTRoLTguMDY0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoOC4wNjRxMS43MjggMCAzLjEzMi0uNTR0Mi40ODQtMS42MiAxLjgzNi0yLjIxNCAxLjYyLTIuNzlxMS4xNTItMi4yMzIgMi44MDgtNi4xNTYgMS4wNDQtMi4zNzYgMS43ODItMy45OTZ0MS45NDQtMy43OCAyLjMwNC0zLjYgMi42NjQtMi45ODggMy4yNC0yLjQ2NiAzLjgzNC0xLjUxMiA0LjYwOC0uNTk0aDkuMjE2di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0cS40MzIgMCAuODY0LjM2bDExLjQ4NCAxMS40ODRxLjMyNC4zMjQuMzI0LjgyOHpcIixcIkNPTU1FTlRcIjpcIk02NC41MTItMzIuMTgzcTAgNi4yNjQtNC4zMiAxMS41NzR0LTExLjczNiA4LjM4OC0xNi4yIDMuMDc4cS0yLjUyIDAtNS4yMi0uMjg4LTcuMTI4IDYuMy0xNi41NiA4LjcxMi0xLjc2NC41MDQtNC4xMDQuNzkyLS42MTIuMDcyLTEuMDk4LS4zMjR0LS42My0xLjA0NHYtLjAzNnEtLjEwOC0uMTQ0LS4wMTgtLjQzMnQuMDcyLS4zNi4xNjItLjM0MmwuMjE2LS4zMjQuMjUyLS4zMDYuMjg4LS4zMjRxLjI1Mi0uMjg4IDEuMTE2LTEuMjQydDEuMjQyLTEuMzY4IDEuMTE2LTEuNDIyIDEuMTctMS44MzYuOTcyLTIuMTI0LjkzNi0yLjczNnEtNS42NTItMy4yMDQtOC45MS03LjkydC0zLjI1OC0xMC4xMTZxMC00LjY4IDIuNTU2LTguOTQ2dDYuODc2LTcuMzYyIDEwLjI5Ni00LjkxNCAxMi41MjgtMS44MThxOC43ODQgMCAxNi4yIDMuMDc4dDExLjczNiA4LjM4OCA0LjMyIDExLjU3NHpcIixcIk1BR05FVFwiOlwiTTU1LjI5Ni0zNC40ODd2NC42MDhxMCA3LjIzNi0zLjU0NiAxMy4wMzJ0LTkuODY0IDkuMDU0LTE0LjIzOCAzLjI1OC0xNC4yMzgtMy4yNTgtOS44NjQtOS4wNTQtMy41NDYtMTMuMDMydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDEzLjgyNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjQuNjA4cTAgMS44NzIuODQ2IDMuMjR0MS45MjYgMi4wNTIgMi41NTYgMS4wOCAyLjMwNC40NjggMS41ODQuMDcyIDEuNTg0LS4wNzIgMi4zMDQtLjQ2OCAyLjU1Ni0xLjA4IDEuOTI2LTIuMDUyLjg0Ni0zLjI0di00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDEzLjgyNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0tMzYuODY0LTIzLjA0djEzLjgyNHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMTMuODI0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTEzLjgyNHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDEzLjgyNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0zNi44NjQgMHYxMy44MjRxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTEzLjgyNHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0xMy44MjRxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGgxMy44MjRxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIkNIRVZST05fVVBcIjpcIk02MC41ODgtMTYuNTIzbC01Ljk3NiA1Ljk0cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC0xOS4xMTYtMTkuMTE2LTE5LjExNiAxOS4xMTZxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTUuOTc2LTUuOTRxLS42ODQtLjY4NC0uNjg0LTEuNjM4dC42ODQtMS42MzhsMjYuNzEyLTI2LjY3NnEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDI2LjcxMiAyNi42NzZxLjY4NC42ODQuNjg0IDEuNjM4dC0uNjg0IDEuNjM4elwiLFwiQ0hFVlJPTl9ET1dOXCI6XCJNNjAuNTg4LTM1LjM1MWwtMjYuNzEyIDI2LjY3NnEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NGwtMjYuNzEyLTI2LjY3NnEtLjY4NC0uNjg0LS42ODQtMS42Mzh0LjY4NC0xLjYzOGw1Ljk3Ni01Ljk0cS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODRsMTkuMTE2IDE5LjExNiAxOS4xMTYtMTkuMTE2cS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODRsNS45NzYgNS45NHEuNjg0LjY4NC42ODQgMS42Mzh0LS42ODQgMS42Mzh6XCIsXCJSRVRXRUVUXCI6XCJNNDYuMDgtMTAuMjk1cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0zNC41NnEtLjI4OCAwLS40ODYtLjA3MnQtLjMyNC0uMjUyLS4xOTgtLjI4OC0uMTA4LS40MTQtLjAzNi0uNDE0di0yMS42aC02LjkxMnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYycTAtLjg2NC41NC0xLjQ3NmwxMS41Mi0xMy44MjRxLjY4NC0uNzkyIDEuNzY0LS43OTJ0MS43NjQuNzkybDExLjUyIDEzLjgyNHEuNTQuNjEyLjU0IDEuNDc2IDAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC02LjkxMnYxMy44MjRoMjAuNzM2cS41NzYgMCAuOS4zOTZsNS43NiA2LjkxMnEuMjUyLjM5Ni4yNTIuNzU2em0yMy4wNC0xNC45NzZxMCAuODY0LS41NCAxLjQ3NmwtMTEuNTIgMTMuODI0cS0uNzIuODI4LTEuNzY0LjgyOHQtMS43NjQtLjgyOGwtMTEuNTItMTMuODI0cS0uNTQtLjYxMi0uNTQtMS40NzYgMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg2LjkxMnYtMTMuODI0aC0yMC43MzZxLS41NzYgMC0uOS0uNDMybC01Ljc2LTYuOTEycS0uMjUyLS4zMjQtLjI1Mi0uNzIgMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMzQuNTZxLjI4OCAwIC40ODYuMDcydC4zMjQuMjUyLjE5OC4yODguMTA4LjQxNC4wMzYuNDE0djIxLjZoNi45MTJxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIlNIT1BQSU5HX0NBUlRcIjpcIk0yMy4wNC05LjE0M3EwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjgtMy4yNC0xLjM2OC0xLjM2OC0zLjI0IDEuMzY4LTMuMjQgMy4yNC0xLjM2OCAzLjI0IDEuMzY4IDEuMzY4IDMuMjR6bTMyLjI1NiAwcTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OC0zLjI0LTEuMzY4LTEuMzY4LTMuMjQgMS4zNjgtMy4yNCAzLjI0LTEuMzY4IDMuMjQgMS4zNjggMS4zNjggMy4yNHptNC42MDgtMzkuMTY4djE4LjQzMnEwIC44NjQtLjU5NCAxLjUzdC0xLjQ1OC43NzRsLTM3LjU4NCA0LjM5MnEuNDY4IDIuMTYuNDY4IDIuNTIgMCAuNTc2LS44NjQgMi4zMDRoMzMuMTJxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42Mi0uNjg0IDEuNjItMS42Mi42ODRoLTM2Ljg2NHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYycTAtLjM5Ni4yODgtMS4xMzR0LjU3Ni0xLjI5Ni43NzQtMS40NC41NTgtMS4wNjJsLTYuMzcyLTI5LjYyOGgtNy4zNDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODRoOS4yMTZxLjU3NiAwIDEuMDI2LjIzNHQuNzAyLjU1OC40NjguODgyLjI4OC45MzYuMTk4IDEuMDYyLjE2Mi45MzZoNDMuMjM2cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6XCIsXCJGT0xERVJcIjpcIk01OS45MDQtNDIuNTUxdjI1LjM0NHEwIDMuMzEyLTIuMzc2IDUuNjg4dC01LjY4OCAyLjM3NmgtNDMuNzc2cS0zLjMxMiAwLTUuNjg4LTIuMzc2dC0yLjM3Ni01LjY4OHYtMzQuNTZxMC0zLjMxMiAyLjM3Ni01LjY4OHQ1LjY4OC0yLjM3NmgxMS41MnEzLjMxMiAwIDUuNjg4IDIuMzc2dDIuMzc2IDUuNjg4djEuMTUyaDI0LjE5MnEzLjMxMiAwIDUuNjg4IDIuMzc2dDIuMzc2IDUuNjg4elwiLFwiRk9MREVSX09QRU5cIjpcIk02Ny42NDQtMzAuMTY3cTAgMS4xMTYtMS4xMTYgMi4zNzZsLTEyLjA5NiAxNC4yNTZxLTEuNTQ4IDEuODM2LTQuMzM4IDMuMTE0dC01LjE2NiAxLjI3OGgtMzkuMTY4cS0xLjIyNCAwLTIuMTc4LS40Njh0LS45NTQtMS41NDhxMC0xLjExNiAxLjExNi0yLjM3NmwxMi4wOTYtMTQuMjU2cTEuNTQ4LTEuODM2IDQuMzM4LTMuMTE0dDUuMTY2LTEuMjc4aDM5LjE2OHExLjIyNCAwIDIuMTc4LjQ2OHQuOTU0IDEuNTQ4em0tMTIuMzQ4LTEyLjM4NHY1Ljc2aC0yOS45NTJxLTMuMzg0IDAtNy4wOTIgMS43MXQtNS45MDQgNC4zMDJsLTEyLjEzMiAxNC4yNTYtLjE4LjIxNi0uMDE4LS40NS0uMDE4LS40NXYtMzQuNTZxMC0zLjMxMiAyLjM3Ni01LjY4OHQ1LjY4OC0yLjM3NmgxMS41MnEzLjMxMiAwIDUuNjg4IDIuMzc2dDIuMzc2IDUuNjg4djEuMTUyaDE5LjU4NHEzLjMxMiAwIDUuNjg4IDIuMzc2dDIuMzc2IDUuNjg4elwiLFwiQVJST1dTX1ZcIjpcIk0yNS4zNDQtNTIuOTE5cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC00LjYwOHYzNi44NjRoNC42MDhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42Mi0uNjg0IDEuNjJsLTkuMjE2IDkuMjE2cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC05LjIxNi05LjIxNnEtLjY4NC0uNjg0LS42ODQtMS42MnQuNjg0LTEuNjIgMS42Mi0uNjg0aDQuNjA4di0zNi44NjRoLTQuNjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjIuNjg0LTEuNjJsOS4yMTYtOS4yMTZxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NGw5LjIxNiA5LjIxNnEuNjg0LjY4NC42ODQgMS42MnpcIixcIkFSUk9XU19IXCI6XCJNNjQuNTEyLTMyLjE4M3EwIC45MzYtLjY4NCAxLjYybC05LjIxNiA5LjIxNnEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NC0uNjg0LTEuNjJ2LTQuNjA4aC0zNi44NjR2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODQtMS42Mi0uNjg0bC05LjIxNi05LjIxNnEtLjY4NC0uNjg0LS42ODQtMS42MnQuNjg0LTEuNjJsOS4yMTYtOS4yMTZxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NC42ODQgMS42MnY0LjYwOGgzNi44NjR2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODQgMS42Mi42ODRsOS4yMTYgOS4yMTZxLjY4NC42ODQuNjg0IDEuNjJ6XCIsXCJCQVJfQ0hBUlRfT1wiOlwiTTIzLjA0LTMyLjE4M3YxOC40MzJoLTkuMjE2di0xOC40MzJoOS4yMTZ6bTEzLjgyNC0xOC40MzJ2MzYuODY0aC05LjIxNnYtMzYuODY0aDkuMjE2em0zNi44NjQgNDEuNDcydjQuNjA4aC03My43Mjh2LTU1LjI5Nmg0LjYwOHY1MC42ODhoNjkuMTJ6bS0yMy4wNC0zMi4yNTZ2MjcuNjQ4aC05LjIxNnYtMjcuNjQ4aDkuMjE2em0xMy44MjQtMTMuODI0djQxLjQ3MmgtOS4yMTZ2LTQxLjQ3Mmg5LjIxNnpcIixcIlRXSVRURVJfU1FVQVJFXCI6XCJNNDYuMDgtNDIuNDc5cS0yLjAxNi45LTQuMzU2IDEuMjI0IDIuNDQ4LTEuNDQgMy4zNDgtNC4yMTItMi4zNCAxLjM2OC00LjgyNCAxLjgzNi0yLjE5Ni0yLjM3Ni01LjUwOC0yLjM3Ni0zLjEzMiAwLTUuMzQ2IDIuMjE0dC0yLjIxNCA1LjM0NnEwIDEuMDQ0LjE4IDEuNzI4LTQuNjQ0LS4yNTItOC43MTItMi4zNHQtNi45MTItNS41OHEtMS4wNDQgMS44LTEuMDQ0IDMuODE2IDAgNC4xMDQgMy4yNzYgNi4zLTEuNjkyLS4wMzYtMy42LS45MzZ2LjA3MnEwIDIuNyAxLjggNC44MDZ0NC40MjggMi42MXEtMS4wNDQuMjg4LTEuODM2LjI4OC0uNDY4IDAtMS40MDQtLjE0NC43NTYgMi4yNjggMi42ODIgMy43NDR0NC4zNzQgMS41MTJxLTQuMTc2IDMuMjQtOS4zOTYgMy4yNC0uOTM2IDAtMS44LS4xMDggNS4zMjggMy4zODQgMTEuNTkyIDMuMzg0IDQuMDMyIDAgNy41Ni0xLjI3OHQ2LjA0OC0zLjQyIDQuMzM4LTQuOTMyIDIuNy01LjgzMi44ODItNi4wNjZxMC0uNjQ4LS4wMzYtLjk3MiAyLjI2OC0xLjYyIDMuNzgtMy45MjR6bTkuMjE2LTYuOTg0djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkZBQ0VCT09LX1NRVUFSRVwiOlwiTTQ0LjkyOC01OS44MzFxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtNi43Njh2LTIxLjQyaDcuMTY0bDEuMDgtOC4zNTJoLTguMjQ0di01LjMyOHEwLTIuMDE2Ljg0Ni0zLjAyNHQzLjI5NC0xLjAwOGw0LjM5Mi0uMDM2di03LjQ1MnEtMi4yNjgtLjMyNC02LjQwOC0uMzI0LTQuODk2IDAtNy44MyAyLjg4dC0yLjkzNCA4LjEzNnY2LjE1NmgtNy4ydjguMzUyaDcuMnYyMS40MmgtMTkuMTUycS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnpcIixcIkNBTUVSQV9SRVRST1wiOlwiTTMzLjQwOC0zNC40ODdxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0cS0yLjM3NiAwLTQuMDY4IDEuNjkydC0xLjY5MiA0LjA2OHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNC44MjgtLjMyNC4zMjQtLjgyOHEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTguMDY0IDQuNjhxMCAzLjgxNi0yLjcgNi41MTZ0LTYuNTE2IDIuNy02LjUxNi0yLjctMi43LTYuNTE2IDIuNy02LjUxNiA2LjUxNi0yLjcgNi41MTYgMi43IDIuNyA2LjUxNnptLTM2Ljg2NCAyMC42NjRoNTUuMjk2di00LjYwOGgtNTUuMjk2djQuNjA4em00MS40NzItMjAuNjY0cTAtNS43MjQtNC4wNS05Ljc3NHQtOS43NzQtNC4wNS05Ljc3NCA0LjA1LTQuMDUgOS43NzQgNC4wNSA5Ljc3NCA5Ljc3NCA0LjA1IDkuNzc0LTQuMDUgNC4wNS05Ljc3NHptLTM2Ljg2NC0yMy4xMTJoMTMuODI0di00LjYwOGgtMTMuODI0djQuNjA4em0tNC42MDggNi45MTJoNTUuMjk2di05LjIxNjAwMDAwMDAwMDAwMWgtMjkuODA4bC0yLjMwNCA0LjYwOGgtMjMuMTg0djQuNjA4em01OS45MDQtOS4yMTZ2NDYuMDhxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1aC01NS4yOTZxLTEuOTA4IDAtMy4yNTgtMS4zNXQtMS4zNS0zLjI1OHYtNDYuMDhxMC0xLjkwOCAxLjM1LTMuMjU4dDMuMjU4LTEuMzVoNTUuMjk2cTEuOTA4IDAgMy4yNTggMS4zNXQxLjM1IDMuMjU4elwiLFwiS0VZXCI6XCJNMjkuOTUyLTQ2LjAwN3EwLTIuODgtMi4wMTYtNC44OTZ0LTQuODk2LTIuMDE2LTQuODk2IDIuMDE2LTIuMDE2IDQuODk2cTAgMS41MTIuNjg0IDIuOTg4LTEuNDc2LS42ODQtMi45ODgtLjY4NC0yLjg4IDAtNC44OTYgMi4wMTZ0LTIuMDE2IDQuODk2IDIuMDE2IDQuODk2IDQuODk2IDIuMDE2IDQuODk2LTIuMDE2IDIuMDE2LTQuODk2cTAtMS41MTItLjY4NC0yLjk4OCAxLjQ3Ni42ODQgMi45ODguNjg0IDIuODggMCA0Ljg5Ni0yLjAxNnQyLjAxNi00Ljg5NnptMzAuNjM2IDI1LjM0NHEwIC42MTItMS43NjQgMi4zNzZ0LTIuMzc2IDEuNzY0cS0uMzI0IDAtMS4wMjYtLjU3NnQtMS4zMTQtMS4xODgtMS4zODYtMS40NC0uODgyLS45MzZsLTMuNDU2IDMuNDU2IDcuOTIgNy45MnExLjAwOCAxLjAwOCAxLjAwOCAyLjQ0OCAwIDEuNTEyLTEuNDA0IDIuOTE2dC0yLjkxNiAxLjQwNHEtMS40NCAwLTIuNDQ4LTEuMDA4bC0yNC4xNTYtMjQuMTU2cS02LjMzNiA0LjcxNi0xMy4xNCA0LjcxNi01Ljg2OCAwLTkuNTU4LTMuNjl0LTMuNjktOS41NThxMC01Ljc2IDMuNDItMTEuMjY4dDguOTI4LTguOTI4IDExLjI2OC0zLjQycTUuODY4IDAgOS41NTggMy42OXQzLjY5IDkuNTU4cTAgNi44MDQtNC43MTYgMTMuMTRsMTIuNzggMTIuNzggMy40NTYtMy40NTZxLS4xMDgtLjEwOC0uOTM2LS44ODJ0LTEuNDQtMS4zODYtMS4xODgtMS4zMTQtLjU3Ni0xLjAyNnEwLS42MTIgMS43NjQtMi4zNzZ0Mi4zNzYtMS43NjRxLjQ2OCAwIC44MjguMzYuMjE2LjIxNiAxLjY1NiAxLjYwMnQyLjk1MiAyLjg2MiAzLjExNCAzLjA5NiAyLjYyOCAyLjgwOCAxLjAyNiAxLjQ3NnpcIixcIkdFQVJTXCI6XCJNMzIuMjU2LTMyLjE4M3EwLTMuODE2LTIuNy02LjUxNnQtNi41MTYtMi43LTYuNTE2IDIuNy0yLjcgNi41MTYgMi43IDYuNTE2IDYuNTE2IDIuNyA2LjUxNi0yLjcgMi43LTYuNTE2em0yNy42NDggMTguNDMycTAtMS44NzItMS4zNjgtMy4yNHQtMy4yNC0xLjM2OC0zLjI0IDEuMzY4LTEuMzY4IDMuMjRxMCAxLjkwOCAxLjM1IDMuMjU4dDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4em0wLTM2Ljg2NHEwLTEuODcyLTEuMzY4LTMuMjR0LTMuMjQtMS4zNjgtMy4yNCAxLjM2OC0xLjM2OCAzLjI0cTAgMS45MDggMS4zNSAzLjI1OHQzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptLTEzLjgyNCAxNS4xNTZ2Ni42NnEwIC4zNi0uMjUyLjcwMnQtLjU3Ni4zNzhsLTUuNTguODY0cS0uMzk2IDEuMjYtMS4xNTIgMi43MzYgMS4yMjQgMS43MjggMy4yNCA0LjE0LjI1Mi4zNi4yNTIuNzIgMCAuNDMyLS4yNTIuNjg0LS44MjggMS4wOC0yLjk3IDMuMjIydC0yLjgyNiAyLjE0MnEtLjM5NiAwLS43NTYtLjI1MmwtNC4xNC0zLjI0cS0xLjMzMi42ODQtMi43NzIgMS4xMTYtLjM5NiAzLjg4OC0uODI4IDUuNTgtLjI1Mi44NjQtMS4wOC44NjRoLTYuNjk2cS0uMzk2IDAtLjcyLS4yN3QtLjM2LS42M2wtLjgyOC01LjUwOHEtMS4yMjQtLjM2LTIuNy0xLjExNmwtNC4yNDggMy4yMDRxLS4yNTIuMjUyLS43Mi4yNTItLjM5NiAwLS43NTYtLjI4OC01LjE4NC00Ljc4OC01LjE4NC01Ljc2IDAtLjMyNC4yNTItLjY4NC4zNi0uNTA0IDEuNDc2LTEuOTA4dDEuNjkyLTIuMTk2cS0uODI4LTEuNTg0LTEuMjYtMi45NTJsLTUuNDcyLS44NjRxLS4zNi0uMDM2LS42MTItLjM0MnQtLjI1Mi0uNzAydi02LjY2cTAtLjM2LjI1Mi0uNzAydC41NzYtLjM3OGw1LjU4LS44NjRxLjM5Ni0xLjI2IDEuMTUyLTIuNzM2LTEuMjI0LTEuNzI4LTMuMjQtNC4xNC0uMjUyLS4zOTYtLjI1Mi0uNzIgMC0uNDMyLjI1Mi0uNzIuNzkyLTEuMDggMi45NTItMy4yMDR0Mi44NDQtMi4xMjRxLjM5NiAwIC43NTYuMjUybDQuMTQgMy4yNHExLjIyNC0uNjQ4IDIuNzcyLTEuMTUyLjM5Ni0zLjg4OC44MjgtNS41NDQuMjUyLS44NjQgMS4wOC0uODY0aDYuNjk2cS4zOTYgMCAuNzIuMjd0LjM2LjYzbC44MjggNS41MDhxMS4yMjQuMzYgMi43IDEuMTE2bDQuMjQ4LTMuMjA0cS4yODgtLjI1Mi43Mi0uMjUyLjM5NiAwIC43NTYuMjg4IDUuMTg0IDQuNzg4IDUuMTg0IDUuNzYgMCAuMzI0LS4yNTIuNjg0LS40MzIuNTc2LTEuNTEyIDEuOTQ0dC0xLjYyIDIuMTZxLjgyOCAxLjcyOCAxLjIyNCAyLjk1Mmw1LjQ3Mi44MjhxLjM2LjA3Mi42MTIuMzc4dC4yNTIuNzAyem0yMy4wNCAxOS4xODh2NS4wNHEwIC41NzYtNS4zNjQgMS4xMTYtLjQzMi45NzItMS4wOCAxLjg3MiAxLjgzNiA0LjA2OCAxLjgzNiA0Ljk2OCAwIC4xNDQtLjE0NC4yNTItNC4zOTIgMi41NTYtNC40NjQgMi41NTYtLjI4OCAwLTEuNjU2LTEuNjkydC0xLjg3Mi0yLjQ0OHEtLjcyLjA3Mi0xLjA4LjA3MnQtMS4wOC0uMDcycS0uNTA0Ljc1Ni0xLjg3MiAyLjQ0OHQtMS42NTYgMS42OTJxLS4wNzIgMC00LjQ2NC0yLjU1Ni0uMTQ0LS4xMDgtLjE0NC0uMjUyIDAtLjkgMS44MzYtNC45NjgtLjY0OC0uOS0xLjA4LTEuODcyLTUuMzY0LS41NC01LjM2NC0xLjExNnYtNS4wNHEwLS41NzYgNS4zNjQtMS4xMTYuNDY4LTEuMDQ0IDEuMDgtMS44NzItMS44MzYtNC4wNjgtMS44MzYtNC45NjggMC0uMTQ0LjE0NC0uMjUyLjE0NC0uMDcyIDEuMjYtLjcydDIuMTI0LTEuMjI0IDEuMDgtLjU3NnEuMjg4IDAgMS42NTYgMS42NzR0MS44NzIgMi40M3EuNzItLjA3MiAxLjA4LS4wNzJ0MS4wOC4wNzJxMS44MzYtMi41NTYgMy4zMTItNC4wMzJsLjIxNi0uMDcycS4xNDQgMCA0LjQ2NCAyLjUyLjE0NC4xMDguMTQ0LjI1MiAwIC45LTEuODM2IDQuOTY4LjYxMi44MjggMS4wOCAxLjg3MiA1LjM2NC41NCA1LjM2NCAxLjExNnptMC0zNi44NjR2NS4wNHEwIC41NzYtNS4zNjQgMS4xMTYtLjQzMi45NzItMS4wOCAxLjg3MiAxLjgzNiA0LjA2OCAxLjgzNiA0Ljk2OCAwIC4xNDQtLjE0NC4yNTItNC4zOTIgMi41NTYtNC40NjQgMi41NTYtLjI4OCAwLTEuNjU2LTEuNjkydC0xLjg3Mi0yLjQ0OHEtLjcyLjA3Mi0xLjA4LjA3MnQtMS4wOC0uMDcycS0uNTA0Ljc1Ni0xLjg3MiAyLjQ0OHQtMS42NTYgMS42OTJxLS4wNzIgMC00LjQ2NC0yLjU1Ni0uMTQ0LS4xMDgtLjE0NC0uMjUyIDAtLjkgMS44MzYtNC45NjgtLjY0OC0uOS0xLjA4LTEuODcyLTUuMzY0LS41NC01LjM2NC0xLjExNnYtNS4wNHEwLS41NzYgNS4zNjQtMS4xMTYuNDY4LTEuMDQ0IDEuMDgtMS44NzItMS44MzYtNC4wNjgtMS44MzYtNC45NjggMC0uMTQ0LjE0NC0uMjUyLjE0NC0uMDcyIDEuMjYtLjcydDIuMTI0LTEuMjI0IDEuMDgtLjU3NnEuMjg4IDAgMS42NTYgMS42NzR0MS44NzIgMi40M3EuNzItLjA3MiAxLjA4LS4wNzJ0MS4wOC4wNzJxMS44MzYtMi41NTYgMy4zMTItNC4wMzJsLjIxNi0uMDcycS4xNDQgMCA0LjQ2NCAyLjUyLjE0NC4xMDguMTQ0LjI1MiAwIC45LTEuODM2IDQuOTY4LjYxMi44MjggMS4wOCAxLjg3MiA1LjM2NC41NCA1LjM2NCAxLjExNnpcIixcIkNPTU1FTlRTXCI6XCJNNTAuNjg4LTM2Ljc5MXEwIDUuMDA0LTMuMzg0IDkuMjUydC05LjIzNCA2LjcxNC0xMi43MjYgMi40NjZxLTMuMDk2IDAtNi4zMzYtLjU3Ni00LjQ2NCAzLjE2OC0xMC4wMDggNC42MDgtMS4yOTYuMzI0LTMuMDk2LjU3NmgtLjEwOHEtLjM5NiAwLS43MzgtLjI4OHQtLjQxNC0uNzU2cS0uMDM2LS4xMDgtLjAzNi0uMjM0dC4wMTgtLjIzNC4wNzItLjIxNmwuMDktLjE4LjEyNi0uMTk4LjE0NC0uMTguMTYyLS4xOC4xNDQtLjE2MnEuMTgtLjIxNi44MjgtLjl0LjkzNi0xLjA2Mi44MS0xLjA0NC45LTEuMzg2LjczOC0xLjU4NHEtNC40NjQtMi41OTItNy4wMi02LjM3MnQtMi41NTYtOC4wNjRxMC01LjAwNCAzLjM4NC05LjI1MnQ5LjIzNC02LjcxNCAxMi43MjYtMi40NjYgMTIuNzI2IDIuNDY2IDkuMjM0IDYuNzE0IDMuMzg0IDkuMjUyem0xMy44MjQgOS4yMTZxMCA0LjMyLTIuNTU2IDguMDgydC03LjAyIDYuMzU0cS4zNi44NjQuNzM4IDEuNTg0dC45IDEuMzg2LjgxIDEuMDQ0LjkzNiAxLjA2Mi44MjguOWwuMTQ0LjE2Mi4xNjIuMTguMTQ0LjE4LjEyNi4xOTguMDkuMTguMDcyLjIxNi4wMTguMjM0LS4wMzYuMjM0cS0uMTA4LjUwNC0uNDY4Ljc5MnQtLjc5Mi4yNTJxLTEuOC0uMjUyLTMuMDk2LS41NzYtNS41NDQtMS40NC0xMC4wMDgtNC42MDgtMy4yNC41NzYtNi4zMzYuNTc2LTkuNzU2IDAtMTYuOTkyLTQuNzUyIDIuMDg4LjE0NCAzLjE2OC4xNDQgNS43OTYgMCAxMS4xMjQtMS42MnQ5LjUwNC00LjY0NHE0LjUtMy4zMTIgNi45MTItNy42MzJ0Mi40MTItOS4xNDRxMC0yLjc3Mi0uODI4LTUuNDcyIDQuNjQ0IDIuNTU2IDcuMzQ0IDYuNDA4dDIuNyA4LjI4elwiLFwiVEhVTUJTX09fVVBcIjpcIk05LjIxNi0xNi4wNTVxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42MiAxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTQxLjQ3Mi0yMC43MzZxMC0xLjgzNi0xLjQwNC0zLjIyMnQtMy4yMDQtMS4zODZoLTEyLjY3MnEwLTIuMDg4IDEuNzI4LTUuNzQydDEuNzI4LTUuNzc4cTAtMy41MjgtMS4xNTItNS4yMnQtNC42MDgtMS42OTJxLS45MzYuOTM2LTEuMzY4IDMuMDZ0LTEuMDk4IDQuNTE4LTIuMTQyIDMuOTQycS0uNzkyLjgyOC0yLjc3MiAzLjI3Ni0uMTQ0LjE4LS44MjggMS4wOHQtMS4xMzQgMS40NzYtMS4yNDIgMS41My0xLjQ0IDEuNTg0LTEuMzg2IDEuMjc4LTEuNDQuOTcyLTEuMjc4LjMyNGgtMS4xNTJ2MjMuMDRoMS4xNTJxLjQ2OCAwIDEuMTM0LjEwOHQxLjE4OC4yMzQgMS4zNjguMzk2IDEuMjYuNDE0IDEuMjc4LjQ1IDEuMDQ0LjM3OHE3LjU5NiAyLjYyOCAxMi4zMTIgMi42MjhoNC4zNTZxNi45MTIgMCA2LjkxMi02LjAxMiAwLS45MzYtLjE4LTIuMDE2IDEuMDgtLjU3NiAxLjcxLTEuODl0LjYzLTIuNjQ2LS42NDgtMi40ODRxMS45MDgtMS44IDEuOTA4LTQuMjg0IDAtLjktLjM2LTEuOTk4dC0uOS0xLjcxcTEuMTUyLS4wMzYgMS45MjYtMS42OTJ0Ljc3NC0yLjkxNnptNC42MDgtLjAzNnEwIDMuMjA0LTEuNzY0IDUuODY4LjMyNCAxLjE4OC4zMjQgMi40ODQgMCAyLjc3Mi0xLjM2OCA1LjE4NC4xMDguNzU2LjEwOCAxLjU0OCAwIDMuNjM2LTIuMTYgNi40MDguMDM2IDUuMDA0LTMuMDYgNy45MDJ0LTguMTcyIDIuODk4aC00LjY0NHEtMy40NTYgMC02LjgyMi0uODF0LTcuNzk0LTIuMzU4cS00LjE3Ni0xLjQ0LTQuOTY4LTEuNDRoLTEwLjM2OHEtMS45MDggMC0zLjI1OC0xLjM1dC0xLjM1LTMuMjU4di0yMy4wNHEwLTEuOTA4IDEuMzUtMy4yNTh0My4yNTgtMS4zNWg5Ljg2NHExLjI5Ni0uODY0IDQuOTMyLTUuNTggMi4wODgtMi43IDMuODUyLTQuNjA4Ljg2NC0uOSAxLjI3OC0zLjA3OHQxLjA5OC00LjU1NCAyLjIzMi0zLjg4OHExLjQwNC0xLjMzMiAzLjI0LTEuMzMyIDMuMDI0IDAgNS40MzYgMS4xN3QzLjY3MiAzLjY1NCAxLjI2IDYuNjk2cTAgMy4zNDgtMS43MjggNi45MTJoNi4zMzZxMy43NDQgMCA2LjQ4IDIuNzM2dDIuNzM2IDYuNDQ0elwiLFwiVEhVTUJTX09fRE9XTlwiOlwiTTkuMjE2LTQ4LjMxMXEwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODQtMS42Mi42ODQtLjY4NCAxLjYyLjY4NCAxLjYyIDEuNjIuNjg0IDEuNjItLjY4NC42ODQtMS42MnptNDEuNDcyIDIwLjczNnEwLTEuMjYtLjc3NC0yLjkxNnQtMS45MjYtMS42OTJxLjU0LS42MTIuOS0xLjcxdC4zNi0xLjk5OHEwLTIuNDg0LTEuOTA4LTQuMjg0LjY0OC0xLjE1Mi42NDgtMi40ODR0LS42My0yLjY0Ni0xLjcxLTEuODlxLjE4LTEuMDguMTgtMi4wMTYgMC0zLjA2LTEuNzY0LTQuNTM2dC00Ljg5Ni0xLjQ3NmgtNC42MDhxLTQuNzE2IDAtMTIuMzEyIDIuNjI4LS4xOC4wNzItMS4wNDQuMzc4dC0xLjI3OC40NS0xLjI2LjQxNC0xLjM2OC4zOTYtMS4xODguMjM0LTEuMTM0LjEwOGgtMS4xNTJ2MjMuMDRoMS4xNTJxLjU3NiAwIDEuMjc4LjMyNHQxLjQ0Ljk3MiAxLjM4NiAxLjI3OCAxLjQ0IDEuNTg0IDEuMjQyIDEuNTMgMS4xMzQgMS40NzYuODI4IDEuMDhxMS45OCAyLjQ0OCAyLjc3MiAzLjI3NiAxLjQ3NiAxLjU0OCAyLjE0MiAzLjk0MnQxLjA5OCA0LjUxOCAxLjM2OCAzLjA2cTMuNDU2IDAgNC42MDgtMS42OTJ0MS4xNTItNS4yMnEwLTIuMTI0LTEuNzI4LTUuNzc4dC0xLjcyOC01Ljc0MmgxMi42NzJxMS44IDAgMy4yMDQtMS4zODZ0MS40MDQtMy4yMjJ6bTQuNjA4LjAzNnEwIDMuNzA4LTIuNzM2IDYuNDQ0dC02LjQ4IDIuNzM2aC02LjMzNnExLjcyOCAzLjU2NCAxLjcyOCA2LjkxMiAwIDQuMjQ4LTEuMjYgNi42OTYtMS4yNiAyLjQ4NC0zLjY3MiAzLjY1NHQtNS40MzYgMS4xN3EtMS44MzYgMC0zLjI0LTEuMzMyLTEuMjI0LTEuMTg4LTEuOTQ0LTIuOTUydC0uOTE4LTMuMjU4LS42My0zLjA0Mi0xLjExNi0yLjMwNHEtMS43MjgtMS44LTMuODUyLTQuNTcyLTMuNjM2LTQuNzE2LTQuOTMyLTUuNThoLTkuODY0cS0xLjkwOCAwLTMuMjU4LTEuMzV0LTEuMzUtMy4yNTh2LTIzLjA0cTAtMS45MDggMS4zNS0zLjI1OHQzLjI1OC0xLjM1aDEwLjM2OHEuNzkyIDAgNC45NjgtMS40NCA0LjYwOC0xLjU4NCA4LjAyOC0yLjM3NnQ3LjItLjc5Mmg0LjAzMnE1LjA0IDAgOC4xNTQgMi44NDR0My4wNzggNy43NzZ2LjE4cTIuMTYgMi43NzIgMi4xNiA2LjQwOCAwIC43OTItLjEwOCAxLjU0OCAxLjM2OCAyLjQxMiAxLjM2OCA1LjE4NCAwIDEuMjk2LS4zMjQgMi40ODQgMS43NjQgMi42NjQgMS43NjQgNS44Njh6XCIsXCJTVEFSX0hBTEZcIjpcIk0yOS45NTItNjMuMjg3djQ4LjIwNGwtMTYuMTY0IDguNDk2cS0uNzkyLjQzMi0xLjQ0LjQzMi0uNzU2IDAtMS4xMzQtLjUyMnQtLjM3OC0xLjI3OHEwLS4yMTYuMDcyLS43MmwzLjA5Ni0xOC0xMy4xMDQtMTIuNzQ0cS0uOS0uOTcyLS45LTEuNzI4IDAtMS4zMzIgMi4wMTYtMS42NTZsMTguMDcyLTIuNjI4IDguMS0xNi4zOHEuNjg0LTEuNDc2IDEuNzY0LTEuNDc2elwiLFwiSEVBUlRfT1wiOlwiTTU5LjkwNC00Mi45ODNxMC0yLjkxNi0uNzc0LTUuMTQ4dC0xLjk4LTMuNTQ2LTIuOTM0LTIuMTQyLTMuMzg0LTEuMTE2LTMuNTI4LS4yODgtNC4wMzIuOTE4LTMuOTc4IDIuMzA0LTMuMTE0IDIuNTkyLTIuMTYgMi4yMTRxLS42NDguNzkyLTEuNzY0Ljc5MnQtMS43NjQtLjc5MnEtLjg2NC0xLjAwOC0yLjE2LTIuMjE0dC0zLjExNC0yLjU5Mi0zLjk3OC0yLjMwNC00LjAzMi0uOTE4LTMuNTI4LjI4OC0zLjM4NCAxLjExNi0yLjkzNCAyLjE0Mi0xLjk4IDMuNTQ2LS43NzQgNS4xNDhxMCA2LjA0OCA2LjczMiAxMi43OGwyMC45MTYgMjAuMTYgMjAuODgtMjAuMTI0cTYuNzY4LTYuNzY4IDYuNzY4LTEyLjgxNnptNC42MDggMHEwIDcuOTU2LTguMjQ0IDE2LjJsLTIyLjQyOCAyMS42cS0uNjQ4LjY0OC0xLjU4NC42NDh0LTEuNTg0LS42NDhsLTIyLjQ2NC0yMS42NzJxLS4zNi0uMjg4LS45OS0uOTM2dC0xLjk5OC0yLjM1OC0yLjQ0OC0zLjUxLTEuOTI2LTQuMzU2LS44NDYtNC45NjhxMC03LjkyIDQuNTcyLTEyLjM4NHQxMi42MzYtNC40NjRxMi4yMzIgMCA0LjU1NC43NzR0NC4zMiAyLjA4OCAzLjQzOCAyLjQ2NiAyLjczNiAyLjQ0OHExLjI5Ni0xLjI5NiAyLjczNi0yLjQ0OHQzLjQzOC0yLjQ2NiA0LjMyLTIuMDg4IDQuNTU0LS43NzRxOC4wNjQgMCAxMi42MzYgNC40NjR0NC41NzIgMTIuMzg0elwiLFwiU0lHTl9PVVRcIjpcIk0yMy4wNC0xMi41OTlxMCAuMTQ0LjAzNi43MnQuMDE4Ljk1NC0uMTA4Ljg0Ni0uMzYuNzAyLS43MzguMjM0aC0xMS41MnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTI1LjM0NHEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDExLjUycS40NjggMCAuODEuMzQydC4zNDIuODFxMCAuMTQ0LjAzNi43MnQuMDE4Ljk1NC0uMTA4Ljg0Ni0uMzYuNzAyLS43MzguMjM0aC0xMS41MnEtMi4zNzYgMC00LjA2OCAxLjY5MnQtMS42OTIgNC4wNjh2MjUuMzQ0cTAgMi4zNzYgMS42OTIgNC4wNjh0NC4wNjggMS42OTJoMTEuMjMyMDAwMDAwMDAwMDAxbC40MTQuMDM2LjQxNC4xMDguMjg4LjE5OC4yNTIuMzI0LjA3Mi40ODZ6bTMzLjQwOC0xOS41ODRxMCAuOTM2LS42ODQgMS42MmwtMTkuNTg0IDE5LjU4NHEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NC0uNjg0LTEuNjJ2LTEwLjM2OGgtMTYuMTI4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTEzLjgyNHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDE2LjEyOHYtMTAuMzY4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODQgMS42Mi42ODRsMTkuNTg0IDE5LjU4NHEuNjg0LjY4NC42ODQgMS42MnpcIixcIkxJTktFRElOX1NRVUFSRVwiOlwiTTguNTMyLTEzLjUzNWg4LjMxNnYtMjQuOTg0aC04LjMxNnYyNC45ODR6bTguODU2LTMyLjY4OHEtLjAzNi0xLjg3Mi0xLjI5Ni0zLjA5NnQtMy4zNDgtMS4yMjQtMy40MDIgMS4yMjQtMS4zMTQgMy4wOTZxMCAxLjgzNiAxLjI3OCAzLjA3OHQzLjMzIDEuMjQyaC4wMzZxMi4xMjQgMCAzLjQyLTEuMjQydDEuMjk2LTMuMDc4em0yMS4wNiAzMi42ODhoOC4zMTZ2LTE0LjMyOHEwLTUuNTQ0LTIuNjI4LTguMzg4dC02Ljk0OC0yLjg0NHEtNC44OTYgMC03LjUyNCA0LjIxMmguMDcydi0zLjYzNmgtOC4zMTZxLjEwOCAyLjM3NiAwIDI0Ljk4NGg4LjMxNnYtMTMuOTY4cTAtMS4zNjguMjUyLTIuMDE2LjU0LTEuMjYgMS42Mi0yLjE0MnQyLjY2NC0uODgycTQuMTc2IDAgNC4xNzYgNS42NTJ2MTMuMzU2em0xNi44NDgtMzUuOTI4djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlRIVU1CX1RBQ0tcIjpcIk0xNy4yOC0zMy4zMzV2LTE2LjEyOHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjQtLjgyOC4zMjQtLjMyNC44Mjh2MTYuMTI4cTAgLjUwNC4zMjQuODI4dC44MjguMzI0LjgyOC0uMzI0LjMyNC0uODI4em0yNC4xOTIgMTIuNjcycTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0xNS40NDRsLTEuODM2IDE3LjM4OHEtLjA3Mi40MzItLjM3OC43Mzh0LS43MzguMzA2aC0uMDM2cS0uOTcyIDAtMS4xNTItLjk3MmwtMi43MzYtMTcuNDZoLTE0LjU0NHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYycTAtNC40MjggMi44MjYtNy45NzR0Ni4zOS0zLjU0NnYtMTguNDMycS0xLjg3MiAwLTMuMjQtMS4zNjh0LTEuMzY4LTMuMjQgMS4zNjgtMy4yNCAzLjI0LTEuMzY4aDIzLjA0cTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0LTEuMzY4IDMuMjQtMy4yNCAxLjM2OHYxOC40MzJxMy41NjQgMCA2LjM5IDMuNTQ2dDIuODI2IDcuOTc0elwiLFwiRVhURVJOQUxfTElOS1wiOlwiTTUwLjY4OC0zMS4wMzF2MTEuNTJxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTI5Ljk1MnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTI5Ljk1MnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDI1LjM0NHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMjUuMzQ0cS0yLjM3NiAwLTQuMDY4IDEuNjkydC0xLjY5MiA0LjA2OHYyOS45NTJxMCAyLjM3NiAxLjY5MiA0LjA2OHQ0LjA2OCAxLjY5MmgyOS45NTJxMi4zNzYgMCA0LjA2OC0xLjY5MnQxLjY5Mi00LjA2OHYtMTEuNTJxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgyLjMwNHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTEzLjgyNC0zMS4xMDR2MTguNDMycTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0LTEuNjItLjY4NGwtNi4zMzYtNi4zMzYtMjMuNDcyIDIzLjQ3MnEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC00LjEwNC00LjEwNHEtLjM2LS4zNi0uMzYtLjgyOHQuMzYtLjgyOGwyMy40NzItMjMuNDcyLTYuMzM2LTYuMzM2cS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MiAxLjYyLS42ODRoMTguNDMycS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6XCIsXCJTSUdOX0lOXCI6XCJNNDIuNjI0LTMyLjE4M3EwIC45MzYtLjY4NCAxLjYybC0xOS41ODQgMTkuNTg0cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0LS42ODQtMS42MnYtMTAuMzY4aC0xNi4xMjhxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtMTMuODI0cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoMTYuMTI4di0xMC4zNjhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NCAxLjYyLjY4NGwxOS41ODQgMTkuNTg0cS42ODQuNjg0LjY4NCAxLjYyem0xMi42NzItMTIuNjcydjI1LjM0NHEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMTEuNTJxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODFxMC0uMTQ0LS4wMzYtLjcydC0uMDE4LS45NTQuMTA4LS44NDYuMzYtLjcwMi43MzgtLjIzNGgxMS41MnEyLjM3NiAwIDQuMDY4LTEuNjkydDEuNjkyLTQuMDY4di0yNS4zNDRxMC0yLjM3Ni0xLjY5Mi00LjA2OHQtNC4wNjgtMS42OTJoLTExLjIzMjAwMDAwMDAwMDAwMWwtLjQxNC0uMDM2LS40MTQtLjEwOC0uMjg4LS4xOTgtLjI1Mi0uMzI0LS4wNzItLjQ4NnEwLS4xNDQtLjAzNi0uNzJ0LS4wMTgtLjk1NC4xMDgtLjg0Ni4zNi0uNzAyLjczOC0uMjM0aDExLjUycTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCIsXCJUUk9QSFlcIjpcIk0xNi40ODgtMzIuNjUxcS0yLjY2NC01LjgzMi0yLjY2NC0xMy4zNTZoLTkuMjE2djMuNDU2cTAgMi44MDggMy40MDIgNS44MzJ0OC40NzggNC4wNjh6bTM4LjgwOC05Ljl2LTMuNDU2aC05LjIxNnEwIDcuNTI0LTIuNjY0IDEzLjM1NiA1LjA3Ni0xLjA0NCA4LjQ3OC00LjA2OHQzLjQwMi01LjgzMnptNC42MDgtNC42MDh2NC42MDhxMCAyLjU1Ni0xLjQ5NCA1LjE0OHQtNC4wMzIgNC42OC02LjIyOCAzLjUxLTcuNzU4IDEuNjAycS0xLjUxMiAxLjk0NC0zLjQyIDMuNDItMS4zNjggMS4yMjQtMS44OSAyLjYxdC0uNTIyIDMuMjIycTAgMS45NDQgMS4wOTggMy4yNzZ0My41MSAxLjMzMnEyLjcgMCA0LjgwNiAxLjYzOHQyLjEwNiA0LjEyMnYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yOS45NTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0yLjQ4NCAyLjEwNi00LjEyMnQ0LjgwNi0xLjYzOHEyLjQxMiAwIDMuNTEtMS4zMzJ0MS4wOTgtMy4yNzZxMC0xLjgzNi0uNTIyLTMuMjIydC0xLjg5LTIuNjFxLTEuOTA4LTEuNDc2LTMuNDItMy40Mi00LjA2OC0uMTgtNy43NTgtMS42MDJ0LTYuMjI4LTMuNTEtNC4wMzItNC42OC0xLjQ5NC01LjE0OHYtNC42MDhxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDEwLjM2OHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyMC43MzZxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHYzLjQ1NmgxMC4zNjhxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4elwiLFwiR0lUSFVCX1NRVUFSRVwiOlwiTTE4LjY4NC0yMS4yMzlxLjE0NC0uMjE2LS4xMDgtLjQ2OC0uMzI0LS4yNTItLjUwNC0uMDcyLS4xNDQuMjE2LjEwOC40NjguMzI0LjI1Mi41MDQuMDcyem0tMS4wMDgtMS40NzZxLS4xOC0uMjUyLS40MzItLjE0NC0uMjE2LjE0NCAwIC40MzIuMjUyLjI4OC40MzIuMTguMjE2LS4xNDQgMC0uNDY4em0tMS40NzYtMS40NHEuMDcyLS4xNDQtLjE4LS4yODgtLjI1Mi0uMDcyLS4yODguMDcyLS4xMDguMTguMTQ0LjI4OC4yODguMDcyLjMyNC0uMDcyem0uNzU2LjgyOHEuMDcyLS4wMzYuMDU0LS4xNjJ0LS4xMjYtLjE5OHEtLjIxNi0uMjUyLS4zNi0uMTA4dC4wMzYuMzk2cS4yMTYuMjE2LjM5Ni4wNzJ6bTMuMDk2IDIuN3EuMDcyLS4yNTItLjMyNC0uMzk2LS4zMjQtLjEwOC0uNDY4LjE0NC0uMDcyLjI1Mi4zMjQuMzk2LjMyNC4xMDguNDY4LS4xNDR6bTEuNTEyLjEwOHEwLS4yODgtLjQzMi0uMjg4LS4zNiAwLS4zNi4yODh0LjM5Ni4yODguMzk2LS4yODh6bTEuNDA0LS4yNTJxLS4wNzItLjI1Mi0uNDY4LS4xOHQtLjMyNC4zMjRxLjA3Mi4yODguNDMyLjIxNnQuMzYtLjM2em0yMy4xMTItMTEuNDEycTAtNy42MzItNS40LTEzLjAzMnQtMTMuMDMyLTUuNC0xMy4wMzIgNS40LTUuNCAxMy4wMzJxMCA2LjAxMiAzLjUyOCAxMC44MTh0OS4wNzIgNi42NzhxLjY0OC4xMDguOTU0LS4xOHQuMzA2LS43MnEwLTEuODcyLS4wMzYtMy40Mi0uMjE2LjAzNi0uNTU4LjA5dC0xLjI3OC4wNzItMS43MjgtLjE0NC0xLjU2Ni0uNzItMS4wNjItMS40OTRxLS44MjgtMi4xMjQtMi4wNTItMi42NjRsLS4xNjItLjEyNi0uMjg4LS4yODgtLjI1Mi0uMzQyLjE0NC0uMjcuNzAyLS4xMjZxLjIxNiAwIC41NC4wNzJ0MS4wOC41NTggMS4xODggMS4yNzhxLjU3NiAxLjAwOCAxLjM1IDEuNTEydDEuNTY2LjUwNCAxLjM2OC0uMTI2IDEuMDgtLjM0MnEuMjUyLTEuNjkyIDEuMTg4LTIuNDg0LTEuNzY0LS4yMTYtMy4wOTYtLjY2NnQtMi42MjgtMS40MDQtMS45OTgtMi43MzYtLjcwMi00LjMwMnEwLTIuODQ0IDEuOTA4LTQuOTMyLS44NjQtMi4yMzIuMTgtNC44OTYuNjg0LS4yMTYgMS45NjIuMjd0Mi4xNzggMS4wNjJsLjkzNi41NzZxMi4wODgtLjYxMiA0LjYwOC0uNjEydDQuNjA4LjYxMnEuMzk2LS4yNTIgMS4wMjYtLjY0OHQxLjk5OC0uOTM2IDIuMDUyLS4zMjRxMS4wNDQgMi42NjQuMTggNC44OTYgMS45MDggMi4wODggMS45MDggNC45MzIgMCAyLjA1Mi0uNTA0IDMuNjE4dC0xLjI3OCAyLjUyLTEuOTI2IDEuNjAyLTIuMjUuOTM2LTIuNDY2LjQzMnExLjI2IDEuMTE2IDEuMjYgMy40MiAwIDEuNDQtLjAxOCAzLjIwNHQtLjAxOCAxLjgzNnEwIC40MzIuMzA2LjcydC45NTQuMThxNS41NDQtMS44NzIgOS4wNzItNi42Nzh0My41MjgtMTAuODE4em05LjIxNi0xNy4yOHYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2cTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCIsXCJVUExPQURcIjpcIk00Ni4wOC0xMS40NDdxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42MiAxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTkuMjE2IDBxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42MiAxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTQuNjA4LTguMDY0djExLjUycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTUyLjk5MnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMTEuNTJxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDE1LjM3MnEuNzU2IDIuMDE2IDIuNTM4IDMuMzEydDMuOTc4IDEuMjk2aDkuMjE2cTIuMTk2IDAgMy45NzgtMS4yOTZ0Mi41MzgtMy4zMTJoMTUuMzcycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHptLTExLjctMjMuMzI4cS0uNjEyIDEuNDQtMi4xMjQgMS40NGgtOS4yMTZ2MTYuMTI4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC05LjIxNnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0xNi4xMjhoLTkuMjE2cS0xLjUxMiAwLTIuMTI0LTEuNDQtLjYxMi0xLjQwNC41MDQtMi40ODRsMTYuMTI4LTE2LjEyOHEuNjQ4LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDE2LjEyOCAxNi4xMjhxMS4xMTYgMS4wOC41MDQgMi40ODR6XCIsXCJMRU1PTl9PXCI6XCJNNTAuNjUyLTM0LjcwM3EwLTEuNTg0LS4yNTItNC4wODZ0LS42NDgtMy40NzRxLS40MzItMS4wOC0uNjEyLTEuNTg0dC0uMzI0LTEuMzE0LS4xNDQtMS43NDZxMC0uODI4LjE4LTIuNDY2dC4xOC0yLjQzcTAtMS4zMzItLjM2LTEuOTgtLjE0NC0uMDM2LS40NjgtLjAzNi0uNjg0IDAtMi4wODguMTYydC0yLjEyNC4xNjJxLTIuMTYgMC02LjMzNi0uODY0dC02LjMtLjg2NHEtMS41NDggMC0zLjQwMi40MTR0LTMuMDYuODQ2LTMuMjIyIDEuMjI0cS00LjkzMiAxLjk0NC03LjI3MiAzLjcwOC0zLjQ1NiAyLjYyOC01Ljc0MiA2LjgyMnQtMy4xNjggOC40OTYtLjg4MiA4Ljk0NnEwIDEuNDQuNDUgNC4zMnQuNDUgNC4zNTZxMCAuODI4LS4zOTYgMi4zOTR0LS4zOTYgMi4zNTguNDMyIDEuMzE0IDEuMjI0LjUyMnEuODY0IDAgMi42MS0uMzk2dDIuNjQ2LS4zOTZxMi4wNTIgMCA2LjEwMi41NTh0Ni4xMDIuNTU4cTYuNTE2IDAgMTAuMjI0LTEuMjk2IDQuNjQ0LTEuNjIgOC40NzgtNS40OXQ1Ljk3Ni04LjgzOCAyLjE0Mi05Ljl6bTQuNjA4LS4wNzJxMCA1Ljk0LTIuNTIgMTEuNzl0LTcuMDU2IDEwLjM2OC0xMC4xMTYgNi40OThxLTQuNDY0IDEuNTg0LTExLjczNiAxLjU4NC0yLjA1MiAwLTYuMTItLjUyMnQtNi4wODQtLjUyMnEtLjg2NCAwLTIuNjEuNTIydC0yLjY0Ni41MjJxLTIuNjI4IDAtNC40NDYtMS45OTh0LTEuODE4LTQuNjI2cTAtLjg2NC4zOTYtMi40NDh0LjM5Ni0yLjQxMnEwLTEuNDQtLjQ1LTQuMzM4dC0uNDUtNC4zNzRxMC0zLjk5Ni42NDgtNy44M3QxLjk2Mi03LjU0MiAzLjYxOC02Ljk4NCA1LjQtNS42MTZxMi44MDgtMi4xMjQgOC4zNTItNC4zMiA2Ljk4NC0yLjgwOCAxMS4zNzYtMi44MDggMi4xNiAwIDYuMzE4Ljg2NHQ2LjI0Ni44NjRxLjY4NCAwIDIuMDUyLS4xOHQyLjA4OC0uMThxMi45MTYgMCA0LjI0OCAxLjgxOHQxLjMzMiA0Ljg0MnEwIC44MjgtLjE4IDIuNDQ4dC0uMTggMi40NDhxMCAuMzYuMDM2LjY2NnQuMTA4LjYxMi4xNDQuNDg2LjIzNC41NzYuMjM0LjYxMnEuNTc2IDEuNDQuOSA0LjI2NnQuMzI0IDQuOTE0elwiLFwiUEhPTkVcIjpcIk01MC42ODgtMTkuNzk5cTAgLjk3Mi0uMzYgMi41Mzh0LS43NTYgMi40NjZxLS43NTYgMS44LTQuMzkyIDMuODE2LTMuMzg0IDEuODM2LTYuNjk2IDEuODM2LS45NzIgMC0xLjg5LS4xMjZ0LTIuMDctLjQ1LTEuNzEtLjUyMi0xLjk5OC0uNzM4LTEuNzY0LS42NDhxLTMuNTI4LTEuMjYtNi4zLTIuOTg4LTQuNjA4LTIuODQ0LTkuNTIyLTcuNzU4dC03Ljc1OC05LjUyMnEtMS43MjgtMi43NzItMi45ODgtNi4zLS4xMDgtLjMyNC0uNjQ4LTEuNzY0dC0uNzM4LTEuOTk4LS41MjItMS43MS0uNDUtMi4wNy0uMTI2LTEuODlxMC0zLjMxMiAxLjgzNi02LjY5NiAyLjAxNi0zLjYzNiAzLjgxNi00LjM5Mi45LS4zOTYgMi40NjYtLjc1NnQyLjUzOC0uMzZxLjUwNCAwIC43NTYuMTA4LjY0OC4yMTYgMS45MDggMi43MzYuMzk2LjY4NCAxLjA4IDEuOTQ0dDEuMjYgMi4yODYgMS4xMTYgMS45MjZxLjEwOC4xNDQuNjMuOXQuNzc0IDEuMjc4LjI1MiAxLjAyNnEwIC43Mi0xLjAyNiAxLjh0LTIuMjMyIDEuOTgtMi4yMzIgMS45MDgtMS4wMjYgMS42NTZxMCAuMzI0LjE4LjgxdC4zMDYuNzM4LjUwNC44NjQuNDE0LjY4NHEyLjczNiA0LjkzMiA2LjI2NCA4LjQ2dDguNDYgNi4yNjRxLjA3Mi4wMzYuNjg0LjQxNHQuODY0LjUwNC43MzguMzA2LjgxLjE4cS42NDggMCAxLjY1Ni0xLjAyNnQxLjkwOC0yLjIzMiAxLjk4LTIuMjMyIDEuOC0xLjAyNnEuNTA0IDAgMS4wMjYuMjUydDEuMjc4Ljc3NC45LjYzcS45LjU0IDEuOTI2IDEuMTE2dDIuMjg2IDEuMjYgMS45NDQgMS4wOHEyLjUyIDEuMjYgMi43MzYgMS45MDguMTA4LjI1Mi4xMDguNzU2elwiLFwiU1FVQVJFX09cIjpcIk00MC4zMi01NS4yMjNoLTI5Ljk1MnEtMi4zNzYgMC00LjA2OCAxLjY5MnQtMS42OTIgNC4wNjh2MjkuOTUycTAgMi4zNzYgMS42OTIgNC4wNjh0NC4wNjggMS42OTJoMjkuOTUycTIuMzc2IDAgNC4wNjgtMS42OTJ0MS42OTItNC4wNjh2LTI5Ljk1MnEwLTIuMzc2LTEuNjkyLTQuMDY4dC00LjA2OC0xLjY5MnptMTAuMzY4IDUuNzZ2MjkuOTUycTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0yOS45NTJxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0yOS45NTJxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgyOS45NTJxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkJPT0tNQVJLX09cIjpcIk00MS40NzItNTUuMjIzaC0zNi44NjR2NDQuNzEybDE1LjIyOC0xNC42MTYgMy4yMDQtMy4wNiAzLjIwNCAzLjA2IDE1LjIyOCAxNC42MTZ2LTQ0LjcxMnptLjQzMi00LjYwOHEuODI4IDAgMS41ODQuMzI0IDEuMTg4LjQ2OCAxLjg5IDEuNDc2dC43MDIgMi4yMzJ2NDYuNDA0cTAgMS4yMjQtLjcwMiAyLjIzMnQtMS44OSAxLjQ3NnEtLjY4NC4yODgtMS41ODQuMjg4LTEuNzI4IDAtMi45ODgtMS4xNTJsLTE1Ljg3Ni0xNS4yNjQtMTUuODc2IDE1LjI2NHEtMS4yOTYgMS4xODgtMi45ODggMS4xODgtLjgyOCAwLTEuNTg0LS4zMjQtMS4xODgtLjQ2OC0xLjg5LTEuNDc2dC0uNzAyLTIuMjMydi00Ni40MDRxMC0xLjIyNC43MDItMi4yMzJ0MS44OS0xLjQ3NnEuNzU2LS4zMjQgMS41ODQtLjMyNGgzNy43Mjh6XCIsXCJQSE9ORV9TUVVBUkVcIjpcIk00Ni4wOC0yMS40OTFxMC0uMzk2LS4wNzItLjU3Ni0uMTA4LS4yODgtMS4zODYtMS4wNjJ0LTMuMTg2LTEuNzgybC0xLjkwOC0xLjA0NHEtLjE4LS4xMDgtLjY4NC0uNDY4dC0uOS0uNTQtLjc1Ni0uMThxLS42NDggMC0xLjY5MiAxLjE3dC0yLjA1MiAyLjM1OC0xLjU4NCAxLjE4OHEtLjI1MiAwLS41OTQtLjEyNnQtLjU1OC0uMjM0LS42MTItLjM0Mi0uNTA0LS4zMDZxLTMuNTY0LTEuOTgtNi4xMzgtNC41NTR0LTQuNTU0LTYuMTM4cS0uMDcyLS4xMDgtLjMwNi0uNTA0dC0uMzQyLS42MTItLjIzNC0uNTU4LS4xMjYtLjU5NHEwLS40NjguNzM4LTEuMjA2dDEuNjItMS4zODYgMS42Mi0xLjQyMi43MzgtMS4zMTRxMC0uMzYtLjE4LS43NTZ0LS41NC0uOS0uNDY4LS42ODRxLS4xMDgtLjIxNi0uNTQtMS4wMjZ0LS45LTEuNjM4LS45NTQtMS43MS0uOS0xLjQ1OC0uNTk0LS42NDgtLjU3Ni0uMDcycS0xLjcyOCAwLTMuNjM2Ljc5Mi0xLjY1Ni43NTYtMi44OCAzLjQwMnQtMS4yMjQgNC42OThxMCAuNTc2LjA5IDEuMjI0dC4xOCAxLjA5OC4zMjQgMS4xODguMzYgMS4wNjIuNDUgMS4xODguMzk2IDEuMDhxMi4xNiA1LjkwNCA3Ljc5NCAxMS41Mzh0MTEuNTM4IDcuNzk0cS4yMTYuMDcyIDEuMDguMzk2dDEuMTg4LjQ1IDEuMDYyLjM2IDEuMTg4LjMyNCAxLjA5OC4xOCAxLjIyNC4wOXEyLjA1MiAwIDQuNjk4LTEuMjI0dDMuNDAyLTIuODhxLjc5Mi0xLjkwOC43OTItMy42MzZ6bTkuMjE2LTI3Ljk3MnYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2cTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCIsXCJUV0lUVEVSXCI6XCJNNTguMzItNDkuNzUxcS0yLjQxMiAzLjUyOC01LjgzMiA2LjAxMi4wMzYuNTA0LjAzNiAxLjUxMiAwIDQuNjgtMS4zNjggOS4zNDJ0LTQuMTU4IDguOTQ2LTYuNjQyIDcuNTc4LTkuMjg4IDUuMjU2LTExLjYyOCAxLjk2MnEtOS43NTYgMC0xNy44NTYtNS4yMiAxLjI2LjE0NCAyLjgwOC4xNDQgOC4xIDAgMTQuNDM2LTQuOTY4LTMuNzgtLjA3Mi02Ljc2OC0yLjMyMnQtNC4xMDQtNS43NDJxMS4xODguMTggMi4xOTYuMTggMS41NDggMCAzLjA2LS4zOTYtNC4wMzItLjgyOC02LjY3OC00LjAxNHQtMi42NDYtNy4zOTh2LS4xNDRxMi40NDggMS4zNjggNS4yNTYgMS40NzYtMi4zNzYtMS41ODQtMy43OC00LjE0dC0xLjQwNC01LjU0NHEwLTMuMTY4IDEuNTg0LTUuODY4IDQuMzU2IDUuMzY0IDEwLjYwMiA4LjU4NnQxMy4zNzQgMy41ODJxLS4yODgtMS4zNjgtLjI4OC0yLjY2NCAwLTQuODI0IDMuNDAyLTguMjI2dDguMjI2LTMuNDAycTUuMDQgMCA4LjQ5NiAzLjY3MiAzLjkyNC0uNzU2IDcuMzgtMi44MDgtMS4zMzIgNC4xNC01LjExMiA2LjQwOCAzLjM0OC0uMzYgNi42OTYtMS44elwiLFwiRkFDRUJPT0tfRlwiOlwiTTM0LjUyNC02NC4wMDd2OS41MDRoLTUuNjUycS0zLjA5NiAwLTQuMTc2IDEuMjk2dC0xLjA4IDMuODg4djYuODA0aDEwLjU0OGwtMS40MDQgMTAuNjU2aC05LjE0NHYyNy4zMjRoLTExLjAxNnYtMjcuMzI0aC05LjE4di0xMC42NTZoOS4xOHYtNy44NDhxMC02LjY5NiAzLjc0NC0xMC4zODZ0OS45NzItMy42OXE1LjI5MiAwIDguMjA4LjQzMnpcIixcIkdJVEhVQlwiOlwiTTI3LjY0OC01OS44MzFxNy41MjQgMCAxMy44NzggMy43MDh0MTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44NzhxMCA5LjAzNi01LjI3NCAxNi4yNTR0LTEzLjYyNiA5Ljk5cS0uOTcyLjE4LTEuNDQtLjI1MnQtLjQ2OC0xLjA4cTAtLjEwOC4wMTgtMi43NTR0LjAxOC00Ljg0MnEwLTMuNDkyLTEuODcyLTUuMTEyIDIuMDUyLS4yMTYgMy42OS0uNjQ4dDMuMzg0LTEuNDA0IDIuOTE2LTIuMzk0IDEuOTA4LTMuNzguNzM4LTUuNDE4cTAtNC4yODQtMi44NDQtNy40MTYgMS4zMzItMy4yNzYtLjI4OC03LjM0NC0xLjAwOC0uMzI0LTIuOTE2LjM5NnQtMy4zMTIgMS41ODRsLTEuMzY4Ljg2NHEtMy4zNDgtLjkzNi02LjkxMi0uOTM2dC02LjkxMi45MzZxLS41NzYtLjM5Ni0xLjUzLS45NzJ0LTMuMDA2LTEuMzg2LTMuMDYtLjQ4NnEtMS42MiA0LjA2OC0uMjg4IDcuMzQ0LTIuODQ0IDMuMTMyLTIuODQ0IDcuNDE2IDAgMy4wNi43MzggNS40dDEuODkgMy43OCAyLjg5OCAyLjQxMiAzLjM4NCAxLjQwNCAzLjY5LjY0OHEtMS40MDQgMS4yOTYtMS43NjQgMy43MDgtLjc1Ni4zNi0xLjYyLjU0dC0yLjA1Mi4xOC0yLjM1OC0uNzc0LTEuOTk4LTIuMjVxLS42ODQtMS4xNTItMS43NDYtMS44NzJ0LTEuNzgyLS44NjRsLS43Mi0uMTA4cS0uNzU2IDAtMS4wNDQuMTYydC0uMTguNDE0LjMyNC41MDQuNDY4LjQzMmwuMjUyLjE4cS43OTIuMzYgMS41NjYgMS4zNjh0MS4xMzQgMS44MzZsLjM2LjgyOHEuNDY4IDEuMzY4IDEuNTg0IDIuMjE0dDIuNDEyIDEuMDggMi41MDIuMjUyIDEuOTk4LS4xMjZsLjgyOC0uMTQ0cTAgMS4zNjguMDE4IDMuMTg2dC4wMTggMS45NjJxMCAuNjQ4LS40NjggMS4wOHQtMS40NC4yNTJxLTguMzUyLTIuNzcyLTEzLjYyNi05Ljk5dC01LjI3NC0xNi4yNTRxMC03LjUyNCAzLjcwOC0xMy44Nzh0MTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDh6bS0xNy4xNzIgMzkuNzA4cS4xMDgtLjI1Mi0uMjUyLS40MzItLjM2LS4xMDgtLjQ2OC4wNzItLjEwOC4yNTIuMjUyLjQzMi4zMjQuMjE2LjQ2OC0uMDcyem0xLjExNiAxLjIyNHEuMjUyLS4xOC0uMDcyLS41NzYtLjM2LS4zMjQtLjU3Ni0uMTA4LS4yNTIuMTguMDcyLjU3Ni4zNi4zNi41NzYuMTA4em0xLjA4IDEuNjJxLjMyNC0uMjUyIDAtLjY4NC0uMjg4LS40NjgtLjYxMi0uMjE2LS4zMjQuMTggMCAuNjQ4dC42MTIuMjUyem0xLjUxMiAxLjUxMnEuMjg4LS4yODgtLjE0NC0uNjg0LS40MzItLjQzMi0uNzItLjEwOC0uMzI0LjI4OC4xNDQuNjg0LjQzMi40MzIuNzIuMTA4em0yLjA1Mi45cS4xMDgtLjM5Ni0uNDY4LS41NzYtLjU0LS4xNDQtLjY4NC4yNTJ0LjQ2OC41NHEuNTQuMjE2LjY4NC0uMjE2em0yLjI2OC4xOHEwLS40NjgtLjYxMi0uMzk2LS41NzYgMC0uNTc2LjM5NiAwIC40NjguNjEyLjM5Ni41NzYgMCAuNTc2LS4zOTZ6bTIuMDg4LS4zNnEtLjA3Mi0uMzk2LS42NDgtLjMyNC0uNTc2LjEwOC0uNTA0LjU0dC42NDguMjg4LjUwNC0uNTA0elwiLFwiVU5MT0NLXCI6XCJNNTkuOTA0LTQzLjcwM3Y5LjIxNnEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMi4zMDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtOS4yMTZxMC0zLjgxNi0yLjctNi41MTZ0LTYuNTE2LTIuNy02LjUxNiAyLjctMi43IDYuNTE2djYuOTEyaDMuNDU2cTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHYyMC43MzZxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMzQuNTZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTIwLjczNnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMjQuMTkydi02LjkxMnEwLTYuNjYgNC43MzQtMTEuMzk0dDExLjM5NC00LjczNCAxMS4zOTQgNC43MzQgNC43MzQgMTEuMzk0elwiLFwiQ1JFRElUX0NBUkRcIjpcIk02My4zNi01OS44MzFxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHY0My43NzZxMCAyLjM3Ni0xLjY5MiA0LjA2OHQtNC4wNjggMS42OTJoLTU3LjZxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di00My43NzZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5Mmg1Ny42em0tNTcuNiA0LjYwOHEtLjQ2OCAwLS44MS4zNDJ0LS4zNDIuODF2OC4wNjRoNTkuOTA0di04LjA2NHEwLS40NjgtLjM0Mi0uODF0LS44MS0uMzQyaC01Ny42em01Ny42IDQ2LjA4cS40NjggMCAuODEtLjM0MnQuMzQyLS44MXYtMjEuODg4aC01OS45MDR2MjEuODg4cTAgLjQ2OC4zNDIuODF0LjgxLjM0Mmg1Ny42em0tNTQuMTQ0LTQuNjA4di00LjYwOGg5LjIxNnY0LjYwOGgtOS4yMTZ6bTEzLjgyNCAwdi00LjYwOGgxMy44MjR2NC42MDhoLTEzLjgyNHpcIixcIlJTU1wiOlwiTTEzLjgyNC0xNi4wNTVxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptMTguNDMyIDQuNDI4cS4wNzIgMS4wMDgtLjYxMiAxLjcyOC0uNjQ4Ljc1Ni0xLjY5Mi43NTZoLTQuODZxLS45IDAtMS41NDgtLjU5NHQtLjcyLTEuNDk0cS0uNzkyLTguMjQ0LTYuNjQyLTE0LjA5NHQtMTQuMDk0LTYuNjQycS0uOS0uMDcyLTEuNDk0LS43MnQtLjU5NC0xLjU0OHYtNC44NnEwLTEuMDQ0Ljc1Ni0xLjY5Mi42MTItLjYxMiAxLjU0OC0uNjEyaC4xOHE1Ljc2LjQ2OCAxMS4wMTYgMi44OTh0OS4zMjQgNi41MzRxNC4xMDQgNC4wNjggNi41MzQgOS4zMjR0Mi44OTggMTEuMDE2em0xOC40MzIuMDcycS4wNzIuOTcyLS42NDggMS42OTItLjY0OC43Mi0xLjY1Ni43MmgtNS4xNDhxLS45MzYgMC0xLjYwMi0uNjN0LS43MDItMS41M3EtLjQzMi03Ljc0LTMuNjM2LTE0LjcwNnQtOC4zMzQtMTIuMDk2LTEyLjA5Ni04LjMzNC0xNC43MDYtMy42NzJxLS45LS4wMzYtMS41My0uNzAydC0uNjMtMS41NjZ2LTUuMTQ4cTAtMS4wMDguNzItMS42NTYuNjQ4LS42NDggMS41ODQtLjY0OGguMTA4cTkuNDMyLjQ2OCAxOC4wNTQgNC4zMnQxNS4zMTggMTAuNTg0cTYuNzMyIDYuNjk2IDEwLjU4NCAxNS4zMTh0NC4zMiAxOC4wNTR6XCIsXCJIRERfT1wiOlwiTTM3LjQ0LTIwLjY2M3EwIDEuMTg4LS44NDYgMi4wMzR0LTIuMDM0Ljg0Ni0yLjAzNC0uODQ2LS44NDYtMi4wMzQuODQ2LTIuMDM0IDIuMDM0LS44NDYgMi4wMzQuODQ2Ljg0NiAyLjAzNHptOS4yMTYgMHEwIDEuMTg4LS44NDYgMi4wMzR0LTIuMDM0Ljg0Ni0yLjAzNC0uODQ2LS44NDYtMi4wMzQuODQ2LTIuMDM0IDIuMDM0LS44NDYgMi4wMzQuODQ2Ljg0NiAyLjAzNHptNC4wMzIgNS43NnYtMTEuNTJxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtNDMuNzc2cS0uNDY4IDAtLjgxLjM0MnQtLjM0Mi44MXYxMS41MnEwIC40NjguMzQyLjgxdC44MS4zNDJoNDMuNzc2cS40NjggMCAuODEtLjM0MnQuMzQyLS44MXptLTQ0LjI4LTE3LjI4aDQyLjQ4bC01LjY1Mi0xNy4zNTJxLS4xNDQtLjQ2OC0uNTc2LS43NzR0LS45MzYtLjMwNmgtMjguMTUycS0uNTA0IDAtLjkzNi4zMDZ0LS41NzYuNzc0em00OC44ODggNS43NnYxMS41MnEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5MmgtNDMuNzc2cS0yLjM3NiAwLTQuMDY4LTEuNjkydC0xLjY5Mi00LjA2OHYtMTEuNTJxMC0uOS41NzYtMi43bDcuMDkyLTIxLjgxNnEuNjEyLTEuOTA4IDIuMjY4LTMuMDk2dDMuNjM2LTEuMTg4aDI4LjE1MnExLjk4IDAgMy42MzYgMS4xODh0Mi4yNjggMy4wOTZsNy4wOTIgMjEuODE2cS41NzYgMS44LjU3NiAyLjd6XCIsXCJCVUxMSE9STlwiOlwiTTU5LjkwNC00MS4zOTlxMS45MDggMCAzLjI1OCAxLjM1dDEuMzUgMy4yNTgtMS4zNSAzLjI1OC0zLjI1OCAxLjM1djEzLjgyNHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhxLTE1LjAxMi0xMi40OTItMjkuMjMyLTEzLjY4LTIuMDg4LjY4NC0zLjI3NiAyLjM3NnQtMS4xMTYgMy42MTggMS40NCAzLjMzcS0uNzIgMS4xODgtLjgyOCAyLjM1OHQuMjE2IDIuMDg4IDEuMjA2IDEuOTggMS43MjggMS44IDIuMjE0IDEuODE4cS0xLjA0NCAyLjA4OC00LjAxNCAyLjk4OHQtNi4wNjYuNDE0LTQuNzUyLTEuOTk4cS0uMjUyLS44MjgtMS4wNjItMy4xNXQtMS4xNTItMy40MDItLjgyOC0zLjIwNC0uNTQtMy42MzYuMTI2LTMuNTQ2Ljc5Mi0zLjk3OGgtNC4zOTJxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di02LjkxMnEwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyaDE3LjI4cTE1LjY2IDAgMzIuMjU2LTEzLjgyNCAxLjg3MiAwIDMuMjQgMS4zNjh0MS4zNjggMy4yNHYxMy44MjR6bS00LjYwOCAyMS43NDR2LTM0LjM0NHEtMTQuMTg0IDEwLjg3Mi0yNy42NDggMTIuMzQ4djkuNzJxMTMuNTcyIDEuNTEyIDI3LjY0OCAxMi4yNzZ6XCIsXCJCRUxMX09cIjpcIk0zMi44MzItMy4zODNxMC0uNTc2LS41NzYtLjU3Ni0yLjEyNCAwLTMuNjU0LTEuNTN0LTEuNTMtMy42NTRxMC0uNTc2LS41NzYtLjU3NnQtLjU3Ni41NzZxMCAyLjYyOCAxLjg1NCA0LjQ4MnQ0LjQ4MiAxLjg1NHEuNTc2IDAgLjU3Ni0uNTc2em0tMjMuOTc2LTEwLjM2OGg0Ni44cS05LjU3Ni0xMC44LTkuNTc2LTI5Ljk1MiAwLTEuODM2LS44NjQtMy43OHQtMi40ODQtMy43MDgtNC4zNzQtMi44OTgtNi4xMDItMS4xMzQtNi4xMDIgMS4xMzQtNC4zNzQgMi44OTgtMi40ODQgMy43MDgtLjg2NCAzLjc4cTAgMTkuMTUyLTkuNTc2IDI5Ljk1MnptNTMuMzUyIDBxMCAxLjg3Mi0xLjM2OCAzLjI0dC0zLjI0IDEuMzY4aC0xNi4xMjhxMCAzLjgxNi0yLjcgNi41MTZ0LTYuNTE2IDIuNy02LjUxNi0yLjctMi43LTYuNTE2aC0xNi4xMjhxLTEuODcyIDAtMy4yNC0xLjM2OHQtMS4zNjgtMy4yNHExLjgtMS41MTIgMy4yNzYtMy4xNjh0My4wNi00LjMwMiAyLjY4Mi01LjcwNiAxLjgtNy40MTYuNzAyLTkuMzZxMC01LjQ3MiA0LjIxMi0xMC4xN3QxMS4wNTItNS43MDZxLS4yODgtLjY4NC0uMjg4LTEuNDA0IDAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOCAyLjQ0OCAxLjAwOCAxLjAwOCAyLjQ0OHEwIC43Mi0uMjg4IDEuNDA0IDYuODQgMS4wMDggMTEuMDUyIDUuNzA2dDQuMjEyIDEwLjE3cTAgNS4wMDQuNzAyIDkuMzZ0MS44IDcuNDE2IDIuNjgyIDUuNzA2IDMuMDYgNC4zMDIgMy4yNzYgMy4xNjh6XCIsXCJDRVJUSUZJQ0FURVwiOlwiTTQ5LjUzNi0zMi4xODNsNC45NjggNC44NnExLjA4IDEuMDA4LjcyIDIuNTItLjQzMiAxLjQ3Ni0xLjg3MiAxLjgzNmwtNi43NjggMS43MjggMS45MDggNi42OTZxLjQzMiAxLjQ3Ni0uNjg0IDIuNTItMS4wNDQgMS4xMTYtMi41Mi42ODRsLTYuNjk2LTEuOTA4LTEuNzI4IDYuNzY4cS0uMzYgMS40NC0xLjgzNiAxLjg3Mi0uNDMyLjA3Mi0uNjg0LjA3Mi0xLjExNiAwLTEuODM2LS43OTJsLTQuODYtNC45NjgtNC44NiA0Ljk2OHEtMS4wMDggMS4wOC0yLjUyLjcyLTEuNDc2LS4zOTYtMS44MzYtMS44NzJsLTEuNzI4LTYuNzY4LTYuNjk2IDEuOTA4cS0xLjQ3Ni40MzItMi41Mi0uNjg0LTEuMTE2LTEuMDQ0LS42ODQtMi41MmwxLjkwOC02LjY5Ni02Ljc2OC0xLjcyOHEtMS40NC0uMzYtMS44NzItMS44MzYtLjM2LTEuNTEyLjcyLTIuNTJsNC45NjgtNC44Ni00Ljk2OC00Ljg2cS0xLjA4LTEuMDA4LS43Mi0yLjUyLjQzMi0xLjQ3NiAxLjg3Mi0xLjgzNmw2Ljc2OC0xLjcyOC0xLjkwOC02LjY5NnEtLjQzMi0xLjQ3Ni42ODQtMi41MiAxLjA0NC0xLjExNiAyLjUyLS42ODRsNi42OTYgMS45MDggMS43MjgtNi43NjhxLjM2LTEuNDc2IDEuODM2LTEuODM2IDEuNDc2LS40MzIgMi41Mi42ODRsNC44NiA1LjAwNCA0Ljg2LTUuMDA0cTEuMDQ0LTEuMDggMi41Mi0uNjg0IDEuNDc2LjM2IDEuODM2IDEuODM2bDEuNzI4IDYuNzY4IDYuNjk2LTEuOTA4cTEuNDc2LS40MzIgMi41Mi42ODQgMS4xMTYgMS4wNDQuNjg0IDIuNTJsLTEuOTA4IDYuNjk2IDYuNzY4IDEuNzI4cTEuNDQuMzYgMS44NzIgMS44MzYuMzYgMS41MTItLjcyIDIuNTJ6XCIsXCJIQU5EX09fUklHSFRcIjpcIk05LjIxNi0xNi4wNTVxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42MiAxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTUwLjY4OC0yMC43MzZxMC0xLjgzNi0xLjQwNC0zLjIyMnQtMy4yMDQtMS4zODZoLTIwLjczNnEwLS43Mi41NC0xLjc0NnQxLjE4OC0xLjk4IDEuMTg4LTIuNDQ4LjU0LTMuMDQycTAtMi40MTItMS42MDItMy41MXQtNC4xNTgtMS4wOThxLS44NjQgMC0zLjI0IDUuMDA0LS44NjQgMS41ODQtMS4zMzIgMi4zNC0xLjQ0IDIuMzA0LTQuMDMyIDUuMjItMi41NTYgMi45MTYtMy42MzYgMy44MTYtMi40ODQgMi4wNTItNS4wNCAyLjA1MmgtMS4xNTJ2MjMuMDRoMS4xNTJxMi41OTIgMCA2LjAxMiAxLjE1MnQ2Ljk2NiAyLjMwNCA2LjQ2MiAxLjE1MnE2LjgwNCAwIDYuODA0LTYuMDEyIDAtLjkzNi0uMTgtMi4wMTYgMS4wOC0uNTc2IDEuNzEtMS44OXQuNjMtMi42NDYtLjY0OC0yLjQ4NHExLjkwOC0xLjggMS45MDgtNC4yODQgMC0uOS0uMzYtMS45OTh0LS45LTEuNzFoMTEuOTE2cTEuODcyIDAgMy4yNC0xLjM2OHQxLjM2OC0zLjI0em00LjYwOC0uMDM2cTAgMy43OC0yLjcxOCA2LjUxNnQtNi40OTggMi43MzZoLTYuMDg0cS0uMTQ0IDIuMjMyLTEuMzMyIDQuMjg0LjEwOC43NTYuMTA4IDEuNTQ4IDAgMy42MzYtMi4xNiA2LjQwOC4wMzYgNS4wMDQtMy4wNiA3LjkwMnQtOC4xNzIgMi44OThxLTQuNzg4IDAtMTEuNTkyLTIuNDg0LTUuOTA0LTIuMTI0LTguMDI4LTIuMTI0aC0xMC4zNjhxLTEuOTA4IDAtMy4yNTgtMS4zNXQtMS4zNS0zLjI1OHYtMjMuMDRxMC0xLjkwOCAxLjM1LTMuMjU4dDMuMjU4LTEuMzVoMTAuMzY4cS4zNiAwIC43NzQtLjE2MnQuODQ2LS41MDQuODEtLjY0OC44NjQtLjgxLjczOC0uNzc0LjY4NC0uNzc0LjUwNC0uNjEycTIuMzQtMi42NjQgMy42LTQuNjQ0LjQ2OC0uNzU2IDEuMTg4LTIuMjMydDEuMzMyLTIuNTkyIDEuNDU4LTIuMjY4IDEuOTgtMS43ODIgMi41MDItLjYzcTQuNSAwIDcuNDM0IDIuNDEydDIuOTM0IDYuODA0cTAgMi40NDgtLjc5MiA0LjYwOGgxMy40NjRxMy43NDQgMCA2LjQ4IDIuNzM2dDIuNzM2IDYuNDQ0elwiLFwiSEFORF9PX0xFRlRcIjpcIk00OS41MzYtMTMuNzUxaDEuMTUydi0yMy4wNGgtMS4xNTJxLTEuMjYgMC0yLjQzLS40MzJ0LTIuMjUtMS4zMzItMS44LTEuNjU2LTEuNzY0LTEuOTQ0bC0uMTI2LS4xNjItLjE0NC0uMTYyLS4xNjItLjE4cS0yLjU5Mi0yLjkxNi00LjAzMi01LjIyLS41MDQtLjc5Mi0xLjM2OC0yLjQ0OC0uMDM2LS4xMDgtLjM3OC0uODF0LS42NjYtMS4yOTYtLjcyLTEuMjc4LS43NzQtMS4wOTgtLjY2Ni0uNDE0cS0yLjU1NiAwLTQuMTU4IDEuMDk4dC0xLjYwMiAzLjUxcTAgMS41NDguNTQgMy4wNDJ0MS4xODggMi40NDggMS4xODggMS45OC41NCAxLjc0NmgtMjAuNzM2cS0xLjggMC0zLjIwNCAxLjM4NnQtMS40MDQgMy4yMjJxMCAxLjg3MiAxLjM2OCAzLjI0dDMuMjQgMS4zNjhoMTEuOTE2cS0uNTQuNjEyLS45IDEuNzF0LS4zNiAxLjk5OHEwIDIuNDg0IDEuOTA4IDQuMjg0LS42NDggMS4xNTItLjY0OCAyLjQ4NHQuNjMgMi42NDYgMS43MSAxLjg5cS0uMTQ0Ljg2NC0uMTQ0IDIuMDE2IDAgMy4wNiAxLjc0NiA0LjUzNnQ0Ljg3OCAxLjQ3NnEzLjAyNCAwIDYuNTg4LTEuMTUydDYuOTg0LTIuMzA0IDYuMDEyLTEuMTUyem0xMC4zNjgtMi4zMDRxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42MiAxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTQuNjA4LTIwLjczNnYyMy4wNHEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzVoLTEwLjM2OHEtMi4xMjQgMC04LjAyOCAyLjEyNC02Ljg0IDIuNDg0LTExLjQxMiAyLjQ4NC01LjExMiAwLTguMjgtMi43OXQtMy4xMzItNy44M2wuMDM2LS4xOHEtMi4xOTYtMi43MzYtMi4xOTYtNi40MDggMC0uNzkyLjEwOC0xLjU0OC0xLjE4OC0yLjA1Mi0xLjMzMi00LjI4NGgtNi4wODRxLTMuNzggMC02LjQ5OC0yLjczNnQtMi43MTgtNi41MTZxMC0zLjcwOCAyLjczNi02LjQ0NHQ2LjQ4LTIuNzM2aDEzLjQ2NHEtLjc5Mi0yLjE2LS43OTItNC42MDggMC00LjM5MiAyLjkzNC02LjgwNHQ3LjQzNC0yLjQxMnExLjM2OCAwIDIuNTAyLjYzdDEuOTggMS43ODIgMS40NTggMi4yNjggMS4zMzIgMi41OTIgMS4xODggMi4yMzJxMS4yNiAxLjk4IDMuNiA0LjY0NC4wNzIuMTA4LjUwNC42MTJ0LjY4NC43NzQuNzM4Ljc3NC44NjQuODEuODEuNjQ4Ljg0Ni41MDQuNzc0LjE2MmgxMC4zNjhxMS45MDggMCAzLjI1OCAxLjM1dDEuMzUgMy4yNTh6XCIsXCJIQU5EX09fVVBcIjpcIk00Ni4wOC02LjgzOXEwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODQtMS42Mi42ODQtLjY4NCAxLjYyLjY4NCAxLjYyIDEuNjIuNjg0IDEuNjItLjY4NC42ODQtMS42MnptNC42MDgtMjcuNTA0cTAtNi44MDQtNi4wMTItNi44MDQtLjkzNiAwLTIuMDE2LjE4LS41NzYtMS4wOC0xLjg5LTEuNzF0LTIuNjQ2LS42My0yLjQ4NC42NDhxLTEuOC0xLjkwOC00LjI4NC0xLjkwOC0uOSAwLTEuOTk4LjM2dC0xLjcxLjl2LTExLjkxNnEwLTEuODcyLTEuMzY4LTMuMjR0LTMuMjQtMS4zNjhxLTEuODM2IDAtMy4yMjIgMS40MDR0LTEuMzg2IDMuMjA0djIwLjczNnEtLjcyIDAtMS43NDYtLjU0dC0xLjk4LTEuMTg4LTIuNDQ4LTEuMTg4LTMuMDQyLS41NHEtMi40MTIgMC0zLjUxIDEuNjAydC0xLjA5OCA0LjE1OHEwIC44NjQgNS4wMDQgMy4yNCAxLjU4NC44NjQgMi4zNCAxLjMzMiAyLjMwNCAxLjQ0IDUuMjIgNC4wMzIgMi45MTYgMi41NTYgMy44MTYgMy42MzYgMi4wNTIgMi40ODQgMi4wNTIgNS4wNHYxLjE1MmgyMy4wNHYtMS4xNTJxMC0yLjU5MiAxLjE1Mi02LjAxMnQyLjMwNC02Ljk2NiAxLjE1Mi02LjQ2MnptNC42MDgtLjE4cTAgNC43ODgtMi40ODQgMTEuNTkyLTIuMTI0IDUuOTA0LTIuMTI0IDguMDI4djEwLjM2OHEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzVoLTIzLjA0cS0xLjkwOCAwLTMuMjU4LTEuMzV0LTEuMzUtMy4yNTh2LTEwLjM2OHEwLS4zNi0uMTYyLS43NzR0LS41MDQtLjg0Ni0uNjQ4LS44MS0uODEtLjg2NC0uNzc0LS43MzgtLjc3NC0uNjg0LS42MTItLjUwNHEtMi42NjQtMi4zNC00LjY0NC0zLjYtLjc1Ni0uNDY4LTIuMjMyLTEuMTg4dC0yLjU5Mi0xLjMzMi0yLjI2OC0xLjQ1OC0xLjc4Mi0xLjk4LS42My0yLjUwMnEwLTQuNSAyLjQxMi03LjQzNHQ2LjgwNC0yLjkzNHEyLjQ0OCAwIDQuNjA4Ljc5MnYtMTMuNDY0cTAtMy43NDQgMi43MzYtNi40OHQ2LjQ0NC0yLjczNnEzLjc4IDAgNi41MTYgMi43MTh0Mi43MzYgNi40OTh2Ni4wODRxMi4yMzIuMTQ0IDQuMjg0IDEuMzMyLjc1Ni0uMTA4IDEuNTQ4LS4xMDggMy42MzYgMCA2LjQwOCAyLjE2IDUuMDA0LS4wMzYgNy45MDIgMy4wNnQyLjg5OCA4LjE3MnpcIixcIkhBTkRfT19ET1dOXCI6XCJNNTAuNjg4LTI5Ljg3OXEwLTMuMDI0LTEuMTUyLTYuNTg4dC0yLjMwNC02Ljk4NC0xLjE1Mi02LjAxMnYtMS4xNTJoLTIzLjA0djEuMTUycTAgMS4yNi0uNDMyIDIuNDN0LTEuMzMyIDIuMjUtMS42NTYgMS44LTEuOTQ0IDEuNzY0cS0uMzI0LjI4OC0uNTA0LjQzMi0yLjkxNiAyLjU5Mi01LjIyIDQuMDMyLS43OTIuNTA0LTIuNDQ4IDEuMzY4LS4xMDguMDM2LS44MS4zNzh0LTEuMjk2LjY2Ni0xLjI3OC43Mi0xLjA5OC43NzQtLjQxNC42NjZxMCAyLjU1NiAxLjA5OCA0LjE1OHQzLjUxIDEuNjAycTEuNTQ4IDAgMy4wNDItLjU0dDIuNDQ4LTEuMTg4IDEuOTgtMS4xODggMS43NDYtLjU0djIwLjczNnEwIDEuOCAxLjM4NiAzLjIwNHQzLjIyMiAxLjQwNHExLjg3MiAwIDMuMjQtMS4zNjh0MS4zNjgtMy4yNHYtMTEuOTE2cTEuNjU2IDEuMjYgMy43MDggMS4yNiAyLjQ4NCAwIDQuMjg0LTEuOTA4IDEuMTUyLjY0OCAyLjQ4NC42NDh0Mi42NDYtLjYzIDEuODktMS43MXEuODY0LjE0NCAyLjAxNi4xNDQgMy4wNiAwIDQuNTM2LTEuNzQ2dDEuNDc2LTQuODc4em0tNC42MDgtMjcuNjQ4cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NC0xLjYyLjY4NC0uNjg0IDEuNjIuNjg0IDEuNjIgMS42Mi42ODQgMS42Mi0uNjg0LjY4NC0xLjYyem05LjIxNiAyNy41MDRxMCA1LjExMi0yLjc5IDguMjh0LTcuODMgMy4xMzJsLS4xOC0uMDM2cS0yLjczNiAyLjE5Ni02LjQwOCAyLjE5Ni0uNzkyIDAtMS41NDgtLjEwOC0xLjk0NCAxLjA4LTQuMjg0IDEuMzMydjYuMDg0cTAgMy43OC0yLjczNiA2LjQ5OHQtNi41MTYgMi43MThxLTMuNzA4IDAtNi40NDQtMi43MzZ0LTIuNzM2LTYuNDh2LTEzLjQ2NHEtMS45NDQuNzkyLTQuNjA4Ljc5Mi00LjM1NiAwLTYuNzg2LTIuOTM0dC0yLjQzLTcuNDM0cTAtMS4zNjguNjMtMi41MDJ0MS43ODItMS45OCAyLjI2OC0xLjQ1OCAyLjU5Mi0xLjMzMiAyLjIzMi0xLjE4OHExLjk4LTEuMjYgNC42NDQtMy42LjEwOC0uMDcyLjYxMi0uNTA0dC43NzQtLjY4NC43NzQtLjczOC44MS0uODY0LjY0OC0uODEuNTA0LS44NDYuMTYyLS43NzR2LTEwLjM2OHEwLTEuOTA4IDEuMzUtMy4yNTh0My4yNTgtMS4zNWgyMy4wNHExLjkwOCAwIDMuMjU4IDEuMzV0MS4zNSAzLjI1OHYxMC4zNjhxMCAyLjEyNCAyLjEyNCA4LjAyOCAyLjQ4NCA2Ljg0IDIuNDg0IDExLjQxMnpcIixcIkFSUk9XX0NJUkNMRV9MRUZUXCI6XCJNNDYuMDgtMjkuODc5di00LjYwOHEwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODRoLTE4LjA3Mmw2LjgwNC02LjgwNHEuNjg0LS42ODQuNjg0LTEuNjJ0LS42ODQtMS42MmwtMy4yNzYtMy4yNzZxLS42NDgtLjY0OC0xLjYyLS42NDh0LTEuNjIuNjQ4bC0xMy4wMzIgMTMuMDMyLTMuMjc2IDMuMjc2cS0uNjQ4LjY0OC0uNjQ4IDEuNjJ0LjY0OCAxLjYybDMuMjc2IDMuMjc2IDEzLjAzMiAxMy4wMzJxLjY0OC42NDggMS42Mi42NDh0MS42Mi0uNjQ4bDMuMjc2LTMuMjc2cS42NDgtLjY0OC42NDgtMS42MnQtLjY0OC0xLjYybC02LjgwNC02LjgwNGgxOC4wNzJxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ6bTkuMjE2LTIuMzA0cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkFSUk9XX0NJUkNMRV9SSUdIVFwiOlwiTTQ2LjI2LTMyLjE4M3EwLS45NzItLjY0OC0xLjYybC0zLjI3Ni0zLjI3Ni0xMy4wMzItMTMuMDMycS0uNjQ4LS42NDgtMS42Mi0uNjQ4dC0xLjYyLjY0OGwtMy4yNzYgMy4yNzZxLS42NDguNjQ4LS42NDggMS42MnQuNjQ4IDEuNjJsNi44MDQgNi44MDRoLTE4LjA3MnEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2NC42MDhxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDE4LjA3MmwtNi44MDQgNi44MDRxLS42ODQuNjg0LS42ODQgMS42MnQuNjg0IDEuNjJsMy4yNzYgMy4yNzZxLjY0OC42NDggMS42Mi42NDh0MS42Mi0uNjQ4bDEzLjAzMi0xMy4wMzIgMy4yNzYtMy4yNzZxLjY0OC0uNjQ4LjY0OC0xLjYyem05LjAzNiAwcTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkFSUk9XX0NJUkNMRV9VUFwiOlwiTTQ2LjIyNC0zMi4yMTlxMC0uOTcyLS42NDgtMS42MmwtMTMuMDMyLTEzLjAzMi0zLjI3Ni0zLjI3NnEtLjY0OC0uNjQ4LTEuNjItLjY0OHQtMS42Mi42NDhsLTMuMjc2IDMuMjc2LTEzLjAzMiAxMy4wMzJxLS42NDguNjQ4LS42NDggMS42MnQuNjQ4IDEuNjJsMy4yNzYgMy4yNzZxLjY0OC42NDggMS42Mi42NDh0MS42Mi0uNjQ4bDYuODA0LTYuODA0djE4LjA3MnEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRoNC42MDhxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ2LTE4LjA3Mmw2LjgwNCA2LjgwNHEuNjg0LjY4NCAxLjYyLjY4NHQxLjYyLS42ODRsMy4yNzYtMy4yNzZxLjY0OC0uNjQ4LjY0OC0xLjYyem05LjA3Mi4wMzZxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiQVJST1dfQ0lSQ0xFX0RPV05cIjpcIk00Ni4yMjQtMzIuMTQ3cTAtLjk3Mi0uNjQ4LTEuNjJsLTMuMjc2LTMuMjc2cS0uNjQ4LS42NDgtMS42Mi0uNjQ4dC0xLjYyLjY0OGwtNi44MDQgNi44MDR2LTE4LjA3MnEwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODRoLTQuNjA4cS0uOTM2IDAtMS42Mi42ODR0LS42ODQgMS42MnYxOC4wNzJsLTYuODA0LTYuODA0cS0uNjg0LS42ODQtMS42Mi0uNjg0dC0xLjYyLjY4NGwtMy4yNzYgMy4yNzZxLS42NDguNjQ4LS42NDggMS42MnQuNjQ4IDEuNjJsMTMuMDMyIDEzLjAzMiAzLjI3NiAzLjI3NnEuNjQ4LjY0OCAxLjYyLjY0OHQxLjYyLS42NDhsMy4yNzYtMy4yNzYgMTMuMDMyLTEzLjAzMnEuNjQ4LS42NDguNjQ4LTEuNjJ6bTkuMDcyLS4wMzZxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiR0xPQkVcIjpcIk0yNy42NDgtNTkuODMxcTcuNTI0IDAgMTMuODc4IDMuNzA4dDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4LTMuNzA4IDEzLjg3OC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4em05Ljg2NCAxOC43NTZxLS4wNzIuMDM2LS4zNDIuMzQydC0uNDg2LjM0MnEuMDcyIDAgLjE2Mi0uMTh0LjE4LS4zOTYuMTI2LS4yNTJxLjIxNi0uMjUyLjc5Mi0uNTQuNTA0LS4yMTYgMS44NzItLjQzMiAxLjIyNC0uMjg4IDEuODM2LjM5Ni0uMDcyLS4wNzIuMzQyLS40Njh0LjUyMi0uNDMycS4xMDgtLjA3Mi41NC0uMTYydC41NC0uMjdsLjA3Mi0uNzkycS0uNDMyLjAzNi0uNjMtLjI1MnQtLjIzNC0uNzU2cTAgLjA3Mi0uMjE2LjI4OCAwLS4yNTItLjE2Mi0uMjg4dC0uNDE0LjAzNi0uMzI0LjAzNnEtLjM2LS4xMDgtLjU0LS4yN3QtLjI4OC0uNTk0LS4xNDQtLjU0cS0uMDcyLS4xOC0uMzQyLS4zNzh0LS4zNDItLjM3OGwtLjA5LS4xOTgtLjEwOC0uMjM0LS4xNDQtLjE5OC0uMTk4LS4wOS0uMjUyLjE4LS4yNy4zNi0uMTYyLjE4cS0uMTA4LS4wNzItLjIxNi0uMDU0dC0uMTYyLjAzNi0uMTYyLjEwOC0uMTguMTI2cS0uMTA4LjA3Mi0uMzA2LjEwOHQtLjMwNi4wNzJxLjU0LS4xOC0uMDM2LS4zOTYtLjM2LS4xNDQtLjU3Ni0uMTA4LjMyNC0uMTQ0LjI3LS40MzJ0LS4zMDYtLjUwNGguMThxLS4wMzYtLjE0NC0uMzA2LS4zMDZ0LS42My0uMzA2LS40NjgtLjIxNnEtLjI4OC0uMTgtMS4yMjQtLjM0MnQtMS4xODgtLjAxOHEtLjE4LjIxNi0uMTYyLjM3OHQuMTQ0LjUwNC4xMjYuNDVxLjAzNi4yMTYtLjE5OC40Njh0LS4yMzQuNDMycTAgLjI1Mi41MDQuNTU4dC4zNi43NzRxLS4xMDguMjg4LS41NzYuNTc2dC0uNTc2LjQzMnEtLjE4LjI4OC0uMDU0LjY2NnQuMzc4LjU5NHEuMDcyLjA3Mi4wNTQuMTQ0dC0uMTI2LjE2Mi0uMTk4LjE0NC0uMjM0LjEyNmwtLjEwOC4wNzJxLS4zOTYuMTgtLjczOC0uMjE2dC0uNDg2LS45MzZxLS4yNTItLjktLjU3Ni0xLjA4LS44MjgtLjI4OC0xLjA0NC4wMzYtLjE4LS40NjgtMS40NzYtLjkzNi0uOS0uMzI0LTIuMDg4LS4xNDQuMjE2LS4wMzYgMC0uNTQtLjI1Mi0uNTQtLjY4NC0uNDMyLjEwOC0uMjE2LjE0NC0uNjN0LjAzNi0uNDg2cS4xMDgtLjQ2OC40MzItLjgyOC4wMzYtLjAzNi4yNTItLjMwNnQuMzQyLS40ODYuMDE4LS4yMTZxMS4yNi4xNDQgMS44LS4zOTYuMTgtLjE4LjQxNC0uNjEydC4zNzgtLjYxMnEuMzI0LS4yMTYuNTA0LS4xOTh0LjUyMi4xOTguNTIyLjE4cS41MDQuMDM2LjU1OC0uMzk2dC0uMjctLjcycS40MzIuMDM2LjEwOC0uNjEyLS4xOC0uMjUyLS4yODgtLjMyNC0uNDMyLS4xNDQtLjk3Mi4xOC0uMjg4LjE0NC4wNzIuMjg4LS4wMzYtLjAzNi0uMzQyLjM3OHQtLjU5NC42My0uNTc2LS4xOHEtLjAzNi0uMDM2LS4xOTgtLjQ4NnQtLjM0Mi0uNDg2cS0uMjg4IDAtLjU3Ni41NC4xMDgtLjI4OC0uMzk2LS41NHQtLjg2NC0uMjg4cS42ODQtLjQzMi0uMjg4LS45NzItLjI1Mi0uMTQ0LS43MzgtLjE4dC0uNzAyLjE0NHEtLjE4LjI1Mi0uMTk4LjQxNHQuMTguMjg4LjM3OC4xOTguNDE0LjE0NC4zMDYuMTA4cS41MDQuMzYuMjg4LjUwNGwtLjMwNi4xMjYtLjQxNC4xNjItLjIxNi4xNDRxLS4xMDguMTQ0IDAgLjUwNHQtLjA3Mi41MDRxLS4xOC0uMTgtLjMyNC0uNjN0LS4yNTItLjU5NHEuMjUyLjMyNC0uOS4yMTZsLS4zNi0uMDM2cS0uMTQ0IDAtLjU3Ni4wNzJ0LS43MzguMDM2LS40ODYtLjI4OHEtLjE0NC0uMjg4IDAtLjcyLjAzNi0uMTQ0LjE0NC0uMDcyLS4xNDQtLjEwOC0uMzk2LS4zNDJ0LS4zNi0uMzA2cS0xLjY1Ni41NC0zLjM4NCAxLjQ3Ni4yMTYuMDM2LjQzMi0uMDM2LjE4LS4wNzIuNDY4LS4yMzR0LjM2LS4xOThxMS4yMjQtLjUwNCAxLjUxMi0uMjUybC4xOC0uMThxLjUwNC41NzYuNzIuOS0uMjUyLS4xNDQtMS4wOC0uMDM2LS43Mi4yMTYtLjc5Mi40MzIuMjUyLjQzMi4xOC42NDgtLjE0NC0uMTA4LS40MTQtLjM2dC0uNTIyLS4zOTYtLjU0LS4xOHEtLjU3NiAwLS43OTIuMDM2LTUuMjU2IDIuODgtOC40NiA3Ljk5Mi4yNTIuMjUyLjQzMi4yODguMTQ0LjAzNi4xOC4zMjR0LjA5LjM5Ni40MTQtLjEwOHEuMzI0LjI4OC4xMDguNjg0LjAzNi0uMDM2IDEuNTg0Ljk3Mi42ODQuNjEyLjc1Ni43NTYuMTA4LjM5Ni0uMzYuNjQ4LS4wMzYtLjA3Mi0uMzI0LS4zMjR0LS4zMjQtLjE0NHEtLjEwOC4xOC4wMTguNjY2dC4zNzguNDVxLS4yNTIgMC0uMzQyLjU3NnQtLjA5IDEuMjc4LS4wMzYuODQ2bC4wNzIuMDM2cS0uMTA4LjQzMi4xOTggMS4yNDJ0Ljc3NC43MDJxLS40NjguMTA4LjcyIDEuNTQ4LjIxNi4yODguMjg4LjMyNC4xMDguMDcyLjQzMi4yN3QuNTQuMzYuMzYuMzc4cS4xNDQuMTguMzYuODF0LjUwNC44NDZxLS4wNzIuMjE2LjM0Mi43MnQuMzc4LjgyOGwtLjA5LjAzNi0uMDkuMDM2cS4xMDguMjUyLjU1OC41MDR0LjU1OC40NjhxLjAzNi4xMDguMDcyLjM2dC4xMDguMzk2LjI4OC4wNzJxLjA3Mi0uNzItLjg2NC0yLjIzMi0uNTQtLjktLjYxMi0xLjA0NC0uMTA4LS4xOC0uMTk4LS41NTh0LS4xNjItLjUyMnEuMDcyIDAgLjIxNi4wNTR0LjMwNi4xMjYuMjcuMTQ0LjA3Mi4xMDhxLS4xMDguMjUyLjA3Mi42M3QuNDMyLjY2Ni42MTIuNjg0LjQzMi40NjhxLjIxNi4yMTYuNTA0LjcwMnQwIC40ODZxLjMyNCAwIC43Mi4zNnQuNjEyLjcycS4xOC4yODguMjg4LjkzNnQuMTguODY0cS4wNzIuMjUyLjMwNi40ODZ0LjQ1LjM0MmwuNTc2LjI4OC40NjguMjUycS4xOC4wNzIuNjY2LjM3OHQuNzc0LjQxNHEuMzYuMTQ0LjU3Ni4xNDR0LjUyMi0uMDkuNDg2LS4xMjZxLjU0LS4wNzIgMS4wNDQuNTR0Ljc1Ni43NTZxMS4yOTYuNjg0IDEuOTguMzk2LS4wNzIuMDM2LjAxOC4yN3QuMjg4LjU1OC4zMjQuNTIyLjE5OC4zMDZxLjE4LjIxNi42NDguNTR0LjY0OC41NHEuMjE2LS4xNDQuMjUyLS4zMjQtLjEwOC4yODguMjUyLjcydC42NDguMzZxLjUwNC0uMTA4LjUwNC0xLjE1Mi0xLjExNi41NC0xLjc2NC0uNjQ4bC0uMDktLjE5OC0uMTQ0LS4zMDYtLjA5LS4zMDZ2LS4yN2wuMTgtLjEwOHEuMzI0IDAgLjM2LS4xMjZ0LS4wNzItLjQ1LS4xNDQtLjQ2OHEtLjAzNi0uMjg4LS4zOTYtLjcydC0uNDMyLS41NHEtLjE4LjMyNC0uNTc2LjI4OHQtLjU3Ni0uMzI0bC0uMDU0LjE5OC0uMDU0LjIzNHEtLjQ2OCAwLS41NC0uMDM2LjAzNi0uMTA4LjA5LS42M3QuMTI2LS44MXEuMDM2LS4xNDQuMTk4LS40MzJ0LjI3LS41MjIuMTQ0LS40NS0uMTYyLS4zNDItLjYzLS4wOXEtLjY4NC4wMzYtLjkzNi43Mi0uMDM2LjEwOC0uMTA4LjM3OHQtLjE4LjQxNC0uMzI0LjI1MnEtLjI1Mi4xMDgtLjg2NC4wNzJ0LS44NjQtLjE4cS0uNDY4LS4yODgtLjgxLTEuMDQ0dC0uMzQyLTEuMzMycTAtLjM2LjA5LS45NTR0LjEwOC0uOS0uMTk4LS44ODJxLjEwOC0uMDcyLjMyNC0uMzQydC4zNi0uMzc4bC4xNjItLjA1NGguMTYybC4xNDQtLjA1NC4xMDgtLjIxNi0uMTQ0LS4xMDgtLjE0NC0uMTA4cS4yNTIuMTA4IDEuMDI2LS4wNTR0Ljk5LjA1NHEuNTQuMzk2Ljc5Mi0uMDcyIDAtLjAzNi0uMDktLjM0MnQtLjAxOC0uNDg2cS4xOC45NzIgMS4wNDQuMzI0LjEwOC4xMDguNTU4LjE4dC42My4xOGwuMjUyLjE5OC4xOTguMTYyLjE4LS4wMTguMzA2LS4yMzRxLjM2LjUwNC40MzIuODY0LjM5NiAxLjQ0LjY4NCAxLjU4NC4yNTIuMTA4LjM5Ni4wNzJ0LjE2Mi0uMzQyIDAtLjUwNC0uMDU0LS40NWwtLjAzNi0uMjg4di0uNjQ4bC0uMDM2LS4yODhxLS41NC0uMTA4LS42NjYtLjQzMnQuMDU0LS42NjYuNTQtLjY2NnEuMDM2LS4wMzYuMjg4LS4xMjZ0LjU1OC0uMjM0LjQ1LS4yODhxLjc1Ni0uNjg0LjU0LTEuMjYuMjUyIDAgLjM5Ni0uMzI0bC0uMTgtLjEwOC0uMjctLjE4LS4xNjItLjA3MnEuMzI0LS4xOC4wNzItLjU3Ni4xOC0uMTA4LjI3LS4zOTZ0LjI3LS4zNnEuMzI0LjQzMi43NTYuMDcyLjI1Mi0uMjg4LjAzNi0uNTc2LjE4LS4yNTIuNzM4LS4zNzh0LjY2Ni0uMzQycS4yNTIuMDcyLjI4OC0uMDcydC4wMzYtLjQzMi4xMDgtLjQzMnEuMTQ0LS4xOC41NC0uMzI0dC40NjgtLjE4bC42MTItLjM5NnEuMTA4LS4xNDQgMC0uMTQ0LjY0OC4wNzIgMS4xMTYtLjM5Ni4zNi0uMzk2LS4yMTYtLjcyLjEwOC0uMjE2LS4xMDgtLjM0MnQtLjU0LS4xOThxLjEwOC0uMDM2LjQxNC0uMDE4dC4zNzgtLjA1NHEuNTQtLjM2LS4yNTItLjU3Ni0uNjEyLS4xOC0xLjU0OC40MzJ6bS01Ljg2OCAzMS41NzJxNy40MTYtMS4yOTYgMTIuNjM2LTYuODA0LS4xMDgtLjEwOC0uNDUtLjE2MnQtLjQ1LS4xMjZxLS42NDgtLjI1Mi0uODY0LS4yODguMDM2LS4yNTItLjA5LS40Njh0LS4yODgtLjMyNC0uNDUtLjI4OC0uMzk2LS4yNTJsLS4yNTItLjIxNi0uMjUyLS4xOTgtLjI3LS4xNjItLjMwNi0uMDcyLS4zNi4wMzYtLjEwOC4wMzYtLjE5OC4wOS0uMTk4LjEwOC0uMTQ0LjEwOHYuMDlxLS43NTYtLjYxMi0xLjI5Ni0uNzkyLS4xOC0uMDM2LS4zOTYtLjE5OHQtLjM3OC0uMjUyLS4zNi0uMDU0LS40MTQuMjUycS0uMTguMTgtLjIxNi41NHQtLjA3Mi40NjhxLS4yNTItLjE4IDAtLjYzdC4wNzItLjY2NnEtLjEwOC0uMjE2LS4zNzgtLjE2MnQtLjQzMi4xNjItLjQxNC4zMDYtLjMyNC4yMzQtLjMwNi4xOTgtLjMwNi4yN3EtLjEwOC4xNDQtLjIxNi40MzJ0LS4xOC4zOTZxLS4wNzItLjE0NC0uNDE0LS4yMzR0LS4zNDItLjE5OHEuMDcyLjM2LjE0NCAxLjI2dC4xOCAxLjM2OHEuMjUyIDEuMTE2LS40MzIgMS43MjgtLjk3Mi45LTEuMDQ0IDEuNDQtLjE0NC43OTIuNDMyLjkzNiAwIC4yNTItLjI4OC43Mzh0LS4yNTIuNzc0cTAgLjIxNi4wNzIuNTc2elwiLFwiV1JFTkNIXCI6XCJNMTMuODI0LTExLjQ0N3EwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODQtMS42Mi42ODQtLjY4NCAxLjYyLjY4NCAxLjYyIDEuNjIuNjg0IDEuNjItLjY4NC42ODQtMS42MnptMjMuMTg0LTE1LjEybC0yNC41NTIgMjQuNTUycS0xLjMzMiAxLjMzMi0zLjI0IDEuMzMyLTEuODcyIDAtMy4yNzYtMS4zMzJsLTMuODE2LTMuODg4cS0xLjM2OC0xLjI5Ni0xLjM2OC0zLjI0IDAtMS45MDggMS4zNjgtMy4yNzZsMjQuNTE2LTI0LjUxNnExLjQwNCAzLjUyOCA0LjEyMiA2LjI0NnQ2LjI0NiA0LjEyMnptMjIuODI0LTE1LjY2cTAgMS40MDQtLjgyOCAzLjgxNi0xLjY5MiA0LjgyNC01LjkyMiA3LjgzdC05LjMwNiAzLjAwNnEtNi42NiAwLTExLjM5NC00LjczNHQtNC43MzQtMTEuMzk0IDQuNzM0LTExLjM5NCAxMS4zOTQtNC43MzRxMi4wODggMCA0LjM3NC41OTR0My44NyAxLjY3NHEuNTc2LjM5Ni41NzYgMS4wMDh0LS41NzYgMS4wMDhsLTEwLjU0OCA2LjA4NHY4LjA2NGw2Ljk0OCAzLjg1MnEuMTgtLjEwOCAyLjg0NC0xLjc0NnQ0Ljg3OC0yLjkxNiAyLjUzOC0xLjI3OHEuNTQgMCAuODQ2LjM2dC4zMDYuOXpcIixcIlRBU0tTXCI6XCJNMzYuODY0LTEzLjc1MWgyMy4wNHYtNC42MDhoLTIzLjA0djQuNjA4em0tMTMuODI0LTE4LjQzMmgzNi44NjR2LTQuNjA4aC0zNi44NjR2NC42MDh6bTIzLjA0LTE4LjQzMmgxMy44MjR2LTQuNjA4aC0xMy44MjR2NC42MDh6bTE4LjQzMiAyOS45NTJ2OS4yMTZxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTU5LjkwNHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi05LjIxNnEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDU5LjkwNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0wLTE4LjQzMnY5LjIxNnEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNTkuOTA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTkuMjE2cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNTkuOTA0cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bTAtMTguNDMydjkuMjE2cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC01OS45MDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtOS4yMTZxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg1OS45MDRxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIkZJTFRFUlwiOlwiTTUwLjUwOC01My44MTlxLjYxMiAxLjQ3Ni0uNTA0IDIuNTJsLTE3Ljc0OCAxNy43NDh2MjYuNzEycTAgMS41MTItMS40MDQgMi4xMjQtLjQ2OC4xOC0uOS4xOC0uOTcyIDAtMS42Mi0uNjg0bC05LjIxNi05LjIxNnEtLjY4NC0uNjg0LS42ODQtMS42MnYtMTcuNDk2bC0xNy43NDgtMTcuNzQ4cS0xLjExNi0xLjA0NC0uNTA0LTIuNTIuNjEyLTEuNDA0IDIuMTI0LTEuNDA0aDQ2LjA4cTEuNTEyIDAgMi4xMjQgMS40MDR6XCIsXCJCUklFRkNBU0VcIjpcIk0yMy4wNC01NS4yMjNoMTguNDMydi00LjYwOGgtMTguNDMydjQuNjA4em00MS40NzIgMjMuMDR2MTcuMjhxMCAyLjM3Ni0xLjY5MiA0LjA2OHQtNC4wNjggMS42OTJoLTUyLjk5MnEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTE3LjI4aDI0LjE5MnY1Ljc2cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NGgxMS41MnEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnYtNS43NmgyNC4xOTJ6bS0yNy42NDggMHY0LjYwOGgtOS4yMTZ2LTQuNjA4aDkuMjE2em0yNy42NDgtMTcuMjh2MTMuODI0aC02NC41MTJ2LTEzLjgyNHEwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyaDEyLjY3MnYtNS43NnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMjAuNzM2cTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHY1Ljc2aDEyLjY3MnEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4elwiLFwiQVJST1dTX0FMVFwiOlwiTTQ2LjE4OC00NC45NjNsLTEyLjc4IDEyLjc4IDEyLjc4IDEyLjc4IDUuMTg0LTUuMTg0cTEuMDQ0LTEuMTE2IDIuNTItLjUwNCAxLjQwNC42MTIgMS40MDQgMi4xMjR2MTYuMTI4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0xNi4xMjhxLTEuNTEyIDAtMi4xMjQtMS40NC0uNjEyLTEuNDA0LjUwNC0yLjQ4NGw1LjE4NC01LjE4NC0xMi43OC0xMi43OC0xMi43OCAxMi43OCA1LjE4NCA1LjE4NHExLjExNiAxLjA4LjUwNCAyLjQ4NC0uNjEyIDEuNDQtMi4xMjQgMS40NGgtMTYuMTI4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTE2LjEyOHEwLTEuNTEyIDEuNDQtMi4xMjQgMS40MDQtLjYxMiAyLjQ4NC41MDRsNS4xODQgNS4xODQgMTIuNzgtMTIuNzgtMTIuNzgtMTIuNzgtNS4xODQgNS4xODRxLS42ODQuNjg0LTEuNjIuNjg0LS40MzIgMC0uODY0LS4xOC0xLjQ0LS42MTItMS40NC0yLjEyNHYtMTYuMTI4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoMTYuMTI4cTEuNTEyIDAgMi4xMjQgMS40NC42MTIgMS40MDQtLjUwNCAyLjQ4NGwtNS4xODQgNS4xODQgMTIuNzggMTIuNzggMTIuNzgtMTIuNzgtNS4xODQtNS4xODRxLTEuMTE2LTEuMDgtLjUwNC0yLjQ4NC42MTItMS40NCAyLjEyNC0xLjQ0aDE2LjEyOHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjE2LjEyOHEwIDEuNTEyLTEuNDA0IDIuMTI0LS40NjguMTgtLjkuMTgtLjkzNiAwLTEuNjItLjY4NHpcIixcIlVTRVJTXCI6XCJNMjEuMzQ4LTMyLjE4M3EtNS44MzIuMTgtOS41NCA0LjYwOGgtNC44MjRxLTIuOTUyIDAtNC45NjgtMS40NTh0LTIuMDE2LTQuMjY2cTAtMTIuNzA4IDQuNDY0LTEyLjcwOC4yMTYgMCAxLjU2Ni43NTZ0My41MSAxLjUzIDQuMjg0Ljc3NHEyLjQxMiAwIDQuNzg4LS44MjgtLjE4IDEuMzMyLS4xOCAyLjM3NiAwIDUuMDA0IDIuOTE2IDkuMjE2em0zOC41NTYgMjIuOTMycTAgNC4zMi0yLjYyOCA2LjgyMnQtNi45ODQgMi41MDJoLTMxLjQ2NHEtNC4zNTYgMC02Ljk4NC0yLjUwMnQtMi42MjgtNi44MjJxMC0xLjkwOC4xMjYtMy43MjZ0LjUwNC0zLjkyNC45NTQtMy45MDYgMS41NDgtMy41MSAyLjIzMi0yLjkxNiAzLjA3OC0xLjkyNiA0LjAxNC0uNzJxLjM2IDAgMS41NDguNzc0dDIuNjI4IDEuNzI4IDMuODUyIDEuNzI4IDQuODYuNzc0IDQuODYtLjc3NCAzLjg1Mi0xLjcyOCAyLjYyOC0xLjcyOCAxLjU0OC0uNzc0cTIuMTk2IDAgNC4wMTQuNzJ0My4wNzggMS45MjYgMi4yMzIgMi45MTYgMS41NDggMy41MS45NTQgMy45MDYuNTA0IDMuOTI0LjEyNiAzLjcyNnptLTM2Ljg2NC00NS45NzJxMCAzLjgxNi0yLjcgNi41MTZ0LTYuNTE2IDIuNy02LjUxNi0yLjctMi43LTYuNTE2IDIuNy02LjUxNiA2LjUxNi0yLjcgNi41MTYgMi43IDIuNyA2LjUxNnptMjUuMzQ0IDEzLjgyNHEwIDUuNzI0LTQuMDUgOS43NzR0LTkuNzc0IDQuMDUtOS43NzQtNC4wNS00LjA1LTkuNzc0IDQuMDUtOS43NzQgOS43NzQtNC4wNSA5Ljc3NCA0LjA1IDQuMDUgOS43NzR6bTIwLjczNiA4LjFxMCAyLjgwOC0yLjAxNiA0LjI2NnQtNC45NjggMS40NThoLTQuODI0cS0zLjcwOC00LjQyOC05LjU0LTQuNjA4IDIuOTE2LTQuMjEyIDIuOTE2LTkuMjE2IDAtMS4wNDQtLjE4LTIuMzc2IDIuMzc2LjgyOCA0Ljc4OC44MjggMi4xMjQgMCA0LjI4NC0uNzc0dDMuNTEtMS41MyAxLjU2Ni0uNzU2cTQuNDY0IDAgNC40NjQgMTIuNzA4em0tNC42MDgtMjEuOTI0cTAgMy44MTYtMi43IDYuNTE2dC02LjUxNiAyLjctNi41MTYtMi43LTIuNy02LjUxNiAyLjctNi41MTYgNi41MTYtMi43IDYuNTE2IDIuNyAyLjcgNi41MTZ6XCIsXCJMSU5LXCI6XCJNNTIuNDE2LTIwLjY2M3EwLTEuNDQtMS4wMDgtMi40NDhsLTcuNDg4LTcuNDg4cS0xLjAwOC0xLjAwOC0yLjQ0OC0xLjAwOC0xLjUxMiAwLTIuNTkyIDEuMTUyLjEwOC4xMDguNjg0LjY2NnQuNzc0Ljc3NC41NC42ODQuNDY4LjkxOC4xMjYuOTlxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOHEtLjU0IDAtLjk5LS4xMjZ0LS45MTgtLjQ2OC0uNjg0LS41NC0uNzc0LS43NzQtLjY2Ni0uNjg0cS0xLjE4OCAxLjExNi0xLjE4OCAyLjYyOCAwIDEuNDQgMS4wMDggMi40NDhsNy40MTYgNy40NTJxLjk3Mi45NzIgMi40NDguOTcyIDEuNDQgMCAyLjQ0OC0uOTM2bDUuMjkyLTUuMjU2cTEuMDA4LTEuMDA4IDEuMDA4LTIuNDEyem0tMjUuMzA4LTI1LjM4cTAtMS40NC0xLjAwOC0yLjQ0OGwtNy40MTYtNy40NTJxLTEuMDA4LTEuMDA4LTIuNDQ4LTEuMDA4LTEuNDA0IDAtMi40NDguOTcybC01LjI5MiA1LjI1NnEtMS4wMDggMS4wMDgtMS4wMDggMi40MTIgMCAxLjQ0IDEuMDA4IDIuNDQ4bDcuNDg4IDcuNDg4cS45NzIuOTcyIDIuNDQ4Ljk3MiAxLjUxMiAwIDIuNTkyLTEuMTE2LS4xMDgtLjEwOC0uNjg0LS42NjZ0LS43NzQtLjc3NC0uNTQtLjY4NC0uNDY4LS45MTgtLjEyNi0uOTlxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4cS41NCAwIC45OS4xMjZ0LjkxOC40NjguNjg0LjU0Ljc3NC43NzQuNjY2LjY4NHExLjE4OC0xLjExNiAxLjE4OC0yLjYyOHptMzIuMjIgMjUuMzhxMCA0LjMyLTMuMDYgNy4zMDhsLTUuMjkyIDUuMjU2cS0yLjk4OCAyLjk4OC03LjMwOCAyLjk4OC00LjM1NiAwLTcuMzQ0LTMuMDZsLTcuNDE2LTcuNDUycS0yLjk4OC0yLjk4OC0yLjk4OC03LjMwOCAwLTQuNDI4IDMuMTY4LTcuNTI0bC0zLjE2OC0zLjE2OHEtMy4wOTYgMy4xNjgtNy40ODggMy4xNjgtNC4zMiAwLTcuMzQ0LTMuMDI0bC03LjQ4OC03LjQ4OHEtMy4wMjQtMy4wMjQtMy4wMjQtNy4zNDR0My4wNi03LjMwOGw1LjI5Mi01LjI1NnEyLjk4OC0yLjk4OCA3LjMwOC0yLjk4OCA0LjM1NiAwIDcuMzQ0IDMuMDZsNy40MTYgNy40NTJxMi45ODggMi45ODggMi45ODggNy4zMDggMCA0LjQyOC0zLjE2OCA3LjUyNGwzLjE2OCAzLjE2OHEzLjA5Ni0zLjE2OCA3LjQ4OC0zLjE2OCA0LjMyIDAgNy4zNDQgMy4wMjRsNy40ODggNy40ODhxMy4wMjQgMy4wMjQgMy4wMjQgNy4zNDR6XCIsXCJDTE9VRFwiOlwiTTY5LjEyLTIyLjk2N3EwIDUuNzI0LTQuMDUgOS43NzR0LTkuNzc0IDQuMDVoLTM5LjE2OHEtNi42NiAwLTExLjM5NC00LjczNHQtNC43MzQtMTEuMzk0cTAtNC43NTIgMi41NTYtOC42OTR0Ni43MzItNS44ODZxLS4wNzItMS4wMDgtLjA3Mi0xLjU0OCAwLTcuNjMyIDUuNC0xMy4wMzJ0MTMuMDMyLTUuNHE1LjY4OCAwIDEwLjMxNCAzLjE2OHQ2Ljc1IDguMjhxMi41Mi0yLjIzMiA1Ljk3Ni0yLjIzMiAzLjgxNiAwIDYuNTE2IDIuN3QyLjcgNi41MTZxMCAyLjctMS40NzYgNC45NjggNC42NDQgMS4wOCA3LjY2OCA0Ljg0MnQzLjAyNCA4LjYyMnpcIixcIkZMQVNLXCI6XCJNNTQuOTcyLTEyLjMxMXEyLjAxNiAzLjIwNC43NzQgNS40OXQtNS4wNTggMi4yODZoLTQxLjQ3MnEtMy44MTYgMC01LjA1OC0yLjI4NnQuNzc0LTUuNDlsMTguMTA4LTI4LjU0OHYtMTQuMzY0aC0yLjMwNHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYyLjY4NC0xLjYyIDEuNjItLjY4NGgxOC40MzJxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42Mi0uNjg0IDEuNjItMS42Mi42ODRoLTIuMzA0djE0LjM2NHptLTI4LjA0NC0yNi4xbC05Ljc5MiAxNS40NDRoMjUuNjMybC05Ljc5Mi0xNS40NDQtLjcyLTEuMTE2di0xNS42OTYwMDAwMDAwMDAwMDJoLTQuNjA4djE1LjY5NjAwMDAwMDAwMDAwMnpcIixcIlNDSVNTT1JTXCI6XCJNMzQuNTYtMzIuMTgzcS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjItLjY4NCAxLjYyLTEuNjIuNjg0LTEuNjItLjY4NC0uNjg0LTEuNjIuNjg0LTEuNjIgMS42Mi0uNjg0em0xMC44IDIuMzA0bDE4LjI1MiAxNC4zMjhxMS4wMDguNzIuOSAyLjAxNi0uMTggMS4yNi0xLjI2IDEuODM2bC00LjYwOCAyLjMwNHEtLjQ2OC4yNTItMS4wNDQuMjUyLS42MTIgMC0xLjExNi0uMjg4bC0yNC44NC0xMy45MzItMy45NiAyLjM3NnEtLjI4OC4xNDQtLjQzMi4xOC41MDQgMS43NjQuMzYgMy40OTItLjI1MiAyLjc3Mi0yLjAxNiA1LjMxdC00Ljc1MiA0LjQ0NnEtNC43NTIgMy4wMjQtOS45NzIgMy4wMjQtNC44OTYgMC03Ljk5Mi0yLjgwOC0zLjI0LTMuMDI0LTIuODQ0LTcuNDUyLjI1Mi0yLjczNiAyLjAxNi01LjI5MnQ0LjcxNi00LjQ2NHE0Ljc1Mi0zLjAyNCAxMC4wMDgtMy4wMjQgMi45ODggMCA1LjQzNiAxLjExNi4zMjQtLjQ2OC43OTItLjc5Mmw0LjM5Mi0yLjYyOC00LjM5Mi0yLjYyOHEtLjQ2OC0uMzI0LS43OTItLjc5Mi0yLjQ0OCAxLjExNi01LjQzNiAxLjExNi01LjI1NiAwLTEwLjAwOC0zLjAyNC0yLjk1Mi0xLjkwOC00LjcxNi00LjQ2NHQtMi4wMTYtNS4yOTJxLS4xOC0yLjEyNC41NTgtNC4wNjh0Mi4yODYtMy4zNDhxMy4wNi0yLjg0NCA3Ljk5Mi0yLjg0NCA1LjIyIDAgOS45NzIgMy4wMjQgMi45ODggMS44NzIgNC43NTIgNC40Mjh0Mi4wMTYgNS4zMjhxLjE0NCAxLjcyOC0uMzYgMy40OTIuMTQ0LjAzNi40MzIuMThsMy45NiAyLjM3NiAyNC44NC0xMy45MzJxLjUwNC0uMjg4IDEuMTE2LS4yODguNTc2IDAgMS4wNDQuMjUybDQuNjA4IDIuMzA0cTEuMDguNTc2IDEuMjYgMS44MzYuMTA4IDEuMjk2LS45IDIuMDE2em0tMjQuNTE2LTkuMzZxMS42NTYtMS41MTIuNzU2LTMuODg4dC0zLjgxNi00LjIxMnEtMy4zMTItMi4xMjQtNi45MTItMi4xMjQtMi42NjQgMC00LjA2OCAxLjI5Ni0xLjY1NiAxLjUxMi0uNzU2IDMuODg4dDMuODE2IDQuMjEycTMuMzEyIDIuMTI0IDYuOTEyIDIuMTI0IDIuNjY0IDAgNC4wNjgtMS4yOTZ6bS0zLjA2IDI2LjgycTIuOTE2LTEuODM2IDMuODE2LTQuMjEydC0uNzU2LTMuODg4cS0xLjQwNC0xLjI5Ni00LjA2OC0xLjI5Ni0zLjYgMC02LjkxMiAyLjEyNC0yLjkxNiAxLjgzNi0zLjgxNiA0LjIxMnQuNzU2IDMuODg4cTEuNDA0IDEuMjk2IDQuMDY4IDEuMjk2IDMuNiAwIDYuOTEyLTIuMTI0em02LjQwOC0yMi4wNjhsMy40NTYgMi4wODh2LS4zOTZxMC0xLjI5NiAxLjE4OC0yLjAxNmwuNTA0LS4yODgtMi44NDQtMS42OTItLjkzNi45MzZxLS4xMDguMTA4LS4zNi4zOTZ0LS40MzIuNDMybC0uMTQ0LjEyNi0uMTA4LjA5em04LjA2NCA4LjA2NGwzLjQ1NiAxLjE1MiAyNi40OTYtMjAuNzM2LTQuNjA4LTIuMzA0LTI3LjY0OCAxNS41MTZ2NC4wNjhsLTUuNzYgMy40NTYuMzI0LjI4OC4yNTIuMjE2cS4xNDQuMTQ0LjM5Ni40MzJ0LjM5Ni40MzJsLjkzNi45MzZ6bTI1LjM0NCAxNC45NzZsNC42MDgtMi4zMDQtMTguNzItMTQuNjg4LTYuMzcyIDQuOTY4cS0uMDcyLjEwOC0uNDY4LjI1MnpcIixcIkZJTEVTX09cIjpcIk02MS4wNTYtNTAuNjE1cTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHY0My43NzZxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMzQuNTZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTEwLjM2OGgtMTkuNTg0cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di0yNC4xOTJxMC0xLjQ0LjcyLTMuMTY4dDEuNzI4LTIuNzM2bDE0LjY4OC0xNC42ODhxMS4wMDgtMS4wMDggMi43MzYtMS43Mjh0My4xNjgtLjcyaDE0Ljk3NnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh2MTEuODA4cTIuNDQ4LTEuNDQgNC42MDgtMS40NGgxNC45NzZ6bS0xOS41ODQgNy42NjhsLTEwLjc2NCAxMC43NjRoMTAuNzY0di0xMC43NjR6bS0yMy4wNC0xMy44MjRsLTEwLjc2NCAxMC43NjRoMTAuNzY0di0xMC43NjR6bTcuMDU2IDIzLjI5MmwxMS4zNzYtMTEuMzc2di0xNC45NzZoLTEzLjgyNHYxNC45NzZxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMTQuOTc2djIzLjA0aDE4LjQzMnYtOS4yMTZxMC0xLjQ0LjcyLTMuMTY4dDEuNzI4LTIuNzM2em0zNC40MTYgMjguOTQ0di00MS40NzJoLTEzLjgyNHYxNC45NzZxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMTQuOTc2djIzLjA0aDMyLjI1NnpcIixcIlBBUEVSQ0xJUFwiOlwiTTUwLjU0NC0xNC41NzlxMCA0LjIxMi0yLjg0NCA3LjA1NnQtNy4wNTYgMi44NDRxLTQuODYgMC04LjQ2LTMuNmwtMjcuOTcyLTI3LjkzNnEtNC4wNjgtNC4xNC00LjA2OC05Ljc1NiAwLTUuNzI0IDMuOTYtOS43MnQ5LjY4NC0zLjk5NnE1LjY4OCAwIDkuODI4IDQuMDY4bDIxLjc4IDIxLjgxNnEuMzYuMzYuMzYuNzkyIDAgLjU3Ni0xLjA5OCAxLjY3NHQtMS42NzQgMS4wOThxLS40NjggMC0uODI4LS4zNmwtMjEuODE2LTIxLjg1MnEtMi44NDQtMi43NzItNi41MTYtMi43NzItMy44MTYgMC02LjQ0NCAyLjd0LTIuNjI4IDYuNTE2cTAgMy43OCAyLjczNiA2LjUxNmwyNy45MzYgMjcuOTcycTIuMjY4IDIuMjY4IDUuMjIgMi4yNjggMi4zMDQgMCAzLjgxNi0xLjUxMnQxLjUxMi0zLjgxNnEwLTIuOTUyLTIuMjY4LTUuMjJsLTIwLjkxNi0yMC45MTZxLS45MzYtLjg2NC0yLjE2LS44NjQtMS4wNDQgMC0xLjcyOC42ODR0LS42ODQgMS43MjhxMCAxLjE1Mi45IDIuMTI0bDE0Ljc2IDE0Ljc2cS4zNi4zNi4zNi43OTIgMCAuNTc2LTEuMTE2IDEuNjkydC0xLjY5MiAxLjExNnEtLjQzMiAwLS43OTItLjM2bC0xNC43Ni0xNC43NnEtMi4yNjgtMi4xOTYtMi4yNjgtNS4zNjQgMC0yLjk1MiAyLjA1Mi01LjAwNHQ1LjAwNC0yLjA1MnEzLjE2OCAwIDUuMzY0IDIuMjY4bDIwLjkxNiAyMC45MTZxMy42IDMuNTI4IDMuNiA4LjQ2elwiLFwiU0FWRVwiOlwiTTEzLjgyNC05LjE0M2gyNy42NDh2LTEzLjgyNGgtMjcuNjQ4djEzLjgyNHptMzIuMjU2IDBoNC42MDh2LTMyLjI1NnEwLS41MDQtLjM2LTEuMzg2dC0uNzItMS4yNDJsLTEwLjExNi0xMC4xMTZxLS4zNi0uMzYtMS4yMjQtLjcydC0xLjQwNC0uMzZ2MTQuOTc2cTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTIwLjczNnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMTQuOTc2aC00LjYwOHY0Ni4wOGg0LjYwOHYtMTQuOTc2cTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgyOS45NTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4djE0Ljk3NnptLTEzLjgyNC0zMy40MDh2LTExLjUycTAtLjQ2OC0uMzQyLS44MXQtLjgxLS4zNDJoLTYuOTEycS0uNDY4IDAtLjgxLjM0MnQtLjM0Mi44MXYxMS41MnEwIC40NjguMzQyLjgxdC44MS4zNDJoNi45MTJxLjQ2OCAwIC44MS0uMzQydC4zNDItLjgxem0yMy4wNCAxLjE1MnYzMy40MDhxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtNDguMzg0cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di00OC4zODRxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDMzLjQwOHExLjQ0IDAgMy4xNjguNzJ0Mi43MzYgMS43MjhsMTAuMDggMTAuMDhxMS4wMDggMS4wMDggMS43MjggMi43MzZ0LjcyIDMuMTY4elwiLFwiU1FVQVJFXCI6XCJNNTUuMjk2LTQ5LjQ2M3YzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2cTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCIsXCJSRU9SREVSXCI6XCJNNTUuMjk2LTE2LjA1NXY0LjYwOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNTAuNjg4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNTAuNjg4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bTAtMTguNDMydjQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC01MC42ODhxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg1MC42ODhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptMC0xOC40MzJ2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTUwLjY4OHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDUwLjY4OHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiTElTVF9VTFwiOlwiTTEzLjgyNC0xMy43NTFxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptMC0xOC40MzJxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptNTAuNjg4IDE0Ljk3NnY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNDMuNzc2cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg0My43NzZxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptLTUwLjY4OC0zMy40MDhxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptNTAuNjg4IDE0Ljk3NnY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNDMuNzc2cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg0My43NzZxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptMC0xOC40MzJ2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTQzLjc3NnEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi45MTJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoNDMuNzc2cS40NjggMCAuODEuMzQydC4zNDIuODF6XCIsXCJMSVNUX09MXCI6XCJNMTMuNzE2LTYuMTE5cTAgMi44OC0xLjk2MiA0LjUzNnQtNC44NzggMS42NTZxLTMuODE2IDAtNi4xOTItMi4zNzZsMi4wNTItMy4xNjhxMS43NjQgMS42MiAzLjgxNiAxLjYyIDEuMDQ0IDAgMS44MTgtLjUyMnQuNzc0LTEuNTNxMC0yLjMwNC0zLjc4LTIuMDE2bC0uOTM2LTIuMDE2cS4yODgtLjM2IDEuMTctMS41NjZ0MS41My0xLjk0NCAxLjMzMi0xLjM4NnYtLjAzNnEtLjU3NiAwLTEuNzQ2LjAzNnQtMS43NDYuMDM2djEuOTA4aC0zLjgxNnYtNS40NzJoMTEuOTg4djMuMTY4bC0zLjQyIDQuMTRxMS44MzYuNDMyIDIuOTE2IDEuNzY0dDEuMDggMy4xNjh6bS4wNzItMjIuNTcydjUuNzI0aC0xMy4wMzJxLS4yMTYtMS4yOTYtLjIxNi0xLjk0NCAwLTEuODM2Ljg0Ni0zLjM0OHQyLjAzNC0yLjQ0OCAyLjM3Ni0xLjcxIDIuMDM0LTEuNTY2Ljg0Ni0xLjYycTAtLjktLjUyMi0xLjM4NnQtMS40MjItLjQ4NnEtMS42NTYgMC0yLjkxNiAyLjA4OGwtMy4wNi0yLjEyNHEuODY0LTEuODM2IDIuNTc0LTIuODYydDMuNzk4LTEuMDI2cTIuNjI4IDAgNC40MjggMS40OTR0MS44IDQuMDVxMCAxLjgtMS4yMjQgMy4yOTR0LTIuNyAyLjMyMi0yLjcxOCAxLjgxOC0xLjI3OCAxLjg5aDQuNTcydi0yLjE2aDMuNzh6bTUwLjcyNCAxMS40ODR2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTQzLjc3NnEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi45MTJxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg0My43NzZxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptLTUwLjY4OC0zMi4zNjR2My41NjRoLTEyLjA2di0zLjU2NGgzLjg1MnEwLTEuNDc2LjAxOC00LjM5MnQuMDE4LTQuMzU2di0uNDMyaC0uMDcycS0uMjg4LjYxMi0xLjggMS45NDRsLTIuNTU2LTIuNzM2IDQuODk2LTQuNTcyaDMuODE2djE0LjU0NGgzLjg4OHptNTAuNjg4IDEzLjkzMnY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNDMuNzc2cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDQzLjc3NnEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0wLTE4LjQzMnY2LjkxMnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtNDMuNzc2cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg0My43NzZxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXpcIixcIlNUUklLRVRIUk9VR0hcIjpcIk02My4zNi0zMi4xODNxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djIuMzA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYyLjIwOHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYyLjIwOHptLTQ1Ljk3Mi0yLjMwNHEtMS4wMDgtMS4yNi0xLjgzNi0yLjg4LTEuNzI4LTMuNDkyLTEuNzI4LTYuNzY4IDAtNi41MTYgNC44MjQtMTEuMTI0IDQuNzg4LTQuNTcyIDE0LjE0OC00LjU3MiAxLjggMCA2LjAxMi42ODQgMi4zNzYuNDMyIDYuMzcyIDEuNzI4LjM2IDEuMzY4Ljc1NiA0LjI0OC41MDQgNC40MjguNTA0IDYuNTg4IDAgLjY0OC0uMTggMS42MmwtLjQzMi4xMDgtMy4wMjQtLjIxNi0uNTA0LS4wNzJxLTEuOC01LjM2NC0zLjcwOC03LjM4LTMuMTY4LTMuMjc2LTcuNTYtMy4yNzYtNC4xMDQgMC02LjU1MiAyLjEyNC0yLjQxMiAyLjA4OC0yLjQxMiA1LjI1NiAwIDIuNjI4IDIuMzc2IDUuMDR0MTAuMDQ0IDQuNjQ0cTIuNDg0LjcyIDYuMjI4IDIuMzc2IDIuMDg4IDEuMDA4IDMuNDIgMS44NzJoLTI2Ljc0OHptMTguMjUyIDkuMjE2aDE0Ljc5NnEuMjUyIDEuNDA0LjI1MiAzLjMxMiAwIDMuOTk2LTEuNDc2IDcuNjMyLS44MjggMS45OC0yLjU1NiAzLjc0NC0xLjMzMiAxLjI2LTMuOTI0IDIuOTE2LTIuODggMS43MjgtNS41MDggMi4zNzYtMi44OC43NTYtNy4zMDguNzU2LTQuMTA0IDAtNy4wMi0uODI4bC01LjA0LTEuNDRxLTIuMDUyLS41NzYtMi41OTItMS4wMDgtLjI4OC0uMjg4LS4yODgtLjc5MnYtLjQ2OHEwLTMuODg4LS4wNzItNS42MTYtLjAzNi0xLjA4IDAtMi40NDhsLjA3Mi0xLjMzMnYtMS41ODRsMy42NzItLjA3MnEuNTQgMS4yMjQgMS4wOCAyLjU1NnQuODEgMi4wMTYuNDUuOTcycTEuMjYgMi4wNTIgMi44OCAzLjM4NCAxLjU0OCAxLjI5NiAzLjc4IDIuMDUyIDIuMTI0Ljc5MiA0Ljc1Mi43OTIgMi4zMDQgMCA1LjAwNC0uOTcyIDIuNzcyLS45MzYgNC4zOTItMy4wOTYgMS42OTItMi4xOTYgMS42OTItNC42NDQgMC0zLjAyNC0yLjkxNi01LjY1Mi0xLjIyNC0xLjA0NC00LjkzMi0yLjU1NnpcIixcIlVOREVSTElORVwiOlwiTTEuNzI4LTU2LjQxMXEtMS4zMzItLjA3Mi0xLjYyLS4xNDRsLS4xMDgtMy4xNjhxLjQ2OC0uMDM2IDEuNDQtLjAzNiAyLjE2IDAgNC4wMzIuMTQ0IDQuNzUyLjI1MiA1Ljk3Ni4yNTIgMy4wOTYgMCA2LjA0OC0uMTA4IDQuMTc2LS4xNDQgNS4yNTYtLjE4IDIuMDE2IDAgMy4wOTYtLjA3MmwtLjAzNi41MDQuMDcyIDIuMzA0di4zMjRxLTIuMTYuMzI0LTQuNDY0LjMyNC0yLjE2IDAtMi44NDQuOS0uNDY4LjUwNC0uNDY4IDQuNzUyIDAgLjQ2OC4wMTggMS4xN3QuMDE4LjkxOGwuMDM2IDguMjQ0LjUwNCAxMC4wOHEuMjE2IDQuNDY0IDEuODM2IDcuMjcyIDEuMjYgMi4xMjQgMy40NTYgMy4zMTIgMy4xNjggMS42OTIgNi4zNzIgMS42OTIgMy43NDQgMCA2Ljg3Ni0xLjAwOCAyLjAxNi0uNjQ4IDMuNTY0LTEuODM2IDEuNzI4LTEuMjk2IDIuMzQtMi4zMDQgMS4yOTYtMi4wMTYgMS45MDgtNC4xMDQuNzU2LTIuNjI4Ljc1Ni04LjI0NCAwLTIuODQ0LS4xMjYtNC42MDh0LS4zOTYtNC40MS0uNDg2LTUuNzQybC0uMTQ0LTIuMTI0cS0uMTgtMi40MTItLjg2NC0zLjE2OC0xLjIyNC0xLjI2LTIuNzcyLTEuMjI0bC0zLjYuMDcyLS41MDQtLjEwOC4wNzItMy4wOTZoMy4wMjRsNy4zOC4zNnEyLjczNi4xMDggNy4wNTYtLjM2bC42NDguMDcycS4yMTYgMS4zNjguMjE2IDEuODM2IDAgLjI1Mi0uMTQ0IDEuMTE2LTEuNjIuNDMyLTMuMDI0LjQ2OC0yLjYyOC4zOTYtMi44NDQuNjEyLS41NC41NC0uNTQgMS40NzYgMCAuMjUyLjA1NC45NzJ0LjA1NCAxLjExNnEuMjg4LjY4NC43OTIgMTQuMjU2LjIxNiA3LjAyLS41NCAxMC45NDQtLjU0IDIuNzM2LTEuNDc2IDQuMzkyLTEuMzY4IDIuMzQtNC4wMzIgNC40MjgtMi43IDIuMDUyLTYuNTUyIDMuMjA0LTMuOTI0IDEuMTg4LTkuMTggMS4xODgtNi4wMTIgMC0xMC4yMjQtMS42NTYtNC4yODQtMS42OTItNi40NDQtNC4zOTItMi4xOTYtMi43MzYtMi45ODgtNy4wMi0uNTc2LTIuODgtLjU3Ni04LjUzMnYtMTEuOTg4cTAtNi43NjgtLjYxMi03LjY2OC0uOS0xLjI5Ni01LjI5Mi0xLjQwNHptNTMuNTY4IDUwLjcyNHYtMi4zMDRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC01Mi45OTJxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoNTIuOTkycS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4elwiLFwiVEFCTEVcIjpcIk0xOC40MzItMTQuOTAzdi02LjkxMnEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTExLjUycS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djYuOTEycTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDExLjUycS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0wLTEzLjgyNHYtNi45MTJxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0xMS41MnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY2LjkxMnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgxMS41MnEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMTguNDMyIDEzLjgyNHYtNi45MTJxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0xMS41MnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY2LjkxMnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgxMS41MnEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptLTE4LjQzMi0yNy42NDh2LTYuOTEycTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMTEuNTJxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Ni45MTJxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMTEuNTJxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTE4LjQzMiAxMy44MjR2LTYuOTEycTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMTEuNTJxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Ni45MTJxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMTEuNTJxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTE4LjQzMiAxMy44MjR2LTYuOTEycTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMTEuNTJxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Ni45MTJxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMTEuNTJxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bS0xOC40MzItMjcuNjQ4di02LjkxMnEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTExLjUycS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djYuOTEycTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDExLjUycS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0xOC40MzIgMTMuODI0di02LjkxMnEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTExLjUycS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djYuOTEycTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDExLjUycS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0wLTEzLjgyNHYtNi45MTJxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0xMS41MnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY2LjkxMnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgxMS41MnEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptNC42MDgtMTEuNTJ2MzkuMTY4cTAgMi4zNzYtMS42OTIgNC4wNjh0LTQuMDY4IDEuNjkyaC00OC4zODRxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di0zOS4xNjhxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5Mmg0OC4zODRxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHpcIixcIk1BR0lDXCI6XCJNNDIuODQtNDMuNTIzbDEwLjU0OC0xMC41NDgtMy44NTItMy44NTItMTAuNTQ4IDEwLjU0OHptMTYuMDkyLTEwLjU0OHEwIC45NzItLjY0OCAxLjYybC00Ni4yOTYgNDYuMjk2cS0uNjQ4LjY0OC0xLjYyLjY0OHQtMS42Mi0uNjQ4bC03LjEyOC03LjEyOHEtLjY0OC0uNjQ4LS42NDgtMS42MnQuNjQ4LTEuNjJsNDYuMjk2LTQ2LjI5NnEuNjQ4LS42NDggMS42Mi0uNjQ4dDEuNjIuNjQ4bDcuMTI4IDcuMTI4cS42NDguNjQ4LjY0OCAxLjYyem0tNDguNjM2LTYuODRsMy41MjggMS4wOC0zLjUyOCAxLjA4LTEuMDggMy41MjgtMS4wOC0zLjUyOC0zLjUyOC0xLjA4IDMuNTI4LTEuMDggMS4wOC0zLjUyOHptMTIuNiA1LjgzMmw3LjA1NiAyLjE2LTcuMDU2IDIuMTYtMi4xNiA3LjA1Ni0yLjE2LTcuMDU2LTcuMDU2LTIuMTYgNy4wNTYtMi4xNiAyLjE2LTcuMDU2em0zMy40OCAxNy4yMDhsMy41MjggMS4wOC0zLjUyOCAxLjA4LTEuMDggMy41MjgtMS4wOC0zLjUyOC0zLjUyOC0xLjA4IDMuNTI4LTEuMDggMS4wOC0zLjUyOHptLTIzLjA0LTIzLjA0bDMuNTI4IDEuMDgtMy41MjggMS4wOC0xLjA4IDMuNTI4LTEuMDgtMy41MjgtMy41MjgtMS4wOCAzLjUyOC0xLjA4IDEuMDgtMy41Mjh6XCIsXCJUUlVDS1wiOlwiTTIzLjA0LTEzLjc1MXEwLTEuODcyLTEuMzY4LTMuMjR0LTMuMjQtMS4zNjgtMy4yNCAxLjM2OC0xLjM2OCAzLjI0IDEuMzY4IDMuMjQgMy4yNCAxLjM2OCAzLjI0LTEuMzY4IDEuMzY4LTMuMjR6bS0xMy44MjQtMTguNDMyaDEzLjgyNHYtOS4yMTZoLTUuNjg4cS0uNDY4IDAtLjc5Mi4zMjRsLTcuMDIgNy4wMnEtLjMyNC4zMjQtLjMyNC43OTJ2MS4wOHptNDYuMDggMTguNDMycTAtMS44NzItMS4zNjgtMy4yNHQtMy4yNC0xLjM2OC0zLjI0IDEuMzY4LTEuMzY4IDMuMjQgMS4zNjggMy4yNCAzLjI0IDEuMzY4IDMuMjQtMS4zNjggMS4zNjgtMy4yNHptOS4yMTYtMzkuMTY4djM2Ljg2NHEwIC41NC0uMTQ0Ljk1NHQtLjQ4Ni42NjYtLjU5NC40MTQtLjg0Ni4yMTYtLjgxLjA3Mi0uOTE4IDAtLjgxLS4wMThxMCAzLjgxNi0yLjcgNi41MTZ0LTYuNTE2IDIuNy02LjUxNi0yLjctMi43LTYuNTE2aC0xMy44MjRxMCAzLjgxNi0yLjcgNi41MTZ0LTYuNTE2IDIuNy02LjUxNi0yLjctMi43LTYuNTE2aC0yLjMwNHEtLjEwOCAwLS44MS4wMTh0LS45MTggMC0uODEtLjA3Mi0uODQ2LS4yMTYtLjU5NC0uNDE0LS40ODYtLjY2Ni0uMTQ0LS45NTRxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NHYtMTEuNTJxMC0uMjg4LS4wMTgtMS4yNnQwLTEuMzY4LjA5LTEuMjQyLjIzNC0xLjMzMi41MDQtMS4wOTguODEtMS4wOGw3LjEyOC03LjEyOHEuNjg0LS42ODQgMS44MTgtMS4xNTJ0Mi4xMDYtLjQ2OGg1Ljc2di02LjkxMnEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDM2Ljg2NHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiUElOVEVSRVNUXCI6XCJNNTUuMjk2LTMyLjE4M3EwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDhxLTMuOTk2IDAtNy44NDgtMS4xNTIgMi4xMjQtMy4zNDggMi44MDgtNS45MDQuMzI0LTEuMjI0IDEuOTQ0LTcuNTk2LjcyIDEuNDA0IDIuNjI4IDIuNDN0NC4xMDQgMS4wMjZxNC4zNTYgMCA3Ljc3Ni0yLjQ2NnQ1LjI5Mi02Ljc4NiAxLjg3Mi05LjcycTAtNC4xMDQtMi4xNDItNy43MDR0LTYuMjEtNS44NjgtOS4xOC0yLjI2OHEtMy43OCAwLTcuMDU2IDEuMDQ0dC01LjU2MiAyLjc3Mi0zLjkyNCAzLjk3OC0yLjQxMiA0LjY2Mi0uNzc0IDQuODI0cTAgMy43NDQgMS40NCA2LjU4OHQ0LjIxMiAzLjk5NnExLjA4LjQzMiAxLjM2OC0uNzIuMDcyLS4yNTIuMjg4LTEuMTE2dC4yODgtMS4wOHEuMjE2LS44MjgtLjM5Ni0xLjU0OC0xLjgzNi0yLjE5Ni0xLjgzNi01LjQzNiAwLTUuNDM2IDMuNzYyLTkuMzQydDkuODQ2LTMuOTA2cTUuNDM2IDAgOC40NzggMi45NTJ0My4wNDIgNy42NjhxMCA2LjEyLTIuNDY2IDEwLjQwNHQtNi4zMTggNC4yODRxLTIuMTk2IDAtMy41MjgtMS41NjZ0LS44MjgtMy43NjJxLjI4OC0xLjI2Ljk1NC0zLjM2NnQxLjA4LTMuNzA4LjQxNC0yLjcxOHEwLTEuOC0uOTcyLTIuOTg4dC0yLjc3Mi0xLjE4OHEtMi4yMzIgMC0zLjc4IDIuMDUydC0xLjU0OCA1LjExMnEwIDIuNjI4LjkgNC4zOTJsLTMuNTY0IDE1LjA0OHEtLjYxMiAyLjUyLS40NjggNi4zNzItNy40MTYtMy4yNzYtMTEuOTg4LTEwLjExNnQtNC41NzItMTUuMjI4cTAtNy41MjQgMy43MDgtMTMuODc4dDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIlBJTlRFUkVTVF9TUVVBUkVcIjpcIk00NC45MjgtNTkuODMxcTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTI2LjFxMy4wNi00LjM5MiAzLjg4OC03LjU2LjMyNC0xLjIyNCAxLjkwOC03LjUyNC43NTYgMS40MDQgMi42NDYgMi40MTJ0NC4wNSAxLjAwOHE2LjUxNiAwIDEwLjYzOC01LjMxdDQuMTIyLTEzLjQ0NnEwLTMuMDI0LTEuMjYtNS44NXQtMy40NzQtNS4wMDQtNS40OS0zLjQ5Mi03LjA5Mi0xLjMxNHEtMy43NDQgMC03LjAwMiAxLjAyNnQtNS41MDggMi43NTQtMy44NyAzLjk0Mi0yLjM5NCA0LjYwOC0uNzc0IDQuNzdxMCAzLjY3MiAxLjQyMiA2LjQ4dDQuMTk0IDMuOTZxLjQ2OC4xOC44NDYgMHQuNTIyLS42ODRxLjM2LTEuNTg0LjU0LTIuMTk2LjIxNi0uODI4LS4zOTYtMS41MTItMS44LTIuMjMyLTEuOC01LjQgMC01LjQgMy43MjYtOS4yMzR0OS43MzgtMy44MzRxNS4zNjQgMCA4LjM3IDIuOTE2dDMuMDA2IDcuNTZxMCA2LjA0OC0yLjQzIDEwLjI5NnQtNi4yNDYgNC4yNDhxLTIuMTYgMC0zLjQ5Mi0xLjU2NnQtLjgyOC0zLjcyNnEuMjg4LTEuMjI0Ljk1NC0zLjMzdDEuMDYyLTMuNjcyLjM5Ni0yLjY4MnEwLTEuNzY0LS45NTQtMi45MzR0LTIuNzE4LTEuMTdxLTIuMTk2IDAtMy43MjYgMi4wMzR0LTEuNTMgNS4wMjJxMCAyLjU5Mi44NjQgNC4zNTZsLTMuNTI4IDE0LjkwNHEtLjg2NCAzLjYtLjI1MiA5LjE0NGgtNi41ODhxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2elwiLFwiR09PR0xFX1BMVVNfU1FVQVJFXCI6XCJNMzMuMDEyLTMxLjg1OXEwLS45MzYtLjIxNi0yLjMwNGgtMTMuMDMydjQuNzUyaDcuODEycS0uMTA4Ljg2NC0uNTk0IDEuOHQtMS4zNSAxLjkwOC0yLjM5NCAxLjYwMi0zLjQ3NC42M3EtMy41NjQgMC02LjA4NC0yLjU1NnQtMi41Mi02LjE1NiAyLjUyLTYuMTU2IDYuMDg0LTIuNTU2cTMuMzEyIDAgNS41MDggMi4xMjRsMy43NDQtMy42MzZxLTMuODg4LTMuNi05LjI1Mi0zLjYtNS43NiAwLTkuNzkyIDQuMDV0LTQuMDMyIDkuNzc0IDQuMDMyIDkuNzc0IDkuNzkyIDQuMDVxNS45NCAwIDkuNTk0LTMuNzh0My42NTQtOS43MnptMTIuNDIgMS42NTZoMy45MjR2LTMuOTZoLTMuOTI0di0zLjk2aC0zLjk2djMuOTZoLTMuOTZ2My45NmgzLjk2djMuOTZoMy45NnYtMy45NnptOS44NjQtMTkuMjZ2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiR09PR0xFX1BMVVNcIjpcIk01MS43MzItMzEuNTcxcTAgNy40ODgtMy4xMzIgMTMuMzM4dC04LjkyOCA5LjE0NC0xMy4yODQgMy4yOTRxLTUuMzY0IDAtMTAuMjYtMi4wODh0LTguNDI0LTUuNjE2LTUuNjE2LTguNDI0LTIuMDg4LTEwLjI2IDIuMDg4LTEwLjI2IDUuNjE2LTguNDI0IDguNDI0LTUuNjE2IDEwLjI2LTIuMDg4cTEwLjI5NiAwIDE3LjY3NiA2LjkxMmwtNy4xNjQgNi44NzZxLTQuMjEyLTQuMDY4LTEwLjUxMi00LjA2OC00LjQyOCAwLTguMTkgMi4yMzJ0LTUuOTU4IDYuMDY2LTIuMTk2IDguMzcgMi4xOTYgOC4zNyA1Ljk1OCA2LjA2NiA4LjE5IDIuMjMycTIuOTg4IDAgNS40OS0uODI4dDQuMTIyLTIuMDcgMi44MjYtMi44MjYgMS43NjQtMi45ODguNzc0LTIuNjY0aC0xNC45NzZ2LTkuMDcyaDI0LjkxMnEuNDMyIDIuMjY4LjQzMiA0LjM5MnptMzEuMjEyLTQuMzkydjcuNTZoLTcuNTI0djcuNTI0aC03LjU2di03LjUyNGgtNy41MjR2LTcuNTZoNy41MjR2LTcuNTI0aDcuNTZ2Ny41MjRoNy41MjR6XCIsXCJNT05FWVwiOlwiTTI3LjY0OC0yMi45NjdoMTMuODI0di0zLjQ1NmgtNC42MDh2LTE2LjEyOGgtNC4xMDRsLTUuMzI4IDQuOTMyIDIuNzcyIDIuODhxMS41MTItMS4zMzIgMS45OC0yLjA1MmguMDcydjEwLjM2OGgtNC42MDh2My40NTZ6bTE4LjQzMi05LjIxNnEwIDIuNTItLjc1NiA1LjExMnQtMi4xNDIgNC44MjQtMy42NTQgMy42MzYtNC45NjggMS40MDQtNC45NjgtMS40MDQtMy42NTQtMy42MzYtMi4xNDItNC44MjQtLjc1Ni01LjExMi43NTYtNS4xMTIgMi4xNDItNC44MjQgMy42NTQtMy42MzYgNC45NjgtMS40MDQgNC45NjggMS40MDQgMy42NTQgMy42MzYgMi4xNDIgNC44MjQuNzU2IDUuMTEyem0xOC40MzIgOS4yMTZ2LTE4LjQzMnEtMy44MTYgMC02LjUxNi0yLjd0LTIuNy02LjUxNmgtNDEuNDcycTAgMy44MTYtMi43IDYuNTE2dC02LjUxNiAyLjd2MTguNDMycTMuODE2IDAgNi41MTYgMi43dDIuNyA2LjUxNmg0MS40NzJxMC0zLjgxNiAyLjctNi41MTZ0Ni41MTYtMi43em00LjYwOC0yOS45NTJ2NDEuNDcycTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC02NC41MTJxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNDEuNDcycTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNjQuNTEycS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6XCIsXCJDQVJFVF9ET1dOXCI6XCJNMzYuODY0LTM5LjA5NXEwIC45MzYtLjY4NCAxLjYybC0xNi4xMjggMTYuMTI4cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC0xNi4xMjgtMTYuMTI4cS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MiAxLjYyLS42ODRoMzIuMjU2cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6XCIsXCJDQVJFVF9VUFwiOlwiTTM2Ljg2NC0yMC42NjNxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTMyLjI1NnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYyLjY4NC0xLjYybDE2LjEyOC0xNi4xMjhxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NGwxNi4xMjggMTYuMTI4cS42ODQuNjg0LjY4NCAxLjYyelwiLFwiQ0FSRVRfTEVGVFwiOlwiTTIzLjA0LTQ4LjMxMXYzMi4yNTZxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODQtMS42Mi0uNjg0bC0xNi4xMjgtMTYuMTI4cS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MmwxNi4xMjgtMTYuMTI4cS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODQuNjg0IDEuNjJ6XCIsXCJDQVJFVF9SSUdIVFwiOlwiTTIwLjczNi0zMi4xODNxMCAuOTM2LS42ODQgMS42MmwtMTYuMTI4IDE2LjEyOHEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NC0uNjg0LTEuNjJ2LTMyLjI1NnEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0IDEuNjIuNjg0bDE2LjEyOCAxNi4xMjhxLjY4NC42ODQuNjg0IDEuNjJ6XCIsXCJDT0xVTU5TXCI6XCJNNS43Ni05LjE0M2gyMS44ODh2LTQxLjQ3MmgtMjMuMDR2NDAuMzJxMCAuNDY4LjM0Mi44MXQuODEuMzQyem00OS41MzYtMS4xNTJ2LTQwLjMyaC0yMy4wNHY0MS40NzJoMjEuODg4cS40NjggMCAuODEtLjM0MnQuMzQyLS44MXptNC42MDgtNDMuNzc2djQzLjc3NnEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5MmgtNDguMzg0cS0yLjM3NiAwLTQuMDY4LTEuNjkydC0xLjY5Mi00LjA2OHYtNDMuNzc2cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoNDguMzg0cTIuMzc2IDAgNC4wNjggMS42OTJ0MS42OTIgNC4wNjh6XCIsXCJVTlNPUlRFRFwiOlwiTTM2Ljg2NC0yNS4yNzFxMCAuOTM2LS42ODQgMS42MmwtMTYuMTI4IDE2LjEyOHEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NGwtMTYuMTI4LTE2LjEyOHEtLjY4NC0uNjg0LS42ODQtMS42MnQuNjg0LTEuNjIgMS42Mi0uNjg0aDMyLjI1NnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0wLTEzLjgyNHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMzIuMjU2cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjIuNjg0LTEuNjJsMTYuMTI4LTE2LjEyOHEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDE2LjEyOCAxNi4xMjhxLjY4NC42ODQuNjg0IDEuNjJ6XCIsXCJTT1JUX0RPV05cIjpcIk0zNi44NjQtMjUuMjcxcTAgLjkzNi0uNjg0IDEuNjJsLTE2LjEyOCAxNi4xMjhxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTE2LjEyOC0xNi4xMjhxLS42ODQtLjY4NC0uNjg0LTEuNjJ0LjY4NC0xLjYyIDEuNjItLjY4NGgzMi4yNTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIlNPUlRfVVBcIjpcIk0zNi44NjQtMzkuMDk1cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0zMi4yNTZxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42Mi42ODQtMS42MmwxNi4xMjgtMTYuMTI4cS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODRsMTYuMTI4IDE2LjEyOHEuNjg0LjY4NC42ODQgMS42MnpcIixcIkVOVkVMT1BFXCI6XCJNNjQuNTEyLTM4Ljg3OXYyOC41ODRxMCAyLjM3Ni0xLjY5MiA0LjA2OHQtNC4wNjggMS42OTJoLTUyLjk5MnEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTI4LjU4NHExLjU4NCAxLjc2NCAzLjYzNiAzLjEzMiAxMy4wMzIgOC44NTYgMTcuODkyIDEyLjQyIDIuMDUyIDEuNTEyIDMuMzMgMi4zNTh0My40MDIgMS43MjggMy45Ni44ODJoLjA3MnExLjgzNiAwIDMuOTYtLjg4MnQzLjQwMi0xLjcyOCAzLjMzLTIuMzU4cTYuMTItNC40MjggMTcuOTI4LTEyLjQyIDIuMDUyLTEuNDA0IDMuNi0zLjEzMnptMC0xMC41ODRxMCAyLjg0NC0xLjc2NCA1LjQzNnQtNC4zOTIgNC40MjhxLTEzLjUzNiA5LjM5Ni0xNi44NDggMTEuNy0uMzYuMjUyLTEuNTMgMS4wOTh0LTEuOTQ0IDEuMzY4LTEuODcyIDEuMTctMi4wNy45NzItMS44LjMyNGgtLjA3MnEtLjgyOCAwLTEuOC0uMzI0dC0yLjA3LS45NzItMS44NzItMS4xNy0xLjk0NC0xLjM2OC0xLjUzLTEuMDk4cS0zLjI3Ni0yLjMwNC05LjQzMi02LjU3dC03LjM4LTUuMTNxLTIuMjMyLTEuNTEyLTQuMjEyLTQuMTU4dC0xLjk4LTQuOTE0cTAtMi44MDggMS40OTQtNC42OHQ0LjI2Ni0xLjg3Mmg1Mi45OTJxMi4zNCAwIDQuMDUgMS42OTJ0MS43MSA0LjA2OHpcIixcIkxJTktFRElOXCI6XCJNMTIuNTY0LTQxLjkzOXYzNS42NzZoLTExLjg4di0zNS42NzZoMTEuODh6bS43NTYtMTEuMDE2cS4wMzYgMi42MjgtMS44MTggNC4zOTJ0LTQuODc4IDEuNzY0aC0uMDcycS0yLjk1MiAwLTQuNzUyLTEuNzY0dC0xLjgtNC4zOTJxMC0yLjY2NCAxLjg1NC00LjQxdDQuODQyLTEuNzQ2IDQuNzg4IDEuNzQ2IDEuODM2IDQuNDF6bTQxLjk3NiAyNi4yNDR2MjAuNDQ4aC0xMS44NDR2LTE5LjA4cTAtMy43OC0xLjQ1OC01LjkyMnQtNC41NTQtMi4xNDJxLTIuMjY4IDAtMy43OTggMS4yNDJ0LTIuMjg2IDMuMDc4cS0uMzk2IDEuMDgtLjM5NiAyLjkxNnYxOS45MDhoLTExLjg0NHEuMDcyLTE0LjM2NC4wNzItMjMuMjkydC0uMDM2LTEwLjY1NmwtLjAzNi0xLjcyOGgxMS44NDR2NS4xODRoLS4wNzJxLjcyLTEuMTUyIDEuNDc2LTIuMDE2dDIuMDM0LTEuODcyIDMuMTMyLTEuNTY2IDQuMTIyLS41NThxNi4xNTYgMCA5LjkgNC4wODZ0My43NDQgMTEuOTd6XCIsXCJVTkRPXCI6XCJNNTUuMjk2LTMyLjE4M3EwIDUuNjE2LTIuMTk2IDEwLjcyOHQtNS45MDQgOC44Mi04LjgyIDUuOTA0LTEwLjcyOCAyLjE5NnEtNi4xOTIgMC0xMS43NzItMi42MXQtOS41MDQtNy4zNjJxLS4yNTItLjM2LS4yMzQtLjgxdC4zMDYtLjczOGw0LjkzMi00Ljk2OHEuMzYtLjMyNC45LS4zMjQuNTc2LjA3Mi44MjguNDMyIDIuNjI4IDMuNDIgNi40NDQgNS4yOTJ0OC4xIDEuODcycTMuNzQ0IDAgNy4xNDYtMS40NTh0NS44ODYtMy45NDIgMy45NDItNS44ODYgMS40NTgtNy4xNDYtMS40NTgtNy4xNDYtMy45NDItNS44ODYtNS44ODYtMy45NDItNy4xNDYtMS40NThxLTMuNTI4IDAtNi43NjggMS4yNzh0LTUuNzYgMy42NTRsNC45MzIgNC45NjhxMS4xMTYgMS4wOC41MDQgMi40ODQtLjYxMiAxLjQ0LTIuMTI0IDEuNDRoLTE2LjEyOHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0xNi4xMjhxMC0xLjUxMiAxLjQ0LTIuMTI0IDEuNDA0LS42MTIgMi40ODQuNTA0bDQuNjggNC42NDRxMy44NTItMy42MzYgOC44MDItNS42MzR0MTAuMjQyLTEuOTk4cTUuNjE2IDAgMTAuNzI4IDIuMTk2dDguODIgNS45MDQgNS45MDQgOC44MiAyLjE5NiAxMC43Mjh6XCIsXCJMRUdBTFwiOlwiTTYzLjc1Ni05LjE0M3EwIDEuOTA4LTEuMzMyIDMuMjRsLTMuODUyIDMuODg4cS0xLjQwNCAxLjMzMi0zLjI3NiAxLjMzMi0xLjkwOCAwLTMuMjQtMS4zMzJsLTEzLjA2OC0xMy4xMDRxLTEuMzY4LTEuMjk2LTEuMzY4LTMuMjQgMC0xLjkwOCAxLjU0OC0zLjQ1NmwtOS4yMTYtOS4yMTYtNC41MzYgNC41MzZxLS41MDQuNTA0LTEuMjI0LjUwNHQtMS4yMjQtLjUwNHEuMDcyLjA3Mi40NS40MzJ0LjQ1LjQ2OC4zNi40MTQuMzYuNDg2LjIxNi40ODYuMTk4LjU5NC4wNTQuNjQ4cTAgMS4zNjgtMS4wMDggMi40NDgtLjEwOC4xMDgtLjU5NC42NDh0LS42ODQuNzM4LS42NjYuNTk0LS43OTIuNTU4LS43OTIuMzI0LS45MzYuMTYycS0xLjQ0IDAtMi40NDgtMS4wMDhsLTE0LjY4OC0xNC42ODhxLTEuMDA4LTEuMDA4LTEuMDA4LTIuNDQ4IDAtLjQ2OC4xNjItLjkzNnQuMzI0LS43OTIuNTU4LS43OTIuNTk0LS42NjYuNzM4LS42ODQuNjQ4LS41OTRxMS4wOC0xLjAwOCAyLjQ0OC0xLjAwOC4zNiAwIC42NDguMDU0dC41OTQuMTk4LjQ4Ni4yMTYuNDg2LjM2LjQxNC4zNi40NjguNDUuNDMyLjQ1cS0uNTA0LS41MDQtLjUwNC0xLjIyNHQuNTA0LTEuMjI0bDEyLjUyOC0xMi41MjhxLjUwNC0uNTA0IDEuMjI0LS41MDR0MS4yMjQuNTA0cS0uMDcyLS4wNzItLjQ1LS40MzJ0LS40NS0uNDY4LS4zNi0uNDE0LS4zNi0uNDg2LS4yMTYtLjQ4Ni0uMTk4LS41OTQtLjA1NC0uNjQ4cTAtMS4zNjggMS4wMDgtMi40NDguMTA4LS4xMDguNTk0LS42NDh0LjY4NC0uNzM4LjY2Ni0uNTk0Ljc5Mi0uNTU4Ljc5Mi0uMzI0LjkzNi0uMTYycTEuNDQgMCAyLjQ0OCAxLjAwOGwxNC42ODggMTQuNjg4cTEuMDA4IDEuMDA4IDEuMDA4IDIuNDQ4IDAgLjQ2OC0uMTYyLjkzNnQtLjMyNC43OTItLjU1OC43OTItLjU5NC42NjYtLjczOC42ODQtLjY0OC41OTRxLTEuMDggMS4wMDgtMi40NDggMS4wMDgtLjM2IDAtLjY0OC0uMDU0dC0uNTk0LS4xOTgtLjQ4Ni0uMjE2LS40ODYtLjM2LS40MTQtLjM2LS40NjgtLjQ1LS40MzItLjQ1cS41MDQuNTA0LjUwNCAxLjIyNHQtLjUwNCAxLjIyNGwtNC41MzYgNC41MzYgOS4yMTYgOS4yMTZxMS41NDgtMS41NDggMy40NTYtMS41NDggMS44NzIgMCAzLjI3NiAxLjMzMmwxMy4wNjggMTMuMDY4cTEuMzMyIDEuNDA0IDEuMzMyIDMuMjc2elwiLFwiVEFDSE9NRVRFUlwiOlwiTTEzLjgyNC0yMi45NjdxMC0xLjkwOC0xLjM1LTMuMjU4dC0zLjI1OC0xLjM1LTMuMjU4IDEuMzUtMS4zNSAzLjI1OCAxLjM1IDMuMjU4IDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4em02LjkxMi0xNi4xMjhxMC0xLjkwOC0xLjM1LTMuMjU4dC0zLjI1OC0xLjM1LTMuMjU4IDEuMzUtMS4zNSAzLjI1OCAxLjM1IDMuMjU4IDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4em0xNS40MDggMTcuMzE2bDMuNjM2LTEzLjc1MnEuMjE2LS45MzYtLjI3LTEuNzQ2dC0xLjM4Ni0xLjA2Mi0xLjcyOC4yMzQtMS4wOCAxLjQyMmwtMy42MzYgMTMuNzUycS0yLjE2LjE4LTMuODUyIDEuNTY2dC0yLjI2OCAzLjU0NnEtLjcyIDIuNzcyLjcyIDUuMjU2dDQuMjEyIDMuMjA0IDUuMjU2LS43MiAzLjIwNC00LjIxMnEuNTc2LTIuMTYtLjIxNi00LjIxMnQtMi41OTItMy4yNzZ6bTIzLjc2LTEuMTg4cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptLTIzLjA0LTIzLjA0cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptMTYuMTI4IDYuOTEycTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptMTEuNTIgMTYuMTI4cTAgOS4zOTYtNS4wNzYgMTcuMzg4LS42ODQgMS4wNDQtMS45NDQgMS4wNDRoLTUwLjQ3MnEtMS4yNiAwLTEuOTQ0LTEuMDQ0LTUuMDc2LTcuOTU2LTUuMDc2LTE3LjM4OCAwLTYuNTUyIDIuNTU2LTEyLjUyOHQ2Ljg3Ni0xMC4yOTYgMTAuMjk2LTYuODc2IDEyLjUyOC0yLjU1NiAxMi41MjggMi41NTYgMTAuMjk2IDYuODc2IDYuODc2IDEwLjI5NiAyLjU1NiAxMi41Mjh6XCIsXCJDT01NRU5UX09cIjpcIk0zMi4yNTYtNTAuNjE1cS03LjM0NCAwLTEzLjczNCAyLjUwMnQtMTAuMTUyIDYuNzUtMy43NjIgOS4xOHEwIDQuMDMyIDIuNTc0IDcuNjg2dDcuMjU0IDYuMzE4bDMuMTMyIDEuOC0uOTcyIDMuNDU2cS0uODY0IDMuMjc2LTIuNTIgNi4xOTIgNS40NzItMi4yNjggOS45LTYuMTU2bDEuNTQ4LTEuMzY4IDIuMDUyLjIxNnEyLjQ4NC4yODggNC42OC4yODggNy4zNDQgMCAxMy43MzQtMi41MDJ0MTAuMTUyLTYuNzUgMy43NjItOS4xOC0zLjc2Mi05LjE4LTEwLjE1Mi02Ljc1LTEzLjczNC0yLjUwMnptMzIuMjU2IDE4LjQzMnEwIDYuMjY0LTQuMzIgMTEuNTc0dC0xMS43MzYgOC4zODgtMTYuMiAzLjA3OHEtMi41MiAwLTUuMjItLjI4OC03LjEyOCA2LjMtMTYuNTYgOC43MTItMS43NjQuNTA0LTQuMTA0Ljc5MmgtLjE4cS0uNTQgMC0uOTcyLS4zNzh0LS41NzYtLjk5di0uMDM2cS0uMTA4LS4xNDQtLjAxOC0uNDMydC4wNzItLjM2LjE2Mi0uMzQybC4yMTYtLjMyNC4yNTItLjMwNi4yODgtLjMyNHEuMjUyLS4yODggMS4xMTYtMS4yNDJ0MS4yNDItMS4zNjggMS4xMTYtMS40MjIgMS4xNy0xLjgzNi45NzItMi4xMjQuOTM2LTIuNzM2cS01LjY1Mi0zLjIwNC04LjkxLTcuOTJ0LTMuMjU4LTEwLjExNnEwLTYuMjY0IDQuMzItMTEuNTc0dDExLjczNi04LjM4OCAxNi4yLTMuMDc4IDE2LjIgMy4wNzggMTEuNzM2IDguMzg4IDQuMzIgMTEuNTc0elwiLFwiQ09NTUVOVFNfT1wiOlwiTTI1LjM0NC01MC42MTVxLTUuNTA4IDAtMTAuMjk2IDEuODcydC03LjYxNCA1LjA3Ni0yLjgyNiA2Ljg3NnEwIDIuOTUyIDEuOTA4IDUuNjg4dDUuMzY0IDQuNzUybDMuNDkyIDIuMDE2LTEuMjYgMy4wMjRxMS4yMjQtLjcyIDIuMjMyLTEuNDA0bDEuNTg0LTEuMTE2IDEuOTA4LjM2cTIuODA4LjUwNCA1LjUwOC41MDQgNS41MDggMCAxMC4yOTYtMS44NzJ0Ny42MTQtNS4wNzYgMi44MjYtNi44NzYtMi44MjYtNi44NzYtNy42MTQtNS4wNzYtMTAuMjk2LTEuODcyem0wLTQuNjA4cTYuODc2IDAgMTIuNzI2IDIuNDY2dDkuMjM0IDYuNzE0IDMuMzg0IDkuMjUyLTMuMzg0IDkuMjUyLTkuMjM0IDYuNzE0LTEyLjcyNiAyLjQ2NnEtMy4wOTYgMC02LjMzNi0uNTc2LTQuNDY0IDMuMTY4LTEwLjAwOCA0LjYwOC0xLjI5Ni4zMjQtMy4wOTYuNTc2aC0uMTA4cS0uMzk2IDAtLjczOC0uMjg4dC0uNDE0LS43NTZxLS4wMzYtLjEwOC0uMDM2LS4yMzR0LjAxOC0uMjM0LjA3Mi0uMjE2bC4wOS0uMTguMTI2LS4xOTguMTQ0LS4xOC4xNjItLjE4LjE0NC0uMTYycS4xOC0uMjE2LjgyOC0uOXQuOTM2LTEuMDYyLjgxLTEuMDQ0LjktMS4zODYuNzM4LTEuNTg0cS00LjQ2NC0yLjU5Mi03LjAyLTYuMzcydC0yLjU1Ni04LjA2NHEwLTUuMDA0IDMuMzg0LTkuMjUydDkuMjM0LTYuNzE0IDEyLjcyNi0yLjQ2NnptMjkuNTkyIDQyLjA4NHEuMzYuODY0LjczOCAxLjU4NHQuOSAxLjM4Ni44MSAxLjA0NC45MzYgMS4wNjIuODI4LjlsLjE0NC4xNjIuMTYyLjE4LjE0NC4xOC4xMjYuMTk4LjA5LjE4LjA3Mi4yMTYuMDE4LjIzNC0uMDM2LjIzNHEtLjEwOC41MDQtLjQ2OC43OTJ0LS43OTIuMjUycS0xLjgtLjI1Mi0zLjA5Ni0uNTc2LTUuNTQ0LTEuNDQtMTAuMDA4LTQuNjA4LTMuMjQuNTc2LTYuMzM2LjU3Ni05Ljc1NiAwLTE2Ljk5Mi00Ljc1MiAyLjA4OC4xNDQgMy4xNjguMTQ0IDUuNzk2IDAgMTEuMTI0LTEuNjJ0OS41MDQtNC42NDRxNC41LTMuMzEyIDYuOTEyLTcuNjMydDIuNDEyLTkuMTQ0cTAtMi43NzItLjgyOC01LjQ3MiA0LjY0NCAyLjU1NiA3LjM0NCA2LjQwOHQyLjcgOC4yOHEwIDQuMzItMi41NTYgOC4wODJ0LTcuMDIgNi4zNTR6XCIsXCJGTEFTSFwiOlwiTTMxLjg2LTQ0LjA2M3EuNjQ4LjcyLjI1MiAxLjU4NGwtMTkuNDQgNDEuNjUycS0uNDY4LjktMS41MTIuOS0uMTQ0IDAtLjUwNC0uMDcyLS42MTItLjE4LS45MTgtLjY4NHQtLjE2Mi0xLjA4bDcuMDkyLTI5LjA4OC0xNC42MTYgMy42MzZxLS4xNDQuMDM2LS40MzIuMDM2LS42NDggMC0xLjExNi0uMzk2LS42NDgtLjU0LS40NjgtMS40MDRsNy4yMzYtMjkuN3EuMTQ0LS41MDQuNTc2LS44Mjh0MS4wMDgtLjMyNGgxMS44MDhxLjY4NCAwIDEuMTUyLjQ1dC40NjggMS4wNjJxMCAuMjg4LS4xOC42NDhsLTYuMTU2IDE2LjY2OCAxNC4yNTYtMy41MjhxLjI4OC0uMDcyLjQzMi0uMDcyLjY4NCAwIDEuMjI0LjU0elwiLFwiU0lURU1BUFwiOlwiTTY0LjUxMi0xOS41MTF2MTEuNTJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMTEuNTJxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTExLjUycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgzLjQ1NnYtNi45MTJoLTE4LjQzMnY2LjkxMmgzLjQ1NnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh2MTEuNTJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMTEuNTJxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTExLjUycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgzLjQ1NnYtNi45MTJoLTE4LjQzMnY2LjkxMmgzLjQ1NnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh2MTEuNTJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMTEuNTJxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTExLjUycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgzLjQ1NnYtNi45MTJxMC0xLjg3MiAxLjM2OC0zLjI0dDMuMjQtMS4zNjhoMTguNDMydi02LjkxMmgtMy40NTZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTExLjUycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgxMS41MnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh2MTEuNTJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMy40NTZ2Ni45MTJoMTguNDMycTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0djYuOTEyaDMuNDU2cTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHpcIixcIlVNQlJFTExBXCI6XCJNMzIuMjU2LTM0LjYzMXYyMC44OHEwIDMuNzQ0LTIuNzM2IDYuNDh0LTYuNDggMi43MzYtNi40OC0yLjczNi0yLjczNi02LjQ4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODQgMS42Mi42ODQuNjg0IDEuNjJxMCAxLjggMS40MDQgMy4yMDR0My4yMDQgMS40MDQgMy4yMDQtMS40MDQgMS40MDQtMy4yMDR2LTIwLjg4cTEuMTg4LS4zOTYgMi4zMDQtLjM5NnQyLjMwNC4zOTZ6bTI3LjY0OC45NzJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJxLS4zOTYgMC0uODI4LS4zNi0xLjc2NC0xLjY1Ni0zLjM0OC0yLjQ4NHQtMy42NzItLjgyOHEtMi40NDggMC00LjYwOCAxLjMzMnQtMy43MDggMy40OTJxLS4yNTIuMzYtLjYzIDEuMDA4dC0uNTIyLjg2NHEtLjM5Ni42MTItMS4wMDguNjEyLS42NDggMC0xLjA0NC0uNjEyLS4xNDQtLjIxNi0uNTIyLS44NjR0LS42My0xLjAwOHEtMS41NDgtMi4xNi0zLjY5LTMuNDkydC00LjU5LTEuMzMyLTQuNTkgMS4zMzItMy42OSAzLjQ5MnEtLjI1Mi4zNi0uNjMgMS4wMDh0LS41MjIuODY0cS0uMzk2LjYxMi0xLjA0NC42MTItLjYxMiAwLTEuMDA4LS42MTItLjE0NC0uMjE2LS41MjItLjg2NHQtLjYzLTEuMDA4cS0xLjU0OC0yLjE2LTMuNzA4LTMuNDkydC00LjYwOC0xLjMzMnEtMi4wODggMC0zLjY3Mi44Mjh0LTMuMzQ4IDIuNDg0cS0uNDMyLjM2LS44MjguMzYtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXEwLS4xOC4wMzYtLjI1MiAxLjYyLTYuNTg4IDYuMjEtMTEuNTAydDEwLjcyOC03LjM2MiAxMi45NzgtMi40NDhxNS4wNCAwIDkuODgyIDEuNDR0OC44NzQgNC4wODYgNy4wMDIgNi43MzIgNC4xNTggOS4wNTRxLjAzNi4wNzIuMDM2LjI1MnptLTI3LjY0OC0yNi4xNzJ2My41MjhxLTEuNTEyLS4wNzItMi4zMDQtLjA3MnQtMi4zMDQuMDcydi0zLjUyOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0IDEuNjIuNjg0LjY4NCAxLjYyelwiLFwiUEFTVEVcIjpcIk0yNy42NDgtNC41MzVoMzIuMjU2di0yMy4wNGgtMTQuOTc2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di0xNC45NzZoLTEzLjgyNHY0MS40NzJ6bTkuMjE2LTUxLjg0di0yLjMwNHEwLS40NjgtLjM0Mi0uODF0LS44MS0uMzQyaC0yNS4zNDRxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjIuMzA0cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgyNS4zNDRxLjQ2OCAwIC44MS0uMzQydC4zNDItLjgxem05LjIxNiAyNC4xOTJoMTAuNzY0bC0xMC43NjQtMTAuNzY0djEwLjc2NHptMTguNDMyIDQuNjA4djI0LjE5MnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0zNC41NnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNS43NmgtMTkuNTg0cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di00OC4zODRxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDM5LjE2OHExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh2MTEuODA4cS43NTYuNDY4IDEuMjk2IDEuMDA4bDE0LjY4OCAxNC42ODhxMS4wMDggMS4wMDggMS43MjggMi43MzZ0LjcyIDMuMTY4elwiLFwiTElHSFRCVUxCX09cIjpcIk0yNi40OTYtNDMuNzAzcTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyLS44MS0uMzQyLS4zNDItLjgxcTAtMS42NTYtMS45NDQtMi41NTZ0LTMuODE2LS45cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxLjM0Mi0uODEuODEtLjM0MnExLjggMCAzLjU4Mi41NzZ0My4xMzIgMS45NDQgMS4zNSAzLjI0em01Ljc2IDBxMC0yLjU5Mi0xLjI0Mi00LjgyNHQtMy4yNC0zLjY1NC00LjQyOC0yLjIzMi00LjkxNC0uODEtNC45MTQuODEtNC40MjggMi4yMzItMy4yNCAzLjY1NC0xLjI0MiA0LjgyNHEwIDMuNjM2IDIuNDQ4IDYuNDguMzYuMzk2IDEuMDk4IDEuMTg4dDEuMDk4IDEuMTg4cTQuNjA4IDUuNTA4IDUuMDc2IDEwLjcyOGg4LjIwOHEuNDY4LTUuMjIgNS4wNzYtMTAuNzI4LjM2LS4zOTYgMS4wOTgtMS4xODh0MS4wOTgtMS4xODhxMi40NDgtMi44NDQgMi40NDgtNi40OHptNC42MDggMHEwIDUuNTgtMy43MDggOS42NDgtMS42MiAxLjc2NC0yLjY4MiAzLjEzMnQtMi4xNDIgMy40MzgtMS4yMjQgMy44N3ExLjY5MiAxLjAwOCAxLjY5MiAyLjk1MiAwIDEuMzMyLS45IDIuMzA0LjkuOTcyLjkgMi4zMDQgMCAxLjg3Mi0xLjYyIDIuOTE2LjQ2OC44MjguNDY4IDEuNjkyIDAgMS42NTYtMS4xMzQgMi41NTZ0LTIuNzkuOXEtLjcyIDEuNTg0LTIuMTYgMi41MnQtMy4xMzIuOTM2LTMuMTMyLS45MzYtMi4xNi0yLjUycS0xLjY1NiAwLTIuNzktLjl0LTEuMTM0LTIuNTU2cTAtLjg2NC40NjgtMS42OTItMS42Mi0xLjA0NC0xLjYyLTIuOTE2IDAtMS4zMzIuOS0yLjMwNC0uOS0uOTcyLS45LTIuMzA0IDAtMS45NDQgMS42OTItMi45NTItLjE0NC0xLjgtMS4yMjQtMy44N3QtMi4xNDItMy40MzgtMi42ODItMy4xMzJxLTMuNzA4LTQuMDY4LTMuNzA4LTkuNjQ4IDAtMy41NjQgMS42MDItNi42NDJ0NC4yMTItNS4xMTIgNS45MDQtMy4yMDQgNi43MTQtMS4xNyA2LjcxNCAxLjE3IDUuOTA0IDMuMjA0IDQuMjEyIDUuMTEyIDEuNjAyIDYuNjQyelwiLFwiRVhDSEFOR0VcIjpcIk02NC41MTItMjEuODE1djYuOTEycTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC00OS41MzZ2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJxLS40MzIgMC0uODY0LS4zNmwtMTEuNDg0LTExLjUycS0uMzI0LS4zMjQtLjMyNC0uNzkyIDAtLjUwNC4zMjQtLjgyOGwxMS41Mi0xMS41MnEuMzI0LS4zMjQuODI4LS4zMjQuNDY4IDAgLjgxLjM0MnQuMzQyLjgxdjYuOTEyaDQ5LjUzNnEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0wLTE5LjU4NHEwIC41MDQtLjMyNC44MjhsLTExLjUyIDExLjUycS0uMzI0LjMyNC0uODI4LjMyNC0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMmgtNDkuNTM2cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0Mmg0OS41MzZ2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRxLjQzMiAwIC44NjQuMzZsMTEuNDg0IDExLjQ4NHEuMzI0LjMyNC4zMjQuODI4elwiLFwiQ0xPVURfRE9XTkxPQURcIjpcIk00Ni4wOC0zMS4wMzFxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC04LjA2NHYtMTIuNjcycTAtLjQ2OC0uMzQyLS44MXQtLjgxLS4zNDJoLTYuOTEycS0uNDY4IDAtLjgxLjM0MnQtLjM0Mi44MXYxMi42NzJoLTguMDY0cS0uNDY4IDAtLjgxLjM0MnQtLjM0Mi44MXEwIC41MDQuMzI0LjgyOGwxMi42NzIgMTIuNjcycS4zMjQuMzI0LjgyOC4zMjR0LjgyOC0uMzI0bDEyLjYzNi0xMi42MzZxLjM2LS40MzIuMzYtLjg2NHptMjMuMDQgOC4wNjRxMCA1LjcyNC00LjA1IDkuNzc0dC05Ljc3NCA0LjA1aC0zOS4xNjhxLTYuNjYgMC0xMS4zOTQtNC43MzR0LTQuNzM0LTExLjM5NHEwLTQuNjggMi41Mi04LjY0dDYuNzY4LTUuOTRxLS4wNzItMS4wOC0uMDcyLTEuNTQ4IDAtNy42MzIgNS40LTEzLjAzMnQxMy4wMzItNS40cTUuNjE2IDAgMTAuMjc4IDMuMTMydDYuNzg2IDguMzE2cTIuNTU2LTIuMjMyIDUuOTc2LTIuMjMyIDMuODE2IDAgNi41MTYgMi43dDIuNyA2LjUxNnEwIDIuNzM2LTEuNDc2IDQuOTY4IDQuNjggMS4xMTYgNy42ODYgNC44Nzh0My4wMDYgOC41ODZ6XCIsXCJDTE9VRF9VUExPQURcIjpcIk00Ni4wOC0zMy4zMzVxMC0uNTA0LS4zMjQtLjgyOGwtMTIuNjcyLTEyLjY3MnEtLjMyNC0uMzI0LS44MjgtLjMyNHQtLjgyOC4zMjRsLTEyLjYzNiAxMi42MzZxLS4zNi40MzItLjM2Ljg2NCAwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg4LjA2NHYxMi42NzJxMCAuNDY4LjM0Mi44MXQuODEuMzQyaDYuOTEycS40NjggMCAuODEtLjM0MnQuMzQyLS44MXYtMTIuNjcyaDguMDY0cS40NjggMCAuODEtLjM0MnQuMzQyLS44MXptMjMuMDQgMTAuMzY4cTAgNS43MjQtNC4wNSA5Ljc3NHQtOS43NzQgNC4wNWgtMzkuMTY4cS02LjY2IDAtMTEuMzk0LTQuNzM0dC00LjczNC0xMS4zOTRxMC00LjY4IDIuNTItOC42NHQ2Ljc2OC01Ljk0cS0uMDcyLTEuMDgtLjA3Mi0xLjU0OCAwLTcuNjMyIDUuNC0xMy4wMzJ0MTMuMDMyLTUuNHE1LjYxNiAwIDEwLjI3OCAzLjEzMnQ2Ljc4NiA4LjMxNnEyLjU1Ni0yLjIzMiA1Ljk3Ni0yLjIzMiAzLjgxNiAwIDYuNTE2IDIuN3QyLjcgNi41MTZxMCAyLjczNi0xLjQ3NiA0Ljk2OCA0LjY4IDEuMTE2IDcuNjg2IDQuODc4dDMuMDA2IDguNTg2elwiLFwiVVNFUl9NRFwiOlwiTTEzLjgyNC0xNi4wNTVxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODQtMS42Mi0uNjg0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODQgMS42Mi42ODQuNjg0IDEuNjJ6bTM2Ljg2NCAyLjE5NnEwIDQuMzU2LTIuNjI4IDYuODR0LTYuOTg0IDIuNDg0aC0zMS40NjRxLTQuMzU2IDAtNi45ODQtMi40ODR0LTIuNjI4LTYuODRxMC0yLjQ0OC4xOTgtNC43MTZ0Ljg2NC00Ljk2OCAxLjcxLTQuNzcgMi45MTYtMy43MDggNC4zMi0yLjE3OHEtLjc5MiAxLjg3Mi0uNzkyIDQuMzJ2Ny4zMDhxLTIuMDg4LjcyLTMuMzQ4IDIuNTJ0LTEuMjYgMy45OTZxMCAyLjg4IDIuMDE2IDQuODk2dDQuODk2IDIuMDE2IDQuODk2LTIuMDE2IDIuMDE2LTQuODk2cTAtMi4xOTYtMS4yNzgtMy45OTZ0LTMuMzMtMi41MnYtNy4zMDhxMC0yLjIzMi45LTMuMzQ4IDQuNzUyIDMuNzQ0IDEwLjYyIDMuNzQ0dDEwLjYyLTMuNzQ0cS45IDEuMTE2LjkgMy4zNDh2Mi4zMDRxLTMuODE2IDAtNi41MTYgMi43dC0yLjcgNi41MTZ2My4yMDRxLTEuMTUyIDEuMDQ0LTEuMTUyIDIuNTU2IDAgMS40NCAxLjAwOCAyLjQ0OHQyLjQ0OCAxLjAwOCAyLjQ0OC0xLjAwOCAxLjAwOC0yLjQ0OHEwLTEuNTEyLTEuMTUyLTIuNTU2di0zLjIwNHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OCAzLjI0IDEuMzY4IDEuMzY4IDMuMjR2My4yMDRxLTEuMTUyIDEuMDQ0LTEuMTUyIDIuNTU2IDAgMS40NCAxLjAwOCAyLjQ0OHQyLjQ0OCAxLjAwOCAyLjQ0OC0xLjAwOCAxLjAwOC0yLjQ0OHEwLTEuNTEyLTEuMTUyLTIuNTU2di0zLjIwNHEwLTIuNDQ4LTEuMjQyLTQuNTl0LTMuMzY2LTMuMzY2cTAtLjM2LjAxOC0xLjUzdDAtMS43MjgtLjA5LTEuNDk0LS4yNTItMS42OTItLjQ2OC0xLjQ0cTIuNDQ4LjU0IDQuMzIgMi4xNzh0Mi45MTYgMy43MDggMS43MSA0Ljc3Ljg2NCA0Ljk2OC4xOTggNC43MTZ6bS0xMS41Mi0zMi4xNDhxMCA1LjcyNC00LjA1IDkuNzc0dC05Ljc3NCA0LjA1LTkuNzc0LTQuMDUtNC4wNS05Ljc3NCA0LjA1LTkuNzc0IDkuNzc0LTQuMDUgOS43NzQgNC4wNSA0LjA1IDkuNzc0elwiLFwiU1RFVEhPU0NPUEVcIjpcIk00Ni4wOC0zOS4wOTVxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42MiAxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTQuNjA4IDBxMCAyLjIzMi0xLjI3OCAzLjk5NnQtMy4zMyAyLjUydjE0LjIycTAgNS43MjQtNC43MzQgOS43NzR0LTExLjM5NCA0LjA1LTExLjM5NC00LjA1LTQuNzM0LTkuNzc0di00Ljc1MnEtNS45MDQtLjcyLTkuODY0LTQuNjA4dC0zLjk2LTkuMDcydi0xOC40MzJxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NHEuMjE2IDAgLjU3Ni4wNzIuNjEyLTEuMDggMS42OTItMS43Mjh0Mi4zNC0uNjQ4cTEuOTA4IDAgMy4yNTggMS4zNXQxLjM1IDMuMjU4LTEuMzUgMy4yNTgtMy4yNTggMS4zNXEtMS4xODggMC0yLjMwNC0uNjQ4djE0LjQ3MnEwIDMuODE2IDMuMzg0IDYuNTE2dDguMTM2IDIuNyA4LjEzNi0yLjcgMy4zODQtNi41MTZ2LTE0LjQ3MnEtMS4xMTYuNjQ4LTIuMzA0LjY0OC0xLjkwOCAwLTMuMjU4LTEuMzV0LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1cTEuMjYgMCAyLjM0LjY0OHQxLjY5MiAxLjcyOHEuMzYtLjA3Mi41NzYtLjA3Mi45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MTguNDMycTAgNS4xODQtMy45NiA5LjA3MnQtOS44NjQgNC42MDh2NC43NTJxMCAzLjgxNiAzLjM4NCA2LjUxNnQ4LjEzNiAyLjcgOC4xMzYtMi43IDMuMzg0LTYuNTE2di0xNC4yMnEtMi4wNTItLjc1Ni0zLjMzLTIuNTJ0LTEuMjc4LTMuOTk2cTAtMi44OCAyLjAxNi00Ljg5NnQ0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnpcIixcIlNVSVRDQVNFXCI6XCJNMjMuMDQtNTAuNjE1aDE4LjQzMnYtNC42MDhoLTE4LjQzMnY0LjYwOHptLTEyLjY3MiAwdjQ2LjA4aC0yLjMwNHEtMy4zMTIgMC01LjY4OC0yLjM3NnQtMi4zNzYtNS42ODh2LTI5Ljk1MnEwLTMuMzEyIDIuMzc2LTUuNjg4dDUuNjg4LTIuMzc2aDIuMzA0em00MC4zMiAwdjQ2LjA4aC0zNi44NjR2LTQ2LjA4aDQuNjA4di01Ljc2cTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgyMC43MzZxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4djUuNzZoNC42MDh6bTEzLjgyNCA4LjA2NHYyOS45NTJxMCAzLjMxMi0yLjM3NiA1LjY4OHQtNS42ODggMi4zNzZoLTIuMzA0di00Ni4wOGgyLjMwNHEzLjMxMiAwIDUuNjg4IDIuMzc2dDIuMzc2IDUuNjg4elwiLFwiQkVMTFwiOlwiTTMyLjgzMi0zLjM4M3EwLS41NzYtLjU3Ni0uNTc2LTIuMTI0IDAtMy42NTQtMS41M3QtMS41My0zLjY1NHEwLS41NzYtLjU3Ni0uNTc2dC0uNTc2LjU3NnEwIDIuNjI4IDEuODU0IDQuNDgydDQuNDgyIDEuODU0cS41NzYgMCAuNTc2LS41NzZ6bTI5LjM3Ni0xMC4zNjhxMCAxLjg3Mi0xLjM2OCAzLjI0dC0zLjI0IDEuMzY4aC0xNi4xMjhxMCAzLjgxNi0yLjcgNi41MTZ0LTYuNTE2IDIuNy02LjUxNi0yLjctMi43LTYuNTE2aC0xNi4xMjhxLTEuODcyIDAtMy4yNC0xLjM2OHQtMS4zNjgtMy4yNHExLjgtMS41MTIgMy4yNzYtMy4xNjh0My4wNi00LjMwMiAyLjY4Mi01LjcwNiAxLjgtNy40MTYuNzAyLTkuMzZxMC01LjQ3MiA0LjIxMi0xMC4xN3QxMS4wNTItNS43MDZxLS4yODgtLjY4NC0uMjg4LTEuNDA0IDAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOCAyLjQ0OCAxLjAwOCAxLjAwOCAyLjQ0OHEwIC43Mi0uMjg4IDEuNDA0IDYuODQgMS4wMDggMTEuMDUyIDUuNzA2dDQuMjEyIDEwLjE3cTAgNS4wMDQuNzAyIDkuMzZ0MS44IDcuNDE2IDIuNjgyIDUuNzA2IDMuMDYgNC4zMDIgMy4yNzYgMy4xNjh6XCIsXCJDT0ZGRUVcIjpcIk01OS45MDQtNDEuMzk5cTAtMi44OC0yLjAxNi00Ljg5NnQtNC44OTYtMi4wMTZoLTIuMzA0djEzLjgyNGgyLjMwNHEyLjg4IDAgNC44OTYtMi4wMTZ0Mi4wMTYtNC44OTZ6bS01OS45MDQgMjcuNjQ4aDY0LjUxMnEwIDMuODE2LTIuNyA2LjUxNnQtNi41MTYgMi43aC00Ni4wOHEtMy44MTYgMC02LjUxNi0yLjd0LTIuNy02LjUxNnptNjYuODE2LTI3LjY0OHEwIDUuNzI0LTQuMDUgOS43NzR0LTkuNzc0IDQuMDVoLTIuMzA0djEuMTUycTAgMy4zMTItMi4zNzYgNS42ODh0LTUuNjg4IDIuMzc2aC0yNS4zNDRxLTMuMzEyIDAtNS42ODgtMi4zNzZ0LTIuMzc2LTUuNjg4di0yNi40OTZxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg0MS40NzJxNS43MjQgMCA5Ljc3NCA0LjA1dDQuMDUgOS43NzR6XCIsXCJDVVRMRVJZXCI6XCJNMjMuMDQtNjIuMTM1djIzLjA0cTAgMi4xOTYtMS4yNzggMy45OTZ0LTMuMzMgMi41MnYyOC4wNDRxMCAxLjg3Mi0xLjM2OCAzLjI0dC0zLjI0IDEuMzY4aC00LjYwOHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di0yOC4wNDRxLTIuMDUyLS43Mi0zLjMzLTIuNTJ0LTEuMjc4LTMuOTk2di0yMy4wNHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0IDEuNjIuNjg0LjY4NCAxLjYydjE0Ljk3NnEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODQgMS42Mi0uNjg0LjY4NC0xLjYydi0xNC45NzZxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NCAxLjYyLjY4NC42ODQgMS42MnYxNC45NzZxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0IDEuNjItLjY4NC42ODQtMS42MnYtMTQuOTc2cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODQgMS42Mi42ODQuNjg0IDEuNjJ6bTI3LjY0OCAwdjU3LjZxMCAxLjg3Mi0xLjM2OCAzLjI0dC0zLjI0IDEuMzY4aC00LjYwOHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di0xOC40MzJoLTguMDY0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yOC44cTAtNC43NTIgMy4zODQtOC4xMzZ0OC4xMzYtMy4zODRoOS4yMTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIkZJTEVfVEVYVF9PXCI6XCJNNTIuODQ4LTUwLjc1OXExLjAwOCAxLjAwOCAxLjcyOCAyLjczNnQuNzIgMy4xNjh2NDEuNDcycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTQ4LjM4NHEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNTcuNnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMzIuMjU2cTEuNDQgMCAzLjE2OC43MnQyLjczNiAxLjcyOHptLTE1Ljk4NC04Ljc4NHYxMy41MzZoMTMuNTM2cS0uMzYtMS4wNDQtLjc5Mi0xLjQ3NmwtMTEuMjY4LTExLjI2OHEtLjQzMi0uNDMyLTEuNDc2LS43OTJ6bTEzLjgyNCA1NS4wMDh2LTM2Ljg2NGgtMTQuOTc2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di0xNC45NzZoLTI3LjY0OHY1NS4yOTZoNDYuMDh6bS0zNi44NjQtMzEuMTA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMjUuMzQ0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yNS4zNDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDR6bTI2LjQ5NiA4LjA2NHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMjUuMzQ0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMjUuMzQ0em0wIDkuMjE2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yNS4zNDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgyNS4zNDR6XCIsXCJCVUlMRElOR19PXCI6XCJNMTMuODI0LTE3LjIwN3YyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bTAtOS4yMTZ2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIuMzA0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjMwNHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem05LjIxNiAwdjIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptLTkuMjE2LTkuMjE2djIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptMjcuNjQ4IDE4LjQzMnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bS05LjIxNi05LjIxNnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bS05LjIxNi05LjIxNnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bS05LjIxNi05LjIxNnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bTI3LjY0OCAxOC40MzJ2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIuMzA0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjMwNHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0tOS4yMTYtOS4yMTZ2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIuMzA0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjMwNHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0tOS4yMTYtOS4yMTZ2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIuMzA0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjMwNHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0tOS4yMTYtOS4yMTZ2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIuMzA0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjMwNHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0yNy42NDggMTguNDMydjIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptLTkuMjE2LTkuMjE2djIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptLTkuMjE2LTkuMjE2djIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptMTguNDMyIDkuMjE2djIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptLTkuMjE2LTkuMjE2djIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptOS4yMTYgMHYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bS05LjIxNiA0OS41MzZoMTMuODI0di01NS4yOTZoLTQxLjQ3MnY1NS4yOTZoMTMuODI0di04LjA2NHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgxMS41MnEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxdjguMDY0em0xOC40MzItNTcuNnY1OS45MDRxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTQ2LjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTU5LjkwNHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQ2LjA4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6XCIsXCJIT1NQSVRBTF9PXCI6XCJNMTMuODI0LTE3LjIwN3YyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bTAtOS4yMTZ2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIuMzA0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjMwNHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem05LjIxNiAwdjIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptLTkuMjE2LTkuMjE2djIuMzA0cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyaC0yLjMwNHEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtMi4zMDRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMi4zMDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXptMjcuNjQ4IDE4LjQzMnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bS05LjIxNi05LjIxNnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bS05LjIxNi05LjIxNnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bTE4LjQzMiA5LjIxNnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bS05LjIxNi05LjIxNnYyLjMwNHEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMi4zMDRxLS40NjggMC0uODEtLjM0MnQtLjM0Mi0uODF2LTIuMzA0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDIuMzA0cS40NjggMCAuODEuMzQydC4zNDIuODF6bTkuMjE2IDB2Mi4zMDRxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTIuMzA0cS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0yLjMwNHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjMwNHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxem0tOS4yMTYgMzEuMTA0aDEzLjgyNHYtNDEuNDcyaC05LjIxNnYxLjE1MnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC0xNi4xMjhxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTEuMTUyaC05LjIxNnY0MS40NzJoMTMuODI0di04LjA2NHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgxMS41MnEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxdjguMDY0em0wLTQyLjYyNHYtMTEuNTJxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtMi4zMDRxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjMuNDU2aC00LjYwOHYtMy40NTZxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtMi4zMDRxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjExLjUycTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgyLjMwNHEuNDY4IDAgLjgxLS4zNDJ0LjM0Mi0uODF2LTMuNDU2aDQuNjA4djMuNDU2cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgyLjMwNHEuNDY4IDAgLjgxLS4zNDJ0LjM0Mi0uODF6bTE4LjQzMi0xLjE1MnY0Ni4wOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNDYuMDhxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNDYuMDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGgxMS41MnYtMTAuMzY4cTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgxNi4xMjhxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4djEwLjM2OGgxMS41MnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiQU1CVUxBTkNFXCI6XCJNMjMuMDQtMTMuNzUxcTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptLTEzLjgyNC0xOC40MzJoMTMuODI0di05LjIxNmgtNS42ODhxLS41MDQuMDcyLS43OTIuMzI0bC03LjAyIDcuMDJxLS4yNTIuNDMyLS4zMjQuNzkydjEuMDh6bTQ2LjA4IDE4LjQzMnEwLTEuOTA4LTEuMzUtMy4yNTh0LTMuMjU4LTEuMzUtMy4yNTggMS4zNS0xLjM1IDMuMjU4IDEuMzUgMy4yNTggMy4yNTggMS4zNSAzLjI1OC0xLjM1IDEuMzUtMy4yNTh6bTQuNjA4LTI0LjE5MnYtNi45MTJxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC04LjA2NHYtOC4wNjRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC02LjkxMnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY4LjA2NGgtOC4wNjRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Ni45MTJxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoOC4wNjR2OC4wNjRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoNi45MTJxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh2LTguMDY0aDguMDY0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em05LjIxNi0xOS41ODR2NDEuNDcycTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC02LjkxMnEwIDMuODE2LTIuNyA2LjUxNnQtNi41MTYgMi43LTYuNTE2LTIuNy0yLjctNi41MTZoLTEzLjgyNHEwIDMuODE2LTIuNyA2LjUxNnQtNi41MTYgMi43LTYuNTE2LTIuNy0yLjctNi41MTZoLTQuNjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjIuNjg0LTEuNjIgMS42Mi0uNjg0di0xNC45NzZxMC0uOTM2LjQ2OC0yLjA4OHQxLjE1Mi0xLjgzNmw3LjEyOC03LjEyOHEuNjg0LS42ODQgMS44MzYtMS4xNTJ0Mi4wODgtLjQ2OGg1Ljc2di0xMS41MnEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQxLjQ3MnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiTUVES0lUXCI6XCJNNDYuMDgtMjQuMTE5di02LjkxMnEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTguMDY0di04LjA2NHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djguMDY0aC04LjA2NHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY2LjkxMnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg4LjA2NHY4LjA2NHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg2LjkxMnEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHYtOC4wNjRoOC4wNjRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bS0yMy4wNC0yNi40OTZoMTguNDMydi00LjYwOGgtMTguNDMydjQuNjA4em0tMTMuODI0IDB2NDYuMDhoLTEuMTUycS0zLjMxMiAwLTUuNjg4LTIuMzc2dC0yLjM3Ni01LjY4OHYtMjkuOTUycTAtMy4zMTIgMi4zNzYtNS42ODh0NS42ODgtMi4zNzZoMS4xNTJ6bTQyLjYyNCAwdjQ2LjA4aC0zOS4xNjh2LTQ2LjA4aDUuNzZ2LTUuNzZxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDIwLjczNnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh2NS43Nmg1Ljc2em0xMi42NzIgOC4wNjR2MjkuOTUycTAgMy4zMTItMi4zNzYgNS42ODh0LTUuNjg4IDIuMzc2aC0xLjE1MnYtNDYuMDhoMS4xNTJxMy4zMTIgMCA1LjY4OCAyLjM3NnQyLjM3NiA1LjY4OHpcIixcIkZJR0hURVJfSkVUXCI6XCJNNjkuMTItMjkuODc5cS0uMDM2IDEuMTUyLTEwLjM2OCAzLjQ1NmwtMTIuNjcyIDEuMTUyLTguMDY0IDIuMzA0aC0yLjMwNGwtMTAuNTQ4IDEyLjY3MmgyLjQ4NHEuOTM2IDAgMS42Mi4xNjJ0LjY4NC40MTQtLjY4NC40MTQtMS42Mi4xNjJoLTExLjUydi0xLjE1MmgyLjMwNHYtMTQuOTc2aC01Ljc2bC02LjkxMiA4LjA2NGgtMy40NTZsLTEuMTUyLTEuMTUydi02LjkxMmgxLjE1MnYtMS4xNTJoNC42MDh2LS4yODhsLTYuOTEyLS44NjR2LTQuNjA4bDYuOTEyLS44NjR2LS4yODhoLTQuNjA4di0xLjE1MmgtMS4xNTJ2LTYuOTEybDEuMTUyLTEuMTUyaDMuNDU2bDYuOTEyIDguMDY0aDUuNzZ2LTE0Ljk3NmgtMi4zMDR2LTEuMTUyaDExLjUycS45MzYgMCAxLjYyLjE2MnQuNjg0LjQxNC0uNjg0LjQxNC0xLjYyLjE2MmgtMi40ODRsMTAuNTQ4IDEyLjY3MmgyLjMwNGw4LjA2NCAyLjMwNCAxMi42NzIgMS4xNTJxOS4zOTYgMi4wODggMTAuMzMyIDMuMzQ4elwiLFwiQkVFUlwiOlwiTTIzLjA0LTMyLjE4M3YtMTMuODI0aC05LjIxNnY5LjIxNnEwIDEuOTA4IDEuMzUgMy4yNTh0My4yNTggMS4zNWg0LjYwOHptMzYuODY0IDE2LjEyOHY2LjkxMmgtNDEuNDcydi02LjkxMmw0LjYwOC02LjkxMmgtNC42MDhxLTUuNzI0IDAtOS43NzQtNC4wNXQtNC4wNS05Ljc3NHYtMTEuNTJsLTIuMzA0LTIuMzA0IDEuMTUyLTQuNjA4aDE3LjI4bDEuMTUyLTQuNjA4aDM0LjU2bDEuMTUyIDYuOTEyLTIuMzA0IDEuMTUydjI4Ljh6XCIsXCJIX1NRVUFSRVwiOlwiTTQ2LjA4LTE2LjA1NXYtMzIuMjU2cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtNC42MDhxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYydjExLjUyaC0xOC40MzJ2LTExLjUycTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtNC42MDhxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYydjMyLjI1NnEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRoNC42MDhxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ2LTExLjUyaDE4LjQzMnYxMS41MnEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRoNC42MDhxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ6bTkuMjE2LTMzLjQwOHYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2cTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCIsXCJQTFVTX1NRVUFSRVwiOlwiTTQ2LjA4LTI5Ljg3OXYtNC42MDhxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC0xMS41MnYtMTEuNTJxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC00LjYwOHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2MTEuNTJoLTExLjUycS0uOTM2IDAtMS42Mi42ODR0LS42ODQgMS42MnY0LjYwOHEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRoMTEuNTJ2MTEuNTJxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDQuNjA4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYydi0xMS41MmgxMS41MnEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptOS4yMTYtMTkuNTg0djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkFOR0xFX0RPVUJMRV9MRUZUXCI6XCJNMjIuNTcyLTE0LjkwM3EwIC40NjgtLjM2LjgyOGwtMS44IDEuOHEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC0xNi43NzYtMTYuNzc2cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDE2Ljc3Ni0xNi43NzZxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsMS44IDEuOHEuMzYuMzYuMzYuODI4dC0uMzYuODI4bC0xNC4xNDggMTQuMTQ4IDE0LjE0OCAxNC4xNDhxLjM2LjM2LjM2LjgyOHptMTMuODI0IDBxMCAuNDY4LS4zNi44MjhsLTEuOCAxLjhxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtMTYuNzc2LTE2Ljc3NnEtLjM2LS4zNi0uMzYtLjgyOHQuMzYtLjgyOGwxNi43NzYtMTYuNzc2cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDEuOCAxLjhxLjM2LjM2LjM2LjgyOHQtLjM2LjgyOGwtMTQuMTQ4IDE0LjE0OCAxNC4xNDggMTQuMTQ4cS4zNi4zNi4zNi44Mjh6XCIsXCJBTkdMRV9ET1VCTEVfUklHSFRcIjpcIk0yMS40Mi0yOS44NzlxMCAuNDY4LS4zNi44MjhsLTE2Ljc3NiAxNi43NzZxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtMS44LTEuOHEtLjM2LS4zNi0uMzYtLjgyOHQuMzYtLjgyOGwxNC4xNDgtMTQuMTQ4LTE0LjE0OC0xNC4xNDhxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsMS44LTEuOHEuMzYtLjM2LjgyOC0uMzZ0LjgyOC4zNmwxNi43NzYgMTYuNzc2cS4zNi4zNi4zNi44Mjh6bTEzLjgyNCAwcTAgLjQ2OC0uMzYuODI4bC0xNi43NzYgMTYuNzc2cS0uMzYuMzYtLjgyOC4zNnQtLjgyOC0uMzZsLTEuOC0xLjhxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsMTQuMTQ4LTE0LjE0OC0xNC4xNDgtMTQuMTQ4cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDEuOC0xLjhxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsMTYuNzc2IDE2Ljc3NnEuMzYuMzYuMzYuODI4elwiLFwiQU5HTEVfRE9VQkxFX1VQXCI6XCJNMzguNy0xNy4yMDdxMCAuNDY4LS4zNi44MjhsLTEuOCAxLjhxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtMTQuMTQ4LTE0LjE0OC0xNC4xNDggMTQuMTQ4cS0uMzYuMzYtLjgyOC4zNnQtLjgyOC0uMzZsLTEuOC0xLjhxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsMTYuNzc2LTE2Ljc3NnEuMzYtLjM2LjgyOC0uMzZ0LjgyOC4zNmwxNi43NzYgMTYuNzc2cS4zNi4zNi4zNi44Mjh6bTAtMTMuODI0cTAgLjQ2OC0uMzYuODI4bC0xLjggMS44cS0uMzYuMzYtLjgyOC4zNnQtLjgyOC0uMzZsLTE0LjE0OC0xNC4xNDgtMTQuMTQ4IDE0LjE0OHEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC0xLjgtMS44cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDE2Ljc3Ni0xNi43NzZxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsMTYuNzc2IDE2Ljc3NnEuMzYuMzYuMzYuODI4elwiLFwiQU5HTEVfRE9VQkxFX0RPV05cIjpcIk0zOC43LTMzLjMzNXEwIC40NjgtLjM2LjgyOGwtMTYuNzc2IDE2Ljc3NnEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC0xNi43NzYtMTYuNzc2cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDEuOC0xLjhxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsMTQuMTQ4IDE0LjE0OCAxNC4xNDgtMTQuMTQ4cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDEuOCAxLjhxLjM2LjM2LjM2LjgyOHptMC0xMy44MjRxMCAuNDY4LS4zNi44MjhsLTE2Ljc3NiAxNi43NzZxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtMTYuNzc2LTE2Ljc3NnEtLjM2LS4zNi0uMzYtLjgyOHQuMzYtLjgyOGwxLjgtMS44cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDE0LjE0OCAxNC4xNDggMTQuMTQ4LTE0LjE0OHEuMzYtLjM2LjgyOC0uMzZ0LjgyOC4zNmwxLjggMS44cS4zNi4zNi4zNi44Mjh6XCIsXCJBTkdMRV9MRUZUXCI6XCJNMjIuNTcyLTQ0Ljg1NXEwIC40NjgtLjM2LjgyOGwtMTQuMTQ4IDE0LjE0OCAxNC4xNDggMTQuMTQ4cS4zNi4zNi4zNi44Mjh0LS4zNi44MjhsLTEuOCAxLjhxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtMTYuNzc2LTE2Ljc3NnEtLjM2LS4zNi0uMzYtLjgyOHQuMzYtLjgyOGwxNi43NzYtMTYuNzc2cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDEuOCAxLjhxLjM2LjM2LjM2LjgyOHpcIixcIkFOR0xFX1JJR0hUXCI6XCJNMjEuNDItMjkuODc5cTAgLjQ2OC0uMzYuODI4bC0xNi43NzYgMTYuNzc2cS0uMzYuMzYtLjgyOC4zNnQtLjgyOC0uMzZsLTEuOC0xLjhxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsMTQuMTQ4LTE0LjE0OC0xNC4xNDgtMTQuMTQ4cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDEuOC0xLjhxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsMTYuNzc2IDE2Ljc3NnEuMzYuMzYuMzYuODI4elwiLFwiQU5HTEVfVVBcIjpcIk0zOC43LTIxLjgxNXEwIC40NjgtLjM2LjgyOGwtMS44IDEuOHEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC0xNC4xNDgtMTQuMTQ4LTE0LjE0OCAxNC4xNDhxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtMS44LTEuOHEtLjM2LS4zNi0uMzYtLjgyOHQuMzYtLjgyOGwxNi43NzYtMTYuNzc2cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDE2Ljc3NiAxNi43NzZxLjM2LjM2LjM2LjgyOHpcIixcIkFOR0xFX0RPV05cIjpcIk0zOC43LTM3Ljk0M3EwIC40NjgtLjM2LjgyOGwtMTYuNzc2IDE2Ljc3NnEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC0xNi43NzYtMTYuNzc2cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDEuOC0xLjhxLjM2LS4zNi44MjgtLjM2dC44MjguMzZsMTQuMTQ4IDE0LjE0OCAxNC4xNDgtMTQuMTQ4cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDEuOCAxLjhxLjM2LjM2LjM2LjgyOHpcIixcIkRFU0tUT1BcIjpcIk02NC41MTItMjguNzI3di0yOS45NTJxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtNTcuNnEtLjQ2OCAwLS44MS4zNDJ0LS4zNDIuODF2MjkuOTUycTAgLjQ2OC4zNDIuODF0LjgxLjM0Mmg1Ny42cS40NjggMCAuODEtLjM0MnQuMzQyLS44MXptNC42MDgtMjkuOTUydjM5LjE2OHEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5MmgtMTkuNTg0cTAgMS4zMzIuNTc2IDIuNzl0MS4xNTIgMi41NTYuNTc2IDEuNTY2cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0xOC40MzJxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnEwLS41MDQuNTc2LTEuNTg0dDEuMTUyLTIuNTIuNTc2LTIuODA4aC0xOS41ODRxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di0zOS4xNjhxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5Mmg1Ny42cTIuMzc2IDAgNC4wNjggMS42OTJ0MS42OTIgNC4wNjh6XCIsXCJMQVBUT1BcIjpcIk0xNC45NzYtMTguMzU5cS0yLjM3NiAwLTQuMDY4LTEuNjkydC0xLjY5Mi00LjA2OHYtMjUuMzQ0cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoMzkuMTY4cTIuMzc2IDAgNC4wNjggMS42OTJ0MS42OTIgNC4wNjh2MjUuMzQ0cTAgMi4zNzYtMS42OTIgNC4wNjh0LTQuMDY4IDEuNjkyaC0zOS4xNjh6bS0xLjE1Mi0zMS4xMDR2MjUuMzQ0cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgzOS4xNjhxLjQ2OCAwIC44MS0uMzQydC4zNDItLjgxdi0yNS4zNDRxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtMzkuMTY4cS0uNDY4IDAtLjgxLjM0MnQtLjM0Mi44MXptNDkuNTM2IDMzLjQwOGg1Ljc2djMuNDU2cTAgMS40NC0xLjY5MiAyLjQ0OHQtNC4wNjggMS4wMDhoLTU3LjZxLTIuMzc2IDAtNC4wNjgtMS4wMDh0LTEuNjkyLTIuNDQ4di0zLjQ1Nmg2My4zNnptLTI1LjkyIDMuNDU2cS41NzYgMCAuNTc2LS41NzZ0LS41NzYtLjU3NmgtNS43NnEtLjU3NiAwLS41NzYuNTc2dC41NzYuNTc2aDUuNzZ6XCIsXCJUQUJMRVRcIjpcIk0yMy4wNC0xMy43NTFxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42MiAxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTEzLjgyNC01Ljc2di0zNC41NnEwLS40NjgtLjM0Mi0uODF0LS44MS0uMzQyaC0yOS45NTJxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjM0LjU2cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgyOS45NTJxLjQ2OCAwIC44MS0uMzQydC4zNDItLjgxem00LjYwOC0zNC41NnYzOS4xNjhxMCAyLjM3Ni0xLjY5MiA0LjA2OHQtNC4wNjggMS42OTJoLTI5Ljk1MnEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTM5LjE2OHEwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyaDI5Ljk1MnEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4elwiLFwiTU9CSUxFX1BIT05FXCI6XCJNMTYuNzA0LTEzLjc1MXEwLTEuMTg4LS44NDYtMi4wMzR0LTIuMDM0LS44NDYtMi4wMzQuODQ2LS44NDYgMi4wMzQuODQ2IDIuMDM0IDIuMDM0Ljg0NiAyLjAzNC0uODQ2Ljg0Ni0yLjAzNHptNy40ODgtNS43NnYtMjUuMzQ0cTAtLjQ2OC0uMzQyLS44MXQtLjgxLS4zNDJoLTE4LjQzMnEtLjQ2OCAwLS44MS4zNDJ0LS4zNDIuODF2MjUuMzQ0cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgxOC40MzJxLjQ2OCAwIC44MS0uMzQydC4zNDItLjgxem0tNi45MTItMzAuNTI4cTAtLjU3Ni0uNTc2LS41NzZoLTUuNzZxLS41NzYgMC0uNTc2LjU3NnQuNTc2LjU3Nmg1Ljc2cS41NzYgMCAuNTc2LS41NzZ6bTEwLjM2OC0uNTc2djM2Ljg2NHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTE4LjQzMnEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di0zNi44NjRxMC0xLjg3MiAxLjM2OC0zLjI0dDMuMjQtMS4zNjhoMTguNDMycTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0elwiLFwiQ0lSQ0xFX09cIjpcIk0yNy42NDgtNTEuNzY3cS01LjMyOCAwLTkuODI4IDIuNjI4dC03LjEyOCA3LjEyOC0yLjYyOCA5LjgyOCAyLjYyOCA5LjgyOCA3LjEyOCA3LjEyOCA5LjgyOCAyLjYyOCA5LjgyOC0yLjYyOCA3LjEyOC03LjEyOCAyLjYyOC05LjgyOC0yLjYyOC05LjgyOC03LjEyOC03LjEyOC05LjgyOC0yLjYyOHptMjcuNjQ4IDE5LjU4NHEwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJRVU9URV9MRUZUXCI6XCJNMjcuNjQ4LTI5Ljg3OXYxMy44MjRxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNmgtMTMuODI0cS0yLjg4IDAtNC44OTYtMi4wMTZ0LTIuMDE2LTQuODk2di0yNS4zNDRxMC0zLjc0NCAxLjQ1OC03LjE0NnQzLjk0Mi01Ljg4NiA1Ljg4Ni0zLjk0MiA3LjE0Ni0xLjQ1OGgyLjMwNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0yLjMwNHEtMy44MTYgMC02LjUxNiAyLjd0LTIuNyA2LjUxNnYxLjE1MnEwIDEuNDQgMS4wMDggMi40NDh0Mi40NDggMS4wMDhoOC4wNjRxMi44OCAwIDQuODk2IDIuMDE2dDIuMDE2IDQuODk2em0zMi4yNTYgMHYxMy44MjRxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNmgtMTMuODI0cS0yLjg4IDAtNC44OTYtMi4wMTZ0LTIuMDE2LTQuODk2di0yNS4zNDRxMC0zLjc0NCAxLjQ1OC03LjE0NnQzLjk0Mi01Ljg4NiA1Ljg4Ni0zLjk0MiA3LjE0Ni0xLjQ1OGgyLjMwNHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC0yLjMwNHEtMy44MTYgMC02LjUxNiAyLjd0LTIuNyA2LjUxNnYxLjE1MnEwIDEuNDQgMS4wMDggMi40NDh0Mi40NDggMS4wMDhoOC4wNjRxMi44OCAwIDQuODk2IDIuMDE2dDIuMDE2IDQuODk2elwiLFwiUVVPVEVfUklHSFRcIjpcIk0yNy42NDgtNTIuOTE5djI1LjM0NHEwIDMuNzQ0LTEuNDU4IDcuMTQ2dC0zLjk0MiA1Ljg4Ni01Ljg4NiAzLjk0Mi03LjE0NiAxLjQ1OGgtMi4zMDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGgyLjMwNHEzLjgxNiAwIDYuNTE2LTIuN3QyLjctNi41MTZ2LTEuMTUycTAtMS40NC0xLjAwOC0yLjQ0OHQtMi40NDgtMS4wMDhoLTguMDY0cS0yLjg4IDAtNC44OTYtMi4wMTZ0LTIuMDE2LTQuODk2di0xMy44MjRxMC0yLjg4IDIuMDE2LTQuODk2dDQuODk2LTIuMDE2aDEzLjgyNHEyLjg4IDAgNC44OTYgMi4wMTZ0Mi4wMTYgNC44OTZ6bTMyLjI1NiAwdjI1LjM0NHEwIDMuNzQ0LTEuNDU4IDcuMTQ2dC0zLjk0MiA1Ljg4Ni01Ljg4NiAzLjk0Mi03LjE0NiAxLjQ1OGgtMi4zMDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGgyLjMwNHEzLjgxNiAwIDYuNTE2LTIuN3QyLjctNi41MTZ2LTEuMTUycTAtMS40NC0xLjAwOC0yLjQ0OHQtMi40NDgtMS4wMDhoLTguMDY0cS0yLjg4IDAtNC44OTYtMi4wMTZ0LTIuMDE2LTQuODk2di0xMy44MjRxMC0yLjg4IDIuMDE2LTQuODk2dDQuODk2LTIuMDE2aDEzLjgyNHEyLjg4IDAgNC44OTYgMi4wMTZ0Mi4wMTYgNC44OTZ6XCIsXCJTUElOTkVSXCI6XCJNMTguOTM2LTE0LjI1NXEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzVxLTEuODcyIDAtMy4yNC0xLjM2OHQtMS4zNjgtMy4yNHEwLTEuOTA4IDEuMzUtMy4yNTh0My4yNTgtMS4zNSAzLjI1OCAxLjM1IDEuMzUgMy4yNTh6bTE3LjkyOCA3LjQxNnEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzUtMy4yNTgtMS4zNS0xLjM1LTMuMjU4IDEuMzUtMy4yNTggMy4yNTgtMS4zNSAzLjI1OCAxLjM1IDEuMzUgMy4yNTh6bS0yNS4zNDQtMjUuMzQ0cTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptNDMuMjcyIDE3LjkyOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhxLTEuOTA4IDAtMy4yNTgtMS4zNXQtMS4zNS0zLjI1OCAxLjM1LTMuMjU4IDMuMjU4LTEuMzUgMy4yNTggMS4zNSAxLjM1IDMuMjU4em0tMzQuNzA0LTM1Ljg1NnEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5Mi00LjA2OC0xLjY5Mi0xLjY5Mi00LjA2OCAxLjY5Mi00LjA2OCA0LjA2OC0xLjY5MiA0LjA2OCAxLjY5MiAxLjY5MiA0LjA2OHptNDIuMTIgMTcuOTI4cTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptLTIzLjA0LTI1LjM0NHEwIDIuODgtMi4wMTYgNC44OTZ0LTQuODk2IDIuMDE2LTQuODk2LTIuMDE2LTIuMDE2LTQuODk2IDIuMDE2LTQuODk2IDQuODk2LTIuMDE2IDQuODk2IDIuMDE2IDIuMDE2IDQuODk2em0xOS4wOCA3LjQxNnEwIDMuMzQ4LTIuMzc2IDUuNzA2dC01LjY4OCAyLjM1OHEtMy4zNDggMC01LjcwNi0yLjM1OHQtMi4zNTgtNS43MDZxMC0zLjMxMiAyLjM1OC01LjY4OHQ1LjcwNi0yLjM3NnEzLjMxMiAwIDUuNjg4IDIuMzc2dDIuMzc2IDUuNjg4elwiLFwiQ0lSQ0xFXCI6XCJNNTUuMjk2LTMyLjE4M3EwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJSRVBMWVwiOlwiTTY0LjUxMi0yNC4xMTlxMCA1Ljk3Ni00LjU3MiAxNi4yMzYtLjEwOC4yNTItLjM3OC44NjR0LS40ODYgMS4wOC0uNDY4Ljc5MnEtLjQzMi42MTItMS4wMDguNjEyLS41NCAwLS44NDYtLjM2dC0uMzA2LS45cTAtLjMyNC4wOS0uOTU0dC4wOS0uODQ2cS4xOC0yLjQ0OC4xOC00LjQyOCAwLTMuNjM2LS42My02LjUxNnQtMS43NDYtNC45ODYtMi44OC0zLjYzNi0zLjc5OC0yLjUwMi00Ljc4OC0xLjUzLTUuNTQ0LS43NzQtNi4zMTgtLjIxNmgtOC4wNjR2OS4yMTZxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODQtMS42Mi0uNjg0bC0xOC40MzItMTguNDMycS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MmwxOC40MzItMTguNDMycS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODQuNjg0IDEuNjJ2OS4yMTZoOC4wNjRxMjUuNjY4IDAgMzEuNSAxNC41MDggMS45MDggNC44MjQgMS45MDggMTEuOTg4elwiLFwiR0lUSFVCX0FMVFwiOlwiTTIzLjA0LTIwLjY2M3EwIDEuNDQtLjQ1IDIuOTUydC0xLjU0OCAyLjczNi0yLjYxIDEuMjI0LTIuNjEtMS4yMjQtMS41NDgtMi43MzYtLjQ1LTIuOTUyLjQ1LTIuOTUyIDEuNTQ4LTIuNzM2IDIuNjEtMS4yMjQgMi42MSAxLjIyNCAxLjU0OCAyLjczNi40NSAyLjk1MnptMjMuMDQgMHEwIDEuNDQtLjQ1IDIuOTUydC0xLjU0OCAyLjczNi0yLjYxIDEuMjI0LTIuNjEtMS4yMjQtMS41NDgtMi43MzYtLjQ1LTIuOTUyLjQ1LTIuOTUyIDEuNTQ4LTIuNzM2IDIuNjEtMS4yMjQgMi42MSAxLjIyNCAxLjU0OCAyLjczNi40NSAyLjk1MnptNS43NiAwcTAtNC4zMi0yLjQ4NC03LjM0NHQtNi43MzItMy4wMjRxLTEuNDc2IDAtNy4wMi43NTYtMi41NTYuMzk2LTUuNjUyLjM5NnQtNS42NTItLjM5NnEtNS40NzItLjc1Ni03LjAyLS43NTYtNC4yNDggMC02LjczMiAzLjAyNHQtMi40ODQgNy4zNDRxMCAzLjE2OCAxLjE1MiA1LjUyNnQyLjkxNiAzLjcwOCA0LjM5MiAyLjE2IDUuMDQgMS4wNjIgNS4zNjQuMjUyaDYuMDQ4cTIuOTUyIDAgNS4zNjQtLjI1MnQ1LjA0LTEuMDYyIDQuMzkyLTIuMTYgMi45MTYtMy43MDggMS4xNTItNS41MjZ6bTguMDY0LTYuMzM2cTAgNy40NTItMi4xOTYgMTEuOTE2LTEuMzY4IDIuNzcyLTMuNzk4IDQuNzg4dC01LjA3NiAzLjA5Ni02LjEyIDEuNzEtNi4xNzQuNzkyLTYuMDEyLjE2MnEtMi44MDggMC01LjExMi0uMTA4dC01LjMxLS40NS01LjQ5LTEuMDgtNC45MzItMS44NTQtNC4zNTYtMi45MTYtMy4wOTYtNC4xNHEtMi4yMzItNC40MjgtMi4yMzItMTEuOTE2IDAtOC41MzIgNC44OTYtMTQuMjU2LS45NzItMi45NTItLjk3Mi02LjEyIDAtNC4xNzYgMS44MzYtNy44NDggMy44ODggMCA2Ljg0IDEuNDIydDYuODA0IDQuNDQ2cTUuMjkyLTEuMjYgMTEuMTI0LTEuMjYgNS4zMjggMCAxMC4wOCAxLjE1MiAzLjc4LTIuOTUyIDYuNzMyLTQuMzU2dDYuODA0LTEuNDA0cTEuODM2IDMuNjcyIDEuODM2IDcuODQ4IDAgMy4xMzItLjk3MiA2LjA0OCA0Ljg5NiA1Ljc2IDQuODk2IDE0LjMyOHpcIixcIkZPTERFUl9PXCI6XCJNNTUuMjk2LTE3LjIwN3YtMjUuMzQ0cTAtMS40NC0xLjAwOC0yLjQ0OHQtMi40NDgtMS4wMDhoLTI1LjM0NHEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMi4zMDRxMC0xLjQ0LTEuMDA4LTIuNDQ4dC0yLjQ0OC0xLjAwOGgtMTEuNTJxLTEuNDQgMC0yLjQ0OCAxLjAwOHQtMS4wMDggMi40NDh2MzQuNTZxMCAxLjQ0IDEuMDA4IDIuNDQ4dDIuNDQ4IDEuMDA4aDQzLjc3NnExLjQ0IDAgMi40NDgtMS4wMDh0MS4wMDgtMi40NDh6bTQuNjA4LTI1LjM0NHYyNS4zNDRxMCAzLjMxMi0yLjM3NiA1LjY4OHQtNS42ODggMi4zNzZoLTQzLjc3NnEtMy4zMTIgMC01LjY4OC0yLjM3NnQtMi4zNzYtNS42ODh2LTM0LjU2cTAtMy4zMTIgMi4zNzYtNS42ODh0NS42ODgtMi4zNzZoMTEuNTJxMy4zMTIgMCA1LjY4OCAyLjM3NnQyLjM3NiA1LjY4OHYxLjE1MmgyNC4xOTJxMy4zMTIgMCA1LjY4OCAyLjM3NnQyLjM3NiA1LjY4OHpcIixcIkZPTERFUl9PUEVOX09cIjpcIk02NC4xMTYtMzAuOTIzcTAtMS4yNi0xLjkwOC0xLjI2aC0zOS4xNjhxLTEuNDQgMC0zLjA3OC43NzR0LTIuNTc0IDEuODlsLTEwLjU4NCAxMy4wNjhxLS42NDguODY0LS42NDggMS40NCAwIDEuMjYgMS45MDggMS4yNmgzOS4xNjhxMS40NCAwIDMuMDk2LS43OTJ0Mi41NTYtMS45MDhsMTAuNTg0LTEzLjA2OHEuNjQ4LS43OTIuNjQ4LTEuNDA0em0tNDEuMDc2LTUuODY4aDI3LjY0OHYtNS43NnEwLTEuNDQtMS4wMDgtMi40NDh0LTIuNDQ4LTEuMDA4aC0yMC43MzZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTIuMzA0cTAtMS40NC0xLjAwOC0yLjQ0OHQtMi40NDgtMS4wMDhoLTExLjUycS0xLjQ0IDAtMi40NDggMS4wMDh0LTEuMDA4IDIuNDQ4djMwLjcwOGw5LjIxNi0xMS4zNHExLjU4NC0xLjkwOCA0LjE3Ni0zLjE1dDUuMDQtMS4yNDJ6bTQ1LjY4NCA1Ljg2OHEwIDIuMjMyLTEuNjU2IDQuMzJsLTEwLjYyIDEzLjA2OHEtMS41NDggMS45MDgtNC4xNzYgMy4xNXQtNS4wNCAxLjI0MmgtMzkuMTY4cS0zLjMxMiAwLTUuNjg4LTIuMzc2dC0yLjM3Ni01LjY4OHYtMzQuNTZxMC0zLjMxMiAyLjM3Ni01LjY4OHQ1LjY4OC0yLjM3NmgxMS41MnEzLjMxMiAwIDUuNjg4IDIuMzc2dDIuMzc2IDUuNjg4djEuMTUyaDE5LjU4NHEzLjMxMiAwIDUuNjg4IDIuMzc2dDIuMzc2IDUuNjg4djUuNzZoNi45MTJxMS45NDQgMCAzLjU2NC44ODJ0Mi40MTIgMi41MzhxLjU0IDEuMTUyLjU0IDIuNDQ4elwiLFwiU01JTEVfT1wiOlwiTTQwLjgyNC0yNS43MzlxLTEuMzMyIDQuMzU2LTQuOTY4IDcuMDJ0LTguMjA4IDIuNjY0LTguMjA4LTIuNjY0LTQuOTY4LTcuMDJxLS4yODgtLjkuMTQ0LTEuNzQ2dDEuMzY4LTEuMTM0cS45LS4yODggMS43NDYuMTQ0dDEuMTM0IDEuMzY4cS45IDIuODggMy4zMyA0LjY2MnQ1LjQ1NCAxLjc4MiA1LjQ1NC0xLjc4MiAzLjMzLTQuNjYycS4yODgtLjkzNiAxLjE1Mi0xLjM2OHQxLjc2NC0uMTQ0IDEuMzMyIDEuMTM0LjE0NCAxLjc0NnptLTE3Ljc4NC0xNS42NnEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzUtMy4yNTgtMS4zNS0xLjM1LTMuMjU4IDEuMzUtMy4yNTggMy4yNTgtMS4zNSAzLjI1OCAxLjM1IDEuMzUgMy4yNTh6bTE4LjQzMiAwcTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptOS4yMTYgOS4yMTZxMC00LjY4LTEuODM2LTguOTQ2dC00LjkxNC03LjM0NC03LjM0NC00LjkxNC04Ljk0Ni0xLjgzNi04Ljk0NiAxLjgzNi03LjM0NCA0LjkxNC00LjkxNCA3LjM0NC0xLjgzNiA4Ljk0NiAxLjgzNiA4Ljk0NiA0LjkxNCA3LjM0NCA3LjM0NCA0LjkxNCA4Ljk0NiAxLjgzNiA4Ljk0Ni0xLjgzNiA3LjM0NC00LjkxNCA0LjkxNC03LjM0NCAxLjgzNi04Ljk0NnptNC42MDggMHEwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJGUk9XTl9PXCI6XCJNNDAuODI0LTIwLjE5NXEuMjg4LjktLjE0NCAxLjc0NnQtMS4zMzIgMS4xMzQtMS43NjQtLjE0NC0xLjE1Mi0xLjM2OHEtLjktMi44OC0zLjMzLTQuNjYydC01LjQ1NC0xLjc4Mi01LjQ1NCAxLjc4Mi0zLjMzIDQuNjYycS0uMjg4LjkzNi0xLjEzNCAxLjM2OHQtMS43NDYuMTQ0cS0uOTM2LS4yODgtMS4zNjgtMS4xMzR0LS4xNDQtMS43NDZxMS4zMzItNC4zNTYgNC45NjgtNy4wMnQ4LjIwOC0yLjY2NCA4LjIwOCAyLjY2NCA0Ljk2OCA3LjAyem0tMTcuNzg0LTIxLjIwNHEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzUtMy4yNTgtMS4zNS0xLjM1LTMuMjU4IDEuMzUtMy4yNTggMy4yNTgtMS4zNSAzLjI1OCAxLjM1IDEuMzUgMy4yNTh6bTE4LjQzMiAwcTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptOS4yMTYgOS4yMTZxMC00LjY4LTEuODM2LTguOTQ2dC00LjkxNC03LjM0NC03LjM0NC00LjkxNC04Ljk0Ni0xLjgzNi04Ljk0NiAxLjgzNi03LjM0NCA0LjkxNC00LjkxNCA3LjM0NC0xLjgzNiA4Ljk0NiAxLjgzNiA4Ljk0NiA0LjkxNCA3LjM0NCA3LjM0NCA0LjkxNCA4Ljk0NiAxLjgzNiA4Ljk0Ni0xLjgzNiA3LjM0NC00LjkxNCA0LjkxNC03LjM0NCAxLjgzNi04Ljk0NnptNC42MDggMHEwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJNRUhfT1wiOlwiTTQxLjQ3Mi0yNS4yNzFxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTIzLjA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjIuNjg0LTEuNjIgMS42Mi0uNjg0aDIzLjA0cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bS0xOC40MzItMTYuMTI4cTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptMTguNDMyIDBxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1LTMuMjU4LTEuMzUtMS4zNS0zLjI1OCAxLjM1LTMuMjU4IDMuMjU4LTEuMzUgMy4yNTggMS4zNSAxLjM1IDMuMjU4em05LjIxNiA5LjIxNnEwLTQuNjgtMS44MzYtOC45NDZ0LTQuOTE0LTcuMzQ0LTcuMzQ0LTQuOTE0LTguOTQ2LTEuODM2LTguOTQ2IDEuODM2LTcuMzQ0IDQuOTE0LTQuOTE0IDcuMzQ0LTEuODM2IDguOTQ2IDEuODM2IDguOTQ2IDQuOTE0IDcuMzQ0IDcuMzQ0IDQuOTE0IDguOTQ2IDEuODM2IDguOTQ2LTEuODM2IDcuMzQ0LTQuOTE0IDQuOTE0LTcuMzQ0IDEuODM2LTguOTQ2em00LjYwOCAwcTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkdBTUVQQURcIjpcIk0yOS45NTItMjUuMjcxdi00LjYwOHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTYuOTEydi02LjkxMnEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTQuNjA4cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djYuOTEyaC02LjkxMnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY0LjYwOHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg2LjkxMnY2LjkxMnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg0LjYwOHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHYtNi45MTJoNi45MTJxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTIwLjczNiAyLjMwNHEwLTEuOTA4LTEuMzUtMy4yNTh0LTMuMjU4LTEuMzUtMy4yNTggMS4zNS0xLjM1IDMuMjU4IDEuMzUgMy4yNTggMy4yNTggMS4zNSAzLjI1OC0xLjM1IDEuMzUtMy4yNTh6bTkuMjE2LTkuMjE2cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptOS4yMTYgNC42MDhxMCA3LjYzMi01LjQgMTMuMDMydC0xMy4wMzIgNS40cS02LjkxMiAwLTEyLjE2OC00LjYwOGgtNy45MnEtNS4yNTYgNC42MDgtMTIuMTY4IDQuNjA4LTcuNjMyIDAtMTMuMDMyLTUuNHQtNS40LTEzLjAzMiA1LjQtMTMuMDMyIDEzLjAzMi01LjRoMzIuMjU2cTcuNjMyIDAgMTMuMDMyIDUuNHQ1LjQgMTMuMDMyelwiLFwiS0VZQk9BUkRfT1wiOlwiTTEzLjgyNC0yMi4zOTF2My40NTZxMCAuNTc2LS41NzYuNTc2aC0zLjQ1NnEtLjU3NiAwLS41NzYtLjU3NnYtMy40NTZxMC0uNTc2LjU3Ni0uNTc2aDMuNDU2cS41NzYgMCAuNTc2LjU3NnptNC42MDgtOS4yMTZ2My40NTZxMCAuNTc2LS41NzYuNTc2aC04LjA2NHEtLjU3NiAwLS41NzYtLjU3NnYtMy40NTZxMC0uNTc2LjU3Ni0uNTc2aDguMDY0cS41NzYgMCAuNTc2LjU3NnptLTQuNjA4LTkuMjE2djMuNDU2cTAgLjU3Ni0uNTc2LjU3NmgtMy40NTZxLS41NzYgMC0uNTc2LS41NzZ2LTMuNDU2cTAtLjU3Ni41NzYtLjU3NmgzLjQ1NnEuNTc2IDAgLjU3Ni41NzZ6bTM2Ljg2NCAxOC40MzJ2My40NTZxMCAuNTc2LS41NzYuNTc2aC0zMS4xMDRxLS41NzYgMC0uNTc2LS41NzZ2LTMuNDU2cTAtLjU3Ni41NzYtLjU3NmgzMS4xMDRxLjU3NiAwIC41NzYuNTc2em0tMjMuMDQtOS4yMTZ2My40NTZxMCAuNTc2LS41NzYuNTc2aC0zLjQ1NnEtLjU3NiAwLS41NzYtLjU3NnYtMy40NTZxMC0uNTc2LjU3Ni0uNTc2aDMuNDU2cS41NzYgMCAuNTc2LjU3NnptLTQuNjA4LTkuMjE2djMuNDU2cTAgLjU3Ni0uNTc2LjU3NmgtMy40NTZxLS41NzYgMC0uNTc2LS41NzZ2LTMuNDU2cTAtLjU3Ni41NzYtLjU3NmgzLjQ1NnEuNTc2IDAgLjU3Ni41NzZ6bTEzLjgyNCA5LjIxNnYzLjQ1NnEwIC41NzYtLjU3Ni41NzZoLTMuNDU2cS0uNTc2IDAtLjU3Ni0uNTc2di0zLjQ1NnEwLS41NzYuNTc2LS41NzZoMy40NTZxLjU3NiAwIC41NzYuNTc2em0tNC42MDgtOS4yMTZ2My40NTZxMCAuNTc2LS41NzYuNTc2aC0zLjQ1NnEtLjU3NiAwLS41NzYtLjU3NnYtMy40NTZxMC0uNTc2LjU3Ni0uNTc2aDMuNDU2cS41NzYgMCAuNTc2LjU3NnptMTMuODI0IDkuMjE2djMuNDU2cTAgLjU3Ni0uNTc2LjU3NmgtMy40NTZxLS41NzYgMC0uNTc2LS41NzZ2LTMuNDU2cTAtLjU3Ni41NzYtLjU3NmgzLjQ1NnEuNTc2IDAgLjU3Ni41NzZ6bTEzLjgyNCA5LjIxNnYzLjQ1NnEwIC41NzYtLjU3Ni41NzZoLTMuNDU2cS0uNTc2IDAtLjU3Ni0uNTc2di0zLjQ1NnEwLS41NzYuNTc2LS41NzZoMy40NTZxLjU3NiAwIC41NzYuNTc2em0tMTguNDMyLTE4LjQzMnYzLjQ1NnEwIC41NzYtLjU3Ni41NzZoLTMuNDU2cS0uNTc2IDAtLjU3Ni0uNTc2di0zLjQ1NnEwLS41NzYuNTc2LS41NzZoMy40NTZxLjU3NiAwIC41NzYuNTc2em05LjIxNiAwdjMuNDU2cTAgLjU3Ni0uNTc2LjU3NmgtMy40NTZxLS41NzYgMC0uNTc2LS41NzZ2LTMuNDU2cTAtLjU3Ni41NzYtLjU3NmgzLjQ1NnEuNTc2IDAgLjU3Ni41NzZ6bTkuMjE2IDB2MTIuNjcycTAgLjU3Ni0uNTc2LjU3NmgtOC4wNjRxLS41NzYgMC0uNTc2LS41NzZ2LTMuNDU2cTAtLjU3Ni41NzYtLjU3Nmg0LjAzMnYtOC42NHEwLS41NzYuNTc2LS41NzZoMy40NTZxLjU3NiAwIC41NzYuNTc2em00LjYwOCAyNy4wNzJ2LTMyLjI1NmgtNTkuOTA0djMyLjI1Nmg1OS45MDR6bTQuNjA4LTMyLjI1NnYzMi4yNTZxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1aC01OS45MDRxLTEuOTA4IDAtMy4yNTgtMS4zNXQtMS4zNS0zLjI1OHYtMzIuMjU2cTAtMS45MDggMS4zNS0zLjI1OHQzLjI1OC0xLjM1aDU5LjkwNHExLjkwOCAwIDMuMjU4IDEuMzV0MS4zNSAzLjI1OHpcIixcIkZMQUdfT1wiOlwiTTU5LjkwNC0yNi44MTl2LTIyLjE3NnEtNi4wODQgMy4yNzYtMTEuMDE2IDMuMjc2LTIuOTUyIDAtNS4yMi0xLjE1Mi0zLjYtMS43NjQtNi42MjQtMi43NTR0LTYuNDA4LS45OXEtNi4yMjggMC0xNC41MDggNC41NzJ2MjEuNTY0cTguODItNC4wNjggMTUuNTg4LTQuMDY4IDEuOTggMCAzLjcyNi4yN3QzLjUyOC45MzYgMi43NzIgMS4xMTYgMi45NyAxLjQyMmwxLjAwOC41MDRxMS41ODQuNzkyIDMuNjM2Ljc5MiA0LjMyIDAgMTAuNTQ4LTMuMzEyem0tNDguMzg0LTI4LjQwNHEwIDEuMjYtLjYzIDIuMzA0dC0xLjY3NCAxLjY1NnY0NS41NzZxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNDUuNTc2cS0xLjA0NC0uNjEyLTEuNjc0LTEuNjU2dC0uNjMtMi4zMDRxMC0xLjkwOCAxLjM1LTMuMjU4dDMuMjU4LTEuMzUgMy4yNTggMS4zNSAxLjM1IDMuMjU4em01Mi45OTIgMi4zMDR2MjcuNDY4cTAgMS40MDQtMS4yNiAyLjA1Mi0uMzYuMTgtLjYxMi4zMjQtNy44NDggNC4xNzYtMTMuMjg0IDQuMTc2LTMuMTY4IDAtNS42ODgtMS4yNmwtMS4wMDgtLjUwNHEtMi4zMDQtMS4xODgtMy41NjQtMS43Mjh0LTMuMjc2LTEuMDQ0LTQuMTA0LS41MDRxLTMuNjcyIDAtOC40NzggMS41ODR0LTguMjI2IDMuNjcycS0uNTQuMzI0LTEuMTg4LjMyNC0uNTc2IDAtMS4xNTItLjI4OC0xLjE1Mi0uNjg0LTEuMTUyLTIuMDE2di0yNi43MTJxMC0xLjI2IDEuMTE2LTEuOTggMS4yNi0uNzU2IDIuODI2LTEuNTN0NC4xMDQtMS44NzIgNS40OS0xLjc4MiA1LjU4LS42ODRxNC4wMzIgMCA3LjUyNCAxLjExNnQ3LjUyNCAzLjA5NnExLjM2OC42ODQgMy4yMDQuNjg0IDQuMzkyIDAgMTEuMTYtNC4wMzJsMS4xMTYtLjYxMnExLjExNi0uNTc2IDIuMjMyLjA3MiAxLjExNi43MiAxLjExNiAxLjk4elwiLFwiRkxBR19DSEVDS0VSRURcIjpcIk0yOS45NTItMjguNDM5di02LjkxMnEtNi41MTYuNTc2LTEzLjgyNCA0LjIxMnY2LjY2cTcuMzgtMy40NTYgMTMuODI0LTMuOTZ6bTAtMTUuMDQ4di03LjA5MnEtNi4xOTIuMjg4LTEzLjgyNCA0LjUzNnY2LjgwNHE3Ljc0LTMuOTk2IDEzLjgyNC00LjI0OHptMjkuOTUyIDE2LjY2OHYtNi42MjRxLTguNDYgNC4xNzYtMTMuODI0IDIuNTU2di04LjA2NHEtLjcyLS4yMTYtMS40MDQtLjU0LS4xOC0uMTA4LTEuMTg4LS42MTJ0LTEuMjQyLS42MTItMS4xMzQtLjU0LTEuMjQyLS41NTgtMS4xNy0uNDY4LTEuMjk2LS40NS0xLjI2LS4zMDYtMS40MjItLjI3LTEuNDIyLS4xNDQtMS41ODQtLjA3MnEtLjgyOCAwLTEuNzY0LjEwOHY3Ljk5MmguNjg0cTMuNjcyIDAgNi45MyAxLjA0NHQ3LjExIDIuOTUycS42ODQuMzI0IDEuNDA0LjU0djYuNzY4cTEuNTEyLjYxMiAzLjI3Ni42MTIgNC4zMiAwIDEwLjU0OC0zLjMxMnptMC0xNS4zNzJ2LTYuODA0cS02LjA4NCAzLjI3Ni0xMS4wMTYgMy4yNzYtMS42MiAwLTIuODA4LS4yODh2Ny4wNTZxNS4zMjggMS41MTIgMTMuODI0LTMuMjR6bS00OC4zODQtMTMuMDMycTAgMS4yNi0uNjMgMi4zMDR0LTEuNjc0IDEuNjU2djQ1LjU3NnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di00NS41NzZxLTEuMDQ0LS42MTItMS42NzQtMS42NTZ0LS42My0yLjMwNHEwLTEuOTA4IDEuMzUtMy4yNTh0My4yNTgtMS4zNSAzLjI1OCAxLjM1IDEuMzUgMy4yNTh6bTUyLjk5MiAyLjMwNHYyNy40NjhxMCAxLjQwNC0xLjI2IDIuMDUyLS4zNi4xOC0uNjEyLjMyNC03Ljg0OCA0LjE3Ni0xMy4yODQgNC4xNzYtMy4xNjggMC01LjY4OC0xLjI2bC0xLjAwOC0uNTA0cS0yLjMwNC0xLjE4OC0zLjU2NC0xLjcyOHQtMy4yNzYtMS4wNDQtNC4xMDQtLjUwNHEtMy42NzIgMC04LjQ3OCAxLjU4NHQtOC4yMjYgMy42NzJxLS41NC4zMjQtMS4xODguMzI0LS41NzYgMC0xLjE1Mi0uMjg4LTEuMTUyLS42ODQtMS4xNTItMi4wMTZ2LTI2LjcxMnEwLTEuMjYgMS4xMTYtMS45OCAxLjI2LS43NTYgMi44MjYtMS41M3Q0LjEwNC0xLjg3MiA1LjQ5LTEuNzgyIDUuNTgtLjY4NHE0LjAzMiAwIDcuNTI0IDEuMTE2dDcuNTI0IDMuMDk2cTEuMzY4LjY4NCAzLjIwNC42ODQgNC4zOTIgMCAxMS4xNi00LjAzMmwxLjExNi0uNjEycTEuMTE2LS41NzYgMi4yMzIuMDcyIDEuMTE2LjcyIDEuMTE2IDEuOTh6XCIsXCJURVJNSU5BTFwiOlwiTTIxLjA2LTI5LjA1MWwtMTYuNzc2IDE2Ljc3NnEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC0xLjgtMS44cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDE0LjE0OC0xNC4xNDgtMTQuMTQ4LTE0LjE0OHEtLjM2LS4zNi0uMzYtLjgyOHQuMzYtLjgyOGwxLjgtMS44cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDE2Ljc3NiAxNi43NzZxLjM2LjM2LjM2LjgyOHQtLjM2LjgyOHptMzguODQ0IDE2LjQ1MnYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0zNC41NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDM0LjU2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIkNPREVcIjpcIk0yMi4yMTItMTQuMDc1bC0xLjggMS44cS0uMzYuMzYtLjgyOC4zNnQtLjgyOC0uMzZsLTE2Ljc3Ni0xNi43NzZxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsMTYuNzc2LTE2Ljc3NnEuMzYtLjM2LjgyOC0uMzZ0LjgyOC4zNmwxLjggMS44cS4zNi4zNi4zNi44Mjh0LS4zNi44MjhsLTE0LjE0OCAxNC4xNDggMTQuMTQ4IDE0LjE0OHEuMzYuMzYuMzYuODI4dC0uMzYuODI4em0yMS4yNzYtMzguNDEybC0xMy40MjggNDYuNDc2cS0uMTQ0LjQ2OC0uNTU4LjcwMnQtLjg0Ni4wOWwtMi4yMzItLjYxMnEtLjQ2OC0uMTQ0LS43MDItLjU1OHQtLjA5LS44ODJsMTMuNDI4LTQ2LjQ3NnEuMTQ0LS40NjguNTU4LS43MDJ0Ljg0Ni0uMDlsMi4yMzIuNjEycS40NjguMTQ0LjcwMi41NTh0LjA5Ljg4MnptMjMuNjUyIDIzLjQzNmwtMTYuNzc2IDE2Ljc3NnEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC0xLjgtMS44cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDE0LjE0OC0xNC4xNDgtMTQuMTQ4LTE0LjE0OHEtLjM2LS4zNi0uMzYtLjgyOHQuMzYtLjgyOGwxLjgtMS44cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDE2Ljc3NiAxNi43NzZxLjM2LjM2LjM2LjgyOHQtLjM2LjgyOHpcIixcIlJFUExZX0FMTFwiOlwiTTIzLjA0LTI1LjQ4N3YyLjUycTAgMS41MTItMS40MDQgMi4xMjQtLjQ2OC4xOC0uOS4xOC0uOTcyIDAtMS42Mi0uNjg0bC0xOC40MzItMTguNDMycS0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MmwxOC40MzItMTguNDMycTEuMDQ0LTEuMTE2IDIuNTItLjUwNCAxLjQwNC42MTIgMS40MDQgMi4xMjR2Mi40ODRsLTE0LjI5MiAxNC4zMjhxLS42ODQuNjg0LS42ODQgMS42MnQuNjg0IDEuNjJ6bTQxLjQ3MiAxLjM2OHEwIDIuMDg4LS42MTIgNC44MDZ0LTEuMzg2IDQuOTY4LTEuNzI4IDQuNS0xLjQ1OCAzLjI1OGwtLjcyIDEuNDRxLS4yODguNjEyLTEuMDA4LjYxMi0uMjE2IDAtLjMyNC0uMDM2LS45LS4yODgtLjgyOC0xLjIyNCAxLjU0OC0xNC40LTMuODE2LTIwLjM0LTIuMzA0LTIuNTU2LTYuMTM4LTMuOTc4dC05LjYzLTEuODl2OS4wMzZxMCAxLjUxMi0xLjQwNCAyLjEyNC0uNDY4LjE4LS45LjE4LS45NzIgMC0xLjYyLS42ODRsLTE4LjQzMi0xOC40MzJxLS42ODQtLjY4NC0uNjg0LTEuNjJ0LjY4NC0xLjYybDE4LjQzMi0xOC40MzJxMS4wNDQtMS4xMTYgMi41Mi0uNTA0IDEuNDA0LjYxMiAxLjQwNCAyLjEyNHY5LjQzMnExNC43OTYgMS4wMDggMjEuNTY0IDcuOTU2IDYuMDg0IDYuMjI4IDYuMDg0IDE4LjMyNHpcIixcIlNUQVJfSEFMRl9PXCI6XCJNNDIuNjk2LTI5Ljk4N2w5LjI1Mi05LTEyLjgxNi0xLjg3Mi0yLjM3Ni0uMzYtMS4wOC0yLjE2LTUuNzI0LTExLjU5MnYzNC42NjhsMi4xMjQgMS4xMTYgMTEuNDQ4IDYuMDQ4LTIuMTYtMTIuNzgtLjQzMi0yLjM3NnptMTYuMjcyLTkuNDMybC0xMy4wNjggMTIuNzQ0IDMuMDk2IDE4cS4xOCAxLjE4OC0uMjE2IDEuODU0dC0xLjIyNC42NjZxLS42MTIgMC0xLjQ0LS40MzJsLTE2LjE2NC04LjQ5Ni0xNi4xNjQgOC40OTZxLS44MjguNDMyLTEuNDQuNDMyLS44MjggMC0xLjIyNC0uNjY2dC0uMjE2LTEuODU0bDMuMDk2LTE4LTEzLjEwNC0xMi43NDRxLTEuMTUyLTEuMTUyLS44MjgtMi4xNDJ0MS45NDQtMS4yNDJsMTguMDcyLTIuNjI4IDguMS0xNi4zOHEuNzItMS40NzYgMS43NjQtMS40NzYgMS4wMDggMCAxLjc2NCAxLjQ3Nmw4LjEgMTYuMzggMTguMDcyIDIuNjI4cTEuNjIuMjUyIDEuOTQ0IDEuMjQydC0uODY0IDIuMTQyelwiLFwiTE9DQVRJT05fQVJST1dcIjpcIk01MC40MzYtNTEuODc1bC0yMy4wNCA0Ni4wOHEtLjYxMiAxLjI2LTIuMDUyIDEuMjYtLjE4IDAtLjU0LS4wNzItLjc5Mi0uMTgtMS4yNzgtLjgxdC0uNDg2LTEuNDIydi0yMC43MzZoLTIwLjczNnEtLjc5MiAwLTEuNDIyLS40ODZ0LS44MS0xLjI3OC4xNDQtMS41MTIgMS4wNDQtMS4wOGw0Ni4wOC0yMy4wNHEuNDY4LS4yNTIgMS4wNDQtLjI1Mi45NzIgMCAxLjYyLjY4NC41NC41MDQuNjY2IDEuMjQydC0uMjM0IDEuNDIyelwiLFwiQ1JPUFwiOlwiTTIwLjA1Mi0xOC4zNTloMjEuNDJ2LTIxLjQyem0tMS42Mi0xLjYybDIxLjQyLTIxLjQyaC0yMS40MnYyMS40MnptNDEuNDcyIDIuNzcydjYuOTEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTguMDY0djguMDY0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTguMDY0aC0zMS4xMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMzEuMTA0aC04LjA2NHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDguMDY0di04LjA2NHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY4LjA2NGgzMC42MzZsOC44NTYtOC44OTJxLjM2LS4zMjQuODI4LS4zMjR0LjgyOC4zMjRxLjMyNC4zNi4zMjQuODI4dC0uMzI0LjgyOGwtOC44OTIgOC44NTZ2MzAuNjM2aDguMDY0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIkNPREVfRk9SS1wiOlwiTTEwLjM2OC0xMS40NDdxMC0xLjQ0LTEuMDA4LTIuNDQ4dC0yLjQ0OC0xLjAwOC0yLjQ0OCAxLjAwOC0xLjAwOCAyLjQ0OCAxLjAwOCAyLjQ0OCAyLjQ0OCAxLjAwOCAyLjQ0OC0xLjAwOCAxLjAwOC0yLjQ0OHptMC00MS40NzJxMC0xLjQ0LTEuMDA4LTIuNDQ4dC0yLjQ0OC0xLjAwOC0yLjQ0OCAxLjAwOC0xLjAwOCAyLjQ0OCAxLjAwOCAyLjQ0OCAyLjQ0OCAxLjAwOCAyLjQ0OC0xLjAwOCAxLjAwOC0yLjQ0OHptMjMuMDQgNC42MDhxMC0xLjQ0LTEuMDA4LTIuNDQ4dC0yLjQ0OC0xLjAwOC0yLjQ0OCAxLjAwOC0xLjAwOCAyLjQ0OCAxLjAwOCAyLjQ0OCAyLjQ0OCAxLjAwOCAyLjQ0OC0xLjAwOCAxLjAwOC0yLjQ0OHptMy40NTYgMHEwIDEuODcyLS45MzYgMy40NzR0LTIuNTIgMi41MDJxLS4wNzIgMTAuMzMyLTguMTM2IDE0LjkwNC0yLjQ0OCAxLjM2OC03LjMwOCAyLjkxNi00LjYwOCAxLjQ0LTYuMTAyIDIuNTU2dC0xLjQ5NCAzLjZ2LjkzNnExLjU4NC45IDIuNTIgMi41MDJ0LjkzNiAzLjQ3NHEwIDIuODgtMi4wMTYgNC44OTZ0LTQuODk2IDIuMDE2LTQuODk2LTIuMDE2LTIuMDE2LTQuODk2cTAtMS44NzIuOTM2LTMuNDc0dDIuNTItMi41MDJ2LTI5LjUycS0xLjU4NC0uOS0yLjUyLTIuNTAydC0uOTM2LTMuNDc0cTAtMi44OCAyLjAxNi00Ljg5NnQ0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnEwIDEuODcyLS45MzYgMy40NzR0LTIuNTIgMi41MDJ2MTcuODkycTEuOTQ0LS45MzYgNS41NDQtMi4wNTIgMS45OC0uNjEyIDMuMTUtMS4wNjJ0Mi41MzgtMS4xMTYgMi4xMjQtMS40MjIgMS40NTgtMS44MzYgMS4wMDgtMi41MDIuMzA2LTMuMjk0cS0xLjU4NC0uOS0yLjUyLTIuNTAydC0uOTM2LTMuNDc0cTAtMi44OCAyLjAxNi00Ljg5NnQ0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnpcIixcIlVOTElOS1wiOlwiTTE1LjgwNC0xOC42ODNsLTkuMjE2IDkuMjE2cS0uMzYuMzI0LS44MjguMzI0LS40MzIgMC0uODI4LS4zMjQtLjMyNC0uMzYtLjMyNC0uODI4dC4zMjQtLjgyOGw5LjIxNi05LjIxNnEuMzYtLjMyNC44MjgtLjMyNHQuODI4LjMyNHEuMzI0LjM2LjMyNC44Mjh0LS4zMjQuODI4em02LjA4NCAxLjQ3NnYxMS41MnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0LS44MjgtLjMyNC0uMzI0LS44Mjh2LTExLjUycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjQuODI4LjMyNC4zMjQuODI4em0tOC4wNjQtOC4wNjRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMTEuNTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOC4zMjQtLjgyOC44MjgtLjMyNGgxMS41MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTQ1LjUwNCA0LjYwOHEwIDQuMzItMy4wNiA3LjMwOGwtNS4yOTIgNS4yNTZxLTIuOTg4IDIuOTg4LTcuMzA4IDIuOTg4LTQuMzU2IDAtNy4zNDQtMy4wNmwtMTIuMDI0LTEyLjA2cS0uNzU2LS43NTYtMS41MTItMi4wMTZsOC42MDQtLjY0OCA5LjgyOCA5Ljg2NHEuOTcyLjk3MiAyLjQ0OC45OXQyLjQ0OC0uOTU0bDUuMjkyLTUuMjU2cTEuMDA4LTEuMDA4IDEuMDA4LTIuNDEyIDAtMS40NC0xLjAwOC0yLjQ0OGwtOS44NjQtOS45LjY0OC04LjYwNHExLjI2Ljc1NiAyLjAxNiAxLjUxMmwxMi4wOTYgMTIuMDk2cTMuMDI0IDMuMDk2IDMuMDI0IDcuMzQ0em0tMjIuMjEyLTI2LjA2NGwtOC42MDQuNjQ4LTkuODI4LTkuODY0cS0xLjAwOC0xLjAwOC0yLjQ0OC0xLjAwOC0xLjQwNCAwLTIuNDQ4Ljk3MmwtNS4yOTIgNS4yNTZxLTEuMDA4IDEuMDA4LTEuMDA4IDIuNDEyIDAgMS40NCAxLjAwOCAyLjQ0OGw5Ljg2NCA5Ljg2NC0uNjQ4IDguNjRxLTEuMjYtLjc1Ni0yLjAxNi0xLjUxMmwtMTIuMDk2LTEyLjA5NnEtMy4wMjQtMy4wOTYtMy4wMjQtNy4zNDQgMC00LjMyIDMuMDYtNy4zMDhsNS4yOTItNS4yNTZxMi45ODgtMi45ODggNy4zMDgtMi45ODggNC4zNTYgMCA3LjM0NCAzLjA2bDEyLjAyNCAxMi4wNnEuNzU2Ljc1NiAxLjUxMiAyLjAxNnptMjIuNzg4IDMuMDI0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTExLjUycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44MjguMzI0LS44MjguODI4LS4zMjRoMTEuNTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0tMTkuNTg0LTE5LjU4NHYxMS41MnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0LS44MjgtLjMyNC0uMzI0LS44Mjh2LTExLjUycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjQuODI4LjMyNC4zMjQuODI4em0xNC42NTIgNS40MzZsLTkuMjE2IDkuMjE2cS0uMzk2LjMyNC0uODI4LjMyNHQtLjgyOC0uMzI0cS0uMzI0LS4zNi0uMzI0LS44Mjh0LjMyNC0uODI4bDkuMjE2LTkuMjE2cS4zNi0uMzI0LjgyOC0uMzI0dC44MjguMzI0cS4zMjQuMzYuMzI0LjgyOHQtLjMyNC44Mjh6XCIsXCJRVUVTVElPTlwiOlwiTTI1LjM0NC0xOS4yMjN2OC42NHEwIC41NzYtLjQzMiAxLjAwOHQtMS4wMDguNDMyaC04LjY0cS0uNTc2IDAtMS4wMDgtLjQzMnQtLjQzMi0xLjAwOHYtOC42NHEwLS41NzYuNDMyLTEuMDA4dDEuMDA4LS40MzJoOC42NHEuNTc2IDAgMS4wMDguNDMydC40MzIgMS4wMDh6bTExLjM3Ni0yMS42cTAgMS45NDQtLjU1OCAzLjYzNnQtMS4yNiAyLjc1NC0xLjk4IDIuMTQyLTIuMDcgMS41NjYtMi4xOTYgMS4yNzhxLTEuNDc2LjgyOC0yLjQ2NiAyLjM0dC0uOTkgMi40MTJxMCAuNjEyLS40MzIgMS4xN3QtMS4wMDguNTU4aC04LjY0cS0uNTQgMC0uOTE4LS42NjZ0LS4zNzgtMS4zNXYtMS42MnEwLTIuOTg4IDIuMzQtNS42MzR0NS4xNDgtMy45MDZxMi4xMjQtLjk3MiAzLjAyNC0yLjAxNnQuOS0yLjczNnEwLTEuNTEyLTEuNjc0LTIuNjY0dC0zLjg3LTEuMTUycS0yLjM0IDAtMy44ODggMS4wNDQtMS4yNi45LTMuODUyIDQuMTQtLjQ2OC41NzYtMS4xMTYuNTc2LS40MzIgMC0uOS0uMjg4bC01LjkwNC00LjVxLS40NjgtLjM2LS41NTgtLjl0LjE5OC0xLjAwOHE1Ljc2LTkuNTc2IDE2LjcwNC05LjU3NiAyLjg4IDAgNS43OTYgMS4xMTZ0NS4yNTYgMi45ODggMy44MTYgNC41OSAxLjQ3NiA1LjcwNnpcIixcIklORk9cIjpcIk0yMy4wNC0xNi4wNTV2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTE4LjQzMnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDIuMzA0di0xMy44MjRoLTIuMzA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoMTMuODI0cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MjAuNzM2aDIuMzA0cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bS00LjYwOC00MS40NzJ2Ni45MTJxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTkuMjE2cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTYuOTEycTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoOS4yMTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnpcIixcIkVYQ0xBTUFUSU9OXCI6XCJNMTguNDMyLTE5LjUxMXY4LjA2NHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtOS4yMTZxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtOC4wNjRxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg5LjIxNnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0xLjA4LTM4LjAxNmwtMS4wMDggMjcuNjQ4cS0uMDM2LjkzNi0uNzM4IDEuNjJ0LTEuNjM4LjY4NGgtOS4yMTZxLS45MzYgMC0xLjYzOC0uNjg0dC0uNzM4LTEuNjJsLTEuMDA4LTI3LjY0OHEtLjAzNi0uOTM2LjYzLTEuNjJ0MS42MDItLjY4NGgxMS41MnEuOTM2IDAgMS42MDIuNjg0dC42MyAxLjYyelwiLFwiU1VQRVJTQ1JJUFRcIjpcIk0zMi4yOTItMTUuMTU1djYuMDEyaC04LjkyOGwtNS43MjQtOS4wNzItLjg2NC0xLjUxMnEtLjI4OC0uMzI0LS4zOTYtLjc1NmgtLjEwOGwtLjMyNC43NTZxLS4zNi43Mi0uOSAxLjU4NGwtNS41OCA5aC05LjI4OHYtNi4wMTJoNC42MDhsNy4wOTItMTAuNDc2LTYuNjYtOS43OTJoLTQuOTMydi02LjA0OGg5LjkzNmw1LjAwNCA4LjIwOHEuMDcyLjE0NC44MjggMS41MTIuMjg4LjMyNC4zOTYuNzU2aC4xMDhxLjEwOC0uMzI0LjM5Ni0uNzU2bC45LTEuNTEyIDUuMDQtOC4yMDhoOS4yNTJ2Ni4wNDhoLTQuNWwtNi42MjQgOS42MTIgNy4zNDQgMTAuNjU2aDMuOTI0em0yMi45MzItMjQuNDQ0djcuNDE2aC0xOC41MDRsLS4xMDgtLjk3MnEtLjE0NC0xLjAwOC0uMTQ0LTEuNjU2IDAtMi4zMDQuOTM2LTQuMjEydDIuMzQtMy4xMTQgMy4wMjQtMi4zNCAzLjAyNC0xLjk2MiAyLjM0LTEuOTQ0LjkzNi0yLjMwNHEwLTEuMzY4LTEuMDYyLTIuMjV0LTIuNTM4LS44ODJxLTEuODM2IDAtMy40OTIgMS40MDQtLjUwNC4zOTYtMS4yOTYgMS4zNjhsLTMuNzgtMy4zMTJxLjkzNi0xLjMzMiAyLjI2OC0yLjM3NiAyLjk4OC0yLjM0IDYuNzY4LTIuMzQgMy45NiAwIDYuNDA4IDIuMTQydDIuNDQ4IDUuNzA2cTAgMi4wMTYtLjg4MiAzLjcwOHQtMi4yMzIgMi43NTQtMi45MzQgMi4xMDYtMi45NTIgMS44MTgtMi4zNTggMS44NTQtMS4wOTggMi4yNjhoOC4zNTJ2LTIuODhoNC41MzZ6XCIsXCJTVUJTQ1JJUFRcIjpcIk0zMi4yOTItMTUuMTU1djYuMDEyaC04LjkyOGwtNS43MjQtOS4wNzItLjg2NC0xLjUxMnEtLjI4OC0uMzI0LS4zOTYtLjc1NmgtLjEwOGwtLjMyNC43NTZxLS4zNi43Mi0uOSAxLjU4NGwtNS41OCA5aC05LjI4OHYtNi4wMTJoNC42MDhsNy4wOTItMTAuNDc2LTYuNjYtOS43OTJoLTQuOTMydi02LjA0OGg5LjkzNmw1LjAwNCA4LjIwOHEuMDcyLjE0NC44MjggMS41MTIuMjg4LjMyNC4zOTYuNzU2aC4xMDhxLjEwOC0uMzI0LjM5Ni0uNzU2bC45LTEuNTEyIDUuMDQtOC4yMDhoOS4yNTJ2Ni4wNDhoLTQuNWwtNi42MjQgOS42MTIgNy4zNDQgMTAuNjU2aDMuOTI0em0yMy4wMDQgNy44MTJ2Ny40MTZoLTE4LjUwNGwtLjE0NC0uOTcyLS4xMDgtMS42NTZxMC0yLjMwNC45MzYtNC4yMTJ0Mi4zNC0zLjExNCAzLjAyNC0yLjM0IDMuMDI0LTEuOTYyIDIuMzQtMS45NDQuOTM2LTIuMzA0cTAtMS4zNjgtMS4wNjItMi4yNXQtMi41MzgtLjg4MnEtMS44MzYgMC0zLjQ5MiAxLjQwNC0uNTA0LjM5Ni0xLjI5NiAxLjM2OGwtMy43OC0zLjMxMnEuOTM2LTEuMzMyIDIuMjY4LTIuMzc2IDIuODgtMi4zNCA2Ljc2OC0yLjM0IDMuOTYgMCA2LjQwOCAyLjE0MnQyLjQ0OCA1LjcwNnEwIDIuMzc2LTEuMjQyIDQuMjY2dC0zLjAyNCAzLjA5Ni0zLjU4MiAyLjI1LTMuMTMyIDIuMjY4LTEuNDc2IDIuNjI4aDguMzUydi0yLjg4aDQuNTM2elwiLFwiRVJBU0VSXCI6XCJNMzIuMjU2LTEzLjc1MWwxMi4wOTYtMTMuODI0aC0yNy42NDhsLTEyLjA5NiAxMy44MjRoMjcuNjQ4em0zNi40NjgtMzguNzcycS41NCAxLjIyNC4zNDIgMi41NzR0LTEuMDk4IDIuMzU4bC0zMi4yNTYgMzYuODY0cS0xLjM2OCAxLjU4NC0zLjQ1NiAxLjU4NGgtMjcuNjQ4cS0xLjM2OCAwLTIuNTAyLS43Mzh0LTEuNzEtMS45NjJxLS41NC0xLjIyNC0uMzQyLTIuNTc0dDEuMDk4LTIuMzU4bDMyLjI1Ni0zNi44NjRxMS4zNjgtMS41ODQgMy40NTYtMS41ODRoMjcuNjQ4cTEuMzY4IDAgMi41MDIuNzM4dDEuNzEgMS45NjJ6XCIsXCJQVVpaTEVfUElFQ0VcIjpcIk01OS45MDQtMjQuOTExcTAgMi45MTYtMS42MDIgNC44NnQtNC40NDYgMS45NDRxLTEuNDc2IDAtMi43OS0uNjN0LTIuMTI0LTEuMzY4LTIuMDM0LTEuMzY4LTIuNTU2LS42M3EtMy45NiAwLTMuOTYgNC40NjQgMCAxLjQwNC41NzYgNC4xNHQuNTQgNC4xNHYuMThxLS43OTIgMC0xLjE4OC4wMzYtMS4yMjQuMTA4LTMuNTEuNDE0dC00LjE1OC40ODYtMy41MjguMThxLTIuMTk2IDAtMy43MDgtLjk1NHQtMS41MTItMy4wMDZxMC0xLjMzMi42My0yLjU1NnQxLjM2OC0yLjAzNCAxLjM2OC0yLjEyNC42My0yLjc5cTAtMi44NDQtMS45NDQtNC40NDZ0LTQuODYtMS42MDJxLTMuMDI0IDAtNS4xNDggMS42Mzh0LTIuMTI0IDQuNTlxMCAxLjU0OC41NCAyLjk4OHQxLjIwNiAyLjMyMiAxLjIwNiAxLjkwOC41NCAxLjgxOHEwIDEuNjItMS42NTYgMy4yMDQtMS4zMzIgMS4yNi00LjIxMiAxLjI2LTMuNDIgMC04LjgyLS44NjQtLjMyNC0uMDcyLS45OS0uMTQ0dC0uOTktLjE0NGwtLjQ2OC0uMDcyLS4xMDgtLjAzNi0uMDcyLS4wMzZ2LTM2Ljg2NHEuMDcyLjAzNi42My4xMjZ0MS4yMjQuMTguNzc0LjEyNnE1LjQuODY0IDguODIuODY0IDIuODggMCA0LjIxMi0xLjI2IDEuNjU2LTEuNTg0IDEuNjU2LTMuMjA0IDAtLjc5Mi0uNTQtMS44MTh0LTEuMjA2LTEuOTA4LTEuMjA2LTIuMzIyLS41NC0yLjk4OHEwLTIuOTUyIDIuMTI0LTQuNTl0NS4xODQtMS42MzhxMi44OCAwIDQuODI0IDEuNjAydDEuOTQ0IDQuNDQ2cTAgMS40NzYtLjYzIDIuNzl0LTEuMzY4IDIuMTI0LTEuMzY4IDIuMDM0LS42MyAyLjU1NnEwIDIuMDUyIDEuNTEyIDMuMDA2dDMuNzA4Ljk1NHEyLjMwNCAwIDYuNDgtLjU0dDUuODY4LS42MTJ2LjA3MnEtLjAzNi4wNzItLjEyNi42M3QtLjE4IDEuMjI0LS4xMjYuNzc0cS0uODY0IDUuNC0uODY0IDguODIgMCAyLjg4IDEuMjYgNC4yMTIgMS41ODQgMS42NTYgMy4yMDQgMS42NTYuNzkyIDAgMS44MTgtLjU0dDEuOTA4LTEuMjA2IDIuMzIyLTEuMjA2IDIuOTg4LS41NHEyLjk1MiAwIDQuNTkgMi4xMjR0MS42MzggNS4xNDh6XCIsXCJNSUNST1BIT05FXCI6XCJNNDEuNDcyLTM5LjA5NXY0LjYwOHEwIDcuOTU2LTUuMzEgMTMuODQydC0xMy4xMjIgNi43NXY0Ljc1Mmg5LjIxNnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyLS42ODQgMS42Mi0xLjYyLjY4NGgtMjMuMDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODRoOS4yMTZ2LTQuNzUycS03LjgxMi0uODY0LTEzLjEyMi02Ljc1dC01LjMxLTEzLjg0MnYtNC42MDhxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NCAxLjYyLjY4NC42ODQgMS42MnY0LjYwOHEwIDYuNjYgNC43MzQgMTEuMzk0dDExLjM5NCA0LjczNCAxMS4zOTQtNC43MzQgNC43MzQtMTEuMzk0di00LjYwOHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0IDEuNjIuNjg0LjY4NCAxLjYyem0tOS4yMTYtMTMuODI0djE4LjQzMnEwIDQuNzUyLTMuMzg0IDguMTM2dC04LjEzNiAzLjM4NC04LjEzNi0zLjM4NC0zLjM4NC04LjEzNnYtMTguNDMycTAtNC43NTIgMy4zODQtOC4xMzZ0OC4xMzYtMy4zODQgOC4xMzYgMy4zODQgMy4zODQgOC4xMzZ6XCIsXCJNSUNST1BIT05FX1NMQVNIXCI6XCJNOS43NTYtMzAuNDE5bC0zLjYzNiAzLjYzNnEtMS41MTItMy43MDgtMS41MTItNy43MDR2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODQgMS42Mi42ODQuNjg0IDEuNjJ2NC42MDhxMCAxLjkwOC41NCA0LjA2OHptNDAuMTA0LTIxLjY3MmwtMTIuOTk2IDEyLjk5NnY0LjYwOHEwIDQuNzUyLTMuMzg0IDguMTM2dC04LjEzNiAzLjM4NHEtMS45OCAwLTMuOTI0LS42ODRsLTMuNDU2IDMuNDU2cTMuNDkyIDEuODM2IDcuMzggMS44MzYgNi42NiAwIDExLjM5NC00LjczNHQ0LjczNC0xMS4zOTR2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODQgMS42Mi42ODQuNjg0IDEuNjJ2NC42MDhxMCA3Ljk1Ni01LjMxIDEzLjg0MnQtMTMuMTIyIDYuNzV2NC43NTJoOS4yMTZxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42Mi0uNjg0IDEuNjItMS42Mi42ODRoLTIzLjA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjIuNjg0LTEuNjIgMS42Mi0uNjg0aDkuMjE2di00Ljc1MnEtNC41LS40NjgtOC40Ni0yLjkxNmwtOS4xNDQgOS4xNDRxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtMi45NTItMi45NTJxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsNDQuNDI0LTQ0LjQyNHEuMzYtLjM2LjgyOC0uMzZ0LjgyOC4zNmwyLjk1MiAyLjk1MnEuMzYuMzYuMzYuODI4dC0uMzYuODI4em0tMTMuNjgtNC43NTJsLTIyLjM1NiAyMi4zNTZ2LTE4LjQzMnEwLTQuNzUyIDMuMzg0LTguMTM2dDguMTM2LTMuMzg0cTMuNjcyIDAgNi42NDIgMi4xMjR0NC4xOTQgNS40NzJ6XCIsXCJTSElFTERcIjpcIk0zOS4xNjgtMjkuODc5di0yMy4wNGgtMTYuMTI4djQwLjkzMnE0LjI4NC0yLjI2OCA3LjY2OC00LjkzMiA4LjQ2LTYuNjI0IDguNDYtMTIuOTZ6bTYuOTEyLTI3LjY0OHYyNy42NDhxMCAzLjA5Ni0xLjIwNiA2LjEzOHQtMi45ODggNS40LTQuMjQ4IDQuNTktNC41NTQgMy43MDgtNC4zNTYgMi43OS0zLjIyMiAxLjc4Mi0xLjUzLjcycS0uNDMyLjIxNi0uOTM2LjIxNnQtLjkzNi0uMjE2cS0uNTc2LS4yNTItMS41My0uNzJ0LTMuMjIyLTEuNzgyLTQuMzU2LTIuNzktNC41NTQtMy43MDgtNC4yNDgtNC41OS0yLjk4OC01LjQtMS4yMDYtNi4xMzh2LTI3LjY0OHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQxLjQ3MnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiQ0FMRU5EQVJfT1wiOlwiTTQuNjA4LTQuNTM1aDUwLjY4OHYtMzYuODY0aC01MC42ODh2MzYuODY0em0xMy44MjQtNDMuNzc2di0xMC4zNjhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYxMC4zNjhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTI3LjY0OCAwdi0xMC4zNjhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYxMC4zNjhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTEzLjgyNC0yLjMwNHY0Ni4wOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTUwLjY4OHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di00Ni4wOHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg0LjYwOHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyLjMwNHEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djMuNDU2aDEzLjgyNHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyLjMwNHEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djMuNDU2aDQuNjA4cTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0elwiLFwiRklSRV9FWFRJTkdVSVNIRVJcIjpcIk0xOC40MzItNTcuNTI3cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NC0xLjYyLjY4NC0uNjg0IDEuNjIuNjg0IDEuNjIgMS42Mi42ODQgMS42Mi0uNjg0LjY4NC0xLjYyem0zMi4yNTYtMS4xNTJ2MTEuNTJxMCAuNTc2LS40MzIuOS0uMjg4LjI1Mi0uNzIuMjUyLS4xNDQgMC0uMjUyLS4wMzZsLTE2LjEyOC0zLjQ1NnEtLjM5Ni0uMDcyLS42NDgtLjM5NnQtLjI1Mi0uNzJoLTkuMjE2djMuNjcycTMuOTk2LjgyOCA2LjYwNiAzLjk5NnQyLjYxIDcuMzA4djI4LjhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTE4LjQzMnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0yOC44cTAtMy44MTYgMi4yNS02Ljg1OHQ1LjgxNC00LjEyMnYtMy45OTZoLTEuMTUycS0yLjEyNCAwLTQuMTQuODQ2dC0zLjI5NCAxLjkwOC0yLjM3NiAyLjM5NC0xLjQ1OCAxLjkyNi0uNTA0Ljg4MnEtLjYxMiAxLjI2LTIuMDUyIDEuMjYtLjU3NiAwLTEuMDQ0LS4yNTItLjgyOC0uNDMyLTEuMTM0LTEuMzMydC4xMjYtMS43NjRxLjE4LS4zNi41MjItLjkzNnQxLjM1LTEuOTI2IDIuMTc4LTIuNTIgMy4wNi0yLjQxMiAzLjkwNi0xLjg5cS0uOS0xLjUxMi0uOS0zLjA5NiAwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyIDQuMDY4IDEuNjkyIDEuNjkyIDQuMDY4cTAgMS4xODgtLjUwNCAyLjMwNGgxMC44NzJxMC0uMzk2LjI1Mi0uNzJ0LjY0OC0uMzk2bDE2LjEyOC0zLjQ1NnEuMTA4LS4wMzYuMjUyLS4wMzYuNDMyIDAgLjcyLjI1Mi40MzIuMzI0LjQzMi45elwiLFwiUk9DS0VUXCI6XCJNNTEuODQtNDguMzExcTAtMS40NC0xLjAwOC0yLjQ0OHQtMi40NDgtMS4wMDgtMi40NDggMS4wMDgtMS4wMDggMi40NDggMS4wMDggMi40NDggMi40NDggMS4wMDggMi40NDgtMS4wMDggMS4wMDgtMi40NDh6bTguMDY0LTEwLjM2OHEwIDguOTY0LTIuNzE4IDE1LjQ5OHQtOS4xMjYgMTIuOTc4cS0yLjkxNiAyLjg4LTcuMDIgNi4zMzZsLS43MiAxMy42NDRxLS4wNzIuNTc2LS41NzYuOTM2bC0xMy44MjQgOC4wNjRxLS4yNTIuMTQ0LS41NzYuMTQ0LS40MzIgMC0uODI4LS4zMjRsLTIuMzA0LTIuMzA0cS0uNDY4LS41MDQtLjI4OC0xLjE1MmwzLjA2LTkuOTM2LTEwLjExNi0xMC4xMTYtOS45MzYgMy4wNnEtLjEwOC4wMzYtLjMyNC4wMzYtLjUwNCAwLS44MjgtLjMyNGwtMi4zMDQtMi4zMDRxLS42MTItLjY4NC0uMTgtMS40MDRsOC4wNjQtMTMuODI0cS4zNi0uNTA0LjkzNi0uNTc2bDEzLjY0NC0uNzJxMy40NTYtNC4xMDQgNi4zMzYtNy4wMiA2Ljc2OC02LjczMiAxMi44ODgtOS4yODh0MTUuNTE2LTIuNTU2cS41MDQgMCAuODY0LjM0MnQuMzYuODF6XCIsXCJNQVhDRE5cIjpcIk02Mi44Mi0zNi42MTFsLTUuOTA0IDI3LjQ2OGgtMTIuMDI0bDYuNDA4LTI5Ljk1MnEuNDY4LTIuMDE2LS41NC0zLjE2OC0uOTcyLTEuMTg4LTIuOTg4LTEuMTg4aC02LjA4NGwtNy4zNDQgMzQuMzA4aC0xMi4wMjRsNy4zNDQtMzQuMzA4aC0xMC4yOTZsLTcuMzQ0IDM0LjMwOGgtMTIuMDI0bDcuMzQ0LTM0LjMwOC01LjUwOC0xMS43NzJoNDUuOTM2cTMuNjM2IDAgNi44MjIgMS40NTh0NS4zMSA0LjA4NnEyLjE2IDIuNjI4IDIuOTE2IDYuMDY2dDAgNy4wMDJ6XCIsXCJDSEVWUk9OX0NJUkNMRV9MRUZUXCI6XCJNMzIuNzI0LTE0LjIxOWwzLjY3Mi0zLjY3MnEuNjg0LS42ODQuNjg0LTEuNjJ0LS42ODQtMS42MmwtMTEuMDUyLTExLjA1MiAxMS4wNTItMTEuMDUycS42ODQtLjY4NC42ODQtMS42MnQtLjY4NC0xLjYybC0zLjY3Mi0zLjY3MnEtLjY4NC0uNjg0LTEuNjItLjY4NHQtMS42Mi42ODRsLTE2LjM0NCAxNi4zNDRxLS42ODQuNjg0LS42ODQgMS42MnQuNjg0IDEuNjJsMTYuMzQ0IDE2LjM0NHEuNjg0LjY4NCAxLjYyLjY4NHQxLjYyLS42ODR6bTIyLjU3Mi0xNy45NjRxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiQ0hFVlJPTl9DSVJDTEVfUklHSFRcIjpcIk0yNS44MTItMTQuMjE5bDE2LjM0NC0xNi4zNDRxLjY4NC0uNjg0LjY4NC0xLjYydC0uNjg0LTEuNjJsLTE2LjM0NC0xNi4zNDRxLS42ODQtLjY4NC0xLjYyLS42ODR0LTEuNjIuNjg0bC0zLjY3MiAzLjY3MnEtLjY4NC42ODQtLjY4NCAxLjYydC42ODQgMS42MmwxMS4wNTIgMTEuMDUyLTExLjA1MiAxMS4wNTJxLS42ODQuNjg0LS42ODQgMS42MnQuNjg0IDEuNjJsMy42NzIgMy42NzJxLjY4NC42ODQgMS42Mi42ODR0MS42Mi0uNjg0em0yOS40ODQtMTcuOTY0cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkNIRVZST05fQ0lSQ0xFX1VQXCI6XCJNNDEuOTQtMjMuNDM1bDMuNjcyLTMuNjcycS42ODQtLjY4NC42ODQtMS42MnQtLjY4NC0xLjYybC0xNi4zNDQtMTYuMzQ0cS0uNjg0LS42ODQtMS42Mi0uNjg0dC0xLjYyLjY4NGwtMTYuMzQ0IDE2LjM0NHEtLjY4NC42ODQtLjY4NCAxLjYydC42ODQgMS42MmwzLjY3MiAzLjY3MnEuNjg0LjY4NCAxLjYyLjY4NHQxLjYyLS42ODRsMTEuMDUyLTExLjA1MiAxMS4wNTIgMTEuMDUycS42ODQuNjg0IDEuNjIuNjg0dDEuNjItLjY4NHptMTMuMzU2LTguNzQ4cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkNIRVZST05fQ0lSQ0xFX0RPV05cIjpcIk0yOS4yNjgtMTcuNjc1bDE2LjM0NC0xNi4zNDRxLjY4NC0uNjg0LjY4NC0xLjYydC0uNjg0LTEuNjJsLTMuNjcyLTMuNjcycS0uNjg0LS42ODQtMS42Mi0uNjg0dC0xLjYyLjY4NGwtMTEuMDUyIDExLjA1Mi0xMS4wNTItMTEuMDUycS0uNjg0LS42ODQtMS42Mi0uNjg0dC0xLjYyLjY4NGwtMy42NzIgMy42NzJxLS42ODQuNjg0LS42ODQgMS42MnQuNjg0IDEuNjJsMTYuMzQ0IDE2LjM0NHEuNjg0LjY4NCAxLjYyLjY4NHQxLjYyLS42ODR6bTI2LjAyOC0xNC41MDhxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiSFRNTDVcIjpcIk00MC42OC00Mi45NDdsLjU3Ni02LjNoLTMxLjgyNGwxLjY5MiAxOS4yMjRoMjIuMDMybC0uNzkyIDguMjA4LTcuMDkyIDEuOTA4LTcuMDU2LTEuOTA4LS40NjgtNS4wNGgtNi4zbC43OTIgMTAuMDA4IDEzLjAzMiAzLjZoLjE0NHYtLjAzNmwxMi45MjQtMy41NjQgMS44LTE5LjU4NGgtMjMuMTg0bC0uNTQtNi41MTZoMjQuMjY0em0tNDAuNjgtMTYuODg0aDUwLjY4OGwtNC42MDggNTEuNzY4LTIwLjgwOCA1LjgzMi0yMC42NjQtNS44MzJ6XCIsXCJDU1MzXCI6XCJNOS45LTU5LjgzMWg1NC4xOGwtOS41NzYgNDcuOTg4LTI4Ljk0NCA5LjYxMi0yNS4xMjgtOS42MTIgMi41NTYtMTIuODE2aDEwLjY5MmwtMS4wNDQgNS4yOTIgMTUuMTkyIDUuNzk2IDE3LjQ5Ni01Ljc5NiAyLjQ0OC0xMi4yMDRoLTQzLjQ4OGwyLjA4OC0xMC42OTJoNDMuNTI0bDEuMzY4LTYuODc2aC00My40ODh6XCIsXCJBTkNIT1JcIjpcIk0zNC41Ni01NS4yMjNxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42MiAxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTI5Ljk1MiAzMy40MDh2MTIuNjcycTAgLjc5Mi0uNzIgMS4wOC0uMjg4LjA3Mi0uNDMyLjA3Mi0uNDY4IDAtLjgyOC0uMzI0bC0zLjM0OC0zLjM0OHEtNC4yODQgNS4xNDgtMTEuNDY2IDguMTU0dC0xNS40NjIgMy4wMDYtMTUuNDYyLTMuMDA2LTExLjQ2Ni04LjE1NGwtMy4zNDggMy4zNDhxLS4zMjQuMzI0LS44MjguMzI0LS4xNDQgMC0uNDMyLS4wNzItLjcyLS4yODgtLjcyLTEuMDh2LTEyLjY3MnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDEyLjY3MnEuNzkyIDAgMS4wOC43Mi4yODguNjg0LS4yNTIgMS4yNmwtMy42IDMuNnEyLjQxMiAzLjI3NiA2LjgyMiA1LjUyNnQ5Ljc3NCAyLjk3di0yMy4yOTJoLTYuOTEycS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTQuNjA4cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNi45MTJ2LTUuODY4cS0yLjA4OC0xLjIyNC0zLjM0OC0zLjMzdC0xLjI2LTQuNjI2cTAtMy44MTYgMi43LTYuNTE2dDYuNTE2LTIuNyA2LjUxNiAyLjcgMi43IDYuNTE2cTAgMi41Mi0xLjI2IDQuNjI2dC0zLjM0OCAzLjMzdjUuODY4aDYuOTEycS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2NC42MDhxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTYuOTEydjIzLjI5MnE1LjM2NC0uNzIgOS43NzQtMi45N3Q2LjgyMi01LjUyNmwtMy42LTMuNnEtLjU0LS41NzYtLjI1Mi0xLjI2LjI4OC0uNzIgMS4wOC0uNzJoMTIuNjcycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIlVOTE9DS19BTFRcIjpcIk0zOC4wMTYtMzYuNzkxcTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHYyMC43MzZxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtMzQuNTZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTIwLjczNnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMS4xNTJ2LTExLjUycTAtNi42NiA0LjczNC0xMS4zOTR0MTEuMzk0LTQuNzM0IDExLjM5NCA0LjczNCA0LjczNCAxMS4zOTRxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTIuMzA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJxMC0zLjgxNi0yLjctNi41MTZ0LTYuNTE2LTIuNy02LjUxNiAyLjctMi43IDYuNTE2djExLjUyaDI2LjQ5NnpcIixcIkJVTExTRVlFXCI6XCJNMzYuODY0LTMyLjE4M3EwIDMuODE2LTIuNyA2LjUxNnQtNi41MTYgMi43LTYuNTE2LTIuNy0yLjctNi41MTYgMi43LTYuNTE2IDYuNTE2LTIuNyA2LjUxNiAyLjcgMi43IDYuNTE2em00LjYwOCAwcTAtNS43MjQtNC4wNS05Ljc3NHQtOS43NzQtNC4wNS05Ljc3NCA0LjA1LTQuMDUgOS43NzQgNC4wNSA5Ljc3NCA5Ljc3NCA0LjA1IDkuNzc0LTQuMDUgNC4wNS05Ljc3NHptNC42MDggMHEwIDcuNjMyLTUuNCAxMy4wMzJ0LTEzLjAzMiA1LjQtMTMuMDMyLTUuNC01LjQtMTMuMDMyIDUuNC0xMy4wMzIgMTMuMDMyLTUuNCAxMy4wMzIgNS40IDUuNCAxMy4wMzJ6bTQuNjA4IDBxMC00LjY4LTEuODM2LTguOTQ2dC00LjkxNC03LjM0NC03LjM0NC00LjkxNC04Ljk0Ni0xLjgzNi04Ljk0NiAxLjgzNi03LjM0NCA0LjkxNC00LjkxNCA3LjM0NC0xLjgzNiA4Ljk0NiAxLjgzNiA4Ljk0NiA0LjkxNCA3LjM0NCA3LjM0NCA0LjkxNCA4Ljk0NiAxLjgzNiA4Ljk0Ni0xLjgzNiA3LjM0NC00LjkxNCA0LjkxNC03LjM0NCAxLjgzNi04Ljk0NnptNC42MDggMHEwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJFTExJUFNJU19IXCI6XCJNMTMuODI0LTM3Ljk0M3Y2LjkxMnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC02LjkxMnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNi45MTJxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDYuOTEycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHptMTguNDMyIDB2Ni45MTJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtNi45MTJxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTYuOTEycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGg2LjkxMnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh6bTE4LjQzMiAwdjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTYuOTEycS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoNi45MTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4elwiLFwiRUxMSVBTSVNfVlwiOlwiTTEzLjgyNC0xOS41MTF2Ni45MTJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtNi45MTJxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTYuOTEycTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGg2LjkxMnExLjQ0IDAgMi40NDggMS4wMDh0MS4wMDggMi40NDh6bTAtMTguNDMydjYuOTEycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTYuOTEycS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di02LjkxMnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoNi45MTJxMS40NCAwIDIuNDQ4IDEuMDA4dDEuMDA4IDIuNDQ4em0wLTE4LjQzMnY2LjkxMnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC02LjkxMnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNi45MTJxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDYuOTEycTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHpcIixcIlJTU19TUVVBUkVcIjpcIk0xOC40MzItMTguMzU5cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptMTIuNjM2IDMuMzg0cS0uNDY4LTguMzUyLTYuMzcyLTE0LjI1NnQtMTQuMjU2LTYuMzcycS0uNTA0LS4wMzYtLjg2NC4zMjR0LS4zNi44Mjh2NC42MDhxMCAuNDY4LjMwNi43OTJ0Ljc3NC4zNnE1LjU0NC4zOTYgOS41MDQgNC4zNTZ0NC4zNTYgOS41MDRxLjAzNi40NjguMzYuNzc0dC43OTIuMzA2aDQuNjA4cS40NjggMCAuODI4LS4zNnQuMzI0LS44NjR6bTEzLjgyNC4wMzZxLS4xOC01LjU0NC0yLjAxNi0xMC43MXQtNS4wMjItOS4zNi03LjM4LTcuMzgtOS4zNi01LjAyMi0xMC43MS0yLjAxNnEtLjUwNC0uMDM2LS44MjguMzI0LS4zNi4zNi0uMzYuODI4djQuNjA4cTAgLjQ2OC4zMjQuNzkydC43OTIuMzZxNy4zNDQuMjUyIDEzLjYwOCA0LjAxNHQxMC4wMjYgMTAuMDI2IDQuMDE0IDEzLjYwOHEuMDM2LjQ2OC4zNi43OTJ0Ljc5Mi4zMjRoNC42MDhxLjQ2OCAwIC44MjgtLjM2LjM5Ni0uMzI0LjMyNC0uODI4em0xMC40MDQtMzQuNTI0djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlBMQVlfQ0lSQ0xFXCI6XCJNMjcuNjQ4LTU5LjgzMXE3LjUyNCAwIDEzLjg3OCAzLjcwOHQxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OC0zLjcwOCAxMy44NzgtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOHptMTMuODI0IDI5LjYyOHExLjE1Mi0uNjQ4IDEuMTUyLTEuOTh0LTEuMTUyLTEuOThsLTE5LjU4NC0xMS41MnEtMS4xMTYtLjY4NC0yLjMwNC0uMDM2LTEuMTUyLjY4NC0xLjE1MiAyLjAxNnYyMy4wNHEwIDEuMzMyIDEuMTUyIDIuMDE2LjU3Ni4yODggMS4xNTIuMjg4LjYxMiAwIDEuMTUyLS4zMjR6XCIsXCJUSUNLRVRcIjpcIk0zNi44NjQtNDguMTY3bDExLjM3NiAxMS4zNzYtMjAuNTkyIDIwLjU5Mi0xMS4zNzYtMTEuMzc2em0tNy41OTYgMzUuMjQ0bDIyLjI0OC0yMi4yNDhxLjY4NC0uNjg0LjY4NC0xLjYydC0uNjg0LTEuNjJsLTEzLjAzMi0xMy4wMzJxLS42NDgtLjY0OC0xLjYyLS42NDh0LTEuNjIuNjQ4bC0yMi4yNDggMjIuMjQ4cS0uNjg0LjY4NC0uNjg0IDEuNjJ0LjY4NCAxLjYybDEzLjAzMiAxMy4wMzJxLjY0OC42NDggMS42Mi42NDh0MS42Mi0uNjQ4em0zMi4wMDQtMjIuOTMybC0zMi42NTIgMzIuNjg4cS0xLjMzMiAxLjMzMi0zLjI1OCAxLjMzMnQtMy4yNTgtMS4zMzJsLTQuNTM2LTQuNTM2cTIuMDE2LTIuMDE2IDIuMDE2LTQuODk2dC0yLjAxNi00Ljg5Ni00Ljg5Ni0yLjAxNi00Ljg5NiAyLjAxNmwtNC41LTQuNTM2cS0xLjMzMi0xLjMzMi0xLjMzMi0zLjI1OHQxLjMzMi0zLjI1OGwzMi42NTItMzIuNjE2cTEuMzMyLTEuMzMyIDMuMjU4LTEuMzMydDMuMjU4IDEuMzMybDQuNSA0LjVxLTIuMDE2IDIuMDE2LTIuMDE2IDQuODk2dDIuMDE2IDQuODk2IDQuODk2IDIuMDE2IDQuODk2LTIuMDE2bDQuNTM2IDQuNXExLjMzMiAxLjMzMiAxLjMzMiAzLjI1OHQtMS4zMzIgMy4yNTh6XCIsXCJNSU5VU19TUVVBUkVcIjpcIk00Ni4wOC0yOS44Nzl2LTQuNjA4cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NGgtMzIuMjU2cS0uOTM2IDAtMS42Mi42ODR0LS42ODQgMS42MnY0LjYwOHEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRoMzIuMjU2cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyem05LjIxNi0xOS41ODR2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiTUlOVVNfU1FVQVJFX09cIjpcIk00MS40NzItMzUuNjM5djIuMzA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTI5Ljk1MnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDI5Ljk1MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTQuNjA4IDE2LjEyOHYtMjkuOTUycTAtMi4zNzYtMS42OTItNC4wNjh0LTQuMDY4LTEuNjkyaC0yOS45NTJxLTIuMzc2IDAtNC4wNjggMS42OTJ0LTEuNjkyIDQuMDY4djI5Ljk1MnEwIDIuMzc2IDEuNjkyIDQuMDY4dDQuMDY4IDEuNjkyaDI5Ljk1MnEyLjM3NiAwIDQuMDY4LTEuNjkydDEuNjkyLTQuMDY4em00LjYwOC0yOS45NTJ2MjkuOTUycTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0yOS45NTJxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0yOS45NTJxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgyOS45NTJxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkxFVkVMX1VQXCI6XCJNMzYuNjQ4LTQyLjczMXEtLjY0OCAxLjMzMi0yLjA4OCAxLjMzMmgtNi45MTJ2MzEuMTA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTI1LjM0NHEtLjc1NiAwLTEuMDQ0LS42NDgtLjI4OC0uNzIuMTQ0LTEuMjZsNS43Ni02LjkxMnEuMzI0LS4zOTYuOS0uMzk2aDExLjUydi0yMy4wNGgtNi45MTJxLTEuNDQgMC0yLjA4OC0xLjMzMi0uNjEyLTEuMzMyLjMyNC0yLjQ0OGwxMS41Mi0xMy44MjRxLjY0OC0uNzkyIDEuNzY0LS43OTJ0MS43NjQuNzkybDExLjUyIDEzLjgyNHEuOTcyIDEuMTUyLjMyNCAyLjQ0OHpcIixcIkxFVkVMX0RPV05cIjpcIk0xLjE1Mi01NS4yMjNoMjUuMzQ0cS40NjggMCAuODEuMzQydC4zNDIuODQ2djMxLjA2OGg2LjkxMnExLjQ0IDAgMi4wODggMS4zMzJ0LS4zMjQgMi40ODRsLTExLjUyIDEzLjgyNHEtLjY0OC43OTItMS43NjQuNzkydC0xLjc2NC0uNzkybC0xMS41Mi0xMy44MjRxLS45MzYtMS4xMTYtLjMyNC0yLjQ4NC42NDgtMS4zMzIgMi4wODgtMS4zMzJoNi45MTJ2LTIzLjA0aC0xMS41MnEtLjUwNCAwLS45LS4zOTZsLTUuNzYtNi45MTJxLS40NjgtLjUwNC0uMTQ0LTEuMjI0LjMyNC0uNjg0IDEuMDQ0LS42ODR6XCIsXCJDSEVDS19TUVVBUkVcIjpcIk0yNC42Ni0xNy42NzVsMjIuMTA0LTIyLjEwNHEuNjg0LS42ODQuNjg0LTEuNjJ0LS42ODQtMS42MmwtMy42NzItMy42NzJxLS42ODQtLjY4NC0xLjYyLS42ODR0LTEuNjIuNjg0bC0xNi44MTIgMTYuODEyLTcuNTk2LTcuNTk2cS0uNjg0LS42ODQtMS42Mi0uNjg0dC0xLjYyLjY4NGwtMy42NzIgMy42NzJxLS42ODQuNjg0LS42ODQgMS42MnQuNjg0IDEuNjJsMTIuODg4IDEyLjg4OHEuNjg0LjY4NCAxLjYyLjY4NHQxLjYyLS42ODR6bTMwLjYzNi0zMS43ODh2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiUEVOQ0lMX1NRVUFSRVwiOlwiTTE0LjU0NC0yNC41NTFsNS40NzIgNS40NzItMS44NzIgMS44NzJoLTIuMDE2di0zLjQ1NmgtMy40NTZ2LTIuMDE2em0xNC45MDQtMTQuMDRxLjUwNC40NjgtLjEwOCAxLjA4bC0xMC40NzYgMTAuNDc2cS0uNjEyLjYxMi0xLjA4LjEwOC0uNTA0LS40NjguMTA4LTEuMDhsMTAuNDc2LTEwLjQ3NnEuNjEyLS42MTIgMS4wOC0uMTA4em0tOS44NjQgMjQuODRsMTkuNTg0LTE5LjU4NC0xMC4zNjgtMTAuMzY4LTE5LjU4NCAxOS41ODR2MTAuMzY4aDEwLjM2OHptMjEuODg4LTIxLjg4OGwzLjMxMi0zLjMxMnExLjAwOC0xLjAwOCAxLjAwOC0yLjQ0OHQtMS4wMDgtMi40NDhsLTUuNDcyLTUuNDcycS0xLjAwOC0xLjAwOC0yLjQ0OC0xLjAwOHQtMi40NDggMS4wMDhsLTMuMzEyIDMuMzEyem0xMy44MjQtMTMuODI0djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkVYVEVSTkFMX0xJTktfU1FVQVJFXCI6XCJNNDYuMDgtMzEuMDMxdi0xNy4yOHEwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODRoLTE3LjI4cS0xLjUxMiAwLTIuMTI0IDEuNDA0LS42MTIgMS40NzYuNTA0IDIuNTJsNS4xODQgNS4xODQtMTkuMjI0IDE5LjIyNHEtLjY4NC42ODQtLjY4NCAxLjYydC42ODQgMS42MmwzLjY3MiAzLjY3MnEuNjg0LjY4NCAxLjYyLjY4NHQxLjYyLS42ODRsMTkuMjI0LTE5LjIyNCA1LjE4NCA1LjE4NHEuNjQ4LjY4NCAxLjYyLjY4NC40MzIgMCAuOS0uMTggMS40MDQtLjYxMiAxLjQwNC0yLjEyNHptOS4yMTYtMTguNDMydjM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlNIQVJFX1NRVUFSRVwiOlwiTTM2LjE4LTI0LjgwM2wxMi42NzItMTIuNjcycS42ODQtLjY4NC42ODQtMS42MnQtLjY4NC0xLjYybC0xMi42NzItMTIuNjcycS0xLjA4LTEuMTE2LTIuNDg0LS41MDQtMS40NC42MTItMS40NCAyLjEyNHY1Ljc2cS00LjI4NCAwLTcuNzc2LjcwMnQtNS44NSAxLjgzNi00LjEwNCAyLjg0NC0yLjc1NCAzLjQzOC0xLjYwMiAzLjkyNC0uNzc0IDQuMDE0LS4xOCAzLjk3OHEwIDYuNTE2IDYuMDEyIDE0LjU0NC4zNi40MzIuOS40MzIuMjUyIDAgLjQ2OC0uMTA4Ljc5Mi0uMzI0LjY4NC0xLjE4OC0xLjU4NC0xMi43NDQgMi4yMzItMTcuMDI4IDEuNjU2LTEuODcyIDQuNjgtMi43MTh0OC4wNjQtLjg0NnY1Ljc2cTAgMS41MTIgMS40NCAyLjEyNC40MzIuMTguODY0LjE4LjkzNiAwIDEuNjItLjY4NHptMTkuMTE2LTI0LjY2djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkNPTVBBU1NcIjpcIk0yMy4wNC0yNS4yNzFsOS4yMTYtNC42MDgtOS4yMTYtNC42MDh2OS4yMTZ6bTEzLjgyNC0yMS4yNzZ2MTkuNTEybC0xOC40MzIgOS4yMTZ2LTE5LjUxMnptMTAuMzY4IDE0LjM2NHEwLTUuMzI4LTIuNjI4LTkuODI4dC03LjEyOC03LjEyOC05LjgyOC0yLjYyOC05LjgyOCAyLjYyOC03LjEyOCA3LjEyOC0yLjYyOCA5LjgyOCAyLjYyOCA5LjgyOCA3LjEyOCA3LjEyOCA5LjgyOCAyLjYyOCA5LjgyOC0yLjYyOCA3LjEyOC03LjEyOCAyLjYyOC05LjgyOHptOC4wNjQgMHEwIDcuNTI0LTMuNzA4IDEzLjg3OHQtMTAuMDYyIDEwLjA2Mi0xMy44NzggMy43MDgtMTMuODc4LTMuNzA4LTEwLjA2Mi0xMC4wNjItMy43MDgtMTMuODc4IDMuNzA4LTEzLjg3OCAxMC4wNjItMTAuMDYyIDEzLjg3OC0zLjcwOCAxMy44NzggMy43MDggMTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44Nzh6XCIsXCJUT0dHTEVfRE9XTlwiOlwiTTQxLjIyLTQwLjEzOXEuNjQ4IDEuMjYtLjE4IDIuMzc2bC0xMS41MiAxNi4xMjhxLS42ODQuOTcyLTEuODcyLjk3MnQtMS44NzItLjk3MmwtMTEuNTItMTYuMTI4cS0uODI4LTEuMTE2LS4xOC0yLjM3Ni42MTItMS4yNiAyLjA1Mi0xLjI2aDIzLjA0cTEuNDQgMCAyLjA1MiAxLjI2em00Ljg2IDI1LjIzNnYtMzQuNTZxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtMzQuNTZxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjM0LjU2cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgzNC41NnEuNDY4IDAgLjgxLS4zNDJ0LjM0Mi0uODF6bTkuMjE2LTM0LjU2djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlRPR0dMRV9VUFwiOlwiTTQxLjIyLTI0LjIyN3EtLjYxMiAxLjI2LTIuMDUyIDEuMjZoLTIzLjA0cS0xLjQ0IDAtMi4wNTItMS4yNi0uNjQ4LTEuMjYuMTgtMi4zNzZsMTEuNTItMTYuMTI4cS42ODQtLjk3MiAxLjg3Mi0uOTcydDEuODcyLjk3MmwxMS41MiAxNi4xMjhxLjgyOCAxLjExNi4xOCAyLjM3NnptNC44NiA5LjMyNHYtMzQuNTZxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtMzQuNTZxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjM0LjU2cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgzNC41NnEuNDY4IDAgLjgxLS4zNDJ0LjM0Mi0uODF6bTkuMjE2LTM0LjU2djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlRPR0dMRV9SSUdIVFwiOlwiTTM5LjE2OC0zMi4xODNxMCAxLjE4OC0uOTcyIDEuODcybC0xNi4xMjggMTEuNTJxLTEuMTE2LjgyOC0yLjM3Ni4xOC0xLjI2LS42MTItMS4yNi0yLjA1MnYtMjMuMDRxMC0xLjQ0IDEuMjYtMi4wNTIgMS4yNi0uNjQ4IDIuMzc2LjE4bDE2LjEyOCAxMS41MnEuOTcyLjY4NC45NzIgMS44NzJ6bTYuOTEyIDE3LjI4di0zNC41NnEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTM0LjU2cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djM0LjU2cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDM0LjU2cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em05LjIxNi0zNC41NnYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2cTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCIsXCJFVVJPXCI6XCJNMzUuMTM2LTE3LjM4N2wxLjI2IDUuNzI0cS4xMDguNDMyLS4xMDguODF0LS42MTIuNTIybC0uMTguMDM2cS0uMTQ0LjA3Mi0uMzc4LjEyNnQtLjU3Ni4xNjItLjc3NC4xOTgtLjkxOC4xOC0xLjA4LjE4LTEuMjA2LjE2Mi0xLjMxNC4xMDgtMS4zODYuMDM2cS04LjQyNCAwLTE0LjcyNC00LjY5OHQtOC41NjgtMTIuNjU0aC0zLjQycS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi00LjA2OHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgyLjM3NnEtLjA3Mi0yLjA1Mi4wMzYtMy43OGgtMi40MTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNC4xMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgzLjUyOHEyLjQxMi03LjU2IDguNzY2LTEyLjE2OHQxNC40MTgtNC42MDhxMy42NzIgMCA2Ljk4NC44MjguMzk2LjEwOC43Mi41NC4yMTYuMzk2LjEwOC44NjRsLTEuNTQ4IDUuNzI0cS0uMTA4LjQ2OC0uNTA0LjcwMnQtLjg2NC4wOWwtLjE0NC0uMDM2LS40MTQtLjA5LS42My0uMTI2LS44MS0uMTI2LS45MzYtLjEwOC0xLjA0NC0uMDktMS4wNjItLjAzNnEtNC41MzYgMC04LjEzNiAyLjMwNHQtNS40IDYuMzM2aDE2Ljg0OHEuNTc2IDAgLjkuNDMyLjM2LjQzMi4yNTIuOTM2bC0uODY0IDQuMTA0cS0uMTguOTM2LTEuMTUyLjkzNmgtMTcuNTY4cS0uMTA4IDEuMzMyIDAgMy43OGgxNi41MjRxLjU0IDAgLjkuNDMyLjMyNC40MzIuMjE2Ljk3MmwtLjg2NCA0LjAzMnEtLjA3Mi4zOTYtLjM5Ni42NjZ0LS43Mi4yN2gtMTMuOTMycTEuNzI4IDQuMjEyIDUuMzgyIDYuNjc4dDguMjI2IDIuNDY2cS42NDggMCAxLjI5Ni0uMDU0dDEuMjA2LS4xMjYgMS4wNjItLjE2Mi44ODItLjE4LjY2Ni0uMTYybC40MzItLjEwOC4xOC0uMDcycS40NjgtLjE4LjkzNi4wNzIuNDMyLjI1Mi41NC43NTZ6XCIsXCJHQlBcIjpcIk0zNi43Mi0yMy41MDd2MTMuMjEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTM0LjQxNnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di01LjRxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMy40OTJ2LTEzLjc4OGgtMy40MnEtLjUwNCAwLS44MjgtLjM0MnQtLjMyNC0uODF2LTQuNzE2cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMy40MnYtOC4wMjhxMC02LjE1NiA0LjQ0Ni0xMC4xNTJ0MTEuMzIyLTMuOTk2cTYuNjYgMCAxMi4wNiA0LjUuMzI0LjI4OC4zNi43Mzh0LS4yNTIuODFsLTMuNzA4IDQuNTcycS0uMzI0LjM5Ni0uNzkyLjQzMi0uNDY4LjA3Mi0uODI4LS4yNTItLjE4LS4xOC0uOTM2LS42ODR0LTIuNDg0LTEuMTUyLTMuMzQ4LS42NDhxLTMuMDYgMC00LjkzMiAxLjY5MnQtMS44NzIgNC40Mjh2Ny43NGgxMC45OHEuNDY4IDAgLjgxLjMyNHQuMzQyLjgyOHY0LjcxNnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MmgtMTAuOTh2MTMuNjQ0aDE0LjkwNHYtNi41MTZxMC0uNDY4LjMyNC0uODF0LjgyOC0uMzQyaDUuODMycS41MDQgMCAuODI4LjM0MnQuMzI0LjgxelwiLFwiVVNEXCI6XCJNMzUuMjA4LTIxLjc3OXEwIDUuNTA4LTMuNTgyIDkuNDg2dC05LjMwNiA0LjkxNHY2LjNxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNC44NnEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi4zcS0yLjM3Ni0uMzI0LTQuNTktMS4xMTZ0LTMuNjU0LTEuNjAyLTIuNjY0LTEuNzI4LTEuNjc0LTEuMzUtLjYzLS42NDhxLS42MTItLjc1Ni0uMDcyLTEuNDc2bDMuNzA4LTQuODZxLjI1Mi0uMzYuODI4LS40MzIuNTQtLjA3Mi44NjQuMzI0bC4wNzIuMDcycTQuMDY4IDMuNTY0IDguNzQ4IDQuNSAxLjMzMi4yODggMi42NjQuMjg4IDIuOTE2IDAgNS4xMy0xLjU0OHQyLjIxNC00LjM5MnEwLTEuMDA4LS41NC0xLjkwOHQtMS4yMDYtMS41MTItMi4xMDYtMS4zNS0yLjM3Ni0xLjE1Mi0yLjg4LTEuMTdxLTEuNDA0LS41NzYtMi4yMTQtLjl0LTIuMjE0LS45NTQtMi4yNS0xLjExNi0yLjAzNC0xLjI3OC0xLjkyNi0xLjUzLTEuNTY2LTEuNzY0LTEuMjc4LTIuMDg4LS43NTYtMi4zOTQtLjMwNi0yLjgwOHEwLTQuOTY4IDMuNTI4LTguNzEydDkuMTgtNC44MjR2LTYuNDhxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoNC44NnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Ni4zMzZxMi4wNTIuMjE2IDMuOTc4LjgyOHQzLjEzMiAxLjIwNiAyLjI4NiAxLjM1IDEuNDA0IDEuMDQ0LjU0LjUwNHEuNjEyLjY0OC4xOCAxLjM2OGwtMi45MTYgNS4yNTZxLS4yODguNTQtLjgyOC41NzYtLjUwNC4xMDgtLjk3Mi0uMjUyLS4xMDgtLjEwOC0uNTIyLS40MzJ0LTEuNDA0LS45NTQtMi4xMDYtMS4xNTItMi42ODItLjkzNi0zLjA3OC0uNDE0cS0zLjQyIDAtNS41OCAxLjU0OHQtMi4xNiAzLjk5NnEwIC45MzYuMzA2IDEuNzI4dDEuMDYyIDEuNDk0IDEuNDIyIDEuMTg4IDIuMDE2IDEuMTE2IDIuMTc4Ljk3MiAyLjUyLjk5cTEuOTA4LjcyIDIuOTE2IDEuMTM0dDIuNzM2IDEuMjYgMi43MTggMS41MyAyLjIzMiAxLjggMS45MDggMi4yODYgMS4xMzQgMi43NTQuNDY4IDMuMzg0elwiLFwiUlVQRUVcIjpcIk0zMi4zMjgtNDcuNTE5djMuNjcycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuMDQ4cS0uODI4IDUuMTg0LTQuNjQ0IDguNDI0dC05LjkzNiAzLjk2cTYuMDEyIDYuNDA4IDE2LjUyNCAxOS4yOTYuNTA0LjU3Ni4xNDQgMS4yMjQtLjI4OC42NDgtMS4wNDQuNjQ4aC03LjAycS0uNTc2IDAtLjktLjQzMi0xMS4wMTYtMTMuMjEyLTE3LjkyOC0yMC41NTYtLjMyNC0uMzI0LS4zMjQtLjc5MnYtNC41NzJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoNC4wMzJxNC43NTIgMCA3LjY1LTEuNTQ4dDMuNjktNC41aC0xNS4zNzJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMy42NzJxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgxNC44NjhxLTIuMDUyLTQuMDY4LTkuNjQ4LTQuMDY4aC01LjIycS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi00Ljc4OHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDI5Ljk1MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2My42NzJxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtOC4zODhxMS42OTIgMi4xOTYgMi4zMDQgNS4xODRoNi4xNTZxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4elwiLFwiWUVOXCI6XCJNMjEuNzA4LTkuMTQzaC02LjE5MnEtLjQ2OCAwLS44MS0uMzI0dC0uMzQyLS44Mjh2LTExLjg4aC0xMC4zNjhxLS40NjggMC0uODEtLjMyNHQtLjM0Mi0uODI4di0zLjcwOHEwLS40NjguMzQyLS44MXQuODEtLjM0MmgxMC4zNjh2LTMuMDZoLTEwLjM2OHEtLjQ2OCAwLS44MS0uMzI0dC0uMzQyLS44Mjh2LTMuNzQ0cTAtLjQ2OC4zNDItLjgxdC44MS0uMzQyaDcuNzA0bC0xMS41NTYtMjAuODA4cS0uMjg4LS41NzYgMC0xLjE1Mi4zNi0uNTc2IDEuMDA4LS41NzZoNi45ODRxLjY4NCAwIDEuMDQ0LjY0OGw3Ljc0IDE1LjNxLjY4NCAxLjM2OCAyLjAxNiA0LjUuMzYtLjg2NCAxLjA5OC0yLjQ0OHQuOTktMi4xOTZsNi44NzYtMTUuMTJxLjI4OC0uNjg0IDEuMDQ0LS42ODRoNi44NzZxLjYxMiAwIC45NzIuNTc2LjMyNC41MDQuMDM2IDEuMTE2bC0xMS4yNjggMjAuODQ0aDcuNzRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXYzLjc0NHEwIC41MDQtLjM0Mi44Mjh0LS44MS4zMjRoLTEwLjQ0djMuMDZoMTAuNDRxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXYzLjcwOHEwIC41MDQtLjM0Mi44Mjh0LS44MS4zMjRoLTEwLjQ0djExLjg4cTAgLjQ2OC0uMzQyLjgxdC0uODEuMzQyelwiLFwiUlVCTEVcIjpcIk0zNy41NDgtNDQuMDk5cTAtMy42LTIuMzQtNS44MzJ0LTYuMTU2LTIuMjMyaC0xMS41MnYxNi4xMjhoMTEuNTJxMy44MTYgMCA2LjE1Ni0yLjIzMnQyLjM0LTUuODMyem04LjUzMiAwcTAgNi45NDgtNC41NTQgMTEuMzR0LTExLjc1NCA0LjM5MmgtMTIuMjR2NC4yNDhoMTguMThxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djQuNjA4cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTE4LjE4djYuOTEycTAgLjUwNC0uMzQyLjgyOHQtLjgxLjMyNGgtNi4wMTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNi45MTJoLTguMDY0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTQuNjA4cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoOC4wNjR2LTQuMjQ4aC04LjA2NHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di01LjM2NHEwLS40NjguMzI0LS44MXQuODI4LS4zNDJoOC4wNjR2LTIyLjY0NHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDE5LjQwNHE3LjIgMCAxMS43NTQgNC4zOTJ0NC41NTQgMTEuMzR6XCIsXCJXT05cIjpcIk0xOC41MDQtMjEuNDE5bDIuOTE2LTEwLjc2NGgtNS43MjRsMi43IDEwLjguMDM2LjEwOC4wMzYuMTA4LjAxOC0uMTI2LjAxOC0uMTI2em00LjE3Ni0xNS4zNzJsMS4yNi00LjYwOGgtMTAuNTEybDEuMTUyIDQuNjA4aDguMXptNi45MTIgMGg1LjAwNGwtMS4yNi00LjYwOGgtMi41MnptMTYuMTY0IDE1LjQwOGwyLjgwOC0xMC44aC01LjgzMmwyLjkxNiAxMC43NjQuMDE4LjEyNi4wNTQuMTI2LjAxOC0uMTA4LjAxOC0uMTA4em0zLjk5Ni0xNS40MDhsMS4xODgtNC42MDhoLTEwLjY5MmwxLjIyNCA0LjYwOGg4LjI4em0xNC43NiAxLjE1MnYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC03LjY2OGwtNS45MDQgMjIuMTc2cS0uMjUyLjg2NC0xLjExNi44NjRoLTUuNzI0cS0uODY0IDAtMS4xMTYtLjg2NGwtNS45NzYtMjIuMTc2aC03LjUyNGwtNi4wMTIgMjIuMTc2cS0uMjUyLjg2NC0xLjExNi44NjRoLTUuNzI0cS0uMzk2IDAtLjcwMi0uMjUydC0uMzc4LS42MTJsLTUuNzYtMjIuMTc2aC03LjQ4OHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuM2wtMS4xODgtNC42MDhoLTUuMTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMy45MjRsLTMuMjA0LTEyLjM4NHEtLjE4LS41NC4xOC0xLjAwOC4zNi0uNDMyLjkzNi0uNDMyaDQuOTMycS45MzYgMCAxLjExNi44NjRsMy4yNCAxMi45NmgxMi45MjRsMy40OTItMTIuOTZxLjI1Mi0uODY0IDEuMTE2LS44NjRoNC41MzZxLjg2NCAwIDEuMTE2Ljg2NGwzLjUyOCAxMi45NmgxMy4xNGwzLjM0OC0xMi45NnEuMTgtLjg2NCAxLjExNi0uODY0aDQuOTMycS41NzYgMCAuOTM2LjQzMi4zNi40NjguMTggMS4wMDhsLTMuMjc2IDEyLjM4NGgzLjk5NnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNS4yMmwtMS4yMjQgNC42MDhoNi40NDRxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4elwiLFwiQlRDXCI6XCJNNDIuMDEyLTQxLjM5OXEuNjQ4IDYuNTUyLTQuNzE2IDkuMjg4IDQuMjEyIDEuMDA4IDYuMyAzLjcwOHQxLjYyIDcuNzA0cS0uMjUyIDIuNTU2LTEuMTcgNC41dC0yLjMyMiAzLjIwNC0zLjQ5MiAyLjEwNi00LjM3NCAxLjI0Mi01LjIzOC41NHY5LjE4aC01LjU0NHYtOS4wMzZxLTIuODggMC00LjM5Mi0uMDM2djkuMDcyaC01LjU0NHYtOS4xOHEtLjY0OCAwLTEuOTQ0LS4wMTh0LTEuOTgtLjAxOGgtNy4ybDEuMTE2LTYuNTg4aDMuOTk2cTEuOCAwIDIuMDg4LTEuODM2di0xNC40NzJoLjU3NnEtLjIxNi0uMDM2LS41NzYtLjAzNnYtMTAuMzMycS0uNDY4LTIuNDQ4LTMuMjA0LTIuNDQ4aC0zLjk5NnYtNS45MDRsNy42MzIuMDM2cTIuMzA0IDAgMy40OTItLjAzNnYtOS4wNzJoNS41NDR2OC44OTJxMi45NTItLjA3MiA0LjM5Mi0uMDcydi04LjgyaDUuNTQ0djkuMDcycTIuODQ0LjI1MiA1LjA0LjgxdDQuMDY4IDEuNjIgMi45NyAyLjgwOCAxLjMxNCA0LjEyMnptLTcuNzQgMTkuNjJxMC0xLjI5Ni0uNTQtMi4zMDR0LTEuMzMyLTEuNjU2LTIuMDctMS4wOTgtMi4zNTgtLjY2Ni0yLjY2NC0uMzI0LTIuNDg0LS4xMDgtMi4zMjIuMDM2LTEuNzEuMDM2djEyLjE2OHEuMjg4IDAgMS4zMzIuMDE4dDEuNzI4LjAxOCAxLjkwOC0uMDU0IDIuMTA2LS4xNDQgMi4wNTItLjMwNiAxLjk5OC0uNTA0IDEuNzEtLjc1NiAxLjQyMi0xLjA4Ljg4Mi0xLjQ0LjM0Mi0xLjgzNnptLTIuNTU2LTE3LjEzNnEwLTEuMTg4LS40NS0yLjEwNnQtMS4wOTgtMS41MTItMS43MjgtMS4wMDgtMS45OC0uNTk0LTIuMjE0LS4yODgtMi4wODgtLjA5LTEuOTQ0LjAzNi0xLjQyMi4wMTh2MTEuMDUycS4xOCAwIDEuMjQyLjAxOHQxLjY3NCAwIDEuOC0uMDcyIDEuOTgtLjE5OCAxLjg1NC0uMzk2IDEuNzQ2LS42NjYgMS4zMzItLjk3Mi45NzItMS4zODYuMzI0LTEuODM2elwiLFwiRklMRVwiOlwiTTM2Ljg2NC00Ni4wMDd2LTE2Ljk5MnEuNzkyLjUwNCAxLjI5NiAxLjAwOGwxNC42ODggMTQuNjg4cS41MDQuNTA0IDEuMDA4IDEuMjk2aC0xNi45OTJ6bS00LjYwOCAxLjE1MnEwIDEuNDQgMS4wMDggMi40NDh0Mi40NDggMS4wMDhoMTkuNTg0djM4LjAxNnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC00OC4zODRxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTU3LjZxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDI4Ljh2MTkuNTg0elwiLFwiRklMRV9URVhUXCI6XCJNNTIuODQ4LTQ3LjMwM3EuNTA0LjUwNCAxLjAwOCAxLjI5NmgtMTYuOTkydi0xNi45OTJxLjc5Mi41MDQgMS4yOTYgMS4wMDh6bS0xNy4xMzYgNS45MDRoMTkuNTg0djM4LjAxNnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC00OC4zODRxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTU3LjZxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDI4Ljh2MTkuNTg0cTAgMS40NCAxLjAwOCAyLjQ0OHQyLjQ0OCAxLjAwOHptNS43NiAyNi40OTZ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMjUuMzQ0cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djIuMzA0cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDI1LjM0NHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMC05LjIxNnYtMi4zMDRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yNS4zNDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMjUuMzQ0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0wLTkuMjE2di0yLjMwNHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTI1LjM0NHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyLjMwNHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyNS4zNDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6XCIsXCJTT1JUX0FMUEhBX0FTQ1wiOlwiTTQyLjg3Ni00OS43NTFoNi4zNzJsLTIuNTkyLTcuODQ4LS40MzItMS42OTJxLS4wNzItLjU3Ni0uMDcyLS43MmgtLjE0NGwtLjEwOC43MnEwIC4wMzYtLjEyNi42NDh0LS4yNyAxLjA0NHptLTE2LjM4IDM3LjE1MnEwIC40MzItLjM2Ljg2NGwtMTEuNDg0IDExLjQ4NHEtLjM2LjMyNC0uODI4LjMyNC0uNDMyIDAtLjgyOC0uMzI0bC0xMS41Mi0xMS41MnEtLjU0LS41NzYtLjI1Mi0xLjI2LjI4OC0uNzIgMS4wOC0uNzJoNi45MTJ2LTQ5LjUzNnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY0OS41MzZoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0zMC4wOTYgNC4yODR2OC4zODhoLTIxLjAyNHYtMy4yNGwxMy4yODQtMTkuMDQ0cS40MzItLjY0OC43NTYtLjk3MmwuMzk2LS4zMjR2LS4xMDhsLS4yMzQuMDE4LS4yNy4wMThxLS40MzIuMTA4LTEuMDguMTA4aC04LjM1MnY0LjE0aC00LjMydi04LjI0NGgyMC40MTJ2My4yMDRsLTEzLjI4NCAxOS4wOHEtLjIxNi4yODgtLjc1Ni45MzZsLS4zOTYuMzk2di4wNzJsLjUwNC0uMDcycS4zMjQtLjA3MiAxLjA4LS4wNzJoOC45Mjh2LTQuMjg0aDQuMzU2em0zLjIwNC0zMi4yOTJ2My44MTZoLTEwLjM2OHYtMy44MTZoMi43bC0xLjY5Mi01LjE4NGgtOC43NDhsLTEuNjkyIDUuMTg0aDIuN3YzLjgxNmgtMTAuMzMydi0zLjgxNmgyLjUybDguMjgtMjMuODMyaDUuODMybDguMjggMjMuODMyaDIuNTJ6XCIsXCJTT1JUX0FMUEhBX0RFU0NcIjpcIk00Mi44NzYtMTIuODg3aDYuMzcybC0yLjU5Mi03Ljg0OC0uNDMyLTEuNjkycS0uMDcyLS41NzYtLjA3Mi0uNzJoLS4xNDRsLS4xMDguNzJxMCAuMDM2LS4xMjYuNjQ4dC0uMjcgMS4wNDR6bS0xNi4zOC4yODhxMCAuNDMyLS4zNi44NjRsLTExLjQ4NCAxMS40ODRxLS4zNi4zMjQtLjgyOC4zMjQtLjQzMiAwLS44MjgtLjMyNGwtMTEuNTItMTEuNTJxLS41NC0uNTc2LS4yNTItMS4yNi4yODgtLjcyIDEuMDgtLjcyaDYuOTEydi00OS41MzZxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg2LjkxMnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2NDkuNTM2aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptMzMuMyA4Ljg1NnYzLjgxNmgtMTAuMzY4di0zLjgxNmgyLjdsLTEuNjkyLTUuMTg0aC04Ljc0OGwtMS42OTIgNS4xODRoMi43djMuODE2aC0xMC4zMzJ2LTMuODE2aDIuNTJsOC4yOC0yMy44MzJoNS44MzJsOC4yOCAyMy44MzJoMi41MnptLTMuMjA0LTQxLjQzNnY4LjM4OGgtMjEuMDI0di0zLjI0bDEzLjI4NC0xOS4wNDRxLjQzMi0uNjQ4Ljc1Ni0uOTcybC4zOTYtLjMyNHYtLjEwOGwtLjIzNC4wMTgtLjI3LjAxOHEtLjQzMi4xMDgtMS4wOC4xMDhoLTguMzUydjQuMTRoLTQuMzJ2LTguMjQ0aDIwLjQxMnYzLjIwNGwtMTMuMjg0IDE5LjA4cS0uMjE2LjI4OC0uNzU2LjkzNmwtLjM5Ni4zNnYuMTA4bC41MDQtLjEwOHEuMzI0LS4wMzYgMS4wOC0uMDM2aDguOTI4di00LjI4NGg0LjM1NnpcIixcIlNPUlRfQU1PVU5UX0FTQ1wiOlwiTTI2LjQ5Ni0xMi41OTlxMCAuNDMyLS4zNi44NjRsLTExLjQ4NCAxMS40ODRxLS4zNi4zMjQtLjgyOC4zMjQtLjQzMiAwLS44MjgtLjMyNGwtMTEuNTItMTEuNTJxLS41NC0uNTc2LS4yNTItMS4yNi4yODgtLjcyIDEuMDgtLjcyaDYuOTEydi00OS41MzZxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg2LjkxMnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2NDkuNTM2aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptMzguMDE2IDQuNjA4djYuOTEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTI5Ljk1MnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDI5Ljk1MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bS02LjkxMi0xOC40MzJ2Ni45MTJxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMjMuMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNi45MTJxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgyMy4wNHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bS02LjkxMi0xOC40MzJ2Ni45MTJxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMTYuMTI4cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTYuMTI4cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptLTYuOTEyLTE4LjQzMnY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC05LjIxNnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDkuMjE2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIlNPUlRfQU1PVU5UX0RFU0NcIjpcIk00My43NzYtNy45OTF2Ni45MTJxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtOS4yMTZxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNi45MTJxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg5LjIxNnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bS0xNy4yOC00LjYwOHEwIC40MzItLjM2Ljg2NGwtMTEuNDg0IDExLjQ4NHEtLjM2LjMyNC0uODI4LjMyNC0uNDMyIDAtLjgyOC0uMzI0bC0xMS41Mi0xMS41MnEtLjU0LS41NzYtLjI1Mi0xLjI2LjI4OC0uNzIgMS4wOC0uNzJoNi45MTJ2LTQ5LjUzNnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY0OS41MzZoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0yNC4xOTItMTMuODI0djYuOTEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTE2LjEyOHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDE2LjEyOHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTYuOTEyLTE4LjQzMnY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yMy4wNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIzLjA0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptNi45MTItMTguNDMydjYuOTEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTI5Ljk1MnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDI5Ljk1MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6XCIsXCJTT1JUX05VTUVSSUNfQVNDXCI6XCJNNDguNDU2LTE3LjE3MXEwLTIuMjY4LTEuNTg0LTQuMTc2dC0zLjcwOC0xLjkwOHEtMS44NzIgMC0yLjk4OCAxLjMzMnQtMS4xMTYgMy4zODQgMS4zMTQgMy40MiAzLjc2MiAxLjM2OHExLjggMCAzLjA2LS45NzJ0MS4yNi0yLjQ0OHptLTIxLjk2IDQuNTcycTAgLjQzMi0uMzYuODY0bC0xMS40ODQgMTEuNDg0cS0uMzYuMzI0LS44MjguMzI0LS40MzIgMC0uODI4LS4zMjRsLTExLjUyLTExLjUycS0uNTQtLjU3Ni0uMjUyLTEuMjYuMjg4LS43MiAxLjA4LS43Mmg2LjkxMnYtNDkuNTM2cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djQ5LjUzNmg2LjkxMnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTI3LTIuNDg0cTAgMi4yMzItLjQ2OCA0LjM3NHQtMS40NzYgNC4xMDQtMi40NDggMy40MzgtMy41NDYgMi4zNTgtNC41OS44ODJxLTIuMjMyIDAtMy44ODgtLjU3Ni0uODY0LS4yODgtMS41MTItLjU0bDEuNDA0LTQuMDY4cS41NC4yNTIgMS4xMTYuMzk2IDEuMzMyLjQ2OCAyLjcuNDY4IDMuMDI0IDAgNC44NDItMi4xMDZ0Mi4zOTQtNS4yMzhoLS4wNzJxLS43NTYuODI4LTIuMjE0IDEuMzMydC0zLjA0Mi41MDRxLTMuODE2IDAtNi4yMjgtMi41NzR0LTIuNDEyLTYuMjFxMC0zLjc4IDIuNTkyLTYuNDA4dDYuNTE2LTIuNjI4cTQuNDI4IDAgNy4zOCAzLjQwMnQyLjk1MiA5LjA5em0tMS4wOC0yNS44MTJ2NC4xMDRoLTE2Ljg4NHYtNC4xMDRoNi4wMTJ2LTE1LjU1MmwuMDE4LS42ODQuMDE4LS42MTJ2LS41NzZoLS4wNzJsLS4yNTIuNDMycS0uMjg4LjQ2OC0uOTM2IDEuMTE2bC0yLjIzMiAyLjA4OC0yLjk1Mi0zLjA5NiA2LjkxMi02LjY2aDQuNDI4djIzLjU0NGg1Ljk0elwiLFwiU09SVF9OVU1FUklDX0RFU0NcIjpcIk00OC40NTYtNTQuMDM1cTAtMi4yNjgtMS41ODQtNC4xNzZ0LTMuNzA4LTEuOTA4cS0xLjg3MiAwLTIuOTg4IDEuMzMydC0xLjExNiAzLjM4NCAxLjMxNCAzLjQyIDMuNzYyIDEuMzY4cTEuOCAwIDMuMDYtLjk3MnQxLjI2LTIuNDQ4em0tMjEuOTYgNDEuNDM2cTAgLjQzMi0uMzYuODY0bC0xMS40ODQgMTEuNDg0cS0uMzYuMzI0LS44MjguMzI0LS40MzIgMC0uODI4LS4zMjRsLTExLjUyLTExLjUycS0uNTQtLjU3Ni0uMjUyLTEuMjYuMjg4LS43MiAxLjA4LS43Mmg2LjkxMnYtNDkuNTM2cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djQ5LjUzNmg2LjkxMnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTI1LjkyIDguNTY4djQuMTA0aC0xNi44ODR2LTQuMTA0aDYuMDEydi0xNS41NTJsLjAxOC0uNjg0LjAxOC0uNjEydi0uNTc2aC0uMDcybC0uMjUyLjQzMnEtLjI4OC40NjgtLjkzNiAxLjExNmwtMi4yMzIgMi4wODgtMi45NTItMy4wOTYgNi45MTItNi42Nmg0LjQyOHYyMy41NDRoNS45NHptMS4wOC00Ny45MTZxMCAyLjIzMi0uNDY4IDQuMzc0dC0xLjQ3NiA0LjEwNC0yLjQ0OCAzLjQzOC0zLjU0NiAyLjM1OC00LjU5Ljg4MnEtMi4yMzIgMC0zLjg4OC0uNTc2LS44NjQtLjI4OC0xLjUxMi0uNTRsMS40MDQtNC4wNjhxLjU0LjI1MiAxLjExNi4zOTYgMS4zMzIuNDY4IDIuNy40NjggMy4wMjQgMCA0Ljg0Mi0yLjEwNnQyLjM5NC01LjIzOGgtLjA3MnEtLjc1Ni44MjgtMi4yMTQgMS4zMzJ0LTMuMDQyLjUwNHEtMy44MTYgMC02LjIyOC0yLjU3NHQtMi40MTItNi4yMXEwLTMuNzggMi41OTItNi40MDh0Ni41MTYtMi42MjhxNC40MjggMCA3LjM4IDMuNDAydDIuOTUyIDkuMDl6XCIsXCJUSFVNQlNfVVBcIjpcIk05LjIxNi0xNi4wNTVxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0cS0uOTcyIDAtMS42MzguNjg0dC0uNjY2IDEuNjJxMCAuOTcyLjY2NiAxLjYzOHQxLjYzOC42NjZxLjkzNiAwIDEuNjItLjY2NnQuNjg0LTEuNjM4em01Ljc2LTE4LjQzMnYyMy4wNHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMTAuMzY4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTIzLjA0cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoMTAuMzY4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bTQyLjYyNCAwcTAgMy4wOTYtMS45OCA1LjM2NC41NCAxLjU4NC41NCAyLjczNi4xMDggMi43MzYtMS41NDggNC45MzIuNjEyIDIuMDE2IDAgNC4yMTItLjU0IDIuMDUyLTEuOTQ0IDMuMzg0LjMyNCA0LjAzMi0xLjc2NCA2LjUxNi0yLjMwNCAyLjczNi03LjA5MiAyLjgwOGgtNC42NDRxLTIuMzc2IDAtNS4xODQtLjU1OHQtNC4zNzQtMS4wNDQtNC4zMzgtMS40MjJxLTQuNDI4LTEuNTQ4LTUuNjg4LTEuNTg0LS45MzYtLjAzNi0xLjYyLS43MDJ0LS42ODQtMS42MDJ2LTIzLjA3NnEwLS45LjY0OC0xLjU2NnQxLjU0OC0uNzM4cS44NjQtLjA3MiAyLjczNi0yLjEyNHQzLjYzNi00LjM1NnEyLjQ0OC0zLjEzMiAzLjYzNi00LjMyLjY0OC0uNjQ4IDEuMTE2LTEuNzI4dC42My0xLjc0Ni40ODYtMi4xNzhxLjI1Mi0xLjQwNC40NS0yLjE5NnQuNzAyLTEuODcyIDEuMjI0LTEuOHEuNjg0LS42ODQgMS42Mi0uNjg0IDEuNjU2IDAgMi45Ny4zNzh0Mi4xNi45MzYgMS40NCAxLjQ1OC44NjQgMS42Mi40MzIgMS44LjE4IDEuNjIuMDE4IDEuNDA0cTAgMS4zNjgtLjM0MiAyLjczNnQtLjY4NCAyLjE2LS45OSAyLjAxNnEtLjEwOC4yMTYtLjM2LjY0OHQtLjM5Ni43OTItLjI4OC44NjRoOS45NzJxMi44MDggMCA0Ljg2IDIuMDUydDIuMDUyIDQuODZ6XCIsXCJUSFVNQlNfRE9XTlwiOlwiTTkuMjE2LTQzLjcwM3EwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NHEtLjk3MiAwLTEuNjM4LS42ODR0LS42NjYtMS42MnEwLS45NzIuNjY2LTEuNjM4dDEuNjM4LS42NjZxLjkzNiAwIDEuNjIuNjY2dC42ODQgMS42Mzh6bTUuNzYgMTguNDMydi0yMy4wNHEwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODRoLTEwLjM2OHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2MjMuMDRxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDEwLjM2OHEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnptNDAuNjQ0LTUuMzY0cTEuOTggMi4xOTYgMS45OCA1LjM2NC0uMDM2IDIuODA4LTIuMDcgNC44NnQtNC44NDIgMi4wNTJoLTkuOTcycS4xNDQuNTA0LjI4OC44NjR0LjM5Ni43OTIuMzYuNjQ4cS42NDggMS4zMzIuOTcyIDIuMDUydC42ODQgMi4xMDYuMzYgMi43NTRxMCAuODY0LS4wMTggMS40MDR0LS4xOCAxLjYyLS40MzIgMS44LS44NjQgMS42Mi0xLjQ0IDEuNDU4LTIuMTYuOTM2LTIuOTcuMzc4cS0uOTM2IDAtMS42Mi0uNjg0LS43Mi0uNzItMS4yMjQtMS44dC0uNzAyLTEuODcyLS40NS0yLjE5NnEtLjMyNC0xLjUxMi0uNDg2LTIuMTc4dC0uNjMtMS43NDYtMS4xMTYtMS43MjhxLTEuMTg4LTEuMTg4LTMuNjM2LTQuMzItMS43NjQtMi4zMDQtMy42MzYtNC4zNTZ0LTIuNzM2LTIuMTI0cS0uOS0uMDcyLTEuNTQ4LS43Mzh0LS42NDgtMS41NjZ2LTIzLjA3NnEwLS45MzYuNjg0LTEuNjAydDEuNjItLjcwMnExLjI2LS4wMzYgNS42ODgtMS41ODQgMi43NzItLjkzNiA0LjMzOC0xLjQyMnQ0LjM3NC0xLjA0NCA1LjE4NC0uNTU4aDQuNjQ0cTQuNzg4LjA3MiA3LjA5MiAyLjgwOCAyLjA4OCAyLjQ4NCAxLjc2NCA2LjUxNiAxLjQwNCAxLjMzMiAxLjk0NCAzLjM4NC42MTIgMi4xOTYgMCA0LjIxMiAxLjY1NiAyLjE5NiAxLjU0OCA0LjkzMiAwIDEuMTUyLS41NCAyLjczNnpcIixcIllPVVRVQkVfU1FVQVJFXCI6XCJNMzMuMDg0LTE3LjUzMXYtNS42NTJxMC0xLjgtMS4wNDQtMS44LS42MTIgMC0xLjE4OC41NzZ2OC4wNjRxLjU3Ni41NzYgMS4xODguNTc2IDEuMDQ0IDAgMS4wNDQtMS43NjR6bTYuNjI0LTQuMzkyaDIuMzc2di0xLjIyNHEwLTEuODM2LTEuMTg4LTEuODM2dC0xLjE4OCAxLjgzNnYxLjIyNHptLTIwLjU1Ni05LjU3NnYyLjUyaC0yLjg4djE1LjIyOGgtMi42NjR2LTE1LjIyOGgtMi44MDh2LTIuNTJoOC4zNTJ6bTcuMjM2IDQuNTM2djEzLjIxMmgtMi40MTJ2LTEuNDRxLTEuNDA0IDEuNjItMi43MzYgMS42Mi0xLjE4OCAwLTEuNTEyLTEuMDA4LS4yMTYtLjU3Ni0uMjE2LTEuOTQ0di0xMC40NGgyLjM3NnY5LjcycTAgLjg2NC4wMzYuOTM2LjAzNi41NC41NC41NC43MiAwIDEuNTEyLTEuMTE2di0xMC4wOGgyLjQxMnptOS4wNzIgMy45OTZ2NS4yNTZxMCAxLjg3Mi0uMjUyIDIuNjI4LS40MzIgMS41MTItMS45MDggMS41MTItMS4yNiAwLTIuNDQ4LTEuNDc2djEuMjk2aC0yLjQxMnYtMTcuNzQ4aDIuNDEydjUuNzk2cTEuMTUyLTEuNDQgMi40NDgtMS40NCAxLjQ3NiAwIDEuOTA4IDEuNTEyLjI1Mi43NTYuMjUyIDIuNjY0em05LjAzNiA0LjY0NHYuMzI0cTAgMS4wNDQtLjA3MiAxLjU0OC0uMTA4Ljc5Mi0uNTQgMS40NC0uOTcyIDEuNDQtMi44OCAxLjQ0LTEuODcyIDAtMi45MTYtMS4zNjgtLjc1Ni0uOTcyLS43NTYtMy4wOTZ2LTQuNjQ0cTAtMi4xMjQuNzItMy4wOTYgMS4wNDQtMS4zNjggMi44OC0xLjM2OHQyLjgwOCAxLjM2OHEuNzU2IDEuMDA4Ljc1NiAzLjA5NnYyLjczNmgtNC43ODh2Mi4zNHEwIDEuODM2IDEuMjI0IDEuODM2Ljg2NCAwIDEuMDgtLjkzNiAwLS4wMzYuMDE4LS4yNTJ0LjAxOC0uNTk0di0uNzc0aDIuNDQ4em0tMTYuMjM2LTI5LjY2NHY1LjYxNnEwIDEuODM2LTEuMTUyIDEuODM2dC0xLjE1Mi0xLjgzNnYtNS42MTZxMC0xLjg3MiAxLjE1Mi0xLjg3MnQxLjE1MiAxLjg3MnptMTkuMTg4IDI1LjY2OHEwLTYuMzcyLS42ODQtOS4zNi0uMzYtMS41ODQtMS41NDgtMi42NDZ0LTIuNzM2LTEuMjQycS00Ljg5Ni0uNTQtMTQuODMyLS41NC05LjkgMC0xNC43OTYuNTQtMS41ODQuMTgtMi43NTQgMS4yNDJ0LTEuNTMgMi42NDZxLS43MiAzLjEzMi0uNzIgOS4zNiAwIDYuMzM2LjcyIDkuMzYuMzYgMS41NDggMS41MyAyLjYyOHQyLjcxOCAxLjI2cTQuOTMyLjU0IDE0LjgzMi41NHQxNC44MzItLjU0cTEuNTQ4LS4xOCAyLjcxOC0xLjI2dDEuNTMtMi42MjhxLjcyLTMuMDI0LjcyLTkuMzZ6bS0yNy4xOC0yMy40MzZsMy4yNC0xMC42NTZoLTIuN2wtMS44MzYgNy4wMi0xLjkwOC03LjAyaC0yLjgwOGwuODY0IDIuNDg0LjgyOCAyLjQ4NHExLjI2IDMuNzA4IDEuNjU2IDUuNjg4djcuMjM2aDIuNjY0di03LjIzNnptMTAuNDA0IDIuOTE2di00LjY4cTAtMi4wODgtLjc1Ni0zLjEzMi0xLjA0NC0xLjM2OC0yLjgwOC0xLjM2OC0xLjgzNiAwLTIuODA4IDEuMzY4LS43NTYgMS4wNDQtLjc1NiAzLjEzMnY0LjY4cTAgMi4wODguNzU2IDMuMTMyLjk3MiAxLjM2OCAyLjgwOCAxLjM2OCAxLjc2NCAwIDIuODA4LTEuMzY4Ljc1Ni0uOTcyLjc1Ni0zLjEzMnptNi41MTYgNC4zMmgyLjQxMnYtMTMuMzJoLTIuNDEydjEwLjE4OHEtLjc5MiAxLjExNi0xLjUxMiAxLjExNi0uNTQgMC0uNTc2LS41NzYtLjAzNi0uMDcyLS4wMzYtLjkzNnYtOS43OTJoLTIuNDEydjEwLjU0OHEwIDEuMzMyLjIxNiAxLjk4LjM5Ni45NzIgMS41NDguOTcyIDEuMjk2IDAgMi43NzItMS42MnYxLjQ0em0xOC4xMDgtMTAuOTQ0djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIllPVVRVQkVcIjpcIk0zNC45NTYtMTkuNjU1djcuNTk2cTAgMi40MTItMS40MDQgMi40MTItLjgyOCAwLTEuNjItLjc5MnYtMTAuODM2cS43OTItLjc5MiAxLjYyLS43OTIgMS40MDQgMCAxLjQwNCAyLjQxMnptMTIuMTY4LjAzNnYxLjY1NmgtMy4yNHYtMS42NTZxMC0yLjQ0OCAxLjYyLTIuNDQ4dDEuNjIgMi40NDh6bS0zNC43NzYtNy44NDhoMy44NTJ2LTMuMzg0aC0xMS4yMzJ2My4zODRoMy43OHYyMC40ODRoMy42di0yMC40ODR6bTEwLjM2OCAyMC40ODRoMy4yMDR2LTE3Ljc4NGgtMy4yMDR2MTMuNjA4cS0xLjA4IDEuNTEyLTIuMDUyIDEuNTEyLS42NDggMC0uNzU2LS43NTYtLjAzNi0uMTA4LS4wMzYtMS4yNnYtMTMuMTA0aC0zLjIwNHYxNC4wNzZxMCAxLjc2NC4yODggMi42MjguNDMyIDEuMzMyIDIuMDg4IDEuMzMyIDEuNzI4IDAgMy42NzItMi4xOTZ2MS45NDR6bTE1LjQ0NC01LjMyOHYtNy4wOTJxMC0yLjYyOC0uMzI0LTMuNTY0LS42MTItMi4wMTYtMi41NTYtMi4wMTYtMS44IDAtMy4zNDggMS45NDR2LTcuODEyaC0zLjIwNHYyMy44NjhoMy4yMDR2LTEuNzI4cTEuNjIgMS45OCAzLjM0OCAxLjk4IDEuOTQ0IDAgMi41NTYtMS45OC4zMjQtLjk3Mi4zMjQtMy42em0xMi4xNjgtLjM2di0uNDY4aC0zLjI3NnEwIDEuODM2LS4wNzIgMi4xOTYtLjI1MiAxLjI5Ni0xLjQ0IDEuMjk2LTEuNjU2IDAtMS42NTYtMi40ODR2LTMuMTMyaDYuNDQ0di0zLjcwOHEwLTIuODQ0LS45NzItNC4xNzYtMS40MDQtMS44MzYtMy44MTYtMS44MzYtMi40NDggMC0zLjg1MiAxLjgzNi0xLjAwOCAxLjMzMi0xLjAwOCA0LjE3NnY2LjIyOHEwIDIuODQ0IDEuMDQ0IDQuMTc2IDEuNDA0IDEuODM2IDMuODg4IDEuODM2IDIuNTkyIDAgMy44ODgtMS45MDguNjQ4LS45NzIuNzU2LTEuOTQ0LjA3Mi0uMzI0LjA3Mi0yLjA4OHptLTIxLjg4OC0zMi44Njh2LTcuNTZxMC0yLjQ4NC0xLjU0OC0yLjQ4NHQtMS41NDggMi40ODR2Ny41NnEwIDIuNTIgMS41NDggMi41MnQxLjU0OC0yLjUyem0yNS44ODQgMjcuMDM2cTAgOC40MjQtLjkzNiAxMi42LS41MDQgMi4xMjQtMi4wODggMy41NjR0LTMuNjcyIDEuNjU2cS02LjYyNC43NTYtMTkuOTguNzU2dC0xOS45OC0uNzU2cS0yLjA4OC0uMjE2LTMuNjktMS42NTZ0LTIuMDctMy41NjRxLS45MzYtNC4wMzItLjkzNi0xMi42IDAtOC40MjQuOTM2LTEyLjYuNTA0LTIuMTI0IDIuMDg4LTMuNTY0dDMuNzA4LTEuNjkycTYuNTg4LS43MiAxOS45NDQtLjcydDE5Ljk4LjcycTIuMDg4LjI1MiAzLjY5IDEuNjkydDIuMDcgMy41NjRxLjkzNiA0LjAzMi45MzYgMTIuNnptLTM1LjkyOC00NS45MzZoMy42NzJsLTQuMzU2IDE0LjM2NHY5Ljc1NmgtMy42di05Ljc1NnEtLjUwNC0yLjY2NC0yLjE5Ni03LjYzMi0xLjMzMi0zLjcwOC0yLjM0LTYuNzMyaDMuODE2bDIuNTU2IDkuNDY4em0xMy4zMiAxMS45ODh2Ni4zcTAgMi45MTYtMS4wMDggNC4yNDgtMS4zMzIgMS44MzYtMy44MTYgMS44MzYtMi40MTIgMC0zLjc4LTEuODM2LTEuMDA4LTEuMzY4LTEuMDA4LTQuMjQ4di02LjNxMC0yLjg4IDEuMDA4LTQuMjEyIDEuMzY4LTEuODM2IDMuNzgtMS44MzYgMi40ODQgMCAzLjgxNiAxLjgzNiAxLjAwOCAxLjMzMiAxLjAwOCA0LjIxMnptMTIuMDYtNS44MzJ2MTcuOTY0aC0zLjI3NnYtMS45OHEtMS45MDggMi4yMzItMy43MDggMi4yMzItMS42NTYgMC0yLjEyNC0xLjMzMi0uMjg4LS44NjQtLjI4OC0yLjd2LTE0LjE4NGgzLjI3NnYxMy4yMTJxMCAxLjE4OC4wMzYgMS4yNi4xMDguNzkyLjc1Ni43OTIuOTcyIDAgMi4wNTItMS41NDh2LTEzLjcxNmgzLjI3NnpcIixcIlhJTkdcIjpcIk0yMS40OTItNDAuNDI3cS0uMzYuNjQ4LTkuMjUyIDE2LjQxNi0uOTcyIDEuNjU2LTIuMzQgMS42NTZoLTguNjA0cS0uNzU2IDAtMS4xMTYtLjYxMnQwLTEuMjk2bDkuMTA4LTE2LjEyOHYtLjAzNmwtNS43OTYtMTAuMDQ0cS0uNDMyLS43OTItLjAzNi0xLjMzMi4zMjQtLjU0IDEuMTUyLS41NGg4LjYwNHExLjQ0IDAgMi4zNzYgMS42MnptMjkuMDE2LTIzLjExMnEuMzk2LjU3NiAwIDEuMzMybC0xOS4wMDggMzMuNjI0di4wMzZsMTIuMDk2IDIyLjE0cS4zOTYuNzIuMDM2IDEuMzMyLS4zNi41NC0xLjE1Mi41NGgtOC42MDRxLTEuNTEyIDAtMi4zNzYtMS42MmwtMTIuMjA0LTIyLjM5MnEuNjQ4LTEuMTUyIDE5LjExNi0zMy45MTIuOS0xLjYyIDIuMzA0LTEuNjJoOC42NzZxLjc5MiAwIDEuMTE2LjU0elwiLFwiWElOR19TUVVBUkVcIjpcIk0yNC42Ni0zNi44OTlxMC0uMDM2LTQuNTM2LTcuOTkyLS43NTYtMS4yMjQtMS44NzItMS4yMjRoLTYuNjI0cS0uNjQ4IDAtLjkzNi4zOTYtLjI1Mi40MzIuMDM2IDEuMDQ0bDQuNSA3Ljc3NnYuMDM2bC03LjA1NiAxMi40NTZxLS4zMjQuNTA0IDAgMS4wMDguMjg4LjQ2OC44NjQuNDY4aDYuNjZxMS4xMTYgMCAxLjgtMS4yOTZ6bTIyLjQ2NC0xNy44OTJxLS4yNTItLjQzMi0uODY0LS40MzJoLTYuNzMycS0xLjA4IDAtMS43NjQgMS4yNmwtMTQuNzk2IDI2LjI0NHEuMDM2LjA3MiA5LjQzMiAxNy4zMTYuNzIgMS4yNiAxLjg3MiAxLjI2aDYuNjI0cS42NDggMCAuOS0uNDMyLjI4OC0uNDY4LS4wMzYtMS4wMDhsLTkuMzYtMTcuMTM2di0uMDM2bDE0LjcyNC0yNi4wMjhxLjI4OC0uNTc2IDAtMS4wMDh6bTguMTcyIDUuMzI4djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIllPVVRVQkVfUExBWVwiOlwiTTQ2LjA4LTMyLjE4M3EwLTEuMzMyLTEuMDgtMS45NDRsLTE4LjQzMi0xMS41MnEtMS4xMTYtLjcyLTIuMzQtLjA3Mi0xLjE4OC42NDgtMS4xODggMi4wMTZ2MjMuMDRxMCAxLjM2OCAxLjE4OCAyLjAxNi41NzYuMjg4IDEuMTE2LjI4OC43MiAwIDEuMjI0LS4zNmwxOC40MzItMTEuNTJxMS4wOC0uNjEyIDEuMDgtMS45NDR6bTE4LjQzMiAwcTAgMy40NTYtLjAzNiA1LjR0LS4zMDYgNC45MTQtLjgxIDUuMzFxLS41NzYgMi42MjgtMi40ODQgNC40Mjh0LTQuNDY0IDIuMDg4cS03Ljk5Mi45LTI0LjE1Ni45dC0yNC4xNTYtLjlxLTIuNTU2LS4yODgtNC40ODItMi4wODh0LTIuNTAyLTQuNDI4cS0uNTA0LTIuMzQtLjc3NC01LjMxdC0uMzA2LTQuOTE0LS4wMzYtNS40LjAzNi01LjQuMzA2LTQuOTE0LjgxLTUuMzFxLjU3Ni0yLjYyOCAyLjQ4NC00LjQyOHQ0LjQ2NC0yLjA4OHE3Ljk5Mi0uOSAyNC4xNTYtLjl0MjQuMTU2LjlxMi41NTYuMjg4IDQuNDgyIDIuMDg4dDIuNTAyIDQuNDI4cS41MDQgMi4zNC43NzQgNS4zMXQuMzA2IDQuOTE0LjAzNiA1LjR6XCIsXCJEUk9QQk9YXCI6XCJNMTQuNDcyLTM4Ljk4N2wxNy43ODQgMTAuOTgtMTIuMzEyIDEwLjI2LTE3LjY0LTExLjQ4NHptMzUuNDk2IDE5Ljk4djMuODg4bC0xNy42NCAxMC41NDh2LjAzNmwtLjAzNi0uMDM2LS4wMzYuMDM2di0uMDM2bC0xNy42MDQtMTAuNTQ4di0zLjg4OGw1LjI5MiAzLjQ1NiAxMi4zMTItMTAuMjI0di0uMDcybC4wMzYuMDM2LjAzNi0uMDM2di4wNzJsMTIuMzQ4IDEwLjIyNHptLTMwLjAyNC00MS4xODRsMTIuMzEyIDEwLjI2LTE3Ljc4NCAxMC45NDQtMTIuMTY4LTkuNzJ6bTMwLjA5NiAyMS4yMDRsMTIuMTY4IDkuNzU2LTE3LjYwNCAxMS40ODQtMTIuMzQ4LTEwLjI2em0tNS40MzYtMjEuMjA0bDE3LjYwNCAxMS40ODQtMTIuMTY4IDkuNzItMTcuNzg0LTEwLjk0NHpcIixcIlNUQUNLX09WRVJGTE9XXCI6XCJNNDYuNDA0LTUuNjg3aC00MC4yNDh2LTE3LjI4aC01Ljc2djIzLjA0aDUxLjc2OHYtMjMuMDRoLTUuNzZ2MTcuMjh6bS0zMy45MTItMTguODY0bDEuMTg4LTUuNjUyIDI4LjE4OCA1Ljk0LTEuMTg4IDUuNjE2em0zLjcwOC0xMy40NjRsMi40MTItNS4yNTYgMjYuMSAxMi4yMDQtMi40MTIgNS4yMnptNy4yMzYtMTIuODE2bDMuNjcyLTQuNDI4IDIyLjEwNCAxOC40NjgtMy42NzIgNC40Mjh6bTE0LjI5Mi0xMy42MDhsMTcuMTcyIDIzLjA3Ni00LjYwOCAzLjQ1Ni0xNy4xNzItMjMuMDc2em0tMjUuODQ4IDUyLjk1NnYtNS43MjRoMjguOHY1LjcyNGgtMjguOHpcIixcIklOU1RBR1JBTVwiOlwiTTQ5LjAzMi0xMy4xMDN2LTIzLjMyOGgtNC44NnEuNzIgMi4yNjguNzIgNC43MTYgMCA0LjUzNi0yLjMwNCA4LjM3dC02LjI2NCA2LjA2Ni04LjY0IDIuMjMycS03LjA5MiAwLTEyLjEzMi00Ljg3OHQtNS4wNC0xMS43OXEwLTIuNDQ4LjcyLTQuNzE2aC01LjA3NnYyMy4zMjhxMCAuOTM2LjYzIDEuNTY2dDEuNTY2LjYzaDM4LjQ4NHEuOSAwIDEuNTQ4LS42M3QuNjQ4LTEuNTY2em0tMTAuMjI0LTE5LjE4OHEwLTQuNDY0LTMuMjU4LTcuNjE0dC03Ljg2Ni0zLjE1cS00LjU3MiAwLTcuODMgMy4xNXQtMy4yNTggNy42MTQgMy4yNTggNy42MTQgNy44MyAzLjE1cTQuNjA4IDAgNy44NjYtMy4xNXQzLjI1OC03LjYxNHptMTAuMjI0LTEyLjk2di01Ljk0cTAtMS4wMDgtLjcyLTEuNzQ2dC0xLjc2NC0uNzM4aC02LjI2NHEtMS4wNDQgMC0xLjc2NC43Mzh0LS43MiAxLjc0NnY1Ljk0cTAgMS4wNDQuNzIgMS43NjR0MS43NjQuNzJoNi4yNjRxMS4wNDQgMCAxLjc2NC0uNzJ0LjcyLTEuNzY0em02LjI2NC03LjQ4OHY0MS4xMTJxMCAyLjkxNi0yLjA4OCA1LjAwNHQtNS4wMDQgMi4wODhoLTQxLjExMnEtMi45MTYgMC01LjAwNC0yLjA4OHQtMi4wODgtNS4wMDR2LTQxLjExMnEwLTIuOTE2IDIuMDg4LTUuMDA0dDUuMDA0LTIuMDg4aDQxLjExMnEyLjkxNiAwIDUuMDA0IDIuMDg4dDIuMDg4IDUuMDA0elwiLFwiRkxJQ0tSXCI6XCJNNDQuOTI4LTU5LjgzMXE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZ6bS0xOS44IDI3LjY0OHEwLTMuMTY4LTIuMjMyLTUuNHQtNS40LTIuMjMyLTUuNCAyLjIzMi0yLjIzMiA1LjQgMi4yMzIgNS40IDUuNCAyLjIzMiA1LjQtMi4yMzIgMi4yMzItNS40em0yMC4zMDQgMHEwLTMuMTY4LTIuMjMyLTUuNHQtNS40LTIuMjMyLTUuNCAyLjIzMi0yLjIzMiA1LjQgMi4yMzIgNS40IDUuNCAyLjIzMiA1LjQtMi4yMzIgMi4yMzItNS40elwiLFwiQUROXCI6XCJNMjcuNjQ4LTQyLjA0N2w3LjIzNiAxMS4wMTZoLTE0LjQ3MnptMTMuMTQgMTkuMDhoMy4zODRsLTE2LjUyNC0yNC44NzYtMTYuNTI0IDI0Ljg3NmgzLjM4NGwzLjc0NC01Ljc2aDE4Ljc5MnptMTQuNTA4LTkuMjE2cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkJJVEJVQ0tFVFwiOlwiTTI5LjM0LTMzLjUxNXEuMjg4IDIuMjY4LTEuODE4IDMuNjM2dC00LjAxNC4yMTZxLTEuNDA0LS42MTItMS45MjYtMi4wODh0LS4wMTgtMi45NTIgMS44NzItMi4wODhxMS4yOTYtLjY0OCAyLjYxLS40MzJ0Mi4zMDQgMS4yNzguOTkgMi40M3ptMy45OTYtLjc1NnEtLjUwNC0zLjg1Mi00LjA2OC01LjkwNHQtNy4wOTItLjQ2OHEtMi4yNjggMS4wMDgtMy42MTggMy4xODZ0LTEuMjQyIDQuNjYycS4xNDQgMy4yNzYgMi43OSA1LjU4dDUuOTU4IDIuMDE2cTMuMjc2LS4yODggNS40NzItMy4wMjR0MS44LTYuMDQ4em04LjYwNC0xOS41MTJxLS43Mi0uOTcyLTIuMDE2LTEuNjAydC0yLjA4OC0uNzkyLTIuNTU2LS40NXEtMTAuNDc2LTEuNjkyLTIwLjM3Ni4wNzItMS41NDguMjUyLTIuMzc2LjQzMnQtMS45OC43OTItMS44IDEuNTQ4cTEuMDggMS4wMDggMi43MzYgMS42Mzh0Mi42NDYuNzkyIDMuMTUuNDE0cTguMjA4IDEuMDQ0IDE2LjEyOC4wMzYgMi4yNjgtLjI4OCAzLjIyMi0uNDMydDIuNjEtLjc3NCAyLjctMS42NzR6bTIuMDUyIDM3LjI2cS0uMjg4LjkzNi0uNTU4IDIuNzU0dC0uNTA0IDMuMDI0LTEuMDI2IDIuNTItMi4wODggMi4wMzRxLTMuMDk2IDEuNzI4LTYuODIyIDIuNTc0dC03LjI3Mi43OTItNy4yNTQtLjY2NnEtMS42NTYtLjI4OC0yLjkzNC0uNjQ4dC0yLjc1NC0uOTcyLTIuNjI4LTEuNTY2LTEuODcyLTIuMjE0cS0uOS0zLjQ1Ni0yLjA1Mi0xMC41MTJsLjIxNi0uNTc2LjY0OC0uMzI0cTguMDI4IDUuMzI4IDE4LjIzNCA1LjMyOHQxOC4yNy01LjMyOHEuNzU2LjIxNi44NjQuODI4dC0uMTggMS42Mi0uMjg4IDEuMzMyem02LjUxNi0zNC41OTZxLS45MzYgNi4wMTItMy45OTYgMjMuNTgtLjE4IDEuMDgtLjk3MiAyLjAxNnQtMS41NjYgMS40NC0xLjk2MiAxLjExNnEtOS4wNzIgNC41MzYtMjEuOTYgMy4xNjgtOC45MjgtLjk3Mi0xNC4xODQtNS4wMDQtLjU0LS40MzItLjkxOC0uOTU0dC0uNjEyLTEuMjYtLjMyNC0xLjIyNC0uMjE2LTEuNDIyLS4xOTgtMS4yNnEtLjMyNC0xLjgtLjk1NC01LjR0LTEuMDA4LTUuODE0LS44NDYtNS4zMS0uNzkyLTUuNjg4cS4xMDgtLjkzNi42My0xLjc0NnQxLjEzNC0xLjM1IDEuNjItMS4wOCAxLjY1Ni0uODEgMS43MjgtLjY2NnE0LjUtMS42NTYgMTEuMjY4LTIuMzA0IDEzLjY0NC0xLjMzMiAyNC4zMzYgMS44IDUuNTggMS42NTYgNy43NCA0LjM5Mi41NzYuNzIuNTk0IDEuODM2dC0uMTk4IDEuOTQ0elwiLFwiQklUQlVDS0VUX1NRVUFSRVwiOlwiTTMwLjUyOC0zMy4xMTlxMC0xLjU0OC0xLjQ3Ni0yLjM3NnQtMi43NzItLjAzNnEtMS41NDguNzItMS41MyAyLjYxdDEuNTY2IDIuNTM4cTEuNDA0LjgyOCAyLjkxNi0uMTQ0dDEuMjk2LTIuNTkyem0yLjg4LS41NzZxLjI4OCAyLjM3Ni0xLjI5NiA0LjM1NnQtMy45NiAyLjE5Ni00LjI4NC0xLjQ0LTIuMDE2LTQuMDY4cS0uMDcyLTEuNzY0LjkxOC0zLjM0OHQyLjYxLTIuMzA0cTIuNTItMS4xMTYgNS4wOTQuMzZ0Mi45MzQgNC4yNDh6bTYuMTkyLTE0LjA3NnEtLjcyLjc1Ni0xLjkyNiAxLjIyNHQtMS45MDguNTc2LTIuMjg2LjI4OHEtNS41OC43Mi0xMS42NjQgMC0xLjU4NC0uMjE2LTIuMjY4LS4zNDJ0LTEuODktLjU3Ni0xLjk2Mi0xLjE3cS40NjgtLjY4NCAxLjI5Ni0xLjExNnQxLjQ0LS41NTggMS42OTItLjMwNnE3LjEyOC0xLjI2IDE0LjY4OC0uMDM2IDEuMTg4LjE4IDEuODM2LjMwNnQxLjU0OC41NzYgMS40MDQgMS4xMzR6bTEuNTEyIDI2Ljg1NnEwLS4yNTIuMTk4LS45NTR0LjEwOC0xLjE1Mi0uNjMtLjU5NHEtNS43OTYgMy44MTYtMTMuMTQgMy44MTZ0LTEzLjE3Ni0zLjgxNmwtLjQzMi4yMTYtLjE4LjQzMnEuOTM2IDUuNTQ0IDEuNDc2IDcuNTYgMS42OTIgMi45MTYgNy4zNDQgMy44ODggOC45NjQgMS42NTYgMTUuNDA4LTEuOTA4IDEuMjI0LS42ODQgMS43NjQtMS44NTR0LjgxLTMuMDc4LjQ1LTIuNTU2em00LjY4LTI0Ljk0OHEuMzI0LTEuOTA4LS4yODgtMi43LTEuNTQ4LTEuOTgtNS41OC0zLjE2OC03Ljc3Ni0yLjI2OC0xNy41MzItMS4yOTYtNC43NTIuNDMyLTguMTM2IDEuNjU2LTEuMzY4LjU0LTIuMTQyLjl0LTEuNjkyIDEuMjI0LTEuMDYyIDEuOTQ0cS4yODggMi40NDguNjg0IDQuOTY4dDEuMDQ0IDYuMTU2Ljg2NCA0LjkzMnEuMDM2LjE4LjE4IDEuMTE2dC4yNTIgMS4yOTYuNDMyLjk3Mi43OTIgMS4wMDhxMy43OCAyLjg4IDEwLjIyNCAzLjYgOS4zMjQgMS4wMDggMTUuODQtMi4yNjguODY0LS40NjggMS40MjItLjgyOHQxLjExNi0xLjA0NC43MDItMS40NHExLjcyOC05LjYxMiAyLjg4LTE3LjAyOHptOS41MDQtMy42djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlRVTUJMUlwiOlwiTTMzLjk4NC0xNi41OTVsMi44OCA4LjUzMnEtLjgyOCAxLjI2LTMuOTk2IDIuMzc2dC02LjM3MiAxLjE1MnEtMy43NDQuMDcyLTYuODU4LS45MzZ0LTUuMTMtMi42NjQtMy40Mi0zLjgxNi0xLjk5OC00LjMyLS41OTQtNC4yNDh2LTE5LjU4NGgtNi4wNDh2LTcuNzRxMi41OTItLjkzNiA0LjY0NC0yLjUwMnQzLjI3Ni0zLjI0IDIuMDg4LTMuNjcyIDEuMjI0LTMuNTY0LjU0LTMuMTg2cS4wMzYtLjE4LjE2Mi0uMzA2dC4yNy0uMTI2aDguNzg0djE1LjI2NGgxMS45ODh2OS4wNzJoLTEyLjAyNHYxOC42NDhxMCAxLjA4LjIzNCAyLjAxNnQuODEgMS44OSAxLjc4MiAxLjQ5NCAyLjkzNC41MDRxMi44MDgtLjA3MiA0LjgyNC0xLjA0NHpcIixcIlRVTUJMUl9TUVVBUkVcIjpcIk00MC44OTYtMTEuODQzbC0yLjIzMi02LjU4OHEtMS41ODQuNzkyLTMuNzA4Ljc5Mi0xLjI5Ni4wMzYtMi4yMzItLjM3OHQtMS4zODYtMS4xMzQtLjYzLTEuNDU4LS4xOC0xLjU2NnYtMTQuMzI4aDkuMjUydi02Ljk4NGgtOS4yMTZ2LTExLjczNmgtNi43NjhxLS4yODggMC0uMzI0LjM2LS4xOCAxLjU4NC0uNjMgMy4xMzJ0LTEuNDA0IDMuNDItMi43NzIgMy40Mi00LjI2NiAyLjQ0OHY1Ljk0aDQuNjh2MTUuMDQ4cTAgMi4wNTIuNzc0IDQuMTR0Mi4zNCAzLjk5NiA0LjM1NiAzLjA3OCA2LjM1NCAxLjA5OHEyLjQ4NC0uMDM2IDQuOTE0LS45dDMuMDc4LTEuOHptMTQuNC0zNy42MnYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2cTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCIsXCJMT05HX0FSUk9XX0RPV05cIjpcIk0yNy41NC0xNy42NzVxLjI4OC42ODQtLjE4IDEuMjZsLTEyLjYgMTMuODI0cS0uMzYuMzYtLjgyOC4zNi0uNTA0IDAtLjg2NC0uMzZsLTEyLjc4LTEzLjgyNHEtLjQ2OC0uNTc2LS4xOC0xLjI2LjMyNC0uNjg0IDEuMDQ0LS42ODRoOC4wNjR2LTQ0LjkyOHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY0NC45MjhoOC4wNjRxLjc1NiAwIDEuMDQ0LjY4NHpcIixcIkxPTkdfQVJST1dfVVBcIjpcIk0yNy41NC00Ni42OTFxLS4zMjQuNjg0LTEuMDQ0LjY4NGgtOC4wNjR2NDQuOTI4cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTQ0LjkyOGgtOC4wNjRxLS43NTYgMC0xLjA0NC0uNjg0dC4xOC0xLjI2bDEyLjYtMTMuODI0cS4zNi0uMzYuODI4LS4zNi41MDQgMCAuODY0LjM2bDEyLjc4IDEzLjgyNHEuNDY4LjU3Ni4xOCAxLjI2elwiLFwiTE9OR19BUlJPV19MRUZUXCI6XCJNNjQuNTEyLTM1LjYzOXY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC00NC45Mjh2OC4wNjRxMCAuNzU2LS42ODQgMS4wNDR0LTEuMjYtLjE4bC0xMy44MjQtMTIuNnEtLjM2LS4zNi0uMzYtLjgyOCAwLS41MDQuMzYtLjg2NGwxMy44MjQtMTIuNzQ0cS41NzYtLjUwNCAxLjI2LS4yMTYuNjg0LjMyNC42ODQgMS4wNDR2OC4wNjRoNDQuOTI4cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIkxPTkdfQVJST1dfUklHSFRcIjpcIk02Mi4yMDgtMzIuMjkxcTAgLjUwNC0uMzYuODY0bC0xMy44MjQgMTIuNzQ0cS0uNTc2LjUwNC0xLjI2LjIxNi0uNjg0LS4zMjQtLjY4NC0xLjA0NHYtOC4wNjRoLTQ0LjkyOHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDQ0LjkyOHYtOC4wNjRxMC0uNzU2LjY4NC0xLjA0NHQxLjI2LjE4bDEzLjgyNCAxMi42cS4zNi4zNi4zNi44Mjh6XCIsXCJBUFBMRVwiOlwiTTUwLjE0OC0yMC42OTlxLTEuNDA0IDQuNS00LjQyOCA5LTQuNjQ0IDcuMDU2LTkuMjUyIDcuMDU2LTEuNzY0IDAtNS4wNC0xLjE1Mi0zLjA5Ni0xLjE1Mi01LjQzNi0xLjE1Mi0yLjE5NiAwLTUuMTEyIDEuMTg4LTIuOTE2IDEuMjI0LTQuNzUyIDEuMjI0LTUuNDcyIDAtMTAuODM2LTkuMzI0LTUuMjkyLTkuMzk2LTUuMjkyLTE4LjEwOCAwLTguMjA4IDQuMDY4LTEzLjQ2NCA0LjAzMi01LjE4NCAxMC4yMjQtNS4xODQgMi41OTIgMCA2LjM3MiAxLjA4IDMuNzQ0IDEuMDggNC45NjggMS4wOCAxLjYyIDAgNS4xNDgtMS4yMjQgMy42NzItMS4yMjQgNi4yMjgtMS4yMjQgNC4yODQgMCA3LjY2OCAyLjM0IDEuODcyIDEuMjk2IDMuNzQ0IDMuNi0yLjg0NCAyLjQxMi00LjEwNCA0LjI0OC0yLjM0IDMuMzg0LTIuMzQgNy40NTIgMCA0LjQ2NCAyLjQ4NCA4LjAyOHQ1LjY4OCA0LjUzNnptLTEzLjUzNi00Mi4yMjhxMCAyLjE5Ni0xLjA0NCA0Ljg5Ni0xLjA4IDIuNy0zLjM0OCA0Ljk2OC0xLjk0NCAxLjk0NC0zLjg4OCAyLjU5Mi0xLjMzMi4zOTYtMy43NDQuNjEyLjEwOC01LjM2NCAyLjgwOC05LjI1MiAyLjY2NC0zLjg1MiA5LTUuMzI4bC4wOS4zOTYuMDkuMzk2LjAxOC4zNi4wMTguMzZ6XCIsXCJXSU5ET1dTXCI6XCJNMjQuNTUyLTI4LjIyM3YyMy40MzZsLTI0LjU1Mi0zLjM4NHYtMjAuMDUyaDI0LjU1MnptMC0yNi43NDh2MjMuNzI0aC0yNC41NTJ2LTIwLjM0em0zNS4zNTIgMjYuNzQ4djI4LjI5NmwtMzIuNjUyLTQuNXYtMjMuNzk2aDMyLjY1MnptMC0zMS42MDh2MjguNTg0aC0zMi42NTJ2LTI0LjA4NHpcIixcIkFORFJPSURcIjpcIk0xNy43NDgtNDcuMDUxcS41NzYgMCAuOTktLjQxNHQuNDE0LS45OS0uNDE0LS45OS0uOTktLjQxNC0uOTcyLjQxNC0uMzk2Ljk5LjM5Ni45OS45NzIuNDE0em0xNS4xOTIgMHEuNTc2IDAgLjk3Mi0uNDE0dC4zOTYtLjk5LS4zOTYtLjk5LS45NzItLjQxNC0uOTkuNDE0LS40MTQuOTkuNDE0Ljk5Ljk5LjQxNHptLTI5LjIzMiA2LjYyNHExLjUxMiAwIDIuNTkyIDEuMDh0MS4wOCAyLjU5MnYxNS40OHEwIDEuNTQ4LTEuMDYyIDIuNjI4dC0yLjYxIDEuMDgtMi42MjgtMS4wOC0xLjA4LTIuNjI4di0xNS40OHEwLTEuNTEyIDEuMDgtMi41OTJ0Mi42MjgtMS4wOHptMzguMTYuNjg0djIzLjk3NnEwIDEuNjU2LTEuMTUyIDIuODA4dC0yLjc3MiAxLjE1MmgtMi43djguMTcycTAgMS41NDgtMS4wOCAyLjYyOHQtMi42MjggMS4wOC0yLjYyOC0xLjA4LTEuMDgtMi42Mjh2LTguMTcyaC00Ljk2OHY4LjE3MnEwIDEuNTQ4LTEuMDggMi42Mjh0LTIuNjI4IDEuMDhxLTEuNTEyIDAtMi41OTItMS4wOHQtMS4wOC0yLjYyOGwtLjAzNi04LjE3MmgtMi42NjRxLTEuNjU2IDAtMi44MDgtMS4xNTJ0LTEuMTUyLTIuODA4di0yMy45NzZoMzMuMDQ4em0tOC4zNTItMTQuNThxMy44NTIgMS45OCA2LjE1NiA1LjUyNnQyLjMwNCA3Ljc1OGgtMzMuM3EwLTQuMjEyIDIuMzA0LTcuNzU4dDYuMTkyLTUuNTI2bC0yLjU1Ni00LjcxNnEtLjI1Mi0uNDY4LjE4LS43Mi40NjgtLjIxNi43Mi4yMTZsMi41OTIgNC43NTJxMy40Mi0xLjUxMiA3LjIzNi0xLjUxMnQ3LjIzNiAxLjUxMmwyLjU5Mi00Ljc1MnEuMjUyLS40MzIuNzItLjIxNi40MzIuMjUyLjE4Ljcyem0xNy4xNzIgMTcuNTY4djE1LjQ4cTAgMS41NDgtMS4wOCAyLjYyOHQtMi42MjggMS4wOHEtMS41MTIgMC0yLjU5Mi0xLjA4dC0xLjA4LTIuNjI4di0xNS40OHEwLTEuNTQ4IDEuMDgtMi42MXQyLjU5Mi0xLjA2MnExLjU0OCAwIDIuNjI4IDEuMDYydDEuMDggMi42MXpcIixcIkxJTlVYXCI6XCJNMjMuODY4LTQ5LjY0M3EtLjM5Ni4wMzYtLjU1OC4zNzh0LS4zMDYuMzQycS0uMTguMDM2LS4xOC0uMTggMC0uNDMyLjY4NC0uNTRoLjM2em0zLjEzMi41MDRxLS4xNDQuMDM2LS40MTQtLjIzNHQtLjYzLS4xNjJxLjg2NC0uMzk2IDEuMTUyLjA3Mi4xMDguMjE2LS4xMDguMzI0em0tMTIuNjM2IDE1LjM3MnEtLjE0NC0uMDM2LS4yMTYuMTA4dC0uMTYyLjQ1LS4xOTguNDg2LS4zNi40NjhxLS4yNTIuMzYtLjAzNi40MzIuMTQ0LjAzNi40NS0uMjUydC40NS0uNjQ4bC4wNzItLjI1Mi4wNzItLjIxNi4wNTQtLjE2Mi4wMTgtLjE0NHYtLjEwOGwtLjAzNi0uMDktLjEwOC0uMDcyem0zMC43OCAxMi45MjRxMC0uNjQ4LTEuOTgtMS41MTIuMTQ0LS41NC4yNy0uOTl0LjE4LS45MzYuMTA4LS43NzQuMDE4LS44MS0uMDM2LS43MDItLjEyNi0uNzkyLS4xNDQtLjczOC0uMTgtLjktLjE5OC0uOTU0cS0uMzYtMS43MjgtMS42OTItMy43MDh0LTIuNTkyLTIuN3EuODY0LjcyIDIuMDUyIDIuOTg4IDMuMTMyIDUuODMyIDEuOTQ0IDEwLjAwOC0uMzk2IDEuNDQtMS44IDEuNTEyLTEuMTE2LjE0NC0xLjM4Ni0uNjY2dC0uMjg4LTMuMDA2LS40MTQtMy44NTJxLS4zMjQtMS40MDQtLjcwMi0yLjQ4NHQtLjcwMi0xLjYzOC0uNTU4LS44ODItLjQ2OC0uNTQtLjI3LS4yNTJxLS41MDQtMi4yMzItMS4xMTYtMy43MDh0LTEuMDYyLTIuMDE2LS44NDYtMS4xODgtLjU0LTEuNDRxLS4xNDQtLjc1Ni4yMTYtMS45MjZ0LjE2Mi0xLjc4Mi0xLjYwMi0uOXEtLjU0LS4xMDgtMS42MDItLjY0OHQtMS4yNzgtLjU3NnEtLjI4OC0uMDM2LS4zOTYtLjkzNnQuMjg4LTEuODM2IDEuMjk2LS45NzJxMS4zMzItLjEwOCAxLjgzNiAxLjA4dC4xNDQgMi4wODhxLS4zOTYuNjg0LS4wNzIuOTU0dDEuMDguMDE4cS40NjgtLjE0NC40NjgtMS4yOTZ2LTEuMzMycS0uMTgtMS4wOC0uNDg2LTEuOHQtLjc1Ni0xLjA5OC0uODQ2LS41NC0uOTcyLS4yN3EtMy44NTIuMjg4LTMuMjA0IDQuODI0IDAgLjU0LS4wMzYuNTQtLjMyNC0uMzI0LTEuMDYyLS4zNzh0LTEuMTg4LjAxOC0uNTU4LS4xOHEuMDM2LTIuMDUyLS41NzYtMy4yNHQtMS42Mi0xLjIyNHEtLjk3Mi0uMDM2LTEuNDk0Ljk5dC0uNTk0IDIuMTQycS0uMDM2LjU0LjEyNiAxLjMzMnQuNDY4IDEuMzUuNTU4LjQ4NnEuMzYtLjEwOC41NzYtLjUwNC4xNDQtLjMyNC0uMjUyLS4yODgtLjI1MiAwLS41NTgtLjUyMnQtLjM0Mi0xLjIwNnEtLjAzNi0uNzkyLjMyNC0xLjMzMnQxLjIyNC0uNTA0cS42MTIgMCAuOTcyLjc1NnQuMzQyIDEuNDA0LS4wNTQuNzkycS0uNzkyLjU0LTEuMTE2IDEuMDQ0LS4yODguNDMyLS45OS44NDZ0LS43MzguNDVxLS40NjguNTA0LS41NTguOTcydC4yNy42NDhxLjUwNC4yODguOS43MDJ0LjU3Ni42ODQuNjY2LjQ2OCAxLjI3OC4yMzRxMS42OTIuMDcyIDMuNjcyLS41NC4wNzItLjAzNi44MjgtLjI1MnQxLjI0Mi0uMzc4IDEuMDYyLS40NjguNzU2LS42M3EuMzI0LS41MDQuNzItLjI4OC4xOC4xMDguMjM0LjMwNnQtLjEwOC40MzItLjU5NC4zNDJxLS43Mi4yMTYtMi4wMzQuNzc0dC0xLjYzOC43MDJxLTEuNTg0LjY4NC0yLjUyLjgyOC0uOS4xOC0yLjg0NC0uMDcyLS4zNi0uMDcyLS4zMjQuMDcydC42MTIuNjg0cS45LjgyOCAyLjQxMi43OTIuNjEyLS4wMzYgMS4yOTYtLjI1MnQxLjI5Ni0uNTA0IDEuMjA2LS42MyAxLjA4LS42MTIuODgyLS40MzIuNjMtLjA5LjMwNi4zOTZxMCAuMDcyLS4wMzYuMTYydC0uMTQ0LjE4LS4yMTYuMTYyLS4zMDYuMTgtLjMyNC4xNjItLjM2LjE4LS4zNDIuMTYycS0xLjAwOC41MDQtMi40MyAxLjU4NHQtMi4zOTQgMS41NDgtMS43NjQuMDM2cS0uNzU2LS4zOTYtMi4yNjgtMi42MjgtLjc5Mi0xLjExNi0uOS0uNzkyLS4wMzYuMTA4LS4wMzYuMzYgMCAuOS0uNTQgMi4wMzR0LTEuMDYyIDEuOTk4LS43NTYgMi4wODguNDE0IDIuMjY4cS0uODI4LjIxNi0yLjI1IDMuMjR0LTEuNzEgNS4wNzZxLS4wNzIuNjQ4LS4wNTQgMi40ODR0LS4xOTggMi4xMjRxLS4yODguODY0LTEuMDQ0LjEwOC0xLjE1Mi0xLjExNi0xLjI5Ni0zLjM4NC0uMDcyLTEuMDA4LjE0NC0yLjAxNi4xNDQtLjY4NC0uMDM2LS42NDhsLS4xNDQuMThxLTEuMjk2IDIuMzQuMzYgNS45NzYuMTguNDMyLjkgMS4wMDh0Ljg2NC43MnEuNzIuODI4IDMuNzQ0IDMuMjU4dDMuMzQ4IDIuNzU0cS41NzYuNTQuNjMgMS4zNjh0LS41MDQgMS41NDgtMS42MzguODI4cS4yODguNTQgMS4wNDQgMS42MDJ0MS4wMDggMS45NDQuMjUyIDIuNTM4cTEuNjU2LS44NjQuMjUyLTMuMzEyLS4xNDQtLjI4OC0uMzc4LS41NzZ0LS4zNDItLjQzMi0uMDcyLS4yMTZxLjEwOC0uMTguNDY4LS4zNDJ0LjcyLjA5cTEuNjU2IDEuODcyIDUuOTc2IDEuMjk2IDQuNzg4LS41NCA2LjM3Mi0zLjEzMi44MjgtMS4zNjggMS4yMjQtMS4wOC40MzIuMjE2LjM2IDEuODcyLS4wMzYuOS0uODI4IDMuMzEyLS4zMjQuODI4LS4yMTYgMS4zNXQuODY0LjU1OHEuMTA4LS42ODQuNTIyLTIuNzcydC40ODYtMy4yNHEuMDcyLS43NTYtLjIzNC0yLjY0NnQtLjI3LTMuNDkyLjgyOC0yLjUzOHEuNTQtLjY0OCAxLjgzNi0uNjQ4LjAzNi0xLjMzMiAxLjI0Mi0xLjkwOHQyLjYxLS4zNzggMi4xNi44MXptLTIyLjYwOC0yOS43NzJxLjEwOC0uNjEyLS4wOS0xLjA4dC0uNDE0LS41NHEtLjMyNC0uMDcyLS4zMjQuMjUyLjA3Mi4xOC4xOC4yMTYuMzYgMCAuMjUyLjU0LS4xMDguNzIuMjg4LjcyLjEwOCAwIC4xMDgtLjEwOHptMTUuMDg0IDcuMDkycS0uMDcyLS4yODgtLjIzNC0uNDE0dC0uNDY4LS4xOC0uNTIyLS4xOThxLS4xOC0uMTA4LS4zNDItLjI4OHQtLjI1Mi0uMjg4LS4xOTgtLjIzNC0uMTQ0LS4xNDQtLjE0NC4wNTRxLS41MDQuNTc2LjI1MiAxLjU2NnQxLjQwNCAxLjEzNHEuMzI0LjAzNi41MjItLjI4OHQuMTI2LS43MnptLTYuNDA4LTcuNjY4cTAtLjM5Ni0uMTgtLjcwMnQtLjM5Ni0uNDUtLjMyNC0uMTA4cS0uNTA0LjAzNi0uMjUyLjI1MmwuMTQ0LjA3MnEuNTA0LjE0NC42NDggMS4xMTYgMCAuMTA4LjI4OC0uMDcyem0xLjk0NC04LjM4OHEwLS4wNzItLjA5LS4xOHQtLjMyNC0uMjUyLS4zNDItLjIxNnEtLjU0LS41NC0uODY0LS41NC0uMzI0LjAzNi0uNDE0LjI3dC0uMDM2LjQ2OC0uMDE4LjQ1cS0uMDM2LjE0NC0uMjE2LjM3OHQtLjIxNi4zMjQuMTA4LjMwNnEuMTQ0LjEwOC4yODggMHQuMzk2LS4zMjQuNTQtLjMyNHEuMDM2LS4wMzYuMzI0LS4wMzZ0LjU0LS4wNzIuMzI0LS4yNTJ6bTIwLjM0IDQ4LjI3NnEuNzIuNDMyIDEuMTE2Ljg4MnQuNDMyLjg2NC0uMDkuODEtLjU1OC43OTItLjg0Ni43MDItMS4wOC42NjYtMS4xMzQuNTk0LTEuMTUyLjU1OC0uOTcyLjQ2OHEtMS4zNjguNjg0LTMuMDc4IDIuMDE2dC0yLjcxOCAyLjMwNHEtLjYxMi41NzYtMi40NDguNzAydC0zLjIwNC0uNTIycS0uNjQ4LS4zMjQtMS4wNjItLjg0NnQtLjU5NC0uOTE4LS43OTItLjcwMi0xLjY5Mi0uMzQycS0xLjU4NC0uMDM2LTQuNjgtLjAzNi0uNjg0IDAtMi4wNTIuMDU0dC0yLjA4OC4wOXEtMS41ODQuMDM2LTIuODYyLjU0dC0xLjkyNiAxLjA4LTEuNTY2IDEuMDI2LTEuOTI2LjQxNHEtMS4wNDQtLjAzNi0zLjk5Ni0xLjExNnQtNS4yNTYtMS41NDhxLS42ODQtLjE0NC0xLjgzNi0uMzQydC0xLjgtLjMyNC0xLjQyMi0uMzQyLTEuMjA2LS41MjItLjYxMi0uNzAycS0uMzYtLjgyOC4yNTItMi4zOTR0LjY0OC0xLjk2MnEuMDM2LS41NzYtLjE0NC0xLjQ0dC0uMzYtMS41My0uMTYyLTEuMzE0LjM3OC0uOTcycS41MDQtLjQzMiAyLjA1Mi0uNTA0dDIuMTYtLjQzMnExLjA4LS42NDggMS41MTItMS4yNnQuNDMyLTEuODM2cS43NTYgMi42MjgtMS4xNTIgMy44MTYtMS4xNTIuNzItMi45ODguNTQtMS4yMjQtLjEwOC0xLjU0OC4zNi0uNDY4LjU0LjE4IDIuMDUyLjA3Mi4yMTYuMjg4LjY0OHQuMzA2LjY0OC4xNjIuNjEyLjAzNi43OTJxMCAuNTQtLjYxMiAxLjc2NHQtLjUwNCAxLjcyOHEuMTA4LjYxMiAxLjMzMi45MzYuNzIuMjE2IDMuMDQyLjY2NnQzLjU4Mi43MzhxLjg2NC4yMTYgMi42NjQuNzkydDIuOTcuODI4IDEuOTk4LjE0NHExLjU0OC0uMjE2IDIuMzIyLTEuMDA4dC44MjgtMS43MjgtLjI3LTIuMTA2LS42ODQtMS44NzItLjcyLTEuMzE0cS00LjM1Ni02Ljg0LTYuMDg0LTguNzEyLTIuNDQ4LTIuNjY0LTQuMDY4LTEuNDQtLjM5Ni4zMjQtLjU0LS41NC0uMTA4LS41NzYtLjA3Mi0xLjM2OC4wMzYtMS4wNDQuMzYtMS44NzJ0Ljg2NC0xLjY5Mi43OTItMS41MTJxLjI4OC0uNzU2Ljk1NC0yLjU5MnQxLjA2Mi0yLjgwOCAxLjA4LTIuMTk2IDEuNDA0LTEuOTQ0cTMuOTYtNS4xNDggNC40NjQtNy4wMi0uNDMyLTQuMDMyLS41NzYtMTEuMTYtLjA3Mi0zLjI0Ljg2NC01LjQ1NHQzLjgxNi0zLjc2MnExLjQwNC0uNzU2IDMuNzQ0LS43NTYgMS45MDgtLjAzNiAzLjgxNi40ODZ0My4yMDQgMS40OTRxMi4wNTIgMS41MTIgMy4yOTQgNC4zNzR0MS4wNjIgNS4zMXEtLjE4IDMuNDIgMS4wOCA3LjcwNCAxLjIyNCA0LjA2OCA0Ljc4OCA3Ljg0OCAxLjk4IDIuMTI0IDMuNTgyIDUuODY4dDIuMTQyIDYuODc2cS4yODggMS43NjQuMTggMy4wNDJ0LS40MzIgMS45OTgtLjcyLjc5MnEtLjM2LjA3Mi0uODQ2LjY4NHQtLjk3MiAxLjI3OC0xLjQ1OCAxLjIwNi0yLjE5Ni41MDRxLS42NDgtLjAzNi0xLjEzNC0uMTh0LS44MS0uNDg2LS40ODYtLjU1OC0uNDE0LS43MzgtLjMyNC0uNzAycS0uNzkyLTEuMzMyLTEuNDc2LTEuMDh0LTEuMDA4IDEuNzY0LjI1MiAzLjQ5MnEuNzIgMi41Mi4wMzYgNy4wMi0uMzYgMi4zNC42NDggMy42MTh0Mi42MjggMS4xODggMy4wNi0xLjI3OHEyLjEyNC0xLjc2NCAzLjIyMi0yLjM5NHQzLjcyNi0xLjUzcTEuOTA4LS42NDggMi43NzItMS4zMTR0LjY2Ni0xLjI0Mi0uOS0xLjAyNi0xLjg1NC0uODQ2cS0xLjE4OC0uMzk2LTEuNzgyLTEuNzI4dC0uNTQtMi42MS41NTgtMS43MXEuMDM2IDEuMTE2LjI4OCAyLjAzNHQuNTIyIDEuNDU4LjczOCAxLjAyNi43NTYuNjg0Ljc3NC40NjguNTk0LjM0MnpcIixcIkRSSUJCQkxFXCI6XCJNMzYuODY0LTEwLjQzOXEtMS41MTItOC42NzYtNS4wNC0xNy45MjhoLS4wNzJsLS4wNzIuMDM2cS0uNTc2LjIxNi0xLjU0OC41OTR0LTMuNjM2IDEuNzY0LTQuOTMyIDIuOTUyLTQuNzE2IDQuMTIyLTMuNzA4IDUuMzI4bC0uNTQtLjM5NnE2LjYyNCA1LjQgMTUuMDQ4IDUuNCA0Ljc1MiAwIDkuMjE2LTEuODcyem0tNi42Ni0yMS44NTJxLS43NTYtMS43NjQtMS45MDgtMy45OTYtMTEuMTk2IDMuMzQ4LTI0LjIyOCAzLjM0OC0uMDM2LjI1Mi0uMDM2Ljc1NiAwIDQuNDY0IDEuNTg0IDguNTE0dDQuNDY0IDcuMjU0cTEuOC0zLjIwNCA0LjQ0Ni01Ljk5NHQ1LjEzLTQuNDgyIDQuNjk4LTIuOTE2IDMuNTgyLTEuNzI4bDEuMzMyLS40NjhxLjE0NC0uMDM2LjQ2OC0uMTI2dC40NjgtLjE2MnptLTMuODUyLTcuNjMycS00LjMyLTcuNjY4LTguNzg0LTEzLjYwOC00Ljk2OCAyLjM0LTguNDI0IDYuNjk2dC00LjYwOCA5Ljc5MnExMC44NzIgMCAyMS44MTYtMi44OHptMjQuNjI0IDExLjQ4NHEtNy41Ni0yLjE2LTE0LjcyNC0xLjA0NCAzLjEzMiA4LjYwNCA0LjYwOCAxNi44ODQgMy45OTYtMi43IDYuNjYtNi44MjJ0My40NTYtOS4wMTh6bS0yOC45OC0yNi42NzZsLS4wNzIuMDM2LjA3Mi0uMDM2em0yMS4yNCA1LjIycS02LjY2LTUuOTA0LTE1LjU4OC01LjkwNC0yLjczNiAwLTUuNTguNjg0IDQuNzE2IDYuMTIgOC44NTYgMTMuNzUyIDIuNDg0LS45MzYgNC42OC0yLjE3OHQzLjQ3NC0yLjIxNCAyLjM1OC0yLjA1MiAxLjM1LTEuNDU4em04LjAyOCAxNy40NnEtLjEwOC04LjM1Mi01LjM2NC0xNC43NmwtLjAzNi4wMzZxLS4zMjQuNDMyLS42ODQuODgydC0xLjU2NiAxLjYwMi0yLjU1NiAyLjE3OC0zLjYgMi4zNC00LjczNCAyLjMyMnEuOSAxLjkwOCAxLjU4NCAzLjQyLjA3Mi4yMTYuMjM0LjYzdC4yNy41OTRxMS4yOTYtLjE4IDIuNjgyLS4yNTJ0Mi42NDYtLjA3MiAyLjQ4NC4wNTQgMi4zMDQuMTQ0IDIuMDM0LjE5OCAxLjcyOC4yMzQgMS4zMTQuMjE2LjkuMTYyem00LjAzMi4yNTJxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiU0tZUEVcIjpcIk00Mi4yMjgtMjYuMTcxcTAtMS44LS43MDItMy4yOTR0LTEuNzQ2LTIuNDY2LTIuNjI4LTEuNzY0LTIuOTctMS4yMjQtMy4xNS0uODI4bC0zLjc0NC0uODY0cS0xLjA4LS4yNTItMS41ODQtLjM3OHQtMS4yNi0uNDE0LTEuMDgtLjU3Ni0uNTk0LS43NTYtLjI3LTEuMDhxMC0yLjc3MiA1LjE4NC0yLjc3MiAxLjU0OCAwIDIuNzcyLjQzMnQxLjk0NCAxLjAyNiAxLjM2OCAxLjIwNiAxLjQ0IDEuMDQ0IDEuNzI4LjQzMnExLjY5MiAwIDIuNzE4LTEuMTUydDEuMDI2LTIuNzcycTAtMS45OC0yLjAxNi0zLjU4MnQtNS4xMTItMi40My02LjU1Mi0uODI4cS0yLjQ0OCAwLTQuNzUyLjU1OHQtNC4zMDIgMS42OTItMy4yMDQgMy4xMzItMS4yMDYgNC42MjZxMCAyLjE5Ni42ODQgMy44MzR0Mi4wMTYgMi43MTggMi44OCAxLjc0NiAzLjcwOCAxLjE3bDUuMjU2IDEuMjk2cTMuMjQuNzkyIDQuMDMyIDEuMjk2IDEuMTUyLjcyIDEuMTUyIDIuMTYgMCAxLjQwNC0xLjQ0IDIuMzIydC0zLjc4LjkxOHEtMS44MzYgMC0zLjI5NC0uNTc2dC0yLjM0LTEuMzg2LTEuNjM4LTEuNjItMS42NTYtMS4zODYtMS45NDQtLjU3NnEtMS44IDAtMi43MTggMS4wOHQtLjkxOCAyLjdxMCAzLjMxMiA0LjM5MiA1LjY3dDEwLjQ3NiAyLjM1OHEyLjYyOCAwIDUuMDQtLjY2NnQ0LjQxLTEuOTI2IDMuMTg2LTMuMzY2IDEuMTg4LTQuNzM0em0xMy4wNjggNy44MTJxMCA1LjcyNC00LjA1IDkuNzc0dC05Ljc3NCA0LjA1cS00LjY4IDAtOC40MjQtMi44OC0yLjc3Mi41NzYtNS40LjU3Ni01LjE0OCAwLTkuODQ2LTEuOTk4dC04LjEtNS40LTUuNC04LjEtMS45OTgtOS44NDZxMC0yLjYyOC41NzYtNS40LTIuODgtMy43NDQtMi44OC04LjQyNCAwLTUuNzI0IDQuMDUtOS43NzR0OS43NzQtNC4wNXE0LjY4IDAgOC40MjQgMi44OCAyLjc3Mi0uNTc2IDUuNC0uNTc2IDUuMTQ4IDAgOS44NDYgMS45OTh0OC4xIDUuNCA1LjQgOC4xIDEuOTk4IDkuODQ2cTAgMi42MjgtLjU3NiA1LjQgMi44OCAzLjc0NCAyLjg4IDguNDI0elwiLFwiRk9VUlNRVUFSRVwiOlwiTTM2LTQ4LjgxNWwxLjMzMi02Ljk4NHEuMTgtLjgyOC0uMzI0LTEuNDR0LTEuMjYtLjYxMmgtMjUuNjMycS0uODI4IDAtMS4zODYuNjEydC0uNTU4IDEuMzMydjM5LjYzNnEwIC4yNTIuMjE2LjAzNmwxMC40NzYtMTIuNjcycS44MjgtLjkzNiAxLjM2OC0xLjIwNnQxLjcyOC0uMjdoOC42MDRxLjc5MiAwIDEuMzMyLS41MjJ0LjY0OC0xLjA2MnEuODY0LTQuNjggMS4zMzItNi44NzYuMTQ0LS43NTYtLjQxNC0xLjQ0dC0xLjMxNC0uNjg0aC0xMC41ODRxLTEuMDQ0IDAtMS43MjgtLjY4NHQtLjY4NC0xLjcyOHYtMS41MTJxMC0xLjA0NC42ODQtMS43MXQxLjcyOC0uNjY2aDEyLjQ1NnEuNjQ4IDAgMS4yNi0uNDg2dC43Mi0xLjA2MnptOC4xNzItNy45OTJxLS41NCAyLjYyOC0xLjkyNiA5LjU5NHQtMi41MDIgMTIuNi0xLjI2IDYuMjQ2cS0uMjE2Ljc5Mi0uMzI0IDEuMTd0LS41MDQgMS4xNy0uODgyIDEuMTg4LTEuMzg2Ljc1Ni0yLjA4OC4zNmgtOS43NTZxLS40NjggMC0uNzkyLjM2LS4yODguMzI0LTE1LjMzNiAxNy43ODQtLjc5Mi45LTIuMTA2IDEuMDI2dC0xLjc0Ni0uMTk4cS0xLjk4LS43OTItMS45OC0zLjUyOHYtNTAuNzZxMC0xLjk4IDEuMzY4LTMuNjl0NC4zMi0xLjcxaDMxLjk2OHEzLjQyIDAgNC41NzIgMS45MDh0LjM2IDUuNzI0em0wIDBsLTUuNjg4IDI4LjQ0cS4xNDQtLjYxMiAxLjI2LTYuMjQ2dDIuNTAyLTEyLjYgMS45MjYtOS41OTR6XCIsXCJUUkVMTE9cIjpcIk0yNS4zNDQtMTYuMDU1di0zNi44NjRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0xNy4yOHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYzNi44NjRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMTcuMjhxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTI0LjE5Mi0xMy44MjR2LTIzLjA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMTcuMjhxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2MjMuMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMTcuMjhxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTUuNzYtMjcuNjQ4djUwLjY4OHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNTAuNjg4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTUwLjY4OHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDUwLjY4OHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiRkVNQUxFXCI6XCJNNDYuMDgtMjYuNDIzcTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhxLTEuODM2IDAtMi44OC0xLjU0OGwtOC4xNzItMTIuMjc2aC0xLjYydjQuNzUybDguODkyIDE0Ljc5NnEuMzI0LjU0LjMyNCAxLjE4OCAwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNi45MTJ2OS43OTJxMCAxLjY1Ni0xLjE4OCAyLjg0NHQtMi44NDQgMS4xODhoLTUuNzZxLTEuNjU2IDAtMi44NDQtMS4xODh0LTEuMTg4LTIuODQ0di05Ljc5MmgtNi45MTJxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnEwLS42NDguMzI0LTEuMTg4bDguODkyLTE0Ljc5NnYtNC43NTJoLTEuNjJsLTguMTcyIDEyLjI3NnEtMS4wNDQgMS41NDgtMi44OCAxLjU0OC0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4cTAtMS4wNDQuNTc2LTEuOTA4bDkuMjE2LTEzLjgyNHEyLjYyOC0zLjg1MiA2LjMzNi0zLjg1MmgxMy44MjRxMy43MDggMCA2LjMzNiAzLjg1Mmw5LjIxNiAxMy44MjRxLjU3Ni44NjQuNTc2IDEuOTA4em0tMTQuOTc2LTI4LjhxMCAzLjM0OC0yLjM1OCA1LjcwNnQtNS43MDYgMi4zNTgtNS43MDYtMi4zNTgtMi4zNTgtNS43MDYgMi4zNTgtNS43MDYgNS43MDYtMi4zNTggNS43MDYgMi4zNTggMi4zNTggNS43MDZ6XCIsXCJNQUxFXCI6XCJNMzYuODY0LTM5LjA5NXYxNC45NzZxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOC0yLjQ0OC0xLjAwOC0xLjAwOC0yLjQ0OHYtMTIuNjcyaC0yLjMwNHYzMi44MzJxMCAxLjY1Ni0xLjE4OCAyLjg0NHQtMi44NDQgMS4xODgtMi44NDQtMS4xODgtMS4xODgtMi44NDR2LTE2LjcwNGgtMi4zMDR2MTYuNzA0cTAgMS42NTYtMS4xODggMi44NDR0LTIuODQ0IDEuMTg4LTIuODQ0LTEuMTg4LTEuMTg4LTIuODQ0di0zMi44MzJoLTIuMzA0djEyLjY3MnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4LTIuNDQ4LTEuMDA4LTEuMDA4LTIuNDQ4di0xNC45NzZxMC0yLjg4IDIuMDE2LTQuODk2dDQuODk2LTIuMDE2aDIzLjA0cTIuODggMCA0Ljg5NiAyLjAxNnQyLjAxNiA0Ljg5NnptLTEwLjM2OC0xNi4xMjhxMCAzLjM0OC0yLjM1OCA1LjcwNnQtNS43MDYgMi4zNTgtNS43MDYtMi4zNTgtMi4zNTgtNS43MDYgMi4zNTgtNS43MDYgNS43MDYtMi4zNTggNS43MDYgMi4zNTggMi4zNTggNS43MDZ6XCIsXCJHUkFUSVBBWVwiOlwiTTI3LjgyOC0xNy41NjdsMTIuNi0xNy4wMjhxLjU3Ni0uNzkyLjg4Mi0yLjEyNHQtLjIxNi0zLjA2LTIuMjE0LTIuODQ0cS0xLjQ0LS45MzYtMi45ODgtLjkxOHQtMi42NDYuNjMtMS45NjIgMS42MnEtMS4yOTYgMS40NC0zLjQ1NiAxLjQ0LTIuMTI0IDAtMy40Mi0xLjQ0LS44NjQtMS4wMDgtMS45NjItMS42MnQtMi42NDYtLjYzLTMuMDI0LjkxOHEtMS42NTYgMS4xMTYtMi4xNzggMi44NDR0LS4yMTYgMy4wNi44ODIgMi4xMjR6bTI3LjQ2OC0xNC42MTZxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiU1VOX09cIjpcIk01Mi45OTItMzIuMTgzcTAtNC4yMTItMS42MzgtOC4wNDZ0LTQuNDI4LTYuNjI0LTYuNjI0LTQuNDI4LTguMDQ2LTEuNjM4LTguMDQ2IDEuNjM4LTYuNjI0IDQuNDI4LTQuNDI4IDYuNjI0LTEuNjM4IDguMDQ2IDEuNjM4IDguMDQ2IDQuNDI4IDYuNjI0IDYuNjI0IDQuNDI4IDguMDQ2IDEuNjM4IDguMDQ2LTEuNjM4IDYuNjI0LTQuNDI4IDQuNDI4LTYuNjI0IDEuNjM4LTguMDQ2em05LjkzNiA5Ljk3MnEtLjE0NC41NC0uNzIuNzJsLTEwLjUxMiAzLjQ1NnYxMS4wMTZxMCAuNTc2LS40NjguOTM2LS41NC4zNi0xLjA0NC4xNDRsLTEwLjUxMi0zLjM4NC02LjQ4IDguOTI4cS0uMzYuNDY4LS45MzYuNDY4dC0uOTM2LS40NjhsLTYuNDgtOC45MjgtMTAuNTEyIDMuMzg0cS0uNTA0LjIxNi0xLjA0NC0uMTQ0LS40NjgtLjM2LS40NjgtLjkzNnYtMTEuMDE2bC0xMC41MTItMy40NTZxLS41NzYtLjE4LS43Mi0uNzItLjE4LS42MTIuMTQ0LTEuMDQ0bDYuNDgtOC45MjgtNi40OC04LjkyOHEtLjMyNC0uNDY4LS4xNDQtMS4wNDQuMTQ0LS41NC43Mi0uNzJsMTAuNTEyLTMuNDU2di0xMS4wMTZxMC0uNTc2LjQ2OC0uOTM2LjU0LS4zNiAxLjA0NC0uMTQ0bDEwLjUxMiAzLjM4NCA2LjQ4LTguOTI4cS4zMjQtLjQzMi45MzYtLjQzMnQuOTM2LjQzMmw2LjQ4IDguOTI4IDEwLjUxMi0zLjM4NHEuNTA0LS4yMTYgMS4wNDQuMTQ0LjQ2OC4zNi40NjguOTM2djExLjAxNmwxMC41MTIgMy40NTZxLjU3Ni4xOC43Mi43Mi4xOC41NzYtLjE0NCAxLjA0NGwtNi40OCA4LjkyOCA2LjQ4IDguOTI4cS4zMjQuNDMyLjE0NCAxLjA0NHpcIixcIk1PT05fT1wiOlwiTTQ1LjQzMi0xNy41MzFxLTEuOTQ0LjMyNC0zLjk2LjMyNC02LjU1MiAwLTEyLjEzMi0zLjI0dC04LjgyLTguODItMy4yNC0xMi4xMzJxMC02LjkxMiAzLjc0NC0xMi44NTItNy4yMzYgMi4xNi0xMS44MjYgOC4yNDR0LTQuNTkgMTMuODI0cTAgNC42OCAxLjgzNiA4Ljk0NnQ0LjkxNCA3LjM0NCA3LjM0NCA0LjkxNCA4Ljk0NiAxLjgzNnE1LjE4NCAwIDkuODQ2LTIuMjE0dDcuOTM4LTYuMTc0em03LjMwOC0zLjA2cS0zLjM4NCA3LjMwOC0xMC4yMDYgMTEuNjgydC0xNC44ODYgNC4zNzRxLTUuNjE2IDAtMTAuNzI4LTIuMTk2dC04LjgyLTUuOTA0LTUuOTA0LTguODItMi4xOTYtMTAuNzI4cTAtNS41MDggMi4wNy0xMC41M3Q1LjYxNi04LjY5NCA4LjQ3OC01LjkyMiAxMC40NC0yLjQ2NnExLjU4NC0uMDcyIDIuMTk2IDEuNDA0LjY0OCAxLjQ3Ni0uNTQgMi41OTItMy4wOTYgMi44MDgtNC43MzQgNi41MzR0LTEuNjM4IDcuODY2cTAgNS4zMjggMi42MjggOS44Mjh0Ny4xMjggNy4xMjggOS44MjggMi42MjhxNC4yNDggMCA4LjIwOC0xLjgzNiAxLjQ3Ni0uNjQ4IDIuNTkyLjQ2OC41MDQuNTA0LjYzIDEuMjI0dC0uMTYyIDEuMzY4elwiLFwiQVJDSElWRVwiOlwiTTM5LjE2OC0zNC40ODdxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC05LjIxNnEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjIuNjg0IDEuNjIgMS42Mi42ODRoOS4yMTZxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ6bTIwLjczNi02LjkxMnYzNC41NnEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNTAuNjg4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTM0LjU2cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNTAuNjg4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6bTIuMzA0LTE2LjEyOHY5LjIxNnEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNTUuMjk2cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTkuMjE2cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNTUuMjk2cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6XCIsXCJCVUdcIjpcIk01OC43NTItMjkuODc5cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC04LjA2NHEwIDYuMTU2LTIuNDEyIDEwLjQ0bDcuNDg4IDcuNTI0cS42ODQuNjg0LjY4NCAxLjYydC0uNjg0IDEuNjJxLS42NDguNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTcuMTI4LTcuMDkycS0uMTguMTgtLjU0LjQ2OHQtMS41MTIgMS4wMjYtMi4zNCAxLjMxNC0yLjk1MiAxLjA0NC0zLjQ5Mi40Njh2LTMyLjI1NmgtNC42MDh2MzIuMjU2cS0xLjgzNiAwLTMuNjU0LS40ODZ0LTMuMTMyLTEuMTg4LTIuMzc2LTEuNDA0LTEuNTY2LTEuMTdsLS41NC0uNTA0LTYuNTg4IDcuNDUycS0uNzIuNzU2LTEuNzI4Ljc1Ni0uODY0IDAtMS41NDgtLjU3Ni0uNjg0LS42NDgtLjczOC0xLjYwMnQuNTU4LTEuNjc0bDcuMjcyLTguMTcycS0yLjA4OC00LjEwNC0yLjA4OC05Ljg2NGgtOC4wNjRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODRoOC4wNjR2LTEwLjU4NGwtNi4yMjgtNi4yMjhxLS42ODQtLjY4NC0uNjg0LTEuNjJ0LjY4NC0xLjYyIDEuNjItLjY4NCAxLjYyLjY4NGw2LjIyOCA2LjIyOGgzMC4zODRsNi4yMjgtNi4yMjhxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NC42ODQgMS42Mi0uNjg0IDEuNjJsLTYuMjI4IDYuMjI4djEwLjU4NGg4LjA2NHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0tMTcuMjgtMjAuNzM2aC0yMy4wNHEwLTQuNzg4IDMuMzY2LTguMTU0dDguMTU0LTMuMzY2IDguMTU0IDMuMzY2IDMuMzY2IDguMTU0elwiLFwiVktcIjpcIk02OS4wMTItNDUuNzE5cS44MjggMi4zMDQtNS40IDEwLjU4NC0uODY0IDEuMTUyLTIuMzQgMy4wNi0yLjgwOCAzLjYtMy4yNCA0LjcxNi0uNjEyIDEuNDc2LjUwNCAyLjkxNi42MTIuNzU2IDIuOTE2IDIuOTUyaC4wMzZsLjAzNi4wMzYuMDM2LjAzNi4wNzIuMDcycTUuMDc2IDQuNzE2IDYuODc2IDcuOTU2LjEwOC4xOC4yMzQuNDV0LjI1Mi45NTQtLjAxOCAxLjIyNC0uOS45OS0yLjEyNC40NWwtOS4yMTYuMTQ0cS0uODY0LjE4LTIuMDE2LS4xOHQtMS44NzItLjc5MmwtLjcyLS40MzJxLTEuMDgtLjc1Ni0yLjUyLTIuMzA0dC0yLjQ2Ni0yLjc5LTIuMTk2LTIuMDg4LTIuMDM0LS41NThxLS4xMDguMDM2LS4yODguMTI2dC0uNjEyLjUyMi0uNzc0IDEuMDYyLS42MTIgMS44NzItLjIzNCAyLjc5cTAgLjU0LS4xMjYuOTl0LS4yNy42NjZsLS4xNDQuMThxLS42NDguNjg0LTEuOTA4Ljc5MmgtNC4xNHEtMi41NTYuMTQ0LTUuMjU2LS41OTR0LTQuNzM0LTEuOTA4LTMuNzA4LTIuMzc2LTIuNTM4LTIuMDdsLS45LS44NjRxLS4zNi0uMzYtLjk5LTEuMDh0LTIuNTc0LTMuMjc2LTMuODE2LTUuNDM2LTQuNDEtNy41OTYtNC42OTgtOS43OTJxLS4yMTYtLjU3Ni0uMjE2LS45NzJ0LjEwOC0uNTc2bC4xNDQtLjIxNnEuNTQtLjY4NCAyLjA1Mi0uNjg0bDkuODY0LS4wNzJxLjQzMi4wNzIuODI4LjIzNHQuNTc2LjMwNmwuMTguMTA4cS41NzYuMzk2Ljg2NCAxLjE1Mi43MiAxLjggMS42NTYgMy43MjZ0MS40NzYgMi45MzRsLjU3NiAxLjA0NHExLjA0NCAyLjE2IDIuMDE2IDMuNzQ0dDEuNzQ2IDIuNDY2IDEuNDk0IDEuMzg2IDEuMjI0LjUwNC45NzItLjE4cS4wNzItLjAzNi4xOC0uMTh0LjQzMi0uNzkyLjQ4Ni0xLjY5Mi4zNDItMi45MTYgMC00LjVxLS4wNzItMS40NC0uMzI0LTIuNjI4dC0uNTA0LTEuNjU2bC0uMjE2LS40MzJxLS45LTEuMjI0LTMuMDYtMS41NDgtLjQ2OC0uMDcyLjE4LS44NjQuNjEyLS42ODQgMS4zNjgtMS4wOCAxLjkwOC0uOTM2IDguNjA0LS44NjQgMi45NTIuMDM2IDQuODYuNDY4LjcyLjE4IDEuMjA2LjQ4NnQuNzM4Ljg2NC4zNzggMS4xNTIuMTI2IDEuNjM4LS4wMzYgMS45OC0uMDkgMi41MzgtLjA1NCAyLjk3cTAgLjM5Ni0uMDM2IDEuNTEydC0uMDE4IDEuNzI4LjEyNiAxLjQ1OC40MTQgMS40MDQuODEuODgycS4yODguMDcyLjYxMi4xNDR0LjkzNi0uMzk2IDEuMzY4LTEuMjQyIDEuODcyLTIuNDEyIDIuNDQ4LTMuODdxMi4xNi0zLjc0NCAzLjg1Mi04LjEuMTQ0LS4zNi4zNi0uNjN0LjM5Ni0uMzc4bC4xNDQtLjEwOC4xOC0uMDkuNDY4LS4xMDguNzItLjAxOCAxMC4zNjgtLjA3MnExLjQwNC0uMTggMi4zMDQuMDl0MS4xMTYuNTk0elwiLFwiV0VJQk9cIjpcIk0yNC4zLTE4LjIxNXEuNzU2LTEuMjI0LjM5Ni0yLjQ4NHQtMS42Mi0xLjhxLTEuMjI0LS41MDQtMi42MjgtLjAzNnQtMi4xNiAxLjY1NnEtLjc5MiAxLjIyNC0uNDY4IDIuNDY2dDEuNTQ4IDEuODE4IDIuNjgyLjA5IDIuMjUtMS43MXptMy4zODQtNC4zNTZxLjI4OC0uNDY4LjEyNi0uOTU0dC0uNjMtLjY2NnEtLjUwNC0uMTgtMS4wMjYuMDE4dC0uNzc0LjY2NnEtLjYxMiAxLjExNi40NjggMS42Mi41MDQuMTggMS4wNDQtLjAxOHQuNzkyLS42NjZ6bTYuMjY0IDMuODUycS0xLjYyIDMuNjcyLTUuNjg4IDUuNHQtOC4wNjQuNDMycS0zLjg1Mi0xLjIyNC01LjMxLTQuNTU0dC4yMzQtNi43NXExLjY5Mi0zLjM0OCA1LjQ1NC01LjAwNHQ3LjU3OC0uNjg0cTMuOTk2IDEuMDQ0IDUuNzA2IDQuMzAydC4wOSA2Ljg1OHptMTEuMjMyLTUuNzZxLS4zMjQtMy40NTYtMy4yMDQtNi4xMnQtNy41MDYtMy45MjQtOS44ODItLjc1NnEtOC4wMjguODI4LTEzLjMwMiA1LjA5NHQtNC43NyA5LjUyMnEuMzI0IDMuNDU2IDMuMjA0IDYuMTJ0Ny41MDYgMy45MjQgOS44ODIuNzU2cTguMDI4LS44MjggMTMuMzAyLTUuMDk0dDQuNzctOS41MjJ6bTExLjA4OC4xNDRxMCAyLjQ0OC0xLjMzMiA1LjAyMnQtMy45MjQgNC45MzItNi4wNjYgNC4yMy04LjEzNiAyLjk4OC05LjczOCAxLjExNi05LjktMS4yMDYtOC42NTgtMy4zNDgtNi4xNzQtNS40MzYtMi4zNC03LjE4MnEwLTQuMTQgMi41MDItOC44MnQ3LjExLTkuMjg4cTYuMDg0LTYuMDg0IDEyLjI5NC04LjQ5NnQ4Ljg3NC4yNTJxMi4zNCAyLjMwNC43MiA3LjUyNC0uMTQ0LjUwNC0uMDM2LjcydC4zNi4yNTIuNTIyLS4wMTguNDg2LS4xMjZsLjIxNi0uMDcycTUuMDA0LTIuMTI0IDguODU2LTIuMTI0dDUuNTA4IDIuMTk2cTEuNjIgMi4yNjggMCA2LjQwOC0uMDcyLjQ2OC0uMTYyLjcydC4xNjIuNDUuNDMyLjI3LjYxMi4yMTZxMi4wNTIuNjQ4IDMuNzA4IDEuNjkydDIuODggMi45MzQgMS4yMjQgNC4xOTR6bS0yLjY2NC0yMi40NjRxMS41MTIgMS42OTIgMS45NjIgMy45MDZ0LS4yMzQgNC4yM3EtLjI4OC44MjgtMS4wNjIgMS4yMjR0LTEuNjAyLjE0NHEtLjgyOC0uMjg4LTEuMjI0LTEuMDYydC0uMTQ0LTEuNjAycS43Mi0yLjI2OC0uODY0LTMuOTk2dC0zLjg1Mi0xLjI2cS0uODY0LjE4LTEuNjItLjI4OHQtLjktMS4zMzJxLS4xOC0uODY0LjI4OC0xLjYwMnQxLjMzMi0uOTE4cTIuMTYtLjQ2OCA0LjI4NC4xOTh0My42MzYgMi4zNTh6bTYuNTE2LTUuODY4cTMuMTMyIDMuNDU2IDQuMDUgOC4wMXQtLjQ4NiA4LjY5NHEtLjMyNC45NzItMS4yMjQgMS40NHQtMS44NzIuMTQ0LTEuNDQtMS4yMjQtLjE4LTEuODcycTEuMDA4LTIuOTUyLjM2LTYuMTkydC0yLjg4LTUuNjg4cS0yLjIzMi0yLjQ4NC01LjMyOC0zLjQzOHQtNi4yMjgtLjMwNnEtMS4wMDguMjE2LTEuODcyLS4zNDJ0LTEuMDgtMS41NjYuMzQyLTEuODU0IDEuNTY2LTEuMDYycTQuNDI4LS45MzYgOC43ODQuNDE0dDcuNDg4IDQuODQyelwiLFwiUkVOUkVOXCI6XCJNNDAuNzg4LTcuOTE5cS02LjE1NiAzLjM4NC0xMy4yNDggMy4zODQtNy4wNTYgMC0xMy4yMTItMy4zODQgNC45NjgtMy4xMzIgOC40NzgtNy41OTZ0NC43MzQtOS42NDhxMS4yNiA1LjE4NCA0Ljc3IDkuNjQ4dDguNDc4IDcuNTk2em0tMTcuODItNTEuNDA4djE3LjQ2cTAgOS4wNzItNC41NTQgMTYuNTQydC0xMS44OTggMTEuMDM0cS02LjUxNi03Ljc0LTYuNTE2LTE3LjgyIDAtNi43MzIgMy4wMDYtMTIuNTgydDguMjYyLTkuNzAyIDExLjctNC45MzJ6bTMyLjMyOCAyNy4yMTZxMCAxMC4wOC02LjUxNiAxNy44Mi03LjM0NC0zLjU2NC0xMS44OTgtMTEuMDM0dC00LjU1NC0xNi41NDJ2LTE3LjQ2cTYuNDQ0IDEuMDggMTEuNyA0LjkzMnQ4LjI2MiA5LjcwMiAzLjAwNiAxMi41ODJ6XCIsXCJQQUdFTElORVNcIjpcIk01MC40NzItMjQuNzMxcS0xLjE1MiAyLjg4LTIuNzM2IDQuOTY4dC0zLjI3NiAzLjE4Ni0zLjU2NCAxLjY3NC0zLjY1NC41MjItMy40NzQtLjMwNi0zLjExNC0uNzkyLTIuNTAyLS45OS0xLjY1Ni0uODFsLS42MTItLjM2cS00LjA2OCA4LjIwOC0xMC40MjIgMTIuOTQydC0xMy44NDIgNC43N3EtLjY4NCAwLTEuMTUyLS40Njh0LS40NjgtMS4xNTIuNDY4LTEuMTM0IDEuMTUyLS40NXE2LjIyOC0uMDM2IDExLjYxLTMuODd0OS4wNTQtMTAuNjAycS0xLjI5Ni41MDQtMi41OTIuODI4dC0yLjk4OC40NjgtMy4yNzYtLjA5LTMuMzQ4LTEuMDI2LTMuMzEyLTIuMTI0LTMuMDQyLTMuNi0yLjY4Mi01LjI1NnE0LjEwNC0xLjY5MiA3LjcwNC0yLjA1MnQ2LjAzLjI3IDQuNDgyIDIuMDM0IDMuMTg2IDIuNzcyIDIuMDM0IDIuOTUycTEuOTA4LTQuNzE2IDIuODQ0LTEwLjQ3Ni0uMjUyLjAzNi0uNjQ4LjA5dC0xLjY3NC4wOS0yLjUwMi0uMDE4LTIuOTM0LS4zNi0zLjE4Ni0uODI4LTMuMDI0LTEuNTMtMi43LTIuMzQtMS45NjItMy40MDItMS4wMjYtNC41OXEyLjUyLTEuMDA4IDQuODA2LTEuMzE0dDQuMDUuMDM2IDMuMzEyIDEuMDggMi42NDYgMS44IDIuMDE2IDIuMTk2IDEuNTEyIDIuMjY4Ljk5IDIuMDE2LjU3NiAxLjQyMmwuMTQ0LjU3NnEuNDMyLTQuMzkyLjQzMi03LjAyLS4yODgtLjIxNi0uNzc0LS41NzZ0LTEuNzY0LTEuNjAyLTIuMjg2LTIuNTc0LTEuOTQ0LTMuMzQ4LTEuMTg4LTQuMDUuNDMyLTQuNTcyIDIuNTItNC45ODZxMi42MjguOSA0LjU5IDIuMjE0dDMuMDQyIDIuNzU0IDEuNzI4IDMuMDYuNzM4IDMuMjA0LS4wMTggMy4wNzgtLjQ2OCAyLjc1NC0uNjg0IDIuMjMyLS42MTIgMS41MTJsLS4yNTIuNTRxLjAzNi4xOC4wMzYgMS44MTh0LS4wMzYgMi41NzRxLjEwOC0uMjUyLjM2LS42NjZ0MS4wOTgtMS41NDggMS44MTgtMi4wODggMi41NTYtMS45OTggMy4yOTQtMS42MDIgNC4wMzItLjUyMiA0Ljc3Ljg2NHEtLjA3MiAyLjgwOC0uNzc0IDUuMDk0dC0xLjggMy43NjItMi41MDIgMi41NzQtMi45MzQgMS42MzgtMy4wNDIuODY0LTIuODguMzQyLTIuNDMtLjAzNi0xLjY3NC0uMTYybC0uNjEyLS4xMDhxLS44MjggNS4yOTItMi42MjggMTAuMTg4LjIxNi0uMjUyLjY0OC0uNjY2dDEuNzgyLTEuNDc2IDIuNzktMS44OSAzLjU4Mi0xLjUxMiA0LjIzLS43MiA0LjY0NC44NDYgNC45MzIgMi43OXpcIixcIlNUQUNLX0VYQ0hBTkdFXCI6XCJNNDUuMzI0LTE5LjMzMXYyLjM3NnEwIDMuMDYtMi4wNyA1LjIwMnQtNC45ODYgMi4xNDJoLTIuMDUybC05LjM2IDkuNjg0di05LjY4NGgtMTkuMDQ0cS0yLjkxNiAwLTQuOTg2LTIuMTQydC0yLjA3LTUuMjAydi0yLjM3Nmg0NC41Njh6bTAtMTEuNzM2djkuMThoLTQ0LjU2OHYtOS4xOGg0NC41Njh6bTAtMTEuODA4djkuMThoLTQ0LjU2OHYtOS4xOGg0NC41Njh6bTAtNS4wNHYyLjQxMmgtNDQuNTY4di0yLjQxMnEwLTMuMDI0IDIuMDctNS4xNjZ0NC45ODYtMi4xNDJoMzAuNDU2cTIuOTE2IDAgNC45ODYgMi4xNDJ0Mi4wNyA1LjE2NnpcIixcIkFSUk9XX0NJUkNMRV9PX1JJR0hUXCI6XCJNNDEuNDcyLTMyLjE4M3EwIC41MDQtLjMyNC44MjhsLTExLjUyIDExLjUycS0uMzI0LjMyNC0uODI4LjMyNC0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMmgtMTIuNjcycS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi02LjkxMnEwLS40NjguMzQyLS44MXQuODEtLjM0MmgxMi42NzJ2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRxLjQzMiAwIC44NjQuMzZsMTEuNDg0IDExLjQ4NHEuMzI0LjMyNC4zMjQuODI4em01Ljc2IDBxMC01LjMyOC0yLjYyOC05LjgyOHQtNy4xMjgtNy4xMjgtOS44MjgtMi42MjgtOS44MjggMi42MjgtNy4xMjggNy4xMjgtMi42MjggOS44MjggMi42MjggOS44MjggNy4xMjggNy4xMjggOS44MjggMi42MjggOS44MjgtMi42MjggNy4xMjgtNy4xMjggMi42MjgtOS44Mjh6bTguMDY0IDBxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiQVJST1dfQ0lSQ0xFX09fTEVGVFwiOlwiTTQxLjQ3Mi0zNS42Mzl2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTEyLjY3MnY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0cS0uNDMyIDAtLjg2NC0uMzZsLTExLjQ4NC0xMS40ODRxLS4zMjQtLjMyNC0uMzI0LS44Mjh0LjMyNC0uODI4bDExLjUyLTExLjUycS4zMjQtLjMyNC44MjgtLjMyNC40NjggMCAuODEuMzQydC4zNDIuODF2Ni45MTJoMTIuNjcycS40NjggMCAuODEuMzQydC4zNDIuODF6bTUuNzYgMy40NTZxMC01LjMyOC0yLjYyOC05LjgyOHQtNy4xMjgtNy4xMjgtOS44MjgtMi42MjgtOS44MjggMi42MjgtNy4xMjggNy4xMjgtMi42MjggOS44MjggMi42MjggOS44MjggNy4xMjggNy4xMjggOS44MjggMi42MjggOS44MjgtMi42MjggNy4xMjgtNy4xMjggMi42MjgtOS44Mjh6bTguMDY0IDBxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiVE9HR0xFX0xFRlRcIjpcIk0zNi44NjQtNDMuNzAzdjIzLjA0cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0cS0uNzIgMC0xLjMzMi0uNDMybC0xNi4xMjgtMTEuNTJxLS45NzItLjY4NC0uOTcyLTEuODcydC45NzItMS44NzJsMTYuMTI4LTExLjUycS42MTItLjQzMiAxLjMzMi0uNDMyLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnptOS4yMTYgMjguOHYtMzQuNTZxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtMzQuNTZxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjM0LjU2cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgzNC41NnEuNDY4IDAgLjgxLS4zNDJ0LjM0Mi0uODF6bTkuMjE2LTM0LjU2djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkRPVF9DSVJDTEVfT1wiOlwiTTM2Ljg2NC0zMi4xODNxMCAzLjgxNi0yLjcgNi41MTZ0LTYuNTE2IDIuNy02LjUxNi0yLjctMi43LTYuNTE2IDIuNy02LjUxNiA2LjUxNi0yLjcgNi41MTYgMi43IDIuNyA2LjUxNnptLTkuMjE2LTE5LjU4NHEtNS4zMjggMC05LjgyOCAyLjYyOHQtNy4xMjggNy4xMjgtMi42MjggOS44MjggMi42MjggOS44MjggNy4xMjggNy4xMjggOS44MjggMi42MjggOS44MjgtMi42MjggNy4xMjgtNy4xMjggMi42MjgtOS44MjgtMi42MjgtOS44MjgtNy4xMjgtNy4xMjgtOS44MjgtMi42Mjh6bTI3LjY0OCAxOS41ODRxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiV0hFRUxDSEFJUlwiOlwiTTM2LjgyOC0yMS43MDdsMy42NzIgNy4zNDRxLTIuMDg4IDYuNDQ0LTcuNTYgMTAuNDR0LTEyLjIwNCAzLjk5NnEtNS42MTYgMC0xMC4zODYtMi43OXQtNy41Ni03LjU2LTIuNzktMTAuMzg2cTAtNi41MTYgMy43NjItMTEuODh0OS44ODItNy41OTZsLjYxMiA0LjcxNnEtNC4zOTIgMS45NDQtNy4wMiA1Ljk1OHQtMi42MjggOC44MDJxMCA2LjY2IDQuNzM0IDExLjM5NHQxMS4zOTQgNC43MzRxNC41MzYgMCA4LjM3LTIuMzR0NS45NC02LjMxOCAxLjc4Mi04LjUxNHptMTkuNzI4IDMuNmwyLjA4OCA0LjEwNC05LjIxNiA0LjYwOHEtLjQ2OC4yNTItMS4wNDQuMjUyLTEuNDQgMC0yLjA1Mi0xLjI2bC04LjYwNC0xNy4xNzJoLTE2Ljk5MnEtLjg2NCAwLTEuNTMtLjU5NHQtLjc3NC0xLjQ1OGwtMy40NTYtMjguMDQ0cS0uMDcyLS41NzYuMjE2LTEuNTEyLjUwNC0xLjgzNiAyLjA1Mi0yLjk3dDMuNDkyLTEuMTM0cTIuMzc2IDAgNC4wNjggMS42OTJ0MS42OTIgNC4wNjhxMCAyLjQ4NC0xLjg3MiA0LjIzdC00LjMyIDEuNDk0bDEuMzMyIDEwLjQwNGgxNS4yMjh2NC42MDhoLTE0LjY1MmwuNTc2IDQuNjA4aDE2LjM4cTEuNDQgMCAyLjA1MiAxLjI2bDguMjA4IDE2LjM4elwiLFwiVklNRU9fU1FVQVJFXCI6XCJNNDYuNTEyLTQxLjQ3MXEuMzYtNy43NzYtNS43OTYtNy45OTItOC4zMTYtLjI4OC0xMS4yMzIgOS4zOTYgMS41ODQtLjY4NCAyLjk1Mi0uNjg0IDMuMDYgMCAyLjY2NCAzLjQ1Ni0uMTQ0IDIuMDUyLTIuNjY0IDYuMDEydC0zLjc4IDMuOTZxLTEuNTQ4IDAtMi45NTItNi4wODQtLjQ2OC0xLjk0NC0xLjYyLTkuMTgtMS4wOC02LjgwNC01Ljc2LTYuMzcyLTIuMTI0LjI1Mi01LjkwNCAzLjZsLTIuOTE2IDIuNTkyLTIuOTE2IDIuNTkyIDEuODcyIDIuNDEycTIuNzM2LTEuODcyIDMuMTMyLTEuODcyIDIuMDUyIDAgMy44NTIgNi40NDQuNTQgMS45OCAxLjYyIDUuOTIydDEuNjIgNS45MjJxMi40NDggNi40NDQgNS45MDQgNi40NDQgNS42NTIgMCAxMy43ODgtMTAuNTg0IDcuOTItMTAuMTg4IDguMTM2LTE1Ljk4NHptOC43ODQtNy45OTJ2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiVFVSS0lTSF9MSVJBXCI6XCJNNDEuNDcyLTM0LjQ4N3EwIDYuODc2LTMuNDAyIDEyLjcwOHQtOS4yMzQgOS4yMzQtMTIuNzA4IDMuNDAyaC01Ljc2cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIxLjk5NmwtNy43NCAyLjM3NnEtLjEwOC4wMzYtLjMyNC4wMzYtLjM2IDAtLjY4NC0uMjE2LS40NjgtLjM2LS40NjgtLjkzNnYtNC42MDhxMC0uODI4LjgyOC0xLjExNmw4LjM4OC0yLjU1NnYtMy4zNDhsLTcuNzQgMi4zNzZxLS4xMDguMDM2LS4zMjQuMDM2LS4zNiAwLS42ODQtLjIxNi0uNDY4LS4zNi0uNDY4LS45MzZ2LTQuNjA4cTAtLjgyOC44MjgtMS4xMTZsOC4zODgtMi41NTZ2LTlxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg1Ljc2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY2LjUxNmwxMy41LTQuMTc2cS41NC0uMTggMS4wMDguMTh0LjQ2OC45MzZ2NC42MDhxMCAuODI4LS44MjggMS4xMTZsLTE0LjE0OCA0LjM1NnYzLjM0OGwxMy41LTQuMTc2cS41NC0uMTggMS4wMDguMTh0LjQ2OC45MzZ2NC42MDhxMCAuODI4LS44MjggMS4xMTZsLTE0LjE0OCA0LjM1NnYxNy41MzJxNi43NjgtLjQ2OCAxMS40NDgtNS40MzZ0NC42OC0xMS44MDhxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg1Ljc2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIlBMVVNfU1FVQVJFX09cIjpcIk00MS40NzItMzUuNjM5djIuMzA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTEyLjY3MnYxMi42NzJxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMTIuNjcyaC0xMi42NzJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgxMi42NzJ2LTEyLjY3MnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIuMzA0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYxMi42NzJoMTIuNjcycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptNC42MDggMTYuMTI4di0yOS45NTJxMC0yLjM3Ni0xLjY5Mi00LjA2OHQtNC4wNjgtMS42OTJoLTI5Ljk1MnEtMi4zNzYgMC00LjA2OCAxLjY5MnQtMS42OTIgNC4wNjh2MjkuOTUycTAgMi4zNzYgMS42OTIgNC4wNjh0NC4wNjggMS42OTJoMjkuOTUycTIuMzc2IDAgNC4wNjgtMS42OTJ0MS42OTItNC4wNjh6bTQuNjA4LTI5Ljk1MnYyOS45NTJxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTI5Ljk1MnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTI5Ljk1MnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDI5Ljk1MnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiU1BBQ0VfU0hVVFRMRVwiOlwiTTIyLjMyLTI0LjExOXEtMy45NiAyLjMwNC05LjY0OCAyLjMwNGgtNC42MDh2LTIuMzA0aC0yLjMwNHEtLjQ2OCAwLS44MS0uODQ2dC0uMzQyLTIuMDM0cTAtLjg2NC4yNTItMS43NjQtMi4wODgtLjA3Mi0zLjQ3NC0uMzc4dC0xLjM4Ni0uNzM4IDEuMzg2LS43MzggMy40NzQtLjM3OHEtLjI1Mi0uOS0uMjUyLTEuNzY0IDAtMS4xODguMzQyLTIuMDM0dC44MS0uODQ2aDIuMzA0di0yLjMwNGg0LjYwOHE1LjY4OCAwIDkuNjQ4IDIuMzA0aDQwLjA2OHExLjUxMi4yNTIgMy44MzQuNjQ4dDIuODk4LjUwNHEzLjIwNC41NCA1LjQgMS40NTh0My4wMDYgMS43MS44MSAxLjQ0LS44MSAxLjQ0LTMuMDA2IDEuNzEtNS40IDEuNDU4cS0uNTc2LjEwOC0yLjg5OC41MDR0LTMuODM0LjY0OGgtNDAuMDY4em00MC4yODQtOS4wNzJxMS45MDggMS4yOTYgMS45MDggMy4zMTJ0LTEuOTA4IDMuMzEybDIuOTE2IDEuMDhxMi40NDgtMS43MjggMi40NDgtNC4zOTJ0LTIuNDQ4LTQuMzkyem0tNDAuMTA0IDkuNjQ4aDM2LjU0cS03LjgxMiAxLjM2OC0xNi40MTYgMi44OC0yLjA1MiAwLTQuMDY4Ljg2NHQtMi45ODggMS43MjhsLTEuMDA4Ljg2NC0xMC4zNjggMTAuMzY4cS0uOTM2LjkzNi0yLjUzOCAxLjYydC0zLjIyMi42ODRoLTMuNDU2bC0zLjM0OC0xNi43MDRoMS4wNDRxNS42NTIgMCA5LjgyOC0yLjMwNHptLTkuODI4LTE0Ljk3NmgtMS4wNDRsMy4zNDgtMTYuNzA0aDMuNDU2cTEuNjU2IDAgMy4yNC42ODR0Mi41MiAxLjYybDEwLjM2OCAxMC4zNjhxLjE0NC4xNDQuMzk2LjM3OHQxLjA5OC44MjggMS43NDYgMS4wNDQgMi4yMTQuODI4IDIuNjEuMzc4bDE2LjQxNiAyLjg4aC0zNi41NHEtNC4xNzYtMi4zMDQtOS44MjgtMi4zMDR6XCIsXCJTTEFDS1wiOlwiTTU0LjY4NC0zNi41MDNxMi4yMzIgMCAzLjcyNiAxLjQ1OHQxLjQ5NCAzLjY1NHEwIDMuNDkyLTMuMzQ4IDQuNjhsLTYuMTkyIDIuMTI0IDIuMDE2IDYuMDEycS4yNTIuNzU2LjI1MiAxLjY5MiAwIDIuMTI0LTEuNTEyIDMuNjcydC0zLjYzNiAxLjU0OHEtMS42OTIgMC0zLjA3OC0uOTcydC0xLjkyNi0yLjU5MmwtMS45OC01Ljk0LTExLjE2IDMuODE2IDEuOTggNS45MDRxLjI4OC44NjQuMjg4IDEuNjkyIDAgMi4xMjQtMS41MTIgMy42NzJ0LTMuNjcyIDEuNTQ4cS0xLjY5MiAwLTMuMDYtLjk3MnQtMS45MDgtMi41OTJsLTEuOTgtNS44NjgtNS41MDggMS45MDhxLTEuMDQ0LjMyNC0xLjguMzI0LTIuMTk2IDAtMy42NTQtMS40NHQtMS40NTgtMy42MzZxMC0xLjY5Mi45OS0zLjA2dDIuNTc0LTEuOTA4bDUuNjE2LTEuOTA4LTMuNzgtMTEuMjY4LTUuNjE2IDEuOTQ0cS0uOTM2LjI4OC0xLjcyOC4yODgtMi4xNiAwLTMuNjM2LTEuNDU4dC0xLjQ3Ni0zLjYxOHEwLTEuNjkyLjk5LTMuMDZ0Mi41NzQtMS45MDhsNS42NTItMS45MDgtMS45MDgtNS43MjRxLS4yODgtLjg2NC0uMjg4LTEuNjkyIDAtMi4xNiAxLjUxMi0zLjY5dDMuNjcyLTEuNTNxMS42OTIgMCAzLjA2Ljk3MnQxLjkwOCAyLjU5MmwxLjk0NCA1Ljc2IDExLjE2LTMuNzgtMS45NDQtNS43NnEtLjI4OC0uODY0LS4yODgtMS42OTIgMC0yLjEyNCAxLjUzLTMuNjcydDMuNjU0LTEuNTQ4cTEuNjkyIDAgMy4wNzguOTl0MS45MjYgMi41NzRsMS45MDggNS43OTYgNS44MzItMS45OHEuNzU2LS4yMTYgMS41NDgtLjIxNiAyLjE2IDAgMy42OSAxLjQyMnQxLjUzIDMuNTQ2cTAgMS42Mi0xLjA4IDIuOTM0dC0yLjY2NCAxLjg1NGwtNS42NTIgMS45NDQgMy43OCAxMS4zNzYgNS45MDQtMi4wMTZxLjg2NC0uMjg4IDEuNjU2LS4yODh6bS0yOC41ODQgOS40MzJsMTEuMTYtMy43OC0zLjc4LTExLjM0LTExLjE2IDMuODUyelwiLFwiRU5WRUxPUEVfU1FVQVJFXCI6XCJNNDQuOTI4LTU5LjgzMXE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZ6bTEuMTUyIDM4LjAxNnYtMTUuNjk2cS0xLjExNiAxLjI2LTIuMzA0IDEuOTgtMS4yMjQuNzkyLTQuNzcgMy4wNnQtNS40NTQgMy41NjRxLTMuNTI4IDIuNDg0LTUuOTA0IDIuNDg0dC01LjkwNC0yLjQ4NHEtMS42NTYtMS4xNTItNS4wOTQtMy4zM3QtNS4xMy0zLjMzcS0uNDMyLS4yODgtMS4xODgtLjk3MnQtMS4xMTYtLjk3MnYxNS42OTZxMCAxLjQ0IDEuMDA4IDIuNDQ4dDIuNDQ4IDEuMDA4aDI5Ljk1MnExLjQ0IDAgMi40NDgtMS4wMDh0MS4wMDgtMi40NDh6bTAtMjAuNjI4cTAtMS40NzYtLjk5LTIuNTJ0LTIuNDY2LTEuMDQ0aC0yOS45NTJxLTEuNDQgMC0yLjQ0OCAxLjAwOHQtMS4wMDggMi40NDhxMCAxLjMzMiAxLjA5OCAyLjc1NHQyLjQzIDIuMzIycTEuNjkyIDEuMTUyIDQuOTUgMy4yMDR0NC42NjIgMi45ODhsLjYxMi40MTQuNzU2LjUwNC43NTYuNDY4Ljg0Ni40NjguNzc0LjM0Mi44MS4yNy43MzguMDkuNzM4LS4wOS44MS0uMjcuNzc0LS4zNDIuODQ2LS40NjguNzU2LS40NjguNzU2LS41MDQuNjEyLS40MTQgOS42MTItNi4yNjRxMS4yNi0uODI4IDIuMzk0LTIuMjV0MS4xMzQtMi42NDZ6XCIsXCJXT1JEUFJFU1NcIjpcIk00LjU3Mi0zMi4xODNxMC01Ljg2OCAyLjQxMi0xMS4yNjhsMTMuMjEyIDM2LjE4cS03LjA1Ni0zLjQyLTExLjM0LTEwLjExNnQtNC4yODQtMTQuNzk2em00Ni4zNjgtMS40MDRxMCAuNjg0LS4wOSAxLjM4NnQtLjM2IDEuNzgyLS40MTQgMS41ODQtLjYzIDIuMTI0LS42MyAyLjA4OGwtMi43MzYgOS4yMTYtMTAuMDA4LTI5LjczNnExLjY1Ni0uMTA4IDMuMTY4LS4yODguNjg0LS4wNzIuOTM2LS42NjZ0LS4wOS0xLjExNi0xLjAyNi0uNDg2bC03LjM4LjM2cS0yLjctLjAzNi03LjI3Mi0uMzYtLjQzMi0uMDM2LS43MzguMTh0LS40MTQuNTQtLjA1NC42NjYuMzI0LjU5NC43MDIuMjg4bDIuODguMjg4IDQuMzIgMTEuODA4LTYuMDQ4IDE4LjE0NC0xMC4wOC0yOS45NTJxMS42NTYtLjEwOCAzLjE2OC0uMjg4LjY4NC0uMDcyLjkzNi0uNjY2dC0uMDktMS4xMTYtMS4wMjYtLjQ4NmwtNy4zOC4zNi0uODI4LS4wMTgtLjkzNi0uMDE4cTMuNzgtNS43NiA5Ljg4Mi05LjEyNnQxMy4yMy0zLjM2NnE1LjI5MiAwIDEwLjA5OCAxLjkwOHQ4LjU4NiA1LjM2NGgtLjM2cS0xLjk4IDAtMy4zMTIgMS40NTh0LTEuMzMyIDMuNDM4cTAgLjQzMi4wNzIuODY0dC4xNDQuNzc0LjI4OC44MjguMzI0Ljc1Ni40MzIuODEuNDUuNzU2LjUyMi44NjQuNTA0LjgyOHEyLjI2OCAzLjg1MiAyLjI2OCA3LjYzMnptLTE4LjIxNiAzLjgxNmw4LjUzMiAyMy4yOTJxLjAzNi4yMTYuMTguMzk2LTQuNTM2IDEuNTg0LTkuMTggMS41ODQtNC4wMzIgMC03LjgxMi0xLjE1MnptMjMuNzk2LTE1LjY5NnEzLjQyIDYuMjY0IDMuNDIgMTMuMjg0IDAgNy41MjQtMy43NDQgMTMuODc4dC0xMC4wNDQgMTAuMDI2bDguNDYtMjQuNDA4cTIuMTI0LTYuMDg0IDIuMTI0LTkuOTM2IDAtMS41MTItLjIxNi0yLjg0NHptLTI0LjI2NC0xOC45NzJxNi41NTIgMCAxMi41MjggMi41NTZ0MTAuMjk2IDYuODc2IDYuODc2IDEwLjI5NiAyLjU1NiAxMi41MjgtMi41NTYgMTIuNTI4LTYuODc2IDEwLjI5Ni0xMC4yOTYgNi44NzYtMTIuNTI4IDIuNTU2LTEyLjUyOC0yLjU1Ni0xMC4yOTYtNi44NzYtNi44NzYtMTAuMjk2LTIuNTU2LTEyLjUyOCAyLjU1Ni0xMi41MjggNi44NzYtMTAuMjk2IDEwLjI5Ni02Ljg3NiAxMi41MjgtMi41NTZ6bTAgNjMuMDM2cTYuMjI4IDAgMTEuOTM0LTIuNDQ4dDkuODI4LTYuNTcgNi41Ny05LjgyOCAyLjQ0OC0xMS45MzQtMi40NDgtMTEuOTM0LTYuNTctOS44MjgtOS44MjgtNi41Ny0xMS45MzQtMi40NDgtMTEuOTM0IDIuNDQ4LTkuODI4IDYuNTctNi41NyA5LjgyOC0yLjQ0OCAxMS45MzQgMi40NDggMTEuOTM0IDYuNTcgOS44MjggOS44MjggNi41NyAxMS45MzQgMi40NDh6XCIsXCJPUEVOSURcIjpcIk0zOS4wOTYtNjQuNDM5djU1LjI5NmwtOS43OTIgNC42MDhxLTguMjA4LS43Mi0xNC45MDQtMy42NzJ0LTEwLjU0OC03LjUwNi0zLjg1Mi05LjgxcTAtNS4wNCAzLjYxOC05LjQ4NnQ5LjktNy4zOTggMTQuMDk0LTMuODg4djYuMTkycS03LjgxMiAxLjM2OC0xMi44MzQgNS40dC01LjAyMiA5LjE4cTAgNS40NzIgNS41NjIgOS42MTJ0MTMuOTg2IDUuMjJ2LTQ4Ljk2em0yNC4wODQgMjAuOTUybDEuMzMyIDE0LjA0LTE4LjktNC4xMDQgNS4yOTItMi45ODhxLTQuMjg0LTIuNTItMTAuMDgtMy41NjR2LTYuMTkycTkuOTcyIDEuMTg4IDE3LjMxNiA1LjY1MnpcIixcIlVOSVZFUlNJVFlcIjpcIk0zNC41Ni02NC40MzlsMzQuNTYgMTMuODI0djQuNjA4aC00LjYwOHEwIC45MzYtLjczOCAxLjYydC0xLjc0Ni42ODRoLTU0LjkzNnEtMS4wMDggMC0xLjc0Ni0uNjg0dC0uNzM4LTEuNjJoLTQuNjA4di00LjYwOHptLTI1LjM0NCAyMy4wNGg5LjIxNnYyNy42NDhoNC42MDh2LTI3LjY0OGg5LjIxNnYyNy42NDhoNC42MDh2LTI3LjY0OGg5LjIxNnYyNy42NDhoNC42MDh2LTI3LjY0OGg5LjIxNnYyNy42NDhoMi4xMjRxMS4wMDggMCAxLjc0Ni42ODR0LjczOCAxLjYydjIuMzA0aC01OS45MDR2LTIuMzA0cTAtLjkzNi43MzgtMS42MnQxLjc0Ni0uNjg0aDIuMTI0di0yNy42NDh6bTU3LjQyIDM0LjU2cTEuMDA4IDAgMS43NDYuNjg0dC43MzggMS42MnY0LjYwOGgtNjkuMTJ2LTQuNjA4cTAtLjkzNi43MzgtMS42MnQxLjc0Ni0uNjg0aDY0LjE1MnpcIixcIk1PUlRBUl9CT0FSRFwiOlwiTTYzLjg2NC0zNC4zNDNsLjY0OCAxMS4zNzZxLjE0NCAyLjQ4NC0yLjk1MiA0LjYwOHQtOC40NiAzLjM2Ni0xMS42MjggMS4yNDItMTEuNjI4LTEuMjQyLTguNDYtMy4zNjYtMi45NTItNC42MDhsLjY0OC0xMS4zNzYgMjAuNjY0IDYuNTE2cS43OTIuMjUyIDEuNzI4LjI1MnQxLjcyOC0uMjUyem0xOS4wOC0xMS42NjRxMCAuODI4LS43OTIgMS4xMTZsLTQwLjMyIDEyLjY3MnEtLjE0NC4wMzYtLjM2LjAzNnQtLjM2LS4wMzZsLTIzLjQ3Mi03LjQxNnEtMS41NDggMS4yMjQtMi41NTYgNC4wMTR0LTEuMjI0IDYuNDI2cTIuMjY4IDEuMjk2IDIuMjY4IDMuOTI0IDAgMi40ODQtMi4wODggMy44NTJsMi4wODggMTUuNTg4cS4wNzIuNTA0LS4yODguOS0uMzI0LjM5Ni0uODY0LjM5NmgtNi45MTJxLS41NCAwLS44NjQtLjM5Ni0uMzYtLjM5Ni0uMjg4LS45bDIuMDg4LTE1LjU4OHEtMi4wODgtMS4zNjgtMi4wODgtMy44NTIgMC0yLjYyOCAyLjM0LTMuOTk2LjM5Ni03LjQ1MiAzLjUyOC0xMS44OGwtMTEuOTg4LTMuNzQ0cS0uNzkyLS4yODgtLjc5Mi0xLjExNnQuNzkyLTEuMTE2bDQwLjMyLTEyLjY3MnEuMTQ0LS4wMzYuMzYtLjAzNnQuMzYuMDM2bDQwLjMyIDEyLjY3MnEuNzkyLjI4OC43OTIgMS4xMTZ6XCIsXCJZQUhPT1wiOlwiTTMwLjkyNC0yOS45ODdsLjQ2OCAyNS40NTJxLTIuMjMyLS4zOTYtMy43OC0uMzk2LTEuNDc2IDAtMy43OC4zOTZsLjQ2OC0yNS40NTJxLTEuNDQtMi40ODQtNi4wNjYtMTAuNjM4dC03Ljc5NC0xMy40ODItNi41MTYtMTAuMzMycTIuMDg4LjU0IDMuODg4LjU0IDEuNTQ4IDAgMy45OTYtLjU0IDIuMjY4IDMuOTk2IDQuODA2IDguMjYydDYuMDEyIDkuOTU0IDQuOTg2IDguMTcycTEuMzMyLTIuMTk2IDMuOTQyLTYuMzl0NC4yMy02Ljg0IDMuNzgtNi4zMzYgMy44NTItNi44MjJxMS45NDQuNTA0IDMuODUyLjUwNCAyLjAxNiAwIDQuMTA0LS41MDQtMS4wMDggMS40MDQtMi4xNiAzLjE4NnQtMS43ODIgMi44MjYtMi4wMzQgMy40NTYtMS43NjQgMy4wMjRxLTUuMjU2IDguOTI4LTEyLjcwOCAyMS45NnpcIixcIkdPT0dMRVwiOlwiTTI3LjY0OC0zNi4xNDNoMjYuMXEuNDMyIDIuNDEyLjQzMiA0LjYwOCAwIDcuODEyLTMuMjc2IDEzLjk1dC05LjM0MiA5LjU5NC0xMy45MTQgMy40NTZxLTUuNjUyIDAtMTAuNzY0LTIuMTc4dC04LjgyLTUuODg2LTUuODg2LTguODItMi4xNzgtMTAuNzY0IDIuMTc4LTEwLjc2NCA1Ljg4Ni04LjgyIDguODItNS44ODYgMTAuNzY0LTIuMTc4cTEwLjggMCAxOC41NCA3LjIzNmwtNy41MjQgNy4yMzZxLTQuNDI4LTQuMjg0LTExLjAxNi00LjI4NC00LjY0NCAwLTguNTg2IDIuMzR0LTYuMjQ2IDYuMzU0LTIuMzA0IDguNzY2IDIuMzA0IDguNzY2IDYuMjQ2IDYuMzU0IDguNTg2IDIuMzRxMy4xMzIgMCA1Ljc2LS44NjR0NC4zMi0yLjE2IDIuOTUyLTIuOTUyIDEuODU0LTMuMTMyLjgxLTIuODA4aC0xNS42OTZ2LTkuNTA0elwiLFwiUkVERElUXCI6XCJNMzkuNDItMjIuNDI3cS41NzYuNTc2IDAgMS4xMTYtMi4yMzIgMi4yMzItNy4xNjQgMi4yMzJ0LTcuMTY0LTIuMjMycS0uNTc2LS41NCAwLTEuMTE2LjIxNi0uMjE2LjU0LS4yMTZ0LjU0LjIxNnExLjcyOCAxLjc2NCA2LjA4NCAxLjc2NCA0LjMyIDAgNi4wODQtMS43NjQuMjE2LS4yMTYuNTQtLjIxNnQuNTQuMjE2em0tMTEuMDUyLTYuNTE2cTAgMS4zMzItLjkzNiAyLjI2OHQtMi4yNjguOTM2LTIuMjg2LS45MzYtLjk1NC0yLjI2OHEwLTEuMzY4Ljk1NC0yLjMwNHQyLjI4Ni0uOTM2IDIuMjY4Ljk1NC45MzYgMi4yODZ6bTE0LjIyIDBxMCAxLjMzMi0uOTU0IDIuMjY4dC0yLjI4Ni45MzYtMi4yNjgtLjkzNi0uOTM2LTIuMjY4LjkzNi0yLjI4NiAyLjI2OC0uOTU0IDIuMjg2LjkzNi45NTQgMi4zMDR6bTkuMDM2LTQuMzJxMC0xLjc2NC0xLjI2LTMuMDI0dC0zLjA2LTEuMjYtMy4wOTYgMS4yOTZxLTQuNjgtMy4yNC0xMS4xOTYtMy40NTZsMi4yNjgtMTAuMTg4IDcuMiAxLjYycTAgMS4zMzIuOTM2IDIuMjY4dDIuMjY4LjkzNiAyLjI4Ni0uOTU0Ljk1NC0yLjI4Ni0uOTU0LTIuMjg2LTIuMjg2LS45NTRxLTEuOTQ0IDAtMi44OCAxLjhsLTcuOTU2LTEuNzY0cS0uNjg0LS4xOC0uOS41NzZsLTIuNDg0IDExLjIzMnEtNi40OC4yNTItMTEuMTI0IDMuNDkyLTEuMjYtMS4zMzItMy4xMzItMS4zMzItMS44IDAtMy4wNiAxLjI2dC0xLjI2IDMuMDI0cTAgMS4yNi42NjYgMi4zMDR0MS43ODIgMS41ODRxLS4yMTYuOTcyLS4yMTYgMi4wMTYgMCA1LjExMiA1LjA0IDguNzQ4dDEyLjEzMiAzLjYzNnE3LjEyOCAwIDEyLjE2OC0zLjYzNnQ1LjA0LTguNzQ4cTAtMS4xNTItLjI1Mi0yLjA1MiAxLjA4LS41NCAxLjcyOC0xLjU2NnQuNjQ4LTIuMjg2em0xMi44ODggMS4wOHEwIDYuNTUyLTIuNTU2IDEyLjUyOHQtNi44NzYgMTAuMjk2LTEwLjI5NiA2Ljg3Ni0xMi41MjggMi41NTYtMTIuNTI4LTIuNTU2LTEwLjI5Ni02Ljg3Ni02Ljg3Ni0xMC4yOTYtMi41NTYtMTIuNTI4IDIuNTU2LTEyLjUyOCA2Ljg3Ni0xMC4yOTYgMTAuMjk2LTYuODc2IDEyLjUyOC0yLjU1NiAxMi41MjggMi41NTYgMTAuMjk2IDYuODc2IDYuODc2IDEwLjI5NiAyLjU1NiAxMi41Mjh6XCIsXCJSRURESVRfU1FVQVJFXCI6XCJNMzMuODA0LTIzLjc5NXEuNDY4LjQ2OCAwIC45MzYtMS45MDggMS45MDgtNi4xNTYgMS45MDh0LTYuMTU2LTEuOTA4cS0uNDY4LS40NjggMC0uOTM2LjE4LS4yMTYuNDY4LS4yMTZ0LjQ2OC4yMTZxMS41MTIgMS41MTIgNS4yMiAxLjUxMnQ1LjIyLTEuNTEycS4xOC0uMjE2LjQ2OC0uMjE2dC40NjguMjE2em0tOS40NjgtNS42MTZxMCAxLjExNi0uODI4IDEuOTQ0dC0xLjk0NC44MjgtMS45NDQtLjgyOC0uODI4LTEuOTQ0cTAtMS4xNTIuODEtMS45NjJ0MS45NjItLjgxIDEuOTYyLjgxLjgxIDEuOTYyem0xMi4xNjggMHEwIDEuMTE2LS44MjggMS45NDR0LTEuOTQ0LjgyOC0xLjk0NC0uODI4LS44MjgtMS45NDRxMC0xLjE1Mi44MS0xLjk2MnQxLjk2Mi0uODEgMS45NjIuODEuODEgMS45NjJ6bTcuNzQtMy43MDhxMC0xLjUxMi0xLjA4LTIuNTkydC0yLjYyOC0xLjA4cS0xLjUxMiAwLTIuNjI4IDEuMTE2LTQuMDY4LTIuODA4LTkuNjEyLTIuOTUybDEuOTQ0LTguNzQ4IDYuMTU2IDEuNDA0cS4wMzYgMS4xNTIuODQ2IDEuOTQ0dDEuOTI2Ljc5MnExLjE1MiAwIDEuOTYyLS44MXQuODEtMS45NjItLjgxLTEuOTYyLTEuOTYyLS44MXEtMS43MjggMC0yLjQ4NCAxLjU0OGwtNi44MDQtMS41MTJxLS42MTItLjE4LS43NTYuNDY4bC0yLjE2IDkuNjQ4cS01LjU0NC4yMTYtOS41NCAyLjk4OC0xLjA4LTEuMTUyLTIuNjY0LTEuMTUyLTEuNTQ4IDAtMi42MjggMS4wOHQtMS4wOCAyLjU5MnEwIDEuMDguNTc2IDEuOTh0MS41MTIgMS4zNjhxLS4xOC45LS4xOCAxLjcyOCAwIDQuMzkyIDQuMzIgNy41MDZ0MTAuNDA0IDMuMTE0cTYuMTIgMCAxMC40NC0zLjExNHQ0LjMyLTcuNTA2cTAtLjktLjIxNi0xLjc2NC45LS40NjggMS40NTgtMS4zNXQuNTU4LTEuOTYyem0xMS4wNTItMTYuMzQ0djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlNUVU1CTEVVUE9OX0NJUkNMRVwiOlwiTTMxLjE3Ni0zNC4yMzVsMy4yNC0uOTcydi0yLjIzMnEwLTIuODQ0LTIuMDg4LTQuODZ0LTQuOTY4LTIuMDE2LTQuOTY4IDEuOTk4LTIuMDg4IDQuODQydjEwLjE4OHEwIC43Mi0uNTA0IDEuMjA2dC0xLjE4OC40ODYtMS4xNy0uNDg2LS40ODYtMS4yMDZ2LTQuMzJoLTUuNDM2djQuMzkycTAgMi45NTIgMi4wNyA1LjAwNHQ1LjAyMiAyLjA1MnEyLjkxNiAwIDQuOTg2LTIuMDM0dDIuMDctNC45MTR2LTEwLjA4cTAtLjY4NC40ODYtMS4xODh0MS4yMDYtLjUwNHEuNjg0IDAgMS4xNy41MDR0LjQ4NiAxLjE4OHYxLjk0NHptMTEuOTg4IDcuMDJ2LTQuMzkyaC01LjR2NC41MzZxMCAuNzItLjQ4NiAxLjIwNnQtMS4yMDYuNDg2cS0uNjg0IDAtMS4xNy0uNTA0dC0uNDg2LTEuMTg4di00LjQyOGwtMy4yNC45MzYtMi4xNi0xLjAwOHY0LjQyOHEwIDIuODggMi4wODggNC45MzJ0NS4wMDQgMi4wNTIgNC45ODYtMi4wNTIgMi4wNy01LjAwNHptMTIuMTMyLTQuOTY4cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIlNUVU1CTEVVUE9OXCI6XCJNMzguMjMyLTM4LjgwN3YtNC4yNDhxMC0xLjUxMi0xLjA4LTIuNTkydC0yLjU5Mi0xLjA4LTIuNTkyIDEuMDgtMS4wOCAyLjU5MnYyMi4wMzJxMCA2LjMtNC41MzYgMTAuNzY0dC0xMC45MDggNC40NjRxLTYuNDA4IDAtMTAuOTI2LTQuNTE4dC00LjUxOC0xMC45MjZ2LTkuNTc2aDExLjgwOHY5LjQzMnEwIDEuNTQ4IDEuMDggMi42MXQyLjU5MiAxLjA2MiAyLjU5Mi0xLjA2MiAxLjA4LTIuNjF2LTIyLjMycTAtNi4xNTYgNC41NTQtMTAuNTEydDEwLjg1NC00LjM1NnE2LjMzNiAwIDEwLjg3MiA0LjM5MnQ0LjUzNiAxMC41ODR2NC44OTZsLTcuMDIgMi4wODh6bTE5LjA4IDcuOTkyaDExLjgwOHY5LjU3NnEwIDYuNDA4LTQuNTE4IDEwLjkyNnQtMTAuOTI2IDQuNTE4cS02LjM3MiAwLTEwLjkwOC00LjQ4MnQtNC41MzYtMTAuODE4di05LjY0OGw0LjcxNiAyLjE5NiA3LjAyLTIuMDg4djkuNzJxMCAxLjUxMiAxLjA4IDIuNTc0dDIuNTkyIDEuMDYyIDIuNTkyLTEuMDYyIDEuMDgtMi41NzR2LTkuOXpcIixcIkRFTElDSU9VU1wiOlwiTTUyLjk5Mi0xNC45MDN2LTE3LjI4aC0yNS4zNDR2LTI1LjM0NGgtMTcuMjhxLTMuMzQ4IDAtNS43MDYgMi4zNTh0LTIuMzU4IDUuNzA2djE3LjI4aDI1LjM0NHYyNS4zNDRoMTcuMjhxMy4zNDggMCA1LjcwNi0yLjM1OHQyLjM1OC01LjcwNnptMi4zMDQtMzQuNTZ2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiRElHR1wiOlwiTTExLjgwOC01NC4yODdoNy4zNDR2MzUuMzg4aC0xOS4xNTJ2LTI1LjA5MmgxMS44MDh2LTEwLjI5NnptMCAyOS40ODR2LTEzLjI4NGgtNC40Mjh2MTMuMjg0aDQuNDI4em0xMC4yOTYtMTkuMTg4djI1LjA5Mmg3LjM4di0yNS4wOTJoLTcuMzh6bTAtMTAuMjk2djcuMzQ0aDcuMzh2LTcuMzQ0aC03LjM4em0xMC4zMzIgMTAuMjk2aDE5LjE4OHYzMy45MTJoLTE5LjE4OHYtNS44NjhoMTEuODA4di0yLjk1MmgtMTEuODA4di0yNS4wOTJ6bTExLjgwOCAxOS4xODh2LTEzLjI4NGgtNC40Mjh2MTMuMjg0aDQuNDI4em0xMC4zMzItMTkuMTg4aDE5LjE1MnYzMy45MTJoLTE5LjE1MnYtNS44NjhoMTEuNzcydi0yLjk1MmgtMTEuNzcydi0yNS4wOTJ6bTExLjc3MiAxOS4xODh2LTEzLjI4NGgtNC40Mjh2MTMuMjg0aDQuNDI4elwiLFwiUElFRF9QSVBFUlwiOlwiTTM3LjY1Ni0yNy43MTlxMCAyLjMwNC0xLjM2OCAzLjkyNHQtMy4yNzYgMS42MnEtMS41NDggMC0yLjUyLS41NHYtOS45NzJxMS4wMDgtLjYxMiAyLjUyLS42MTIgMS45MDggMCAzLjI3NiAxLjYzOHQxLjM2OCAzLjk0MnptLTEyLjM0OC0xNS40MDhxMCAyLjMwNC0xLjM2OCAzLjk0MnQtMy4yNzYgMS42MzhxLTEuNTQ4IDAtMi41Mi0uNTR2LTkuOTcycTEuMDA4LS42MTIgMi41Mi0uNjEyIDEuOTA4IDAgMy4yNzYgMS42MnQxLjM2OCAzLjkyNHptMjAuMjMyIDE1LjUxNnEwLTQuODI0LTMuMTY4LTguMjQ0dC03LjY2OC0zLjQycS0uNzIgMC0xLjQwNC4xMDgtLjgyOCAyLjgwOC0yLjgwOCA0Ljg5Ni0zLjEzMiAzLjQyLTcuNTk2IDMuNjM2djIyLjg5Nmw3LjU5Ni0xLjQ3NnYtNy40MTZxMS44MzYuNjg0IDQuMjEyLjY4NCA0LjUgMCA3LjY2OC0zLjQydDMuMTY4LTguMjQ0em0tMTIuMzQ4LTE1LjM3MnEwLTQuODI0LTMuMTg2LTguMjQ0dC03LjY4Ni0zLjQycS0yLjY2NCAwLTUuMDc2IDEuMjk2aC02LjY5NnYzMC4yNGw3LjU5Ni0xLjQ3NnYtNy40MTZxMS45OC42ODQgNC4xNzYuNjg0IDQuNSAwIDcuNjg2LTMuNDJ0My4xODYtOC4yNDR6bTIyLjEwNC02LjQ4djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlBJRURfUElQRVJfQUxUXCI6XCJNNDMuOTkyLTMwLjk5NXEyLjctLjEwOCA1LjE2Ni43Mzh0NC4yNDggMi4xMDYgMy42MzYgMy40MDIgMy4wMjQgMy44ODggMi43MTggNC4zMzhxMS4xODggMi4wMTYgMi44MjYgMy45MjR0Mi43MTggMi44OTggMy41NjQgMy4xODZxLTEuNzI4IDEuMDgtMy45MDYgMi4wN3QtNC45ODYgMi4xMjQtNC4xMDQgMS43MXEtMS41ODQtMS4zMzItMi42NjQtNC4xNHQtMS41NjYtNS45MjItMS4xODgtNi40OTgtMS41My02LjA2Ni0yLjYxLTQuNDI4LTQuNDEtMS43NDZsLS4zNi4wNzItLjIxNi4xNDRxLjE0NC4xOC40NjguNTA0LjIxNi4xOCAxLjAwOC44NDZ0LjkxOC43OTIuNjg0LjY0OC42NDguNzM4LjQxNC43NTYuMzc4Ljk5LjE2MiAxLjExNi4xNDQgMS40NThsLjAzNiAxLjE4OHEuMDM2LjkzNi0uMDkgMi4wN3QtLjI3IDEuODcyLS40NSAyLjEwNi0uNDE0IDEuOTA4cS0xLjI2LS4wMzYtMy42MzYuMzQydC0zLjUyOC4zNzhxLTEuNDA0IDAtMi41OTItLjM2LS4wNzItLjU3Ni0uMDcyLTEuNjkyIDAtMi42NjQuMTA4LTMuNDU2LjA3Mi0uNDY4IDEuMTM0LTEuNDk0dDIuMDUyLTIuMTI0Ljk1NC0xLjg1NHEtLjg2NC0uMDcyLTEuNTQ4Ljg2NC0xLjI5NiAxLjkwOC00LjAxNCAzLjU4MnQtNC45MTQgMS42NzRxLS45IDAtMi43MTgtMi4yNjh0LTMuODM0LTUuMDIyLTMuMDI0LTMuNDc0cS0uMjE2LS4xNDQtLjk3Mi0xLjA4LTE3LjM1MiA0LjAzMi0xOC40NjggNC4wMzItLjU3NiAwLTEuMDA4LS4zOTZ0LS40MzItLjk3MnEwLS41NC4zMDYtLjk1NHQuODEtLjUyMmwxNy40OTYtMy44MTZxLS4yODgtLjUwNC0uMjg4LS45dC4xOTgtLjYzLjU3Ni0uNDE0LjcyLS4yNTIuODI4LS4xNjIuNjY2LS4xNjJxLjE0NC0uMDM2LjU1OC0uMjd0LjYzLS4yMzRxLjU0IDAgMS4wMDguNTc2dC43MiAxLjE4OHE1Ljg2OC0xLjMzMiA2LjE5Mi0xLjMzMi42MTIgMCAxLjA2Mi4zOTZ0LjQ1IDEuMDA4cTAgLjU0LS4zMDYuOTM2dC0uODQ2LjUwNGwtNi41NTIgMS40NC0uMDM2LjU3NnEtLjAzNi45MzYgMi45MzQgNC4yM3QzLjc2MiAzLjI5NHExLjY5MiAwIDQuMjg0LTIuODh0Mi41OTItNC42NDRxMC0xLjI5Ni0uODQ2LTEuOTA4dC0xLjgzNi0uNjY2LTEuODM2LS40MTQtLjg0Ni0xLjIyNHEwLS41NzYuMzYtMS4yMjRsLTIuNDQ4LS42ODRxMS41NDgtMS41ODQgMS41NDgtNC4yMTIgMC0uOTM2LS4xOC0yLjA4OCAyLjk1Mi0uNTc2IDUuMTg0LS41NzYgMS41ODQgMCAyLjU3NC4wNTR0MS43NDYuMzA2IDEuMTE2LjQ4Ni43MzguODgyLjU1OCAxLjIwNi42MTIgMS43MS44NjQgMi4xNmwxLjgtLjlxLS4xMDggMS40NC0uODI4IDIuMTZ0LTEuNTMuNzU2LTEuNDQuMjM0LS41OTQuNzM4em0yLjE2LTguNDZxLS4xOC0uMTgtLjQ4Ni0uNTU4dC0uNDMyLS41MjItLjM3OC0uNDE0LS4zNi0uMzc4bC0uMjg4LS4yODgtLjMwNi0uMjctLjI4OC0uMTgtLjMwNi0uMTYycS0uMjUyLS4xMDgtLjUyMi0uMTh0LS43MzgtLjA5LS43OTItLjAxOGgtMi41MnEtNC41MzYgMC03LjgxMiAxLjU0OC41NzYtMS4wOCAxLjI5Ni0xLjY3NHQxLjk0NC0xLjA2MiAyLjM1OC0xLjI5NiAxLjY1Ni0xLjMxNCAxLjgtMS45OCAxLjU2Ni0xLjgxOHEuNDMyLjMyNCAxLjAwOCAxLjEzNHQxLjE1MiAxLjMxNCAxLjM2OC40NjhsLjQzMi0uMDM2djIuNzM2bC43OTIuMDM2cTguODkyLTMuNDIgMTMuMzU2LTYuODQgMS4wMDgtLjc1NiAxLjgtMS40MDR0MS41My0xLjM1IDEuMTg4LTEuMTE2IDEuMDYyLTEuMjI0Ljg2NC0xLjExNi44ODItMS4zMzIuODI4LTEuMzY4Ljk3Mi0xLjcxIDEuMDYyLTEuOTA4bC4yNTItLjMyNHEtLjA3MiAxLjkwOC0xLjU0OCA1LjAwNC0yLjg0NCA1Ljk0LTcuMzggOS41MDR0LTExLjAxNiA1LjExMnEtLjUwNC4xMDgtMS41MTIuMjd0LTEuOC4zNDItMS40MDQuNTA0cS4xMDguNjg0Ljg4MiAxLjY1NnQuNzc0IDEuMjI0cTAgLjM5Ni0uOTM2IDEuMDh6bS03Ljk1NiAzMy4xNTZxMS40MDQtLjkzNiA0LjczNC0xLjcxdDUuMjc0LS43NzRxLjMyNCAwIC44MS41NTh0MS4wMDggMS41My45MzYgMS44Ljg2NCAxLjgzNi41MjIgMS4xODhxLTQuMzU2IDEuNjItOC43ODQgMS42Mi0yLjE5NiAwLTQuNS0uMzk2em0tOC42MDQtMjMuMjkybDEuNzI4LS40MzIgMy45MjQgNi4zNzItMi42MjggMS43Mjh6bTE4LjAzNiAxOC42MTJsLjEwOC41NzZxMCAuMjUyLS42My41MjJ0LTEuNjU2LjQ2OC0xLjk0NC4zNDItMS45MjYuMjctMS4xNTIuMTYybC0uMjUyLTEuNTQ4cS43NTYtLjA3MiAyLjE3OC0uMzA2dDIuNTkyLS4zNiAyLjE3OC0uMTI2aC41MDR6bS0xNi40NTItMjIuNjA4bC0zLjQ1Ni43Mi0uMjE2LS42MTJxLjM2LS4wMzYgMS4xNy0uMjUydDEuMjQyLS4yMTZxLjY4NCAwIDEuMjYuMzZ6bTcuMDIgMjIuODI0aDEuMTE2bC4zNiAyLjk4OC0xLjQ3Ni40MzJ2LTMuNDJ6bTMyLjAwNC01My42NHYwem0wIDBsLS4wMzYuMTgtLjA3Mi4wNzIuMDM2LS4xMDh6bTAgMGwuMDM2LS4wMzZ6XCIsXCJEUlVQQUxcIjpcIk00Mi4wMTItNy4zNDNxLS4xOC0uNjg0LS44NjQtLjE4LTEuMDguNzkyLTMuMTMyIDEuNDA0dC00LjcxNi42MTJxLTQuNjQ0IDAtNi45NDgtMS43NjQtLjE4LS4xNDQtLjQ2OC0uMTQ0LS4zOTYgMC0uOTM2LjQzMi0uMjUyLjIxNi0uMjcuNTc2dC4yNy43MnExLjIyNCAxLjE1MiAzLjE1IDEuNjU2dDMuNjkuNDUgMy41NjQtLjE2MnExLjQ3Ni0uMTQ0IDMuMDQyLS43Mzh0Mi4zNC0xLjA4IDEuMDI2LS43MzhxLjQzMi0uNDMyLjI1Mi0xLjA0NHptLTEuNDA0LTQuMTRxLS42ODQtMS42OTItMS40MDQtMi4xOTYtLjgyOC0uNTQtMi43MzYtLjU0LTEuNjkyIDAtMi41NTYuMzYtMS4wNDQuNDMyLTIuODA4IDIuMDE2LS45MzYuODY0LS40MzIgMS41ODQuMzI0LjI4OC42My4xNjJ0MS4xMzQtLjg0NnEuMTA4LS4wNzIuMzc4LS4zMDZ0LjM3OC0uMzA2LjM2LS4yNTIuNDE0LS4yNTIuNDUtLjE4LjU0LS4xNjIuNTk0LS4wOS43MzgtLjAzNnEuOTcyIDAgMS42MDIuMjd0LjgyOC41MjIuNDg2Ljc5MnEuMzYuNjEyLjQ1LjcydC40NS0uMDM2cS44MjgtLjQzMi41MDQtMS4yMjR6bTEyLjc4LTEwLjExNnEwLS43OTItLjE4LTEuNjAydC0uNTk0LTEuNjItMS4yMjQtMS4zMTQtMS44OS0uNTA0cS0xLjE4OCAwLTMuNDkyIDEuNDk0dC00LjY0NCAzLjAwNi0zLjYzNiAxLjUxMnEtLjk3Mi4wMzYtMi4yODYtLjY4NHQtMi43MzYtMS43NjQtMy4wMDYtMi4wODgtMy42LTEuNzY0LTMuOTk2LS42ODRxLTQuMTQuMDM2LTcuMDkyIDIuODI2dC0zLjAyNCA2LjQyNnEtLjA3MiA0LjAzMiAyLjY2NCA1LjkwNCAxLjA0NC43MiAyLjI1IDEuMDI2dDMuNzI2LjMwNnEyLjA1MiAwIDQuNzUyLTEuMTd0NC44MjQtMi41NTYgNC4zMi0yLjUzOCAzLjM0OC0xLjExNnEuOTM2LjAzNiAyLjM0IDEuMTM0dDIuNTc0IDIuNDEyIDIuNDQ4IDIuNDMgMS45OTggMS4xNTJxMS4yNi4xMDggMi4xMDYtLjUwNHQxLjk5OC0yLjI2OHExLjAwOC0xLjQ3NiAxLjUzLTMuNjM2dC41MjItMy44MTZ6bTEuOTA4LTUuNzZxMCA1LjkwNC0yLjIzMiAxMC45NjJ0LTUuOTc2IDguNDk2LTguNzMgNS4zODItMTAuNDU4IDEuOTQ0LTEwLjU0OC0yLjA3LTguOTEtNS42NTItNi4xMzgtOC42OTQtMi4zMDQtMTAuODcycTAtMy4yMDQuNzAyLTYuMjF0MS43NjQtNS4yMzggMi41MzgtNC4yNjYgMi44MjYtMy4zODQgMi44MjYtMi41MDIgMi4zMjItMS42NzQgMS41My0uODgycS41MDQtLjI4OCAxLjgzNi0uOTU0dDEuOTYyLTEuMDI2IDEuNzI4LTEuMDggMi4xNzgtMS41ODRxMS4yOTYtMS4wMDggMi4wODgtMi42MXQxLjA4LTQuNTE4cTQuNjQ0IDUuNTggNi42OTYgNi45NDggMS41ODQgMS4wNDQgNC42OCAyLjQ0OHQ0LjY0NCAyLjM3NnEuNzU2LjQ2OCAxLjQwNC45dDIuMTc4IDEuNjc0IDIuNzM2IDIuNTM4IDIuNyAzLjQyIDIuNDg0IDQuMzkyIDEuNjkyIDUuMzQ2LjcwMiA2LjM5elwiLFwiSk9PTUxBXCI6XCJNMzguNTItMjUuODExbC01Ljc2IDUuNzYtNS40MzYgNS40NzItMS4wOCAxLjA4cS0yLjM0IDIuMzA0LTUuNDU0IDMuMTMydC02LjE3NC4wNzJxLS41NzYgMi41Mi0yLjU5MiA0LjE0dC00LjY0NCAxLjYycS0zLjA2IDAtNS4yMi0yLjE3OHQtMi4xNi01LjIzOHEwLTIuNTkyIDEuNjAyLTQuNjA4dDQuMDg2LTIuNTkycS0uNzkyLTMuMDk2LjAzNi02LjIyOHQzLjE2OC01LjQ3MmwuNDMyLS40MzIgNS40MzYgNS40NzItLjM5Ni4zOTZxLTEuMzMyIDEuMzMyLTEuMzMyIDMuMjA0dDEuMzMyIDMuMjRxMS4zMzIgMS4zMzIgMy4yMDQgMS4zMzJ0My4yMDQtMS4zMzJsMS4wOC0xLjA4IDUuNDM2LTUuNDcyIDUuNzk2LTUuNzZ6bS0xMi4yNzYtMjQuNTUybC40MzIuNDMyLTUuNDcyIDUuNDcyLS40MzItLjQzMnEtMS4zMzItMS4zMzItMy4yMDQtMS4zMzJ0LTMuMjA0IDEuMzMyLTEuMzMyIDMuMjIyIDEuMzMyIDMuMjIybDEuMDQ0IDEuMDQ0IDUuNDcyIDUuNDcyIDUuNzYgNS43Ni01LjQzNiA1LjQ3Mi01Ljc5Ni01Ljc2LTUuNDM2LTUuNDcyLTEuMDgtMS4wOHEtMi40NDgtMi40MTItMy4yNC01Ljc0MnQuMTgtNi40NjJxLTIuNTItLjU0LTQuMTQtMi41NTZ0LTEuNjItNC42NDRxMC0zLjA2IDIuMTYtNS4yMzh0NS4yMi0yLjE3OHEyLjczNiAwIDQuODA2IDEuNzY0dDIuNTAyIDQuNDI4cTMuMDI0LS43MiA2LjEwMi4xMjZ0NS4zODIgMy4xNXptMjkuMDUyIDM4LjQxMnEwIDMuMDYtMi4xNiA1LjIzOHQtNS4yMiAyLjE3OHEtMi42NjQgMC00LjcxNi0xLjY5MnQtMi41NTYtNC4yNDhxLTMuMDk2IDEuMDA4LTYuNDYyLjIxNnQtNS44MTQtMy4yNGwtLjM5Ni0uNDMyIDUuNDM2LTUuNDcyLjQzMi40MzJxMS4zMzIgMS4zMzIgMy4yMDQgMS4zMzJ0My4yMDQtMS4zMzIgMS4zMzItMy4yMDQtMS4zMzItMy4yMDRsLTEuMDgtMS4wOC01LjQ3Mi01LjQ3Mi01Ljc2LTUuNzYgNS40NzItNS40NzIgNS43NiA1Ljc2IDUuNDcyIDUuNDcyIDEuMDQ0IDEuMDhxMi4zMDQgMi4zMDQgMy4xNSA1LjQxOHQuMDkgNi4xNzRxMi43MzYuMzk2IDQuNTU0IDIuNDY2dDEuODE4IDQuODQyem0tLjA3Mi00MC40NjRxMCAyLjc3Mi0xLjgzNiA0Ljg2dC00LjU3MiAyLjQ4NHEuOTM2IDMuMDYuMTA4IDYuMzU0dC0zLjI0IDUuNzA2bC0uNDMyLjQzMi01LjQzNi01LjQ3Mi40MzItLjQzMnExLjMzMi0xLjMzMiAxLjMzMi0zLjIwNHQtMS4zMzItMy4yMDQtMy4yMDQtMS4zMzItMy4yMDQgMS4zMzJsLTEuMDggMS4wOC01LjQ3MiA1LjQ3Mi01Ljc2IDUuNzYtNS40NzItNS40NzIgNS43OTYtNS43NiA1LjQ3Mi01LjQ3MiAxLjA0NC0xLjA4cTIuNDEyLTIuNDEyIDUuNzI0LTMuMjIydDYuNDA4LjEyNnEuMzk2LTIuNyAyLjQ2Ni00LjUzNnQ0Ljg3OC0xLjgzNnEzLjA2IDAgNS4yMiAyLjE3OHQyLjE2IDUuMjM4elwiLFwiTEFOR1VBR0VcIjpcIk0yMy41NDQtMjUuNjMxcS0uMDM2LjEwOC0uNDUtLjAxOHQtMS4xMzQtLjQxNGwtLjcyLS4zMjRxLTEuNTg0LS43Mi0zLjEzMi0xLjc2NC0uMjUyLS4xOC0xLjQ3Ni0xLjEzNHQtMS4zNjgtMS4wMjZxLTIuNDEyIDMuNzA4LTQuODI0IDYuNTE2LTIuOTE2IDMuNDItMy43OCAzLjk2LS4xNDQuMDcyLS43MDIuMTQ0dC0uNjY2IDBxLjIxNi0uMTQ0IDIuOTUyLTMuMzEyLjc1Ni0uODY0IDMuMDc4LTQuMTR0Mi44MjYtNC4yNDhxLjYxMi0xLjA4IDEuODM2LTMuNTQ2dDEuMjk2LTIuNzlxLS4yODgtLjAzNi0zLjk2IDEuMTg4LS4yODguMDcyLS45OS4yN3QtMS4yNDIuMzQyLS42MTIuMThxLS4wNzIuMDcyLS4wNzIuMzc4dC0uMDM2LjM0MnEtLjE4LjM2LTEuMTE2LjU0LS44MjguMjUyLTEuNjkyIDAtLjY0OC0uMTQ0LTEuMDA4LS43NTYtLjE0NC0uMjE2LS4xOC0uODI4LjIxNi0uMDcyLjg4Mi0uMTh0MS4wNjItLjIxNnEyLjA4OC0uNTc2IDMuNzgtMS4xNTIgMy42LTEuMjYgMy42NzItMS4yNi4zNi0uMDcyIDEuNTQ4LS43MDJ0MS41ODQtLjc3NHEuMzI0LS4xMDguNzc0LS4yODh0LjUyMi0uMTk4LjIxNi4wMThxLjA3Mi40MzItLjAzNiAxLjE4OCAwIC4wNzItLjQ1Ljk3MnQtLjk1NCAxLjkyNi0uNjEyIDEuMjA2cS0uOSAxLjgtMi43NzIgNC43MTZsMi4zMDQgMS4wMDhxLjQzMi4yMTYgMi42ODIgMS4xNTJ0Mi40MyAxLjAwOHEuMTQ0LjAzNi4zNzguOTE4dC4xNjIgMS4wOTh6bS03LjM4LTE3LjQ5NnEuMTA4LjU0LS4xNDQgMS4wMDgtLjQzMi44MjgtMS44IDEuMzY4LTEuMDguNDMyLTIuMTYuNDMyLS45MzYtLjEwOC0xLjc2NC0uOTM2LS41MDQtLjU0LS42NDgtMS40NzZsLjAzNi0uMTA4cS4xMDguMTA4LjcwMi4xOHQuOTU0IDAgMi4wODgtLjU3NnExLjI5Ni0uNDMyIDEuOTgtLjUwNC42MTIgMCAuNzU2LjYxMnptMjUuMTI4IDQuNjQ0bDIuMjY4IDguMTcyLTUuMDA0LTEuNTEyem0tMzkuODg4IDI4LjhsMjQuOTg0LTguMzUydi0zNy4xNTJsLTI0Ljk4NCA4LjM4OHYzNy4xMTZ6bTQ0LjY3Ni0xMS40MTJsMy42NzIgMS4xMTYtNi41MTYtMjMuNjUyLTMuNi0xLjExNi03Ljc3NiAxOS4yOTYgMy42NzIgMS4xMTYgMS42Mi0zLjk2IDcuNTk2IDIuMzR6bS0xOC4xMDgtMzQuNjMybDIwLjYyOCA2LjYyNHYtMTMuNjh6bTExLjE5NiA0Ny42MjhsNS42ODguNDY4LTEuOTQ0IDUuNzYtMS40NC0yLjM3NnEtNC42OCAyLjk4OC05LjkzNiAzLjg4OC0yLjA4OC40MzItMy4yNzYuNDMyaC0zLjAyNHEtMi44NDQgMC03LjE4Mi0xLjQwNHQtNi42MDYtMy4wNnEtLjI4OC0uMjUyLS4yODgtLjU3NiAwLS4yODguMTgtLjQ4NnQuNDY4LS4xOThxLjE0NCAwIC42NDguMjd0MS4wOTguNTk0LjczOC4zOTZxMi42MjggMS4zMzIgNS43NDIgMi4yMTR0NS42Ny44ODJxMy40MiAwIDYuMDEyLS41MjJ0NS42NTItMS44MThxLjU0LS4yNTIgMS4wOTgtLjU1OHQxLjIyNC0uNjg0IDEuMDI2LS41OTR6bTE2LjEyOC0zOC44NDR2MzguODQ0bC0yNy44NjQtOC44NTZxLS41MDQuMjE2LTEzLjUgNC41OXQtMTMuMjQ4IDQuMzc0cS0uNDY4IDAtLjY0OC0uNDY4bC0uMDM2LS4xMDh2LTM4LjgwOHEuMTA4LS4zMjQuMTQ0LS4zNi4xOC0uMjE2LjcyLS4zOTYgMy44MTYtMS4yNiA1LjM2NC0xLjh2LTEzLjgyNGwyMC4wODggNy4xMjhxLjA3MiAwIDUuNzc4LTEuOTh0MTEuMzc2LTMuOTA2IDUuODE0LTEuOTI2cS43MiAwIC43Mi43NTZ2MTUuMDQ4elwiLFwiRkFYXCI6XCJNMTAuMzY4LTUwLjYxNXEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djM5LjE2OHEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5MmgtNC42MDhxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di0zOS4xNjhxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5Mmg0LjYwOHptNDkuNTM2IDUuODY4cTIuMDg4IDEuMjI0IDMuMzQ4IDMuMzQ4dDEuMjYgNC42MDh2MjcuNjQ4cTAgMy44MTYtMi43IDYuNTE2dC02LjUxNiAyLjdoLTMxLjEwNHEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTU1LjI5NnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMjQuMTkycTEuNDQgMCAzLjE2OC43MnQyLjczNiAxLjcyOGw1LjQ3MiA1LjQ3MnExLjAwOCAxLjAwOCAxLjcyOCAyLjczNnQuNzIgMy4xNjh2NS44Njh6bS0yNi40OTYgMzUuNjA0di00LjYwOHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTQuNjA4cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djQuNjA4cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDQuNjA4cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0wLTkuMjE2di00LjYwOHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTQuNjA4cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djQuNjA4cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDQuNjA4cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0wLTkuMjE2di00LjYwOHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTQuNjA4cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djQuNjA4cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDQuNjA4cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em05LjIxNiAxOC40MzJ2LTQuNjA4cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtNC42MDhxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2NC42MDhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoNC42MDhxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTQuNjA4cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtNC42MDhxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2NC42MDhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoNC42MDhxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTQuNjA4cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtNC42MDhxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2NC42MDhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoNC42MDhxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTkuMjE2IDE4LjQzMnYtNC42MDhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC00LjYwOHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY0LjYwOHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg0LjYwOHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMC05LjIxNnYtNC42MDhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC00LjYwOHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY0LjYwOHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg0LjYwOHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMC05LjIxNnYtNC42MDhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC00LjYwOHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY0LjYwOHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg0LjYwOHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMy40NTYtMTMuODI0di05LjIxNmgtNS43NnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNS43NmgtMjMuMDR2MTguNDMyaDMyLjI1NnpcIixcIkJVSUxESU5HXCI6XCJNNDguMzg0LTY0LjQzOXEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjU5LjkwNHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNDYuMDhxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNTkuOTA0cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoNDYuMDh6bS0yOS45NTIgMTAuMzY4djIuMzA0cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDIuMzA0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4di0yLjMwNHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4em0wIDkuMjE2djIuMzA0cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDIuMzA0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4di0yLjMwNHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4em0wIDkuMjE2djIuMzA0cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDIuMzA0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4di0yLjMwNHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4em0wIDkuMjE2djIuMzA0cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDIuMzA0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4di0yLjMwNHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4em0tNC42MDggMTEuNTJ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTE4LjQzMiA0Ni4wOHYtNi45MTJxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0xMS41MnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHY2LjkxMnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgxMS41MnEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMC0xOC40MzJ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTAtOS4yMTZ2LTIuMzA0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2Mi4zMDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTkuMjE2IDM2Ljg2NHYtMi4zMDRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyLjMwNHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyLjMwNHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMC05LjIxNnYtMi4zMDRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyLjMwNHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyLjMwNHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMC05LjIxNnYtMi4zMDRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyLjMwNHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyLjMwNHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMC05LjIxNnYtMi4zMDRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyLjMwNHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyLjMwNHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptMC05LjIxNnYtMi4zMDRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyLjMwNHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyLjMwNHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHpcIixcIkNISUxEXCI6XCJNNDIuNzY4LTQ0LjcxMWwtMTAuNTEyIDEwLjUxMnYyOS42NjRxMCAxLjY1Ni0xLjE4OCAyLjg0NHQtMi44NDQgMS4xODgtMi44NDQtMS4xODgtMS4xODgtMi44NDR2LTEzLjgyNGgtMi4zMDR2MTMuODI0cTAgMS42NTYtMS4xODggMi44NDR0LTIuODQ0IDEuMTg4LTIuODQ0LTEuMTg4LTEuMTg4LTIuODQ0di0yOS42NjRsLTEwLjUxMi0xMC41MTJxLTEuMDA4LTEuMDA4LTEuMDA4LTIuNDQ4dDEuMDA4LTIuNDQ4IDIuNDQ4LTEuMDA4IDIuNDQ4IDEuMDA4bDguMjA4IDguMjA4aDEzLjI0OGw4LjIwOC04LjIwOHExLjAwOC0xLjAwOCAyLjQ0OC0xLjAwOHQyLjQ0OCAxLjAwOCAxLjAwOCAyLjQ0OC0xLjAwOCAyLjQ0OHptLTExLjY2NC01LjkwNHEwIDMuMzQ4LTIuMzU4IDUuNzA2dC01LjcwNiAyLjM1OC01LjcwNi0yLjM1OC0yLjM1OC01LjcwNiAyLjM1OC01LjcwNiA1LjcwNi0yLjM1OCA1LjcwNiAyLjM1OCAyLjM1OCA1LjcwNnpcIixcIlBBV1wiOlwiTTI4LjA4LTQ3LjQ0N3EwIDIuMTYtLjY4NCA0LjA4NnQtMi4yNjggMy4zMy0zLjc4IDEuNDA0cS0yLjczNiAwLTQuOTY4LTIuMDd0LTMuMzEyLTQuODc4LTEuMDgtNS40MzZxMC0yLjE2LjY4NC00LjA4NnQyLjI2OC0zLjMzIDMuNzgtMS40MDRxMi43NzIgMCA0Ljk4NiAyLjA3dDMuMjk0IDQuODYgMS4wOCA1LjQ1NHptLTEyLjMxMiAxNy4zODhxMCAyLjg4LTEuNTEyIDUuMDA0dC00LjI4NCAyLjEyNHEtMi43MzYgMC01LjA5NC0xLjk5OHQtMy42MTgtNC44MDYtMS4yNi01LjQ3MnEwLTIuODggMS41MTItNS4wMjJ0NC4yODQtMi4xNDJxMi43MzYgMCA1LjA5NCAxLjk5OHQzLjYxOCA0LjgyNCAxLjI2IDUuNDl6bTE0LjE4NC0uOTcycTQuMjQ4IDAgOS4xOCAzLjUxdDguMjQ0IDguNTMyIDMuMzEyIDkuMTYycTAgMS42NTYtLjYxMiAyLjc1NHQtMS43NDYgMS42Mi0yLjMyMi43Mi0yLjczNi4xOThxLTIuNDQ4IDAtNi43NS0xLjYydC02LjU3LTEuNjJxLTIuMzc2IDAtNi45MyAxLjYwMnQtNy4yMTggMS42MDJxLTYuNTg4IDAtNi41ODgtNS4yNTYgMC0zLjA5NiAyLjAxNi02Ljg5NHQ1LjAyMi02LjkzIDYuNzUtNS4yNTYgNi45NDgtMi4xMjR6bTguNjA0LTcuNTk2cS0yLjE5NiAwLTMuNzgtMS40MDR0LTIuMjY4LTMuMzMtLjY4NC00LjA4NnEwLTIuNjY0IDEuMDgtNS40NTR0My4yOTQtNC44NiA0Ljk4Ni0yLjA3cTIuMTk2IDAgMy43OCAxLjQwNHQyLjI2OCAzLjMzLjY4NCA0LjA4NnEwIDIuNjI4LTEuMDggNS40MzZ0LTMuMzEyIDQuODc4LTQuOTY4IDIuMDd6bTE1LjU1Mi0zLjc0NHEyLjc3MiAwIDQuMjg0IDIuMTQydDEuNTEyIDUuMDIycTAgMi42NjQtMS4yNiA1LjQ3MnQtMy42MTggNC44MDYtNS4wOTQgMS45OThxLTIuNzcyIDAtNC4yODQtMi4xMjR0LTEuNTEyLTUuMDA0cTAtMi42NjQgMS4yNi01LjQ5dDMuNjE4LTQuODI0IDUuMDk0LTEuOTk4elwiLFwiU1BPT05cIjpcIk0yNS4zNDQtNDUuNDMxcTAgNS4yMi0yLjA1MiA4Ljc2NnQtNS40NzIgNC44NzhsMS42MiAyOS41NTZxLjA3Mi45MzYtLjU3NiAxLjYydC0xLjU4NC42ODRoLTYuOTEycS0uOTM2IDAtMS41ODQtLjY4NHQtLjU3Ni0xLjYybDEuNjItMjkuNTU2cS0zLjQyLTEuMzMyLTUuNDcyLTQuODc4dC0yLjA1Mi04Ljc2NnEwLTQuNjA4IDEuNTMtOC45ODJ0NC4yMy03LjIgNS43Ni0yLjgyNiA1Ljc2IDIuODI2IDQuMjMgNy4yIDEuNTMgOC45ODJ6XCIsXCJDVUJFXCI6XCJNMzIuMjU2LTUuNzk1bDIzLjA0LTEyLjU2NHYtMjIuODk2bC0yMy4wNCA4LjM4OHYyNy4wNzJ6bS0yLjMwNC0zMS4xNGwyNS4xMjgtOS4xNDQtMjUuMTI4LTkuMTQ0LTI1LjEyOCA5LjE0NHptMjkuOTUyLTkuMDcydjI3LjY0OHEwIDEuMjYtLjY0OCAyLjM0dC0xLjc2NCAxLjY5MmwtMjUuMzQ0IDEzLjgyNHEtMS4wMDguNTc2LTIuMTk2LjU3NnQtMi4xOTYtLjU3NmwtMjUuMzQ0LTEzLjgyNHEtMS4xMTYtLjYxMi0xLjc2NC0xLjY5MnQtLjY0OC0yLjM0di0yNy42NDhxMC0xLjQ0LjgyOC0yLjYyOHQyLjE5Ni0xLjY5MmwyNS4zNDQtOS4yMTZxLjc5Mi0uMjg4IDEuNTg0LS4yODh0MS41ODQuMjg4bDI1LjM0NCA5LjIxNnExLjM2OC41MDQgMi4xOTYgMS42OTJ0LjgyOCAyLjYyOHpcIixcIkNVQkVTXCI6XCJNMjMuMDQtNS42ODdsMTMuODI0LTYuOTEydi0xMS4zMDRsLTEzLjgyNCA1LjkwNHYxMi4zMTJ6bS0yLjMwNC0xNi4zNDRsMTQuNTQ0LTYuMjI4LTE0LjU0NC02LjIyOC0xNC41NDQgNi4yMjh6bTM5LjE2OCAxNi4zNDRsMTMuODI0LTYuOTEydi0xMS4zMDRsLTEzLjgyNCA1LjkwNHYxMi4zMTJ6bS0yLjMwNC0xNi4zNDRsMTQuNTQ0LTYuMjI4LTE0LjU0NC02LjIyOC0xNC41NDQgNi4yMjh6bS0xNi4xMjgtMTAuNTQ4bDEzLjgyNC01Ljk0di05LjU3NmwtMTMuODI0IDUuOTA0djkuNjEyem0tMi4zMDQtMTMuNjQ0bDE1Ljg3Ni02LjgwNC0xNS44NzYtNi44MDQtMTUuODc2IDYuODA0em0zOS4xNjggMTguNjQ4djE0Ljk3NnEwIDEuMjk2LS42ODQgMi40MTJ0LTEuODcyIDEuNjkybC0xNi4xMjggOC4wNjRxLS45LjUwNC0yLjA1Mi41MDR0LTIuMDUyLS41MDRsLTE2LjEyOC04LjA2NHEtLjE4LS4wNzItLjI1Mi0uMTQ0LS4wNzIuMDcyLS4yNTIuMTQ0bC0xNi4xMjggOC4wNjRxLS45LjUwNC0yLjA1Mi41MDR0LTIuMDUyLS41MDRsLTE2LjEyOC04LjA2NHEtMS4xODgtLjU3Ni0xLjg3Mi0xLjY5MnQtLjY4NC0yLjQxMnYtMTQuOTc2cTAtMS4zNjguNzc0LTIuNTJ0Mi4wMzQtMS43MjhsMTUuNjI0LTYuNjk2di0xNC40cTAtMS4zNjguNzc0LTIuNTJ0Mi4wMzQtMS43MjhsMTYuMTI4LTYuOTEycS44MjgtLjM2IDEuOC0uMzZ0MS44LjM2bDE2LjEyOCA2LjkxMnExLjI2LjU3NiAyLjAzNCAxLjcyOHQuNzc0IDIuNTJ2MTQuNGwxNS42MjQgNi42OTZxMS4yOTYuNTc2IDIuMDUyIDEuNzI4dC43NTYgMi41MnpcIixcIkJFSEFOQ0VcIjpcIk02Ni41MjgtNTIuMjM1aC0xOC4zOTZ2NC40NjRoMTguMzk2di00LjQ2NHptLTkuMDcyIDE1LjMzNnEtMy4yNCAwLTUuMjU2IDEuODl0LTIuMjMyIDUuMTNoMTQuNjg4cS0uNjQ4LTcuMDItNy4yLTcuMDJ6bS41NzYgMjEuMDZxMi4yNjggMCA0LjM5Mi0xLjE1MnQyLjczNi0zLjEzMmg3Ljk1NnEtMy42IDExLjA1Mi0xNS4zNzIgMTEuMDUyLTcuNzA0IDAtMTIuMjU4LTQuNzUydC00LjU1NC0xMi40OTJxMC03LjQ4OCA0LjY5OC0xMi40Mzh0MTIuMTE0LTQuOTVxNC45NjggMCA4LjY1OCAyLjQ0OHQ1LjUwOCA2LjQ0NCAxLjgxOCA4LjkyOHEwIC42MTItLjA3MiAxLjY5MmgtMjMuNjg4cTAgMy45OTYgMi4wNyA2LjE3NHQ1Ljk5NCAyLjE3OHptLTQ4LjA2LTEuOGgxMC42NTZxNy4zOCAwIDcuMzgtNi4wMTIgMC02LjQ4LTcuMTY0LTYuNDhoLTEwLjg3MnYxMi40OTJ6bTAtMTkuMzMyaDEwLjExNnEyLjgwOCAwIDQuNDQ2LTEuMzE0dDEuNjM4LTQuMDg2cTAtNS4xODQtNi44NC01LjE4NGgtOS4zNnYxMC41ODR6bS05Ljk3Mi0xOC4zMjRoMjEuMzg0cTMuMTMyIDAgNS41OC41MDR0NC41NTQgMS43MSAzLjI0IDMuNDc0IDEuMTM0IDUuNTQ0cTAgNi41MTYtNi4xOTIgOS40NjggNC4xMDQgMS4xNTIgNi4xOTIgNC4xNHQyLjA4OCA3LjM0NHEwIDIuNy0uODgyIDQuOTE0dC0yLjM3NiAzLjcyNi0zLjU0NiAyLjU1Ni00LjM1NiAxLjUxMi00LjgyNC40NjhoLTIxLjk5NnYtNDUuMzZ6XCIsXCJCRUhBTkNFX1NRVUFSRVwiOlwiTTQ0LjkyOC01OS44MzFxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2em0tMjYuOTY0IDEzLjIxMmgtMTMuMzU2djI4LjMzMmgxMy43NTJxNC4yMTIgMCA3LjA5Mi0yLjA3dDIuODgtNi4xMzhxMC01LjY4OC01LjE0OC03LjIgMy44NTItMS44NzIgMy44NTItNS45MDQgMC0yLjA1Mi0uNzAyLTMuNDc0dC0yLjAzNC0yLjE3OC0yLjg0NC0xLjA2Mi0zLjQ5Mi0uMzA2em0tLjc5MiAxMS40NDhoLTYuMzM2di02LjYyNGg1Ljg2OHE0LjI4NCAwIDQuMjg0IDMuMjQgMCAzLjM4NC0zLjgxNiAzLjM4NHptLjMyNCAxMi4wNmgtNi42NnYtNy44MTJoNi44MDRxNC40NjQgMCA0LjQ2NCA0LjA2OCAwIDMuNzQ0LTQuNjA4IDMuNzQ0em0yMy40IDEuMTUycS0yLjQ0OCAwLTMuNzQ0LTEuMzY4dC0xLjI5Ni0zLjg1MmgxNC43OTZxLjAzNi0uMzYuMDM2LTEuMDggMC00Ljc1Mi0yLjY4Mi03LjkzOHQtNy4zMjYtMy4xODZxLTQuNjA4IDAtNy41NiAzLjA5NnQtMi45NTIgNy43NzZxMCA0Ljg2IDIuODQ0IDcuODEydDcuNjY4IDIuOTUycTcuMzggMCA5LjYxMi02Ljg3NmgtNC45NjhxLS4zOTYgMS4yMjQtMS43MSAxLjk0NHQtMi43MTguNzJ6bS0uMzYtMTMuMTc2cTQuMDY4IDAgNC40NjQgNC4zOTJoLTkuMTQ0cS4xNDQtMi4wMTYgMS40MDQtMy4yMDR0My4yNzYtMS4xODh6bS01LjgzMi05LjU3NmgxMS40ODR2Mi43NzJoLTExLjQ4NHYtMi43NzJ6XCIsXCJTVEVBTVwiOlwiTTU2Ljk1Mi00My40ODdxMCAzLjYzNi0yLjU3NCA2LjIxdC02LjIxIDIuNTc0LTYuMjEtMi41NzQtMi41NzQtNi4yMSAyLjU3NC02LjIxIDYuMjEtMi41NzQgNi4yMSAyLjU3NCAyLjU3NCA2LjIxem0tMjcuNzIgMjYuNzEycTAtMy43NDQtMi42MjgtNi4zNzJ0LTYuMzcyLTIuNjI4cS0uOTcyIDAtMS45NDQuMjE2bDMuNzQ0IDEuNTEycTIuNzcyIDEuMTE2IDMuOTQyIDMuODM0dC4wNTQgNS40NTRxLTEuMTE2IDIuNzcyLTMuODUyIDMuOTI0dC01LjQ3Mi4wMzZxLS43NTYtLjI4OC0yLjIzMi0uODgydC0yLjE5Ni0uODgycTEuMTUyIDIuMTYgMy4yNzYgMy40NzR0NC42OCAxLjMxNHEzLjc0NCAwIDYuMzcyLTIuNjI4dDIuNjI4LTYuMzcyem0yOS44OC0yNi42NzZxMC00LjUzNi0zLjIyMi03Ljc1OHQtNy43NTgtMy4yMjJxLTQuNTcyIDAtNy43OTQgMy4yMjJ0LTMuMjIyIDcuNzU4cTAgNC41NzIgMy4yMjIgNy43NzZ0Ny43OTQgMy4yMDRxNC41MzYgMCA3Ljc1OC0zLjIwNHQzLjIyMi03Ljc3NnptNS40IDBxMCA2LjgwNC00LjgwNiAxMS41OTJ0LTExLjU3NCA0Ljc4OGwtMTUuNzMyIDExLjQ4NHEtLjQzMiA0LjY0NC0zLjkyNCA3Ljg0OHQtOC4yNDQgMy4yMDRxLTQuMzU2IDAtNy43MDQtMi43MzZ0LTQuMjQ4LTYuOTEybC04LjI4LTMuMzEydi0xNS40NDRsMTQuMDA0IDUuNjUycTIuODQ0LTEuNzI4IDYuMjI4LTEuNzI4LjQ2OCAwIDEuMjYuMDcybDEwLjIyNC0xNC42NTJxLjA3Mi02LjczMiA0Ljg3OC0xMS40ODR0MTEuNTM4LTQuNzUycTYuNzY4IDAgMTEuNTc0IDQuODA2dDQuODA2IDExLjU3NHpcIixcIlNURUFNX1NRVUFSRVwiOlwiTTQ0LjcxMi00MS4xNDdxMC0yLjg4LTIuMDUyLTQuOTE0dC00LjkzMi0yLjAzNC00LjkxNCAyLjA1Mi0yLjAzNCA0Ljg5NnEwIDIuODggMi4wMzQgNC45MTR0NC45MTQgMi4wMzQgNC45MzItMi4wMzQgMi4wNTItNC45MTR6bS0yMS45NiAyMS4xNjhxMCAyLjk4OC0yLjA4OCA1LjA1OHQtNS4wNCAyLjA3cS0yLjAxNiAwLTMuNzA4LTEuMDQ0dC0yLjU5Mi0yLjc3MnExLjg3Mi43MiAzLjUyOCAxLjQ0IDIuMTYuODY0IDQuMzItLjA1NHQzLjA2LTMuMTE0cS44NjQtMi4xNi0uMDU0LTQuMzJ0LTMuMTE0LTMuMDI0bC0yLjk1Mi0xLjE4OHEuNzkyLS4xOCAxLjUxMi0uMTggMi45NTIgMCA1LjA0IDIuMDd0Mi4wODggNS4wNTh6bTMyLjU0NC0yOS40ODR2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtNS41MDhsNi4xOTIgMi40ODRxLjcyIDMuMzEyIDMuMzY2IDUuNDcydDYuMDY2IDIuMTZxMy43NDQgMCA2LjUxNi0yLjUydDMuMTMyLTYuMjI4bDEyLjQyLTkuMDcycTUuNCAwIDkuMTk4LTMuNzk4dDMuNzk4LTkuMTYycTAtNS40LTMuNzk4LTkuMTk4dC05LjE5OC0zLjc5OHEtNS4zMjggMC05LjEwOCAzLjc2MnQtMy44NTIgOS4wOWwtOC4xIDExLjU5MnEtLjMyNC0uMDM2LTEuMDA4LS4wMzYtMi43IDAtNC45MzIgMS4zMzJsLTEwLjY5Mi00LjI4NHYtMTYuODQ4cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnptLTguODkyIDguMzg4cTAgMy42LTIuNTU2IDYuMTM4dC02LjE1NiAyLjUzOC02LjEzOC0yLjUzOC0yLjUzOC02LjEzOCAyLjUzOC02LjE1NiA2LjEzOC0yLjU1NnEzLjYzNiAwIDYuMTc0IDIuNTM4dDIuNTM4IDYuMTc0elwiLFwiUkVDWUNMRVwiOlwiTTMwLjA5Ni0yMi4zNTVsLS41NCAxMy4yNDgtLjA3Mi43OTItMTUuMTItMS4wNDRxLTEuMjk2LS4xMDgtMi40MTItMS4xMzR0LTEuNjkyLTIuMzU4cS0uMzk2LS45NzItLjUyMi0xLjk4dC4xNDQtMi4zNC40MzItMS45OC43NzQtMi4zMDQuNjg0LTEuOTA4cTIuODA4LjQzMiAxOC4zMjQgMS4wMDh6bS0xMy45MzItMjEuMDk2bDYuNDggMTMuNjQ0LTUuMjkyLTMuMzEycS0yLjI2OCAyLjU5Mi00LjAxNCA1LjIwMnQtMi42MSA0LjUtMS40MjIgMy40MDItLjY2NiAyLjI2OGwtLjE0NC43NTYtNi44NC0xMi44NTJxLS42MTItLjkzNi0uNjQ4LTIuMDE2dC4yMTYtMS42OTJsLjI4OC0uNjQ4cTEuMjYtMi4yNjggNC4xMDQtNi43NjhsLTUuMDQtMy4wOTZ6bTQ0LjMxNiAxOC42MTJsLTYuNzY4IDEyLjkyNHEtLjQzMiAxLjA0NC0xLjMxNCAxLjY3NHQtMS41NjYuNzM4bC0uNjQ4LjE0NHEtMi41NTYuMjUyLTcuODg0LjQzMmwuMjg4IDUuOTA0LTguMjgtMTMuMjEyIDcuNTk2LTEzLjAzMi4yNTIgNi4yMjhxNi4xMi41NzYgMTAuMTg4LjE4dDYuMTItMS4xODh6bS0yOC4yNi0zMy4yNjRxLTEuNjkyIDIuMjY4LTkuNTQgMTUuNjZsLTExLjQxMi02LjczMi0uNjg0LS40MzIgOC4xLTEyLjgxNnEuNzItMS4xMTYgMi4xNi0xLjYydDIuODgtLjM2cS44NjQuMDcyIDEuNzQ2LjQzMnQxLjUxMi43NTYgMS40OTQgMS4xODggMS4yOTYgMS4yNDIgMS4yOTYgMS40MjIgMS4xNTIgMS4yNnptMjMuNTggMTEuMDUybDcuNjMyIDEzLjA2OHEuNjQ4IDEuMzMyLjQ1IDIuNzM2dC0uOTkgMi42NjRxLS40NjguNzItMS4xODggMS4zMzJ0LTEuMzY4IDEuMDA4LTEuNzQ2Ljc5Mi0xLjY5Mi41NzYtMS44NTQuNTA0LTEuNjU2LjQzMnEtMS4yMjQtMi41OTItOS41NC0xNS42OTZsMTEuMjY4LTcuMDJ6bS01LjE0OC04LjEzNmw1LjExMi0yLjk4OC03LjkyIDEzLjQyOC0xNS4wODQtLjcyIDUuNDM2LTMuMDk2cS0xLjIyNC0zLjIwNC0yLjctNS45NzZ0LTIuNzE4LTQuNDQ2LTIuMzIyLTIuODgtMS42OTItMS42NzRsLS42MTItLjQ2OCAxNC41OC4wMzZxMS4xMTYtLjEwOCAyLjA4OC4zNzh0MS40MDQgMS4wMjZsLjM5Ni41NHExLjQwNCAyLjE5NiA0LjAzMiA2Ljg0elwiLFwiQ0FSXCI6XCJNMTcuMjgtMjUuMjcxcTAtMi4zNzYtMS42OTItNC4wNjh0LTQuMDY4LTEuNjkyLTQuMDY4IDEuNjkyLTEuNjkyIDQuMDY4IDEuNjkyIDQuMDY4IDQuMDY4IDEuNjkyIDQuMDY4LTEuNjkyIDEuNjkyLTQuMDY4em0xLjI5Ni0xMS41MmgzNi41NzZsLTMuMjA0LTEyLjg1MnEtLjA3Mi0uMjg4LS41MDQtLjYzdC0uNzU2LS4zNDJoLTI3LjY0OHEtLjMyNCAwLS43NTYuMzQydC0uNTA0LjYzem00OS4zOTIgMTEuNTJxMC0yLjM3Ni0xLjY5Mi00LjA2OHQtNC4wNjgtMS42OTItNC4wNjggMS42OTItMS42OTIgNC4wNjggMS42OTIgNC4wNjggNC4wNjggMS42OTIgNC4wNjgtMS42OTIgMS42OTItNC4wNjh6bTUuNzYtMy40NTZ2MTMuODI0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTMuNDU2djQuNjA4cTAgMi44OC0yLjAxNiA0Ljg5NnQtNC44OTYgMi4wMTYtNC44OTYtMi4wMTYtMi4wMTYtNC44OTZ2LTQuNjA4aC0zNi44NjR2NC42MDhxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NnYtNC42MDhoLTMuNDU2cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTEzLjgyNHEwLTMuMzQ4IDIuMzU4LTUuNzA2dDUuNzA2LTIuMzU4aDEuMDA4bDMuNzgtMTUuMDg0cS44MjgtMy4zODQgMy43NDQtNS42N3Q2LjQ0NC0yLjI4NmgyNy42NDhxMy41MjggMCA2LjQ0NCAyLjI4NnQzLjc0NCA1LjY3bDMuNzggMTUuMDg0aDEuMDA4cTMuMzQ4IDAgNS43MDYgMi4zNTh0Mi4zNTggNS43MDZ6XCIsXCJUQVhJXCI6XCJNNjUuNjY0LTMyLjE4M3EzLjM0OCAwIDUuNzA2IDIuMzU4dDIuMzU4IDUuNzA2djEzLjgyNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0zLjQ1NnYyLjMwNHEwIDIuODgtMi4wMTYgNC44OTZ0LTQuODk2IDIuMDE2LTQuODk2LTIuMDE2LTIuMDE2LTQuODk2di0yLjMwNGgtMzYuODY0djIuMzA0cTAgMi44OC0yLjAxNiA0Ljg5NnQtNC44OTYgMi4wMTYtNC44OTYtMi4wMTYtMi4wMTYtNC44OTZ2LTIuMzA0aC0zLjQ1NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0xMy44MjRxMC0zLjM0OCAyLjM1OC01LjcwNnQ1LjcwNi0yLjM1OGgxLjAwOGwzLjc4LTE1LjA4NHEuODI4LTMuMzg0IDMuNzQ0LTUuNjd0Ni40NDQtMi4yODZoNC42MDh2LTguMDY0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTYuMTI4cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY4LjA2NGg0LjYwOHEzLjUyOCAwIDYuNDQ0IDIuMjg2dDMuNzQ0IDUuNjdsMy43OCAxNS4wODRoMS4wMDh6bS01NC4xNDQgMTcuMjhxMi4zNzYgMCA0LjA2OC0xLjY5MnQxLjY5Mi00LjA2OC0xLjY5Mi00LjA2OC00LjA2OC0xLjY5Mi00LjA2OCAxLjY5Mi0xLjY5MiA0LjA2OCAxLjY5MiA0LjA2OCA0LjA2OCAxLjY5MnptNy4wNTYtMTcuMjhoMzYuNTc2bC0zLjIwNC0xMi44NTJxLS4wNzItLjI4OC0uNTA0LS42M3QtLjc1Ni0uMzQyaC0yNy42NDhxLS4zMjQgMC0uNzU2LjM0MnQtLjUwNC42M3ptNDMuNjMyIDE3LjI4cTIuMzc2IDAgNC4wNjgtMS42OTJ0MS42OTItNC4wNjgtMS42OTItNC4wNjgtNC4wNjgtMS42OTItNC4wNjggMS42OTItMS42OTIgNC4wNjggMS42OTIgNC4wNjggNC4wNjggMS42OTJ6XCIsXCJUUkVFXCI6XCJNNTQuMTQ0LTExLjQ0N3EwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMTYuNjMycS4wMzYuNjEyLjIxNiAzLjE1dC4xOCAzLjkwNnEwIC45LS42NDggMS41M3QtMS41NDguNjNoLTExLjUycS0uOSAwLTEuNTQ4LS42M3QtLjY0OC0xLjUzcTAtMS4zNjguMTgtMy45MDZ0LjIxNi0zLjE1aC0xNi42MzJxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42Mi42ODQtMS42MmwxNC40NzItMTQuNTA4aC04LjI0NHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYyLjY4NC0xLjYybDE0LjQ3Mi0xNC41MDhoLTcuMDkycS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjIuNjg0LTEuNjJsMTMuODI0LTEzLjgyNHEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDEzLjgyNCAxMy44MjRxLjY4NC42ODQuNjg0IDEuNjJ0LS42ODQgMS42Mi0xLjYyLjY4NGgtNy4wOTJsMTQuNDcyIDE0LjUwOHEuNjg0LjY4NC42ODQgMS42MnQtLjY4NCAxLjYyLTEuNjIuNjg0aC04LjI0NGwxNC40NzIgMTQuNTA4cS42ODQuNjg0LjY4NCAxLjYyelwiLFwiU1BPVElGWVwiOlwiTTQwLjU3Mi0yMC44NzlxMC0xLjE1Mi0xLjA4LTEuODM2LTYuOTQ4LTQuMTQtMTYuMDkyLTQuMTQtNC43ODggMC0xMC4zMzIgMS4yMjQtMS41MTIuMzI0LTEuNTEyIDEuODcyIDAgLjcyLjQ4NiAxLjI0MnQxLjI3OC41MjJxLjE4IDAgMS4zMzItLjI4OCA0Ljc1Mi0uOTcyIDguNzQ4LS45NzIgOC4xMzYgMCAxNC4yOTIgMy43MDguNjg0LjM5NiAxLjE4OC4zOTYuNjg0IDAgMS4xODgtLjQ4NnQuNTA0LTEuMjQyem0zLjQ1Ni03Ljc0cTAtMS40NC0xLjI2LTIuMTk2LTguNTMyLTUuMDc2LTE5LjcyOC01LjA3Ni01LjUwOCAwLTEwLjkwOCAxLjUxMi0xLjcyOC40NjgtMS43MjggMi4zMDQgMCAuOS42MyAxLjUzdDEuNTMuNjNxLjI1MiAwIDEuMzMyLS4yODggNC4zOTItMS4xODggOS4wMzYtMS4xODggMTAuMDQ0IDAgMTcuNTY4IDQuNDY0Ljg2NC40NjggMS4zNjguNDY4LjkgMCAxLjUzLS42M3QuNjMtMS41M3ptMy44ODgtOC45MjhxMC0xLjY5Mi0xLjQ0LTIuNTItNC41MzYtMi42MjgtMTAuNTQ4LTMuOTc4dC0xMi4zNDgtMS4zNXEtNy4zNDQgMC0xMy4xMDQgMS42OTItLjgyOC4yNTItMS4zODYuOTE4dC0uNTU4IDEuNzQ2cTAgMS4xMTYuNzM4IDEuODcydDEuODU0Ljc1NnEuMzk2IDAgMS40NC0uMjg4IDQuNzg4LTEuMzMyIDExLjA1Mi0xLjMzMiA1LjcyNCAwIDExLjE0MiAxLjIyNHQ5LjEyNiAzLjQycS43NTYuNDMyIDEuNDQuNDMyIDEuMDQ0IDAgMS44MTgtLjczOHQuNzc0LTEuODU0em03LjM4IDUuMzY0cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkRFVklBTlRBUlRcIjpcIk0zNi44NjQtNTMuNTMxbC0xMC45MDggMjAuOTUyLjg2NCAxLjExNmgxMC4wNDR2MTQuOTRoLTE4LjI1MmwtMS41ODQgMS4wOC01LjExMiA5LjgyOC0xLjA4IDEuMDhoLTEwLjgzNnYtMTAuOTA4bDEwLjkwOC0yMC45ODgtLjg2NC0xLjA4aC0xMC4wNDR2LTE0Ljk0aDE4LjI1MmwxLjU4NC0xLjA4IDUuMTEyLTkuODI4IDEuMDgtMS4wOGgxMC44MzZ2MTAuOTA4elwiLFwiU09VTkRDTE9VRFwiOlwiTTI4LjIyNC0xNS4wNDdsLjU3Ni04LjY3Ni0uNTc2LTE4LjgyOHEtLjAzNi0uMzYtLjI3LS42MTJ0LS41OTQtLjI1MnEtLjMyNCAwLS41NzYuMjUydC0uMjUyLjYxMmwtLjUwNCAxOC44MjguNTA0IDguNjc2cS4wMzYuMzYuMjcuNTk0dC41NTguMjM0cS43OTIgMCAuODY0LS44Mjh6bTEwLjY1Ni0xLjA0NGwuMzk2LTcuNTk2LS40MzItMjEuMDk2cTAtLjU3Ni0uNDY4LS44NjQtLjI4OC0uMTgtLjU3Ni0uMTh0LS41NzYuMThxLS40NjguMjg4LS40NjguODY0bC0uMDM2LjIxNi0uMzYgMjAuODQ0cTAgLjAzNi4zOTYgOC40OTZ2LjAzNnEwIC4zNi4yMTYuNjEyLjMyNC4zOTYuODI4LjM5Ni4zOTYgMCAuNzItLjMyNC4zMjQtLjI1Mi4zMjQtLjcyem0tMzcuNjItMTIuMjRsLjcyIDQuNjA4LS43MiA0LjUzNnEtLjA3Mi4zMjQtLjMyNC4zMjR0LS4zMjQtLjMyNGwtLjYxMi00LjUzNi42MTItNC42MDhxLjA3Mi0uMzI0LjMyNC0uMzI0dC4zMjQuMzI0em0zLjA5Ni0yLjg0NGwuOTM2IDcuNDUyLS45MzYgNy4zMDhxLS4wNzIuMzI0LS4zNi4zMjQtLjMyNCAwLS4zMjQtLjM2bC0uODI4LTcuMjcyLjgyOC03LjQ1MnEwLS4zMjQuMzI0LS4zMjQuMjg4IDAgLjM2LjMyNHptMTAuMDggMTYuMzA4em0tNi43NjgtMTcuNjc2bC45IDguODItLjkgOC41MzJxMCAuMzk2LS4zOTYuMzk2LS4zNiAwLS40MzItLjM5NmwtLjc1Ni04LjUzMi43NTYtOC44MnEuMDcyLS40MzIuNDMyLS40MzIuMzk2IDAgLjM5Ni40MzJ6bTMuMzg0LS4yNTJsLjgyOCA5LjA3Mi0uODI4IDguNzg0cS0uMDcyLjQ2OC0uNTA0LjQ2OC0uNDY4IDAtLjQ2OC0uNDY4bC0uNzU2LTguNzg0Ljc1Ni05LjA3MnEwLS40NjguNDY4LS40NjguNDMyIDAgLjUwNC40Njh6bTMuMzg0LjY0OGwuNzU2IDguNDI0LS43NTYgOC44NTZxLS4wNzIuNTc2LS41NzYuNTc2LS4yMTYgMC0uMzc4LS4xNjJ0LS4xNjItLjQxNGwtLjcyLTguODU2LjcyLTguNDI0cTAtLjIxNi4xNjItLjM3OHQuMzc4LS4xNjJxLjUwNCAwIC41NzYuNTR6bTEzLjc4OCAxNy4xem0tMTAuNDA0LTIyLjM1NmwuNzU2IDEzLjY4LS43NTYgOC44NTZxMCAuMjUyLS4xOC40NXQtLjQzMi4xOThxLS41NzYgMC0uNjQ4LS42NDhsLS42NDgtOC44NTYuNjQ4LTEzLjY4cS4wNzItLjY0OC42NDgtLjY0OC4yNTIgMCAuNDMyLjE5OHQuMTguNDV6bTMuMzg0LTMuMDk2bC42ODQgMTYuODQ4LS42ODQgOC43ODRxMCAuMjg4LS4xOTguNDg2dC0uNDg2LjE5OHEtLjY0OCAwLS43Mi0uNjg0bC0uNTc2LTguNzg0LjU3Ni0xNi44NDhxLjA3Mi0uNjg0LjcyLS42ODQuMjg4IDAgLjQ4Ni4xOTh0LjE5OC40ODZ6bTMuNTI4LTEuNDRsLjY0OCAxOC4yMTYtLjY0OCA4LjcxMnEtLjA3Mi43NTYtLjc5Mi43NTYtLjY4NCAwLS43NTYtLjc1NmwtLjU3Ni04LjcxMi41NzYtMTguMjE2cTAtLjMyNC4yMzQtLjU1OHQuNTIyLS4yMzRxLjMyNCAwIC41NC4yMzR0LjI1Mi41NTh6bTE0LjExMiAyNi43MTJ6bS03LjEyOC0yNi44NTZsLjU0IDE4LjM2LS41NCA4LjYwNHEwIC4zNi0uMjcuNjN0LS42My4yNy0uNjEyLS4yNTItLjI4OC0uNjQ4bC0uNTA0LTguNjA0LjUwNC0xOC4zNnEwLS4zOTYuMjctLjY0OHQuNjMtLjI1Mi42My4yNTIuMjcuNjQ4em0zLjU2NC42ODRsLjUwNCAxNy43MTItLjUwNCA4LjQ5NnEwIC4zOTYtLjI4OC42ODR0LS42ODQuMjg4LS42ODQtLjI4OC0uMzI0LS42ODRsLS40MzItOC40OTYuNDMyLTE3LjcxMnEuMDM2LS40MzIuMzI0LS43MnQuNjg0LS4yODguNjY2LjI4OC4zMDYuNzJ6bTcuNjMyIDE3LjcxMmwtLjUwNCA4LjMxNnEwIC40NjgtLjMyNC43OTJ0LS43OTIuMzI0LS43OTItLjMyNC0uMzYtLjc5MmwtLjIxNi00LjEwNC0uMjE2LTQuMjEyLjQzMi0yMi44OTZ2LS4xMDhxLjA3Mi0uNTQuNDMyLS44NjQuMzI0LS4yNTIuNzItLjI1Mi4yODggMCAuNTQuMTguNTA0LjI4OC41NzYuOTM2em00MC4wMzItLjY4NHEwIDQuMjEyLTIuOTg4IDcuMTgydC03LjIgMi45N2gtMjguMjk2cS0uNDY4LS4wNzItLjc5Mi0uMzk2dC0uMzI0LS43OTJ2LTMyLjM2NHEwLS44MjggMS4wMDgtMS4xODggMy4wNi0xLjIyNCA2LjUxNi0xLjIyNCA3LjAyIDAgMTIuMTY4IDQuNzM0dDUuNzYgMTEuNjQ2cTEuOTA4LS43OTIgMy45Ni0uNzkyIDQuMjEyIDAgNy4yIDIuOTg4dDIuOTg4IDcuMjM2elwiLFwiREFUQUJBU0VcIjpcIk0yNy42NDgtMzYuNzkxcTguNTMyIDAgMTUuOTQ4LTEuNTQ4dDExLjctNC41NzJ2Ni4xMnEwIDIuNDg0LTMuNzA4IDQuNjA4dC0xMC4wOCAzLjM2Ni0xMy44NiAxLjI0Mi0xMy44Ni0xLjI0Mi0xMC4wOC0zLjM2Ni0zLjcwOC00LjYwOHYtNi4xMnE0LjI4NCAzLjAyNCAxMS43IDQuNTcydDE1Ljk0OCAxLjU0OHptMCAyNy42NDhxOC41MzIgMCAxNS45NDgtMS41NDh0MTEuNy00LjU3MnY2LjEycTAgMi40ODQtMy43MDggNC42MDh0LTEwLjA4IDMuMzY2LTEzLjg2IDEuMjQyLTEzLjg2LTEuMjQyLTEwLjA4LTMuMzY2LTMuNzA4LTQuNjA4di02LjEycTQuMjg0IDMuMDI0IDExLjcgNC41NzJ0MTUuOTQ4IDEuNTQ4em0wLTEzLjgyNHE4LjUzMiAwIDE1Ljk0OC0xLjU0OHQxMS43LTQuNTcydjYuMTJxMCAyLjQ4NC0zLjcwOCA0LjYwOHQtMTAuMDggMy4zNjYtMTMuODYgMS4yNDItMTMuODYtMS4yNDItMTAuMDgtMy4zNjYtMy43MDgtNC42MDh2LTYuMTJxNC4yODQgMy4wMjQgMTEuNyA0LjU3MnQxNS45NDggMS41NDh6bTAtNDEuNDcycTcuNDg4IDAgMTMuODYgMS4yNDJ0MTAuMDggMy4zNjYgMy43MDggNC42MDh2NC42MDhxMCAyLjQ4NC0zLjcwOCA0LjYwOHQtMTAuMDggMy4zNjYtMTMuODYgMS4yNDItMTMuODYtMS4yNDItMTAuMDgtMy4zNjYtMy43MDgtNC42MDh2LTQuNjA4cTAtMi40ODQgMy43MDgtNC42MDh0MTAuMDgtMy4zNjYgMTMuODYtMS4yNDJ6XCIsXCJGSUxFX1BERl9PXCI6XCJNNTIuODQ4LTUwLjc1OXExLjAwOCAxLjAwOCAxLjcyOCAyLjczNnQuNzIgMy4xNjh2NDEuNDcycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTQ4LjM4NHEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNTcuNnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMzIuMjU2cTEuNDQgMCAzLjE2OC43MnQyLjczNiAxLjcyOHptLTE1Ljk4NC04Ljc4NHYxMy41MzZoMTMuNTM2cS0uMzYtMS4wNDQtLjc5Mi0xLjQ3NmwtMTEuMjY4LTExLjI2OHEtLjQzMi0uNDMyLTEuNDc2LS43OTJ6bTEzLjgyNCA1NS4wMDh2LTM2Ljg2NGgtMTQuOTc2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di0xNC45NzZoLTI3LjY0OHY1NS4yOTZoNDYuMDh6bS0xOC41MDQtMjEuMzQ4cTEuMTg4LjkzNiAzLjAyNCAyLjAxNiAyLjEyNC0uMjUyIDQuMjEyLS4yNTIgNS4yOTIgMCA2LjM3MiAxLjc2NC41NzYuNzkyLjA3MiAxLjg3MmwtLjAzNi4wNzItLjA3Mi4wNzJ2LjAzNnEtLjIxNiAxLjM2OC0yLjU1NiAxLjM2OC0xLjcyOCAwLTQuMTQtLjcydC00LjY4LTEuOTA4cS03Ljk1Ni44NjQtMTQuMTEyIDIuOTg4LTUuNTA4IDkuNDMyLTguNzEyIDkuNDMyLS41NCAwLTEuMDA4LS4yNTJsLS44NjQtLjQzMi0uMjE2LS4xOHEtLjM2LS4zNi0uMjE2LTEuMjk2LjMyNC0xLjQ0IDIuMDE2LTMuMjk0dDQuNzUyLTMuNDc0cS41MDQtLjMyNC44MjguMjE2LjA3Mi4wNzIuMDcyLjE0NCAxLjg3Mi0zLjA2IDMuODUyLTcuMDkyIDIuNDQ4LTQuODk2IDMuNzQ0LTkuNDMyLS44NjQtMi45NTItMS4wOTgtNS43NDJ0LjIzNC00LjU5cS4zOTYtMS40NCAxLjUxMi0xLjQ0aC43OTJxLjgyOCAwIDEuMjYuNTQuNjQ4Ljc1Ni4zMjQgMi40NDgtLjA3Mi4yMTYtLjE0NC4yODguMDM2LjEwOC4wMzYuMjg4djEuMDhxLS4wNzIgNC40MjgtLjUwNCA2LjkxMiAxLjk4IDUuOTA0IDUuMjU2IDguNTY4em0tMjAuNzM2IDE0Ljc5NnExLjg3Mi0uODY0IDQuOTMyLTUuNjg4LTEuODM2IDEuNDQtMy4xNSAzLjAyNHQtMS43ODIgMi42NjR6bTE0LjMyOC0zMy4xMnEtLjU0IDEuNTEyLS4wNzIgNC43NTIuMDM2LS4yNTIuMjUyLTEuNTg0IDAtLjEwOC4yNTItMS41NDguMDM2LS4xNDQuMTQ0LS4yODhsLS4wMzYtLjA3Mi0uMDE4LS4wNTQtLjAxOC0uMDU0cS0uMDM2LS43OTItLjQ2OC0xLjI5NmwtLjAzNi4wNzJ2LjA3MnptLTQuNDY0IDIzLjc5NnE0Ljg2LTEuOTQ0IDEwLjIyNC0yLjkxNi0uMDcyLS4wMzYtLjQ2OC0uMzQydC0uNTc2LS40ODZxLTIuNzM2LTIuNDEyLTQuNTcyLTYuMzM2LS45NzIgMy4wOTYtMi45ODggNy4wOTItMS4wOCAyLjAxNi0xLjYyIDIuOTg4em0yMy4yNTYtLjU3NnEtLjg2NC0uODY0LTUuMDQtLjg2NCAyLjczNiAxLjAwOCA0LjQ2NCAxLjAwOC41MDQgMCAuNjQ4LS4wMzZsLS4wNzItLjEwOHpcIixcIkZJTEVfV09SRF9PXCI6XCJNNTIuODQ4LTUwLjc1OXExLjAwOCAxLjAwOCAxLjcyOCAyLjczNnQuNzIgMy4xNjh2NDEuNDcycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTQ4LjM4NHEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNTcuNnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMzIuMjU2cTEuNDQgMCAzLjE2OC43MnQyLjczNiAxLjcyOHptLTE1Ljk4NC04Ljc4NHYxMy41MzZoMTMuNTM2cS0uMzYtMS4wNDQtLjc5Mi0xLjQ3NmwtMTEuMjY4LTExLjI2OHEtLjQzMi0uNDMyLTEuNDc2LS43OTJ6bTEzLjgyNCA1NS4wMDh2LTM2Ljg2NGgtMTQuOTc2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di0xNC45NzZoLTI3LjY0OHY1NS4yOTZoNDYuMDh6bS00Mi4zLTMyLjI1NnYzLjg1MmgyLjUybDUuOTA0IDIzLjc5Nmg1LjcyNGw0LjYwOC0xNy40NnEuMjUyLS43Mi4zNi0xLjY1Ni4wNzItLjU3Ni4wNzItLjg2NGguMTQ0bC4xMDguODY0cS4wMzYuMTA4LjEyNi43MnQuMTk4LjkzNmw0LjYwOCAxNy40Nmg1LjcyNGw1LjkwNC0yMy43OTZoMi41MnYtMy44NTJoLTEwLjh2My44NTJoMy4yNGwtMy41NjQgMTUuNzY4cS0uMTguNzItLjI1MiAxLjY1NmwtLjA3Mi43NTZoLS4xNDRsLS4xMDgtLjc1NnEtLjAzNi0uMTgtLjE0NC0uNzU2dC0uMTgtLjlsLTUuMTg0LTE5LjYyaC00LjEwNGwtNS4xODQgMTkuNjJxLS4wNzIuMzI0LS4xNjIuODgydC0uMTI2Ljc3NGwtLjE0NC43NTZoLS4xNDRsLS4wNzItLjc1NnEtLjA3Mi0uOTM2LS4yNTItMS42NTZsLTMuNTY0LTE1Ljc2OGgzLjI0di0zLjg1MmgtMTAuOHpcIixcIkZJTEVfRVhDRUxfT1wiOlwiTTUyLjg0OC01MC43NTlxMS4wMDggMS4wMDggMS43MjggMi43MzZ0LjcyIDMuMTY4djQxLjQ3MnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC00OC4zODRxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTU3LjZxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDMyLjI1NnExLjQ0IDAgMy4xNjguNzJ0Mi43MzYgMS43Mjh6bS0xNS45ODQtOC43ODR2MTMuNTM2aDEzLjUzNnEtLjM2LTEuMDQ0LS43OTItMS40NzZsLTExLjI2OC0xMS4yNjhxLS40MzItLjQzMi0xLjQ3Ni0uNzkyem0xMy44MjQgNTUuMDA4di0zNi44NjRoLTE0Ljk3NnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMTQuOTc2aC0yNy42NDh2NTUuMjk2aDQ2LjA4em0tMzUuMjQ0LTguNDI0djMuODE2aDEwLjExNnYtMy44MTZoLTIuN2wzLjcwOC01Ljc5NnEuMTgtLjI1Mi4zNi0uNTk0dC4yNy0uNDg2LjEyNi0uMTQ0aC4wNzJxLjAzNi4xNDQuMTguMzYuMDcyLjE0NC4xNjIuMjd0LjIxNi4yODguMjM0LjMwNmwzLjg1MiA1Ljc5NmgtMi43MzZ2My44MTZoMTAuNDc2di0zLjgxNmgtMi40NDhsLTYuOTEyLTkuODI4IDcuMDItMTAuMTUyaDIuNDEydi0zLjg1MmgtMTAuMDQ0djMuODUyaDIuNjY0bC0zLjcwOCA1LjcyNHEtLjE0NC4yNTItLjM2LjU5NHQtLjMyNC40ODZsLS4wNzIuMTA4aC0uMDcycS0uMDM2LS4xNDQtLjE4LS4zNi0uMjE2LS4zOTYtLjYxMi0uODI4bC0zLjgxNi01LjcyNGgyLjczNnYtMy44NTJoLTEwLjQ0djMuODUyaDIuNDQ4bDYuODA0IDkuNzkyLTYuOTg0IDEwLjE4OGgtMi40NDh6XCIsXCJGSUxFX1BPV0VSUE9JTlRfT1wiOlwiTTUyLjg0OC01MC43NTlxMS4wMDggMS4wMDggMS43MjggMi43MzZ0LjcyIDMuMTY4djQxLjQ3MnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC00OC4zODRxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTU3LjZxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDMyLjI1NnExLjQ0IDAgMy4xNjguNzJ0Mi43MzYgMS43Mjh6bS0xNS45ODQtOC43ODR2MTMuNTM2aDEzLjUzNnEtLjM2LTEuMDQ0LS43OTItMS40NzZsLTExLjI2OC0xMS4yNjhxLS40MzItLjQzMi0xLjQ3Ni0uNzkyem0xMy44MjQgNTUuMDA4di0zNi44NjRoLTE0Ljk3NnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMTQuOTc2aC0yNy42NDh2NTUuMjk2aDQ2LjA4em0tMzUuNzEyLTguNDI0djMuODE2aDExLjc3MnYtMy44MTZoLTMuMzQ4di02LjAxMmg0LjkzMnEyLjczNiAwIDQuMjQ4LS41NCAyLjQxMi0uODI4IDMuODM0LTMuMTMydDEuNDIyLTUuMjU2cTAtMi45MTYtMS4zMzItNS4wNzZ0LTMuNi0zLjEzMnEtMS43MjgtLjY4NC00LjY4LS42ODRoLTEzLjI0OHYzLjg1MmgzLjMxMnYxOS45OGgtMy4zMTJ6bTEyLjcwOC0xMC4wOGgtNC4yODR2LTkuNjQ4aDQuMzJxMS44NzIgMCAyLjk4OC42NDggMi4wMTYgMS4xODggMi4wMTYgNC4xNCAwIDMuMjA0LTIuMjMyIDQuMzItMS4xMTYuNTQtMi44MDguNTR6XCIsXCJGSUxFX1BJQ1RVUkVfT1wiOlwiTTUyLjg0OC01MC43NTlxMS4wMDggMS4wMDggMS43MjggMi43MzZ0LjcyIDMuMTY4djQxLjQ3MnEwIDEuNDQtMS4wMDggMi40NDh0LTIuNDQ4IDEuMDA4aC00OC4zODRxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTU3LjZxMC0xLjQ0IDEuMDA4LTIuNDQ4dDIuNDQ4LTEuMDA4aDMyLjI1NnExLjQ0IDAgMy4xNjguNzJ0Mi43MzYgMS43Mjh6bS0xNS45ODQtOC43ODR2MTMuNTM2aDEzLjUzNnEtLjM2LTEuMDQ0LS43OTItMS40NzZsLTExLjI2OC0xMS4yNjhxLS40MzItLjQzMi0xLjQ3Ni0uNzkyem0xMy44MjQgNTUuMDA4di0zNi44NjRoLTE0Ljk3NnEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtMTQuOTc2aC0yNy42NDh2NTUuMjk2aDQ2LjA4em0tNC42MDgtMTYuMTI4djExLjUyaC0zNi44NjR2LTYuOTEybDYuOTEyLTYuOTEyIDQuNjA4IDQuNjA4IDEzLjgyNC0xMy44MjR6bS0yOS45NTItNi45MTJxLTIuODggMC00Ljg5Ni0yLjAxNnQtMi4wMTYtNC44OTYgMi4wMTYtNC44OTYgNC44OTYtMi4wMTYgNC44OTYgMi4wMTYgMi4wMTYgNC44OTYtMi4wMTYgNC44OTYtNC44OTYgMi4wMTZ6XCIsXCJGSUxFX1pJUF9PXCI6XCJNMjMuMDQtNTAuNjE1di00LjYwOGgtNC42MDh2NC42MDhoNC42MDh6bTQuNjA4IDQuNjA4di00LjYwOGgtNC42MDh2NC42MDhoNC42MDh6bS00LjYwOCA0LjYwOHYtNC42MDhoLTQuNjA4djQuNjA4aDQuNjA4em00LjYwOCA0LjYwOHYtNC42MDhoLTQuNjA4djQuNjA4aDQuNjA4em0yNS4yLTEzLjk2OHExLjAwOCAxLjAwOCAxLjcyOCAyLjczNnQuNzIgMy4xNjh2NDEuNDcycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTQ4LjM4NHEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNTcuNnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMzIuMjU2cTEuNDQgMCAzLjE2OC43MnQyLjczNiAxLjcyOHptLTE1Ljk4NC04Ljc4NHYxMy41MzZoMTMuNTM2cS0uMzYtMS4wNDQtLjc5Mi0xLjQ3NmwtMTEuMjY4LTExLjI2OHEtLjQzMi0uNDMyLTEuNDc2LS43OTJ6bTEzLjgyNCA1NS4wMDh2LTM2Ljg2NGgtMTQuOTc2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di0xNC45NzZoLTQuNjA4djQuNjA4aC00LjYwOHYtNC42MDhoLTE4LjQzMnY1NS4yOTZoNDYuMDh6bS0yMi41NzItMjUuOTU2bDMuODUyIDEyLjU2NHEuMjg4Ljk3Mi4yODggMS44NzIgMCAyLjk4OC0yLjYxIDQuOTV0LTYuNjA2IDEuOTYyLTYuNjA2LTEuOTYyLTIuNjEtNC45NXEwLS45LjI4OC0xLjg3Mi43NTYtMi4yNjggNC4zMi0xNC4yNTZ2LTQuNjA4aDQuNjA4djQuNjA4aDIuODQ0cS43OTIgMCAxLjQwNC40Njh0LjgyOCAxLjIyNHptLTUuMDc2IDE2Ljc0cTEuOTA4IDAgMy4yNTgtLjY4NHQxLjM1LTEuNjItMS4zNS0xLjYyLTMuMjU4LS42ODQtMy4yNTguNjg0LTEuMzUgMS42MiAxLjM1IDEuNjIgMy4yNTguNjg0elwiLFwiRklMRV9TT1VORF9PXCI6XCJNNTIuODQ4LTUwLjc1OXExLjAwOCAxLjAwOCAxLjcyOCAyLjczNnQuNzIgMy4xNjh2NDEuNDcycTAgMS40NC0xLjAwOCAyLjQ0OHQtMi40NDggMS4wMDhoLTQ4LjM4NHEtMS40NCAwLTIuNDQ4LTEuMDA4dC0xLjAwOC0yLjQ0OHYtNTcuNnEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoMzIuMjU2cTEuNDQgMCAzLjE2OC43MnQyLjczNiAxLjcyOHptLTE1Ljk4NC04Ljc4NHYxMy41MzZoMTMuNTM2cS0uMzYtMS4wNDQtLjc5Mi0xLjQ3NmwtMTEuMjY4LTExLjI2OHEtLjQzMi0uNDMyLTEuNDc2LS43OTJ6bTEzLjgyNCA1NS4wMDh2LTM2Ljg2NGgtMTQuOTc2cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di0xNC45NzZoLTI3LjY0OHY1NS4yOTZoNDYuMDh6bS0yOC4zNjgtMjkuMzA0cS43Mi4yODguNzIgMS4wOHYxOS41ODRxMCAuNzkyLS43MiAxLjA4LS4yODguMDcyLS40MzIuMDcyLS40MzIgMC0uODI4LS4zMjRsLTUuOTc2LTYuMDEyaC00LjcxNnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDQuNzE2bDUuOTc2LTYuMDEycS41NzYtLjU0IDEuMjYtLjI1MnptMTUuMDEyIDI0LjgwNHExLjExNiAwIDEuOC0uODY0IDQuNjQ0LTUuNzI0IDQuNjQ0LTEzLjA2OHQtNC42NDQtMTMuMDY4cS0uNTc2LS43NTYtMS41NDgtLjg2NHQtMS42OTIuNTA0cS0uNzU2LjYxMi0uODQ2IDEuNTY2dC41MjIgMS43MXEzLjYgNC40MjggMy42IDEwLjE1MnQtMy42IDEwLjE1MnEtLjYxMi43NTYtLjUyMiAxLjcxdC44NDYgMS41M3EuNjQ4LjU0IDEuNDQuNTR6bS03LjU5Ni01LjMyOHEuOTcyIDAgMS42OTItLjcyIDMuMTMyLTMuMzQ4IDMuMTMyLTcuODg0dC0zLjEzMi03Ljg4NHEtLjY0OC0uNjg0LTEuNjItLjcydC0xLjY1Ni42MTItLjcyIDEuNjAyLjY0OCAxLjY3NHExLjg3MiAyLjA1MiAxLjg3MiA0LjcxNnQtMS44NzIgNC43MTZxLS42ODQuNzItLjY0OCAxLjY3NHQuNzIgMS42MDJxLjcyLjYxMiAxLjU4NC42MTJ6XCIsXCJGSUxFX1ZJREVPX09cIjpcIk01Mi44NDgtNTAuNzU5cTEuMDA4IDEuMDA4IDEuNzI4IDIuNzM2dC43MiAzLjE2OHY0MS40NzJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtNDguMzg0cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di01Ny42cTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgzMi4yNTZxMS40NCAwIDMuMTY4LjcydDIuNzM2IDEuNzI4em0tMTUuOTg0LTguNzg0djEzLjUzNmgxMy41MzZxLS4zNi0xLjA0NC0uNzkyLTEuNDc2bC0xMS4yNjgtMTEuMjY4cS0uNDMyLS40MzItMS40NzYtLjc5MnptMTMuODI0IDU1LjAwOHYtMzYuODY0aC0xNC45NzZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTE0Ljk3NmgtMjcuNjQ4djU1LjI5Nmg0Ni4wOHptLTIzLjA0LTMyLjI1NnExLjg3MiAwIDMuMjQgMS4zNjh0MS4zNjggMy4yNHYxMy44MjRxMCAxLjg3Mi0xLjM2OCAzLjI0dC0zLjI0IDEuMzY4aC0xMy44MjRxLTEuODcyIDAtMy4yNC0xLjM2OHQtMS4zNjgtMy4yNHYtMTMuODI0cTAtMS44NzIgMS4zNjgtMy4yNHQzLjI0LTEuMzY4aDEzLjgyNHptMTcuNzEyLjA3MnEuNzIuMjg4LjcyIDEuMDh2MjAuNzM2cTAgLjc5Mi0uNzIgMS4wOC0uMjg4LjA3Mi0uNDMyLjA3Mi0uNTA0IDAtLjgyOC0uMzI0bC05LjU0LTkuNTc2di0zLjI0bDkuNTQtOS41NzZxLjMyNC0uMzI0LjgyOC0uMzI0LjE0NCAwIC40MzIuMDcyelwiLFwiRklMRV9DT0RFX09cIjpcIk01Mi44NDgtNTAuNzU5cTEuMDA4IDEuMDA4IDEuNzI4IDIuNzM2dC43MiAzLjE2OHY0MS40NzJxMCAxLjQ0LTEuMDA4IDIuNDQ4dC0yLjQ0OCAxLjAwOGgtNDguMzg0cS0xLjQ0IDAtMi40NDgtMS4wMDh0LTEuMDA4LTIuNDQ4di01Ny42cTAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOGgzMi4yNTZxMS40NCAwIDMuMTY4LjcydDIuNzM2IDEuNzI4em0tMTUuOTg0LTguNzg0djEzLjUzNmgxMy41MzZxLS4zNi0xLjA0NC0uNzkyLTEuNDc2bC0xMS4yNjgtMTEuMjY4cS0uNDMyLS40MzItMS40NzYtLjc5MnptMTMuODI0IDU1LjAwOHYtMzYuODY0aC0xNC45NzZxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTE0Ljk3NmgtMjcuNjQ4djU1LjI5Nmg0Ni4wOHptLTMzLjQwOC0zMi4yNTZxLjI4OC0uMzk2Ljc1Ni0uNDV0Ljg2NC4yMzRsMS44MzYgMS4zNjhxLjM5Ni4yODguNDUuNzU2dC0uMjM0Ljg2NGwtNi41NTIgOC43NDggNi41NTIgOC43NDhxLjI4OC4zOTYuMjM0Ljg2NHQtLjQ1Ljc1NmwtMS44MzYgMS4zNjhxLS4zOTYuMjg4LS44NjQuMjM0dC0uNzU2LS40NWwtOC4xMzYtMTAuODM2cS0uNTA0LS42ODQgMC0xLjM2OHptMjguODcyIDEwLjgzNnEuNTA0LjY4NCAwIDEuMzY4bC04LjEzNiAxMC44MzZxLS4yODguMzk2LS43NTYuNDV0LS44NjQtLjIzNGwtMS44MzYtMS4zNjhxLS4zOTYtLjI4OC0uNDUtLjc1NnQuMjM0LS44NjRsNi41NTItOC43NDgtNi41NTItOC43NDhxLS4yODgtLjM5Ni0uMjM0LS44NjR0LjQ1LS43NTZsMS44MzYtMS4zNjhxLjM5Ni0uMjg4Ljg2NC0uMjM0dC43NTYuNDV6bS0yMi4zMiAxNi41OTZxLS40NjgtLjA3Mi0uNzM4LS40Njh0LS4xOTgtLjg2NGw0Ljk2OC0yOS45MTZxLjA3Mi0uNDY4LjQ2OC0uNzM4dC44NjQtLjE5OGwyLjI2OC4zNnEuNDY4LjA3Mi43MzguNDY4dC4xOTguODY0bC00Ljk2OCAyOS45MTZxLS4wNzIuNDY4LS40NjguNzM4dC0uODY0LjE5OHpcIixcIlZJTkVcIjpcIk01My44OTItMzQuNjY3djcuMTI4cS0zLjYzNi44MjgtNy4xMjguODI4LTIuMzQgNC44OTYtNS45NTggOS43NTZ0LTYuNTM0IDcuNzU4LTQuNjA4IDMuODM0cS0yLjg4IDEuNjItNS44MzItLjEwOC0xLjAwOC0uNjEyLTIuMTc4LTEuNTY2dC0zLjA2LTMuMDA2LTMuNjktNC42MjYtMy44Ny02LjYyNC0zLjc5OC04Ljc4NC0zLjI5NC0xMS4zMjItMi41MzgtMTQuMDRoMTAuMTg4cS45MzYgNy44NDggMi41MiAxNC4zNDZ0My43NjIgMTEuNDEyIDQuMzc0IDguNDc4IDUuMDQgNy4wMnE2LjA4NC02LjA4NCAxMC4zMzItMTQuNjE2LTUuMTEyLTIuNTkyLTguMDI4LTcuOTJ0LTIuOTE2LTExLjk4OHEwLTYuOTEyIDMuNzQ0LTExLjMyMnQxMC4yMjQtNC40MXE2LjQwOCAwIDkuODI4IDMuNzk4dDMuNDIgMTAuNzFxMCA1LjcyNC0yLjA4OCAxMC4yOTYtLjI1Mi4wMzYtLjcwMi4xMDh0LTEuNjU2LjA3Mi0yLjI2OC0uMjE2LTIuMjMyLS45MTgtMS44MTgtMS44NTRxMS4xMTYtMy43MDggMS4xMTYtNi42MjQgMC0zLjEzMi0xLjA0NC00Ljc1MnQtMi44NDQtMS42MnEtMS45MDggMC0zLjA2IDEuNzgydC0xLjE1MiA1LjA1OHEwIDYuNjk2IDMuNzggMTAuNTY2dDkuNjEyIDMuODdxMi4yMzIgMCA0LjM1Ni0uNTA0elwiLFwiQ09ERVBFTlwiOlwiTTcuNzc2LTIyLjM1NWwyMS43MDggMTQuNDcydi0xMi45MjRsLTEyLjAyNC04LjAyOHptLTIuMjMyLTUuMTg0bDYuOTQ4LTQuNjQ0LTYuOTQ4LTQuNjQ0djkuMjg4em0yOS40ODQgMTkuNjU2bDIxLjcwOC0xNC40NzItOS42ODQtNi40OC0xMi4wMjQgOC4wMjh2MTIuOTI0em0tMi43NzItMTcuNzQ4bDkuNzkyLTYuNTUyLTkuNzkyLTYuNTUyLTkuNzkyIDYuNTUyem0tMTQuNzk2LTkuOWwxMi4wMjQtOC4wMjh2LTEyLjkyNGwtMjEuNzA4IDE0LjQ3MnptMzQuNTYgMy4zNDhsNi45NDggNC42NDR2LTkuMjg4em0tNC45NjgtMy4zNDhsOS42ODQtNi40OC0yMS43MDgtMTQuNDcydjEyLjkyNHptMTcuNDYtNi40OHYxOS42NTZxMCAxLjQ3Ni0xLjIyNCAyLjMwNGwtMjkuNDg0IDE5LjY1NnEtLjc1Ni40NjgtMS41NDguNDY4dC0xLjU0OC0uNDY4bC0yOS40ODQtMTkuNjU2cS0xLjIyNC0uODI4LTEuMjI0LTIuMzA0di0xOS42NTZxMC0xLjQ3NiAxLjIyNC0yLjMwNGwyOS40ODQtMTkuNjU2cS43NTYtLjQ2OCAxLjU0OC0uNDY4dDEuNTQ4LjQ2OGwyOS40ODQgMTkuNjU2cTEuMjI0LjgyOCAxLjIyNCAyLjMwNHpcIixcIkpTRklERExFXCI6XCJNNjQuOC0zNi42NDdxMy45OTYgMS42NTYgNi40NjIgNS4yMzh0Mi40NjYgNy45NzRxMCA1LjkwNC00LjI0OCAxMC4wOTh0LTEwLjI2IDQuMTk0bC0uNDE0LS4wMTgtLjM3OC0uMDE4aC00My44MTIwMDAwMDAwMDAwMDVxLTYuMTItLjM2LTEwLjM2OC00LjUxOHQtNC4yNDgtMTAuMDk4cTAtMy45NiAxLjk4LTcuMzA4dDUuMjkyLTUuMjkycS0uNDMyLTEuNDA0LS40MzItMi45NTIgMC00LjE0IDIuOTUyLTcuMDU2dDcuMTY0LTIuOTE2cTMuNDIgMCA2LjE5MiAyLjA4OCAyLjctNS41NDQgOC4wMS04LjkyOHQxMS43NTQtMy4zODRxNS45NzYgMCAxMS4wMTYgMi44OTh0Ny45NzQgNy44NjYgMi45MzQgMTAuODM2bC0uMDE4LjY0OC0uMDE4LjY0OHptLTQ3Ljk1MiA5LjU3NnEwIDQuMzkyIDMuMDI0IDYuOTQ4dDcuNDg4IDIuNTU2cTQuOTMyIDAgOC42NC0zLjU2NC0uNTc2LS43Mi0xLjcxLTIuMDM0dC0xLjU2Ni0xLjgxOHEtMi40MTIgMi4zNC01LjE4NCAyLjM0LTEuOTggMC0zLjM2Ni0xLjIwNnQtMS4zODYtMy4xNXEwLTEuOTA4IDEuMzg2LTMuMTMydDMuMjk0LTEuMjI0cTEuNTg0IDAgMy4wNDIuNzU2dDIuNjI4IDEuOTggMi4zNCAyLjcgMi40ODQgMi45NTIgMi43NzIgMi43IDMuNDkyIDEuOTggNC4zNzQuNzU2cTQuMzU2IDAgNy4zNjItMi41NzR0My4wMDYtNi44NThxMC00LjM1Ni0zLjAyNC02LjkxMnQtNy40NTItMi41NTZxLTUuMTQ4IDAtOC42NzYgMy40OTIuNTA0LjU3NiAxLjA2MiAxLjIyNHQxLjI0MiAxLjQ0IDEuMDQ0IDEuMjI0cTIuMzc2LTIuMzA0IDUuMTEyLTIuMzA0IDEuODcyIDAgMy4zMTIgMS4xODh0MS40NCAzLjAyNHEwIDIuMDUyLTEuMzMyIDMuMjk0dC0zLjM4NCAxLjI0MnEtMS41NDggMC0yLjk3LS43NTZ0LTIuNTkyLTEuOTgtMi4zNTgtMi43LTIuNTAyLTIuOTUyLTIuNzktMi43LTMuNDc0LTEuOTgtNC4yNjYtLjc1NnEtNC4zOTIgMC03LjQ1MiAyLjUzOHQtMy4wNiA2LjgyMnpcIixcIlNVUFBPUlRcIjpcIk0zMi4yNTYtNjQuNDM5cTYuNTUyIDAgMTIuNTI4IDIuNTU2dDEwLjI5NiA2Ljg3NiA2Ljg3NiAxMC4yOTYgMi41NTYgMTIuNTI4LTIuNTU2IDEyLjUyOC02Ljg3NiAxMC4yOTYtMTAuMjk2IDYuODc2LTEyLjUyOCAyLjU1Ni0xMi41MjgtMi41NTYtMTAuMjk2LTYuODc2LTYuODc2LTEwLjI5Ni0yLjU1Ni0xMi41MjggMi41NTYtMTIuNTI4IDYuODc2LTEwLjI5NiAxMC4yOTYtNi44NzYgMTIuNTI4LTIuNTU2em0wIDQuNjA4cS02Ljg0IDAtMTIuOTk2IDMuMjRsNi45ODQgNi45ODRxMi45NTItMS4wMDggNi4wMTItMS4wMDh0Ni4wMTIgMS4wMDhsNi45ODQtNi45ODRxLTYuMTU2LTMuMjQtMTIuOTk2LTMuMjR6bS0yNC40MDggNDAuNjQ0bDYuOTg0LTYuOTg0cS0xLjAwOC0yLjk1Mi0xLjAwOC02LjAxMnQxLjAwOC02LjAxMmwtNi45ODQtNi45ODRxLTMuMjQgNi4xNTYtMy4yNCAxMi45OTZ0My4yNCAxMi45OTZ6bTI0LjQwOCAxNC42NTJxNi44NCAwIDEyLjk5Ni0zLjI0bC02Ljk4NC02Ljk4NHEtMi45NTIgMS4wMDgtNi4wMTIgMS4wMDh0LTYuMDEyLTEuMDA4bC02Ljk4NCA2Ljk4NHE2LjE1NiAzLjI0IDEyLjk5NiAzLjI0em0wLTEzLjgyNHE1LjcyNCAwIDkuNzc0LTQuMDV0NC4wNS05Ljc3NC00LjA1LTkuNzc0LTkuNzc0LTQuMDUtOS43NzQgNC4wNS00LjA1IDkuNzc0IDQuMDUgOS43NzQgOS43NzQgNC4wNXptMTcuNDI0LTcuODEybDYuOTg0IDYuOTg0cTMuMjQtNi4xNTYgMy4yNC0xMi45OTZ0LTMuMjQtMTIuOTk2bC02Ljk4NCA2Ljk4NHExLjAwOCAyLjk1MiAxLjAwOCA2LjAxMnQtMS4wMDggNi4wMTJ6XCIsXCJDSVJDTEVfT19OT1RDSFwiOlwiTTYzLjM2LTMyLjE4M3EwIDYuMzM2LTIuNDY2IDEyLjA5NnQtNi42MjQgOS45MTgtOS45MTggNi42MjQtMTIuMDk2IDIuNDY2LTEyLjA5Ni0yLjQ2Ni05LjkxOC02LjYyNC02LjYyNC05LjkxOC0yLjQ2Ni0xMi4wOTZxMC03LjY2OCAzLjQ5Mi0xNC4zNDZ0OS41NC0xMC45OTggMTMuNDY0LTUuNDM2djguMjA4cS03Ljk1NiAxLjYyLTEzLjE5NCA3Ljk1NnQtNS4yMzggMTQuNjE2cTAgNC42OCAxLjgzNiA4Ljk0NnQ0LjkxNCA3LjM0NCA3LjM0NCA0LjkxNCA4Ljk0NiAxLjgzNiA4Ljk0Ni0xLjgzNiA3LjM0NC00LjkxNCA0LjkxNC03LjM0NCAxLjgzNi04Ljk0NnEwLTguMjgtNS4yMzgtMTQuNjE2dC0xMy4xOTQtNy45NTZ2LTguMjA4cTcuNDE2IDEuMTE2IDEzLjQ2NCA1LjQzNnQ5LjU0IDEwLjk5OCAzLjQ5MiAxNC4zNDZ6XCIsXCJSRUJFTFwiOlwiTS42ODQtMzIuOTc1cS4yODgtNy44MTIgNC4xNzYtMTQuNjE2dDEwLjk4LTExLjQ0OGguMThsLS4wMzYuMTA4cS0uMjg4LjI4OC0xLjAwOCAxLjIwNnQtMS44NzIgMi43NTQtMi4xNiAzLjk3OC0xLjYwMiA0Ljg3OC0uNTA0IDUuNDE4IDEuNDA0IDUuNjcgMy45MDYgNS41NDRxMS44IDEuOCAzLjY3MiAyLjUwMnQzLjI1OC40MTQgMi41MDItLjg0NiAxLjY5Mi0xLjE3bC41NzYtLjU3NnExLjQwNC0xLjgzNiAxLjkwOC00LjE5NHQuMjM0LTQuNDEtLjc1Ni0zLjg1Mi0uOTU0LTIuODhsLS41MDQtMS4wNDRxLS4zNi0uOS0xLjA5OC0xLjc4MnQtMS41NDgtMS40NzYtMS41NjYtMS4wNjItMS4yNi0uNjg0bC0uNDY4LS4yMTYgMy43NDQtNC4xNHExLjQwNC42MTIgMi44MDggMS44NzJ0Mi4xMjQgMi4xOTZsLjY4NC45NzJxLjAzNi0xLjcyOC0uNjY2LTMuNzI2dC0xLjQ1OC0zLjE1bC0uNzItMS4xMTYgNS43OTYtNi41ODggNS43NiA2LjUxNnEtMS4xODggMS42NTYtMS44OSAzLjY5dC0uODEgMy4yNThsLS4xNDQgMS4xODhxLjc5Mi0xLjMzMiAyLjIxNC0yLjYxdDIuNDMtMS44OWwxLjAwOC0uNjEyIDMuNzA4IDQuMTRxLTEuNTg0LjUwNC0zLjA2IDEuOHQtMi4xNiAyLjM0bC0uNjg0IDEuMDQ0cS0xLjExNiAyLjAxNi0xLjcyOCA0LjgwNnQtLjI1MiA2LjEyIDIuMDUyIDUuNjM0cTEuMTg4IDEuNjIgMi43OSAyLjE3OHQzLjA2LjE5OCAyLjczNi0uOTU0IDIuMDctMS4yMDZsLjc1Ni0uNTc2cTIuMTYtMS45MDggMy40NzQtNC4xNHQxLjc0Ni00LjM3NC4zNi00LjM3NC0uNjQ4LTQuMjQ4LTEuMzMyLTMuODctMS42MzgtMy4zNDgtMS42Mi0yLjU5Mi0xLjI0Mi0xLjcxbC0uNDY4LS42MTJxLS41MDQtLjQ2OC0uMjUyLS40NjhsLjM2LjEwOHExLjQ0IDEuMDQ0IDIuMjUgMS42NTZ0Mi4yMzIgMS44IDIuMzA0IDIuMDg4IDIuMTA2IDIuMzQgMS45OTggMi43NzIgMS42MzggMy4xNjggMS4zNjggMy43MDguODQ2IDQuMjEyLjM3OCA0Ljg5NnEuMTA4IDkuMzI0LTMuODg4IDE2Ljc0dC0xMS4yMzIgMTEuNTU2LTE2LjQxNiA0LjE0cS02LjY2IDAtMTIuNjM2LTIuNjY0dC0xMC4yMDYtNy4xMjgtNi42MjQtMTAuNTQ4LTIuMTc4LTEyLjcwOHpcIixcIkdFXCI6XCJNMzEuNDY0LTUuNDcxdjIuMzc2cS03LjQ4OC0uMjE2LTEzLjg2LTMuOTQydC0xMC4xODgtOS45MThsMi4wODgtMS4yMjRxMS4wNDQgMS43NjQgMi42MjggMy41NjRsMi4zNC0yLjA1MnE1LjMyOCA2LjA0OCAxMy4yNDggNy42MzJsLS42MTIgMy4wOTZxMi4zNC40MzIgNC4zNTYuNDY4em0tMjEuNTI4LTE5LjA4bC0yLjk4OCAxLjAwOHEuNzkyIDIuMTYgMS43NjQgNC4wMzJsLTIuMDUyIDEuMTg4cS0zLjUyOC02LjQ4LTMuNTI4LTEzLjg2dDMuNTI4LTEzLjg2bDIuMDUyIDEuMTg4cS0xLjA4IDIuMDE2LTEuNzY0IDQuMDMybDIuOTUyIDEuMDA4cS0xLjI2IDMuNi0xLjI2IDcuNjMyIDAgMy45MjQgMS4yOTYgNy42MzJ6bTQ1LjA3MiA2LjM3MmwyLjA4OCAxLjIyNHEtMy44MTYgNi4xOTItMTAuMTg4IDkuOTE4dC0xMy44NiAzLjk0MnYtMi4zNzZxMi4wMTYtLjAzNiA0LjM1Ni0uNDY4bC0uNjEyLTMuMDk2cTcuOTItMS41ODQgMTMuMjQ4LTcuNjMybDIuMzQgMi4wNTJxMS41ODQtMS44IDIuNjI4LTMuNTY0em0tNS40MzYtMTkuOTQ0bC04LjM4OCAyLjg4cS41MDQgMS41MTIuNTA0IDMuMDZ0LS41MDQgMy4wNmw4LjM1MiAyLjg4cS0xLjExNiAzLjMxMi0zLjUyOCA2LjA4NGwtNi42Ni01LjgzMnEtMi4wNTIgMi40MTItNS4yOTIgMy4wNmwxLjcyOCA4LjY3NnEtMS44NzIuMzYtMy41MjguMzZ0LTMuNTI4LS4zNmwxLjcyOC04LjY3NnEtMy4yNC0uNjQ4LTUuMjkyLTMuMDZsLTYuNjYgNS44MzJxLTIuNDEyLTIuNzcyLTMuNTI4LTYuMDg0bDguMzUyLTIuODhxLS41MDQtMS41MTItLjUwNC0zLjA2dC41MDQtMy4wNmwtOC4zODgtMi44OHExLjE4OC0zLjM0OCAzLjU2NC02LjA4NGw2LjY2IDUuODMycTIuMTI0LTIuNDQ4IDUuMjkyLTMuMDk2bC0xLjcyOC04LjY0cTEuNTg0LS4zNiAzLjUyOC0uMzZ0My41MjguMzZsLTEuNzI4IDguNjRxMy4xNjguNjQ4IDUuMjkyIDMuMDk2bDYuNjYtNS44MzJxMi4zNzYgMi43MzYgMy41NjQgNi4wODR6bS0xOC4xMDgtMjMuMTQ4djIuMzc2cS0yLjM0LjA3Mi00LjM1Ni40NjhsLjYxMiAzLjA5NnEtNy45MiAxLjUxMi0xMy4yNDggNy41OTZsLTIuMzQtMi4wMTZxLTEuMzY4IDEuNTEyLTIuNjI4IDMuNTI4bC0yLjA1Mi0xLjE4OHEzLjgxNi02LjE5MiAxMC4xNTItOS45MTh0MTMuODYtMy45NDJ6bTI5LjkxNiAyOS4wODhxMCA3LjM4LTMuNTI4IDEzLjg2bC0yLjA1Mi0xLjE4OHEuOTcyLTEuODcyIDEuNzY0LTQuMDMybC0yLjk4OC0xLjAwOHExLjI5Ni0zLjcwOCAxLjI5Ni03LjYzMiAwLTQuMDMyLTEuMjYtNy42MzJsMi45NTItMS4wMDhxLS42ODQtMi4wMTYtMS43NjQtNC4wMzJsMi4wNTItMS4xODhxMy41MjggNi40OCAzLjUyOCAxMy44NnptLTQuMzItMTUuMjI4bC0yLjA1MiAxLjE4OHEtMS4yNi0yLjAxNi0yLjYyOC0zLjUyOGwtMi4zNCAyLjAxNnEtNS4zMjgtNi4wODQtMTMuMjQ4LTcuNTk2bC42MTItMy4wOTZxLTIuMDE2LS4zOTYtNC4zNTYtLjQ2OHYtMi4zNzZxNy41MjQuMjE2IDEzLjg2IDMuOTQydDEwLjE1MiA5LjkxOHptNS44NjggMTUuMjI4cTAtNi4yMjgtMi40My0xMS45MTZ0LTYuNTM0LTkuNzkyLTkuNzkyLTYuNTM0LTExLjkxNi0yLjQzLTExLjkxNiAyLjQzLTkuNzkyIDYuNTM0LTYuNTM0IDkuNzkyLTIuNDMgMTEuOTE2IDIuNDMgMTEuOTE2IDYuNTM0IDkuNzkyIDkuNzkyIDYuNTM0IDExLjkxNiAyLjQzIDExLjkxNi0yLjQzIDkuNzkyLTYuNTM0IDYuNTM0LTkuNzkyIDIuNDMtMTEuOTE2em0xLjU4NCAwcTAgNi41NTItMi41NTYgMTIuNTI4dC02Ljg3NiAxMC4yOTYtMTAuMjk2IDYuODc2LTEyLjUyOCAyLjU1Ni0xMi41MjgtMi41NTYtMTAuMjk2LTYuODc2LTYuODc2LTEwLjI5Ni0yLjU1Ni0xMi41MjggMi41NTYtMTIuNTI4IDYuODc2LTEwLjI5NiAxMC4yOTYtNi44NzYgMTIuNTI4LTIuNTU2IDEyLjUyOCAyLjU1NiAxMC4yOTYgNi44NzYgNi44NzYgMTAuMjk2IDIuNTU2IDEyLjUyOHpcIixcIkdJVF9TUVVBUkVcIjpcIk0yMC45NTItMTcuMzUxcTAgMi4zNzYtMy4zNDggMi4zNzYtMy44NTIgMC0zLjg1Mi0yLjI2OCAwLTIuMzA0IDMuNTI4LTIuMzA0IDMuNjcyIDAgMy42NzIgMi4xOTZ6bS0xLjI5Ni0xNi43NzZxMCAzLjA2LTIuNjY0IDMuMDYtMi43NzIgMC0yLjc3Mi0zLjAyNCAwLTMuMjQgMi43NzItMy4yNCAxLjI5NiAwIDEuOTguOTE4dC42ODQgMi4yODZ6bTUuOTc2LTIuN3YtNC41cS0yLjgwOCAxLjA0NC00Ljg2IDEuMDQ0LTEuOC0xLjA0NC0zLjk2LTEuMDQ0LTMuMDk2IDAtNS4yMiAyLjA1MnQtMi4xMjQgNS4xNDhxMCAxLjggMS4wNjIgMy42NzJ0Mi42NDYgMi40MTJ2LjEwOHEtMS4zNjguNjEyLTEuMzY4IDMuMDYgMCAxLjkwOCAxLjQ3NiAyLjc3MnYuMTA4cS00LjA2OCAxLjMzMi00LjA2OCA1LjAwNCAwIDEuNjIuNzIgMi44MjZ0MS45NDQgMS44MzYgMi41OTIuOTE4IDIuOTE2LjI4OHE4LjA2NCAwIDguMDY0LTYuNzY4IDAtMi40MTItMS43MjgtMy41NjR0LTQuNTM2LTEuNjU2cS0uOTcyLS4xOC0xLjg1NC0uNzM4dC0uODgyLTEuNDIycTAtMS41ODQgMS43NjQtMS44NzIgMi43NzItLjU0IDQuMzkyLTIuNTJ0MS42Mi00LjgyNHEwLS44NjQtLjM2LTEuODcyIDEuMzMyLS4zMjQgMS43NjQtLjQ2OHptMi4xMjQgMTUuMDg0aDQuOTMycS0uMDcyLS45NzItLjA3Mi0yLjk1MnYtMTMuOTMycTAtMS42NTYuMDcyLTIuNDg0aC00LjkzMnEuMTA4LjgyOC4xMDggMi41NTZ2MTQuMTEycTAgMS44LS4xMDggMi43em0xOC4zMjQtLjU3NnYtNC4zNTZxLTEuMDguNzU2LTIuNDQ4Ljc1Ni0xLjkwOCAwLTEuOTA4LTIuOTUydi04LjFoMS44NzJxLjMyNCAwIC45NTQuMDM2dC45NTQuMDM2di00LjIxMmgtMy43OHEwLTIuOTUyLjEwOC0zLjY3MmgtNS4wNHEuMTQ0Ljg2NC4xNDQgMS45OHYxLjY5MmgtMi4xNnY0LjIxMmwxLjMzMi0uMTA4LjM5Ni4wMTguNDMyLjAxOHYuMDcyaC0uMDcydjcuODEycTAgMS4zMzIuMDkgMi4zMDR0LjQxNCAyLjAzNC44ODIgMS43NDYgMS41NjYgMS4xMTYgMi4zNzYuNDMycTIuMzA0IDAgMy44ODgtLjg2NHptLTEyLjgxNi0yNS40MTZxMC0xLjI5Ni0uODY0LTIuMjg2dC0yLjE2LS45OS0yLjE3OC45NzItLjg4MiAyLjMwNHEwIDEuMjk2LjkgMi4yNXQyLjE2Ljk1NCAyLjE0Mi0uOTcyLjg4Mi0yLjIzMnptMjIuMDMyLTEuNzI4djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkdJVFwiOlwiTTIxLjQyLTkuOTM1cTAtMy42LTUuOTQtMy42LTUuNjg4IDAtNS42ODggMy43NDQgMCAzLjYzNiA2LjE5MiAzLjYzNiA1LjQzNiAwIDUuNDM2LTMuNzh6bS0yLjEyNC0yNy4xOHEwLTIuMTk2LTEuMDgtMy42NzJ0LTMuMjA0LTEuNDc2cS00LjQ2NCAwLTQuNDY0IDUuMjIgMCA0Ljg2IDQuNDY0IDQuODYgNC4yODQgMCA0LjI4NC00LjkzMnptOS42ODQtMTEuNjY0djcuMjcycS0xLjI5Ni40MzItMi44NDQuNzkyLjU3NiAxLjU0OC41NzYgMy4wMjQgMCA0LjU3Mi0yLjYyOCA3Ljc5NHQtNy4wOTIgNC4wNXEtMS40NC4yODgtMi4xNDIuOTcydC0uNzAyIDIuMDg4cTAgMS4xMTYuODEgMS44NTR0Mi4wODggMS4xNTIgMi44MjYuNzkyIDMuMDk2LjkxOCAyLjgyNiAxLjM1IDIuMDg4IDIuMzA0LjgxIDMuNTQ2cTAgMTAuOTQ0LTEzLjA2OCAxMC45NDQtMi40ODQgMC00LjY4LS40NXQtNC4xNzYtMS40NzYtMy4xNS0yLjk1Mi0xLjE3LTQuNTlxMC01Ljk0IDYuNTUyLTguMXYtLjE0NHEtMi40MTItMS40NzYtMi40MTItNC41MzYgMC0zLjkyNCAyLjI2OC00LjkzMnYtLjE0NHEtMi41OTItLjg2NC00LjMwMi0zLjkwNnQtMS43MS01Ljk1OHEwLTUuMDA0IDMuNDItOC4zMzR0OC40Ni0zLjMzcTMuNDU2IDAgNi40MDggMS42OTIgMy41MjggMCA3Ljg0OC0xLjY5MnptMTEuNDQ4IDMxLjcxNmgtNy45OTJxLjE0NC0xLjYyLjE0NC00LjgyNHYtMjEuOTI0cTAtMy4zODQtLjE0NC00LjYwOGg3Ljk5MnEtLjE0NCAxLjE4OC0uMTQ0IDQuNDY0djIyLjA2OHEwIDMuMjA0LjE0NCA0LjgyNHptMjEuNjM2LTcuOTkydjcuMDU2cS0yLjU1NiAxLjQwNC02LjI2NCAxLjQwNC0yLjIzMiAwLTMuODUyLS43MnQtMi41Mi0xLjgtMS40MjItMi44MDgtLjY2Ni0zLjMxMi0uMTQ0LTMuNzA4di0xMi42MzZoLjA3MnYtLjE0NHEtLjI1MiAwLS42ODQtLjAzNnQtLjY0OC0uMDM2cS0uNzU2IDAtMi4xMjQuMjE2di02Ljg0aDMuNDU2di0yLjczNnEwLTEuOTQ0LS4yMTYtMy4yMDRoOC4xNzJxLS4yMTYgMS40NzYtLjIxNiA1Ljk0aDYuMTU2djYuODRxLS41NCAwLTEuNTY2LS4wNzJ0LTEuNTMtLjA3MmgtMy4wNnYxMy4xNHEwIDQuNzE2IDMuMTMyIDQuNzE2IDIuMTk2IDAgMy45MjQtMS4xODh6bS0yMC43MzYtMzQuMDkycTAgMi4wODgtMS40MDQgMy42NTR0LTMuNDU2IDEuNTY2cS0yLjA4OCAwLTMuNTI4LTEuNTY2dC0xLjQ0LTMuNjU0cTAtMi4xMjQgMS40MjItMy43MDh0My41NDYtMS41ODRxMi4wODggMCAzLjQ3NCAxLjYwMnQxLjM4NiAzLjY5elwiLFwiWUNfU1FVQVJFXCI6XCJNMjkuMTI0LTI4LjI5NWw5LjU3Ni0xNy45NjRoLTQuMDMybC01LjY1MiAxMS4yMzJxLS44NjQgMS43MjgtMS41ODQgMy4zMTJsLTEuNTEyLTMuMzEyLTUuNTgtMTEuMjMyaC00LjMybDkuNDY4IDE3Ljc0OHYxMS42NjRoMy42MzZ2LTExLjQ0OHptMjYuMTcyLTIxLjE2OHYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2cTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCIsXCJURU5DRU5UX1dFSUJPXCI6XCJNMzAuMzEyLTQzLjg0N3EwIDIuODgtMi4wNTIgNC45MTR0LTQuODk2IDIuMDM0cS0yLjE2IDAtMy45OTYtMS4yNi0yLjIzMiAyLjQxMi00LjE0IDUuMjU2LTguODkyIDEzLjM1Ni03LjI3MiAzMC45MjQuMDM2Ljc5Mi0uNDUgMS4zODZ0LTEuMjQyLjY2NmgtLjE4cS0uNzIgMC0xLjI2LS40ODZ0LS42MTItMS4yMDZxLS41MDQtNC41MzYtLjEyNi04LjkxdDEuMDYyLTcuODEyIDEuOTQ0LTYuNjk2IDIuNDg0LTUuNTk4IDIuNjY0LTQuNXEyLjE5Ni0zLjI0IDQuNzUyLTUuOTQtLjU3Ni0xLjI2LS41NzYtMi43NzIgMC0yLjg4IDIuMDM0LTQuOTE0dDQuOTE0LTIuMDM0IDQuOTE0IDIuMDM0IDIuMDM0IDQuOTE0em0xMy43MTYuMzk2cTAgNS42ODgtMi44MDggMTAuNTEydC03LjY1IDcuNjMyLTEwLjUzIDIuODA4cS0yLjMwNCAwLTQuNzE2LS41MDQtLjc1Ni0uMTgtMS4xNy0uODQ2dC0uMjM0LTEuNDIycS4xOC0uNzIuODI4LTEuMTM0dDEuNDA0LS4yN3ExLjgzNi40NjggMy44ODguNDY4IDMuNDkyIDAgNi42OTYtMS4zNjh0NS41MDgtMy42NzIgMy42NzItNS41MDggMS4zNjgtNi42OTYtMS4zNjgtNi42OTYtMy42NzItNS41MDgtNS41MDgtMy42NzItNi42OTYtMS4zNjgtNi42OTYgMS4zNjgtNS41MDggMy42NzItMy42NzIgNS41MDgtMS4zNjggNi42OTZxMCA0LjEwNCAxLjg3MiA3Ljg0OC4zNi43Mi4xMjYgMS40NHQtLjkxOCAxLjA4LTEuNDIyLjEwOC0xLjA5OC0uOTM2cS0yLjMwNC00LjQyOC0yLjMwNC05LjU0IDAtNC4yODQgMS42NzQtOC4xNzJ0NC40ODItNi42OTYgNi42OTYtNC40NjQgOC4xMzYtMS42NTZxNS42ODggMCAxMC41MyAyLjgwOHQ3LjY1IDcuNjUgMi44MDggMTAuNTN6XCIsXCJRUVwiOlwiTTkuNzItMzUuNDIzcS0uMjg4LS42ODQtLjI4OC0xLjg3MiAwLS43Mi4zOTYtMS43NjR0Ljg2NC0xLjYycS0uMDM2LS43OTIuMjctMS45MDh0LjgxLTEuNTQ4cTAtNS4wMDQgMy4zMy0xMC4zODZ0Ny44My03LjU0MnE1LjAwNC0yLjM3NiAxMS42NjQtMi4zNzYgNC43ODggMCA5LjU3NiAxLjk4IDEuNzY0Ljc1NiAzLjI0IDEuNzI4dDIuNTU2IDIuMDE2IDEuOTggMi40NDggMS41MTIgMi42NjQgMS4xNyAzLjA0Mi45MTggMy4yMjIuNzkyIDMuNTI4bC4wMzYuMThxMS45OCAyLjk4OCAxLjk4IDUuNCAwIC41MDQtLjMyNCAxLjQ0dC0uMzI0IDEuMzY4bC4wNTQuMTI2LjEyNi4xOC4wNzIuMTI2cTIuNzcyIDQuMTA0IDQuMzM4IDcuNzIydDEuNTY2IDcuNTA2cTAgMS41NDgtLjcwMiAzLjZ0LTEuOTk4IDIuMDUycS0uMzI0IDAtLjcwMi0uMjd0LS42ODQtLjYzLS42ODQtLjkzNi0uNTc2LS45NTQtLjQ4Ni0uOTM2LS4zMjQtLjYzbC0uMTA4LS4wMzYtLjE4LjE0NHEtMi4xMjQgNS41NDQtNC43NTIgOC4wMjguNzIuNzIgMi4yMTQgMS4zODZ0Mi40ODQgMS40OTQgMS4yNzggMi4zNHEtLjA3Mi4xNDQtLjE0NC41NzZ0LS4yNTIuNjQ4cS0yLjMwNCAzLjQ5Mi0xMC44NzIgMy40OTItMS45MDggMC0zLjk3OC0uMzI0dC0zLjUyOC0uNzItMy43NjItMS4wOHEtLjU0LS4xOC0uODI4LS4yNTItLjUwNC0uMTQ0LTEuNjU2LS4xNjJ0LTEuNDQtLjA1NHEtMS40NzYgMS42Mi00LjU5IDIuMzR0LTYuMDY2LjcycS0xLjI2IDAtMi40ODQtLjA1NHQtMy4zNDgtLjMyNC0zLjYzNi0uNzM4LTIuNjgyLTEuNDQtMS4xNy0yLjMwNHEwLTEuNDQuMzYtMi4xNDJ0MS40NzYtMS43NDZxLjM5Ni0uMDcyIDEuNDU4LS40Njh0MS43ODItLjQzMnEuMTQ0IDAgLjUwNC0uMDcyLjA3Mi0uMDcyLjA3Mi0uMTQ0bC0uMDcyLS4xMDhxLTEuNzI4LS4zOTYtMy44ODgtMy43OTh0LTIuNjI4LTUuNjM0bC0uMTgtLjEwOHEtLjE0NCAwLS40MzIuNzItLjY0OCAxLjQ3Ni0xLjk2MiAyLjY4MnQtMi43OSAxLjM1aC0uMDM2cS0uMTQ0IDAtLjIxNi0uMTYydC0uMTgtLjE5OHEtLjgyOC0xLjk0NC0uODI4LTMuNiAwLTkuOSA5LjA3Mi0xNi43NzZ6XCIsXCJXRUlYSU5cIjpcIk0yMC44OC00Ny44NDNxMC0xLjQ3Ni0uOS0yLjM3NnQtMi4zNzYtLjlxLTEuNTQ4IDAtMi43MzYuOTE4dC0xLjE4OCAyLjM1OHEwIDEuNDA0IDEuMTg4IDIuMzIydDIuNzM2LjkxOHExLjQ3NiAwIDIuMzc2LS44ODJ0LjktMi4zNTh6bTI2Ljc0OCAxOC4yNTJxMC0xLjAwOC0uOTE4LTEuOHQtMi4zNTgtLjc5MnEtLjk3MiAwLTEuNzgyLjgxdC0uODEgMS43ODJxMCAxLjAwOC44MSAxLjgxOHQxLjc4Mi44MXExLjQ0IDAgMi4zNTgtLjc5MnQuOTE4LTEuODM2em0tOC40OTYtMTguMjUycTAtMS40NzYtLjg4Mi0yLjM3NnQtMi4zNTgtLjlxLTEuNTQ4IDAtMi43MzYuOTE4dC0xLjE4OCAyLjM1OHEwIDEuNDA0IDEuMTg4IDIuMzIydDIuNzM2LjkxOHExLjQ3NiAwIDIuMzU4LS44ODJ0Ljg4Mi0yLjM1OHptMjIuODYgMTguMjUycTAtMS4wMDgtLjkzNi0xLjh0LTIuMzQtLjc5MnEtLjk3MiAwLTEuNzgyLjgxdC0uODEgMS43ODJxMCAxLjAwOC44MSAxLjgxOHQxLjc4Mi44MXExLjQwNCAwIDIuMzQtLjc5MnQuOTM2LTEuODM2em0tOS41NzYtMTQuMjkycS0xLjExNi0uMTQ0LTIuNTItLjE0NC02LjA4NCAwLTExLjE5NiAyLjc3MnQtOC4wNDYgNy41MDYtMi45MzQgMTAuMzVxMCAyLjgwOC44MjggNS40NzItMS4yNi4xMDgtMi40NDguMTA4LS45MzYgMC0xLjgtLjA1NHQtMS45OC0uMjM0LTEuNjAyLS4yNTItMS45NjItLjM3OC0xLjgtLjM3OGwtOS4xMDggNC41NzIgMi41OTItNy44NDhxLTEwLjQ0LTcuMzA4LTEwLjQ0LTE3LjY0IDAtNi4wODQgMy41MS0xMS4xOTZ0OS41MDQtOC4wNDYgMTMuMDg2LTIuOTM0cTYuMzM2IDAgMTEuOTcgMi4zNzZ0OS40MzIgNi41NyA0LjkxNCA5LjM3OHptMjEuMzEyIDIwLjE5NnEwIDQuMjEyLTIuNDY2IDguMDQ2dC02LjY3OCA2Ljk2NmwxLjk4IDYuNTE2LTcuMTY0LTMuOTI0cS01LjQgMS4zMzItNy44NDggMS4zMzItNi4wODQgMC0xMS4xOTYtMi41Mzh0LTguMDQ2LTYuODk0LTIuOTM0LTkuNTA0IDIuOTM0LTkuNTA0IDguMDQ2LTYuODk0IDExLjE5Ni0yLjUzOHE1Ljc5NiAwIDEwLjkwOCAyLjUzOHQ4LjE5IDYuOTEyIDMuMDc4IDkuNDg2elwiLFwiU0VORFwiOlwiTTYzLjUwNC02NC4wNDNxMS4xODguODY0Ljk3MiAyLjMwNGwtOS4yMTYgNTUuMjk2cS0uMTggMS4wNDQtMS4xNTIgMS42Mi0uNTA0LjI4OC0xLjExNi4yODgtLjM5NiAwLS44NjQtLjE4bC0xNi4zMDgtNi42Ni04LjcxMiAxMC42MnEtLjY0OC44MjgtMS43NjQuODI4LS40NjggMC0uNzkyLS4xNDQtLjY4NC0uMjUyLTEuMDk4LS44NDZ0LS40MTQtMS4zMTR2LTEyLjU2NGwzMS4xMDQtMzguMTI0LTM4LjQ4NCAzMy4zLTE0LjIyLTUuODMycS0xLjMzMi0uNTA0LTEuNDQtMS45OC0uMDcyLTEuNDQgMS4xNTItMi4xMjRsNTkuOTA0LTM0LjU2cS41NC0uMzI0IDEuMTUyLS4zMjQuNzIgMCAxLjI5Ni4zOTZ6XCIsXCJTRU5EX09cIjpcIk02My41MDQtNjQuMDQzcTEuMTg4Ljg2NC45NzIgMi4zMDRsLTkuMjE2IDU1LjI5NnEtLjE4IDEuMDQ0LTEuMTUyIDEuNjItLjUwNC4yODgtMS4xMTYuMjg4LS4zOTYgMC0uODY0LS4xOGwtMTguOTcyLTcuNzQtMTAuNzI4IDExLjc3MnEtLjY0OC43NTYtMS42OTIuNzU2LS41MDQgMC0uODI4LS4xNDQtLjY4NC0uMjUyLTEuMDgtLjg0NnQtLjM5Ni0xLjMxNHYtMTYuMjcybC0xNi45OTItNi45NDhxLTEuMzMyLS41MDQtMS40NC0xLjk4LS4xMDgtMS40MDQgMS4xNTItMi4xMjRsNTkuOTA0LTM0LjU2cTEuMjYtLjc1NiAyLjQ0OC4wNzJ6bS0xMi4zMTIgNTMuOTY0bDcuOTU2LTQ3LjYyOC01MS42MjQgMjkuNzcyIDEyLjA5NiA0LjkzMiAzMS4wNjgtMjMuMDA0LTE3LjIwOCAyOC42OTJ6XCIsXCJISVNUT1JZXCI6XCJNNTUuMjk2LTMyLjE4M3EwIDUuNjE2LTIuMTk2IDEwLjcyOHQtNS45MDQgOC44Mi04LjgyIDUuOTA0LTEwLjcyOCAyLjE5NnEtNi4xOTIgMC0xMS43NzItMi42MXQtOS41MDQtNy4zNjJxLS4yNTItLjM2LS4yMzQtLjgxdC4zMDYtLjczOGw0LjkzMi00Ljk2OHEuMzYtLjMyNC45LS4zMjQuNTc2LjA3Mi44MjguNDMyIDIuNjI4IDMuNDIgNi40NDQgNS4yOTJ0OC4xIDEuODcycTMuNzQ0IDAgNy4xNDYtMS40NTh0NS44ODYtMy45NDIgMy45NDItNS44ODYgMS40NTgtNy4xNDYtMS40NTgtNy4xNDYtMy45NDItNS44ODYtNS44ODYtMy45NDItNy4xNDYtMS40NThxLTMuNTI4IDAtNi43NjggMS4yNzh0LTUuNzYgMy42NTRsNC45MzIgNC45NjhxMS4xMTYgMS4wOC41MDQgMi40ODQtLjYxMiAxLjQ0LTIuMTI0IDEuNDRoLTE2LjEyOHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0xNi4xMjhxMC0xLjUxMiAxLjQ0LTIuMTI0IDEuNDA0LS42MTIgMi40ODQuNTA0bDQuNjggNC42NDRxMy44NTItMy42MzYgOC44MDItNS42MzR0MTAuMjQyLTEuOTk4cTUuNjE2IDAgMTAuNzI4IDIuMTk2dDguODIgNS45MDQgNS45MDQgOC44MiAyLjE5NiAxMC43Mjh6bS0yMy4wNC0xMC4zNjh2MTYuMTI4cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTExLjUycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoOC4wNjR2LTEyLjY3MnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIuMzA0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIkNJUkNMRV9USElOXCI6XCJNMjcuNjQ4LTU1LjIyM3EtNC42OCAwLTguOTQ2IDEuODM2dC03LjM0NCA0LjkxNC00LjkxNCA3LjM0NC0xLjgzNiA4Ljk0NiAxLjgzNiA4Ljk0NiA0LjkxNCA3LjM0NCA3LjM0NCA0LjkxNCA4Ljk0NiAxLjgzNiA4Ljk0Ni0xLjgzNiA3LjM0NC00LjkxNCA0LjkxNC03LjM0NCAxLjgzNi04Ljk0Ni0xLjgzNi04Ljk0Ni00LjkxNC03LjM0NC03LjM0NC00LjkxNC04Ljk0Ni0xLjgzNnptMjcuNjQ4IDIzLjA0cTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIkhFQURFUlwiOlwiTTYwLjU1Mi00LjUzNXEtMS41ODQgMC00Ljc3LS4xMjZ0LTQuODA2LS4xMjZxLTEuNTg0IDAtNC43NTIuMTI2dC00Ljc1Mi4xMjZxLS44NjQgMC0xLjMzMi0uNzM4dC0uNDY4LTEuNjM4cTAtMS4xMTYuNjEyLTEuNjU2dDEuNDA0LS42MTIgMS44MzYtLjI1MiAxLjYyLS41NHExLjE4OC0uNzU2IDEuMTg4LTUuMDRsLS4wMzYtMTQuMDc2cTAtLjc1Ni0uMDM2LTEuMTE2LS40NjgtLjE0NC0xLjgtLjE0NGgtMjQuM3EtMS4zNjggMC0xLjgzNi4xNDQtLjAzNi4zNi0uMDM2IDEuMTE2bC0uMDM2IDEzLjM1NnEwIDUuMTEyIDEuMzMyIDUuOTA0LjU3Ni4zNiAxLjcyOC40Njh0Mi4wNTIuMTI2IDEuNjIuNTQuNzIgMS42MzhxMCAuOTM2LS40NSAxLjcyOHQtMS4zMTQuNzkycS0xLjY5MiAwLTUuMDIyLS4xMjZ0LTQuOTg2LS4xMjZxLTEuNTQ4IDAtNC42MDguMTI2dC00LjU3Mi4xMjZxLS44MjggMC0xLjI3OC0uNzU2dC0uNDUtMS42MnEwLTEuMDguNTU4LTEuNjJ0MS4yOTYtLjYzIDEuNzEtLjI3IDEuNTEyLS41NHExLjE4OC0uODI4IDEuMTg4LTUuMTQ4bC0uMDM2LTIuMDUydi0yOS4yNjhxMC0uMTA4LjAxOC0uOTM2dDAtMS4zMTQtLjA1NC0xLjM4Ni0uMTI2LTEuNTEyLS4yMzQtMS4zMTQtLjM5Ni0xLjEzNC0uNTc2LS42NDhxLS41NC0uMzYtMS42Mi0uNDMydC0xLjkwOC0uMDcyLTEuNDc2LS41MDQtLjY0OC0xLjYycTAtLjkzNi40MzItMS43Mjh0MS4yOTYtLjc5MnExLjY1NiAwIDQuOTg2LjEyNnQ0Ljk4Ni4xMjZxMS41MTIgMCA0LjU1NC0uMTI2dDQuNTU0LS4xMjZxLjkgMCAxLjM1Ljc5MnQuNDUgMS43MjhxMCAxLjA4LS42MTIgMS41NjZ0LTEuMzg2LjUyMi0xLjc4Mi4xNDQtMS41NDguNDY4cS0xLjI2Ljc1Ni0xLjI2IDUuNzZsLjAzNiAxMS41MnEwIC43NTYuMDM2IDEuMTUyLjQ2OC4xMDggMS40MDQuMTA4aDI1LjE2NHEuOSAwIDEuMzY4LS4xMDguMDM2LS4zOTYuMDM2LTEuMTUybC4wMzYtMTEuNTJxMC01LjAwNC0xLjI2LTUuNzYtLjY0OC0uMzk2LTIuMTA2LS40NXQtMi4zNzYtLjQ2OC0uOTE4LTEuNzgycTAtLjkzNi40NS0xLjcyOHQxLjM1LS43OTJxMS41ODQgMCA0Ljc1Mi4xMjZ0NC43NTIuMTI2cTEuNTQ4IDAgNC42NDQtLjEyNnQ0LjY0NC0uMTI2cS45IDAgMS4zNS43OTJ0LjQ1IDEuNzI4cTAgMS4wOC0uNjMgMS41ODR0LTEuNDQuNTIyLTEuODU0LjEwOC0xLjU4NC40NXEtMS4yNi44MjgtMS4yNiA1Ljc5NmwuMDM2IDMzLjk0OHEwIDQuMjg0IDEuMjI0IDUuMDQuNTc2LjM2IDEuNjU2LjQ4NnQxLjkyNi4xNjIgMS40OTQuNTU4LjY0OCAxLjYwMnEwIC45MzYtLjQzMiAxLjcyOHQtMS4yOTYuNzkyelwiLFwiUEFSQUdSQVBIXCI6XCJNNDYuMDA4LTU3LjYzNXYyLjYyOHEwIDEuMDQ0LS42NjYgMi4xOTZ0LTEuNTMgMS4xNTJxLTEuOCAwLTEuOTQ0LjAzNi0uOTM2LjIxNi0xLjE1MiAxLjExNi0uMTA4LjM5Ni0uMTA4IDIuMzA0djQxLjQ3MnEwIC45LS42NDggMS41NDh0LTEuNTQ4LjY0OGgtMy44ODhxLS45IDAtMS41NDgtLjY0OHQtLjY0OC0xLjU0OHYtNDMuODQ4aC01LjE0OHY0My44NDhxMCAuOS0uNjMgMS41NDh0LTEuNTY2LjY0OGgtMy44ODhxLS45MzYgMC0xLjU2Ni0uNjQ4dC0uNjMtMS41NDh2LTE3Ljg1NnEtNS4yOTItLjQzMi04LjgyLTIuMTI0LTQuNTM2LTIuMDg4LTYuOTEyLTYuNDQ0LTIuMzA0LTQuMjEyLTIuMzA0LTkuMzI0IDAtNS45NzYgMy4xNjgtMTAuMjk2IDMuMTY4LTQuMjQ4IDcuNTI0LTUuNzI0IDMuOTk2LTEuMzMyIDE1LjAxMi0xLjMzMmgxNy4yNDRxLjkgMCAxLjU0OC42NDh0LjY0OCAxLjU0OHpcIixcIlNMSURFUlNcIjpcIk0xMi42NzItMTMuNzUxdjQuNjA4aC0xMi42NzJ2LTQuNjA4aDEyLjY3MnptMTIuNjcyLTQuNjA4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2OS4yMTZxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTkuMjE2cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTkuMjE2cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoOS4yMTZ6bTUuNzYtMTMuODI0djQuNjA4aC0zMS4xMDR2LTQuNjA4aDMxLjEwNHptLTIzLjA0LTE4LjQzMnY0LjYwOGgtOC4wNjR2LTQuNjA4aDguMDY0em00Ny4yMzIgMzYuODY0djQuNjA4aC0yNi40OTZ2LTQuNjA4aDI2LjQ5NnptLTM0LjU2LTQxLjQ3MnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjkuMjE2cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC05LjIxNnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi05LjIxNnEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDkuMjE2em0yMy4wNCAxOC40MzJxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnY5LjIxNnEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtOS4yMTZxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtOS4yMTZxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGg5LjIxNnptMTEuNTIgNC42MDh2NC42MDhoLTguMDY0di00LjYwOGg4LjA2NHptMC0xOC40MzJ2NC42MDhoLTMxLjEwNHYtNC42MDhoMzEuMTA0elwiLFwiU0hBUkVfQUxUXCI6XCJNNDMuNzc2LTI3LjU3NXE0Ljc4OCAwIDguMTU0IDMuMzY2dDMuMzY2IDguMTU0LTMuMzY2IDguMTU0LTguMTU0IDMuMzY2LTguMTU0LTMuMzY2LTMuMzY2LTguMTU0cTAtLjQzMi4wNzItMS4yMjRsLTEyLjk2LTYuNDhxLTMuMzEyIDMuMDk2LTcuODQ4IDMuMDk2LTQuNzg4IDAtOC4xNTQtMy4zNjZ0LTMuMzY2LTguMTU0IDMuMzY2LTguMTU0IDguMTU0LTMuMzY2cTQuNTM2IDAgNy44NDggMy4wOTZsMTIuOTYtNi40OHEtLjA3Mi0uNzkyLS4wNzItMS4yMjQgMC00Ljc4OCAzLjM2Ni04LjE1NHQ4LjE1NC0zLjM2NiA4LjE1NCAzLjM2NiAzLjM2NiA4LjE1NC0zLjM2NiA4LjE1NC04LjE1NCAzLjM2NnEtNC41MzYgMC03Ljg0OC0zLjA5NmwtMTIuOTYgNi40OHEuMDcyLjc5Mi4wNzIgMS4yMjR0LS4wNzIgMS4yMjRsMTIuOTYgNi40OHEzLjMxMi0zLjA5NiA3Ljg0OC0zLjA5NnpcIixcIlNIQVJFX0FMVF9TUVVBUkVcIjpcIk00Ni4wOC0yMS40MTlxMC0zLjE2OC0yLjI1LTUuNDM2dC01LjQxOC0yLjI2OHEtMy4wMjQgMC01LjIyIDIuMDg4bC04LjY3Ni00LjMycS4wNzItLjU3Ni4wNzItLjgyOHQtLjA3Mi0uODI4bDguNjc2LTQuMzJxMi4xOTYgMi4wODggNS4yMiAyLjA4OCAzLjE2OCAwIDUuNDE4LTIuMjY4dDIuMjUtNS40MzYtMi4yNS01LjQxOC01LjQxOC0yLjI1LTUuNDM2IDIuMjUtMi4yNjggNS40MThxMCAuMjUyLjA3Mi44MjhsLTguNjc2IDQuMzJxLTIuMjMyLTIuMDUyLTUuMjItMi4wNTItMy4xNjggMC01LjQxOCAyLjI1dC0yLjI1IDUuNDE4IDIuMjUgNS40MTggNS40MTggMi4yNXEyLjk4OCAwIDUuMjItMi4wNTJsOC42NzYgNC4zMnEtLjA3Mi41NzYtLjA3Mi44MjggMCAzLjE2OCAyLjI2OCA1LjQxOHQ1LjQzNiAyLjI1IDUuNDE4LTIuMjUgMi4yNS01LjQxOHptOS4yMTYtMjguMDQ0djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIkJPTUJcIjpcIk0yMC41NTYtNDMuMjM1cS0uMzYtLjktMS4yMjQtMS4yNnQtMS43NjQgMHEtMy44ODggMS41ODQtNi44NzYgNC41NzJ0LTQuNTcyIDYuODc2cS0uMzYuOSAwIDEuNzY0dDEuMjYgMS4yMjRxLjQ2OC4xOC44NjQuMTggMS41MTIgMCAyLjE2LTEuNDQgMS4yMjQtMy4wMjQgMy41NDYtNS4zNDZ0NS4zNDYtMy41NDZxLjktLjM5NiAxLjI2LTEuMjZ0MC0xLjc2NHptMzMuOTEyLTEyLjgxNmwxLjY1NiAxLjY1Ni04Ljc4NCA4Ljc0OCAyLjQ0OCAyLjQ0OHEuNjg0LjY4NC42ODQgMS42Mzh0LS42ODQgMS42MzhsLTIuMzA0IDIuMzA0cTMuMjA0IDUuNzk2IDMuMjA0IDEyLjM0OCAwIDUuMTQ4LTEuOTk4IDkuODQ2dC01LjQgOC4xLTguMSA1LjQtOS44NDYgMS45OTgtOS44NDYtMS45OTgtOC4xLTUuNC01LjQtOC4xLTEuOTk4LTkuODQ2IDEuOTk4LTkuODQ2IDUuNC04LjEgOC4xLTUuNCA5Ljg0Ni0xLjk5OHE2LjU1MiAwIDEyLjM0OCAzLjIwNGwyLjMwNC0yLjMwNHEuNjg0LS42ODQgMS42MzgtLjY4NHQxLjYzOC42ODRsMi40NDggMi40NDh6bS4yODgtMi4wMTZxLS4zNi4zNi0uNzkyLjM2LS40NjggMC0uODI4LS4zNmwtMy4yNzYtMy4yNHEtLjMyNC0uMzYtLjMyNC0uODI4dC4zMjQtLjgyOHEuMzYtLjMyNC44MjgtLjMyNHQuODI4LjMyNGwzLjI0IDMuMjc2cS4zNi4zMjQuMzYuODF0LS4zNi44MXptOC4yOCA4LjI4cS0uMzk2LjMyNC0uODI4LjMyNHQtLjgyOC0uMzI0bC0zLjI0LTMuMjc2cS0uMzYtLjMyNC0uMzYtLjgxdC4zNi0uODFxLjMyNC0uMzYuODEtLjM2dC44MS4zNmwzLjI3NiAzLjI0cS4zMjQuMzYuMzI0LjgyOHQtLjMyNC44Mjh6bTEuNDc2LTYuNTg4cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTMuNDU2cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44MjguMzI0LS44MjguODI4LS4zMjRoMy40NTZxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0tNi45MTItNi45MTJ2My40NTZxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNC0uODI4LS4zMjQtLjMyNC0uODI4di0zLjQ1NnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0LjgyOC4zMjQuMzI0LjgyOHptNS40MzYgMS45OGwtMy4yNzYgMy4yNHEtLjM2LjM2LS43OTIuMzYtLjQ2OCAwLS44MjgtLjM2LS4zNi0uMzI0LS4zNi0uODF0LjM2LS44MWwzLjI0LTMuMjc2cS4zNi0uMzI0LjgyOC0uMzI0dC44MjguMzI0cS4zMjQuMzYuMzI0LjgyOHQtLjMyNC44Mjh6XCIsXCJTT0NDRVJfQkFMTF9PXCI6XCJNMjEuOTI0LTM1LjA2M2wxMC4zMzItNy40ODggMTAuMzMyIDcuNDg4LTMuOTI0IDEyLjA5NmgtMTIuNzh6bTEwLjMzMi0yOS4zNzZxNi41NTIgMCAxMi41MjggMi41NTZ0MTAuMjk2IDYuODc2IDYuODc2IDEwLjI5NiAyLjU1NiAxMi41MjgtMi41NTYgMTIuNTI4LTYuODc2IDEwLjI5Ni0xMC4yOTYgNi44NzYtMTIuNTI4IDIuNTU2LTEyLjUyOC0yLjU1Ni0xMC4yOTYtNi44NzYtNi44NzYtMTAuMjk2LTIuNTU2LTEyLjUyOCAyLjU1Ni0xMi41MjggNi44NzYtMTAuMjk2IDEwLjI5Ni02Ljg3NiAxMi41MjgtMi41NTZ6bTIyLjI4NCA0OC42cTUuMzY0LTcuMzA4IDUuMzY0LTE2LjM0NHYtLjEwOGwtMy42NzIgMy4yMDQtOC42NC04LjA2NCAyLjI2OC0xMS42MjggNC44MjQuNDMycS01LjQtNy40MTYtMTQuMDA0LTEwLjE1MmwxLjkwOCA0LjQ2NC0xMC4zMzIgNS43MjQtMTAuMzMyLTUuNzI0IDEuOTA4LTQuNDY0cS04LjYwNCAyLjczNi0xNC4wMDQgMTAuMTUybDQuODYtLjQzMiAyLjIzMiAxMS42MjgtOC42NCA4LjA2NC0zLjY3Mi0zLjIwNHYuMTA4cTAgOS4wMzYgNS4zNjQgMTYuMzQ0bDEuMDgtNC43NTIgMTEuNzM2IDEuNDQgNS4wMDQgMTAuNzI4LTQuMTc2IDIuNDg0cTQuMjEyIDEuNDA0IDguNjQgMS40MDR0OC42NC0xLjQwNGwtNC4xNzYtMi40ODQgNS4wMDQtMTAuNzI4IDExLjczNi0xLjQ0elwiLFwiVFRZXCI6XCJNMTYuMTI4LTE3LjIwN3Y2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC02LjkxMnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptLTYuOTEyLTEzLjgyNHY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC02LjkxMnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptMjAuNzM2IDEzLjgyNHY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC02LjkxMnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptLTYuOTEyLTEzLjgyNHY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC02LjkxMnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptLTIwLjY2NC01Ljc2cS0xLjAwOCAwLTEuNjkyLS42ODR0LS42ODQtMS42NTZ2LTQuNjQ0aDE4LjUwNHY0LjY0NHEwIC45NzItLjY4NCAxLjY1NnQtMS42NTYuNjg0aC0xMy43ODh6bTQxLjQgMTkuNTg0djYuOTEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0tNi45MTItMTMuODI0djYuOTEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0yMC43MzYgMTMuODI0djYuOTEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0tNi45MTItMTMuODI0djYuOTEycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTYuOTEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4em0xMy44MjQtMTQuNjg4di40NjhoLTE4LjUwNHYtLjM2cTAtMy43NDQtMTMuNzUyLTMuNjcyLTEzLjc1Mi4wMzYtMTMuNzUyIDMuNjcydi4zNmgtMTguNTA0di0uNDY4cTAtLjYxMi4zMDYtMS41NDh0MS4yMjQtMi4zMDQgMi4zNTgtMi43MTggMy45NzgtMi43MzYgNS43Ni0yLjQzIDguMDY0LTEuNzEgMTAuNTY2LS42NjYgMTAuNTQ4LjY2NiA4LjA2NCAxLjcxIDUuNzc4IDIuNDMgMy45NzggMi43MzYgMi4zNTggMi43MTggMS4yMjQgMi4zMDQuMzA2IDEuNTQ4em0wIDE0LjY4OHY2LjkxMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC02LjkxMnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di02LjkxMnEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDYuOTEycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHptMC0xMi43NDR2NC42NDRxMCAuOTcyLS42ODQgMS42NTZ0LTEuNjU2LjY4NGgtMTMuODI0cS0uOTcyIDAtMS42NTYtLjY4NHQtLjY4NC0xLjY1NnYtNC42NDRoMTguNTA0elwiLFwiQklOT0NVTEFSU1wiOlwiTTI1LjM0NC01Mi45MTl2MjcuNjQ4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0djIwLjczNnEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMTguNDMycS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTE4LjQzMmw4Ljk2NC0zMS40MjhxLjI1Mi0uODI4IDEuMTE2LS44MjhoMTUuMjY0em0xMS41MiAwdjI1LjM0NGgtOS4yMTZ2LTI1LjM0NGg5LjIxNnptMjcuNjQ4IDMyLjI1NnYxOC40MzJxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTE4LjQzMnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0yMC43MzZxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtMjcuNjQ4aDE1LjI2NHEuODY0IDAgMS4xMTYuODI4em0tMzguMDE2LTQyLjYyNHY4LjA2NGgtMTIuNjcydi04LjA2NHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDEwLjM2OHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTI0LjE5MiAwdjguMDY0aC0xMi42NzJ2LTguMDY0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTAuMzY4cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHpcIixcIlBMVUdcIjpcIk02My4xOC00OC4xMzFxMS4zMzIgMS4zMzIgMS4zMzIgMy4yNHQtMS4zMzIgMy4yNzZsLTE0LjQzNiAxNC40IDUuNCA1LjQtNS43NiA1Ljc2cS01Ljg2OCA1Ljg2OC0xNC4wMjIgNi43MTR0LTE0LjgxNC0zLjYxOGwtMTMuMDMyIDEzLjAzMmgtNi41MTZ2LTYuNTE2bDEzLjAzMi0xMy4wMzJxLTQuNDY0LTYuNjYtMy42MTgtMTQuODE0dDYuNzE0LTE0LjAyMmw1Ljc2LTUuNzYgNS40IDUuNCAxNC40LTE0LjQzNnExLjM2OC0xLjMzMiAzLjI3Ni0xLjMzMnQzLjI0IDEuMzMyIDEuMzMyIDMuMjU4LTEuMzMyIDMuMjU4bC0xNC40IDE0LjQzNiA4LjQyNCA4LjQyNCAxNC40MzYtMTQuNHExLjM2OC0xLjMzMiAzLjI3Ni0xLjMzMnQzLjI0IDEuMzMyelwiLFwiU0xJREVTSEFSRVwiOlwiTTMxLjQyOC0zNy43OTlxMCAyLjk4OC0yLjI4NiA1LjEzdC01LjQ5IDIuMTQyLTUuNDktMi4xNDItMi4yODYtNS4xM3EwLTMuMDI0IDIuMjg2LTUuMTQ4dDUuNDktMi4xMjQgNS40OSAyLjEyNCAyLjI4NiA1LjE0OHptMTguMDcyIDBxMCAyLjk4OC0yLjI2OCA1LjEzdC01LjUwOCAyLjE0MnEtMy4yMDQgMC01LjQ5LTIuMTQydC0yLjI4Ni01LjEzcTAtMy4wMjQgMi4yODYtNS4xNDh0NS40OS0yLjEyNHEzLjI0IDAgNS41MDggMi4xMjR0Mi4yNjggNS4xNDh6bTguMSA2LjQ4di0yNC4wMTJxMC0zLjEzMi0xLjE1Mi00LjQ0NnQtMy45OTYtMS4zMTRoLTQwLjAzMnEtMi45ODggMC00LjA1IDEuMjI0dC0xLjA2MiA0LjUzNnYyNC4yMjhxMS41NDguODI4IDMuMTg2IDEuNDR0Mi45MTYgMS4wMDggMi45MTYuNjY2IDIuNTU2LjM5NiAyLjUyLjE0NCAyLjEwNi4wMTggMi4wMzQtLjA3MiAxLjYwMi0uMDcycTIuNDQ4LS4wMzYgMy40Mi45NzIuMjE2LjIxNi4zNi4zMjQuOTM2LjkgMi4xOTYgMS44MzYuMjUyLTMuMjc2IDQuMjQ4LTMuMTMyLjE4IDAgMS4zMTQuMDU0dDEuNTQ4LjA3MiAxLjYzOC4wMzYgMS45MDgtLjAzNiAxLjk2Mi0uMTYyIDIuMTk2LS4zMDYgMi4yMzItLjQ4NiAyLjQxMi0uNzAyIDIuNDMtLjk3MiAyLjU5Mi0xLjI0MnptNS44NjgtLjE4cS00LjM1NiA1LjM2NC0xMy4zOTIgOS4wNzIgMy4wMjQgMTAuMjYtLjgyOCAxNi43NC0yLjM3NiA0LjA2OC02LjU4OCA1LjMyOC0zLjc0NCAxLjE1Mi02LjU1Mi0uNTQtMy4wOTYtMS44MzYtMi45NTItNS45MDRsLS4wMzYtMTEuNzM2di0uMDM2cS0uMjg4LS4wNzItLjg4Mi0uMjE2dC0uODQ2LS4xOGwtLjAzNiAxMi4xNjhxLjE0NCA0LjEwNC0yLjk4OCA1LjkwNC0yLjg0NCAxLjY5Mi02LjU4OC41NC00LjIxMi0xLjI5Ni02LjU1Mi01LjQtMy43OC02LjQ4LS43OTItMTYuNjY4LTkuMDM2LTMuNzA4LTEzLjM5Mi05LjA3Mi0uOS0xLjMzMi0uMTQ0LTIuMjY4dDIuMTYuMDM2cS4xMDguMDcyLjM5Ni4yNTJ0LjM5Ni4yODh2LTI0Ljk4NHEwLTIuNTkyIDEuNjkyLTQuNDI4dDQuMTA0LTEuODM2aDQ1LjI1MnEyLjQxMiAwIDQuMTA0IDEuODM2dDEuNjkyIDQuNDI4djI0Ljk4NGwuNzU2LS41NHExLjQwNC0uOTcyIDIuMTYtLjAzNnQtLjE0NCAyLjI2OHpcIixcIlRXSVRDSFwiOlwiTTMyLjI1Ni00OC44MTV2MTUuNjI0aC01LjIydi0xNS42MjRoNS4yMnptMTQuMzI4IDB2MTUuNjI0aC01LjIydi0xNS42MjRoNS4yMnptMCAyNy4zNmw5LjEwOC05LjE0NHYtMjguNjJoLTQyLjk4NHYzNy43NjRoMTEuNzM2djcuODEybDcuODEyLTcuODEyaDE0LjMyOHptMTQuMzI4LTQyLjk4NHYzNi40NjhsLTE1LjYyNCAxNS42MjRoLTExLjczNmwtNy44MTIgNy44MTJoLTcuODEydi03LjgxMmgtMTQuMzI4di00MS42ODhsMy45MjQtMTAuNDA0aDUzLjM4OHpcIixcIllFTFBcIjpcIk0yNy44MjgtMTYuOTU1djQuNTcycS0uMDM2IDEwLjUxMi0uMjE2IDEwLjk4LS40MzIgMS4xNTItMS44MzYgMS40NC0xLjk0NC4zMjQtNi41MzQtMS4zNjh0LTUuODUtMy4yMDRxLS40NjgtLjU0LS42MTItMS4yOTYtLjAzNi0uNDMyLjE0NC0uOTM2LjE0NC0uMzYgMS4yMjQtMS42OTJ0Ni41MTYtNy43NzZxLjAzNiAwIDIuMTYtMi41Mi41NC0uNjg0IDEuNDIyLS44ODJ0MS43ODIuMTI2cS44NjQuMzYgMS4zNSAxLjA0NHQuNDUgMS41MTJ6bS01LjM2NC05LjAzNnEtLjEwOCAxLjk4LTEuODcyIDIuNTJsLTQuMzIgMS40MDRxLTkuOSAzLjE2OC0xMC41MTIgMy4xNjgtMS4yNi0uMDcyLTEuOTQ0LTEuMjk2LS40MzItLjktLjYxMi0yLjctLjI4OC0yLjczNi4wMzYtNS45OTR0MS4wOC00LjQ4MiAyLjAxNi0xLjE1MnEuNDY4IDAgNy4yNzIgMi43NzIgMi41MiAxLjA0NCA0LjE0IDEuNjkybDMuMDI0IDEuMjI0cS44MjguMzI0IDEuMjc4IDEuMDk4dC40MTQgMS43NDZ6bTI5LjczNiAxMC42OTJxLS4yNTIgMS45NDQtMy4yOTQgNS43OTZ0LTQuODc4IDQuNTcycS0xLjMzMi41MDQtMi4yNjgtLjI1Mi0uNTA0LS4zNi02LjYyNC0xMC4zMzJsLTEuNjkyLTIuNzcycS0uNTA0LS43NTYtLjQxNC0xLjY1NnQuNzAyLTEuNjU2cTEuMjYtMS41NDggMi45ODgtLjkzNi4wMzYuMDM2IDQuMjg0IDEuNDQgNy4zMDggMi4zNzYgOC43MTIgMi44NjJ0MS42OTIuNzM4cTEuMDA4Ljc5Mi43OTIgMi4xOTZ6bS0yNC4xOTItMjIuNzUycS4xOCAzLjY3Mi0xLjk0NCA0LjM5Mi0yLjA4OC42MTItNC4xMDQtMi41NTZsLTEzLjYwOC0yMS41MjhxLS4yODgtMS4yNi42ODQtMi4yMzIgMS40NzYtMS41NDggNy40Ny0zLjIyMnQ4LjA4Mi0xLjEzNHExLjQ0LjM2IDEuNzY0IDEuNjIuMTA4LjY0OC43OTIgMTAuOTk4dC44NjQgMTMuNjYyem0yMy44MzIgMy44ODhxLjEwOCAxLjQwNC0uOTM2IDIuMTI0LS41NC4zNi0xMS44NDQgMy4wOTYtMi40MTIuNTQtMy4yNzYuODI4bC4wMzYtLjA3MnEtLjgyOC4yMTYtMS42NTYtLjE0NHQtMS4zMzItMS4xNTJxLTEuMDgtMS42OTIgMC0zLjEzMi4wMzYtLjAzNiAyLjctMy42NzIgNC41LTYuMTU2IDUuNC03LjM0NHQxLjIyNC0xLjQwNHExLjAwOC0uNjg0IDIuMzQtLjA3MiAxLjcyOC44MjggNC40MjggNC44MDZ0Mi45MTYgNi4wM3YuMTA4elwiLFwiTkVXU1BBUEVSX09cIjpcIk0zNi44NjQtNDYuMDA3aC0xMy44MjR2MTMuODI0aDEzLjgyNHYtMTMuODI0em00LjYwOCAyMy4wNHY0LjYwOGgtMjMuMDR2LTQuNjA4aDIzLjA0em0wLTI3LjY0OHYyMy4wNGgtMjMuMDR2LTIzLjA0aDIzLjA0em0yMy4wNCAyNy42NDh2NC42MDhoLTE4LjQzMnYtNC42MDhoMTguNDMyem0wLTkuMjE2djQuNjA4aC0xOC40MzJ2LTQuNjA4aDE4LjQzMnptMC05LjIxNnY0LjYwOGgtMTguNDMydi00LjYwOGgxOC40MzJ6bTAtOS4yMTZ2NC42MDhoLTE4LjQzMnYtNC42MDhoMTguNDMyem0tNTUuMjk2IDM0LjU2di0zNC41NmgtNC42MDh2MzQuNTZxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0IDEuNjItLjY4NC42ODQtMS42MnptNTkuOTA0IDB2LTM5LjE2OGgtNTUuMjk2djM5LjE2OHEwIDEuMTg4LS4zOTYgMi4zMDRoNTMuMzg4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyem00LjYwOC00My43NzZ2NDMuNzc2cTAgMi44OC0yLjAxNiA0Ljg5NnQtNC44OTYgMi4wMTZoLTU5LjkwNHEtMi44OCAwLTQuODk2LTIuMDE2dC0yLjAxNi00Ljg5NnYtMzkuMTY4aDkuMjE2di00LjYwOGg2NC41MTJ6XCIsXCJXSUZJXCI6XCJNMzYuODY0LTkuNjExcS0uNzIgMC0zLjM0OC0yLjY0NnQtMi42MjgtMy4zNjZxMC0xLjE1MiAyLjI1LTEuOTQ0dDMuNzI2LS43OTIgMy43MjYuNzkyIDIuMjUgMS45NDRxMCAuNzItMi42MjggMy4zNjZ0LTMuMzQ4IDIuNjQ2em05LjcyLTkuNzU2cS0uMDcyIDAtMS40NC0uOXQtMy42NTQtMS44LTQuNjI2LS45LTQuNjI2LjktMy42MzYgMS44LTEuNDU4LjlxLS42NDggMC0zLjM2Ni0yLjd0LTIuNzE4LTMuMzQ4cTAtLjQ2OC4zNi0uODI4IDIuODA4LTIuNzcyIDcuMDU2LTQuMzU2dDguMzg4LTEuNTg0IDguMzg4IDEuNTg0IDcuMDU2IDQuMzU2cS4zNi4zNi4zNi44MjggMCAuNjQ4LTIuNzE4IDMuMzQ4dC0zLjM2NiAyLjd6bTkuODI4LTkuNzkycS0uMzk2IDAtLjgyOC0uMjg4LTQuODk2LTMuNzgtOS4wNzItNS41NjJ0LTkuNjQ4LTEuNzgycS0zLjA2IDAtNi4xMzguNzkydC01LjM2NCAxLjkwOC00LjA4NiAyLjIzMi0yLjg0NCAxLjkwOC0xLjExNi43OTJxLS42MTIgMC0zLjMxMi0yLjd0LTIuNy0zLjM0OHEwLS40MzIuMzYtLjc5MiA0Ljc1Mi00Ljc1MiAxMS41Mi03LjM4dDEzLjY4LTIuNjI4IDEzLjY4IDIuNjI4IDExLjUyIDcuMzhxLjM2LjM2LjM2Ljc5MiAwIC42NDgtMi43IDMuMzQ4dC0zLjMxMiAyLjd6bTkuNzU2LTkuNzU2cS0uMzk2IDAtLjc5Mi0uMzI0LTYuNDQ0LTUuNjUyLTEzLjM3NC04LjUxNHQtMTUuMTM4LTIuODYyLTE1LjEzOCAyLjg2Mi0xMy4zNzQgOC41MTRxLS4zOTYuMzI0LS43OTIuMzI0LS42MTIgMC0zLjMzLTIuN3QtMi43MTgtMy4zNDhxMC0uNDY4LjM2LS44MjggNi43MzItNi42OTYgMTYuMDItMTAuMzY4dDE4Ljk3Mi0zLjY3MiAxOC45NzIgMy42NzIgMTYuMDIgMTAuMzY4cS4zNi4zNi4zNi44MjggMCAuNjQ4LTIuNzE4IDMuMzQ4dC0zLjMzIDIuN3pcIixcIkNBTENVTEFUT1JcIjpcIk0xMy44MjQtOS4xNDNxMC0xLjkwOC0xLjM1LTMuMjU4dC0zLjI1OC0xLjM1LTMuMjU4IDEuMzUtMS4zNSAzLjI1OCAxLjM1IDMuMjU4IDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4em0xMy44MjQgMHEwLTEuOTA4LTEuMzUtMy4yNTh0LTMuMjU4LTEuMzUtMy4yNTggMS4zNS0xLjM1IDMuMjU4IDEuMzUgMy4yNTggMy4yNTggMS4zNSAzLjI1OC0xLjM1IDEuMzUtMy4yNTh6bS0xMy44MjQtMTMuODI0cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptMjcuNjQ4IDEzLjgyNHEwLTEuOTA4LTEuMzUtMy4yNTh0LTMuMjU4LTEuMzUtMy4yNTggMS4zNS0xLjM1IDMuMjU4IDEuMzUgMy4yNTggMy4yNTggMS4zNSAzLjI1OC0xLjM1IDEuMzUtMy4yNTh6bS0xMy44MjQtMTMuODI0cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptLTEzLjgyNC0xMy44MjRxMC0xLjkwOC0xLjM1LTMuMjU4dC0zLjI1OC0xLjM1LTMuMjU4IDEuMzUtMS4zNSAzLjI1OCAxLjM1IDMuMjU4IDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4em0yNy42NDggMTMuODI0cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptLTEzLjgyNC0xMy44MjRxMC0xLjkwOC0xLjM1LTMuMjU4dC0zLjI1OC0xLjM1LTMuMjU4IDEuMzUtMS4zNSAzLjI1OCAxLjM1IDMuMjU4IDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4em0yNy42NDggMjcuNjQ4di0xMy44MjRxMC0xLjg3Mi0xLjM2OC0zLjI0dC0zLjI0LTEuMzY4LTMuMjQgMS4zNjgtMS4zNjggMy4yNHYxMy44MjRxMCAxLjg3MiAxLjM2OCAzLjI0dDMuMjQgMS4zNjggMy4yNC0xLjM2OCAxLjM2OC0zLjI0em0tMTMuODI0LTI3LjY0OHEwLTEuOTA4LTEuMzUtMy4yNTh0LTMuMjU4LTEuMzUtMy4yNTggMS4zNS0xLjM1IDMuMjU4IDEuMzUgMy4yNTggMy4yNTggMS4zNSAzLjI1OC0xLjM1IDEuMzUtMy4yNTh6bTEzLjgyNC0xMS41MnYtOS4yMTZxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC00Ni4wOHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2OS4yMTZxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0aDQ2LjA4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyem0wIDExLjUycTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptNC42MDgtMjMuMDR2NTUuMjk2cTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OGgtNTAuNjg4cS0xLjg3MiAwLTMuMjQtMS4zNjh0LTEuMzY4LTMuMjR2LTU1LjI5NnEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg1MC42ODhxMS44NzIgMCAzLjI0IDEuMzY4dDEuMzY4IDMuMjR6XCIsXCJQQVlQQUxcIjpcIk01NC42ODQtNDEuMTgzcS42NDggMy4wMjQtLjE0NCA3LjM0NC0zLjEzMiAxNS45ODQtMjAuMzQgMTUuOTg0aC0xLjU4NHEtLjkgMC0xLjU4NC41OTR0LS44NjQgMS41M2wtLjE0NC42ODQtMS45OCAxMi40NTYtLjA3Mi41NHEtLjE4LjkzNi0uODgyIDEuNTN0LTEuNjAyLjU5NGgtOS4wMzZxLS43NTYgMC0xLjE4OC0uNTR0LS4zMjQtMS4yOTZxLjMyNC0yLjAxNi45NTQtNi4wNDh0Ljk1NC02LjA0OC45NzItNi4wMy45NzItNi4wM3EuMTgtMS4zMzIgMS41NDgtMS4zMzJoNC43MTZxNC43ODguMDcyIDguNDk2LS43NTYgNi4zLTEuNDA0IDEwLjMzMi01LjE4NCAzLjY3Mi0zLjQyIDUuNTgtOC44NTYuODY0LTIuNTIgMS4yNi00Ljc4OC4wMzYtLjIxNi4wOS0uMjd0LjEyNi0uMDM2LjIxNi4xMjZxMi44NDQgMi4xMjQgMy41MjggNS44MzJ6bS02LjE5Mi0xMC4xNTJxMCAzLjg1Mi0xLjY1NiA4LjQ5Ni0yLjg4IDguMzg4LTEwLjg3MiAxMS4zNC00LjA2OCAxLjQ0LTkuMDcyIDEuNTEyIDAgLjAzNi0zLjI0LjAzNmwtMy4yNC0uMDM2cS0zLjYgMC00LjI0OCAzLjQ1Ni0uMDcyLjI4OC0zLjA2IDE5LjA4LS4wMzYuMzYtLjQzMi4zNmgtMTAuNjJxLS43OTIgMC0xLjMxNC0uNTk0dC0uNDE0LTEuMzg2bDguMzUyLTUyLjk1NnEuMTgtMS4wNDQuOTktMS43Mjh0MS44NTQtLjY4NGgyMS41MjhxMS4yMjQgMCAzLjUxLjQ2OHQ0LjAxNCAxLjE1MnEzLjg1MiAxLjQ3NiA1Ljg4NiA0LjQyOHQyLjAzNCA3LjA1NnpcIixcIkdPT0dMRV9XQUxMRVRcIjpcIk0xNS44NzYtNDAuMjQ3cTEuMTUyIDAgMS44NzIuOTM2IDkuNTc2IDEzLjEwNCAxMy4wMzIgMjcuODY0aC0xNi4wNTZxLTQuNTcyLTE1Ljg3Ni0xMy4yMTItMjYuOTY0LS40MzItLjU3Ni0uMTA4LTEuMjA2dDEuMDQ0LS42M2gxMy40Mjh6bTIwLjEyNCAxMi44NTJxLTEuNzY0IDcuMTY0LTQuNSAxNC4xNDgtMi44NDQtMTEuMTYtOS4yMTYtMjEuMzg0IDEuNDQtNy45NTYgMS41ODQtMTYuMTY0IDcuNTk2IDEyLjI0IDEyLjEzMiAyMy40em0zLjU2NC0yNS41MjRxOC40NiAxMS42NjQgMTMuODQyIDI1LjE0NnQ2LjY0MiAyNy44NDZoLTE2LjIzNnEtMS40NzYtMjMuOTQtMTkuOTA4LTUyLjk5MmgxNS42NnptMjQuOTQ4IDIwLjczNnEwIDE1LjI2NC0zLjYzNiAyOS4yMzItMi40MTItMjAuMTYtMTIuOTI0LTM4Ljk4OC0uOS0xMC44MzYtMy44MTYtMjEuMDI0LS4xNDQtLjU3Ni4xOTgtMS4wMjZ0LjkxOC0uNDVoMTIuOTI0cS43NTYgMCAxLjM4Ni40Njh0LjgxIDEuMTg4cTQuMTQgMTQuNzI0IDQuMTQgMzAuNnpcIixcIkNDX1ZJU0FcIjpcIk03MS4xLTI4Ljc5OWgtNC45NjhxLjUwNC0xLjMzMiAyLjM3Ni02LjQ0NGwuMTA4LS4zMjRxLjE0NC0uMzYuMzYtLjkzNnQuMzI0LS45MzZsLjQzMiAxLjk4em0tNTEuOTg0LTIuMzRsLTIuMDg4LTEwLjYycS0uMzk2LTEuOTQ0LTIuNy0xLjk0NGgtOS42NDhsLS4wNzIuNDY4cTExLjE5NiAyLjg0NCAxNC41MDggMTIuMDk2em02LjQ0NC0xMi41NjRsLTUuODMyIDE1Ljc2OC0uNjEyLTMuMjA0cS0uOTM2LTIuNTItMy4wNi00LjY2MnQtNC43MTYtMy4xODZsNC44NiAxOC4zNmg2LjNsOS4zOTYtMjMuMDc2aC02LjMzNnptNS4wMDQgMjMuMTEyaDUuOTc2bDMuNzQ0LTIzLjExMmgtNS45NzZ6bTI3LjY0OC0yMi41MzZxLTIuNDg0LS45NzItNS4zNjQtLjk3Mi00LjQyOCAwLTcuMjM2IDIuMTI0dC0yLjg0NCA1LjUwOHEtLjAzNiAzLjY3MiA1LjIyIDYuMjY0IDEuNzI4LjgyOCAyLjQxMiAxLjQ3NnQuNjg0IDEuNDA0cTAgMS4wOC0xLjA4IDEuNjU2dC0yLjQ4NC41NzZxLTMuMDk2IDAtNS42MTYtMS4xODhsLS43OTItLjM5Ni0uODI4IDUuMTg0cTIuNjY0IDEuMjI0IDYuNjYgMS4yMjQgNC42OC4wMzYgNy41MDYtMi4xMjR0Mi44OTgtNS43NnEwLTMuODE2LTUuMDQtNi4yNjQtMS43NjQtLjktMi41NTYtMS41MTJ0LS43OTItMS4zNjhxMC0uNzkyLjg4Mi0xLjM4NnQyLjUzOC0uNTk0cTIuNTItLjAzNiA0LjQ2NC44NjRsLjU0LjI4OHptMTUuMy0uNTc2aC00LjYwOHEtMi4zNCAwLTMuMTMyIDEuOTQ0bC04Ljg1NiAyMS4xNjhoNi4yNjRsMS4yNi0zLjQ1Nmg3LjYzMnEuMTguNzkyLjcyIDMuNDU2aDUuNTQ0em05LjQzMi0xMS41MnY0Ni4wOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTczLjcyOHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di00Ni4wOHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg3My43MjhxMS44NzIgMCAzLjI0IDEuMzY4dDEuMzY4IDMuMjR6XCIsXCJDQ19NQVNURVJDQVJEXCI6XCJNMjQuMTU2LTMwLjg1MWgtLjQ2OHEtMS42OTIgMC0xLjY5MiAxLjE1MiAwIC43OTIuNzIuNzkyLjYxMiAwIDEuMDA4LS41NHQuNDMyLTEuNDA0em0xNC4yMi0xLjI5NmgyLjIzMnYtLjEwOHEuMDM2LS4xNDQuMDE4LS4yMzR0LS4wMzYtLjI1Mi0uMDcyLS4yODgtLjE2Mi0uMjM0LS4yNy0uMTgtLjQxNC0uMDcycS0xLjAwOCAwLTEuMjk2IDEuMzY4em0xOS40NCAxLjI5NmgtLjQzMnEtMS43MjggMC0xLjcyOCAxLjE1MiAwIC43OTIuNzIuNzkyLjYxMiAwIDEuMDA4LS41NHQuNDMyLTEuNDA0em0xMS40ODQtLjkzNnEwLTEuNDc2LTEuMDgtMS40NzYtLjY4NCAwLTEuMTE2LjcydC0uNDMyIDEuODM2cTAgMS41MTIgMS4wMDggMS41MTIuNzIgMCAxLjE3LS43MnQuNDUtMS44NzJ6bS01Mi4wMi01LjA3NmgzLjEzMmwtMS41ODQgOS40MzJoLTIuMDE2bDEuMTUyLTcuMjM2LTIuNTU2IDcuMjM2aC0xLjQwNGwtLjE0NC03LjItMS4yMjQgNy4yaC0xLjkwOGwxLjU4NC05LjQzMmgyLjkxNmwuMDcyIDUuODY4em05LjEwOCAzLjg1MnEwIC4yMTYtLjE0NCAxLjUxMi0uNTc2IDMuNjM2LS42MTIgNC4wNjhoLTEuNjkybC4wMzYtLjc5MnEtLjcyLjkzNi0yLjA4OC45MzYtLjgyOCAwLTEuMzUtLjU3NnQtLjUyMi0xLjUxMnEwLTEuNDA0LjkzNi0yLjE3OHQyLjYyOC0uNzc0cS41MDQgMCAuODI4LjAzNmwuMDE4LS4xOTguMDM2LS4xNjIuMDE4LS4xMDhxMC0uNzItMS4yOTYtLjcyLTEuMDQ0IDAtMi4xMjQuMzYgMC0uMTQ0LjI1Mi0xLjcyOCAxLjM2OC0uMzk2IDIuNDEyLS4zOTYgMi42NjQgMCAyLjY2NCAyLjIzMnptNS42MTYtMi4wODhsLS4yODggMS43NjRxLS43OTItLjEwOC0xLjQ3Ni0uMTA4LS45NzIgMC0uOTcyLjYxMiAwIC4yODguMTYyLjQzMnQuNzc0LjM5NnExLjQ0LjY4NCAxLjQ0IDIuMTYgMCAyLjU5Mi0zLjEzMiAyLjU1Ni0xLjIyNCAwLTIuMDg4LS4yMTYgMC0uMDcyLjI1Mi0xLjc2NCAxLjA0NC4yODggMS44MzYuMjg4IDEuMTUyIDAgMS4xNTItLjY4NCAwLS4yNTItLjE2Mi0uNDE0dC0uNzc0LS40NXEtMS41NDgtLjcyLTEuNTQ4LTIuMTI0IDAtMi41OTIgMy4wMjQtMi41OTIgMS4wOCAwIDEuOC4xNDR6bTMuMTY4IDBoMS4wMDhsLS4yNTIgMS44NzJoLTEuMDQ0cS0uMDcyLjYxMi0uMjM0IDEuNDU4dC0uMjUyIDEuMzg2LS4wOS42NDhxMCAuNTc2LjY4NC41NzYuMjg4IDAgLjU3Ni0uMDcybC0uMjg4IDEuNjkycS0uNzU2LjI1Mi0xLjQ0LjI1Mi0xLjU0OCAwLTEuNjItMS42OTIgMC0uNDMyLjI4OC0yLjAxNi4xMDgtLjcyLjktNS4yNTZoMS45OHptNy4zMDggMi42MjhxMCAuODI4LS4yNTIgMS44NzJoLTMuOTk2cS0uMTA4Ljc5Mi4zNiAxLjE4OHQxLjM2OC4zOTZxMS4wOCAwIDIuMDg4LS41MDRsLS4zMjQgMS45NDRxLTEuMDguMjg4LTIuMDUyLjI4OC0zLjQyIDAtMy40Mi0zLjQyIDAtMS45OC45OS0zLjI1OHQyLjUwMi0xLjI3OHExLjI2IDAgMS45OTguNzU2dC43MzggMi4wMTZ6bTUuMDA0LTIuNjY0cS0uNDY4LjgyOC0uNzkyIDIuMjMyLS43OTItLjA3Mi0xLjExNi44NjR0LS45IDQuNjA4aC0yLjAxNmwuMTA4LS41MDRxLjc5Mi00LjY4IDEuMDQ0LTcuMTY0aDEuODM2bC0uMTA4IDEuMTg4cS41MDQtLjc1Ni45MTgtMS4wNjJ0MS4wMjYtLjE2MnptNi43MzItMS40NzZsLS4zMjQgMi4wNTJxLTEuMDA4LS41MDQtMS44LS41MDQtMS4xMTYgMC0xLjgzNi45OXQtLjcyIDIuNTM4cTAgMS4wOC40ODYgMS42OTJ0MS4zODYuNjEycS43NTYgMCAxLjcyOC0uNDY4bC0uMzYgMi4xMjRxLTEuMDA4LjI4OC0xLjguMjg4LTEuNjIgMC0yLjU3NC0xLjA5OHQtLjk1NC0yLjk3cTAtMi41MiAxLjI3OC00LjEyMnQzLjI5NC0xLjYwMnEuOTM2IDAgMi4xOTYuNDY4em01LjgzMiAzLjZxMCAuNjQ4LS4xNDQgMS41MTItLjQ2OCAyLjg0NC0uNjEyIDQuMDY4aC0xLjY1NmwuMDM2LS43OTJxLS43Mi45MzYtMi4xMjQuOTM2LS44MjggMC0xLjMzMi0uNTc2dC0uNTA0LTEuNTEycTAtMS40MDQuOTE4LTIuMTc4dDIuNjEtLjc3NHEuNTQgMCAuODI4LjAzNi4wNzItLjI1Mi4wNzItLjQ2OCAwLS43Mi0xLjI5Ni0uNzItMS4wNDQgMC0yLjEyNC4zNiAwLS4xNDQuMjg4LTEuNzI4IDEuMzY4LS4zOTYgMi40MTItLjM5NiAyLjYyOCAwIDIuNjI4IDIuMjMyem01LjA3Ni0yLjEyNHEtLjUwNC44NjQtLjc1NiAyLjIzMi0uODI4LS4wNzItMS4xMzQuODI4dC0uOTE4IDQuNjQ0aC0yLjAxNmwuMTA4LS41MDRxLjY4NC0zLjc0NCAxLjA0NC03LjE2NGgxLjg3MnEwIC4zOTYtLjE0NCAxLjE4OC41NC0uNzU2Ljk1NC0xLjA2MnQuOTktLjE2MnptNS4wNzYtMS43MjhoMi4wMTZsLTEuNTQ4IDkuNDMyaC0xLjkwOGwuMTA4LS42ODRxLS44MjguODI4LTEuODcyLjgyOC0xLjExNiAwLTEuNzgyLS44NjR0LS42NjYtMi4zMDRxMC0xLjkwOC45OS0zLjMxMnQyLjMyMi0xLjQwNHExLjExNiAwIDEuOTA4IDEuMDQ0em0zLjk5NiA0LjY4cTAtNS4zMjgtMi42MS05LjgyOHQtNy4xMjgtNy4xMjgtOS44NDYtMi42MjhxLTYuNTE2IDAtMTEuODA4IDMuOTYgNC41NzIgNC4xNzYgNi4xNTYgMTAuMjI0aC0xLjhxLTEuNTg0LTUuNC01LjY4OC05LjEwOC00LjEwNCAzLjcwOC01LjY4OCA5LjEwOGgtMS44cTEuNTg0LTYuMDQ4IDYuMTU2LTEwLjIyNC01LjI5Mi0zLjk2LTExLjgwOC0zLjk2LTUuMzI4IDAtOS44NDYgMi42Mjh0LTcuMTI4IDcuMTI4LTIuNjEgOS44MjggMi42MSA5LjgyOCA3LjEyOCA3LjEyOCA5Ljg0NiAyLjYyOHE2LjUxNiAwIDExLjgwOC0zLjk2LTQuMzItMy45OTYtNS45NC05LjUwNGgxLjhxMS42NTYgNC45NjggNS40NzIgOC4zODggMy44MTYtMy40MiA1LjQ3Mi04LjM4OGgxLjhxLTEuNjIgNS41MDgtNS45NCA5LjUwNCA1LjI5MiAzLjk2IDExLjgwOCAzLjk2IDUuMzI4IDAgOS44NDYtMi42Mjh0Ny4xMjgtNy4xMjggMi42MS05LjgyOHptOC43NDgtMjMuMDR2NDYuMDhxMCAxLjg3Mi0xLjM2OCAzLjI0dC0zLjI0IDEuMzY4aC03My43MjhxLTEuODcyIDAtMy4yNC0xLjM2OHQtMS4zNjgtMy4yNHYtNDYuMDhxMC0xLjg3MiAxLjM2OC0zLjI0dDMuMjQtMS4zNjhoNzMuNzI4cTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0elwiLFwiQ0NfRElTQ09WRVJcIjpcIk0xMS4yNjgtMzYuNDY3cTAgMS44MzYtMS4yOTYgMy4wMjQtMS4wNDQuOTM2LTMuMjA0LjkzNmgtLjYxMnYtNy45MmguNjEycTIuMTk2IDAgMy4yMDQuOTcyIDEuMjk2IDEuMTE2IDEuMjk2IDIuOTg4em02My45MzYtMi4zNHEwIDEuODcyLTIuMzA0IDEuODcyaC0uNjg0di0zLjYzNmguNzJxMi4yNjggMCAyLjI2OCAxLjc2NHptLTYxLjUyNCAyLjM0cTAtMi42NjQtMS44LTQuMzM4dC00LjY0NC0xLjY3NGgtMy40MnYxMS45ODhoMy40MnEyLjY2NCAwIDQuMjg0LTEuMzY4IDIuMTYtMS44MzYgMi4xNi00LjYwOHptMS4wOCA1Ljk3NmgyLjM0di0xMS45ODhoLTIuMzR2MTEuOTg4em0xMS41Mi0zLjYzNnEwLTEuNDQtLjczOC0yLjIzMnQtMi43MTgtMS41MTJxLTEuMDQ0LS4zNi0xLjQyMi0uNjg0dC0uMzc4LS44MjhxMC0uNTc2LjQ4Ni0uOTU0dDEuMjQyLS4zNzhxMS4wNDQgMCAxLjkwOC45NzJsMS4yMjQtMS41ODRxLTEuNDc2LTEuMzMyLTMuNTI4LTEuMzMyLTEuNTg0IDAtMi42NjQuOTl0LTEuMDggMi40M3EwIDEuMjYuNjQ4IDEuOTk4dDIuMzA0IDEuMzE0cTEuMzMyLjQ2OCAxLjYyLjY4NC42ODQuNDMyLjY4NCAxLjIyNCAwIC43Mi0uNTA0IDEuMjA2dC0xLjI5Ni40ODZxLTEuNzI4IDAtMi41NTYtMS41ODRsLTEuNTEyIDEuNDRxMS41ODQgMi4zMDQgNC4xNCAyLjMwNCAxLjgzNiAwIDIuOTg4LTEuMDk4dDEuMTUyLTIuODYyem0xMC4wMDggMy4yNHYtMi43NzJxLTEuMzMyIDEuMzMyLTIuODA4IDEuMzMyLTEuNzY0IDAtMi44OTgtMS4xN3QtMS4xMzQtMi45N3EwLTEuNzI4IDEuMTM0LTIuOTM0dDIuNzktMS4yMDZxMS41NDggMCAyLjkxNiAxLjM2OHYtMi43NzJxLTEuNDQtLjcyLTIuODgtLjcyLTIuNjY0IDAtNC41MTggMS44MTh0LTEuODU0IDQuNDQ2IDEuODM2IDQuNDQ2IDQuNSAxLjgxOHExLjUxMiAwIDIuOTE2LS42ODR6bTQ0LjM1MiAyMS43NDR2LTE4Ljk3MnEtMi4zNCAxLjQ0LTUuMjAyIDMuMDI0dC04LjU1IDQuMjEyLTExLjg2MiA0Ljk1LTE1LjAzIDQuODQyLTE4LjE0NCA0LjI0OGg1Ni40ODRxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ6bS0zMC42MzYtMjcuMjUycTAtMi43LTEuOTA4LTQuNjA4dC00LjYwOC0xLjkwOC00LjYwOCAxLjkwOC0xLjkwOCA0LjYwOCAxLjkwOCA0LjYwOCA0LjYwOCAxLjkwOCA0LjYwOC0xLjkwOCAxLjkwOC00LjYwOHptNS40NzIgNi4yMjhsNS4xODQtMTIuMzEyaC0yLjU1NmwtMy4yNCA4LjA2NC0zLjIwNC04LjA2NGgtMi41NTZsNS4xMTIgMTIuMzEyaDEuMjZ6bTYuMjI4LS4zMjRoNi42MjR2LTIuMDE2aC00LjI4NHYtMy4yNGg0LjE0di0yLjAxNmgtNC4xNHYtMi42NjRoNC4yODR2LTIuMDUyaC02LjYyNHYxMS45ODh6bTE0LjA3NiAwaDIuODhsLTMuNzgtNS4wNHEyLjczNi0uNTc2IDIuNzM2LTMuMzg0IDAtMS42OTItMS4xMTYtMi42Mjh0LTMuMTMyLS45MzZoLTMuNDkydjExLjk4OGgyLjM0di00Ljc4OGguMzI0em03LjE2NC0yNC41MTZ2NDUuNjQ4cTAgMi4wMTYtMS4zODYgMy40MnQtMy4zNjYgMS40MDRoLTczLjQ0cS0xLjk4IDAtMy4zNjYtMS40MDR0LTEuMzg2LTMuNDJ2LTQ1LjY0OHEwLTIuMDE2IDEuMzg2LTMuNDJ0My4zNjYtMS40MDRoNzMuNDRxMS45OCAwIDMuMzY2IDEuNDA0dDEuMzg2IDMuNDJ6XCIsXCJDQ19BTUVYXCI6XCJNNC4yODQtMzkuODg3aDMuMjA0bC0xLjYyLTMuODg4em0yMi4zNTYgMTguOTM2bDIuNjY0LTIuODQ0LTIuNTItMi44NDRoLTUuODY4djEuNzY0aDUuMTEydjEuOThoLTUuMTEydjEuOTQ0aDUuNzI0em01LjY4OC0yLjgwOGwzLjU2NCAzLjk2di03LjgxMnptMTAuMzY4LTEuNjkycTAtMS4xODgtMS40NC0xLjE4OGgtMy4wMjR2Mi40ODRoMi45ODhxMS40NzYgMCAxLjQ3Ni0xLjI5NnptMTAuNDA0LS4xNDRxMC0xLjA0NC0xLjUxMi0xLjA0NGgtMi45NTJ2Mi4xOTZoMi45MTZxMS41NDggMCAxLjU0OC0xLjE1MnptLTEwLjAwOC0xNi43NzZxMC0xLjA0NC0xLjUxMi0xLjA0NGgtMi45NTJ2Mi4xNmgyLjkxNnExLjU0OCAwIDEuNTQ4LTEuMTE2em0xNi41MjQgMi40ODRoMy4yMDRsLTEuNTg0LTMuODg4em0tMzQuNDUyLTUuNTh2OS43NTZoLTIuMzc2di03LjYzMmwtMy4zODQgNy42MzJoLTIuMDUybC0zLjM4NC03LjYzMnY3LjYzMmgtNC43NTJsLS45LTIuMTZoLTQuODZsLS45IDIuMTZoLTIuNTJsNC4xNzYtOS43NTZoMy40NTZsMy45NiA5LjI1MnYtOS4yNTJoMy44MTZsMy4wNiA2LjYyNCAyLjc3Mi02LjYyNGgzLjg4OHptMjAuMDE2IDIwLjAxNnEwIC43Mi0uMTk4IDEuMjZ0LS41MDQuOS0uODEuNTk0LS45MzYuMzYtMS4xMzQuMTYyLTEuMTM0LjAzNi0xLjE3LS4wMTgtMS4wNjItLjAxOHYzLjI3NmgtNC41MzZsLTIuODgtMy4yNC0yLjk4OCAzLjI0aC05LjIxNnYtOS43NTZoOS4zNmwyLjg4IDMuMjA0IDIuOTUyLTMuMjA0aDcuNDUycTMuOTI0IDAgMy45MjQgMy4yMDR6bS0xMC40NzYtMTIuMjc2djIuMDE2aC03LjgxMnYtOS43NTZoNy44MTJ2Mi4wNTJoLTUuNDcydjEuNzY0aDUuMzI4djEuOThoLTUuMzI4djEuOTQ0aDUuNDcyem00OC4yNCAyMC4xMjR2OC4yNDRxMCAxLjk4LTEuMzg2IDMuNDAydC0zLjM2NiAxLjQyMmgtNzMuNDRxLTEuOTggMC0zLjM2Ni0xLjQyMnQtMS4zODYtMy40MDJ2LTI0LjQwOGgzLjk5NmwuOS0yLjE5NmgxLjk4bC45IDIuMTk2aDcuODQ4di0xLjY1NmwuNjg0IDEuNjU2aDQuMDY4bC43Mi0xLjY5MnYxLjY5MmgxOS40NzZ2LTMuNTY0bC4zNi0uMDM2cS4zNiAwIC4zNi41MDR2My4wOTZoMTAuMDQ0di0uODI4cS44MjguNDMyIDEuOTguNjQ4dDEuODkuMjM0IDIuMjY4LS4wMTggMS44NTQtLjAzNmwuOS0yLjE5NmgyLjAxNmwuOSAyLjE5Nmg4LjE3MnYtMi4wODhsMS4yMjQgMi4wODhoNi41NTJ2LTEzLjYwOGgtNi40OHYxLjU4NGwtLjktMS41ODRoLTYuNjZ2MS41ODRsLS44MjgtMS41ODRoLTguOTY0cS0yLjQ4NCAwLTMuOTI0Ljc5MnYtLjc5MmgtNi4xOTJ2Ljc5MnEtLjg2NC0uNzkyLTIuNjI4LS43OTJoLTIyLjYwOGwtMS41NDggMy40OTItMS41NDgtMy40OTJoLTcuMTI4djEuNTg0bC0uNzkyLTEuNTg0aC02LjA4NGwtMi44MDggNi40NDR2LTE0LjA3NnEwLTEuOTggMS4zODYtMy40MDJ0My4zNjYtMS40MjJoNzMuNDRxMS45OCAwIDMuMzY2IDEuNDIydDEuMzg2IDMuNDAydjI0LjQwOGgtNC4zMnEtMS44MzYgMC0yLjkxNi43OTJ2LS43OTJoLTYuMzcycS0xLjk4IDAtMi44MDguNzkydi0uNzkyaC0xMS4zNzZ2Ljc5MnEtMS4xMTYtLjc5Mi0zLjEzMi0uNzkyaC03LjUyNHYuNzkycS0uODI4LS43OTItMy4yNzYtLjc5MmgtOC40MjRsLTEuOTQ0IDIuMDg4LTEuOC0yLjA4OGgtMTIuNTY0djEzLjYwOGgxMi4zNDhsMS45OC0yLjEyNCAxLjg3MiAyLjEyNGg3LjU5NnYtMy4yMDRoLjc1NnEyLjEyNCAwIDMuMjQtLjQ2OHYzLjY3Mmg2LjI2NHYtMy41NjRoLjI4OHEuMjg4IDAgLjM2LjA3MnQuMDcyLjM2djMuMTMyaDE5LjA0NHEyLjA1MiAwIDMuMTY4LS44NjR2Ljg2NGg2LjA0OHEyLjE2IDAgMy40Mi0uNjEyem0tMjcuMjg4LTguNDI0cTAgLjgyOC0uNDMyIDEuNTQ4dC0xLjIyNCAxLjA0NHEuOS4zMjQgMS4yMjQuOTM2dC4zMjQgMS42NTZ2MS45NDRoLTIuMzR2LTEuNjJxMC0xLjE4OC0uNDMyLTEuNTY2dC0xLjY1Ni0uMzc4aC0yLjQ4NHYzLjU2NGgtMi4zNHYtOS43NTZoNS41NDRxMS43MjggMCAyLjc3Mi41NHQxLjA0NCAyLjA4OHptLTkuOTcyLTE2LjgxMnEwIC44NjQtLjQ1IDEuNTg0dC0xLjIwNiAxLjA0NHEuOTM2LjMyNCAxLjI0Mi45MTh0LjMwNiAxLjY3NHYxLjkwOGgtMi4zNHEwLS4zMjQuMDE4LS45NTR0MC0uOS0uMTA4LS42NjYtLjMwNi0uNTc2LS42My0uMzA2LTEuMDYyLS4xMjZoLTIuNTJ2My41MjhoLTIuMzA0di05Ljc1Nmw1LjUwOC4wMzZxMS43NjQgMCAyLjgwOC41MjJ0MS4wNDQgMi4wN3ptMTkuMDQ0IDIxLjkyNHYyLjAxNmgtNy43NzZ2LTkuNzU2aDcuNzc2djIuMDE2aC01LjQzNnYxLjc2NGg1LjMyOHYxLjk4aC01LjMyOHYxLjk0NHptLTE1LjMzNi0yNC41NTJ2OS43NTZoLTIuMzc2di05Ljc1NmgyLjM3NnptMjQuOTQ4IDIzLjQ3MnEwIDMuMDk2LTMuNjcyIDMuMDk2aC00LjUzNnYtMi4wODhoNC41MzZxMS4yMjQgMCAxLjIyNC0uOSAwLS41NzYtLjYxMi0uNzU2dC0xLjQ5NC0uMTgtMS43ODItLjEyNi0xLjUxMi0uODEtLjYxMi0xLjk4cTAtMS40MDQuOTM2LTIuMTZ0Mi4zNzYtLjc1Nmg0LjY4djIuMDUyaC00LjI4NHEtMS4yOTYgMC0xLjI5Ni45IDAgLjU3Ni42My43Mzh0MS41MTIuMTQ0IDEuNzY0LjA5IDEuNTEyLjc3NC42MyAxLjk2MnptOC42MDQtMS44djMuNjM2cS0uODY0IDEuMjYtMy4xNjggMS4yNmgtNC41di0yLjA4OGg0LjVxMS4xODggMCAxLjE4OC0uOSAwLS40NjgtLjQ1LS42ODR0LTEuMTE2LS4xOTgtMS40NC0uMDcyLTEuNDQtLjI4OC0xLjExNi0uODY0LS40NS0xLjc0NnEwLTEuNDA0Ljk1NC0yLjE2dDIuMzk0LS43NTZoNC42NDR2Mi4wNTJoLTQuMjQ4cS0xLjI5NiAwLTEuMjk2LjkgMCAuNzIgMS4wNDQuNzkydDIuNDY2LjE4IDIuMDM0LjkzNnptLTUuOTQtMjEuNjM2djkuNzJoLTMuMzEybC00LjM5Mi03LjMwOHY3LjMwOGgtNC43NTJsLS45MzYtMi4xNmgtNC44MjRsLS45IDIuMTZoLTIuN3EtNC42NDQgMC00LjY0NC00Ljc4OCAwLTQuOTY4IDQuNzg4LTQuOTY4aDIuMjY4djIuMTI0cS0uMjUyIDAtMS4wMDgtLjAzNnQtMS4wMjYtLjAxOC0uODI4LjA3Mi0uNzc0LjIzNC0uNTIyLjQ4Ni0uNDE0LjgyOC0uMTA4IDEuMjA2cTAgMS4zNjguNDg2IDIuMDg4dDEuNzgyLjcyaDEuMDQ0bDMuMzEyLTcuNjY4aDMuNDkybDMuOTI0IDkuMjE2di05LjIxNmgzLjU2NGw0LjEwNCA2Ljc2OHYtNi43NjhoMi4zNzZ6XCIsXCJDQ19QQVlQQUxcIjpcIk0yNi44Mi0zMS44MjNxMCAxLjMzMi0uOTE4IDIuMjE0dC0yLjI1Ljg4MnEtMS4wNDQgMC0xLjY3NC0uNTc2dC0uNjMtMS41ODRxMC0xLjMzMi45LTIuMjV0Mi4yMzItLjkxOHExLjAwOCAwIDEuNjc0LjU5NHQuNjY2IDEuNjM4em0yOC4yNi01LjM2NHEwIDEuNTEyLS43OTIgMi4wNTJ0LTIuMzc2LjU0bC0xLjE1Mi4wMzYuNjEyLTMuODUycS4wNzItLjM5Ni40NjgtLjM5NmguNjQ4cS43OTIgMCAxLjI2LjA3MnQuOS40NS40MzIgMS4wOTh6bTEyLjYzNiA1LjM2NHEwIDEuMjk2LS45MTggMi4xOTZ0LTIuMjE0LjlxLTEuMDQ0IDAtMS42OTItLjU3NnQtLjY0OC0xLjU4NHEwLTEuMzMyLjktMi4yNXQyLjIzMi0uOTE4cTEuMDA4IDAgMS42NzQuNTk0dC42NjYgMS42Mzh6bS00OS4yNDgtNi4xNTZxMC0yLjEyNC0xLjM4Ni0zLjA3OHQtMy42MTgtLjk1NGgtNS43NnEtLjY4NCAwLS43NTYuNjg0bC0yLjM0IDE0LjY4OHEtLjAzNi4yMTYuMTA4LjM5NnQuMzYuMThoMi43MzZxLjcyIDAgLjc5Mi0uNjg0bC42NDgtMy45NnEuMDM2LS4yODguMjUyLS40Njh0LjU0LS4yMzQuNjEyLS4wNTQuNjg0LjAzNi41MDQuMDM2cTMuMDk2IDAgNC44Ni0xLjc0NnQxLjc2NC00Ljg0MnptMTEuMTI0IDExLjIzMmwxLjQ3Ni05LjM5NnEuMDM2LS4yMTYtLjEwOC0uMzk2dC0uMzYtLjE4aC0yLjczNnEtLjUwNCAwLS42MTIgMS4xODgtLjk3Mi0xLjQ0LTMuNDItMS40NC0yLjU5MiAwLTQuNDEgMS45NDR0LTEuODE4IDQuNTcycTAgMi4xMjQgMS4yNDIgMy4zODR0My4zMyAxLjI2cTEuMDA4IDAgMi4wODgtLjQzMnQxLjcyOC0xLjE1MnEtLjE0NC40MzItLjE0NC43NTYgMCAuNTc2LjQ2OC41NzZoMi40ODRxLjY4NCAwIC43OTItLjY4NHptMTYuMDkyLTkuNDY4cTAtLjE4LS4xNDQtLjM0MnQtLjMyNC0uMTYyaC0yLjc3MnEtLjM5NiAwLS42NDguMzZsLTMuODE2IDUuNjE2LTEuNTg0LTUuNHEtLjE4LS41NzYtLjc5Mi0uNTc2aC0yLjdxLS4xOCAwLS4zMjQuMTYydC0uMTQ0LjM0MnEwIC4wNzIuNzAyIDIuMTI0dDEuNTEyIDQuNDI4Ljg0NiAyLjUycS0yLjk1MiA0LjAzMi0yLjk1MiA0LjMyIDAgLjQ2OC40NjguNDY4aDIuNzcycS4zOTYgMCAuNjQ4LS4zNmw5LjE4LTEzLjI0OHEuMDcyLS4wNzIuMDcyLS4yNTJ6bTEzLjY4LTEuNzY0cTAtMi4xMjQtMS4zODYtMy4wNzh0LTMuNjE4LS45NTRoLTUuNzI0cS0uNzIgMC0uNzkyLjY4NGwtMi4zNCAxNC42ODhxLS4wMzYuMjE2LjEwOC4zOTZ0LjM2LjE4aDIuOTUycS40MzIgMCAuNTc2LS40NjhsLjY0OC00LjE3NnEuMDM2LS4yODguMjUyLS40Njh0LjU0LS4yMzQuNjEyLS4wNTQuNjg0LjAzNi41MDQuMDM2cTMuMDk2IDAgNC44Ni0xLjc0NnQxLjc2NC00Ljg0MnptMTEuMTI0IDExLjIzMmwxLjQ3Ni05LjM5NnEuMDM2LS4yMTYtLjEwOC0uMzk2dC0uMzYtLjE4aC0yLjczNnEtLjUwNCAwLS42MTIgMS4xODgtLjkzNi0xLjQ0LTMuNDItMS40NC0yLjU5MiAwLTQuNDEgMS45NDR0LTEuODE4IDQuNTcycTAgMi4xMjQgMS4yNDIgMy4zODR0My4zMyAxLjI2cTEuMDQ0IDAgMi4xMjQtLjQzMnQxLjY5Mi0xLjE1MnEwIC4wMzYtLjA3Mi4zMjR0LS4wNzIuNDMycTAgLjU3Ni40NjguNTc2aDIuNDg0cS42ODQgMCAuNzkyLS42ODR6bTcuODQ4LTE0LjcyNHYtLjAzNnEwLS41MDQtLjQ2OC0uNTA0aC0yLjY2NHEtLjM5NiAwLS40NjguMzk2bC0yLjM0IDE0Ljk3Ni0uMDM2LjA3MnEwIC4xOC4xNDQuMzQydC4zNi4xNjJoMi4zNzZxLjY4NCAwIC43NTYtLjY4NHptLTY0LjIyNCA0LjgyNHEtLjE4IDEuMjYtLjkzNiAxLjY1NnQtMi4xNi4zOTZsLTEuMTg4LjAzNi42MTItMy44NTJxLjA3Mi0uMzk2LjQ2OC0uMzk2aC42ODRxMS40NCAwIDIuMDg4LjQxNHQuNDMyIDEuNzQ2em02OC44MzItMTguNTc2djQ2LjA4cTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OGgtNzMuNzI4cS0xLjg3MiAwLTMuMjQtMS4zNjh0LTEuMzY4LTMuMjR2LTQ2LjA4cTAtMS44NzIgMS4zNjgtMy4yNHQzLjI0LTEuMzY4aDczLjcyOHExLjg3MiAwIDMuMjQgMS4zNjh0MS4zNjggMy4yNHpcIixcIkNDX1NUUklQRVwiOlwiTTU3LjQ5Mi0zMS45MzFxMCAyLjQ4NC0uNzU2IDMuODE2LS42ODQgMS4yNi0xLjg3MiAxLjI2LS44MjggMC0xLjQ3Ni0uMzI0di04LjA2NHExLjA0NC0xLjA4IDIuMDUyLTEuMDggMi4wNTIgMCAyLjA1MiA0LjM5MnptMTUuNzY4LTEuMjk2aC0zLjk2cS4yMTYtMy41MjggMi4wMTYtMy41MjggMS44MzYgMCAxLjk0NCAzLjUyOHptLTU2LjEyNCA0Ljg2cTAtMi4xMjQtMS4xODgtMy4yOTR0LTMuNjM2LTIuMDdxLTEuMjk2LS40NjgtMS44NzItLjg2NHQtLjU3Ni0uOXEwLS45MzYgMS4zNjgtLjkzNiAyLjA4OCAwIDQuNDY0IDEuMTg4bC42NDgtNC4wMzJxLTIuNDEyLTEuMTUyLTUuMzY0LTEuMTUyLTIuNzcyIDAtNC40MjggMS4zNjgtMS43MjggMS40MDQtMS43MjggMy45MjQgMCAyLjA4OCAxLjE3IDMuMjU4dDMuNTgyIDIuMDM0cTEuNDA0LjUwNCAxLjk2Mi45MTh0LjU1OC45OXEwIDEuMTE2LTEuNzI4IDEuMTE2LTEuMDQ0IDAtMi41Mi0uNDV0LTIuNTkyLTEuMDk4bC0uNjQ4IDQuMDY4cTIuNTkyIDEuNDc2IDYuMDQ4IDEuNDc2IDIuOTE2IDAgNC42NDQtMS4zMzIgMS44MzYtMS40NzYgMS44MzYtNC4yMTJ6bTEwLjYyLTcuNzRsLjY4NC0zLjk5NmgtMy40NTZ2LTQuODZsLTQuNjQ0Ljc1Ni0uNjQ4IDQuMTA0LTEuNjU2LjI4OC0uNjEyIDMuNzA4aDIuMjMydjcuODg0cTAgMy4wMjQgMS41ODQgNC4zMiAxLjM2OCAxLjA4IDMuOTk2IDEuMDggMS4xNTIgMCAyLjg0NC0uMzk2di00LjI0OHEtMS4xNTIuMjUyLTEuNTg0LjI1Mi0xLjUxMiAwLTEuNTEyLTEuOHYtNy4wOTJoMi43NzJ6bTExLjM3Ni45di01LjAwNHEtLjU0LS4xMDgtMS4wMDgtLjEwOC0xLjE1MiAwLTEuOTk4LjU3NnQtMS4yMDYgMS42NTZsLS4zNi0yLjAxNmgtNC43MTZ2MTYuOTU2aDUuNHYtMTEuMDE2cS45MzYtMS4xMTYgMi45NTItMS4xMTYuNTc2IDAgLjkzNi4wNzJ6bTEuMzMyIDEyLjA2aDUuNHYtMTYuOTU2aC01LjR2MTYuOTU2em0yMi4zOTItOC45NjRxMC00LjM5Mi0xLjYyLTYuNDQ0LTEuNDQtMS44NzItMy45OTYtMS44NzItMi4zMDQgMC00LjIxMiAyLjAxNmwtLjI4OC0xLjY5MmgtNC43NTJ2MjMuMjJsNS40LS45di01LjQzNnExLjI5Ni4zOTYgMi40NDguMzk2IDIuOTg4IDAgNC44MjQtMi4wMTYgMi4xOTYtMi4zNCAyLjE5Ni03LjI3MnptLTE2Ljg0OC0xMi41MjhxMC0xLjE4OC0uODI4LTIuMDE2dC0yLjAxNi0uODI4LTIuMDE2LjgyOC0uODI4IDIuMDE2LjgyOCAyLjAzNCAyLjAxNi44NDYgMi4wMTYtLjg0Ni44MjgtMi4wMzR6bTMyLjMyOCAxMi44NTJxMC00LjA2OC0xLjcyOC02LjMzNi0xLjgtMi4zMDQtNS4xODQtMi4zMDQtMy40NTYgMC01LjQ1NCAyLjM3NnQtMS45OTggNi40OHEwIDQuNjA4IDIuMjY4IDYuNzY4IDEuOTggMS45OCA1Ljc5NiAxLjk4IDMuNjM2IDAgNS43Ni0xLjQ0bC0uNTc2LTMuNzA4cS0yLjA1MiAxLjExNi00LjYwOCAxLjExNi0xLjU0OCAwLTIuMjY4LS42ODQtLjgyOC0uNjg0LTEuMDA4LTIuMzc2aDguOTI4cS4wNzItLjUwNC4wNzItMS44NzJ6bTQuNjA4LTIzLjQzNnY0Ni4wOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTczLjcyOHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di00Ni4wOHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg3My43MjhxMS44NzIgMCAzLjI0IDEuMzY4dDEuMzY4IDMuMjR6XCIsXCJCRUxMX1NMQVNIXCI6XCJNNTYuMDg4LTMzLjc2N3EyLjE5NiAxMi44MTYgMTAuNzI4IDIwLjAxNiAwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTE2LjEyOHEwIDMuODE2LTIuNyA2LjUxNnQtNi41MTYgMi43LTYuNDk4LTIuNjgyLTIuNzE4LTYuNDk4em0tMTkuMjI0IDMwLjk2cS41NzYgMCAuNTc2LS41NzZ0LS41NzYtLjU3NnEtMi4xMjQgMC0zLjY1NC0xLjUzdC0xLjUzLTMuNjU0cTAtLjU3Ni0uNTc2LS41NzZ0LS41NzYuNTc2cTAgMi42MjggMS44NTQgNC40ODJ0NC40ODIgMS44NTR6bTM2LjA3Mi01Ny42cS4yODguMzYuMjcuODQ2dC0uMzc4LjgxbC02Ny4zOTIgNTguMzkycS0uMzYuMjg4LS44NDYuMjUydC0uNzc0LS4zOTZsLTMuMDI0LTMuNDU2cS0uMjg4LS4zNi0uMjctLjg0NnQuMzc4LS43NzRsNi42OTYtNS43OTZxLS42ODQtMS4xNTItLjY4NC0yLjM3NiAxLjgtMS41MTIgMy4yNzYtMy4xNjh0My4wNi00LjMwMiAyLjY4Mi01LjcwNiAxLjgtNy40MTYuNzAyLTkuMzZxMC01LjQ3MiA0LjIxMi0xMC4xN3QxMS4wNTItNS43MDZxLS4yODgtLjY4NC0uMjg4LTEuNDA0IDAtMS40NCAxLjAwOC0yLjQ0OHQyLjQ0OC0xLjAwOCAyLjQ0OCAxLjAwOCAxLjAwOCAyLjQ0OHEwIC43Mi0uMjg4IDEuNDA0IDQuNDY0LjY0OCA3Ljg4NCAyLjk3dDUuMzI4IDUuNjdsMTUuMDQ4LTEzLjA2OHEuMzYtLjI4OC44NDYtLjI1MnQuNzc0LjM5NnpcIixcIkJFTExfU0xBU0hfT1wiOlwiTTM3LjQ0LTMuMzgzcTAtLjU3Ni0uNTc2LS41NzYtMi4xMjQgMC0zLjY1NC0xLjUzdC0xLjUzLTMuNjU0cTAtLjU3Ni0uNTc2LS41NzZ0LS41NzYuNTc2cTAgMi42MjggMS44NTQgNC40ODJ0NC40ODIgMS44NTRxLjU3NiAwIC41NzYtLjU3NnptLTE5LjMzMi0xNy4xbDMxLjU3Mi0yNy4zNnEtMS41MTItMy4xNjgtNC43Ny01LjI3NHQtOC4wNDYtMi4xMDZxLTMuMzQ4IDAtNi4xMDIgMS4xMzR0LTQuMzc0IDIuODk4LTIuNDg0IDMuNzA4LS44NjQgMy43OHEwIDEzLjgyNC00LjkzMiAyMy4yMnptNDguNzA4IDYuNzMycTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OGgtMTYuMTI4cTAgMy44MTYtMi43IDYuNTE2dC02LjUxNiAyLjctNi40OTgtMi42ODItMi43MTgtNi40OThsNS4zNjQtNC42NDRoMjcuMjUycS01Ljk3Ni02LjczMi04LjE3Mi0xNi41MjRsMy45OTYtMy40OTJxMi4xOTYgMTIuODE2IDEwLjcyOCAyMC4wMTZ6bTMuMDk2LTUwLjExMmwzLjAyNCAzLjQ1NnEuMjg4LjM2LjI3Ljg0NnQtLjM3OC44MWwtNjcuMzkyIDU4LjM5MnEtLjM2LjI4OC0uODQ2LjI1MnQtLjc3NC0uMzk2bC0zLjAyNC0zLjQ1NnEtLjI4OC0uMzYtLjI3LS44NDZ0LjM3OC0uNzc0bDYuNjk2LTUuNzk2cS0uNjg0LTEuMTUyLS42ODQtMi4zNzYgMS44LTEuNTEyIDMuMjc2LTMuMTY4dDMuMDYtNC4zMDIgMi42ODItNS43MDYgMS44LTcuNDE2LjcwMi05LjM2cTAtNS40NzIgNC4yMTItMTAuMTd0MTEuMDUyLTUuNzA2cS0uMjg4LS42ODQtLjI4OC0xLjQwNCAwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDggMi40NDggMS4wMDggMS4wMDggMi40NDhxMCAuNzItLjI4OCAxLjQwNCA0LjQ2NC42NDggNy44ODQgMi45N3Q1LjMyOCA1LjY3bDE1LjA0OC0xMy4wNjhxLjM2LS4yODguODQ2LS4yNTJ0Ljc3NC4zOTZ6XCIsXCJUUkFTSFwiOlwiTTE4LjQzMi0xNC45MDN2LTI1LjM0NHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djI1LjM0NHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyLjMwNHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHptOS4yMTYgMHYtMjUuMzQ0cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2MjUuMzQ0cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDIuMzA0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em05LjIxNiAwdi0yNS4zNDRxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyNS4zNDRxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bS0xOS41ODQtMzUuNzEyaDE2LjEyOGwtMS43MjgtNC4yMTJxLS4yNTItLjMyNC0uNjEyLS4zOTZoLTExLjQxMnEtLjM2LjA3Mi0uNjEyLjM5NnptMzMuNDA4IDEuMTUydjIuMzA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTMuNDU2djM0LjEyOHEwIDIuOTg4LTEuNjkyIDUuMTY2dC00LjA2OCAyLjE3OGgtMjkuOTUycS0yLjM3NiAwLTQuMDY4LTIuMTA2dC0xLjY5Mi01LjA5NHYtMzQuMjcyaC0zLjQ1NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDExLjEyNGwyLjUyLTYuMDEycS41NC0xLjMzMiAxLjk0NC0yLjI2OHQyLjg0NC0uOTM2aDExLjUycTEuNDQgMCAyLjg0NC45MzZ0MS45NDQgMi4yNjhsMi41MiA2LjAxMmgxMS4xMjRxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4elwiLFwiQ09QWVJJR0hUXCI6XCJNNDEuNC0yNS43NzV2My45MjRxMCAxLjgtMS4zMTQgMy4yMDR0LTMuMzg0IDIuMTc4LTQuMjQ4IDEuMTctNC4yMy4zOTZxLTcuMzggMC0xMi4zMy01LjAwNHQtNC45NS0xMi40NTZxMC03LjMwOCA0Ljg5Ni0xMi4yMDR0MTIuMjA0LTQuODk2cTEuMjI0IDAgMi43MTguMTYydDMuMzQ4LjY0OCAzLjMzIDEuMjI0IDIuNDg0IDIuMDM0IDEuMDA4IDIuOTE2djMuOTI0cTAgLjU3Ni0uNTc2LjU3NmgtNC4yNDhxLS41NzYgMC0uNTc2LS41NzZ2LTIuNTJxMC0xLjU0OC0yLjM1OC0yLjQzdC00Ljk1LS44ODJxLTUuMDQgMC04LjIyNiAzLjI5NHQtMy4xODYgOC41NXEwIDUuNDM2IDMuMjk0IDguOTgydDguNDA2IDMuNTQ2cTIuNDQ4IDAgNC45NjgtLjg2NHQyLjUyLTIuMzc2di0yLjUycTAtLjI1Mi4xNjItLjQxNHQuMzc4LS4xNjJoNC4yODRxLjIxNiAwIC4zOTYuMTYydC4xOC40MTR6bS0xMy43NTItMjkuNDQ4cS00LjY4IDAtOC45NDYgMS44MzZ0LTcuMzQ0IDQuOTE0LTQuOTE0IDcuMzQ0LTEuODM2IDguOTQ2IDEuODM2IDguOTQ2IDQuOTE0IDcuMzQ0IDcuMzQ0IDQuOTE0IDguOTQ2IDEuODM2IDguOTQ2LTEuODM2IDcuMzQ0LTQuOTE0IDQuOTE0LTcuMzQ0IDEuODM2LTguOTQ2LTEuODM2LTguOTQ2LTQuOTE0LTcuMzQ0LTcuMzQ0LTQuOTE0LTguOTQ2LTEuODM2em0yNy42NDggMjMuMDRxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiQVRcIjpcIk0zNC45OTItMzYuNTM5cTAtMy44ODgtMS45MjYtNi4wODR0LTUuMzEtMi4xOTZxLTIuMjY4IDAtNC40NjQgMS4wOTh0LTMuOTYgMy4wNDItMi44NjIgNC45MzItMS4wOTggNi40OHEwIDQuMDMyIDEuOTI2IDYuMjI4dDUuNDE4IDIuMTk2cTMuNDU2IDAgNi4zMzYtMi4zOTR0NC40MS01Ljk3NiAxLjUzLTcuMzI2em0yMC4zMDQgNC4zNTZxMCAzLjk5Ni0xLjMzMiA3LjA5MnQtMy41NDYgNC44Ni00LjczNCAyLjY4Mi01LjIyLjk5bC0uNTU4LjAxOC0uNTk0LjAxOHEtMy40MiAwLTUuMTEyLTEuOTA4LTEuMDA4LTEuMTg4LTEuMTg4LTIuOTg4LTEuODcyIDIuMzc2LTQuNzM0IDMuOTZ0LTYuMjQ2IDEuNTg0cS01Ljc5NiAwLTguOTgyLTMuNDM4dC0zLjE4Ni05LjcwMnEwLTUuNjUyIDIuMzc2LTEwLjQ0dDYuNDQ0LTcuNTc4IDguODU2LTIuNzlxMy4xMzIgMCA1LjU4IDEuMjc4dDMuODE2IDMuNTgybC4wNzItLjY4NC4zOTYtMi4wMTZxLjAzNi0uMjE2LjE5OC0uNDMydC4zNDItLjIxNmg0LjI0OHEuMTggMCAuNDY4LjM5Ni4xOC4xOC4xMDguNTc2bC00LjMyIDIyLjEwNHEtLjE4Ljg2NC0uMTggMS43MjggMCAxLjQwNC40NSAxLjg3MnQxLjYwMi40NjhxMS4wMDgtLjAzNiAyLjA1Mi0uMTk4dDIuNjI4LS44NjQgMi43NzItMS44IDIuMDUyLTMuMjIyLjg2NC00LjkzMnEwLTEwLjUxMi02LjI2NC0xNi43NzZ0LTE2Ljc3Ni02LjI2NHEtNC42OCAwLTguOTQ2IDEuODM2dC03LjM0NCA0LjkxNC00LjkxNCA3LjM0NC0xLjgzNiA4Ljk0NiAxLjgzNiA4Ljk0NiA0LjkxNCA3LjM0NCA3LjM0NCA0LjkxNCA4Ljk0NiAxLjgzNnE4LjIwOCAwIDE0LjU4LTUuMTg0LjM5Ni0uMzI0Ljg2NC0uMjg4dC43NTYuNDMybDEuNDc2IDEuNzY0cS4yODguNDMyLjI1Mi44NjQtLjA3Mi40NjgtLjQzMi43OTItMy42NzIgMi45ODgtOC4xOSA0LjYwOHQtOS4zMDYgMS42MnEtNS42MTYgMC0xMC43MjgtMi4xOTZ0LTguODItNS45MDQtNS45MDQtOC44Mi0yLjE5Ni0xMC43MjggMi4xOTYtMTAuNzI4IDUuOTA0LTguODIgOC44Mi01LjkwNCAxMC43MjgtMi4xOTZxMTIuMzg0IDAgMjAuMDE2IDcuNjMydDcuNjMyIDIwLjAxNnpcIixcIkVZRURST1BQRVJcIjpcIk02MS4xMjgtNjEuMDU1cTMuMzg0IDMuMzg0IDMuMzg0IDguMTU0dC0zLjM4NCA4LjExOGwtOC4xIDguMDI4IDMuNzQ0IDMuNzQ0cS4zNi4zNi4zNi44Mjh0LS4zNi44MjhsLTcuNTYgNy41NnEtLjM2LjM2LS44MjguMzZ0LS44MjgtLjM2bC0zLjc4LTMuNzgtMjEuNzA4IDIxLjcwOHEtMS4zMzIgMS4zMzItMy4yNCAxLjMzMmgtNy4zMDhsLTkuMjE2IDQuNjA4LTIuMzA0LTIuMzA0IDQuNjA4LTkuMjE2di03LjMwOHEwLTEuOTA4IDEuMzMyLTMuMjRsMjEuNzA4LTIxLjcwOC0zLjc4LTMuNzhxLS4zNi0uMzYtLjM2LS44Mjh0LjM2LS44MjhsNy41Ni03LjU2cS4zNi0uMzYuODI4LS4zNnQuODI4LjM2bDMuNzQ0IDMuNzQ0IDguMDI4LTguMXEzLjM0OC0zLjM4NCA4LjExOC0zLjM4NHQ4LjE1NCAzLjM4NHptLTQyLjY5NiA0OS42MDhsMjAuNzM2LTIwLjczNi02LjkxMi02LjkxMi0yMC43MzYgMjAuNzM2djYuOTEyaDYuOTEyelwiLFwiUEFJTlRfQlJVU0hcIjpcIk01OC4xNC02NC40MzlxMi41MiAwIDQuNDEgMS42NzR0MS44OSA0LjE5NHEwIDIuMjY4LTEuNjIgNS40MzYtMTEuOTUyIDIyLjY0NC0xNi43NCAyNy4wNzItMy40OTIgMy4yNzYtNy44NDggMy4yNzYtNC41MzYgMC03Ljc5NC0zLjMzdC0zLjI1OC03LjkwMnEwLTQuNjA4IDMuMzEyLTcuNjMybDIyLjk2OC0yMC44NDRxMi4xMjQtMS45NDQgNC42OC0xLjk0NHptLTMyLjcyNCAzNy4yMjRxMS40MDQgMi43MzYgMy44MzQgNC42OHQ1LjQxOCAyLjczNmwuMDM2IDIuNTU2cS4xNDQgNy42NjgtNC42NjIgMTIuNDkydC0xMi41NDYgNC44MjRxLTQuNDI4IDAtNy44NDgtMS42NzR0LTUuNDktNC41OS0zLjExNC02LjU4OC0xLjA0NC03LjkycS4yNTIuMTggMS40NzYgMS4wOHQyLjIzMiAxLjYwMiAyLjEyNCAxLjMxNCAxLjY1Ni42MTJxMS40NzYgMCAxLjk4LTEuMzMyLjktMi4zNzYgMi4wNy00LjA1dDIuNTAyLTIuNzM2IDMuMTY4LTEuNzEgMy43MDgtLjkxOCA0LjUtLjM3OHpcIixcIkJJUlRIREFZX0NBS0VcIjpcIk02NC41MTItMTMuNzUxdjEzLjgyNGgtNjQuNTEydi0xMy44MjRxMS42MiAwIDMuMDYtLjUwNHQyLjEyNC0uOTkgMS42OTItMS4zNXExLjA4LS45NzIgMS44NTQtMS4zNjh0Mi4wMzQtLjM5NiAxLjk5OC4zOTYgMS44OSAxLjM2OHExLjA0NC45IDEuNjkyIDEuMzY4dDIuMDg4Ljk3MiAzLjA5Ni41MDRxMS42MiAwIDMuMDYtLjUyMnQyLjA4OC0uOTcyIDEuNzI4LTEuMzVxLjc1Ni0uNjg0IDEuMTctLjk3MnQxLjExNi0uNTQgMS41NjYtLjI1MnExLjI2IDAgMi4wMzQuMzk2dDEuODU0IDEuMzY4cTEuMDA4Ljg2NCAxLjY5MiAxLjM1dDIuMTI0Ljk5IDMuMDYuNTA0IDMuMDYtLjUwNCAyLjEyNC0uOTkgMS42OTItMS4zNXExLjA4LS45NzIgMS44NTQtMS4zNjh0Mi4wMzQtLjM5NnExLjIyNCAwIDEuOTk4LjM5NnQxLjg1NCAxLjM2OHExLjAwOC44NjQgMS42OTIgMS4zNXQyLjEyNC45OSAzLjA2LjUwNHptMC0xMS41MnY2LjkxMnEtMS4yNiAwLTEuOTk4LS4zOTZ0LTEuODktMS4zNjhxLTEuMDQ0LS45LTEuNjkyLTEuMzY4dC0yLjA4OC0uOTcyLTMuMDYtLjUwNHEtMS42NTYgMC0zLjA5Ni41MDR0LTIuMDg4Ljk3Mi0xLjY5MiAxLjM2OHEtLjc5Mi42ODQtMS4xODguOTcydC0xLjExNi41NC0xLjU4NC4yNTJxLTEuMjYgMC0yLjAzNC0uMzk2dC0xLjg1NC0xLjM2OHEtMS4wNDQtLjktMS42OTItMS4zNjh0LTIuMDg4LS45NzItMy4wOTYtLjUwNHEtMS42MiAwLTMuMDYuNTIydC0yLjA4OC45NzItMS43MjggMS4zNXEtLjc1Ni42ODQtMS4xNy45NzJ0LTEuMTE2LjU0LTEuNTY2LjI1MnEtMS4yNiAwLTIuMDM0LS4zOTZ0LTEuODU0LTEuMzY4cS0xLjAwOC0uODY0LTEuNjkyLTEuMzV0LTIuMTI0LS45OS0zLjA2LS41MDRxLTEuNjU2IDAtMy4wOTYuNTA0dC0yLjA4OC45NzItMS42OTIgMS4zNjhxLTEuMDguOTcyLTEuODU0IDEuMzY4dC0yLjAzNC4zOTZ2LTYuOTEycTAtMi44OCAyLjAxNi00Ljg5NnQ0Ljg5Ni0yLjAxNmgyLjMwNHYtMTYuMTI4aDkuMjE2djE2LjEyOGg5LjIxNnYtMTYuMTI4aDkuMjE2djE2LjEyOGg5LjIxNnYtMTYuMTI4aDkuMjE2djE2LjEyOGgyLjMwNHEyLjg4IDAgNC44OTYgMi4wMTZ0Mi4wMTYgNC44OTZ6bS00Ni4wOC0zMS4xMDRxMCAyLjc3Mi0xLjI5NiA0LjI2NnQtMy4zMTIgMS40OTRxLTEuOTA4IDAtMy4yNTgtMS4zNXQtMS4zNS0zLjI1OHEwLTEuMDQ0LjM0Mi0xLjgzNnQuODQ2LTEuMjI0IDEuMTE2LTEuMDA4IDEuMTE2LTEuMTM0Ljg0Ni0xLjYwMi4zNDItMi40MTJxMS4zNjggMCAyLjk4OCAyLjY2NHQxLjYyIDUuNHptMTguNDMyIDBxMCAyLjc3Mi0xLjI5NiA0LjI2NnQtMy4zMTIgMS40OTRxLTEuOTA4IDAtMy4yNTgtMS4zNXQtMS4zNS0zLjI1OHEwLTEuMDQ0LjM0Mi0xLjgzNnQuODQ2LTEuMjI0IDEuMTE2LTEuMDA4IDEuMTE2LTEuMTM0Ljg0Ni0xLjYwMi4zNDItMi40MTJxMS4zNjggMCAyLjk4OCAyLjY2NHQxLjYyIDUuNHptMTguNDMyIDBxMCAyLjc3Mi0xLjI5NiA0LjI2NnQtMy4zMTIgMS40OTRxLTEuOTA4IDAtMy4yNTgtMS4zNXQtMS4zNS0zLjI1OHEwLTEuMDQ0LjM0Mi0xLjgzNnQuODQ2LTEuMjI0IDEuMTE2LTEuMDA4IDEuMTE2LTEuMTM0Ljg0Ni0xLjYwMi4zNDItMi40MTJxMS4zNjggMCAyLjk4OCAyLjY2NHQxLjYyIDUuNHpcIixcIkFSRUFfQ0hBUlRcIjpcIk03My43MjgtOS4xNDN2NC42MDhoLTczLjcyOHYtNTUuMjk2aDQuNjA4djUwLjY4OGg2OS4xMnptLTEzLjgyNC0zNi44NjRsOS4yMTYgMzIuMjU2aC01OS45MDR2LTIwLjczNmwxNi4xMjgtMjAuNzM2IDIwLjczNiAyMC43MzZ6XCIsXCJQSUVfQ0hBUlRcIjpcIk0yNy42NDgtMzIuMzk5bDE5LjY1NiAxOS42NTZxLTMuODE2IDMuODg4LTguOTEgNi4wNDh0LTEwLjc0NiAyLjE2cS03LjUyNCAwLTEzLjg3OC0zLjcwOHQtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4djI3LjQzMnptNi43MzIuMjE2aDI3LjgyOHEwIDUuNjUyLTIuMTYgMTAuNzQ2dC02LjA0OCA4Ljkxem0yNS41MjQtNC42MDhoLTI3LjY0OHYtMjcuNjQ4cTcuNTI0IDAgMTMuODc4IDMuNzA4dDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiTElORV9DSEFSVFwiOlwiTTczLjcyOC05LjE0M3Y0LjYwOGgtNzMuNzI4di01NS4yOTZoNC42MDh2NTAuNjg4aDY5LjEyem0tNC42MDgtNDQuOTI4djE1LjY2cTAgLjc1Ni0uNzAyIDEuMDYydC0xLjI3OC0uMjdsLTQuMzU2LTQuMzU2LTIyLjc4OCAyMi43ODhxLS4zNi4zNi0uODI4LjM2dC0uODI4LS4zNmwtOC4zODgtOC4zODgtMTQuOTc2IDE0Ljk3Ni02LjkxMi02LjkxMiAyMS4wNi0yMS4wNnEuMzYtLjM2LjgyOC0uMzZ0LjgyOC4zNmw4LjM4OCA4LjM4OCAxNi43MDQtMTYuNzA0LTQuMzU2LTQuMzU2cS0uNTc2LS41NzYtLjI3LTEuMjc4dDEuMDYyLS43MDJoMTUuNjZxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4elwiLFwiTEFTVEZNXCI6XCJNNDYuNTEyLTM5LjA5NXEwIC4yMTYuMzYgMS40NzYuMzYgMS4wNDQuOSAxLjc4MnQxLjQ3NiAxLjIyNCAxLjU4NC43MiAxLjk4LjU5NHExMS43IDMuMjc2IDExLjcgMTEuOTUyIDAgNS4yNTYtMy43OTggOC43M3QtOS4xNjIgMy40NzRxLTIuMTI0IDAtNC4wMTQtLjY2NnQtMy4yOTQtMS42MzgtMi43NzItMi42ODItMi4yNjgtMy4xNS0xLjkyNi0zLjcyNi0xLjU2Ni0zLjcwOC0xLjQyMi0zLjgzNC0xLjI3OC0zLjQycS0xLjE1Mi0yLjkxNi0yLjIxNC00LjgwNnQtMi42NDYtMy40NzQtMy43NDQtMi4zMDQtNS4xMTItLjcycS0zLjQ1NiAwLTYuNTg4IDEuOTk4dC00Ljk2OCA1LjIwMi0xLjgzNiA2LjY2cTAgNS43NiAzLjgzNCAxMC4wNjJ0OS40ODYgNC4zMDJxNi4zNzIgMCA5LjI4OC0zLjQyIDIuMDE2LTIuMjY4IDIuOTg4LTQuMTc2bDMuMDI0IDUuNDcycS0uNTQgMS4yMjQtMS41ODQgMi41MmwuMDM2LjAzNnEtNC43MTYgNS40NzItMTMuOTY4IDUuNDcyLTUuMjkyIDAtOS43MDItMi44NDR0LTYuODU4LTcuNDctMi40NDgtOS44ODJxMC0zLjc4IDEuNTY2LTcuNDE2dDQuMTc2LTYuMzU0IDYuMTkyLTQuMzc0IDcuMzYyLTEuNjU2cTMuMTMyIDAgNS43MjQuNjg0dDQuNDQ2IDEuOCAzLjQyIDIuODggMi42MSAzLjU2NCAyLjEwNiA0LjIxMiAxLjgxOCA0LjQ4MiAxLjggNC42OTggMS45OCA0LjU3MnEzLjQ1NiA3LjIgOC4zODggNy4yIDIuOTE2IDAgNC45ODYtMS43NDZ0Mi4wNy00LjYyNnEwLTEuNTEyLS42ODQtMi41OTJ0LTEuODE4LTEuNjU2LTIuNjEtMS4xMzQtMy4wNDItLjk3Mi0zLjE1LTEuMjI0LTIuOTE2LTEuODcyLTIuMzQtMi45NTItMS40MDQtNC40MXEtLjEwOC0uNTc2LS4xMDgtMS4xODggMC0zLjk2IDMuMTUtNi45MTJ0Ny4xNDYtMi44MDhxMi44MDguMTA4IDQuMzM4LjUyMnQzLjI1OCAxLjkyNmgtLjAzNnEuNDMyLjM5Ni44MjguODgydC45MzYgMS4yOTYuNjg0Ljk5bC00LjY0NCAzLjU2NHEtLjkzNi0xLjc2NC0xLjk0NC0yLjUydi0uMDM2cS0uODI4LS43NTYtMy40OTItLjc1Ni0xLjc2NCAwLTMuMDI0IDEuMTg4dC0xLjI2IDIuOTg4elwiLFwiTEFTVEZNX1NRVUFSRVwiOlwiTTUxLjU1Mi0yNi41NjdxMC02LjIyOC04LjQyNC04LjYwNC0xLjI2LS4zNi0xLjkwOC0uNTk0dC0xLjM2OC0uOS0xLjA0NC0xLjY3NHEwLS4wNzItLjA3Mi0uMzA2dC0uMTA4LS40MzItLjAzNi0uMjdxMC0xLjI5Ni44ODItMi4xNDJ0Mi4xNzgtLjg0NnExLjk0NCAwIDIuNTU2LjU0aC0uMDM2cS43Mi41NCAxLjQwNCAxLjgzNmwzLjM0OC0yLjU1NnEtMS40MDQtMS45NDQtMS43NjQtMi4zMDQtMS4xODgtMS4wNDQtMi40My0xLjQwNHQtMy4wNzgtLjM2cS0yLjg4IDAtNS4xMTIgMi4wN3QtMi4yMzIgNC45NXEwIC4yNTIuMDcyLjgyOC41NzYgMy40NTYgMi4zMjIgNS4wNHQ1LjM0NiAyLjYyOHExLjA0NC4yODggMS43NjQuNTU4dDEuNjIuNzc0IDEuMzg2IDEuMjQyLjQ4NiAxLjY3NHYuMThxLjAzNiAyLjA4OC0xLjQ1OCAzLjM0OHQtMy42MTggMS4yNnEtMy40OTIgMC02LjAxMi01LjE4NC0uODI4LTEuNjkyLTEuODU0LTQuMzc0dC0xLjcyOC00LjUxOC0xLjk0NC0zLjk3OC0yLjY2NC0zLjQzOC0zLjcyNi0yLjE3OC01LjI5Mi0uODgycS0zLjYzNiAwLTYuOTEyIDIuMDE2dC01LjE4NCA1LjMyOC0xLjggNi45MTJ2LjAzNnEuMTQ0IDMuODg4IDEuODE4IDcuMTY0dDQuODA2IDUuMzEgNy4wNTYgMi4wMzRxNi42OTYgMCAxMC4wNDQtMy45Ni43Mi0uOTcyIDEuMTE2LTEuODM2bC0yLjE2LTMuOTI0cS0xLjUxMiAyLjg4LTMuNTY0IDQuMTc2dC01LjI1NiAxLjI5NnEtNC4xNCAwLTYuODc2LTMuMTMydC0yLjczNi03LjM0NHEwLTMuNzggMi45NTItNi44MDR0Ni42OTYtMy4wMjRxNC4wMzIgMCA2LjEyIDEuOTI2dDMuNzQ0IDYuMjFxLjI4OC43NTYuOTE4IDIuNDY2dDEuMDI2IDIuNzU0IDEuMTM0IDIuNjgyIDEuMzg2IDIuNjY0IDEuNjM4IDIuMjUgMS45OTggMS45MjYgMi4zNzYgMS4xODggMi44OC40ODZxMy44NTIgMCA2LjU4OC0yLjUwMnQyLjczNi02LjI4MnptMy43NDQtMjIuODk2djM0LjU2cTAgNC4yODQtMy4wNDIgNy4zMjZ0LTcuMzI2IDMuMDQyaC0zNC41NnEtNC4yODQgMC03LjMyNi0zLjA0MnQtMy4wNDItNy4zMjZ2LTM0LjU2cTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMzQuNTZxNC4yODQgMCA3LjMyNiAzLjA0MnQzLjA0MiA3LjMyNnpcIixcIlRPR0dMRV9PRkZcIjpcIk00MS40NzItMzIuMTgzcTAtMy43NDQtMS40NTgtNy4xNDZ0LTMuOTQyLTUuODg2LTUuODg2LTMuOTQyLTcuMTQ2LTEuNDU4LTcuMTQ2IDEuNDU4LTUuODg2IDMuOTQyLTMuOTQyIDUuODg2LTEuNDU4IDcuMTQ2IDEuNDU4IDcuMTQ2IDMuOTQyIDUuODg2IDUuODg2IDMuOTQyIDcuMTQ2IDEuNDU4IDcuMTQ2LTEuNDU4IDUuODg2LTMuOTQyIDMuOTQyLTUuODg2IDEuNDU4LTcuMTQ2em0yNy42NDggMHEwLTMuNzQ0LTEuNDU4LTcuMTQ2dC0zLjk0Mi01Ljg4Ni01Ljg4Ni0zLjk0Mi03LjE0Ni0xLjQ1OGgtMTMuODk2cTQuMjg0IDMuMjQgNi43ODYgOC4wNjR0Mi41MDIgMTAuMzY4LTIuNTAyIDEwLjM2OC02Ljc4NiA4LjA2NGgxMy44OTZxMy43NDQgMCA3LjE0Ni0xLjQ1OHQ1Ljg4Ni0zLjk0MiAzLjk0Mi01Ljg4NiAxLjQ1OC03LjE0NnptNC42MDggMHEwIDQuNjgtMS44MzYgOC45NDZ0LTQuOTE0IDcuMzQ0LTcuMzQ0IDQuOTE0LTguOTQ2IDEuODM2aC0yNy42NDhxLTQuNjggMC04Ljk0Ni0xLjgzNnQtNy4zNDQtNC45MTQtNC45MTQtNy4zNDQtMS44MzYtOC45NDYgMS44MzYtOC45NDYgNC45MTQtNy4zNDQgNy4zNDQtNC45MTQgOC45NDYtMS44MzZoMjcuNjQ4cTQuNjggMCA4Ljk0NiAxLjgzNnQ3LjM0NCA0LjkxNCA0LjkxNCA3LjM0NCAxLjgzNiA4Ljk0NnpcIixcIlRPR0dMRV9PTlwiOlwiTTAtMzIuMTgzcTAtNC42OCAxLjgzNi04Ljk0NnQ0LjkxNC03LjM0NCA3LjM0NC00LjkxNCA4Ljk0Ni0xLjgzNmgyNy42NDhxNC42OCAwIDguOTQ2IDEuODM2dDcuMzQ0IDQuOTE0IDQuOTE0IDcuMzQ0IDEuODM2IDguOTQ2LTEuODM2IDguOTQ2LTQuOTE0IDcuMzQ0LTcuMzQ0IDQuOTE0LTguOTQ2IDEuODM2aC0yNy42NDhxLTQuNjggMC04Ljk0Ni0xLjgzNnQtNy4zNDQtNC45MTQtNC45MTQtNy4zNDQtMS44MzYtOC45NDZ6bTUwLjY4OCAxOC40MzJxMy43NDQgMCA3LjE0Ni0xLjQ1OHQ1Ljg4Ni0zLjk0MiAzLjk0Mi01Ljg4NiAxLjQ1OC03LjE0Ni0xLjQ1OC03LjE0Ni0zLjk0Mi01Ljg4Ni01Ljg4Ni0zLjk0Mi03LjE0Ni0xLjQ1OC03LjE0NiAxLjQ1OC01Ljg4NiAzLjk0Mi0zLjk0MiA1Ljg4Ni0xLjQ1OCA3LjE0NiAxLjQ1OCA3LjE0NiAzLjk0MiA1Ljg4NiA1Ljg4NiAzLjk0MiA3LjE0NiAxLjQ1OHpcIixcIkJJQ1lDTEVcIjpcIk0yNy40MzItMjIuOTY3aC0xMS4zMDRxLTEuNDQgMC0yLjA3LTEuMjZ0LjIzNC0yLjQxMmw2Ljc2OC05LjAzNnEtMi4zNC0xLjExNi00LjkzMi0xLjExNi00Ljc1MiAwLTguMTM2IDMuMzg0dC0zLjM4NCA4LjEzNiAzLjM4NCA4LjEzNiA4LjEzNiAzLjM4NHE0LjE0IDAgNy4zMDgtMi42MXQzLjk5Ni02LjYwNnptLTYuNjk2LTQuNjA4aDYuNjk2cS0uNjQ4LTMuMDYtMi43LTUuMzI4em0xNy4yOCAwbDEwLjM2OC0xMy44MjRoLTE3LjI4bC0zLjU2NCA0Ljc1MnEzLjc4IDMuNzA4IDQuNTM2IDkuMDcyaDUuOTR6bTQwLjMyIDIuMzA0cTAtNC43NTItMy4zODQtOC4xMzZ0LTguMTM2LTMuMzg0cS0yLjE2IDAtNC4zNTYuODY0bDYuMjY0IDkuMzZxLjU0LjgyOC4zNiAxLjc2NHQtLjk3MiAxLjQ0cS0uNTQuMzk2LTEuMjk2LjM5Ni0xLjI2IDAtMS45MDgtMS4wNDRsLTYuMjY0LTkuMzZxLTMuMzQ4IDMuNDItMy4zNDggOC4xIDAgNC43NTIgMy4zODQgOC4xMzZ0OC4xMzYgMy4zODQgOC4xMzYtMy4zODQgMy4zODQtOC4xMzZ6bTQuNjA4IDBxMCA2LjY2LTQuNzM0IDExLjM5NHQtMTEuMzk0IDQuNzM0LTExLjM5NC00LjczNC00LjczNC0xMS4zOTRxMC0zLjQ5MiAxLjQyMi02LjYwNnQzLjk0Mi01LjM4MmwtMi4zNC0zLjUyOC0xMi43MDggMTYuODg0cS0uNjQ4LjkzNi0xLjgzNi45MzZoLTcuMDkycS0uODI4IDUuOTA0LTUuMzY0IDkuODY0dC0xMC41ODQgMy45NnEtNi42NiAwLTExLjM5NC00LjczNHQtNC43MzQtMTEuMzk0IDQuNzM0LTExLjM5NCAxMS4zOTQtNC43MzRxNC4xMDQgMCA3Ljc0IDEuOThsNC45MzItNi41ODhoLTguMDY0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjIuNjg0LTEuNjIgMS42Mi0uNjg0aDEzLjgyNHY0LjYwOGgxNS42NmwtMy4wNi00LjYwOGgtNy45OTJxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODRoOS4yMTZxMS4xODggMCAxLjkwOCAxLjAwOGw5LjYxMiAxNC40cTMuMjc2LTEuNTg0IDYuOTEyLTEuNTg0IDYuNjYgMCAxMS4zOTQgNC43MzR0NC43MzQgMTEuMzk0elwiLFwiQlVTXCI6XCJNMTMuODI0LTIwLjY2M3EwLTEuOTA4LTEuMzUtMy4yNTh0LTMuMjU4LTEuMzUtMy4yNTggMS4zNS0xLjM1IDMuMjU4IDEuMzUgMy4yNTggMy4yNTggMS4zNSAzLjI1OC0xLjM1IDEuMzUtMy4yNTh6bTM2Ljg2NCAwcTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptLTEuNjU2LTE0LjI1NmwtMi41OTItMTMuODI0cS0uMTgtLjgyOC0uODEtMS4zNXQtMS40NTgtLjUyMmgtMzMuMDQ4cS0uODI4IDAtMS40NTguNTIydC0uODEgMS4zNWwtMi41OTIgMTMuODI0cS0uMTggMS4wOC41MDQgMS45MDh0MS43NjQuODI4aDM4LjIzMnExLjA4IDAgMS43NjQtLjgyOHQuNTA0LTEuOTA4em0tOC4xMzYtMjIuMDMycTAtLjcyLS41MDQtMS4yMjR0LTEuMjI0LS41MDRoLTIzLjA0cS0uNzIgMC0xLjIyNC41MDR0LS41MDQgMS4yMjQuNTA0IDEuMjI0IDEuMjI0LjUwNGgyMy4wNHEuNzIgMCAxLjIyNC0uNTA0dC41MDQtMS4yMjR6bTE0LjQgMjYuMXYyMS43MDhoLTQuNjA4djQuNjA4cTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTh2LTQuNjA4aC0yNy42NDh2NC42MDhxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1LTMuMjU4LTEuMzUtMS4zNS0zLjI1OHYtNC42MDhoLTQuNjA4di0yMS43MDhxMC00LjAzMi45LTguMDI4bDMuNzA4LTE2LjM0NHEuMzI0LTIuODA4IDMuNTEtNC45MzJ0OC4yOC0zLjIwNCAxMS4yNS0xLjA4IDExLjI1IDEuMDggOC4yOCAzLjIwNCAzLjUxIDQuOTMybDMuNzggMTYuMzQ0cS44MjggMy42NzIuODI4IDguMDI4elwiLFwiSU9YSE9TVFwiOlwiTTUyLjY2OC0zNC40ODdxMCAxLjI2LS45IDIuMTc4dC0yLjE5Ni45MThoLTI1LjI3MnEtMS4yOTYgMC0yLjE5Ni0uOTE4dC0uOS0yLjE3OC45LTIuMTc4IDIuMTk2LS45MThoMjUuMjcycTEuMjk2IDAgMi4xOTYuOTE4dC45IDIuMTc4em03LjcwNCAwcTAtMy4wOTYtLjgyOC02LjEyaC0zNS4zNTJxLTEuMjk2IDAtMi4xOTYtLjl0LS45LTIuMTZxMC0xLjI5Ni45LTIuMTk2dDIuMTk2LS45aDMyLjY4OHEtMy4xNjgtNS4xNDgtOC40Ni04LjE3MnQtMTEuNTItMy4wMjRxLTYuMzcyIDAtMTEuNzkgMy4xNXQtOC41NjggOC41NS0zLjE1IDExLjc3MnEwIDMuMDk2LjgyOCA2LjEyaDM1LjM1MnExLjI5NiAwIDIuMTk2Ljl0LjkgMi4xNnEwIDEuMjk2LS45IDIuMTk2dC0yLjE5Ni45aC0zMi42ODhxMy4xNjggNS4xNDggOC40NzggOC4xNzJ0MTEuNTM4IDMuMDI0cTQuNzUyIDAgOS4xMDgtMS44NTR0Ny40ODgtNS4wMDQgNS4wMDQtNy40ODggMS44NzItOS4xMjZ6bTEzLjM1Ni05LjE4cTAgMS4yNi0uOSAyLjE2dC0yLjE5Ni45aC00LjcxNnEuNjEyIDMuMDYuNjEyIDYuMTIgMCA2LjAxMi0yLjM1OCAxMS41MDJ0LTYuMzE4IDkuNDY4LTkuNDUgNi4zMzYtMTEuNTAyIDIuMzU4cS04Ljg1NiAwLTE2LjE0Ni00Ljc4OHQtMTAuODU0LTEyLjZoLTYuODA0cS0xLjI5NiAwLTIuMTk2LS45dC0uOS0yLjE5NnEwLTEuMjYuOS0yLjE2dDIuMTk2LS45aDQuNzUycS0uNjEyLTMuMDYtLjYxMi02LjEyIDAtNi4wMTIgMi4zNTgtMTEuNTAydDYuMzE4LTkuNDY4IDkuNDUtNi4zMzYgMTEuNTM4LTIuMzU4cTguODIgMCAxNi4xMSA0Ljc4OHQxMC44NTQgMTIuNmg2Ljc2OHExLjI5NiAwIDIuMTk2Ljl0LjkgMi4xOTZ6XCIsXCJBTkdFTExJU1RcIjpcIk0zNC4zMDgtNTAuODMxbC00LjEwNCAxMS44MDggNC4yMTIuNzU2cTUuOTQtMTYuMjM2IDUuOTQtMTguNjQ4IDAtMi4wMTYtMS4zNjgtMi4wMTYtMi4wNTIgMC00LjY4IDguMXptLTEwLjc2NCAyNC43MzJsMS4xODggMy4xNjhxMS4zMzItMS41MTIgMi41NTYtMi40MTJsLTEuMTg4LS4xOTgtMS4zODYtLjI1Mi0xLjE3LS4zMDZ6bS0xMC41MTItMzIuMjU2cTAgMy41MjggNS43MjQgMTguNzU2LjY0OC0uMzYgMS43NjQtLjM2LjU0IDAgMi43LjE4bC00LjM1Ni0xMi42MzZxLTIuNy03LjkyLTQuNDI4LTcuOTItLjY4NCAwLTEuMDQ0LjYzdC0uMzYgMS4zNXptLTIuODQ0IDI3LjMyNHEwIDEuMjk2IDEuODU0IDQuMjg0dDQuMjMgNS41MDggMy42IDIuNTJxLjUwNCAwIC45MTgtLjQ2OHQuNDE0LS45NzJxMC0uODY0LTEuMTUyLTMuNjcyLS40NjgtMS4xNTItMS4xNTItMi41OTJ0LTEuNzEtMy4yMDQtMi4yMTQtMi45MTYtMi4yMzItMS4xNTJxLS43MiAwLTEuNjM4Ljk3MnQtLjkxOCAxLjY5MnptLTUuNjg4IDEyLjA2cTAgMS40NzYuOSAzLjc0NCAyLjEyNCA1LjIyIDYuNjA2IDguMTcydDEwLjEzNCAyLjk1MnE4LjE3MiAwIDEzLjc1Mi02LjEyIDUuNDcyLTYuMDg0IDUuNDcyLTE1LjM3MiAwLTEuNTQ4LS4wMzYtMi40MTJ0LS40MTQtMi4yMzItMS4wOTgtMi4wMTZxLTIuMDE2LTEuNzY0LTcuNjE0LTIuNzE4dC05LjczOC0uOTU0cS0xLjMzMiAwLTEuNzY0LjM5Ni0uNDMyLjE4LS40MzIgMS4yNiAwIDEuMjI0Ljc3NCAyLjE2dDEuOTk4IDEuNDQgMi43OS44NDYgMy4xNS40MTQgMy4wNi4xNDQgMi41MiAwaC44MjhxLjg2NCAwIDEuNDQuNjg0LjU0LjY4NC42ODQgMS45OC0xLjAwOCAxLjAwOC0zLjQ1NiAxLjk0NC0yLjE5Ni43OTItMy4zNDggMS42NTYtMi4zMDQgMS42NTYtMy45MDYgNC4xMDR0LTEuNjAyIDQuOTMycTAgMS4xMTYuNjY2IDMuMTg2dC42NjYgMy4xNWwtLjEwOC40MzJxLS4xNDQuNDMyLS4xNDQuNTA0LTQuOTMyLS4zNi01LjI1Ni03Ljc3Ni0uMjg4LjA3Mi0xLjQ3Ni4wNzIuMDcyLjI1Mi4wNzIuNzU2IDAgMS45MDgtMS40NTggMy4yMjJ0LTMuNDAyIDEuMzE0cS0yLjk1MiAwLTUuOTk0LTIuODA4dC0zLjA0Mi01LjcyNHEwLTEuMjI0IDEuMTg4LTIuNDEyIDEuODcyIDIuMzA0IDIuMTYgMi43MzYgMi43NzIgMy43NDQgNC43ODggMy43NDQuNDMyIDAgLjk1NC0uMzA2dC41MjItLjczOHEwLTEuMjI0LTMuMTUtNS4yMnQtNC4xOTQtMy45OTZxLTEuNTQ4IDAtMi41MiAxLjYwMnQtLjk3MiAzLjI1OHptLTQuMTA0LjMyNHEwLTMuNjM2IDEuNTMtNS44Njh0NC45MTQtMy4xNjhxLTEuMDA4LTIuNjY0LTEuMDA4LTMuNzQ0IDAtMi4yMzIgMi4xOTYtNC40Mjh0NC4zOTItMi4xOTZxMS4wNDQgMCAyLjUyLjU0LTUuODY4LTE2LjYzMi01Ljg2OC0yMC40MTIgMC0yLjg4IDEuNDc2LTQuNjk4dDQuMjg0LTEuODE4cTQuNzE2IDAgMTEuNyAyMC45MTZsLjI4OC44MjhxLjIxNi0uNTc2IDEuMDQ0LTIuODYydDEuNTY2LTQuMjY2IDEuOTQ0LTQuNTkgMi4zMjItNC40MjggMi41MzgtMy4xMTQgMi43NTQtMS4yOTZxMi41NTYgMCA0LjAzMiAxLjc2NHQxLjQ3NiA0LjM5MnEwIDMuODg4LTUuNzI0IDE5LjggMi4xOTYuNTQgMy42MTggMS42NTZ0Mi4xMDYgMi44MDguOTM2IDMuMzY2LjI1MiAzLjk3OHEwIDUuNC0xLjY5MiAxMC4wOHQtNC43NTIgOC4xLTcuNTk2IDUuNC0xMC4wMDggMS45OHEtMy45OTYgMC04LjAyOC0xLjUxMi01LjM2NC0yLjA1Mi05LjI4OC02Ljg5NHQtMy45MjQtMTAuMzE0elwiLFwiQ0NcIjpcIk0yOC4yNi0yOC4xNTFoNy40NTJxLS41MDQgNS42ODgtMy41NDYgOC45NDZ0LTcuNzIyIDMuMjU4cS01LjgzMiAwLTkuMTYyLTQuMTc2dC0zLjMzLTExLjM3NnEwLTYuOTg0IDMuMzQ4LTExLjIxNHQ4LjM4OC00LjIzcTUuMzI4IDAgOC4zNTIgMy4xMzJ0My40OTIgOC44OTJoLTcuMzA4cS0uMTgtMi4zMDQtMS4yNzgtMy41NjR0LTIuOTM0LTEuMjZxLTIuMDUyIDAtMy4xODYgMi4xNzh0LTEuMTM0IDYuMzlxMCAxLjcyOC4xOCAzLjAyNHQuNjQ4IDIuNTAyIDEuNDQgMS44NTQgMi4zNzYuNjQ4cTMuNDIgMCAzLjkyNC01LjAwNHptMjUuNjMyIDBoNy40MTZxLS41MDQgNS42ODgtMy41MjggOC45NDZ0LTcuNzA0IDMuMjU4cS01LjgzMiAwLTkuMTYyLTQuMTc2dC0zLjMzLTExLjM3NnEwLTYuOTg0IDMuMzQ4LTExLjIxNHQ4LjM4OC00LjIzcTUuMzI4IDAgOC4zNTIgMy4xMzJ0My40OTIgOC44OTJoLTcuMzQ0cS0uMTQ0LTIuMzA0LTEuMjYtMy41NjR0LTIuOTE2LTEuMjZxLTIuMDUyIDAtMy4xODYgMi4xNzh0LTEuMTM0IDYuMzlxMCAxLjcyOC4xOCAzLjAyNHQuNjQ4IDIuNTAyIDEuNDIyIDEuODU0IDIuMzU4LjY0OHExLjc2NCAwIDIuNzU0LTEuMzY4dDEuMjA2LTMuNjM2em0xMi45MjQtNC4yODRxMC03LjQ1Mi0uNTU4LTExLjA1MnQtMi4xNzgtNS43OTZxLS4yMTYtLjI4OC0uNDg2LS41MDR0LS43NzQtLjU0LS41NzYtLjM5NnEtMy4wOTYtMi4yNjgtMjUuMDkyLTIuMjY4LTIyLjUgMC0yNS41NiAyLjI2OC0uMTguMTQ0LS42My40MTR0LS43NTYuNTA0LS41MjIuNTIycS0xLjYyIDIuMTYtMi4xNiA1Ljc0MnQtLjU0IDExLjEwNnEwIDcuNDg4LjU0IDExLjA3dDIuMTYgNS43NzhxLjIxNi4yODguNTQuNTR0LjczOC41MDQuNjMuNDMycTEuNTg0IDEuMTg4IDguNjIyIDEuNzY0dDE2LjkzOC41NzZxMjEuOTYgMCAyNS4wOTItMi4zNC4xOC0uMTQ0LjYxMi0uMzk2dC43MzgtLjUwNC40ODYtLjU3NnExLjY1Ni0yLjE2IDIuMTk2LTUuNzI0dC41NC0xMS4xMjR6bTYuOTEyLTI3LjM5NnY1NS4yOTZoLTczLjcyOHYtNTUuMjk2aDczLjcyOHpcIixcIlNIRVFFTFwiOlwiTTM1LjcxMi00MS45NzV2MTcuODU2cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTUuNzZxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMTcuODU2cTAtNC4wMzItMi44OC02LjkxMnQtNi45MTItMi44OGgtOS43OTJ2NDEuNDcycTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTUuNzZxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNDguMzg0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTYuNzA0cTQuODYgMCA4Ljk2NCAyLjM5NHQ2LjQ5OCA2LjQ5OCAyLjM5NCA4Ljk2NHptMTMuODI0LTE2LjcwNHYzMS42OHEwIDQuODYtMi4zOTQgOC45NjR0LTYuNDk4IDYuNDk4LTguOTY0IDIuMzk0aC0xNi43MDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMzQuNTZxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg1Ljc2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyNy42NDhoOS43OTJxNC4wMzIgMCA2LjkxMi0yLjg4dDIuODgtNi45MTJ2LTMxLjY4cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNS43NnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6XCIsXCJNRUFOUEFUSFwiOlwiTTQ3LjE5Ni0zNC4xMjd2NC4xMDRxMCAuODY0LS40ODYgMS4zNjh0LTEuMzUuNTA0aC03LjI3MnEtLjg2NCAwLTEuMzY4LS41MDR0LS41MDQtMS4zNjh2LTQuMTA0cTAtLjg2NC41MDQtMS4zNjh0MS4zNjgtLjUwNGg3LjI3MnEuODY0IDAgMS4zNS41MDR0LjQ4NiAxLjM2OHptLTE3LjY0IDguMjh2LTlxMC0xLjkwOC0xLjE3LTMuMDc4dC0zLjA3OC0xLjE3aC00Ljc4OHEtMi40NDggMC0zLjQ1NiAxLjg3Mi0xLjAwOC0xLjg3Mi0zLjQ1Ni0xLjg3MmgtNC42OHEtMS45MDggMC0zLjA3OCAxLjE3dC0xLjE3IDMuMDc4djlxMCAuNzkyLjc1Ni43OTJoMS45OHEuNzkyIDAgLjc5Mi0uNzkydi04LjI4cTAtLjg2NC40ODYtMS4zNjh0MS4zODYtLjUwNGgzLjM4NHEuODY0IDAgMS4zNjguNTA0dC41MDQgMS4zNjh2OC4yOHEwIC43OTIuNzU2Ljc5MmgxLjk0NHEuNzkyIDAgLjc5Mi0uNzkydi04LjI4cTAtLjg2NC41MDQtMS4zNjh0MS4zNjgtLjUwNGgzLjQ5MnEuODY0IDAgMS4zNS41MDR0LjQ4NiAxLjM2OHY4LjI4cTAgLjc5Mi43OTIuNzkyaDEuOThxLjc1NiAwIC43NTYtLjc5MnptMjEuMjA0LTMuNDU2di01LjU0NHEwLTEuOTA4LTEuMTg4LTMuMDc4dC0zLjA5Ni0xLjE3aC05LjUwNHEtMS45MDggMC0zLjA5NiAxLjE3dC0xLjE4OCAzLjA3OHYxNC43NnEwIC43NTYuNzkyLjc1NmgxLjk4cS43NTYgMCAuNzU2LS43NTZ2LTYuNDhxMS4xMTYgMS41MTIgMy4zODQgMS41MTJoNi44NzZxMS45MDggMCAzLjA5Ni0xLjE3dDEuMTg4LTMuMDc4em00LjUzNi0yMi4xNzZ2MzguNTkycTAgMy40NTYtMi40NDggNS45MDR0LTUuOTA0IDIuNDQ4aC0zOC41OTJxLTMuNDU2IDAtNS45MDQtMi40NDh0LTIuNDQ4LTUuOTA0di0zOC41OTJxMC0zLjQ1NiAyLjQ0OC01LjkwNHQ1LjkwNC0yLjQ0OGgzOC41OTJxMy40NTYgMCA1LjkwNCAyLjQ0OHQyLjQ0OCA1LjkwNHpcIixcIkJVWVNFTExBRFNcIjpcIk0zMi45NC0yNS4zNDNoLTEwLjU4NGw1LjI5Mi0xOS44MzZ6bTMuMDk2IDExLjU5MmgxMS4xOTZsLTExLjY2NC0zNi44NjRoLTE1Ljg0bC0xMS42NjQgMzYuODY0aDExLjE5NmwxMy43ODgtMTEuMzA0em0xOS4yNi0zNS43MTJ2MzQuNTZxMCA0LjI0OC0zLjA2IDcuMzA4dC03LjMwOCAzLjA2aC0zNC41NnEtNC4yNDggMC03LjMwOC0zLjA2dC0zLjA2LTcuMzA4di0zNC41NnEwLTQuMjQ4IDMuMDYtNy4zMDh0Ny4zMDgtMy4wNmgzNC41NnE0LjI0OCAwIDcuMzA4IDMuMDZ0My4wNiA3LjMwOHpcIixcIkNPTk5FQ1RERVZFTE9QXCI6XCJNNzMuNzI4LTMyLjIxOXEwIC43NTYtLjQ2OCAxLjMxNHQtMS4xODguNzAybC03LjM4IDEyLjgxNnEuMTA4LjMyNC4xMDguNjQ4IDAgLjcyLS40NSAxLjI3OHQtMS4xNy43MDJsLTYuOTQ4IDEyLjEzMnEuMTA4LjI4OC4xMDguNTc2IDAgLjgyOC0uNTk0IDEuNDR0LTEuNDU4LjYxMnEtLjkgMC0xLjQ3Ni0uNjQ4aC0xNC40cS0uNjEyLjcyLTEuNTQ4LjcydC0xLjU0OC0uNzJoLTE0LjM2NHEtLjYxMi43Mi0xLjU0OC43Mi0uODI4IDAtMS40NC0uNTk0dC0uNjEyLTEuNDU4cTAtLjI4OC4xNDQtLjcybC02Ljk0OC0xMi4wNnEtLjcyLS4xNDQtMS4xNy0uNzAydC0uNDUtMS4yNzhxMC0uMzI0LjEwOC0uNjQ4bC03LjQxNi0xMi44MTZxLS43Mi0uMTgtMS4xNy0uNzM4dC0uNDUtMS4yNzhxMC0uNzU2LjQ4Ni0xLjMxNHQxLjIwNi0uNzAybDcuMTY0LTEyLjM4NC0uMDE4LS4xMDgtLjAxOC0uMTA4cTAtMS4yOTYgMS4yMjQtMS44MzZsNy41MjQtMTMuMDY4cS0uMTQ0LS4zNi0uMTQ0LS42NDggMC0uODY0LjYxMi0xLjQ1OHQxLjQ0LS41OTRxLjkzNiAwIDEuNTg0Ljc1NmgxNC4yNTZxLjU3Ni0uNzU2IDEuNTQ4LS43NTZ0MS41NDguNzU2aDE0LjMyOHEuNjQ4LS43NTYgMS41ODQtLjc1Ni44MjggMCAxLjQ0LjU5NHQuNjEyIDEuNDU4cTAgLjIxNi0uMTQ0LjY0OGw3LjQ1MiAxMi44ODhxLjgyOC4wMzYgMS40MDQuNjN0LjU3NiAxLjM4NnEwIC40NjgtLjI1Mi45NzJsNi43MzIgMTEuNjY0cS42ODQuMTQ0IDEuMTM0LjcwMnQuNDUgMS4yNzh6bS0zNS40NiAyOC43NjRoMTQuMDA0bC0xMi4zMTItMTIuNzQ0aC01LjE0OGwtMTIuMzEyIDEyLjc0NGgxMi45NnEuNjQ4LS41NzYgMS40MDQtLjU3NnQxLjQwNC41NzZ6bS0zNC4yMzYtMjkuMjMycS4wMzYuMTQ0LjAzNi40NjggMCAuMzYtLjA3Mi41NGw3LjQ4OCAxMi45Ni4xNjIuMDM2LjE5OC4wOS4xOC4wOSA2Ljc2OC03LjE2NHYtMTIuNDkybC02LjczMi02Ljk4NHEtLjQ2OC4yODgtMS4wNDQuMzZ6bTMxLjQ2NC0yOC4yMjRoLTEzLjk2OGw2Ljg0IDcuMiAxOS45NDQtNy4yaC0xMC4wOHEtLjU3Ni41NzYtMS4zNjguNTc2dC0xLjM2OC0uNTc2em0yNS4zMDggNDMuNjMycS4wMzYtLjIxNi4xOC0uMzk2bC0yLjMwNC0yLjQ0OC0uNjEyIDIuODQ0aDIuNzM2em0tMy44MTYgMGwuNzkyLTMuNzgtOS4wNzItOS41NzYtMTAuNjU2IDExLjA1MiAyLjI2OCAyLjMwNGgxNi42Njh6bS0zLjE2OCAxMy4yNDhsLjU3Ni0xLjAwOCAyLjM0LTExLjE2aC0xNS4zNzJsMTEuOTg4IDEyLjM0OHEuMjg4LS4xNDQuNDY4LS4xOHptLTMzLjAxMi41NzZoLjE4bDEyLjMxMi0xMi43NDRoLTEzLjQyOHYxMi4wNmwuMTQ0LjIxNnEuNTA0LjE4Ljc5Mi40Njh6bS0uOTM2LTEzLjgyNGgxNC40NzJsMi4zMDQtMi4zNzYtMTEuMTI0LTExLjU1Ni01LjY1MiA1Ljk3NnY3Ljk1NnptLTYuOTQ4IDBoNS44Njh2LTYuODA0bC02LjA0OCA2LjM3MnEuMTQ0LjI4OC4xOC40MzJ6bS0uMDM2LTI5LjdsLjAxOC4wNzIuMDE4LjA3MnEwIC41NzYtLjI4OCAxLjA0NGw2LjE1NiA2LjM3MnYtOS42ODR6bTYuOTg0LTIuNTJ2MTEuMTk2bDUuNTA4IDUuNjUyIDEwLjY5Mi0xMS4zMDQtOC4wMjgtOC40OTZ6bS4xNDQtMTAuOTQ0bC0uMTQ0LjI4OHY5LjUwNGw3LjM4LTIuNjY0LTYuODc2LTcuMjM2LS4zNi4xMDh6bTMyLjA3Ni0uNDY4aC0uNTc2bC0yMi4zNTYgOC4wNjQgNy42NjggOC4xem0tMTUuMjY0IDE3LjcxMmwtMTAuNjkyIDExLjM0IDExLjE5NiAxMS40ODQgMTAuNjU2LTExLjA1MnptLTEyLjA2IDExLjIzMmwtNC44OTYtNS4wNzZ2MTAuMjI0em0xMi42IDEzLjEwNGwtMS41MTIgMS41ODRoMy4wNnptMTIuMDk2LTEyLjUyOGw4LjU2OCA5LjAzNiA0Ljc1Mi0yMi40NjQtLjEwOC0uMTgtLjAzNi0uMDM2em0xMi4zODQtMTQuNHEtLjI4OC0uNDY4LS4yODgtMS4wNDR2LS4wNzJsLTcuNzc2LTEzLjUzNnEtLjE4LS4wMzYtLjQ2OC0uMThsLTE1LjczMiAxNi42NjggMTEuMTYgMTEuNzcyem0tNDMuMDU2LTQuNDY0di04LjAyOGwtNS44NjggMTAuMTUyem0wIDM0LjA1NmgtNS44NjhsNS44NjggMTAuMTg4di0xMC4xODh6bTM5LjA2IDBsLTEuNzI4IDguMTcyIDQuNjgtOC4xNzJoLTIuOTUyem00LjM5Mi0yLjUybDcuNDUyLTEyLjk5NnEtLjA3Mi0uMzYtLjA3Mi0uNTA0bC4xMDgtLjU3Ni02LjE1Ni0xMC42NTYtNC42NDQgMjIuMDMyIDIuNzcyIDIuOTUycS4xOC0uMTA4LjU0LS4yNTJ6XCIsXCJEQVNIQ1VCRVwiOlwiTTAtMzkuOTU5cTAtNC43MTYgMy4yOTQtOC4xNTR0OC4wMS0zLjQzOGgyNi43MTJsMTIuNjcyLTEyLjg4OHY1Mi45MnEwIDQuNzUyLTMuMjk0IDguMTcydC04LjAxIDMuNDJoLTI4LjA4cS00LjcxNiAwLTguMDEtMy40MnQtMy4yOTQtOC4xNzJ2LTI4LjQ0em00NC4zNTIgMjcuMTQ0bC02LjMzNi02LjQ4di0xNS4zcTAtMS42NTYtMS4xNTItMi44NDR0LTIuODA4LTEuMTg4aC0xNy40MjRxLTEuNjU2IDAtMi44MDggMS4xODh0LTEuMTUyIDIuODQ0djE3LjcxMnEwIDEuNjU2IDEuMTcgMi44NjJ0Mi43OSAxLjIwNmgyNy43MnpcIixcIkZPUlVNQkVFXCI6XCJNMzMuNjI0LTU5LjAzOXEtMTEuNDEyIDQuMzU2LTIwLjAxNiAxMy4wNXQtMTIuODg4IDIwLjE3OHEtLjcyLTMuMjA0LS43Mi02LjMzNiAwLTcuNDg4IDMuNjktMTMuODQydDEwLjAyNi0xMC4wNDQgMTMuODI0LTMuNjlxMi45NTIgMCA2LjA4NC42ODR6bTkuNjg0IDQuMjg0cTMuMzQ4IDIuMzQgNS45MDQgNS41OC0xNC4wMDQgNC4wNjgtMjQuMjgyIDE0LjQxOHQtMTQuMjc0IDI0LjM1NHEtMy4zNDgtMi41OTItNS41OC01LjgzMiA0LjAzMi0xMy44OTYgMTQuMjItMjQuMTU2dDI0LjAxMi0xNC4zNjR6bS0yNi4zODggNDguMDI0cTQuMTQtMTIuODE2IDEzLjY2Mi0yMi4zOTJ0MjIuMzAyLTEzLjgyNHExLjQ0IDMuMzEyIDEuOTQ0IDcuMDItMTAuNTEyIDQuMzItMTguNTc2IDEyLjQydC0xMi4zNDggMTguNjQ4cS0zLjcwOC0uNTA0LTYuOTg0LTEuODcyem0zOC4zNzYgMi4wODhxLTYuOTQ4LTEuOC0xMy4yMTItNC4xNC00Ljg2IDMuMDI0LTEwLjQ0IDMuODUyIDMuOTI0LTcuMzggOS44NjQtMTMuMzM4dDEzLjI4NC05LjkxOHEtLjc1NiA1LjQ3Mi0zLjYzNiAxMC4yMjQgMi4zNCA2LjMgNC4xNCAxMy4zMnpcIixcIkxFQU5QVUJcIjpcIk02OC4xNDgtNTAuMzI3bDUuNTggNDUuNzkycS00LjcxNiAwLTkuMjUyLTIuMDUyLTcuMi0zLjI3Ni0xNC4xNDgtMy4yNzYtOC4xMzYgMC0xMy40NjQgNS4zMjgtNS4zMjgtNS4zMjgtMTMuNDY0LTUuMzI4LTYuOTQ4IDAtMTQuMTQ4IDMuMjc2LTQuNjA4IDIuMDUyLTkuMDcyIDIuMDUyaC0uMThsNS41OC00NS43OTJxOC4wNjQtNC41NzIgMTcuMzUyLTQuNTcyIDguMzg4IDAgMTMuOTMyIDMuODE2IDUuNTQ0LTMuODE2IDEzLjkzMi0zLjgxNiA5LjI4OCAwIDE3LjM1MiA0LjU3MnptLTE3LjgyIDM1LjUzMnE0LjY0NCAwIDguMzUyIDEuMDI2dDkuMzYgMy4zNjZsLTQuNDY0LTM2Ljc1NnEtNi4xNTYtMi44MDgtMTMuMjQ4LTIuODA4LTguMDY0IDAtMTMuNDY0IDUuMDc2LTUuNC01LjA3Ni0xMy40NjQtNS4wNzYtNy4wOTIgMC0xMy4yNDggMi44MDhsLTQuNDY0IDM2Ljc1NnEzLjc4LTEuNTQ4IDUuOTU4LTIuMzR0NS4zNDYtMS40MjIgNi40MDgtLjYzcTcuMjcyIDAgMTMuNDY0IDMuODg4IDYuMTkyLTMuODg4IDEzLjQ2NC0zLjg4OHptMS40NC0xLjIyNGwtMS45OC0zMi42NTJxLTcuNTk2LjE0NC0xMi45MjQgNS41OC01LjQ3Mi01LjU4LTEzLjQ2NC01LjU4LTYuMzM2IDAtMTIuMDk2IDIuMzc2bC00LjEwNCAzMy44NzZxNC40NjQtMS44MzYgOC4yMjYtMi43MzZ0Ny45NzQtLjlxNy41MjQgMCAxMy40NjQgMy42NzIgNi4xOTItMy44NTIgMTMuNDY0LTMuNjcyelwiLFwiU0VMTFNZXCI6XCJNNTQtMTUuMDgzdi0yNi4zODhxMC0uNzU2LS41NC0xLjI5NnQtMS4yNi0uNTRoLTMuMzQ4cS0uNzIgMC0xLjI2LjU0dC0uNTQgMS4yOTZ2MjYuMzg4cTAgLjcyLjU0IDEuMjZ0MS4yNi41NGgzLjM0OHEuNzIgMCAxLjI2LS41NHQuNTQtMS4yNnptLTEwLjIyNCAwdi0xOS4xMTZxMC0uNzItLjU0LTEuMjZ0LTEuMjYtLjU0aC0zLjYzNnEtLjcyIDAtMS4yNi41NHQtLjU0IDEuMjZ2MTkuMTE2cTAgLjcyLjU0IDEuMjZ0MS4yNi41NGgzLjYzNnEuNzIgMCAxLjI2LS41NHQuNTQtMS4yNnptLTEwLjUxMiAwdi0xNS40NDRxMC0uNzItLjU0LTEuMjZ0LTEuMjYtLjU0aC0zLjYzNnEtLjcyIDAtMS4yNi41NHQtLjU0IDEuMjZ2MTUuNDQ0cTAgLjcyLjU0IDEuMjZ0MS4yNi41NGgzLjYzNnEuNzIgMCAxLjI2LS41NHQuNTQtMS4yNnptLTEwLjUxMiAwdi0xMy4wMzJxMC0uNzItLjU0LTEuMjZ0LTEuMjYtLjU0aC0zLjYzNnEtLjcyIDAtMS4yNi41NHQtLjU0IDEuMjZ2MTMuMDMycTAgLjcyLjU0IDEuMjZ0MS4yNi41NGgzLjYzNnEuNzIgMCAxLjI2LS41NHQuNTQtMS4yNnptNTAuOTc2LTUuMjU2cTAgNS45NzYtNC4yNDggMTAuMjI0dC0xMC4yMjQgNC4yNDhoLTQ0Ljc4NHEtNS45NzYgMC0xMC4yMjQtNC4yNDh0LTQuMjQ4LTEwLjIyNHEwLTQuMTc2IDIuMjY4LTcuNzIydDYuMDQ4LTUuMzQ2cS0uMzYtMS4yMjQtLjM2LTIuNjI4IDAtNC4wNjggMi44OTgtNi45NjZ0Ni45NjYtMi44OThxMy42NzIgMCA2LjQ4IDIuNDEyIDEuNjItNi41ODggNi45ODQtMTAuOHQxMi4xNjgtNC4yMTJxNS4zNjQgMCA5LjkgMi42NDZ0Ny4xODIgNy4xODIgMi42NDYgOS45cTAgMi4zNzYtLjUwNCA0LjM5MiA0Ljg2IDEuMTg4IDcuOTU2IDUuMTN0My4wOTYgOC45MXpcIixcIlNISVJUU0lOQlVMS1wiOlwiTTAtNjQuNDM5aDU1LjI5NnY1MC4xMTJsLTI3LjkzNiAxMi4xNjgtMjcuMzYtMTIuMTY4di01MC4xMTJ6bTUxLjY5NiA0Ny43NzJ2LTMzLjMzNmgtNDguMDk2djMzLjMzNmwyMy43OTYgMTAuNTg0em0wLTM2LjkzNnYtNy4yMzZoLTQ4LjA5NnY3LjIzNmg0OC4wOTZ6bS00NS4xOCAxMC43Mjh2NC4xNGgtMS4zMzJ2LTQuMTRoMS4zMzJ6bTAgNS4zMjh2NC4xNGgtMS4zMzJ2LTQuMTRoMS4zMzJ6bTAgNS4zMjh2NC4xNGgtMS4zMzJ2LTQuMTRoMS4zMzJ6bTAgNS4zMjh2NC4xNGgtMS4zMzJ2LTQuMTRoMS4zMzJ6bTAgNS4zMjh2NC4xNGgtMS4zMzJ2LTQuMTRoMS4zMzJ6bS45MzYgNS4xNDhsLjU0LTEuMjI0IDMuNzggMS42OTItLjU0IDEuMTg4em00Ljg5NiAyLjE2bC41NC0xLjIyNCAzLjc4IDEuNjU2LS41NCAxLjIyNHptNC44NiAyLjE2bC41NC0xLjIyNCAzLjc4IDEuNjU2LS41NCAxLjIyNHptNC44OTYgMi4xMjRsLjU0LTEuMTg4IDMuNzQ0IDEuNjU2LS41NCAxLjIyNHptNi41ODguNDY4bDMuNzgtMS42NTYuNTQgMS4xODgtMy43OCAxLjY5MnptNC44Ni0yLjE2bDMuNzgtMS42NTYuNTQgMS4yMjQtMy43OCAxLjY1NnptNC44OTYtMi4xNmwzLjc4LTEuNjU2LjU0IDEuMjI0LTMuNzggMS42NTZ6bTQuODYtMi4xMjRsMy43OC0xLjY5Mi41NCAxLjIyNC0zLjc4IDEuNjU2em0tMzMuOTg0LTQzLjJ2MS4yOTZoLTQuMTA0di0xLjI5Nmg0LjEwNHptNS44MzIgMHYxLjI5NmgtNC4xNHYtMS4yOTZoNC4xNHptNS44MzIgMHYxLjI5NmgtNC4xNHYtMS4yOTZoNC4xNHptNS43OTYgMHYxLjI5NmgtNC4xMDR2LTEuMjk2aDQuMTA0em01LjgzMiAwdjEuMjk2aC00LjEwNHYtMS4yOTZoNC4xMDR6bTUuODMyIDB2MS4yOTZoLTQuMTR2LTEuMjk2aDQuMTR6bTUuODMyIDB2MS4yOTZoLTQuMTR2LTEuMjk2aDQuMTR6bTUuNzk2IDB2MS4yOTZoLTQuMTA0di0xLjI5Nmg0LjEwNHptLTQzLjU2IDEyLjI0djIuODQ0aC0xLjMzMnYtNC4xNGg0LjE0djEuMjk2aC0yLjgwOHptOC42NC0xLjI5NnYxLjI5NmgtNC4xNHYtMS4yOTZoNC4xNHptNS44MzIgMHYxLjI5NmgtNC4xNHYtMS4yOTZoNC4xNHptNS43OTYgMHYxLjI5NmgtNC4xMDR2LTEuMjk2aDQuMTA0em01LjgzMiAwdjEuMjk2aC00LjEwNHYtMS4yOTZoNC4xMDR6bTUuODMyIDB2MS4yOTZoLTQuMTR2LTEuMjk2aDQuMTR6bTUuODMyIDB2MS4yOTZoLTQuMTR2LTEuMjk2aDQuMTR6bTQuNSA0LjE0di0yLjg0NGgtMi44MDh2LTEuMjk2aDQuMTR2NC4xNGgtMS4zMzJ6bTAgNS4zMjh2LTQuMTRoMS4zMzJ2NC4xNGgtMS4zMzJ6bTAgNS4zMjh2LTQuMTRoMS4zMzJ2NC4xNGgtMS4zMzJ6bTAgNS4zMjh2LTQuMTRoMS4zMzJ2NC4xNGgtMS4zMzJ6bTAgNS4zMjh2LTQuMTRoMS4zMzJ2NC4xNGgtMS4zMzJ6bTAgNS4zMjh2LTQuMTRoMS4zMzJ2NC4xNGgtMS4zMzJ6bS0yMS40Mi0xLjI2cS00LjY0NCAwLTcuOTU2LTMuMjk0dC0zLjMxMi03Ljk3NHEwLTQuNjQ0IDMuMzEyLTcuOTU2dDcuOTU2LTMuMzEycTQuNjggMCA3Ljk3NCAzLjMxMnQzLjI5NCA3Ljk1NnEwIDQuNjgtMy4yOTQgNy45NzR0LTcuOTc0IDMuMjk0em0tNS45NC0xMy43MTZxMCAxLjI5Ni43MDIgMi4wMzR0MS43ODIuOSAyLjMwNC4yNTIgMi4zMDQuMDcyIDEuNzgyLjMyNC43MDIgMS4wOThxMCAxLjc2NC00LjAzMiAxLjc2NC0zLjQ5MiAwLTQuNDI4LTEuODM2aC0uMTA4bC0xLjExNiAyLjI2OHEyLjQxMiAxLjUxMiA1LjgzMiAxLjUxMiAxLjA0NCAwIDIuMDM0LS4xOHQxLjk5OC0uNTc2IDEuNjM4LTEuMTg4LjYzLTEuOTA4cTAtMS42NTYtLjk5LTIuNTAydC0yLjQzLS45NzItMi44NjItLjEwOC0yLjQxMi0uMTgtLjk5LS45MThxMC0uNzU2LjczOC0xLjE4OHQxLjQ1OC0uNTQgMS40NzYtLjEwOHExLjIyNCAwIDIuNTM4LjM5NnQxLjg1NCAxLjIyNGguMTA4bDEuMDgtMi4wODhxLS4xMDgtLjAzNi0uNzU2LS4zMDZ0LS44MS0uMzI0LS43MDItLjI1Mi0uNzkyLS4yNTItLjcyLS4xNjItLjg2NC0uMTQ0LS44MjgtLjAzNnEtMS4wNDQgMC0yLjAzNC4xOHQtMS45NDQuNTk0LTEuNTQ4IDEuMjI0LS41OTQgMS45MjZ6XCIsXCJTSU1QTFlCVUlMVFwiOlwiTTMxLjA2OC0yNy4yODdxMC00LjAzMi0yLjg2Mi02Ljg5NHQtNi44OTQtMi44NjItNi44NzYgMi44NjItMi44NDQgNi44OTQgMi44NDQgNi44NzYgNi44NzYgMi44NDQgNi44OTQtMi44NDQgMi44NjItNi44NzZ6bTMxLjA2OC0uMDM2cTAtNC4wMzItMi44NDQtNi44NzZ0LTYuODc2LTIuODQ0LTYuODk0IDIuODQ0LTIuODYyIDYuODc2cTAgNC4wNjggMi44NjIgNi45MTJ0Ni44OTQgMi44NDQgNi44NzYtMi44NjIgMi44NDQtNi44OTR6bTExLjU5Mi0yOS4xMjR2NDguNTI4cTAgMS41ODQtMS4xMzQgMi43MTh0LTIuNzU0IDEuMTM0aC02NS45NTJxLTEuNjIgMC0yLjc1NC0xLjEzNHQtMS4xMzQtMi43MTh2LTQ4LjUyOHEwLTEuNTg0IDEuMTM0LTIuNzE4dDIuNzU0LTEuMTM0aDE1LjUxNnExLjU4NCAwIDIuNzM2IDEuMTM0dDEuMTUyIDIuNzE4djUuNzk2aDI3LjE0NHYtNS43OTZxMC0xLjU4NCAxLjE1Mi0yLjcxOHQyLjczNi0xLjEzNGgxNS41MTZxMS42MiAwIDIuNzU0IDEuMTM0dDEuMTM0IDIuNzE4elwiLFwiU0tZQVRMQVNcIjpcIk01MS40OC00My40NTF6bTkuMzYgNy4zNDRxNS4zMjggMCA5LjEwOCAzLjU0NnQzLjc4IDguODAycTAgNS42NTItMy45MjQgOS40MTR0LTkuNjEyIDMuNzYycS0zLjA2IDAtNS44MzItLjk5dC00Ljk2OC0yLjY0Ni00LjI0OC0zLjgxNi0zLjkyNC00LjU1NC0zLjcyNi00Ljc3LTMuOTA2LTQuNTM2LTQuMjEyLTMuODE2LTQuODk2LTIuNjQ2LTUuNzI0LS45OXEtNS41NDQgMC05LjA1NCAzLjI5NHQtMy41MSA4LjgwMnEwIDUuNjUyIDMuNzQ0IDl0OS40NjggMy4zNDhxMy42IDAgNy40ODgtMS4zNXQ2Ljk0OC0zLjU0NnEuMTgtLjE0NC43NTYtLjY2NnQxLjA4LS44NjQuNzkyLS4zNDJxLjUwNCAwIC44ODIuMzc4dC4zNzguODgycTAgLjg2NC0yLjE2IDIuNzcyLTMuNjM2IDMuMTY4LTguNDQyIDUuMTEydC05LjM3OCAxLjk0NHEtNC43ODggMC04LjgzOC0yLjA4OHQtNi40OC01Ljk0LTIuNDMtOC42NzZxMC03LjM4IDUuMDk0LTEyLjI3NnQxMi41MS00Ljg5NnE0LjMyIDAgOC4xNTQgMS41NjZ0Ni42NzggNC4wNjggNS40NTQgNS41MDggNS4wMDQgNi4wMyA0LjgwNiA1LjUyNiA1LjM4MiA0LjA2OCA2LjIxIDEuNTY2cTMuNjcyIDAgNi4wNjYtMi4yMTR0Mi4zOTQtNS44NXEwLTMuNDItMi4zMjItNS43MjR0LTUuNzQyLTIuMzA0cS0xLjA4IDAtMi45MzQuNjY2dC0yLjQ2Ni42NjZxLS43MiAwLTEuMjc4LS41NHQtLjU1OC0xLjI2cTAtLjY0OC4zMDYtMi4wNTJ0LjMwNi0yLjEyNHEwLTUuNzI0LTMuODctOS40Njh0LTkuNTk0LTMuNzQ0cS0yLjA4OCAwLTQuMDE0LjY2NnQtMy4wMjQgMS40NTgtMS45OTggMS40NTgtMS4xODguNjY2cS0uNTQgMC0uOTE4LS4zNzh0LS4zNzgtLjkxOHEwLS42ODQuOS0xLjY1NiAyLjEyNC0yLjQxMiA1LjI5Mi0zLjcyNnQ2LjU1Mi0xLjMxNHE2Ljg3NiAwIDExLjQ0OCA0LjUxOHQ0LjU3MiAxMS4zNThxMCAxLjMzMi0uMTQ0IDIuMzc2IDIuMDUyLS41NCA0LjE0LS41NHpcIixcIkNBUlRfUExVU1wiOlwiTTQzLjc3Ni0zOS4wOTVxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC00LjYwOHYtNC42MDhxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0LTEuNjIuNjg0LS42ODQgMS42MnY0LjYwOGgtNC42MDhxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYyLjY4NCAxLjYyIDEuNjIuNjg0aDQuNjA4djQuNjA4cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ2LTQuNjA4aDQuNjA4cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyem0tMjAuNzM2IDI5Ljk1MnEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzUtMy4yNTgtMS4zNS0xLjM1LTMuMjU4IDEuMzUtMy4yNTggMy4yNTgtMS4zNSAzLjI1OCAxLjM1IDEuMzUgMy4yNTh6bTMyLjI1NiAwcTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptNC42MDgtMzkuMTY4djE4LjQzMnEwIC44NjQtLjU3NiAxLjUzdC0xLjQ3Ni43NzRsLTM3LjU4NCA0LjM5MnEuMDM2LjI1Mi4xNjIuNzc0dC4yMTYuOTU0LjA5Ljc5MnEwIC41NzYtLjg2NCAyLjMwNGgzMy4xMnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyLS42ODQgMS42Mi0xLjYyLjY4NGgtMzYuODY0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJxMC0uNTA0LjM5Ni0xLjQyMnQxLjA2Mi0yLjE0Mi43MzgtMS4zNjhsLTYuMzcyLTI5LjYyOGgtNy4zNDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODRoOS4yMTZxLjU3NiAwIDEuMDI2LjIzNHQuNzIuNTU4LjQ2OC44ODIuMjcuOTU0LjE5OCAxLjA2Mi4xNjIuOTE4aDQzLjIzNnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyelwiLFwiQ0FSVF9BUlJPV19ET1dOXCI6XCJNNDYuMDgtMzkuMDk1cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NC0xLjYyLjY4NGwtNS4yOTIgNS4yNTZ2LTEwLjU0OHEwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODQtMS42Mi42ODQtLjY4NCAxLjYydjEwLjU0OGwtNS4yOTItNS4yNTZxLS42ODQtLjY4NC0xLjYyLS42ODR0LTEuNjIuNjg0LS42ODQgMS42Mi42ODQgMS42Mmw5LjIxNiA5LjIxNnEuNjg0LjY4NCAxLjYyLjY4NHQxLjYyLS42ODRsOS4yMTYtOS4yMTZxLjY4NC0uNjg0LjY4NC0xLjYyem0tMjMuMDQgMjkuOTUycTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptMzIuMjU2IDBxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1LTMuMjU4LTEuMzUtMS4zNS0zLjI1OCAxLjM1LTMuMjU4IDMuMjU4LTEuMzUgMy4yNTggMS4zNSAxLjM1IDMuMjU4em00LjYwOC0zOS4xNjh2MTguNDMycTAgLjg2NC0uNTc2IDEuNTN0LTEuNDc2Ljc3NGwtMzcuNTg0IDQuMzkycS4wMzYuMjUyLjE2Mi43NzR0LjIxNi45NTQuMDkuNzkycTAgLjU3Ni0uODY0IDIuMzA0aDMzLjEycS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjItLjY4NCAxLjYyLTEuNjIuNjg0aC0zNi44NjRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnEwLS41MDQuMzk2LTEuNDIydDEuMDYyLTIuMTQyLjczOC0xLjM2OGwtNi4zNzItMjkuNjI4aC03LjM0NHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYyLjY4NC0xLjYyIDEuNjItLjY4NGg5LjIxNnEuNTc2IDAgMS4wMjYuMjM0dC43Mi41NTguNDY4Ljg4Mi4yNy45NTQuMTk4IDEuMDYyLjE2Mi45MThoNDMuMjM2cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ6XCIsXCJESUFNT05EXCI6XCJNNy42MzItMzYuNzkxbDIyLjQyOCAyMy45NC0xMC44LTIzLjk0aC0xMS42Mjh6bTI5LjIzMiAyNy43OTJsMTIuNTY0LTI3Ljc5MmgtMjUuMTI4em0tMTcuNDk2LTMyLjRsNy4zNDQtMTMuODI0aC05LjQzMmwtMTAuMzY4IDEzLjgyNGgxMi40NTZ6bTI0LjMgMjguNTQ4bDIyLjQyOC0yMy45NGgtMTEuNjI4em0tMTkuMDgtMjguNTQ4aDI0LjU1MmwtNy4zNDQtMTMuODI0aC05Ljg2NHptMjkuNzcyIDBoMTIuNDU2bC0xMC4zNjgtMTMuODI0aC05LjQzMnptNS4wNzYtMTcuNDk2bDEzLjgyNCAxOC40MzJxLjUwNC42NDguNDY4IDEuNDk0dC0uNjEyIDEuNDU4bC0zNC41NiAzNi44NjRxLS42NDguNzItMS42OTIuNzJ0LTEuNjkyLS43MmwtMzQuNTYtMzYuODY0cS0uNTc2LS42MTItLjYxMi0xLjQ1OHQuNDY4LTEuNDk0bDEzLjgyNC0xOC40MzJxLjY0OC0uOTM2IDEuODM2LS45MzZoNDEuNDcycTEuMTg4IDAgMS44MzYuOTM2elwiLFwiU0hJUFwiOlwiTTY1LjE5Ni04LjQ1OXEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDQuNjA4IDQuNjA4LTMuMjQgMy4yNC0yLjk4OC0yLjk4OC0yLjk4OCAyLjk4OHEtLjY0OC42ODQtMS42Mi42ODR0LTEuNjItLjY4NGwtMi45ODgtMi45ODgtMi45ODggMi45ODhxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTIuOTg4LTIuOTg4LTIuOTg4IDIuOTg4cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC0yLjk4OC0yLjk4OC0yLjk4OCAyLjk4OHEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NGwtMi45ODgtMi45ODgtMi45ODggMi45ODhxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTIuOTg4LTIuOTg4LTIuOTg4IDIuOTg4cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC0yLjk4OC0yLjk4OC0yLjk4OCAyLjk4OHEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NGwtNC42MDgtNC42MDggMy4yNC0zLjI0IDIuOTg4IDIuOTg4IDIuOTg4LTIuOTg4cS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODRsMi45ODggMi45ODggMi45ODgtMi45ODhxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NGwyLjk4OCAyLjk4OCAyLjk4OC0yLjk4OHEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDIuOTg4IDIuOTg4IDIuOTg4LTIuOTg4cS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODRsMi45ODggMi45ODggMi45ODgtMi45ODhxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NGwyLjk4OCAyLjk4OCAyLjk4OC0yLjk4OHEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDIuOTg4IDIuOTg4em0tNTYuNjY0LTEuMzY4cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC00LjYwOC00LjYwOCAzLjI0LTMuMjQgMi45ODggMi45NTIgMi45ODgtMi45NTJxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NGwyLjk4OCAyLjk1MiAyLjMwNC0yLjMwNHYtMTAuNTQ4bC03LjU2LTExLjMwNHEtLjYxMi0uOTM2LS4yNTItMi4wMzR0MS40NC0xLjQ1OGw2LjM3Mi0yLjA4OHYtMTAuNzY0aDQuNjA4di00LjYwOGg5LjIxNnYtNC42MDhoOS4yMTZ2NC42MDhoOS4yMTZ2NC42MDhoNC42MDh2MTAuNzY0bDYuMzcyIDIuMDg4cTEuMDguMzYgMS40NCAxLjQ1OHQtLjI1MiAyLjAzNGwtNy41NiAxMS4zMDR2MTAuNTQ4bC42ODQtLjY0OHEuNjg0LS42ODQgMS42Mi0uNjg0dDEuNjIuNjg0bDIuOTg4IDIuOTUyIDIuOTg4LTIuOTUycS42ODQtLjY4NCAxLjYyLS42ODR0MS42Mi42ODRsNC42MDggNC42MDgtMy4yNCAzLjI0LTIuOTg4LTIuOTg4LTIuOTg4IDIuOTg4cS0uNjQ4LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC0yLjk4OC0yLjk4OC0yLjk4OCAyLjk4OHEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NGwtMi45ODgtMi45ODgtMi45ODggMi45ODhxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTIuOTg4LTIuOTg4LTIuOTg4IDIuOTg4cS0uNjg0LjY4NC0xLjYyLjY4NHQtMS42Mi0uNjg0bC0yLjk4OC0yLjk4OC0yLjk4OCAyLjk4OHEtLjY4NC42ODQtMS42Mi42ODR0LTEuNjItLjY4NGwtMi45ODgtMi45ODgtMi45ODggMi45ODhxLS42ODQuNjg0LTEuNjIuNjg0dC0xLjYyLS42ODRsLTIuOTg4LTIuOTg4em0xNC41MDgtNDAuNzg4djQuNjA4bDEzLjgyNC00LjYwOCAxMy44MjQgNC42MDh2LTQuNjA4aC00LjYwOHYtNC42MDhoLTE4LjQzMnY0LjYwOGgtNC42MDh6XCIsXCJVU0VSX1NFQ1JFVFwiOlwiTTIwLjczNi05LjE0M2wzLjQ1Ni0xNi4xMjgtMy40NTYtNC42MDgtNC42MDgtMi4zMDR6bTkuMjE2IDBsNC42MDgtMjMuMDQtNC42MDggMi4zMDQtMy40NTYgNC42MDh6bTUuNzYtMzYuMzZxLS4wNzItLjE0NC0uMTQ0LS4yMTYtLjM2LS4yODgtMy40NTYtLjI4OC0yLjUyIDAtNi4wMTIuNjg0LS4yNTIuMDcyLS43NTYuMDcydC0uNzU2LS4wNzJxLTMuNDkyLS42ODQtNi4wMTItLjY4NC0zLjA5NiAwLTMuNDU2LjI4OC0uMDcyLjA3Mi0uMTQ0LjIxNi4wNzIuNjQ4LjE0NC45NzIuMDcyLjEwOC4yNy4yMzR0LjI3LjM3OHEuMDcyLjE0NC4yNy43Mzh0LjI1Mi43MzguMjcuNjEyLjMwNi42MTIuMzI0LjUwNC40MzIuNDg2LjUwNC4zNDIuNjMuMjg4LjczOC4xNDQuODgyLjA3MnExLjI5NiAwIDIuMTI0LS40NXQxLjE3LTEuMDguNTIyLTEuMjQyLjQxNC0xLjA2Mi42My0uNDVoLjQzMnEuMzk2IDAgLjYzLjQ1dC40MTQgMS4wNjIuNTIyIDEuMjQyIDEuMTcgMS4wOCAyLjEyNC40NXEuNDY4IDAgLjg4Mi0uMDcydC43MzgtLjE0NC42My0uMjg4LjUwNC0uMzQyLjQzMi0uNDg2LjMyNC0uNTA0LjMwNi0uNjEyLjI3LS42MTIuMjUyLS43MzguMjctLjczOHEuMDcyLS4yNTIuMjctLjM3OHQuMjctLjIzNHEuMDcyLS4zMjQuMTQ0LS45NzJ6bTE0Ljk3NiAzMS42NDRxMCA0LjM1Ni0yLjYyOCA2Ljg0dC02Ljk4NCAyLjQ4NGgtMzEuNDY0cS00LjM1NiAwLTYuOTg0LTIuNDg0dC0yLjYyOC02Ljg0cTAtMi4xOTYuMTYyLTQuMjQ4dC42ODQtNC41MTggMS4zNS00LjQ0NiAyLjI4Ni0zLjcyNiAzLjM2Ni0yLjY4MmwtMy4yNC03LjkyaDcuNzA0cS0uNzkyLTIuMzA0LS43OTItNC42MDggMC0uNDMyLjA3Mi0xLjE1Mi02Ljk4NC0xLjQ0LTYuOTg0LTMuNDU2IDAtMi4wNTIgNy41Ni0zLjU2NC42MTItMi4yMzIgMS44NTQtNC44MjR0Mi41MzgtNC4xMDRxMS4xNTItMS4zMzIgMi43MzYtMS4zMzIgMS4wOCAwIDMuMDI0IDEuMTE2dDMuMDI0IDEuMTE2IDMuMDI0LTEuMTE2IDMuMDI0LTEuMTE2cTEuNTg0IDAgMi43MzYgMS4zMzIgMS4yOTYgMS41MTIgMi41MzggNC4xMDR0MS44NTQgNC44MjRxNy41NiAxLjUxMiA3LjU2IDMuNTY0IDAgMi4wMTYtNi45ODQgMy40NTYuMjUyIDIuOTE2LS43MiA1Ljc2aDcuNzA0bC0yLjk1MiA4LjFxMi4yNjggMS4xODggMy44NyAzLjQ3NHQyLjM1OCA1LjE2NiAxLjA0NCA1LjQ1NC4yODggNS4zNDZ6XCIsXCJNT1RPUkNZQ0xFXCI6XCJNODIuODM2LTI3LjE0M3EuNDMyIDMuNzA4LS43OTIgNy4xNDZ0LTMuNTY0IDUuODg2LTUuNzA2IDMuODE2LTcuMDc0IDEuMTE2cS01Ljc5Ni0uMzk2LTEwLjA2Mi00LjV0LTQuODQyLTkuODY0cS0uNDMyLTMuOTk2Ljk5LTcuNTc4dDQuMjY2LTYuMTM4bC0yLjU1Ni0zLjg1MnEtMy40NTYgMi44OC01LjQzNiA2Ljk4NHQtMS45OCA4Ljc4NHEwIC45NzItLjY2NiAxLjY3NHQtMS42MzguNzAyaC0xMS43cS0uODI4IDUuOTA0LTUuMzY0IDkuODY0dC0xMC41ODQgMy45NnEtNi42NiAwLTExLjM5NC00LjczNHQtNC43MzQtMTEuMzk0IDQuNzM0LTExLjM5NCAxMS4zOTQtNC43MzRxMi43MzYgMCA1LjQ3Mi45NzJsLjg2NC0xLjYycS00LjQyOC0zLjk2LTEwLjk0NC0zLjk2aC0yLjMwNHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYyLjY4NC0xLjYyIDEuNjItLjY4NGg0LjYwOHEyLjgwOCAwIDUuMjIuNDg2dDQuMTk0IDEuMzg2IDIuNTc0IDEuNDIyIDEuODM2IDEuMzE0aDIyLjU3MmwtMy4wNi00LjYwOGgtNy45OTJxLTEuMDggMC0xLjc2NC0uODF0LS41MDQtMS44OXEuMTQ0LS44MjguODI4LTEuMzY4dDEuNTQ4LS41NGg5LjEwOHExLjE4OCAwIDEuOTA4IDEuMDA4bDIuNTIgMy43OCA0LjEwNC00LjEwNHEuNjg0LS42ODQgMS42NTYtLjY4NGgzLjYzNnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC02LjQ0NGw0LjE0IDYuMTkycTQuNzE2LTIuMjY4IDkuOS0xLjI5NiA1LjE0OC45MzYgOC43ODQgNC44NDJ0NC4yNDggOS4xMjZ6bS02Ni43MDggMTMuMzkycTQuMTQgMCA3LjMwOC0yLjYxdDMuOTk2LTYuNjA2aC0xMS4zMDRxLTEuMjYgMC0xLjk4LTEuMTE2LS42NDgtMS4xNTItLjAzNi0yLjI2OGw1LjI5Mi05Ljk3MnEtMS42OTItLjQ2OC0zLjI3Ni0uNDY4LTQuNzUyIDAtOC4xMzYgMy4zODR0LTMuMzg0IDguMTM2IDMuMzg0IDguMTM2IDguMTM2IDMuMzg0em01MC42ODggMHE0Ljc1MiAwIDguMTM2LTMuMzg0dDMuMzg0LTguMTM2LTMuMzg0LTguMTM2LTguMTM2LTMuMzg0cS0yLjE2IDAtNC4zNTYuODY0bDYuMjY0IDkuMzZxLjU0LjgyOC4zNiAxLjc2NHQtLjk3MiAxLjQ0cS0uNTQuMzk2LTEuMjk2LjM5Ni0xLjI2IDAtMS45MDgtMS4wNDRsLTYuMjY0LTkuMzZxLTMuMzQ4IDMuNDItMy4zNDggOC4xIDAgNC43NTIgMy4zODQgOC4xMzZ0OC4xMzYgMy4zODR6XCIsXCJTVFJFRVRfVklFV1wiOlwiTTUwLjY4OC05LjE0M3EwIDIuMjY4LTIuMjE0IDQuMDg2dC01LjkwNCAyLjkxNi04LjEgMS42NTYtOS4xMjYuNTU4LTkuMTI2LS41NTgtOC4xLTEuNjU2LTUuOTA0LTIuOTE2LTIuMjE0LTQuMDg2cTAtMS43NjQgMS4xODgtMy4xODZ0My4yNzYtMi4zOTQgNC4yNDgtMS42MDIgNC43MTYtMS4wNjJxLjkzNi0uMTggMS43MjguMzc4dC45MzYgMS40OTRxLjE4LjkzNi0uMzc4IDEuNzI4dC0xLjQ5NC45MzZxLTIuMDg4LjM2LTMuODE2Ljg0NnQtMi43NTQuOTE4LTEuNzQ2Ljg0Ni0uOTkuNzAyLS4zMDYuNDMycS4xMDguMzk2Ljk3Mi45NTR0Mi42MjggMS4xODggNC4xMDQgMS4xNyA1Ljc3OC45IDcuMjU0LjM2IDcuMjU0LS4zNiA1Ljc3OC0uOSA0LjEwNC0xLjE4OCAyLjYyOC0xLjIwNi45NzItLjk5cS0uMDM2LS4xNDQtLjMwNi0uMzk2dC0uOTktLjY4NC0xLjc0Ni0uODQ2LTIuNzU0LS45LTMuODE2LS44NDZxLS45MzYtLjE0NC0xLjQ5NC0uOTM2dC0uMzc4LTEuNzI4cS4xNDQtLjkzNi45MzYtMS40OTR0MS43MjgtLjM3OHEyLjU1Ni40MzIgNC43MTYgMS4wNjJ0NC4yNDggMS42MDIgMy4yNzYgMi4zOTQgMS4xODggMy4xODZ6bS0xMy44MjQtMzIuMjU2djEzLjgyNHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMi4zMDR2MTMuODI0cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC05LjIxNnEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0xMy44MjRoLTIuMzA0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTEzLjgyNHEwLTEuOTA4IDEuMzUtMy4yNTh0My4yNTgtMS4zNWgxMy44MjRxMS45MDggMCAzLjI1OCAxLjM1dDEuMzUgMy4yNTh6bS0zLjQ1Ni0xMy44MjRxMCAzLjM0OC0yLjM1OCA1LjcwNnQtNS43MDYgMi4zNTgtNS43MDYtMi4zNTgtMi4zNTgtNS43MDYgMi4zNTgtNS43MDYgNS43MDYtMi4zNTggNS43MDYgMi4zNTggMi4zNTggNS43MDZ6XCIsXCJIRUFSVEJFQVRcIjpcIk00Ni4wOC0yNy41NzVoMTAuOThxLS4xOC4yMTYtLjM2LjM3OHQtLjMyNC4yN2wtLjEwOC4xNDQtMjIuNDI4IDIxLjZxLS42NDguNjQ4LTEuNTg0LjY0OHQtMS41ODQtLjY0OGwtMjIuNDY0LTIxLjY3MnEtLjE4LS4wNzItLjc1Ni0uNzJoMTMuMjg0cS43OTIgMCAxLjQyMi0uNDg2dC44MS0xLjI0MmwyLjUyLTEwLjExNiA2Ljg0IDI0LjAxMnEuMjE2LjcyLjgyOCAxLjE4OHQxLjQwNC40NjhxLjc1NiAwIDEuMzY4LS40Njh0LjgyOC0xLjE4OGw1LjI1Ni0xNy40NiAyLjAxNiA0LjAzMnEuNjQ4IDEuMjYgMi4wNTIgMS4yNnptMTguNDMyLTE1LjQwOHEwIDUuMjItMy43MDggMTAuOGgtMTMuMjg0bC0zLjk5Ni03Ljk1NnEtLjI4OC0uNjEyLS45MTgtLjk3MnQtMS4zMTQtLjI4OHEtMS42Mi4xOC0yLjAxNiAxLjY1NmwtNC42NDQgMTUuNDgtNy4wNTYtMjQuNjk2cS0uMjE2LS43Mi0uODQ2LTEuMTg4dC0xLjQyMi0uNDY4LTEuNDA0LjQ4Ni0uNzkyIDEuMjQybC00LjE3NiAxNi43MDRoLTE1LjIyOHEtMy43MDgtNS41OC0zLjcwOC0xMC44IDAtNy45MiA0LjU3Mi0xMi4zODR0MTIuNjM2LTQuNDY0cTIuMjMyIDAgNC41NTQuNzc0dDQuMzIgMi4wODggMy40MzggMi40NjYgMi43MzYgMi40NDhxMS4yOTYtMS4yOTYgMi43MzYtMi40NDh0My40MzgtMi40NjYgNC4zMi0yLjA4OCA0LjU1NC0uNzc0cTguMDY0IDAgMTIuNjM2IDQuNDY0dDQuNTcyIDEyLjM4NHpcIixcIlZFTlVTXCI6XCJNNDEuNDcyLTQzLjcwM3EwIDcuOTU2LTUuMzEgMTMuODQydC0xMy4xMjIgNi43NXY5LjM2aDguMDY0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC04LjA2NHY4LjA2NHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di04LjA2NGgtOC4wNjRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg4LjA2NHYtOS4zNnEtNS40LS41NzYtOS43NzQtMy43MDh0LTYuNjk2LTguMDY0LTEuODktMTAuNTEycS4zOTYtNC44MjQgMi44OTgtOC45NjR0Ni41NTItNi43NjggOC44MzgtMy4xNjhxNi4xMi0uNjg0IDExLjQ4NCAxLjk0NHQ4LjQ5NiA3LjYzMiAzLjEzMiAxMS4wMTZ6bS0zNi44NjQgMHEwIDYuNjYgNC43MzQgMTEuMzk0dDExLjM5NCA0LjczNCAxMS4zOTQtNC43MzQgNC43MzQtMTEuMzk0LTQuNzM0LTExLjM5NC0xMS4zOTQtNC43MzQtMTEuMzk0IDQuNzM0LTQuNzM0IDExLjM5NHpcIixcIk1BUlNcIjpcIk01Mi45OTItNTkuODMxcS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MTQuOTc2cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTkuNDMybC0xMy43NTIgMTMuNzg4cTQuNTM2IDUuNjE2IDQuNTM2IDEyLjkyNCAwIDQuMjEyLTEuNjM4IDguMDQ2dC00LjQyOCA2LjYyNC02LjYyNCA0LjQyOC04LjA0NiAxLjYzOC04LjA0Ni0xLjYzOC02LjYyNC00LjQyOC00LjQyOC02LjYyNC0xLjYzOC04LjA0NiAxLjYzOC04LjA0NiA0LjQyOC02LjYyNCA2LjYyNC00LjQyOCA4LjA0Ni0xLjYzOHE3LjMwOCAwIDEyLjkyNCA0LjUzNmwxMy43NTItMTMuNzUyaC05LjM5NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDE0Ljk3NnptLTMyLjI1NiA1MC42ODhxNi42NiAwIDExLjM5NC00LjczNHQ0LjczNC0xMS4zOTQtNC43MzQtMTEuMzk0LTExLjM5NC00LjczNC0xMS4zOTQgNC43MzQtNC43MzQgMTEuMzk0IDQuNzM0IDExLjM5NCAxMS4zOTQgNC43MzR6XCIsXCJNRVJDVVJZXCI6XCJNMjkuODgtNTMuMDYzcTUuMjIgMi41OTIgOC40MDYgNy41Nzh0My4xODYgMTAuOTk4cTAgNy45NTYtNS4zMSAxMy44NDJ0LTEzLjEyMiA2Ljc1djQuNzUyaDMuNDU2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0zLjQ1NnYzLjQ1NnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0zLjQ1NmgtMy40NTZxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgzLjQ1NnYtNC43NTJxLTcuODEyLS44NjQtMTMuMTIyLTYuNzV0LTUuMzEtMTMuODQycTAtNi4wMTIgMy4xODYtMTAuOTk4dDguNDA2LTcuNTc4cS01Ljk0LTMuNDU2LTguMjA4LTkuODI4LS4yMTYtLjU3Ni4xMjYtMS4wNjJ0Ljk1NC0uNDg2aDIuNDg0cS43NTYgMCAxLjA0NC43MiAxLjU4NCAzLjgxNiA1LjA0IDYuMTU2dDcuNzA0IDIuMzQgNy43MDQtMi4zNCA1LjA0LTYuMTU2cS4yODgtLjcyIDEuMzMyLS43MmgyLjE5NnEuNjEyIDAgLjk1NC40ODZ0LjEyNiAxLjA2MnEtMi4yNjggNi4zNzItOC4yMDggOS44Mjh6bS05LjE0NCAzNC43MDRxNi42NiAwIDExLjM5NC00LjczNHQ0LjczNC0xMS4zOTQtNC43MzQtMTEuMzk0LTExLjM5NC00LjczNC0xMS4zOTQgNC43MzQtNC43MzQgMTEuMzk0IDQuNzM0IDExLjM5NCAxMS4zOTQgNC43MzR6XCIsXCJUUkFOU0dFTkRFUlwiOlwiTTM2Ljg2NC02My4yODdxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgxMC4zNjhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnYxMC4zNjhxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNC44MjRsLTkuMTQ0IDkuMThxNC41MzYgNS42ODggNC41MzYgMTIuOTI0IDAgNy45NTYtNS4zMSAxMy44NDJ0LTEzLjEyMiA2Ljc1djQuNzUyaDMuNDU2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0zLjQ1NnYzLjQ1NnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0zLjQ1NmgtMy40NTZxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgzLjQ1NnYtNC43NTJxLTUuMzY0LS41NzYtOS43MzgtMy43MDh0LTYuNzE0LTguMDQ2LTEuOTA4LTEwLjQ5NHEuNTc2LTcuMzQ0IDUuNzYtMTIuNzI2dDEyLjQ5Mi02LjIxcTQuMjQ4LS41MDQgOC4yMDguNjg0dDcuMTI4IDMuNzA4bDkuMTgtOS4xNDRoLTQuODI0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0em0tMTYuMTI4IDQ0LjkyOHE2LjY2IDAgMTEuMzk0LTQuNzM0dDQuNzM0LTExLjM5NC00LjczNC0xMS4zOTQtMTEuMzk0LTQuNzM0LTExLjM5NCA0LjczNC00LjczNCAxMS4zOTQgNC43MzQgMTEuMzk0IDExLjM5NCA0LjczNHpcIixcIlRSQU5TR0VOREVSX0FMVFwiOlwiTTQ2LjA4LTYzLjI4N3EwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDEwLjM2OHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjEwLjM2OHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di00LjgyNGwtOS4xNDQgOS4xOHE0LjUzNiA1LjY4OCA0LjUzNiAxMi45MjQgMCA3Ljk1Ni01LjMxIDEzLjg0MnQtMTMuMTIyIDYuNzV2NC43NTJoMy40NTZxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djIuMzA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTMuNDU2djMuNDU2cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTMuNDU2aC0zLjQ1NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDMuNDU2di00Ljc1MnEtNy44MTItLjg2NC0xMy4xMjItNi43NXQtNS4zMS0xMy44NDJxMC03LjIzNiA0LjUzNi0xMi45MjRsLTEuODcyLTEuOTA4LTMuNjM2IDMuOTk2cS0uMzI0LjM2LS43OTIuMzc4dC0uODI4LS4yN2wtMS43MjgtMS41ODRxLS4zNi0uMjg4LS4zNzgtLjc3NHQuMzA2LS44NDZsMy43OC00LjE0LTMuOTk2LTQuMDMydjQuODI0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTEwLjM2OHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDEwLjM2OHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNC43ODhsMy44MTYgMy44NTIgMy4wOTYtMy4zODRxLjMyNC0uMzYuNzkyLS4zNzh0LjgyOC4yN2wxLjcyOCAxLjU4NHEuMzYuMjg4LjM3OC43NzR0LS4zMDYuODQ2bC0zLjI0IDMuNTY0IDIuMDUyIDIuMDE2cTUuNjg4LTQuNTM2IDEyLjkyNC00LjUzNnQxMi45MjQgNC41MzZsOS4xOC05LjE0NGgtNC44MjRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDR6bS0xNi4xMjggNDQuOTI4cTYuNjYgMCAxMS4zOTQtNC43MzR0NC43MzQtMTEuMzk0LTQuNzM0LTExLjM5NC0xMS4zOTQtNC43MzQtMTEuMzk0IDQuNzM0LTQuNzM0IDExLjM5NCA0LjczNCAxMS4zOTQgMTEuMzk0IDQuNzM0elwiLFwiVkVOVVNfRE9VQkxFXCI6XCJNNjQuNDQtNDUuMzk1cS40MzIgNS41OC0xLjg5IDEwLjUxMnQtNi42OTYgOC4wNjQtOS43NzQgMy43MDh2OS4zNmg4LjA2NHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtOC4wNjR2OC4wNjRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtOC4wNjRoLTE4LjQzMnY4LjA2NHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di04LjA2NGgtOC4wNjRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg4LjA2NHYtOS4zNnEtNS40LS41NzYtOS43NzQtMy43MDh0LTYuNjk2LTguMDY0LTEuODktMTAuNTEycS42MTItNy40MTYgNS45MjItMTIuODM0dDEyLjY5LTYuMTAycTcuNDE2LS43NTYgMTMuNTcyIDMuMzg0IDYuMTU2LTQuMTQgMTMuNTcyLTMuMzg0IDcuMzguNjg0IDEyLjY5IDYuMTAydDUuOTIyIDEyLjgzNHptLTMyLjE4NCAxMi45NnE0LjYwOC00LjcxNiA0LjYwOC0xMS4yNjh0LTQuNjA4LTExLjI2OHEtNC42MDggNC43MTYtNC42MDggMTEuMjY4dDQuNjA4IDExLjI2OHptLTExLjUyIDQuODZxNC4xNCAwIDcuODQ4LTIuMDUyLTUuNTQ0LTUuOTQtNS41NDQtMTQuMDc2IDAtOC4wNjQgNS41NDQtMTQuMDc2LTMuNzA4LTIuMDUyLTcuODQ4LTIuMDUyLTYuNjYgMC0xMS4zOTQgNC43MzR0LTQuNzM0IDExLjM5NCA0LjczNCAxMS4zOTQgMTEuMzk0IDQuNzM0em0yMC43MzYgMTMuODI0di05LjM2cS00LjkzMi0uNTQtOS4yMTYtMy4zODQtNC4yODQgMi44NDQtOS4yMTYgMy4zODR2OS4zNmgxOC40MzJ6bTIuMzA0LTEzLjgyNHE2LjY2IDAgMTEuMzk0LTQuNzM0dDQuNzM0LTExLjM5NC00LjczNC0xMS4zOTQtMTEuMzk0LTQuNzM0cS00LjE0IDAtNy44NDggMi4wNTIgNS41NDQgNi4wMTIgNS41NDQgMTQuMDc2IDAgOC4xMzYtNS41NDQgMTQuMDc2IDMuNzA4IDIuMDUyIDcuODQ4IDIuMDUyelwiLFwiTUFSU19ET1VCTEVcIjpcIk01NS4yOTYtNDkuNDYzcTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTAuMzY4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MTAuMzY4cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTQuODI0bC05LjE0NCA5LjE4cTIuNzM2IDMuNDIgMy44NyA3LjcwNHQuMzQyIDguODkycS0xLjExNiA2LjU1Mi01Ljk3NiAxMS4yMzJ0LTExLjQ0OCA1LjYxNnEtNy41NiAxLjA0NC0xMy44NDItMi44OHQtOC42OTQtMTAuOHEtNC4yMTItLjIxNi03Ljk1Ni0yLjA3dC02LjM5LTQuNzg4LTQuMDg2LTYuOTMtMS4xNTItOC4yOHEuMzI0LTQuODYgMi44MDgtOS4wNzJ0Ni41NTItNi44OTQgOC45MjgtMy4yMjJxNC4yNDgtLjUwNCA4LjE5LjY4NHQ3LjE0NiAzLjcwOGw5LjE4LTkuMTQ0aC00LjgyNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDEwLjM2OHEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjEwLjM2OHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di00LjgyNGwtOS4xNDQgOS4xOHEyLjEyNCAyLjY2NCAzLjM0OCA2LjA4NCA2LjU1Mi4zMjQgMTEuODA4IDQuNDY0bDkuMTgtOS4xNDRoLTQuODI0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0em0tMTguNDMyIDE0Ljk3NnEwLS43Mi0uMTQ0LTIuMDg4LTUuODMyLjktOS43NTYgNS40dC0zLjkyNCAxMC41MTJxMCAuNzIuMTQ0IDIuMDg4IDUuODMyLS45IDkuNzU2LTUuNHQzLjkyNC0xMC41MTJ6bS0zMi4yNTYgMHEwIDYuMDQ4IDMuOTk2IDEwLjU4NHQ5LjkzNiA1LjM2NHEtLjEwOC0xLjA0NC0uMTA4LTIuMTI0IDAtNy41NiA0Ljg2LTEzLjMwMnQxMi4xNjgtNy4wNzRxLTEuOTA4LTQuMzItNS44ODYtNi45NDh0LTguODM4LTIuNjI4cS02LjY2IDAtMTEuMzk0IDQuNzM0dC00LjczNCAxMS4zOTR6bTM0LjU2IDI5Ljk1MnE2LjY2IDAgMTEuMzk0LTQuNzM0dDQuNzM0LTExLjM5NHEwLTYuMDQ4LTMuOTk2LTEwLjU4NHQtOS45MzYtNS4zNjRxLjEwOCAxLjA0NC4xMDggMi4xMjQgMCA3LjU2LTQuODYgMTMuMzAydC0xMi4xNjggNy4wNzRxMS45MDggNC4zMiA1Ljg4NiA2Ljk0OHQ4LjgzOCAyLjYyOHpcIixcIlZFTlVTX01BUlNcIjpcIk01OS45MDQtNjMuMjg3cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTAuMzY4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MTAuMzY4cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTQuODI0bC05LjE0NCA5LjE4cTIuNzM2IDMuNDIgMy44NyA3LjcwNHQuMzQyIDguODkycS0xLjE1MiA2LjQ4LTUuOTIyIDExLjE2dC0xMS4yODYgNS42NTJxLTguMDI4IDEuMjI0LTE0LjcyNC0zLjI0LTQuMjEyIDIuODA4LTkuMjE2IDMuMzQ4djQuNzUyaDMuNDU2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0zLjQ1NnYzLjQ1NnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0zLjQ1NmgtMy40NTZxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgzLjQ1NnYtNC43NTJxLTUuNTgtLjYxMi0xMC4wNjItMy45NDJ0LTYuNzMyLTguNTUtMS40MjItMTEuMDUycS45LTYuNzMyIDUuNzQyLTExLjYxdDExLjUzOC01LjkyMnE4LjA2NC0xLjIyNCAxNC43NiAzLjI0IDUuMjU2LTMuNDkyIDExLjUyLTMuNDkyIDcuMjM2IDAgMTIuOTI0IDQuNTM2bDkuMTgtOS4xNDRoLTQuODI0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0em0tMjcuNjQ4IDQwLjA2OHE0LjYwOC00LjcxNiA0LjYwOC0xMS4yNjh0LTQuNjA4LTExLjI2OHEtNC42MDggNC43MTYtNC42MDggMTEuMjY4dDQuNjA4IDExLjI2OHptLTI3LjY0OC0xMS4yNjhxMCA2LjY2IDQuNzM0IDExLjM5NHQxMS4zOTQgNC43MzRxNC4yMTIgMCA3Ljg0OC0yLjA1Mi01LjU0NC02LjAxMi01LjU0NC0xNC4wNzZ0NS41NDQtMTQuMDc2cS0zLjYzNi0yLjA1Mi03Ljg0OC0yLjA1Mi02LjY2IDAtMTEuMzk0IDQuNzM0dC00LjczNCAxMS4zOTR6bTM5LjE2OCAxNi4xMjhxNi42NiAwIDExLjM5NC00LjczNHQ0LjczNC0xMS4zOTQtNC43MzQtMTEuMzk0LTExLjM5NC00LjczNHEtNC4yMTIgMC03Ljg0OCAyLjA1MiA1LjU0NCA2LjAxMiA1LjU0NCAxNC4wNzZ0LTUuNTQ0IDE0LjA3NnEzLjYzNiAyLjA1MiA3Ljg0OCAyLjA1MnpcIixcIk1BUlNfU1RST0tFXCI6XCJNNTIuOTkyLTU5LjgzMXEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYydjE0Ljk3NnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di05LjQzMmwtNy42NjggNy43MDQgNS4wNCA1LjA0cS4zMjQuMzYuMzI0LjgyOHQtLjMyNC43OTJsLTEuNjU2IDEuNjU2cS0uMzI0LjMyNC0uNzkyLjMyNHQtLjgyOC0uMzI0bC01LjA0LTUuMDc2LTIuODA4IDIuODQ0cTQuNTM2IDUuNjE2IDQuNTM2IDEyLjkyNCAwIDQuMjEyLTEuNjM4IDguMDQ2dC00LjQyOCA2LjYyNC02LjYyNCA0LjQyOC04LjA0NiAxLjYzOC04LjA0Ni0xLjYzOC02LjYyNC00LjQyOC00LjQyOC02LjYyNC0xLjYzOC04LjA0NiAxLjYzOC04LjA0NiA0LjQyOC02LjYyNCA2LjYyNC00LjQyOCA4LjA0Ni0xLjYzOHE3LjMwOCAwIDEyLjkyNCA0LjUzNmwyLjgwOC0yLjgwOC02LjE5Mi02LjE5MnEtLjMyNC0uMzYtLjMyNC0uODI4dC4zMjQtLjc5MmwxLjY1Ni0xLjY1NnEuMzI0LS4zMjQuNzkyLS4zMjR0LjgyOC4zMjRsNi4xOTIgNi4xOTIgNy42NjgtNy42NjhoLTkuMzk2cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTQuOTc2em0tMzIuMjU2IDUwLjY4OHE2LjY2IDAgMTEuMzk0LTQuNzM0dDQuNzM0LTExLjM5NC00LjczNC0xMS4zOTQtMTEuMzk0LTQuNzM0LTExLjM5NCA0LjczNC00LjczNCAxMS4zOTQgNC43MzQgMTEuMzk0IDExLjM5NCA0LjczNHpcIixcIk1BUlNfU1RST0tFX1ZcIjpcIk0yMy4wNC00MS4yNTVxNy44MTIuODY0IDEzLjEyMiA2Ljc1dDUuMzEgMTMuODQycTAgNi4wMTItMy4xMzIgMTEuMDE2dC04LjQ5NiA3LjYzMi0xMS40ODQgMS45NDRxLTQuNzg4LS41NC04LjgzOC0zLjE2OHQtNi41NTItNi43NjgtMi44OTgtOC45NjRxLS40MzItNS41OCAxLjg5LTEwLjUxMnQ2LjY5Ni04LjA2NCA5Ljc3NC0zLjcwOHYtNC43NTJoLTUuNzZxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg1Ljc2di01Ljk0bC0zLjMxMiAzLjMxMnEtLjM2LjMyNC0uODI4LjMyNHQtLjc5Mi0uMzI0bC0xLjY1Ni0xLjY1NnEtLjMyNC0uMzI0LS4zMjQtLjc5MnQuMzI0LS44MjhsNy4yNzItNy4yMzZxLjY4NC0uNjg0IDEuNjItLjY4NHQxLjYyLjY4NGw3LjI3MiA3LjIzNnEuMzI0LjM2LjMyNC44Mjh0LS4zMjQuNzkybC0xLjY1NiAxLjY1NnEtLjMyNC4zMjQtLjc5Mi4zMjR0LS44MjgtLjMyNGwtMy4zMTItMy4zMTJ2NS45NGg1Ljc2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC01Ljc2djQuNzUyem0tMi4zMDQgMzYuNzJxNi42NiAwIDExLjM5NC00LjczNHQ0LjczNC0xMS4zOTQtNC43MzQtMTEuMzk0LTExLjM5NC00LjczNC0xMS4zOTQgNC43MzQtNC43MzQgMTEuMzk0IDQuNzM0IDExLjM5NCAxMS4zOTQgNC43MzR6XCIsXCJNQVJTX1NUUk9LRV9IXCI6XCJNNjguNDM2LTMxLjQ5OXEuNjg0LjY4NC42ODQgMS42MnQtLjY4NCAxLjYybC0xMC41ODQgMTAuNTg0cS0uMzI0LjM2LS44MS4zNnQtLjgxLS4zNmwtMS42Mi0xLjYycS0uMzYtLjMyNC0uMzYtLjgxdC4zNi0uODFsNi42Ni02LjY2aC0xMC41ODR2OC4wNjRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtOC4wNjRoLTQuNzUycS0uODY0IDcuODEyLTYuNzUgMTMuMTIydC0xMy44NDIgNS4zMXEtNi4wMTIgMC0xMS4wMTYtMy4xMzJ0LTcuNjMyLTguNDk2LTEuOTQ0LTExLjQ4NHEuNTQtNC43ODggMy4xNjgtOC44Mzh0Ni43NjgtNi41NTIgOC45NjQtMi44OThxNS41OC0uNDMyIDEwLjUxMiAxLjg5dDguMDY0IDYuNjk2IDMuNzA4IDkuNzc0aDQuNzUydi04LjA2NHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIuMzA0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY4LjA2NGgxMC41ODRsLTYuNjYtNi42NnEtLjM2LS4zMjQtLjM2LS44MXQuMzYtLjgxbDEuNjItMS42MnEuMzI0LS4zNi44MS0uMzZ0LjgxLjM2em0tNDcuNyAxNy43NDhxNi42NiAwIDExLjM5NC00LjczNHQ0LjczNC0xMS4zOTQtNC43MzQtMTEuMzk0LTExLjM5NC00LjczNC0xMS4zOTQgNC43MzQtNC43MzQgMTEuMzk0IDQuNzM0IDExLjM5NCAxMS4zOTQgNC43MzR6XCIsXCJORVVURVJcIjpcIk00MS40NzItNDMuNzAzcTAgNy45NTYtNS4zMSAxMy44NDJ0LTEzLjEyMiA2Ljc1djIyLjAzMnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0yLjMwNHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yMi4wMzJxLTcuODEyLS44NjQtMTMuMTIyLTYuNzV0LTUuMzEtMTMuODQycTAtNC4yMTIgMS42MzgtOC4wNDZ0NC40MjgtNi42MjQgNi42MjQtNC40MjggOC4wNDYtMS42MzggOC4wNDYgMS42MzggNi42MjQgNC40MjggNC40MjggNi42MjQgMS42MzggOC4wNDZ6bS0yMC43MzYgMTYuMTI4cTYuNjYgMCAxMS4zOTQtNC43MzR0NC43MzQtMTEuMzk0LTQuNzM0LTExLjM5NC0xMS4zOTQtNC43MzQtMTEuMzk0IDQuNzM0LTQuNzM0IDExLjM5NCA0LjczNCAxMS4zOTQgMTEuMzk0IDQuNzM0elwiLFwiR0VOREVSTEVTU1wiOlwiTTM2Ljg2NC0yOS44NzlxMC02LjY2LTQuNzM0LTExLjM5NHQtMTEuMzk0LTQuNzM0LTExLjM5NCA0LjczNC00LjczNCAxMS4zOTQgNC43MzQgMTEuMzk0IDExLjM5NCA0LjczNCAxMS4zOTQtNC43MzQgNC43MzQtMTEuMzk0em00LjYwOCAwcTAgNC4yMTItMS42MzggOC4wNDZ0LTQuNDI4IDYuNjI0LTYuNjI0IDQuNDI4LTguMDQ2IDEuNjM4LTguMDQ2LTEuNjM4LTYuNjI0LTQuNDI4LTQuNDI4LTYuNjI0LTEuNjM4LTguMDQ2IDEuNjM4LTguMDQ2IDQuNDI4LTYuNjI0IDYuNjI0LTQuNDI4IDguMDQ2LTEuNjM4IDguMDQ2IDEuNjM4IDYuNjI0IDQuNDI4IDQuNDI4IDYuNjI0IDEuNjM4IDguMDQ2elwiLFwiRkFDRUJPT0tfT0ZGSUNJQUxcIjpcIk01Mi4yMzYtNTkuODMxcTEuMjYgMCAyLjE2Ljl0LjkgMi4xNnY0OS4xNzZxMCAxLjI2LS45IDIuMTZ0LTIuMTYuOWgtMTQuMDc2di0yMS40Mmg3LjE2NGwxLjA4LTguMzUyaC04LjI0NHYtNS4zMjhxMC0yLjAxNi44NDYtMy4wMjR0My4yOTQtMS4wMDhsNC4zOTItLjAzNnYtNy40NTJxLTIuMjY4LS4zMjQtNi40MDgtLjMyNC00Ljg5NiAwLTcuODMgMi44OHQtMi45MzQgOC4xMzZ2Ni4xNTZoLTcuMnY4LjM1Mmg3LjJ2MjEuNDJoLTI2LjQ2cS0xLjI2IDAtMi4xNi0uOXQtLjktMi4xNnYtNDkuMTc2cTAtMS4yNi45LTIuMTZ0Mi4xNi0uOWg0OS4xNzZ6XCIsXCJQSU5URVJFU1RfUFwiOlwiTTAtNDIuOTQ3cTAtMy44ODggMS4zNS03LjMyNnQzLjcyNi01Ljk5NCA1LjQ3Mi00LjQyOCA2LjY2LTIuODA4IDcuMjcyLS45MzZxNS42ODggMCAxMC41ODQgMi4zOTR0Ny45NTYgNi45NjYgMy4wNiAxMC4zMzJxMCAzLjQ1Ni0uNjg0IDYuNzY4dC0yLjE2IDYuMzcyLTMuNiA1LjM4Mi01LjIyIDMuNzA4LTYuODA0IDEuMzg2cS0yLjQ0OCAwLTQuODYtMS4xNTJ0LTMuNDU2LTMuMTY4cS0uMzYgMS40MDQtMS4wMDggNC4wNXQtLjg0NiAzLjQyLS43MzggMi41NTYtLjkzNiAyLjU1Ni0xLjE1MiAyLjI1LTEuNjU2IDIuNzktMi4yMzIgMy4xMTRsLS41MDQuMTgtLjMyNC0uMzZxLS41NC01LjY1Mi0uNTQtNi43NjggMC0zLjMxMi43NzQtNy40MzR0Mi4zOTQtMTAuMzUgMS44NzItNy4zMDhxLTEuMTUyLTIuMzQtMS4xNTItNi4wODQgMC0yLjk4OCAxLjg3Mi01LjYxNnQ0Ljc1Mi0yLjYyOHEyLjE5NiAwIDMuNDIgMS40NTh0MS4yMjQgMy42OXEwIDIuMzc2LTEuNTg0IDYuODc2dC0xLjU4NCA2LjczMnEwIDIuMjY4IDEuNjIgMy43NjJ0My45MjQgMS40OTRxMS45OCAwIDMuNjcyLS45dDIuODI2LTIuNDQ4IDIuMDE2LTMuNDIgMS4zNjgtMy45NzguNzItMy45OTYuMjM0LTMuNTgycTAtNi4yMjgtMy45NDItOS43MDJ0LTEwLjI3OC0zLjQ3NHEtNy4yIDAtMTIuMDI0IDQuNjYydC00LjgyNCAxMS44MjZxMCAxLjU4NC40NSAzLjA2dC45NzIgMi4zNC45NzIgMS42MzguNDUgMS4wOThxMCAxLjAwOC0uNTQgMi42Mjh0LTEuMzMyIDEuNjJxLS4wNzIgMC0uNjEyLS4xMDgtMS44MzYtLjU0LTMuMjU4LTIuMDE2dC0yLjE5Ni0zLjQwMi0xLjE3LTMuODg4LS4zOTYtMy44MzR6XCIsXCJXSEFUU0FQUFwiOlwiTTM1LjQ2LTI5LjM3NXEuNDY4IDAgMy41MSAxLjU4NHQzLjIyMiAxLjkwOHEuMDcyLjE4LjA3Mi41NCAwIDEuMTg4LS42MTIgMi43MzYtLjU3NiAxLjQwNC0yLjU1NiAyLjM1OHQtMy42NzIuOTU0cS0yLjA1MiAwLTYuODQtMi4yMzItMy41MjgtMS42Mi02LjEyLTQuMjQ4dC01LjMyOC02LjY2cS0yLjU5Mi0zLjg1Mi0yLjU1Ni02Ljk4NHYtLjI4OHEuMTA4LTMuMjc2IDIuNjY0LTUuNjg4Ljg2NC0uNzkyIDEuODcyLS43OTIuMjE2IDAgLjY0OC4wNTR0LjY4NC4wNTRxLjY4NCAwIC45NTQuMjM0dC41NTguOTlxLjI4OC43MiAxLjE4OCAzLjE2OHQuOSAyLjdxMCAuNzU2LTEuMjQyIDIuMDd0LTEuMjQyIDEuNjc0cTAgLjI1Mi4xOC41NCAxLjIyNCAyLjYyOCAzLjY3MiA0LjkzMiAyLjAxNiAxLjkwOCA1LjQzNiAzLjYzNi40MzIuMjUyLjc5Mi4yNTIuNTQgMCAxLjk0NC0xLjc0NnQxLjg3Mi0xLjc0NnptLTcuMzA4IDE5LjA4cTQuNTcyIDAgOC43NjYtMS44dDcuMjE4LTQuODI0IDQuODI0LTcuMjE4IDEuOC04Ljc2Ni0xLjgtOC43NjYtNC44MjQtNy4yMTgtNy4yMTgtNC44MjQtOC43NjYtMS44LTguNzY2IDEuOC03LjIxOCA0LjgyNC00LjgyNCA3LjIxOC0xLjggOC43NjZxMCA3LjMwOCA0LjMyIDEzLjI0OGwtMi44NDQgOC4zODggOC43MTItMi43NzJxNS42ODggMy43NDQgMTIuNDIgMy43NDR6bTAtNDkuNzUycTUuNTA4IDAgMTAuNTMgMi4xNnQ4LjY1OCA1Ljc5NiA1Ljc5NiA4LjY1OCAyLjE2IDEwLjUzLTIuMTYgMTAuNTMtNS43OTYgOC42NTgtOC42NTggNS43OTYtMTAuNTMgMi4xNnEtNy4wMiAwLTEzLjE0LTMuMzg0bC0xNS4wMTIgNC44MjQgNC44OTYtMTQuNThxLTMuODg4LTYuNDA4LTMuODg4LTE0LjAwNCAwLTUuNTA4IDIuMTYtMTAuNTN0NS43OTYtOC42NTggOC42NTgtNS43OTYgMTAuNTMtMi4xNnpcIixcIlNFUlZFUlwiOlwiTTQuNjA4LTEzLjc1MWgzNi44NjR2LTQuNjA4aC0zNi44NjR2NC42MDh6bTAtMTguNDMyaDM2Ljg2NHYtNC42MDhoLTM2Ljg2NHY0LjYwOHptNTYuNDQ4IDE2LjEyOHEwLTEuNDQtMS4wMDgtMi40NDh0LTIuNDQ4LTEuMDA4LTIuNDQ4IDEuMDA4LTEuMDA4IDIuNDQ4IDEuMDA4IDIuNDQ4IDIuNDQ4IDEuMDA4IDIuNDQ4LTEuMDA4IDEuMDA4LTIuNDQ4em0tNTYuNDQ4LTM0LjU2aDM2Ljg2NHYtNC42MDhoLTM2Ljg2NHY0LjYwOHptNTYuNDQ4IDE2LjEyOHEwLTEuNDQtMS4wMDgtMi40NDh0LTIuNDQ4LTEuMDA4LTIuNDQ4IDEuMDA4LTEuMDA4IDIuNDQ4IDEuMDA4IDIuNDQ4IDIuNDQ4IDEuMDA4IDIuNDQ4LTEuMDA4IDEuMDA4LTIuNDQ4em0wLTE4LjQzMnEwLTEuNDQtMS4wMDgtMi40NDh0LTIuNDQ4LTEuMDA4LTIuNDQ4IDEuMDA4LTEuMDA4IDIuNDQ4IDEuMDA4IDIuNDQ4IDIuNDQ4IDEuMDA4IDIuNDQ4LTEuMDA4IDEuMDA4LTIuNDQ4em0zLjQ1NiAyOS45NTJ2MTMuODI0aC02NC41MTJ2LTEzLjgyNGg2NC41MTJ6bTAtMTguNDMydjEzLjgyNGgtNjQuNTEydi0xMy44MjRoNjQuNTEyem0wLTE4LjQzMnYxMy44MjRoLTY0LjUxMnYtMTMuODI0aDY0LjUxMnpcIixcIlVTRVJfUExVU1wiOlwiTTI1LjM0NC0zMi4xODNxLTUuNzI0IDAtOS43NzQtNC4wNXQtNC4wNS05Ljc3NCA0LjA1LTkuNzc0IDkuNzc0LTQuMDUgOS43NzQgNC4wNSA0LjA1IDkuNzc0LTQuMDUgOS43NzQtOS43NzQgNC4wNXptMzQuNTYgNC42MDhoMTIuNjcycS40NjggMCAuODEuMzQydC4zNDIuODF2Ni45MTJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTEyLjY3MnYxMi42NzJxMCAuNDY4LS4zNDIuODF0LS44MS4zNDJoLTYuOTEycS0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi0xMi42NzJoLTEyLjY3MnEtLjQ2OCAwLS44MS0uMzQydC0uMzQyLS44MXYtNi45MTJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoMTIuNjcydi0xMi42NzJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJoNi45MTJxLjQ2OCAwIC44MS4zNDJ0LjM0Mi44MXYxMi42NzJ6bS0yNi40OTYgOC4wNjRxMCAxLjg3MiAxLjM2OCAzLjI0dDMuMjQgMS4zNjhoOS4yMTZ2OC41NjhxLTIuNDQ4IDEuOC02LjE1NiAxLjhoLTMxLjQ2NHEtNC4zNTYgMC02Ljk4NC0yLjQ4NHQtMi42MjgtNi44NHEwLTEuOTA4LjEyNi0zLjcyNnQuNTA0LTMuOTI0Ljk1NC0zLjkwNiAxLjU0OC0zLjUxIDIuMjMyLTIuOTE2IDMuMDc4LTEuOTI2IDQuMDE0LS43MnEuNjg0IDAgMS40MDQuNjEyIDIuODQ0IDIuMTk2IDUuNTYyIDMuMjk0dDUuOTIyIDEuMDk4IDUuOTIyLTEuMDk4IDUuNTYyLTMuMjk0cS43Mi0uNjEyIDEuNDA0LS42MTIgNC43NTIgMCA3LjgxMiAzLjQ1NmgtOC4wMjhxLTEuODcyIDAtMy4yNCAxLjM2OHQtMS4zNjggMy4yNHY2LjkxMnpcIixcIlVTRVJfVElNRVNcIjpcIk0yNS4zNDQtMzIuMTgzcS01LjcyNCAwLTkuNzc0LTQuMDV0LTQuMDUtOS43NzQgNC4wNS05Ljc3NCA5Ljc3NC00LjA1IDkuNzc0IDQuMDUgNC4wNSA5Ljc3NC00LjA1IDkuNzc0LTkuNzc0IDQuMDV6bTM4Ljc3MiAxMS41Mmw4Ljk2NCA4Ljk2NHEuMzI0LjMyNC4zMjQuODI4IDAgLjQ2OC0uMzI0Ljc5MmwtNC44OTYgNC44OTZxLS4zMjQuMzI0LS43OTIuMzI0LS41MDQgMC0uODI4LS4zMjRsLTguOTY0LTguOTY0LTguOTY0IDguOTY0cS0uMzI0LjMyNC0uODI4LjMyNC0uNDY4IDAtLjc5Mi0uMzI0bC00Ljg5Ni00Ljg5NnEtLjMyNC0uMzI0LS4zMjQtLjc5MiAwLS41MDQuMzI0LS44MjhsOC45NjQtOC45NjQtOC45NjQtOC45NjRxLS4zMjQtLjMyNC0uMzI0LS44MjggMC0uNDY4LjMyNC0uNzkybDQuODk2LTQuODk2cS4zMjQtLjMyNC43OTItLjMyNC41MDQgMCAuODI4LjMyNGw4Ljk2NCA4Ljk2NCA4Ljk2NC04Ljk2NHEuMzI0LS4zMjQuODI4LS4zMjQuNDY4IDAgLjc5Mi4zMjRsNC44OTYgNC44OTZxLjMyNC4zMjQuMzI0Ljc5MiAwIC41MDQtLjMyNC44Mjh6bS0xNy45MjggMGwtNi41MTYgNi41MTZxLTEuMzMyIDEuMzMyLTEuMzMyIDMuMjc2IDAgMS45MDggMS4zMzIgMy4yNGwyLjk4OCAyLjk4OHEtLjc1Ni4xMDgtMS41ODQuMTA4aC0zMS40NjRxLTQuMzU2IDAtNi45ODQtMi40ODR0LTIuNjI4LTYuODRxMC0xLjkwOC4xMjYtMy43MjZ0LjUwNC0zLjkyNC45NTQtMy45MDYgMS41NDgtMy41MSAyLjIzMi0yLjkxNiAzLjA3OC0xLjkyNiA0LjAxNC0uNzJxLjY4NCAwIDEuNDA0LjYxMiA1LjU0NCA0LjM5MiAxMS40ODQgNC4zOTJ0MTEuNDg0LTQuMzkycS43Mi0uNjEyIDEuNDA0LS42MTIgMS4wMDggMCAyLjA1Mi4yMTYtMS4wMDguOTcyLTEuNDc2IDEuOHQtLjQ2OCAyLjAxNnEwIDEuOTQ0IDEuMzMyIDMuMjc2elwiLFwiSE9URUxcIjpcIk05LjIxNi0yNy41NzVoNjIuMjA4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MTYuMTI4aC05LjIxNnYtOS4yMTZoLTU1LjI5NnY5LjIxNmgtOS4yMTZ2LTQzLjc3NnEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQuNjA4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MjUuMzQ0em0yMC43MzYtMTEuNTJxMC0zLjgxNi0yLjctNi41MTZ0LTYuNTE2LTIuNy02LjUxNiAyLjctMi43IDYuNTE2IDIuNyA2LjUxNiA2LjUxNiAyLjcgNi41MTYtMi43IDIuNy02LjUxNnptNDMuNzc2IDkuMjE2di0yLjMwNHEwLTUuNzI0LTQuMDUtOS43NzR0LTkuNzc0LTQuMDVoLTI1LjM0NHEtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjJ2MTMuODI0aDQxLjQ3MnpcIixcIlZJQUNPSU5cIjpcIk01NS4yOTYtNjQuNDM5bC02LjkxMiAxNi4xMjhoNi45MTJ2Ni45MTJoLTkuODY0bC0xLjk4IDQuNjA4aDExLjg0NHY2LjkxMmgtMTQuNzk2bC0xMi44NTIgMjkuOTUyLTEyLjg1Mi0yOS45NTJoLTE0Ljc5NnYtNi45MTJoMTEuODQ0bC0xLjk4LTQuNjA4aC05Ljg2NHYtNi45MTJoNi45MTJsLTYuOTEyLTE2LjEyOGg5LjIxNmwxMS42MjggMjcuNjQ4aDEzLjYwOGwxMS42MjgtMjcuNjQ4aDkuMjE2em0tMjcuNjQ4IDQzLjc3NmwzLjg4OC05LjIxNmgtNy43NzZ6XCIsXCJUUkFJTlwiOlwiTTM5LjE2OC02NC40MzlxNi42NiAwIDExLjM5NCAzLjM2NnQ0LjczNCA4LjE1NHYzMi4yNTZxMCA0LjY4LTQuNTE4IDcuOTkydC0xMC45OTggMy40OTJsNy42NjggNy4yNzJxLjU3Ni41NC4yODggMS4yNnQtMS4wOC43MmgtMzguMDE2cS0uNzkyIDAtMS4wOC0uNzJ0LjI4OC0xLjI2bDcuNjY4LTcuMjcycS02LjQ4LS4xOC0xMC45OTgtMy40OTJ0LTQuNTE4LTcuOTkydi0zMi4yNTZxMC00Ljc4OCA0LjczNC04LjE1NHQxMS4zOTQtMy4zNjZoMjMuMDR6bS0xMS41MiA0OC4zODRxMi44OCAwIDQuODk2LTIuMDE2dDIuMDE2LTQuODk2LTIuMDE2LTQuODk2LTQuODk2LTIuMDE2LTQuODk2IDIuMDE2LTIuMDE2IDQuODk2IDIuMDE2IDQuODk2IDQuODk2IDIuMDE2em0yMC43MzYtMjAuNzM2di0xOC40MzJoLTQxLjQ3MnYxOC40MzJoNDEuNDcyelwiLFwiU1VCV0FZXCI6XCJNMzkuMTY4LTY0LjQzOXE2LjY2IDAgMTEuMzk0IDMuMzY2dDQuNzM0IDguMTU0djMyLjI1NnEwIDQuNjgtNC41MTggNy45OTJ0LTEwLjk5OCAzLjQ5Mmw3LjY2OCA3LjI3MnEuNTc2LjU0LjI4OCAxLjI2dC0xLjA4LjcyaC0zOC4wMTZxLS43OTIgMC0xLjA4LS43MnQuMjg4LTEuMjZsNy42NjgtNy4yNzJxLTYuNDgtLjE4LTEwLjk5OC0zLjQ5MnQtNC41MTgtNy45OTJ2LTMyLjI1NnEwLTQuNzg4IDQuNzM0LTguMTU0dDExLjM5NC0zLjM2NmgyMy4wNHptLTI4LjggNDcuMjMycTIuMzc2IDAgNC4wNjgtMS42OTJ0MS42OTItNC4wNjgtMS42OTItNC4wNjgtNC4wNjgtMS42OTItNC4wNjggMS42OTItMS42OTIgNC4wNjggMS42OTIgNC4wNjggNC4wNjggMS42OTJ6bTE0Ljk3Ni0xOS41ODR2LTE4LjQzMmgtMTkuNTg0djE4LjQzMmgxOS41ODR6bTE5LjU4NCAxOS41ODRxMi4zNzYgMCA0LjA2OC0xLjY5MnQxLjY5Mi00LjA2OC0xLjY5Mi00LjA2OC00LjA2OC0xLjY5Mi00LjA2OCAxLjY5Mi0xLjY5MiA0LjA2OCAxLjY5MiA0LjA2OCA0LjA2OCAxLjY5MnptNS43Ni0xOS41ODR2LTE4LjQzMmgtMjAuNzM2djE4LjQzMmgyMC43MzZ6XCIsXCJNRURJVU1cIjpcIk0yMS40OTItNDkuMjgzdjQyLjIyOHEwIC45LS40NSAxLjUzdC0xLjMxNC42M3EtLjYxMiAwLTEuMTg4LS4yODhsLTE2Ljc0LTguMzg4cS0uNzU2LS4zNi0xLjI3OC0xLjIwNnQtLjUyMi0xLjY3NHYtNDEuMDRxMC0uNzIuMzYtMS4yMjR0MS4wNDQtLjUwNHEuNTA0IDAgMS41ODQuNTRsMTguMzk2IDkuMjE2cS4xMDguMTA4LjEwOC4xOHptMi4zMDQgMy42MzZsMTkuMjI0IDMxLjE3Ni0xOS4yMjQtOS41NzZ2LTIxLjZ6bTQwLjcxNi42NDh2MzcuOTQ0cTAgLjktLjUwNCAxLjQ1OHQtMS4zNjguNTU4LTEuNjkyLS40NjhsLTE1Ljg3Ni03Ljkyem0tLjEwOC00LjMycTAgLjEwOC05LjIzNCAxNS4xMDJ0LTEwLjgxOCAxNy41NWwtMTQuMDQtMjIuODI0IDExLjY2NC0xOC45NzJxLjYxMi0xLjAwOCAxLjg3Mi0xLjAwOC41MDQgMCAuOTM2LjIxNmwxOS40NzYgOS43MnEuMTQ0LjA3Mi4xNDQuMjE2elwiLFwiWUNcIjpcIk0yOS4xMjQtMjguMjk1bDkuNTc2LTE3Ljk2NGgtNC4wMzJsLTUuNjUyIDExLjIzMnEtLjg2NCAxLjcyOC0xLjU4NCAzLjMxMmwtMS41MTItMy4zMTItNS41OC0xMS4yMzJoLTQuMzJsOS40NjggMTcuNzQ4djExLjY2NGgzLjYzNnYtMTEuNDQ4em0yNi4xNzItMzEuNTM2djU1LjI5NmgtNTUuMjk2di01NS4yOTZoNTUuMjk2elwiLFwiT1BUSU5fTU9OU1RFUlwiOlwiTTE3LjIwOC00LjEzOXEtLjI4OC41NzYtLjk3MiAxLjI0MnQtMS4zMzIuOTE4cS0uOS4zMjQtMS44NTQtLjEyNnQtMS4wMjYtMS4xMzRxLS4wMzYtLjc5MiAxLjQ0LTEuOTh0Mi40NDgtMS4zNjhxLjgyOC0uMTQ0IDEuMjI0Ljc3NHQuMDcyIDEuNjc0em00OC4yNzYgMHEuMjUyLjU3Ni45MzYgMS4yNDJ0MS4zNjguOTE4cS45LjMyNCAxLjg1NC0uMTI2dC45OS0xLjEzNHEuMDcyLS43OTItMS40MjItMS45OHQtMi40NjYtMS4zNjhxLS43OTItLjE0NC0xLjE4OC43NzR0LS4wNzIgMS42NzR6bTEuNzI4LTMuOTI0cS40NjguOTcyIDIuMDM0IDIuMTQydDIuNzkgMS40OTRxMS42Mi40NjggMi45NTItLjE2MnQxLjMzMi0xLjgxOHEwLTEuNjU2LTIuNDMtMy42MTh0LTQuMTU4LTIuMTQycS0xLjQ0LS4xOC0yLjI4NiAxLjM1dC0uMjM0IDIuNzU0em0tNTEuODA0IDBxLS40NjguOTcyLTIuMDE2IDIuMTQydC0yLjc3MiAxLjQ5NHEtMS42Mi40NjgtMi45NTItLjE2MnQtMS4zMzItMS44MThxMC0xLjY1NiAyLjQzLTMuNjE4dDQuMTU4LTIuMTQycTEuNDQtLjE4IDIuMjY4IDEuMzV0LjIxNiAyLjc1NHptMjYuMjgtNDAuNDY0aC4wMzZxLTEuNDc2IDAtMi43MzYuNTQuOTcyLjI4OCAxLjU4NCAxLjA5OHQuNjEyIDEuNzgycTAgMS4yNi0uOTcyIDIuMTZ0LTIuMzQuOXEtMS44NzIgMC0yLjg4LTEuNTQ4LS4xOC44MjgtLjE4IDEuNTEyIDAgMi42NjQgMi4wMTYgNC41NTR0NC44NiAxLjg5cTIuODggMCA0Ljg5Ni0xLjg5dDIuMDE2LTQuNTU0LTIuMDE2LTQuNTU0LTQuODk2LTEuODl6bTEwLjk0NC03Ljg0OHEtMy41NjQtMy45MjQtNy45MzgtNC43MzR0LTguODM4IDEuNjAycS45NzItMi4xNiAyLjk3LTMuNDc0dDQuMjQ4LTEuNDIyIDQuMzc0LjYxMiAzLjU4MiAyLjY4MiAxLjYwMiA0LjczNHptMjcgNDQuNjA0cS4yODguMzk2LS4zOTYgMS41MTIuMjUyLjgyOC4yNTIgMS40NC4wMzYgMi4wMTYtMS42MDIgNC4wNXQtMy45NDIgMy4yOTQtNC4yNDggMS4zMzJxLTEuNzI4LjA3Mi0zLjMxMi0uNzc0dC0yLjM3Ni0yLjM1OHEtMjQuNzMyLjktNDUuMzI0IDAtLjgyOCAxLjQ3Ni0yLjM5NCAyLjM0dC0zLjMzLjc5MnEtMy4wOTYtLjEwOC02LjQ2Mi0yLjg5OHQtMy4zMy01Ljc3OHEuMDcyLS43OTIuMjUyLTEuNDQtLjY4NC0xLjExNi0uMzk2LTEuNTEyLjIxNi0uMzYgMS4xMTYtLjAzNi41MDQtLjc5MiAxLjQ3Ni0xLjgzNi0uMjUyLTEuMDQ0LjA3Mi0xLjM2OC4zOTYtLjM2IDEuNDA0LjE0NCAxLjA0NC0uNzIgMi4xMjQtMS4yMjQgMC0xLjA0NC40NjgtMS4zMzIuODI4LS40MzIgMS44MzYuNTc2IDEuMjYtLjE4IDIuMTk2LjA3Mi42NDguMTQ0IDEuMzY4LjY4NHYtMi42MjhxLS4zOTYgMC0uNjQ4LS4wNzItMS45MDgtLjM2LTMuNDkyLTEuNjAydC0xLjk4LTMuMTVxLS4zMjQtMS4zNjggMC0yLjkxNi41NC0yLjIzMiAzLjM0OC0zLjQyLjA3Mi0uNjEyLjY4NC0xLjI3OHQxLjI5Ni0uODQ2IDEuMTg4LjI3LjY4NCAxLjA5OGguNDY4cTEuNjU2LjE4IDIuMTYuODI4LjEwOC4xMDguMTguMjUyLjM2LS4wMzYgMS4wOTgtLjEyNnQxLjA5OC0uMTI2cS0uNTQtLjM5Ni0xLjA4LS42MTItLjgyOC0xLjQ0LTMuMjc2LTEuNTQ4IDAtLjIxNi4wMzYtLjM2LTIuMjMyLS4wNzItNC4yNjYtLjY2NnQtMy4wNDItMS43MXEtMS4xNTItMS4yOTYtMS41My0zLjMxMnQtLjA5LTQuMDMycS41NzYtNC41MzYgMy4yNC02LjQ0NC44MjgtLjU3NiAxLjg3Mi0uMTYydDEuMTUyIDEuNDU4bC4wNTQuNTA0LjA5Ljc1Ni4xMDguNzIuMTk4LjY4NC4zMDYuMzZxLjk3Mi41MDQgMi43MzYuNDMyIDEuNzI4LTEuNjU2IDMuNTI4LTIuNjY0LTEuNDQtLjE0NC01LjgzMi41MDRsMS42OTItMS42NTZxMi4xOTYtMi4wODggNS44NjgtMy45OTYgNS4yMi0yLjYyOCAxMC4xNTItMy4wOTYtLjcyLS4yODgtMS40NzYtLjU1OHQtMS42OTItLjUwNC0xLjUzLS4zNzgtMS43MS0uMzk2LTEuNTQ4LS4zNnEyMS40Mi00LjUzNiAzMi41NDQgNS4wMDQgMy41MjggMy4wMjQgNS42ODggNy45OTIgMy4wNi4zNiA0LjM1Ni0uMzI0aC4wMzZxLjE4LS4xMDguMzA2LS4zNnQuMTk4LS42ODQuMTA4LS43MDIuMTA4LS43NzRsLjAzNi0uNTA0cS4xMDgtMS4wMDggMS4xNTItMS40NHQxLjg3Mi4xOHEyLjYyOCAxLjg3MiAzLjI3NiA2LjQwOC4yNTIgMi4wNTItLjEyNiA0LjA2OHQtMS41MyAzLjI3NnEtMS4wMDggMS4xNTItMy4wMDYgMS43NDZ0LTQuMTU4LjY2NnYuMzZxLTIuNTU2LjA3Mi0zLjQyIDEuNTQ4LS41MDQuMTgtMS4xMTYuNjEyLjM5Ni4wMzYgMS4xNTIuMTI2dDEuMDguMTI2cS4wMzYtLjE0NC4xOC0uMjg4LjU3Ni0uNjQ4IDIuMTYtLjgyOGguNDY4cS4xOC0uNjQ4LjY4NC0xLjA4dDEuMTg4LS4yODggMS4yOTYuODI4LjY4NCAxLjI5NnEyLjg0NCAxLjE1MiAzLjM0OCAzLjQyLjMyNCAxLjQ0LjAzNiAyLjkxNi0uNDMyIDEuOTA4LTIuMDE2IDMuMTY4dC0zLjQ5MiAxLjU4NHEtLjM2LjA3Mi0uNjEyLjA3MiAwIDEuNzY0LS4wMzYgMi42MjguNzItLjU0IDEuMzY4LS42ODQuOTM2LS4yNTIgMi4xOTYtLjA3MiAxLjAwOC0xLjAwOCAxLjgzNi0uNTc2LjUwNC4zMjQuNTA0IDEuMzMyIDEuMTg4LjU3NiAyLjEyNCAxLjIyNC45NzItLjQ2OCAxLjM2OC0uMTQ0LjM2LjM2LjA3MiAxLjM2OCAxLjAwOCAxLjA4IDEuNDc2IDEuODM2LjgyOC0uMjg4IDEuMTE2LjAzNnptLTkuOS0zNC4yNzJxMCAxLjA0NC0uMzI0IDEuOTQ0IDIuOTUyIDEuMTUyIDQuMDMyIDQuNzUyLjE0NC0xLjMzMi0uMzQyLTMuNTQ2dC0xLjQ5NC0zLjI1OHEtLjcyLS42ODQtMS4yOTYtLjYxMnQtLjU3Ni43MnptLTIuODA4IDMuNnExLjI2IDEuNTEyIDEuNzEgMy45MDZ0LS4wMTggNC40ODJxMi40MTItLjQ2OCAzLjQ5Mi0xLjYyLjQ2OC0uNTA0LjY0OC0xLjAwOC0uMTA4LTIuMzA0LTEuMTE2LTQuMTIydC0yLjg0NC0yLjM5NHEtLjU0LjU0LTEuODcyLjc1NnptLTEuMzMyLjE0NHEtMS4wOCAwLTEuNTg0LS4wMzYgMS41MTIgNC4xNCAxLjkwOCA4LjYwNC43NTYgMCAxLjU0OC0uMTA4LjU3Ni0yLjQ0OC4wMzYtNC44NnQtMS45MDgtMy42em0tNTYuMzA0IDIuOTUycTEuMDgtMy42IDQuMDMyLTQuNzUyLS4zMjQtLjktLjMyNC0xLjk0NCAwLS42NDgtLjU5NC0uNzJ0LTEuMjc4LjYxMnEtMS4wMDggMS4wNDQtMS40OTQgMy4yNTh0LS4zNDIgMy41NDZ6bTEuMjk2IDMuNjcycTEuMDQ0IDEuMTE2IDMuNDkyIDEuNjItLjQ2OC0yLjA4OC0uMDE4LTQuNDgydDEuNzEtMy45MDZxLTEuMzMyLS4yMTYtMS44NzItLjc1Ni0xLjgzNi41NzYtMi44MjYgMi4zNzZ0LTEuMTM0IDQuMTRxLjMyNC42MTIuNjQ4IDEuMDA4em02LjM3MiAxLjk0NHEuNTA0LTQuNDY0IDIuNjI4LTguNDYtLjY4NC4xNDQtMS45OC42NDhsLTEuNjIuNjg0di0uMDM2cS0xLjY1NiAzLjIwNC0uNzIgNy4wNTYuOS4xMDggMS42OTIuMTA4em0zNC42NjggMS40MDRxLjI4OCAxLjM2OC41OTQgMy45MDZ0LjQxNCAzLjIyMnEuMTA4LjY0OC4zNDIuNzc0dC44NDYtLjE2MnExLjQ0LS43MiAyLjIzMi0zLjA3OHQuODI4LTQuNTE4cS0uODY0LS4wNzItNS4yNTYtLjE0NHptLTEwLjE1Mi0yMy4wNzZxLTQuMTc2IDAtNy4xNjQgMi45N3QtMi45ODggNy4xNDZxMCA0LjIxMiAyLjk4OCA3LjE4MnQ3LjE2NCAyLjk3IDcuMTY0LTIuOTcgMi45ODgtNy4xODJxMC00LjE3Ni0yLjk4OC03LjE0NnQtNy4xNjQtMi45N3ptOC4yMDggMjMuMDA0cS0zLjgxNi0uMDcyLTcuNTk2IDB2LS4wMzZxLS4wMzYuOTcyLjA5IDMuMDk2dC40ODYgMi4zNzZxMS4wNDQuNTA0IDMuMzY2LjUyMnQzLjQzOC0uMzc4cS4zMjQtLjEwOC4zOTYtMS40MDR0LS4wMTgtMi41MDItLjE2Mi0xLjY3NHptLTkuNjQ4IDcuMTY0cS4yODgtLjE0NC4zNDItMS43Mjh0LS4wMTgtMy4xNjgtLjE0NC0yLjI2OHYtLjAzNnEtNy42MzIuMTA4LTcuNzA0LjEwOC0uMTQ0LjcyLS4yNTIgMi4yMzJ0MCAyLjk4OC41MDQgMS42NTZxMS4yMjQuNTQgMy42MzYuNTc2dDMuNjM2LS4zNnptLTE0LjE4NC02LjgwNHEtLjU3NiAyLjEyNC4xNjIgNC4yNjZ0Mi43OSAzLjA0MnEuNTQuMjg4Ljg2NC4xOHQuNDMyLS43NTZxLjEwOC0uNTc2LjI4OC0zLjI0dC4zNi0zLjcwOHEtMi40ODQuMDcyLTQuODk2LjIxNnptLTQuNTcyIDQuNTM2cS4xMDguODI4LTEuMjI0IDEuMjk2IDQuNzUyIDUuMDc2IDkuNzc0IDguNjR0MTAuOTk4IDUuNTQ0cTYuMTkyLTEuNzY0IDExLjE3OC01LjI1NnQxMC41NjYtOXEtMS4xODgtLjQ2OC0xLjA4LTEuMjI0bC4xMDgtLjMyNHYwcS0uNjEyLS4wNzItMS44LS4xOTh0LTEuNzI4LS4xNjJxLS45MzYgMy4yNC0yLjk1MiA0Ljc1Mi0xLjgzNiAxLjM2OC0yLjk1Mi0uMDM2LS4xOC0uMjE2LS4zMjQtLjUwNC0uMjUyLS40NjgtLjYxMi0yLjIzMi0uMDcyLjE4LS4xOC4zMjR0LS4yNy4yNTItLjI4OC4xOTgtLjM0Mi4xNDRsLS4zNi4wOS0uNDMyLjA3Mi0uNDMyLjA1NC0uNDg2LjAzNi0uNDg2LjAxOHEtMy44MTYuMzI0LTUuODY4LS4zOTYtLjE0NC42MTItLjM2Ljk1NHQtLjc1Ni41NC0uODI4LjI1Mi0xLjI5Ni4xMjZsLS4xMDguMDE4LS4xMDguMDE4aC0uMTA4cS02LjQ0NC42MTItNy4zMDgtMS40NC0uMDcyIDIuMjY4LTIuMDE2IDEuOTQ0LTEuNjkyLS4yODgtMy4yNzYtMS45NDQtLjQzMi0uNDY4LS43Mi0uOTM2LS42MTItMS4wNDQtLjkzNi0yLjM0LTIuMDg4LjIxNi0zLjEzMi4zNmwuMTQ0LjM2em0tMy4wMjQgMjIuNjA4cS4xMDgtLjUwNC4xMDgtMS4wOC0uNjEyLTIuNTU2LTEuODM2LTQuNjh0LTIuNjI4LTIuNTJxLTEuNDc2LS40MzItMy42NTQuNTIydC0zLjc2MiAyLjg4LTEuNDA0IDMuODdxMS4yNiAxLjkwOCAzLjYgMy4zNDh0NC4yODQgMS41MTJxMS44MzYuMDcyIDMuMzg0LTEuMDA4dDEuOTA4LTIuODQ0em0uMTA4LTYuMTU2cS44MjggMi4yNjguOTcyIDQuMjg0IDcuMDItNC4wNjggMTQuMTEyLTYuMjY0LTMuNTI4LTEuODcyLTYuNDk4LTQuMzJ0LTYuNDYyLTUuOTRxLS4yMTYuMTQ0LTEuMDQ0LjQ2OGwtLjAzNi4xOC0uMDM2LjE0NHExLjExNi42NDguNzkyIDEuMzMyLS40MzIuODI4LTIuMDE2IDEuMjI0LS4zNi40NjgtMS4wNDQuODY0aC0uMDM2cS0uMDcyIDIuOTg4LjAzNiA1LjQuNjg0IDEuMjI0IDEuMjYgMi42Mjh6bTIuNDg0IDUuOTc2cTE5LjE1Mi43NTYgNDEuMjIgMC05LjE0NC01LjI5Mi0xNS40MDgtNy4wNTYtMi43MzYgMS4yNi01LjYxNiAyLjA1Mi0uMjg4LjEwOC0uNTc2IDAtMi4zNC0uNzU2LTQuNjQ0LTEuNzY0LTcuNDg4IDIuMTYtMTQuOTc2IDYuNzY4aC0uMDM2di4wMzZsLjAzNi0uMDM2em00Mi42MjQtMS42NTZxLjE0NC0xLjk0NCAxLjAwOC00LjMyLjUwNC0xLjM2OCAxLjE4OC0yLjU1NmwtLjAzNi4wMzZxLjEwOC0yLjc3Mi4xMDgtNS41MDgtLjU0LS4yODgtMS4wOC0uOS0xLjUxMi0uMzI0LTIuMDE2LTEuMTg4LS4zMjQtLjcyLjc5Mi0xLjM2OC0uMDcyLS4xNDQtLjA3Mi0uMzI0LS41NzYtLjE0NC0xLjAwOC0uNDMyLTcuMzQ0IDYuODQtMTMuNzg4IDEwLjIyNCA3LjEyOCAyLjEyNCAxNC45MDQgNi4zMzZ6bTE0LjExMi44MjhxLjE4LTEuOTQ0LTEuNDA0LTMuODd0LTMuNzQ0LTIuODgtMy42NzItLjUyMnEtMS4zNjguMzk2LTIuNjEgMi41Mzh0LTEuODU0IDQuNjYycTAgLjU3Ni4xMDggMS4wOC4zNiAxLjc2NCAxLjkwOCAyLjg0NHQzLjM4NCAxLjAwOHExLjk0NC0uMDcyIDQuMjg0LTEuNTEydDMuNi0zLjM0OHpcIixcIk9QRU5DQVJUXCI6XCJNNTQuODY0LTguMjQzcTAgMi40NDgtMS43MjggNC4xNzZ0LTQuMTc2IDEuNzI4LTQuMTk0LTEuNzI4LTEuNzQ2LTQuMTc2IDEuNzQ2LTQuMTk0IDQuMTk0LTEuNzQ2IDQuMTc2IDEuNzQ2IDEuNzI4IDQuMTk0em0tMjYuOTY0IDBxMCAyLjQ0OC0xLjc0NiA0LjE3NnQtNC4xOTQgMS43MjgtNC4xNzYtMS43MjgtMS43MjgtNC4xNzYgMS43MjgtNC4xOTQgNC4xNzYtMS43NDYgNC4xOTQgMS43NDYgMS43NDYgNC4xOTR6bS0yNy45LTUzLjc4NHEyLjA1MiAyLjE2IDMuOTc4IDMuNzYydDQuMzU2IDIuOTUyIDQuODk2IDIuMjY4IDUuOTc2IDEuNjM4IDcuMiAxLjEzNCA5IC42NjYgMTAuOTQ0LjM0MiAxMy40MS4wOXE1LjAwNCAwIDguODAyLjE4dDYuNTE2LjU5NCA0LjQ2NC45OSAyLjU1NiAxLjQyMi44NjQgMS44NTQtLjcwMiAyLjMwNC0yLjAzNCAyLjc1NC0zLjIyMiAzLjI3Ni00LjE3NiAzLjc2Mi01LjAwNCA0LjI4NHEtNi42NiA1LjY1Mi0xMC4yOTYgOC44OTIgMS4wNDQtMS44MzYgMi43NTQtMy45MjR0My4zODQtMy43OTggMy40MDItMy41NDYgMi45ODgtMy4yOTQgMS45NDQtMi44OTguNDY4LTIuNTItMS42MzgtMS45OTgtNC4xOTQtMS40NzYtNy4zNDQtLjg0Ni0xMC45NDQtLjE4cS02LjA0OC4wNzItMTEuMzA0LS4yMTZ0LTkuMjE2LS44MjgtNy4zNjItMS40NzYtNS43NDItMS44NTQtNC40MS0yLjI1LTMuMjk0LTIuMzk0LTIuNDQ4LTIuNTc0LTEuODE4LTIuNTAyLTEuNDQtMi40NDgtMS4zMTQtMi4xNDJ6XCIsXCJFWFBFRElURURTU0xcIjpcIk0zMi4yNTYtNjIuMTM1cS02LjA4NCAwLTExLjYyOCAyLjM3NnQtOS41NTggNi4zOS02LjM5IDkuNTU4LTIuMzc2IDExLjYyOCAyLjM3NiAxMS42MjggNi4zOSA5LjU1OCA5LjU1OCA2LjM5IDExLjYyOCAyLjM3NiAxMS42MjgtMi4zNzYgOS41NTgtNi4zOSA2LjM5LTkuNTU4IDIuMzc2LTExLjYyOC0yLjM3Ni0xMS42MjgtNi4zOS05LjU1OC05LjU1OC02LjM5LTExLjYyOC0yLjM3NnptMC0yLjMwNHE2LjU1MiAwIDEyLjUyOCAyLjU1NnQxMC4yOTYgNi44NzYgNi44NzYgMTAuMjk2IDIuNTU2IDEyLjUyOC0yLjU1NiAxMi41MjgtNi44NzYgMTAuMjk2LTEwLjI5NiA2Ljg3Ni0xMi41MjggMi41NTYtMTIuNTI4LTIuNTU2LTEwLjI5Ni02Ljg3Ni02Ljg3Ni0xMC4yOTYtMi41NTYtMTIuNTI4IDIuNTU2LTEyLjUyOCA2Ljg3Ni0xMC4yOTYgMTAuMjk2LTYuODc2IDEyLjUyOC0yLjU1NnptLTE0LjQgMjkuOTUycS41NzYgMCAuNTc2LjU3NnYxNy4yOHEwIC41NzYtLjU3Ni41NzZoLTEuMTUycS0uNTc2IDAtLjU3Ni0uNTc2di0xNy4yOHEwLS41NzYuNTc2LS41NzZoMS4xNTJ6bTE0LjQgMi4zMDRxMS45MDggMCAzLjI1OCAxLjM1dDEuMzUgMy4yNThxMCAxLjI2LS42MyAyLjMwNHQtMS42NzQgMS42NTZ2NC4xMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNC4xMDRxLTEuMDQ0LS42MTItMS42NzQtMS42NTZ0LS42My0yLjMwNHEwLTEuOTA4IDEuMzUtMy4yNTh0My4yNTgtMS4zNXptMC0yNy42NDhxNy41MjQgMCAxMy44NzggMy43MDh0MTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44NzgtMy43MDggMTMuODc4LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDh6bS0xMi42NzIgMTcuMjh2My40NTZxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh2LTMuNDU2cTAtMy4zNDggMi4zNTgtNS43MDZ0NS43MDYtMi4zNTggNS43MDYgMi4zNTggMi4zNTggNS43MDZ2My40NTZxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh2LTMuNDU2cTAtNS4yNTYtMy43MDgtOC45NjR0LTguOTY0LTMuNzA4LTguOTY0IDMuNzA4LTMuNzA4IDguOTY0em0zMS4xMDQgMjYuNDk2di0xOC40MzJxMC0uOTM2LS42ODQtMS42MnQtMS42Mi0uNjg0aC0zMi4yNTZxLS45MzYgMC0xLjYyLjY4NHQtLjY4NCAxLjYydjE4LjQzMnEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRoMzIuMjU2cS45MzYgMCAxLjYyLS42ODR0LjY4NC0xLjYyelwiLFwiQkFUVEVSWV9GVUxMXCI6XCJNNjkuMTItNDYuMDA3djI3LjY0OGgtNTkuOTA0di0yNy42NDhoNTkuOTA0em00LjYwOCAyMC43MzZoNC42MDh2LTEzLjgyNGgtNC42MDh2LTEwLjM2OHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTY2LjgxNnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYzNC41NnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg2Ni44MTZxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh2LTEwLjM2OHptOS4yMTYtMTMuODI0djEzLjgyNHEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzV2NS43NnEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5MmgtNjYuODE2cS0yLjM3NiAwLTQuMDY4LTEuNjkydC0xLjY5Mi00LjA2OHYtMzQuNTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5Mmg2Ni44MTZxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHY1Ljc2cTEuOTA4IDAgMy4yNTggMS4zNXQxLjM1IDMuMjU4elwiLFwiQkFUVEVSWV9USFJFRV9RVUFSVEVSU1wiOlwiTTkuMjE2LTE4LjM1OXYtMjcuNjQ4aDQ2LjA4djI3LjY0OGgtNDYuMDh6bTY5LjEyLTI1LjM0NHExLjkwOCAwIDMuMjU4IDEuMzV0MS4zNSAzLjI1OHYxMy44MjRxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1djUuNzZxMCAyLjM3Ni0xLjY5MiA0LjA2OHQtNC4wNjggMS42OTJoLTY2LjgxNnEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTM0LjU2cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoNjYuODE2cTIuMzc2IDAgNC4wNjggMS42OTJ0MS42OTIgNC4wNjh2NS43NnptMCAxOC40MzJ2LTEzLjgyNGgtNC42MDh2LTEwLjM2OHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTY2LjgxNnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYzNC41NnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg2Ni44MTZxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh2LTEwLjM2OGg0LjYwOHpcIixcIkJBVFRFUllfSEFMRlwiOlwiTTkuMjE2LTE4LjM1OXYtMjcuNjQ4aDMyLjI1NnYyNy42NDhoLTMyLjI1NnptNjkuMTItMjUuMzQ0cTEuOTA4IDAgMy4yNTggMS4zNXQxLjM1IDMuMjU4djEzLjgyNHEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzV2NS43NnEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5MmgtNjYuODE2cS0yLjM3NiAwLTQuMDY4LTEuNjkydC0xLjY5Mi00LjA2OHYtMzQuNTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5Mmg2Ni44MTZxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHY1Ljc2em0wIDE4LjQzMnYtMTMuODI0aC00LjYwOHYtMTAuMzY4cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtNjYuODE2cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djM0LjU2cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDY2LjgxNnEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHYtMTAuMzY4aDQuNjA4elwiLFwiQkFUVEVSWV9RVUFSVEVSXCI6XCJNOS4yMTYtMTguMzU5di0yNy42NDhoMTguNDMydjI3LjY0OGgtMTguNDMyem02OS4xMi0yNS4zNDRxMS45MDggMCAzLjI1OCAxLjM1dDEuMzUgMy4yNTh2MTMuODI0cTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNXY1Ljc2cTAgMi4zNzYtMS42OTIgNC4wNjh0LTQuMDY4IDEuNjkyaC02Ni44MTZxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di0zNC41NnEwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyaDY2LjgxNnEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djUuNzZ6bTAgMTguNDMydi0xMy44MjRoLTQuNjA4di0xMC4zNjhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC02Ni44MTZxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2MzQuNTZxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoNjYuODE2cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4di0xMC4zNjhoNC42MDh6XCIsXCJCQVRURVJZX0VNUFRZXCI6XCJNNzguMzM2LTQzLjcwM3ExLjkwOCAwIDMuMjU4IDEuMzV0MS4zNSAzLjI1OHYxMy44MjRxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1djUuNzZxMCAyLjM3Ni0xLjY5MiA0LjA2OHQtNC4wNjggMS42OTJoLTY2LjgxNnEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTM0LjU2cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoNjYuODE2cTIuMzc2IDAgNC4wNjggMS42OTJ0MS42OTIgNC4wNjh2NS43NnptMCAxOC40MzJ2LTEzLjgyNGgtNC42MDh2LTEwLjM2OHEwLS41MDQtLjMyNC0uODI4dC0uODI4LS4zMjRoLTY2LjgxNnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYzNC41NnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGg2Ni44MTZxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh2LTEwLjM2OGg0LjYwOHpcIixcIk1PVVNFX1BPSU5URVJcIjpcIk00MC43ODgtMjYuODkxcTEuMTE2IDEuMDguNTA0IDIuNDg0LS42MTIgMS40NC0yLjEyNCAxLjQ0aC0xMy43NTJsNy4yMzYgMTcuMTM2cS4zNi45IDAgMS43NjR0LTEuMjI0IDEuMjZsLTYuMzcyIDIuN3EtLjkuMzYtMS43NjQgMHQtMS4yNi0xLjIyNGwtNi44NzYtMTYuMjcyLTExLjIzMiAxMS4yMzJxLS42ODQuNjg0LTEuNjIuNjg0LS40MzIgMC0uODY0LS4xOC0xLjQ0LS42MTItMS40NC0yLjEyNHYtNTQuMTQ0cTAtMS41MTIgMS40NC0yLjEyNC40MzItLjE4Ljg2NC0uMTguOTcyIDAgMS42Mi42ODR6XCIsXCJJX0NVUlNPUlwiOlwiTTI5Ljk1Mi01OS44MzFxLTExLjUyIDAtMTEuNTIgOC4wNjR2MTQuOTc2aDQuNjA4djQuNjA4aC00LjYwOHYxOS41ODRxMCA4LjA2NCAxMS41MiA4LjA2NGgyLjMwNHY0LjYwOGgtMi4zMDRxLTkuNzkyIDAtMTMuODI0LTUuMjU2LTQuMDMyIDUuMjU2LTEzLjgyNCA1LjI1NmgtMi4zMDR2LTQuNjA4aDIuMzA0cTExLjUyIDAgMTEuNTItOC4wNjR2LTE5LjU4NGgtNC42MDh2LTQuNjA4aDQuNjA4di0xNC45NzZxMC04LjA2NC0xMS41Mi04LjA2NGgtMi4zMDR2LTQuNjA4aDIuMzA0cTkuNzkyIDAgMTMuODI0IDUuMjU2IDQuMDMyLTUuMjU2IDEzLjgyNC01LjI1NmgyLjMwNHY0LjYwOGgtMi4zMDR6XCIsXCJPQkpFQ1RfR1JPVVBcIjpcIk03My43MjgtNTAuNjE1aC00LjYwOHYzNi44NjRoNC42MDh2MTMuODI0aC0xMy44MjR2LTQuNjA4aC00Ni4wOHY0LjYwOGgtMTMuODI0di0xMy44MjRoNC42MDh2LTM2Ljg2NGgtNC42MDh2LTEzLjgyNGgxMy44MjR2NC42MDhoNDYuMDh2LTQuNjA4aDEzLjgyNHYxMy44MjR6bS05LjIxNi05LjIxNnY0LjYwOGg0LjYwOHYtNC42MDhoLTQuNjA4em0tNTkuOTA0IDB2NC42MDhoNC42MDh2LTQuNjA4aC00LjYwOHptNC42MDggNTUuMjk2di00LjYwOGgtNC42MDh2NC42MDhoNC42MDh6bTUwLjY4OC00LjYwOHYtNC42MDhoNC42MDh2LTM2Ljg2NGgtNC42MDh2LTQuNjA4aC00Ni4wOHY0LjYwOGgtNC42MDh2MzYuODY0aDQuNjA4djQuNjA4aDQ2LjA4em05LjIxNiA0LjYwOHYtNC42MDhoLTQuNjA4djQuNjA4aDQuNjA4em0tMjMuMDQtMzYuODY0aDEzLjgyNHYyNy42NDhoLTMyLjI1NnYtOS4yMTZoLTEzLjgyNHYtMjcuNjQ4aDMyLjI1NnY5LjIxNnptLTI3LjY0OCAxMy44MjRoMjMuMDR2LTE4LjQzMmgtMjMuMDR2MTguNDMyem0zNi44NjQgOS4yMTZ2LTE4LjQzMmgtOS4yMTZ2MTMuODI0aC0xMy44MjR2NC42MDhoMjMuMDR6XCIsXCJPQkpFQ1RfVU5HUk9VUFwiOlwiTTgyLjk0NC0zNi43OTFoLTQuNjA4djIzLjA0aDQuNjA4djEzLjgyNGgtMTMuODI0di00LjYwOGgtMzIuMjU2djQuNjA4aC0xMy44MjR2LTEzLjgyNGg0LjYwOHYtNC42MDhoLTEzLjgyNHY0LjYwOGgtMTMuODI0di0xMy44MjRoNC42MDh2LTIzLjA0aC00LjYwOHYtMTMuODI0aDEzLjgyNHY0LjYwOGgzMi4yNTZ2LTQuNjA4aDEzLjgyNHYxMy44MjRoLTQuNjA4djQuNjA4aDEzLjgyNHYtNC42MDhoMTMuODI0djEzLjgyNHptLTkuMjE2LTkuMjE2djQuNjA4aDQuNjA4di00LjYwOGgtNC42MDh6bS0yMy4wNC0xMy44MjR2NC42MDhoNC42MDh2LTQuNjA4aC00LjYwOHptLTQ2LjA4IDB2NC42MDhoNC42MDh2LTQuNjA4aC00LjYwOHptNC42MDggNDEuNDcydi00LjYwOGgtNC42MDh2NC42MDhoNC42MDh6bTQ2LjA4LTQuNjA4aC00LjYwOHY0LjYwOGg0LjYwOHYtNC42MDh6bS00MS40NzIgMGgzMi4yNTZ2LTQuNjA4aDQuNjA4di0yMy4wNGgtNC42MDh2LTQuNjA4aC0zMi4yNTZ2NC42MDhoLTQuNjA4djIzLjA0aDQuNjA4djQuNjA4em0xOC40MzIgMTguNDMydi00LjYwOGgtNC42MDh2NC42MDhoNC42MDh6bTQ2LjA4IDB2LTQuNjA4aC00LjYwOHY0LjYwOGg0LjYwOHptLTQuNjA4LTkuMjE2di0yMy4wNGgtNC42MDh2LTQuNjA4aC0xMy44MjR2MTMuODI0aDQuNjA4djEzLjgyNGgtMTMuODI0di00LjYwOGgtMTMuODI0djQuNjA4aDQuNjA4djQuNjA4aDMyLjI1NnYtNC42MDhoNC42MDh6XCIsXCJTVElDS1lfTk9URVwiOlwiTTM2Ljg2NC0xOS41MTF2MTQuOTc2aC0zMy40MDhxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTQ4LjM4NHEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoNDguMzg0cTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHYzMy40MDhoLTE0Ljk3NnEtMS40NCAwLTIuNDQ4IDEuMDA4dC0xLjAwOCAyLjQ0OHptNC42MDggMS4xNTJoMTMuNzE2cS0uNTQgMi45NTItMi4zNCA0Ljc1MmwtNi42MjQgNi42MjRxLTEuOCAxLjgtNC43NTIgMi4zNHYtMTMuNzE2elwiLFwiU1RJQ0tZX05PVEVfT1wiOlwiTTUwLjQtMTguMzU5aC04LjkyOHY4LjkyOHExLjA0NC0uMzYgMS40NzYtLjc5Mmw2LjY2LTYuNjZxLjQzMi0uNDMyLjc5Mi0xLjQ3NnptLTEwLjA4LTQuNjA4aDEwLjM2OHYtMzIuMjU2aC00Ni4wOHY0Ni4wOGgzMi4yNTZ2LTEwLjM2OHEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDh6bTE0Ljk3Ni0zMy40MDh2MzYuODY0cTAgMS40NC0uNzIgMy4xNjh0LTEuNzI4IDIuNzM2bC02LjYyNCA2LjYyNHEtMS4wMDggMS4wMDgtMi43MzYgMS43Mjh0LTMuMTY4LjcyaC0zNi44NjRxLTEuNDQgMC0yLjQ0OC0xLjAwOHQtMS4wMDgtMi40NDh2LTQ4LjM4NHEwLTEuNDQgMS4wMDgtMi40NDh0Mi40NDgtMS4wMDhoNDguMzg0cTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHpcIixcIkNDX0pDQlwiOlwiTTcwLjIzNi0yOC41MTFxMCAuOTM2LS41NTggMS42MDJ0LTEuMzg2Ljg0NnEtLjI4OC4wNzItLjY0OC4wNzJoLTUuNTA4di01LjA0aDUuNTA4cS4zNiAwIC42NDguMDcyLjgyOC4xOCAxLjM4Ni44NDZ0LjU1OCAxLjYwMnptLS42NDgtNy42NjhxMCAuOS0uNTQgMS41MTJ0LTEuMzY4Ljc1NnEtLjEwOC4wMzYtLjU0LjAzNmgtNS4wMDR2LTQuNjQ0aDUuMDA0bC4zMDYuMDE4LjIzNC4wMThxLjgyOC4xNDQgMS4zNjguNzc0dC41NCAxLjUzem0tNDMuMzggNS45MDR2LTExLjA4OGgtOC4yMDh2MTEuMDg4cTAgMi4wODgtMS4zNjggMy40MDJ0LTMuNzggMS4zMTRxLTMuODg4IDAtOC4yNDQtMi4xMjR2NC4wMzJxMS45MDguNTQgNC4zNTYuODI4dDMuOTI0LjMyNGwxLjUxMi4wMzZxMTEuODA4IDAgMTEuODA4LTcuODEyem0yNS43MDQgNi42MjR2LTQuMDY4cS0zLjU2NCAxLjg3Mi03LjIgMi4xMjQtMy44ODguMjg4LTYuMDg0LTEuNDc2dC0yLjE5Ni01LjExMiAyLjE5Ni01LjExMiA2LjA4NC0xLjQ3NnEzLjYzNi4yNTIgNy4yIDIuMDg4di00LjAzMnEtMS43MjgtLjQzMi0zLjYtLjcwMnQtMi44OC0uMzQybC0xLjAwOC0uMDcycS00LjU3Mi0uMjE2LTcuODY2LjUwNHQtNS4wNTggMi4xNi0yLjU1NiAzLjE2OC0uNzkyIDMuODE2Ljc5MiAzLjgxNiAyLjU1NiAzLjE2OCA1LjA1OCAyLjE2IDcuODY2LjUwNHEzLjYzNi0uMTQ0IDcuNDg4LTEuMTE2em0yNi40MjQtNC4xNHEwLTEuOTQ0LTEuNTQ4LTMuMTg2dC0zLjkyNC0xLjQyMnYtLjEwOHEyLjA1Mi0uMjg4IDMuMjA0LTEuNDk0dDEuMTUyLTIuODYycTAtMS45OC0xLjQ3Ni0zLjE2OHQtMy44NTItMS4yOTZsLS40MzItLjAxOC0uNTA0LS4wMThoLTE2LjM4djE4LjM2aDE3LjY3NnEyLjY2NCAwIDQuMzc0LTEuMzE0dDEuNzEtMy40NzR6bTQuNjA4LTI3LjQzMnY0Ni4wOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTczLjcyOHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di00Ni4wOHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg3My43MjhxMS44NzIgMCAzLjI0IDEuMzY4dDEuMzY4IDMuMjR6XCIsXCJDQ19ESU5FUlNfQ0xVQlwiOlwiTTMwLjg4OC0xOS43NjN2LTI0Ljk0OHEtMy44MTYgMS40NzYtNi4xOTIgNC44Nzh0LTIuMzc2IDcuNjE0IDIuMzc2IDcuNjE0IDYuMTkyIDQuODQyem0xOC4xNDQtMTIuNDU2cTAtNC4yMTItMi4zNzYtNy42MTR0LTYuMTkyLTQuODc4djI0Ljk4NHEzLjgxNi0xLjQ3NiA2LjE5Mi00Ljg3OHQyLjM3Ni03LjYxNHptNy43NCAwcTAgNS43MjQtMi44MjYgMTAuNTg0dC03LjY4NiA3LjY4Ni0xMC41ODQgMi44MjZxLTQuMjg0IDAtOC4xOS0xLjY3NHQtNi43MzItNC41LTQuNS02LjczMi0xLjY3NC04LjE5cTAtNS43MjQgMi44MjYtMTAuNTg0dDcuNjg2LTcuNjg2IDEwLjU4NC0yLjgyNiAxMC41ODQgMi44MjYgNy42ODYgNy42ODYgMi44MjYgMTAuNTg0em0xMy43ODguMjUycTAtNS4wMDQtMS45OTgtOS40MTR0LTUuMzEtNy4zOTgtNy42ODYtNC43MTYtOS4wOS0xLjcyOGgtMTAuODM2cS02LjMzNiAwLTExLjY0NiAyLjkxNnQtOC40NiA4LjI4LTMuMTUgMTIuMDZxMCA2LjE1NiAzLjEzMiAxMS40M3Q4LjQ5NiA4LjMzNCAxMS42MjggMy4wNmgxMC44MzZxNC42NDQgMCA5LjA1NC0xLjgxOHQ3LjcyMi00Ljg2IDUuMzEtNy4yOSAxLjk5OC04Ljg1NnptMTIuMzg0LTIzLjI1NnY0Ni4wOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTczLjcyOHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di00Ni4wOHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg3My43MjhxMS44NzIgMCAzLjI0IDEuMzY4dDEuMzY4IDMuMjR6XCIsXCJDTE9ORVwiOlwiTTU5LjkwNC01LjY4N3YtMzkuMTY4cTAtLjQ2OC0uMzQyLS44MXQtLjgxLS4zNDJoLTM5LjE2OHEtLjQ2OCAwLS44MS4zNDJ0LS4zNDIuODF2MzkuMTY4cTAgLjQ2OC4zNDIuODF0LjgxLjM0MmgzOS4xNjhxLjQ2OCAwIC44MS0uMzQydC4zNDItLjgxem00LjYwOC0zOS4xNjh2MzkuMTY4cTAgMi4zNzYtMS42OTIgNC4wNjh0LTQuMDY4IDEuNjkyaC0zOS4xNjhxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di0zOS4xNjhxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgzOS4xNjhxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHptLTEzLjgyNC0xMy44MjR2NS43NmgtNC42MDh2LTUuNzZxMC0uNDY4LS4zNDItLjgxdC0uODEtLjM0MmgtMzkuMTY4cS0uNDY4IDAtLjgxLjM0MnQtLjM0Mi44MXYzOS4xNjhxMCAuNDY4LjM0Mi44MXQuODEuMzQyaDUuNzZ2NC42MDhoLTUuNzZxLTIuMzc2IDAtNC4wNjgtMS42OTJ0LTEuNjkyLTQuMDY4di0zOS4xNjhxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgzOS4xNjhxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHpcIixcIkJBTEFOQ0VfU0NBTEVcIjpcIk02Mi4yMDgtNDguMzExbC0xMy44MjQgMjUuMzQ0aDI3LjY0OHptLTQ2LjA4IDBsLTEzLjgyNCAyNS4zNDRoMjcuNjQ4em0yOS41NTYtNi45MTJxLS41MDQgMS40NC0xLjYzOCAyLjU3NHQtMi41NzQgMS42Mzh2NDYuNDc2aDIxLjg4OHEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNDguMzg0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMjEuODg4di00Ni40NzZxLTEuNDQtLjUwNC0yLjU3NC0xLjYzOHQtMS42MzgtMi41NzRoLTE3LjY3NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDE3LjY3NnEuNzU2LTIuMDUyIDIuNTItMy4zM3QzLjk5Ni0xLjI3OCAzLjk5NiAxLjI3OCAyLjUyIDMuMzNoMTcuNjc2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0xNy42NzZ6bS02LjUxNi41NzZxMS4xODggMCAyLjAzNC0uODQ2dC44NDYtMi4wMzQtLjg0Ni0yLjAzNC0yLjAzNC0uODQ2LTIuMDM0Ljg0Ni0uODQ2IDIuMDM0Ljg0NiAyLjAzNCAyLjAzNC44NDZ6bTM5LjE2OCAzMS42OHEwIDIuNjI4LTEuNjc0IDQuNzE2dC00LjIzIDMuMjc2LTUuMjAyIDEuNzgyLTUuMDIyLjU5NC01LjAyMi0uNTk0LTUuMjAyLTEuNzgyLTQuMjMtMy4yNzYtMS42NzQtNC43MTZxMC0uMzk2IDEuMjYtMi45MTZ0My4zMTItNi4yODIgMy44NTItNy4wMzggMy42NzItNi42MjQgMi4wMTYtMy42cS42NDgtMS4xODggMi4wMTYtMS4xODh0Mi4wMTYgMS4xODhxLjE0NC4yNTIgMi4wMTYgMy42dDMuNjcyIDYuNjI0IDMuODUyIDcuMDM4IDMuMzEyIDYuMjgyIDEuMjYgMi45MTZ6bS00Ni4wOCAwcTAgMi42MjgtMS42NzQgNC43MTZ0LTQuMjMgMy4yNzYtNS4yMDIgMS43ODItNS4wMjIuNTk0LTUuMDIyLS41OTQtNS4yMDItMS43ODItNC4yMy0zLjI3Ni0xLjY3NC00LjcxNnEwLS4zOTYgMS4yNi0yLjkxNnQzLjMxMi02LjI4MiAzLjg1Mi03LjAzOCAzLjY3Mi02LjYyNCAyLjAxNi0zLjZxLjY0OC0xLjE4OCAyLjAxNi0xLjE4OHQyLjAxNiAxLjE4OHEuMTQ0LjI1MiAyLjAxNiAzLjZ0My42NzIgNi42MjQgMy44NTIgNy4wMzggMy4zMTIgNi4yODIgMS4yNiAyLjkxNnpcIixcIkhPVVJHTEFTU19PXCI6XCJNNTAuNjg4LTU5LjgzMXEwIDkuMzk2LTMuODM0IDE2LjYxNHQtOS41OTQgMTEuMDM0cTUuNzYgMy44MTYgOS41OTQgMTEuMDM0dDMuODM0IDE2LjYxNGgzLjQ1NnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNTIuOTkycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMy40NTZxMC05LjM5NiAzLjgzNC0xNi42MTR0OS41OTQtMTEuMDM0cS01Ljc2LTMuODE2LTkuNTk0LTExLjAzNHQtMy44MzQtMTYuNjE0aC0zLjQ1NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDUyLjk5MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMy40NTZ6bS0xOS4yMjQgMjUuNDg4cTIuNzcyLTEuMDQ0IDUuMzY0LTMuMzN0NC42NjItNS40OSAzLjMzLTcuNTYgMS4yNi05LjEwOGgtMzYuODY0cTAgNC43NTIgMS4yNiA5LjEwOHQzLjMzIDcuNTYgNC42NjIgNS40OSA1LjM2NCAzLjMzcS42ODQuMjUyIDEuMDk4Ljg0NnQuNDE0IDEuMzE0LS40MTQgMS4zMTQtMS4wOTguODQ2cS0yLjc3MiAxLjA0NC01LjM2NCAzLjMzdC00LjY2MiA1LjQ5LTMuMzMgNy41Ni0xLjI2IDkuMTA4aDM2Ljg2NHEwLTQuNzUyLTEuMjYtOS4xMDh0LTMuMzMtNy41Ni00LjY2Mi01LjQ5LTUuMzY0LTMuMzNxLS42ODQtLjI1Mi0xLjA5OC0uODQ2dC0uNDE0LTEuMzE0LjQxNC0xLjMxNCAxLjA5OC0uODQ2elwiLFwiSE9VUkdMQVNTX1NUQVJUXCI6XCJNNTAuNjg4LTU5LjgzMXEwIDkuMzk2LTMuODM0IDE2LjYxNHQtOS41OTQgMTEuMDM0cTUuNzYgMy44MTYgOS41OTQgMTEuMDM0dDMuODM0IDE2LjYxNGgzLjQ1NnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNTIuOTkycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMy40NTZxMC05LjM5NiAzLjgzNC0xNi42MTR0OS41OTQtMTEuMDM0cS01Ljc2LTMuODE2LTkuNTk0LTExLjAzNHQtMy44MzQtMTYuNjE0aC0zLjQ1NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDUyLjk5MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMy40NTZ6bS00LjYwOCAwaC0zNi44NjRxMCAyLjM3Ni4zMjQgNC42MDhoMzYuMjE2cS4zMjQtMi4xOTYuMzI0LTQuNjA4em0wIDU1LjI5NnEwLTQuNjgtMS4yMjQtOC45ODJ0LTMuMjU4LTcuNDg4LTQuNTU0LTUuNDcyLTUuMjU2LTMuNDAyaC04LjI4cS0yLjczNiAxLjExNi01LjI1NiAzLjQwMnQtNC41NTQgNS40NzItMy4yNTggNy40ODgtMS4yMjQgOC45ODJoMzYuODY0elwiLFwiSE9VUkdMQVNTX0hBTEZcIjpcIk01MC42ODgtNTkuODMxcTAgOS4zOTYtMy44MzQgMTYuNjE0dC05LjU5NCAxMS4wMzRxNS43NiAzLjgxNiA5LjU5NCAxMS4wMzR0My44MzQgMTYuNjE0aDMuNDU2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC01Mi45OTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMi4zMDRxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgzLjQ1NnEwLTkuMzk2IDMuODM0LTE2LjYxNHQ5LjU5NC0xMS4wMzRxLTUuNzYtMy44MTYtOS41OTQtMTEuMDM0dC0zLjgzNC0xNi42MTRoLTMuNDU2cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNTIuOTkycS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyLjMwNHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC0zLjQ1NnptLTQuNjA4IDBoLTM2Ljg2NHEwIDcuNDE2IDMuMDYgMTMuODI0aDMwLjc0NHEzLjA2LTYuNDA4IDMuMDYtMTMuODI0em0tMi4wNTIgNDMuNzc2cS0xLjk0NC01LjA3Ni01LjIzOC04LjY5NHQtNy4wMDItNS4xM2gtOC4yOHEtMy43MDggMS41MTItNy4wMDIgNS4xM3QtNS4yMzggOC42OTRoMzIuNzZ6XCIsXCJIT1VSR0xBU1NfRU5EXCI6XCJNNTAuNjg4LTU5LjgzMXEwIDkuMzk2LTMuODM0IDE2LjYxNHQtOS41OTQgMTEuMDM0cTUuNzYgMy44MTYgOS41OTQgMTEuMDM0dDMuODM0IDE2LjYxNGgzLjQ1NnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNTIuOTkycS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuMzA0cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMy40NTZxMC05LjM5NiAzLjgzNC0xNi42MTR0OS41OTQtMTEuMDM0cS01Ljc2LTMuODE2LTkuNTk0LTExLjAzNHQtMy44MzQtMTYuNjE0aC0zLjQ1NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDUyLjk5MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2Mi4zMDRxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMy40NTZ6bS0xOS4yMjQgMjUuNDg4cTIuNzcyLTEuMDQ0IDUuMzY0LTMuMzN0NC42NjItNS40OSAzLjMzLTcuNTYgMS4yNi05LjEwOGgtMzYuODY0cTAgNC43NTIgMS4yNiA5LjEwOHQzLjMzIDcuNTYgNC42NjIgNS40OSA1LjM2NCAzLjMzcS42ODQuMjUyIDEuMDk4Ljg0NnQuNDE0IDEuMzE0LS40MTQgMS4zMTQtMS4wOTguODQ2cS00LjkzMiAxLjgzNi04Ljc4NCA3LjA1NmgyNS4ycS0zLjg1Mi01LjIyLTguNzg0LTcuMDU2LS42ODQtLjI1Mi0xLjA5OC0uODQ2dC0uNDE0LTEuMzE0LjQxNC0xLjMxNCAxLjA5OC0uODQ2elwiLFwiSE9VUkdMQVNTXCI6XCJNNTQuMTQ0LTYuODM5cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY0LjYwOHEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC01Mi45OTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtNC42MDhxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg1Mi45OTJ6bS00OS40NjQtMi4zMDRxLjEwOC0xLjk4LjU3Ni0zLjg1MnQxLjA4LTMuNDIgMS42NTYtMy4xMzIgMS45MjYtMi43MzYgMi4zMjItMi41MDIgMi4zNzYtMi4xNiAyLjUzOC0xLjk4IDIuMzk0LTEuNzEgMi4zNC0xLjU0OHEtMS41NDgtMS4wMDgtMi4zNC0xLjU0OHQtMi4zOTQtMS43MS0yLjUzOC0xLjk4LTIuMzc2LTIuMTYtMi4zMjItMi41MDItMS45MjYtMi43MzYtMS42NTYtMy4xMzItMS4wOC0zLjQyLS41NzYtMy44NTJoNDUuOTM2cS0uMTA4IDEuOTgtLjU3NiAzLjg1MnQtMS4wOCAzLjQyLTEuNjU2IDMuMTMyLTEuOTI2IDIuNzM2LTIuMzIyIDIuNTAyLTIuMzc2IDIuMTYtMi41MzggMS45OC0yLjM5NCAxLjcxLTIuMzQgMS41NDhxMS41NDggMS4wMDggMi4zNCAxLjU0OHQyLjM5NCAxLjcxIDIuNTM4IDEuOTggMi4zNzYgMi4xNiAyLjMyMiAyLjUwMiAxLjkyNiAyLjczNiAxLjY1NiAzLjEzMiAxLjA4IDMuNDIuNTc2IDMuODUyaC00NS45MzZ6bTQ5LjQ2NC01NS4yOTZxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djQuNjA4cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTUyLjk5MnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di00LjYwOHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDUyLjk5MnpcIixcIkhBTkRfUk9DS19PXCI6XCJNMjcuNjQ4LTUwLjYxNXEtMS45MDggMC0zLjI1OCAxLjM1dC0xLjM1IDMuMjU4djQuNjA4aC0xLjE1MnYtMy4zNDhxMC0xLjcyOC0xLjE1Mi0yLjkzNHQtMi44OC0xLjIwNnEtMS42NTYgMC0yLjg0NCAxLjE4OHQtMS4xODggMi44NDR2MTUuNDQ0bC0xLjE1Mi0xLjA4di02LjE5MnEwLTEuNzI4LTEuMTUyLTIuOTM0dC0yLjg4LTEuMjA2cS0xLjY1NiAwLTIuODQ0IDEuMTg4dC0xLjE4OCAyLjg0NHY4LjA2NHEwIDEuNjkyIDEuMjYgMi45NTJsMTEuMTYgMTAuNjU2cTEuNDA0IDEuNDA0IDEuNDA0IDMuNjcyIDAgLjkzNi42ODQgMS42MnQxLjYyLjY4NGgyMy4wNHEuOTM2IDAgMS42Mi0uNjg0dC42ODQtMS42MnYtLjlxMC0xLjQ3Ni4zNi0yLjc3MmwzLjg4OC0xNS42OTZxLjM2LTEuMjk2LjM2LTIuNzcydi04Ljg1NnEwLTEuNzI4LTEuMTUyLTIuOTM0dC0yLjg4LTEuMjA2cS0xLjY1NiAwLTIuODQ0IDEuMTg4dC0xLjE4OCAyLjg0NHYxLjE1MmgtMS4xNTJ2LTQuNXEwLTEuNDQtLjktMi42MXQtMi4zMDQtMS40NThxLS41MDQtLjA3Mi0uODI4LS4wNzItMS42NTYgMC0yLjg0NCAxLjE4OHQtMS4xODggMi44NDR2NC42MDhoLTEuMTUydi00LjM5MnEwLTEuODM2LTEuMTctMy4yMjJ0LTIuOTctMS41NjZxLS4xOC0uMDM2LS40NjgtLjAzNnptMC00LjYwOHEzLjAyNCAwIDUuMzY0IDEuOCAyLjA1Mi0xLjIyNCA0LjQyOC0xLjIyNCAyLjEyNCAwIDMuOTk2Ljk3MnQzLjA5NiAyLjczNnEuOTcyLS4yNTIgMi4xMjQtLjI1MiAzLjYgMCA2LjEyIDIuNTc0dDIuNTIgNi4xNzR2OC44NTZxMCAxLjgzNi0uNDY4IDMuODg4bC0zLjkyNCAxNS42OTZxLS4yMTYuODY0LS4yMTYgMi41NTYgMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNmgtMjMuMDRxLTMuMDI0IDAtNC45NjgtMi4xMDZ0LTEuOTQ0LTUuMTNsLTExLjA4OC0xMC42NTZxLTIuNzM2LTIuNjI4LTIuNzM2LTYuM3YtOC4wNjRxMC0zLjU2NCAyLjUzOC02LjEwMnQ2LjEwMi0yLjUzOHEuMzk2IDAgLjU3Ni4wMzYuMjE2LTMuNDIgMi43MTgtNS43NnQ1LjkyMi0yLjM0cTEuODcyIDAgMy41MjguNzU2IDIuNTkyLTIuNDg0IDYuMjY0LTIuNDg0elwiLFwiSEFORF9TVE9QX09cIjpcIk0zMS42OC01OS44MzFxLTEuNjU2IDAtMi44NDQgMS4xODh0LTEuMTg4IDIuODQ0djIzLjYxNmgtMS4xNTJ2LTE5LjAwOHEwLTEuNjU2LTEuMTg4LTIuODQ0dC0yLjg0NC0xLjE4OC0yLjg0NCAxLjE4OC0xLjE4OCAyLjg0NHYyOC4yMjM5OTk5OTk5OTk5OTdsLTUuNTQ0LTcuMzhxLTEuMzY4LTEuODM2LTMuNjcyLTEuODM2LTEuOTA4IDAtMy4yNTggMS4zNXQtMS4zNSAzLjI1OHEwIDEuNTQ4LjkzNiAyLjc3MmwxMy44MjQgMTguNDMycTEuMzY4IDEuODM2IDMuNjcyIDEuODM2aDI0Ljc2OHExLjIyNCAwIDIuMTk2LS43OTJ0MS4yMjQtMi4wMTZsMi43MzYtMTQuNThxLjE4LTEuMTUyLjE4LTIuMTI0di0xNy45MjhxMC0xLjY1Ni0xLjE4OC0yLjg0NHQtMi44NDQtMS4xODgtMi44NDQgMS4xODgtMS4xODggMi44NDR2OS43OTJoLTEuMTUydi0xOS4wMDhxMC0xLjY1Ni0xLjE4OC0yLjg0NHQtMi44NDQtMS4xODgtMi44NDQgMS4xODgtMS4xODggMi44NDR2MTkuMDA4aC0xLjE1MnYtMjMuNjE2cTAtMS42NTYtMS4xODgtMi44NDR0LTIuODQ0LTEuMTg4em0wLTQuNjA4cTIuNDQ4IDAgNC41MTggMS4yNzh0My4xODYgMy40NzRxLjY4NC0uMTQ0IDEuNTEyLS4xNDQgMy41NjQgMCA2LjEwMiAyLjUzOHQyLjUzOCA2LjEwMnYuNjEycTMuNzgtLjIxNiA2LjQ5OCAyLjMwNHQyLjcxOCA2LjN2MTcuOTI4cTAgMS40NC0uMjg4IDIuOTg4bC0yLjczNiAxNC41NDRxLS41MDQgMi44NDQtMi43NTQgNC43MTZ0LTUuMTY2IDEuODcyaC0yNC43NjhxLTIuMTYgMC00LjEyMi0uOTl0LTMuMjU4LTIuNjgybC0xMy44MjQtMTguNDMycS0xLjgzNi0yLjQ0OC0xLjgzNi01LjU0NCAwLTMuODE2IDIuNy02LjUxNnQ2LjUxNi0yLjdxMi44MDggMCA0LjYwOCAxLjIyNHYtMTUuNjI0cTAtMy41NjQgMi41MzgtNi4xMDJ0Ni4xMDItMi41MzhxLjgyOCAwIDEuNTEyLjE0NCAxLjExNi0yLjE5NiAzLjE4Ni0zLjQ3NHQ0LjUxOC0xLjI3OHpcIixcIkhBTkRfU0NJU1NPUlNfT1wiOlwiTTM4LjYyOC00LjUzNWgtNi4zNzJxLTUuODY4IDAtOC4xMzYtNS4wNzYtLjgyOC0xLjc2NC0uODI4LTMuNjcydi0uMThxLTIuMjMyLTEuMDgtMy41NDYtMy4xODZ0LTEuMzE0LTQuNTlxMC0xLjM2OC4xOC0xLjcyOGgtOS4zOTZxLTMuODE2IDAtNi41MTYtMi43dC0yLjctNi41MTYgMi43LTYuNTE2IDYuNTE2LTIuN2g0LjA2OGwtMS41ODQtLjYxMnEtMi42NjQtMS4wMDgtNC4zMDItMy4zNjZ0LTEuNjM4LTUuMjM4cTAtMy44MTYgMi43LTYuNTE2dDYuNTE2LTIuN3ExLjY1NiAwIDMuMjc2LjYxMmwyMi42MDggOC42MDRoMTQuNDM2cTMuODE2IDAgNi41MTYgMi43dDIuNyA2LjUxNnYyNC4wNDhxMCAzLjE2OC0xLjk0NCA1LjY3dC01LjA0IDMuMjU4bC0xMi4yMDQgMy4wNnEtMy4zMTIuODI4LTYuNjk2LjgyOHptLTEuNzY0LTI1LjU5NmwtNS41OCAyLjU1Ni01Ljg2OCAyLjY2NHEtMS4wOC41MDQtMS43MjggMS40OTR0LS42NDggMi4xNzhxMCAxLjY1NiAxLjE4OCAyLjg0NHQyLjg0NCAxLjE4OHEuOTM2IDAgMS42NTYtLjM2bDEyLjE2OC01LjU0NHEtMS43NjQtLjM2LTIuODk4LTEuOHQtMS4xMzQtMy4yNHYtMS45OHptMTEuNTIgMTEuMTk2cTAtMS42NTYtMS4xODgtMi44NDR0LTIuODQ0LTEuMTg4cS0uOTM2IDAtMS42NTYuMzZsLTEwLjQ0IDQuNzUycS0xLjAwOC40NjgtMS4zMzIuNjEydC0xLjA5OC42MTItMS4wNjIuODQ2LS41NzYgMS4wNDQtLjI4OCAxLjQ1OHEwIDEuOCAxLjEzNCAyLjk1MnQyLjkzNCAxLjE1MnEuNzIgMCAxLjM2OC0uMzI0bDEyLjY3Mi01Ljc2cTEuMDgtLjUwNCAxLjcyOC0xLjQ5NHQuNjQ4LTIuMTc4em0tOC4zNTItMjcuMDcybC0yMy40LTguOTI4cS0uODY0LS4yODgtMS42NTYtLjI4OC0xLjkwOCAwLTMuMjU4IDEuMzV0LTEuMzUgMy4yNThxMCAxLjQ0LjgxIDIuNjI4dDIuMTQyIDEuNjkybDE4LjkzNiA3LjJ2Mi4zMDRoLTIzLjA0cS0xLjkwOCAwLTMuMjU4IDEuMzV0LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1aDE5LjI2bDguMzg4LTMuODE2di03LjEyOHEwLTIuMjY4IDEuNjU2LTMuODE2bDMuOTk2LTMuNjcyaC0yLjQ4NHptLTEuNDA0IDM2Ljg2NHEyLjk1MiAwIDUuNTgtLjY4NGwxMi4yMDQtMy4wNnExLjU0OC0uMzk2IDIuNTItMS42Mzh0Ljk3Mi0yLjgyNnYtMjQuMDQ4cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNWgtMTEuMDg4bC00Ljg5NiA0LjUzNnEtMS4yOTYgMS4xODgtMS4yOTYgMi45NTJ2MTAuNjU2cTAgMS42NTYgMS4xODggMi43NzJ0Mi44NDQgMS4xMTYgMi44NDQtMS4yNiAxLjE4OC0yLjkxNnYtNy40ODhoMS4xNTJ2Ny40ODhxMCAyLjUyLTIuMDUyIDQuMTA0IDEuODcyLjI4OCAzLjExNCAxLjc0NnQxLjI0MiAzLjM2NnEwIDEuNTEyLS44MjggMi44MDh0LTIuMTk2IDEuOTA4bC0xMS4xNiA1LjA3NmgzLjI3NnpcIixcIkhBTkRfTElaQVJEX09cIjpcIk00MS40MzYtNjQuNDM5cTIuMTk2IDAgNC4xNzYgMS4wMDh0My4yNzYgMi43NzJsMjAuNTkyIDI4LjExNnE0LjI0OCA1LjcyNCA0LjI0OCAxMi45MjR2MTIuNzhxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNmgtMTMuODI0cS0yLjg4IDAtNC44OTYtMi4wMTZ0LTIuMDE2LTQuODk2di02LjM3MmwtMTAuMjk2LTUuMTQ4aC0xOS42NTZxLTIuODggMC00Ljg5Ni0yLjAxNnQtMi4wMTYtNC44OTZ2LTEuMTUycTAtNC4yODQgMy4wNDItNy4zMjZ0Ny4zMjYtMy4wNDJoMTUuMTJsMS41MTItNC42MDhoLTI0LjY5NnEtMy42IDAtNi4yNDYtMi40M3QtMi45MzQtNS45OTRxLTIuMzQtMi44NDQtMi4zNC02LjU1MnYtMS4xNTJxMC0yLjg4IDIuMDE2LTQuODk2dDQuODk2LTIuMDE2aDM0LjUyNHptMjcuNjg0IDU3LjZ2LTEyLjc4cTAtNS42NTItMy4zNDgtMTAuMjI0bC0yMC42MjgtMjguMTE2cS0xLjQwNC0xLjg3Mi0zLjcwOC0xLjg3MmgtMzQuNTI0cS0uOTM2IDAtMS42Mi42ODR0LS42ODQgMS42MnEwIDEuMTUyLjA1NCAxLjc4MnQuMzQyIDEuNDU4LjkgMS41NDhxLjM2LTEuMTE2IDEuMjc4LTEuOHQyLjAzNC0uNjg0aDI5Ljk1MnYxLjE1MmgtMjkuOTUycS0uOTM2IDAtMS42Mi42ODR0LS42ODQgMS42MnEwIDEuNTg0LjEwOCAyLjA4OC4yODggMS41ODQgMS41ODQgMi42Mjh0Mi45MTYgMS4wNDRoMjYuMzE2cTEuNDQgMCAyLjQ0OCAxLjAwOHQxLjAwOCAyLjQ0OHEwIC41NC0uMTggMS4wOGwtMi4zMDQgNi45MTJxLS4zNiAxLjA0NC0xLjI2IDEuNzF0LTIuMDE2LjY2NmgtMTUuOTQ4cS0yLjM3NiAwLTQuMDY4IDEuNjkydC0xLjY5MiA0LjA2OHYxLjE1MnEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODRoMjAuMTk2cS41NzYgMCAxLjA0NC4yNTJsMTEuNDEyIDUuNjg4cS44NjQuNDY4IDEuMzg2IDEuMjk2dC41MjIgMS44djcuMDkycTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NGgxMy44MjRxLjkzNiAwIDEuNjItLjY4NHQuNjg0LTEuNjJ6XCIsXCJIQU5EX1NQT0NLX09cIjpcIk0yOS4zNzYtNTkuODMxcS0xLjcyOCAwLTIuODYyIDEuMjI0dC0xLjEzNCAyLjk1MnEwIC41MDQuMTA4IDEuMDA4bDUuNCAyMi40NjRoLS45MzZsLTQuMTc2LTE3LjM1MnEtLjMyNC0xLjM2OC0xLjQyMi0yLjIzMnQtMi41MDItLjg2NHEtMS42OTIgMC0yLjg0NCAxLjIyNHQtMS4xNTIgMi45MTZxMCAuMzk2LjE0NCAxLjA0NC4xMDguNDY4IDEuNDA0IDUuNzk2dDIuNDQ4IDEwLjE1MiAxLjE1MiA0Ljk2OHY4LjE3MmwtMTEuMDUyLTguMjhxLTEuMjI0LS45MzYtMi43NzItLjkzNi0xLjg3MiAwLTMuMjIyIDEuMzE0dC0xLjM1IDMuMTg2cTAgMi40MTIgMi4wMTYgMy45NmwxOC4yNTIgMTMuNjQ0cTEuMjI0LjkzNiAyLjczNi45MzZoMjQuOTg0cTEuMTg4IDAgMi4xMjQtLjczOHQxLjIyNC0xLjg5bDMuNi0xNC40MzZxLjI4OC0xLjA4LjM2LTMuMTY4dC4zMjQtMy4wOTZsNC4xNzYtMTcuMjA4cS4xMDgtLjQzMi4xMDgtLjkzNiAwLTEuNjU2LTEuMTg4LTIuODQ0dC0yLjg4LTEuMTg4cS0xLjM2OCAwLTIuNDg0LjkxOHQtMS40NCAyLjI1bC0zLjU2NCAxNC42ODhoLS45MzZsNC43NTItMTkuNjkycS4xMDgtLjUwNC4xMDgtMS4wMDggMC0xLjY5Mi0xLjE1Mi0yLjg4dC0yLjg4LTEuMTg4cS0xLjM2OCAwLTIuNDY2Ljg2NHQtMS40MjIgMi4yMzJsLTUuMjIgMjEuNjcyaC00LjU3MmwtNS45MDQtMjQuNTUycS0uMzI0LTEuMzY4LTEuNDIyLTIuMjMydC0yLjQ2Ni0uODY0em0yMy4yMiA1OS45MDRoLTI0Ljk4NHEtMy4wNiAwLTUuNTA4LTEuODM2bC0xOC4yNTItMTMuNjhxLTEuOC0xLjM2OC0yLjgyNi0zLjM4NHQtMS4wMjYtNC4yNDhxMC0zLjc4IDIuNy02LjQ0NHQ2LjQ4LTIuNjY0cS45IDAgMS43ODIuMTk4dDEuNDk0LjM5NiAxLjQ3Ni43MzggMS4yNi44MjggMS4zODYgMS4wNjIgMS4zNSAxLjAyNmwtNC40MjgtMTguNDMycS0uMjUyLTEuMjYtLjI1Mi0yLjEyNCAwLTMuMzQ4IDIuMTYtNS44MzJ0NS40NzItMi44NDRxLjUwNC0zLjEzMiAyLjg5OC01LjIwMnQ1LjU5OC0yLjA3cTIuOTg4IDAgNS4zMjggMS44NTR0My4wNiA0Ljc3bDMuNzA4IDE1LjQwOCAyLjk4OC0xMi41MjhxLjcyLTIuOTE2IDMuMDYtNC43N3Q1LjMyOC0xLjg1NHEzLjEzMiAwIDUuNDkgMS45NDR0Mi45NyA1LjAwNHEzLjM0OC4zNiA1LjU4IDIuODA4dDIuMjMyIDUuNzk2cTAgMS4wOC0uMjUyIDIuMDUybC00LjE3NiAxNy4xNzJxLS4xOC43OTItLjE4IDIuNDEyIDAgMS44MzYtLjQ2OCAzLjg4OGwtMy42MzYgMTQuNDM2cS0uNjg0IDIuNy0yLjg2MiA0LjQxdC00Ljk1IDEuNzF6XCIsXCJIQU5EX1BPSU5URVJfT1wiOlwiTTIzLjA0LTU5LjgzMXEtMS45MDggMC0zLjI1OCAxLjM1dC0xLjM1IDMuMjU4djMyLjI1NmwtNS40MzYtNy4yNzJxLTEuNDc2LTEuOTQ0LTMuODUyLTEuOTQ0LTEuODcyIDAtMy4yMDQgMS4zNjh0LTEuMzMyIDMuMjRxMCAxLjU0OC45MzYgMi43NzJsMTMuODI0IDE4LjQzMnExLjM2OCAxLjgzNiAzLjY3MiAxLjgzNmgyNS44NDhxLjc5MiAwIDEuNDIyLS40ODZ0LjgxLTEuMjQybDMuMzEyLTEzLjI0OHEuODY0LTMuNDU2Ljg2NC02Ljk4NHYtNy44MTJxMC0xLjQ3Ni0xLjAwOC0yLjU1NnQtMi40NDgtMS4wOC0yLjQ0OCAxLjAwOC0xLjAwOCAyLjQ0OGgtMS4xNTJ2LTIuMTk2cTAtMS43MjgtMS4xNTItMi45MzR0LTIuODgtMS4yMDZxLTEuNjU2IDAtMi44NDQgMS4xODh0LTEuMTg4IDIuODQ0djIuMzA0aC0xLjE1MnYtMy4yNHEwLTEuOTgtMS4zMzItMy40MDJ0LTMuMjc2LTEuNDIycS0xLjkwOCAwLTMuMjU4IDEuMzV0LTEuMzUgMy4yNTh2My40NTZoLTEuMTUydi0yMC41MnEwLTEuOTgtMS4zMzItMy40MDJ0LTMuMjc2LTEuNDIyem0wLTQuNjA4cTMuODUyIDAgNi41MzQgMi43OXQyLjY4MiA2LjY0MnY3LjkycS43OTItLjA3MiAxLjE1Mi0uMDcyIDMuNTY0IDAgNi4yMjggMi40ODQgMS42OTItLjc1NiAzLjU2NC0uNzU2IDQuMDY4IDAgNi42MjQgMy4xMzIuOTcyLS4yNTIgMi4wMTYtLjI1MiAzLjM4NCAwIDUuNzI0IDIuNDN0Mi4zNCA1LjgxNHY3LjgxMnEwIDQuMTc2LTEuMDA4IDguMWwtMy4zMTIgMTMuMjQ4cS0uNTc2IDIuMzA0LTIuNDQ4IDMuNzYydC00LjI0OCAxLjQ1OGgtMjUuODQ4cS0yLjE2IDAtNC4xMjItLjk5dC0zLjI1OC0yLjY4MmwtMTMuODI0LTE4LjQzMnEtMS44MzYtMi40NDgtMS44MzYtNS41NDQgMC0zLjc4IDIuNjgyLTYuNDk4dDYuNDYyLTIuNzE4cTIuNTU2IDAgNC42OCAxLjI2di0xOS42OTJxMC0zLjgxNiAyLjctNi41MTZ0Ni41MTYtMi43em00LjYwOCA1MC42ODh2LTEzLjgyNGgtMS4xNTJ2MTMuODI0aDEuMTUyem05LjIxNiAwdi0xMy44MjRoLTEuMTUydjEzLjgyNGgxLjE1MnptOS4yMTYgMHYtMTMuODI0aC0xLjE1MnYxMy44MjRoMS4xNTJ6XCIsXCJIQU5EX1BFQUNFX09cIjpcIk00Ni4zNjgtNDEuMTQ3cTIuMTYgMCAzLjg1Mi44MjggNS4wNzYgMi4yNjggNS4wNzYgOC4xMzZ2Ni4zNzJxMCAzLjM4NC0uODI4IDYuNjk2bC0zLjA2IDEyLjIwNHEtLjc1NiAzLjA5Ni0zLjI1OCA1LjA0dC01LjY3IDEuOTQ0aC0yNC4wNDhxLTMuODE2IDAtNi41MTYtMi43dC0yLjctNi41MTZ2LTE0LjQzNmwtOC42MDQtMjIuNjA4cS0uNjEyLTEuNjItLjYxMi0zLjI3NiAwLTMuODE2IDIuNy02LjUxNnQ2LjUxNi0yLjdxMi44OCAwIDUuMjM4IDEuNjM4dDMuMzY2IDQuMzAybC42MTIgMS41ODR2LTQuMDY4cTAtMy44MTYgMi43LTYuNTE2dDYuNTE2LTIuNyA2LjUxNiAyLjcgMi43IDYuNTE2djkuMzk2cS45NzItLjE4IDEuNzI4LS4xOCAyLjQ4NCAwIDQuNTkgMS4zMTR0My4xODYgMy41NDZ6bS03Ljc3Ni0uMjUycS0xLjE4OCAwLTIuMTc4LjY0OHQtMS40OTQgMS43MjhsLTIuNjY0IDUuODY4LTIuNTU2IDUuNThoMS45OHExLjggMCAzLjI0IDEuMTM0dDEuOCAyLjg5OGw1LjU0NC0xMi4xNjhxLjM2LS43Mi4zNi0xLjY1NiAwLTEuNjU2LTEuMTg4LTIuODQ0dC0yLjg0NC0xLjE4OHptNy45NTYgNC44NnEtLjc5MiAwLTEuNDU4LjI4OHQtMS4wNDQuNTc2LS44NDYgMS4wNjItLjYxMiAxLjA5OC0uNjEyIDEuMzMybC00Ljc1MiAxMC40NHEtLjM2LjcyLS4zNiAxLjY1NiAwIDEuNjU2IDEuMTg4IDIuODQ0dDIuODQ0IDEuMTg4cTEuMTg4IDAgMi4xNzgtLjY0OHQxLjQ5NC0xLjcyOGw1Ljc2LTEyLjY3MnEuMzI0LS42NDguMzI0LTEuMzY4IDAtMS44LTEuMTUyLTIuOTM0dC0yLjk1Mi0xLjEzNHptLTQxLjk0LTEyLjkyNHEwIC43OTIuMjg4IDEuNjU2bDguOTI4IDIzLjR2Mi40ODRsMy42NzItMy45OTZxMS41NDgtMS42NTYgMy44MTYtMS42NTZoNy4xMjhsMy44MTYtOC4zODh2LTE5LjI2cTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTh2MjMuMDRoLTIuMzA0bC03LjItMTguOTM2cS0uNTA0LTEuMzMyLTEuNjkyLTIuMTQydC0yLjYyOC0uODFxLTEuOTA4IDAtMy4yNTggMS4zNXQtMS4zNSAzLjI1OHptMzcuODcyIDQ0LjkyOHExLjU4NCAwIDIuODI2LS45NzJ0MS42MzgtMi41MmwzLjA2LTEyLjIwNHEuNjg0LTIuNjI4LjY4NC01LjU4di0zLjI3NmwtNS4wNzYgMTEuMTZxLS42MTIgMS4zNjgtMS45MDggMi4xOTZ0LTIuODA4LjgyOHEtMS45MDggMC0zLjM2Ni0xLjI0MnQtMS43NDYtMy4xMTRxLTEuNTg0IDIuMDUyLTQuMTA0IDIuMDUyaC03LjQ4OHYtMS4xNTJoNy40ODhxMS42NTYgMCAyLjkxNi0xLjE4OHQxLjI2LTIuODQ0LTEuMTE2LTIuODQ0LTIuNzcyLTEuMTg4aC0xMC42NTZxLTEuNzY0IDAtMi45NTIgMS4yOTZsLTQuNTM2IDQuODk2djExLjA4OHEwIDEuOTA4IDEuMzUgMy4yNTh0My4yNTggMS4zNWgyNC4wNDh6XCIsXCJUUkFERU1BUktcIjpcIk0zMC44NTItNDQuODU1djQuMjEycTAgLjQ2OC0uMzQyLjc5MnQtLjgxLjMyNGgtMTAuNzI4djI5LjIzMnEwIC40NjgtLjMyNC44MXQtLjc5Mi4zNDJoLTQuODZxLS40NjggMC0uODEtLjMyNHQtLjM0Mi0uODI4di0yOS4yMzJoLTEwLjY5MnEtLjQ2OCAwLS44MS0uMzI0dC0uMzQyLS43OTJ2LTQuMjEycTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMjguNTQ4cS40NjggMCAuODEuMzQydC4zNDIuODF6bTM3LjM2OC0uMTA4bDIuNzcyIDM0LjU5NnEuMDM2LjQ2OC0uMjg4Ljg2NC0uMzYuMzYtLjgyOC4zNmgtNC44MjRxLS40MzIgMC0uNzU2LS4zMDZ0LS4zNi0uNzM4bC0xLjY1Ni0yMS4xNjgtNi44MDQgMTUuM3EtLjI4OC42ODQtMS4wNDQuNjg0aC00LjMycS0uNzIgMC0xLjA0NC0uNjg0bC02Ljc2OC0xNS4zNzItMS42MiAyMS4yNHEtLjAzNi40MzItLjM2LjczOHQtLjc1Ni4zMDZoLTQuODZxLS40NjggMC0uODI4LS4zNi0uMzI0LS4zNi0uMzI0LS44NjRsMi44MDgtMzQuNTk2cS4wMzYtLjQzMi4zNi0uNzM4dC43NTYtLjMwNmg1LjExMnEuNzIgMCAxLjA0NC42ODRsNy45MiAxOC43MnEuMzYuODY0LjcyIDEuODM2LjEwOC0uMjUyLjM0Mi0uODgydC4zNzgtLjk1NGw3Ljk1Ni0xOC43MnEuMzI0LS42ODQgMS4wNDQtLjY4NGg1LjA3NnEuNDY4IDAgLjc5Mi4zMDZ0LjM2LjczOHpcIixcIlJFR0lTVEVSRURcIjpcIk0zNy41MTItMzkuMTMxcTAtMy4xNjgtMi4xNi00LjM1Ni0xLjE4OC0uNjQ4LTQuMjEyLS42NDhoLTQuNDI4djEwLjExNmg1LjgzMnEyLjM3NiAwIDMuNjcyLTEuMzMydDEuMjk2LTMuNzh6bTEuODcyIDEwLjI2bDcuMzggMTMuNDI4cS4yODguNjEyLS4wMzYgMS4xMTYtLjI4OC41NzYtLjk3Mi41NzZoLTUuNDcycS0uNzIgMC0xLjAwOC0uNjEybC02Ljk4NC0xMy4xNGgtNS41OHYxMi42cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTQuODI0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTM0LjU2cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMTAuNTg0cTQuNjA4IDAgNi44NC44NjQgMy4wNiAxLjExNiA0LjgyNCAzLjkyNHQxLjc2NCA2LjQ4cTAgMy4zMTItMS41MyA1Ljk1OHQtNC4xNTggMy45NDJxLjIxNi4zNi4zMjQuNTc2em0tNy4xMjgtMjkuODA4cS01LjQgMC0xMC4yOTYgMi4xMDZ0LTguNDQyIDUuNjUyLTUuNjUyIDguNDQyLTIuMTA2IDEwLjI5NiAyLjEwNiAxMC4yOTYgNS42NTIgOC40NDIgOC40NDIgNS42NTIgMTAuMjk2IDIuMTA2IDEwLjI5Ni0yLjEwNiA4LjQ0Mi01LjY1MiA1LjY1Mi04LjQ0MiAyLjEwNi0xMC4yOTYtMi4xMDYtMTAuMjk2LTUuNjUyLTguNDQyLTguNDQyLTUuNjUyLTEwLjI5Ni0yLjEwNnptMzIuMjU2IDI2LjQ5NnEwIDYuNTUyLTIuNTU2IDEyLjUyOHQtNi44NzYgMTAuMjk2LTEwLjI5NiA2Ljg3Ni0xMi41MjggMi41NTYtMTIuNTI4LTIuNTU2LTEwLjI5Ni02Ljg3Ni02Ljg3Ni0xMC4yOTYtMi41NTYtMTIuNTI4IDIuNTU2LTEyLjUyOCA2Ljg3Ni0xMC4yOTYgMTAuMjk2LTYuODc2IDEyLjUyOC0yLjU1NiAxMi41MjggMi41NTYgMTAuMjk2IDYuODc2IDYuODc2IDEwLjI5NiAyLjU1NiAxMi41Mjh6XCIsXCJDUkVBVElWRV9DT01NT05TXCI6XCJNMjEuNzgtMjAuMDUxcTUuNTA4IDAgOS4yNTItMy43NDQuNTA0LS42NDguMTA4LTEuMjk2bC0xLjYyLTIuOTUycS0uMjE2LS40NjgtLjg2NC0uNjEyLS41NzYtLjA3Mi0uOTcyLjM5NmwtLjE0NC4xMDhxLS4xNDQuMTQ0LS40MTQuMzZ0LS42My40NjgtLjg0Ni41MjItMS4wMjYuNDg2LTEuMjA2LjM0Mi0xLjM1LjEyNnEtMi43MzYgMC00LjUtMS44dC0xLjc2NC00LjU3MnEwLTIuNzM2IDEuNzI4LTQuNTE4dDQuMzkyLTEuNzgycTEuMzMyIDAgMi41NzQuNTA0dDEuODE4IDEuMDA4bC41NzYuNTA0cS4zOTYuMzk2LjkzNi4zNi41NzYtLjA3Mi44NjQtLjUwNGwxLjkwOC0yLjgwOHEuNDY4LS43Mi0uMDcyLTEuNDA0LS4xMDgtLjE0NC0uMzk2LS40MzJ0LTEuMDgtLjg0Ni0xLjc0Ni0xLjAwOC0yLjQzLS44MS0zLjA5Ni0uMzZxLTUuMzI4IDAtOC44NTYgMy40NzR0LTMuNTI4IDguNjU4cTAgNS4yNTYgMy40OTIgOC42OTR0OC44OTIgMy40Mzh6bTIyLjY4IDBxNS41MDggMCA5LjI1Mi0zLjc0NC41MDQtLjY0OC4xNDQtMS4yOTZsLTEuNjItMi45NTJxLS4yODgtLjUwNC0uOS0uNjEyLS41NzYtLjA3Mi0uOTcyLjM5NmwtLjE0NC4xMDhxLS4xNDQuMTQ0LS40MTQuMzZ0LS42My40NjgtLjg0Ni41MjItMS4wMjYuNDg2LTEuMjA2LjM0Mi0xLjM1LjEyNnEtMi43MzYgMC00LjUtMS44dC0xLjc2NC00LjU3MnEwLTIuNzM2IDEuNzI4LTQuNTE4dDQuMzkyLTEuNzgycTEuMzMyIDAgMi41NzQuNTA0dDEuODE4IDEuMDA4bC41NzYuNTA0cS4zOTYuMzk2LjkzNi4zNi41NzYtLjA3Mi44NjQtLjUwNGwxLjkwOC0yLjgwOHEuNDY4LS43Mi0uMDcyLTEuNDA0LS4xMDgtLjE0NC0uMzk2LS40MzJ0LTEuMDgtLjg0Ni0xLjc0Ni0xLjAwOC0yLjQzLS44MS0zLjA5Ni0uMzZxLTUuMjkyIDAtOC44MzggMy40NzR0LTMuNTQ2IDguNjU4cTAgNS4yNTYgMy40OTIgOC42OTR0OC44OTIgMy40Mzh6bS0xMi4yMDQtMzguNjI4cS01LjQgMC0xMC4yOTYgMi4xMDZ0LTguNDQyIDUuNjUyLTUuNjUyIDguNDQyLTIuMTA2IDEwLjI5NiAyLjEwNiAxMC4yOTYgNS42NTIgOC40NDIgOC40NDIgNS42NTIgMTAuMjk2IDIuMTA2IDEwLjI5Ni0yLjEwNiA4LjQ0Mi01LjY1MiA1LjY1Mi04LjQ0MiAyLjEwNi0xMC4yOTYtMi4xMDYtMTAuMjk2LTUuNjUyLTguNDQyLTguNDQyLTUuNjUyLTEwLjI5Ni0yLjEwNnptMC01Ljc2cTYuNTUyIDAgMTIuNTI4IDIuNTU2dDEwLjI5NiA2Ljg3NiA2Ljg3NiAxMC4yOTYgMi41NTYgMTIuNTI4LTIuNTU2IDEyLjUyOC02Ljg3NiAxMC4yOTYtMTAuMjk2IDYuODc2LTEyLjUyOCAyLjU1Ni0xMi41MjgtMi41NTYtMTAuMjk2LTYuODc2LTYuODc2LTEwLjI5Ni0yLjU1Ni0xMi41MjggMi41NTYtMTIuNTI4IDYuODc2LTEwLjI5NiAxMC4yOTYtNi44NzYgMTIuNTI4LTIuNTU2elwiLFwiR0dcIjpcIk0yNi40OTYtMzUuNjM5bDEzLjgyNCAxMy44MjQtMTMuODI0IDEzLjgyNC0yNC4xOTItMjQuMTkyIDI0LjE5Mi0yNC4xOTIgNi4wNDggNi4wNDgtMy40NTYgMy40NTYtMi41OTItMi41OTItMTcuMjggMTcuMjggMTcuMjggMTcuMjggNi45NDgtNi45NDgtMTAuNDA0LTEwLjMzMnptMjAuNzM2LTIwLjczNmwyNC4xOTIgMjQuMTkyLTI0LjE5MiAyNC4xOTItNi4wNDgtNi4wNDggMy40NTYtMy40NTYgMi41OTIgMi41OTIgMTcuMjgtMTcuMjgtMTcuMjgtMTcuMjgtNi45NDggNi45NDggMTAuNDA0IDEwLjMzMi0zLjQ1NiAzLjQ1Ni0xMy44MjQtMTMuODI0elwiLFwiR0dfQ0lSQ0xFXCI6XCJNMjUuODEyLTE1LjY5NWw5Ljc1Ni05Ljc1Ni0xMC4wNDQtMTAuMDQ0LTMuMTY4IDMuMTY4IDYuOTEyIDYuODc2LTMuNDU2IDMuNDU2LTEwLjA0NC0xMC4wNDQgMTAuMDQ0LTEwLjA0NCAxLjQ0IDEuNDQgMy4xMzItMy4xMzItNC41NzItNC42MDgtMTYuMzQ0IDE2LjM0NHptMTIuODg4LS4yODhsMTYuMzQ0LTE2LjM0NC0xNi4zNDQtMTYuMzQ0LTkuNzU2IDkuNzU2IDEwLjA0NCAxMC4wNDQgMy4xNjgtMy4xNjgtNi45MTItNi44NzYgMy40NTYtMy40NTYgMTAuMDQ0IDEwLjA0NC0xMC4wNDQgMTAuMDQ0LTEuNDQtMS40NC0zLjEzMiAzLjE2OHptMjUuODEyLTE2LjJxMCA2LjU1Mi0yLjU1NiAxMi41Mjh0LTYuODc2IDEwLjI5Ni0xMC4yOTYgNi44NzYtMTIuNTI4IDIuNTU2LTEyLjUyOC0yLjU1Ni0xMC4yOTYtNi44NzYtNi44NzYtMTAuMjk2LTIuNTU2LTEyLjUyOCAyLjU1Ni0xMi41MjggNi44NzYtMTAuMjk2IDEwLjI5Ni02Ljg3NiAxMi41MjgtMi41NTYgMTIuNTI4IDIuNTU2IDEwLjI5NiA2Ljg3NiA2Ljg3NiAxMC4yOTYgMi41NTYgMTIuNTI4elwiLFwiVFJJUEFEVklTT1JcIjpcIk0yMy40MzYtMjguNTQ3cTAgMS40MDQtLjk5IDIuMzk0dC0yLjM1OC45OXEtMS40MDQgMC0yLjM5NC0uOTl0LS45OS0yLjM5NHEwLTEuMzY4Ljk5LTIuMzU4dDIuMzk0LS45OXExLjM2OCAwIDIuMzU4Ljk5dC45OSAyLjM1OHptNDEuNTQ0LS4wMzZxMCAxLjQwNC0uOTkgMi4zOTR0LTIuMzk0Ljk5LTIuMzk0LS45OS0uOTktMi4zOTQuOTktMi4zNzYgMi4zOTQtLjk3MiAyLjM5NC45NzIuOTkgMi4zNzZ6bS0zNy40NC4wMzZxMC0yLjg0NC0yLjAzNC00Ljg5NnQtNC45MTQtMi4wNTItNC45MTQgMi4wMzQtMi4wMzQgNC45MTQgMi4wMzQgNC45MTQgNC45MTQgMi4wMzQgNC45MTQtMi4wMzQgMi4wMzQtNC45MTR6bTQxLjUwOC0uMDM2cTAtMi44OC0yLjAzNC00LjkxNHQtNC45MTQtMi4wMzRxLTIuODQ0IDAtNC44OTYgMi4wMzR0LTIuMDUyIDQuOTE0IDIuMDM0IDQuOTE0IDQuOTE0IDIuMDM0IDQuOTE0LTIuMDM0IDIuMDM0LTQuOTE0em0tMzguNDQ4LjAzNnEwIDQuMTc2LTIuOTM0IDcuMTF0LTcuMDc0IDIuOTM0cS00LjE3NiAwLTcuMTEtMi45NTJ0LTIuOTM0LTcuMDkyIDIuOTUyLTcuMDc0IDcuMDkyLTIuOTM0IDcuMDc0IDIuOTM0IDIuOTM0IDcuMDc0em00MS41NDQtLjAzNnEwIDQuMTQtMi45MzQgNy4wNzR0LTcuMTEgMi45MzRxLTQuMTQgMC03LjA3NC0yLjkzNHQtMi45MzQtNy4wNzQgMi45MzQtNy4wNzQgNy4wNzQtMi45MzRxNC4xNzYgMCA3LjExIDIuOTM0dDIuOTM0IDcuMDc0em0tMzQuNzA0LjEwOHEwLTYuODc2LTQuODc4LTExLjc1NHQtMTEuNzU0LTQuODc4cS00LjUgMC04LjMxNiAyLjIzMnQtNi4wNDggNi4wNjYtMi4yMzIgOC4zMzQgMi4yMzIgOC4zMzQgNi4wNDggNi4wNjYgOC4zMTYgMi4yMzJxNi44NzYgMCAxMS43NTQtNC44Nzh0NC44NzgtMTEuNzU0em0yNC4wNDgtMjAuNjI4cS05LjE0NC0zLjk5Ni0yMC4wMTYtMy45OTYtMTEuNDg0IDAtMjAuNjI4IDMuOTYgNC4yMTIgMCA4LjAyOCAxLjYzOHQ2LjU3IDQuNDEgNC4zOTIgNi41ODggMS42MzggOC4wMjhxMC00LjE0IDEuNTY2LTcuOTAydDQuMjQ4LTYuNDk4IDYuMzktNC40MjggNy44MTItMS44em0xNy4yNDQgMjAuNjI4cTAtNi44NzYtNC44Ni0xMS43NTR0LTExLjczNi00Ljg3OC0xMS43NTQgNC44NzgtNC44NzggMTEuNzU0IDQuODc4IDExLjc1NCAxMS43NTQgNC44NzggMTEuNzM2LTQuODc4IDQuODYtMTEuNzU0em0tOS41NzYtMjAuMzc2aDEzLjc4OHEtMS41ODQgMS44MzYtMi43IDQuMTIydC0xLjQ0IDQuMTIycTMuOTYgNS40MzYgMy45NiAxMi4xMzIgMCA1LjYxNi0yLjc3MiAxMC4zNjh0LTcuNTI0IDcuNTA2LTEwLjMzMiAyLjc1NHEtNC43ODggMC04Ljk2NC0yLjAxNnQtNy4wNTYtNS41OHEtMS42OTIgMi4wMTYtNC42NDQgNi40NDQtLjM5Ni0uNzkyLTEuOTI2LTIuOTd0LTIuNjgyLTMuNTFxLTIuODggMy41NjQtNy4wNzQgNS41OTh0LTguOTgyIDIuMDM0cS01LjU4IDAtMTAuMzMyLTIuNzU0dC03LjUyNC03LjUwNi0yLjc3Mi0xMC4zNjhxMC02LjY5NiAzLjk2LTEyLjEzMi0uMzI0LTEuODM2LTEuNDQtNC4xMjJ0LTIuNy00LjEyMmgxMy4xNHE1LjM2NC0zLjYgMTIuNzgtNS42MzR0MTUuNTUyLTIuMDM0cTguMDY0IDAgMTUuMTU2IDIuMDE2dDEyLjUyOCA1LjY1MnpcIixcIk9ETk9LTEFTU05JS0lcIjpcIk0yMy4wNC0zMS43ODdxLTYuNzY4IDAtMTEuNTU2LTQuNzg4dC00Ljc4OC0xMS41MnEwLTYuNzY4IDQuNzg4LTExLjU1NnQxMS41NTYtNC43ODggMTEuNTU2IDQuNzg4IDQuNzg4IDExLjU1NnEwIDYuNzMyLTQuNzg4IDExLjUydC0xMS41NTYgNC43ODh6bTAtMjQuMzcycS0zLjMxMiAwLTUuNjcgMi4zNTh0LTIuMzU4IDUuNzA2cTAgMy4zMTIgMi4zNTggNS42N3Q1LjY3IDIuMzU4IDUuNjctMi4zNTggMi4zNTgtNS42N3EwLTMuMzQ4LTIuMzU4LTUuNzA2dC01LjY3LTIuMzU4em0xOC44MjggMjYuMzUycS40NjguOTcyLjU0IDEuNzgydC0uMTYyIDEuNDU4LS45NTQgMS4zODYtMS41MyAxLjMzMi0yLjIxNCAxLjQ5NHEtNC4xNCAyLjYyOC0xMS4zNCAzLjM4NGwyLjYyOCAyLjU5MiA5LjYxMiA5LjYxMnExLjA4IDEuMTE2IDEuMDggMi42NjR0LTEuMDggMi42MjhsLS40MzIuNDY4cS0xLjExNiAxLjA4LTIuNjY0IDEuMDh0LTIuNjY0LTEuMDhxLTIuNDEyLTIuNDQ4LTkuNjEyLTkuNjQ4bC05LjYxMiA5LjY0OHEtMS4xMTYgMS4wOC0yLjY2NCAxLjA4dC0yLjYyOC0xLjA4bC0uNDMyLS40NjhxLTEuMTE2LTEuMDgtMS4xMTYtMi42Mjh0MS4xMTYtMi42NjRsOS42MTItOS42MTIgMi41OTItMi41OTJxLTcuMzA4LS43NTYtMTEuNDEyLTMuMzg0LTEuNDA0LS45LTIuMjE0LTEuNDk0dC0xLjUzLTEuMzMyLS45NTQtMS4zODYtLjE2Mi0xLjQ1OC41NC0xLjc4MnEuMzYtLjcyIDEuMDA4LTEuMjZ0MS41MTItLjc5MiAyLjAxNi4wNzIgMi4zNCAxLjI2cS4xOC4xNDQuNTQuMzk2dDEuNTQ4Ljg4MiAyLjQ4NCAxLjA5OCAzLjMxMi44NjQgNC4wNjguMzk2cTMuMjc2IDAgNi4yNjQtLjkxOHQ0LjMyLTEuODE4bDEuMzY4LS45cTEuMTg4LS45MzYgMi4zNC0xLjI2dDIuMDE2LS4wNzIgMS41MTIuNzkyIDEuMDA4IDEuMjZ6XCIsXCJPRE5PS0xBU1NOSUtJX1NRVUFSRVwiOlwiTTMzLjM3Mi00My41NTlxMCAyLjM3Ni0xLjY3NCA0LjA1dC00LjA1IDEuNjc0LTQuMDUtMS42NzQtMS42NzQtNC4wNSAxLjY3NC00LjA1IDQuMDUtMS42NzQgNC4wNSAxLjY3NCAxLjY3NCA0LjA1em03LjcwNCAxMy4wNjhxLS4zNi0uNzItMS4wMDgtMS4xNTJ0LTEuNzEtLjM0Mi0yLjE3OC45OXEtLjM2LjI4OC0xLjA0NC43MnQtMi45MTYgMS4xNTItNC41NzIuNzItNC40NjQtLjY0OC0zLjA5Ni0xLjI5NmwtLjk3Mi0uNjQ4cS0xLjExNi0uOS0yLjE3OC0uOTl0LTEuNzEuMzQyLTEuMDA4IDEuMTUycS0uNzkyIDEuNjItLjA3MiAyLjY4MnQzLjEzMiAyLjY0NnEyLjk4OCAxLjkwOCA4LjEzNiAyLjQxMmwtMS44MzYgMS44NzJxLTUuMTEyIDUuMTEyLTYuODc2IDYuODQtLjc5Mi43OTItLjc5MiAxLjg5dC43OTIgMS44OWwuMzI0LjMyNHEuNzkyLjc5MiAxLjg5Ljc5MnQxLjg5LS43OTJsNi44NzYtNi44NzZxNC4xMDQgNC4xNCA2Ljg3NiA2Ljg3Ni43OTIuNzkyIDEuODkuNzkydDEuODktLjc5MmwuMzI0LS4zMjRxLjc5Mi0uNzkyLjc5Mi0xLjg5dC0uNzkyLTEuODlsLTYuODc2LTYuODQtMS44NzItMS44NzJxNS4wNzYtLjUwNCA4LjEtMi40MTIgMi40MTItMS41ODQgMy4xMzItMi42NDZ0LS4wNzItMi42ODJ6bS0xLjc2NC0xMy4wNjhxMC00LjgyNC0zLjQyLTguMjQ0dC04LjI0NC0zLjQyLTguMjQ0IDMuNDItMy40MiA4LjI0NCAzLjQyIDguMjQ0IDguMjQ0IDMuNDIgOC4yNDQtMy40MiAzLjQyLTguMjQ0em0xNS45ODQtNS45MDR2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiR0VUX1BPQ0tFVFwiOlwiTTU2LjM0LTU5LjgzMXEyLjM0IDAgMy45NiAxLjYzOHQxLjYyIDMuOTc4djE4LjY4NHEwIDYuMzM2LTIuNDQ4IDEyLjA5NnQtNi41NyA5LjktOS44NjQgNi41Ny0xMi4wNDIgMi40M3EtNi4zMzYgMC0xMi4wNzgtMi40M3QtOS44ODItNi41Ny02LjU4OC05LjktMi40NDgtMTIuMDk2di0xOC42ODRxMC0yLjMwNCAxLjY1Ni0zLjk2dDMuOTYtMS42NTZoNTAuNzI0em0tMjUuMzQ0IDM4LjMwNHExLjY5MiAwIDIuOTUyLTEuMTg4bDE0LjU0NC0xMy45NjhxMS4zMzItMS4yNiAxLjMzMi0zLjA2IDAtMS43NjQtMS4yNDItMy4wMDZ0LTMuMDA2LTEuMjQycS0xLjY5MiAwLTIuOTUyIDEuMTg4bC0xMS42MjggMTEuMTYtMTEuNjI4LTExLjE2cS0xLjI2LTEuMTg4LTIuOTE2LTEuMTg4LTEuNzY0IDAtMy4wMDYgMS4yNDJ0LTEuMjQyIDMuMDA2cTAgMS44MzYgMS4yOTYgMy4wNmwxNC41OCAxMy45NjhxMS4xODggMS4xODggMi45MTYgMS4xODh6XCIsXCJXSUtJUEVESUFfV1wiOlwiTTUzLjc4NC01LjQzNWwtMTAuNjItMjUuMDJxLS45IDEuNzY0LTUuNzA2IDEwLjk5OHQtNy4xNDYgMTQuMDIycS0uMDM2LjAzNi0uOTkuMDE4dC0uOTU0LS4wNTRxLTIuOTUyLTYuOTQ4LTkuMTk4LTIxLjEzMnQtOS4zNDItMjEuNDU2cS0uNzU2LTEuOC0yLjM5NC0zLjg3dC0zLjcyNi0zLjYxOC0zLjY3Mi0xLjU0OGwtLjAxOC0uODY0LS4wMTgtLjk3MmgyMC45ODh2MS44cS0xLjQwNC4wNzItMi44NjIuNTc2dC0yLjM5NCAxLjU0OC0uMzYgMi4zMDRxLjkzNiAyLjEyNCA3Ljc5NCAxNy45NjR0OC40NzggMTkuNDRxMS4xMTYtMi4xOTYgNS4wNC05LjU5NHQ0LjcxNi04LjkxcS0uNjg0LTEuNDA0LTQuNTM2LTEwLjExNnQtNC44OTYtMTAuNjJxLTEuMzY4LTIuNDg0LTcuMjM2LTIuNTU2di0xLjhsMTguNDY4LjAzNnYxLjY5MnEtMi4xNi4wNzItMy4zNjYuOXQtLjQ1IDIuNDg0cTEuMTg4IDIuNTIgMy4xMzIgNi44MjJ0My4wOTYgNi43NXEzLjk2LTcuNzA0IDYuMjI4LTEzLjA2OC44NjQtMS45OC0uMzYtMi44NjJ0LTQuNjQ0LS45NTRxLjAzNi0uMjUyLjAzNi0uOXYtLjg2NHEyLjMwNCAwIDYuMTM4LS4wMTh0Ni40OC0uMDM2IDMuMzMtLjAxOHYxLjc2NHEtMi4yMzIuMDcyLTQuMjg0IDEuMTg4dC0zLjI0IDIuOTE2bC03LjY2OCAxNS45MTJxLjQ2OCAxLjE4OCA0LjU5IDEwLjQ0dDQuMzc0IDkuODY0bDE1Ljg3Ni0zNi42MTJxLS41MDQtMS4zNjgtMS43ODItMi4yNXQtMi4zNC0xLjEzNC0xLjk5OC0uMjg4di0xLjhsMTYuNTYuMTQ0LjAzNi4wNzItLjAzNiAxLjU4NHEtNS4wMDQuMTQ0LTcuMjM2IDUuMjItMTguOTM2IDQzLjc3Ni0yMC4xMjQgNDYuNDc2aC0xLjc2NHpcIixcIlNBRkFSSVwiOlwiTTM0LjE2NC0zMi4yOTFxMCAuOTM2LS41OTQgMS42MnQtMS40OTQuNjg0cS0uOTM2IDAtMS42Mi0uNTk0dC0uNjg0LTEuNDk0cTAtLjkzNi42MTItMS42MnQxLjUxMi0uNjg0IDEuNTg0LjU5NC42ODQgMS40OTR6bS41NCAyLjA4OGwxMi42LTIwLjkxNnEtLjMyNC4yODgtMi40MyAyLjI1dC00LjUxOCA0LjE5NC00LjkxNCA0LjU3Mi00LjIxMiAzLjk3OC0xLjgxOCAxLjg1NGwtMTIuNTY0IDIwLjg4cS4yNTItLjI1MiAyLjQxMi0yLjIzMnQ0LjUzNi00LjE5NCA0Ljg5Ni00LjU3MiA0LjIxMi0zLjk5NiAxLjgtMS44MTh6bTIzLjI5Mi0xLjk4cTAgNy4yMzYtMy43NDQgMTMuMzU2LS4xMDgtLjA3Mi0uNjEyLS4zOTZ0LS45NTQtLjU5NC0uNTk0LS4yN3EtLjQ2OCAwLS40NjguNDY4IDAgLjM2IDIuMTI0IDEuNTg0LTIuNjY0IDQuMDMyLTYuNjQyIDYuODU4dC04LjY5NCAzLjk3OGwtLjU3Ni0yLjQxMnEtLjAzNi0uMzYtLjU0LS4zNi0uMTggMC0uMjg4LjE5OHQtLjA3Mi4zNDJsLjU3NiAyLjQ0OHEtMi41OTIuNTQtNS4yNTYuNTQtNy4xNjQgMC0xMy4zOTItMy43OC4wMzYtLjA3Mi40NjgtLjczOHQuNzc0LTEuMjA2LjM0Mi0uNjg0cTAtLjQ2OC0uNDY4LS40NjgtLjIxNiAwLS42MTIuNTIydC0uODEgMS4yNDItLjQ4Ni44MjhxLTQuMDY4LTIuNy02LjkxMi02Ljc1dC0zLjk2LTguODAybDIuNDg0LS41NHEuMzYtLjEwOC4zNi0uNTQgMC0uMTgtLjE5OC0uMjg4dC0uMzc4LS4wNzJsLTIuNDQ4LjU0cS0uNTA0LTIuNTkyLS41MDQtNS4wMDQgMC03LjQxNiAzLjkyNC0xMy42NDQuMDcyLjAzNi42NjYuNDMydDEuMDguNjg0LjYzLjI4OHEuNDY4IDAgLjQ2OC0uNDMyIDAtLjIxNi0uNDUtLjU1OHQtMS4xNy0uNzc0bC0uNzItLjQzMnEyLjc3Mi00LjAzMiA2LjgwNC02LjgwNHQ4Ljc4NC0zLjg1MmwuNTQgMi40MTJxLjA3Mi4zNi41NC4zNi4xOCAwIC4yODgtLjE5OHQuMDcyLS4zNzhsLS41NC0yLjM3NnEyLjU1Ni0uNDY4IDQuODI0LS40NjggNy4zNDQgMCAxMy42NDQgMy45MjQtMS40MDQgMi4wMTYtMS40MDQgMi4zNCAwIC40NjguNDMyLjQ2OC4zOTYgMCAxLjcyOC0yLjMwNCAzLjk5NiAyLjcgNi43NSA2LjY5NnQzLjg3IDguNjc2bC0yLjAxNi40MzJxLS4zNi4wNzItLjM2LjU3NiAwIC4xOC4xOTguMjg4dC4zNDIuMDcybDIuMDUyLS40NjhxLjUwNCAyLjU5Mi41MDQgNS4wNHptMy4wNiAwcTAtNS44NjgtMi4yODYtMTEuMTk2dC02LjEzOC05LjE4LTkuMTgtNi4xMzgtMTEuMTk2LTIuMjg2LTExLjE5NiAyLjI4Ni05LjE4IDYuMTM4LTYuMTM4IDkuMTgtMi4yODYgMTEuMTk2IDIuMjg2IDExLjE5NiA2LjEzOCA5LjE4IDkuMTggNi4xMzggMTEuMTk2IDIuMjg2IDExLjE5Ni0yLjI4NiA5LjE4LTYuMTM4IDYuMTM4LTkuMTggMi4yODYtMTEuMTk2em0zLjQ1NiAwcTAgNi41NTItMi41NTYgMTIuNTI4dC02Ljg3NiAxMC4yOTYtMTAuMjk2IDYuODc2LTEyLjUyOCAyLjU1Ni0xMi41MjgtMi41NTYtMTAuMjk2LTYuODc2LTYuODc2LTEwLjI5Ni0yLjU1Ni0xMi41MjggMi41NTYtMTIuNTI4IDYuODc2LTEwLjI5NiAxMC4yOTYtNi44NzYgMTIuNTI4LTIuNTU2IDEyLjUyOCAyLjU1NiAxMC4yOTYgNi44NzYgNi44NzYgMTAuMjk2IDIuNTU2IDEyLjUyOHpcIixcIkNIUk9NRVwiOlwiTTMyLjE0OC02NC40MzlxOC42NC0uMDcyIDE2LjIzNiA0LjMyIDguMzUyIDQuODI0IDEyLjY3MiAxMy4zOTJsLTI2LjcxMi0xLjQwNHEtNS43Ni0uMzI0LTEwLjU4NCAyLjY4MnQtNi42NiA4LjI2MmwtOS45MzYtMTUuMjY0cTQuNjA4LTUuNzI0IDExLjE5Ni04LjgzOHQxMy43ODgtMy4xNXptLTI2Ljg5MiAxNC41OGwxMi4xMzIgMjMuODY4cTIuNTkyIDUuMTQ4IDcuNTk2IDcuODEydDEwLjU0OCAxLjYybC04LjI4IDE2LjIzNnEtNy42MzItMS4xODgtMTMuODYtNS42N3QtOS44MS0xMS4zNzYtMy41ODItMTQuODE0cTAtOS42MTIgNS4yNTYtMTcuNjc2em01Ny4wOTYgNi4wODRxMi4wODggNS40IDIuMTQyIDExLjE3OHQtMS43NDYgMTEuMDE2LTUuNTA4IDkuNzkyLTguODU2IDcuNTQycS04LjI4IDQuNzg4LTE3LjkyOCA0LjI4NGwxNC41OC0yMi40MjhxMy4xNjgtNC43MTYgMi45Ny0xMC40NTh0LTMuODM0LTkuOTl6bS0zMC4wOTYuNzJxNC41IDAgNy42ODYgMy4xODZ0My4xODYgNy42ODYtMy4xODYgNy42ODYtNy42ODYgMy4xODYtNy42ODYtMy4xODYtMy4xODYtNy42ODYgMy4xODYtNy42ODYgNy42ODYtMy4xODZ6XCIsXCJGSVJFRk9YXCI6XCJNMzIuNTA4LjA3M3EtMTAuMTg4IDAtMTguMTYyLTUuNDE4dC0xMS44NjItMTQuMzQ2cS0yLjA4OC00LjcxNi0yLjQxMi0xMC44MzZ0LjkzNi0xMS45NyAzLjk5Ni0xMS4yMzIgNi40NDQtOC43M2wtLjM5NiAxMC4xMTZxLjM5Ni0uNTA0IDIuNDQ4LS41NTh0Mi41Mi41NThxMS41MTItMi45MTYgNS43NzgtNC45Njh0OC40NDItMi4xMjRxLTEuOTQ0IDEuNjItNC4zMDIgNS4zNDZ0LTIuMTA2IDUuODg2cS45LjI4OCAyLjI1LjQ4NnQyLjI2OC4yNyAyLjQ0OC4xNDQgMS44MTguMTA4cS41NC4xOC4zNDIgMS42Mzh0LTEuMDk4IDIuNzE4cS0uMTguMjUyLS41OTQuNjY2dC0yLjAzNCAxLjI3OC0zLjYzNiAxLjIyNGwuNTQgNi44MDQtNS4wMDQtMi40MTJxLS42NDggMS41NDgtLjI3IDIuOTM0dDEuMjk2IDIuMzk0IDIuMzU4IDEuNDk0IDIuOTE2LjIzNHExLjgzNi0uMzI0IDMuNTI4LTEuMjQydDMuMDA2LTEuNjIgMi42NDYtLjYzcTIuMTk2LjE0NCAzLjIyMiAxLjE4OHQuNzAyIDIuMzRxLS4wMzYuMDcyLS4wOS4xOTh0LS4zMDYuNDUtLjY0OC41NTgtMS4xMzQuMzc4LTEuNjc0LjAzNnEtMi4xNiAzLjQyLTUuMjAyIDQuODc4dC03LjU0MiAxLjA2MnEyLjY2NCAyLjE5NiA1Ljg1IDIuOTd0Ni4wNjYuMjE2IDUuNTYyLTEuODcyIDQuNjA4LTMuMTUgMi44OTgtMy43NDRxMS41NDgtMy4yNzYgMS40MDQtNi45M3QtMS4zNS02Ljc4Ni0yLjgyNi00LjVxMy4xMzIgMS4zNjggNC45MzIgMi44NjJ0Mi43NzIgNC4wNXEuNTQtNi4xMi0yLjA3LTEyLjM0OHQtNy41NDItMTAuMjI0cTkuNTQgMi43NzIgMTQuODMyIDEwLjA2MnQ1LjQzNiAxOC42M3EuMDcyIDQuNTcyLTEuNDU4IDkuMTh0LTQuNDQ2IDguNTY4LTYuODA0IDcuMDU2LTguOTEgNC44NzgtMTAuMzg2IDEuNzgyelwiLFwiT1BFUkFcIjpcIk01My43NDgtNTYuMjMxcS01Ljk0LTMuOTYtMTIuOTI0LTMuOTYtNS41OCAwLTEwLjU0OCAyLjYyOHQtOC42NCA3LjJxLTIuNyAzLjM0OC00LjMwMiA3Ljg0OHQtMS43NDYgOS41NzZ2MS41MTJxLjE0NCA1LjA3NiAxLjc0NiA5LjU3NnQ0LjMwMiA3Ljg0OHEzLjY3MiA0LjU3MiA4LjY0IDcuMnQxMC41NDggMi42MjhxNi45ODQgMCAxMi45MjQtMy45Ni00LjM1NiAzLjg4OC05Ljg4MiA2LjA0OHQtMTEuNjEgMi4xNnEtMS4wNDQgMC0xLjU0OC0uMDM2LTYuMy0uMjg4LTExLjk4OC0yLjk1MnQtOS43OTItNi45NDgtNi41MTYtMTAuMTE2LTIuNDEyLTEyLjIwNHEwLTYuNTUyIDIuNTU2LTEyLjUyOHQ2Ljg3Ni0xMC4yOTYgMTAuMjk2LTYuODc2IDEyLjUyOC0yLjU1NmguMTA4cTYuMDQ4LjAzNiAxMS41MzggMi4xNzh0OS44NDYgNi4wM3ptMTAuNzY0IDI0LjA0OHEwIDYuOTEyLTIuNzcyIDEzLjA1dC03LjY2OCAxMC42NzRxLTMuNzQ0IDIuMjY4LTcuOTkyIDIuMjY4LTQuOTMyIDAtOS4xOC0zLjAyNCA1LjU0NC0yLjAxNiA5LjEyNi04LjM4OHQzLjU4Mi0xNC41OHEwLTguMTcyLTMuNTY0LTE0LjU0NHQtOS4xMDgtOC40MjRxNC4yODQtMi45ODggOS4xNDQtMi45ODggNC4yODQgMCA4LjEzNiAyLjM0IDQuODYgNC41IDcuNTc4IDEwLjYydDIuNzE4IDEyLjk5NnpcIixcIklOVEVSTkVUX0VYUExPUkVSXCI6XCJNNjQuNTEyLTMwLjcwN3EwIDIuMDE2LS4yNTIgMy43NDRoLTQxLjQzNnEwIDUuMjU2IDMuOTQyIDguODAydDkuMjcgMy41NDZxMy41NjQgMCA2LjY3OC0xLjY3NHQ0LjkxNC00LjY5OGgxNS4yMjhxLTIuMDE2IDUuNzI0LTYuMTM4IDEwLjExNnQtOS42MyA2Ljc4Ni0xMS41NTYgMi4zOTRxLTYuNzMyIDAtMTIuODE2LTIuOTg4LTguMjA4IDQuMTc2LTE0LjE4NCA0LjE3Ni04LjUzMiAwLTguNTMyLTkuNDY4IDAtNC4xNCAxLjYyLTkuOS42MTItMi4xNiAzLjkyNC04LjI0NCA3LjE2NC0xMi45NiAxNy4xLTIxLjgxNi02LjYyNCAyLjg0NC0xNS4zNzIgMTIuNzQ0IDIuMjY4LTkuODY0IDEwLjIwNi0xNi4xODJ0MTguMDU0LTYuMzE4cTEuMDggMCAxLjYyLjAzNiA5LjE4LTQuMjEyIDE1LjU4OC00LjIxMiAyLjMwNCAwIDQuMTc2LjQ2OHQzLjQwMiAxLjQ1OCAyLjM5NCAyLjc1NC44NjQgNC4xNHEwIDQuMTc2LTIuNyAxMC4yOTYgMy42MzYgNi41NTIgMy42MzYgMTQuMDR6bS0yLjUyLTIzLjA0cTAtMi45ODgtMS45MDgtNC43NTJ0LTQuOTMyLTEuNzY0cS0zLjg4OCAwLTkuMTQ0IDIuNTIgNC4zNTYgMS42OTIgOC4wMSA0LjczNHQ2LjEzOCA3LjAzOHExLjgzNi00Ljg2IDEuODM2LTcuNzc2em0tNTcuMzg0IDQ0LjUzMnEwIDMuMDk2IDEuNzQ2IDQuNzd0NC44NDIgMS42NzRxNC4xNCAwIDkuNTc2LTIuOTg4LTQuMzkyLTIuNTkyLTcuNjg2LTYuNTg4dC00Ljk1LTguODJxLTMuNTI4IDcuMzgtMy41MjggMTEuOTUyem0xOC4xNDQtMjUuNjY4aDI2LjIwOHEtLjE4LTUuMTEyLTQuMDY4LTguNTMydC05LjAzNi0zLjQycS01LjE4NCAwLTkuMDU0IDMuNDJ0LTQuMDUgOC41MzJ6XCIsXCJUVlwiOlwiTTY0LjUxMi0xOS41MTF2LTM0LjU2cTAtLjQ2OC0uMzQyLS44MXQtLjgxLS4zNDJoLTU3LjZxLS40NjggMC0uODEuMzQydC0uMzQyLjgxdjM0LjU2cTAgLjQ2OC4zNDIuODF0LjgxLjM0Mmg1Ny42cS40NjggMCAuODEtLjM0MnQuMzQyLS44MXptNC42MDgtMzQuNTZ2MzQuNTZxMCAyLjM3Ni0xLjY5MiA0LjA2OHQtNC4wNjggMS42OTJoLTI2LjQ5NnY0LjYwOGgxMi42NzJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djIuMzA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTI5Ljk1MnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDEyLjY3MnYtNC42MDhoLTI2LjQ5NnEtMi4zNzYgMC00LjA2OC0xLjY5MnQtMS42OTItNC4wNjh2LTM0LjU2cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoNTcuNnEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4elwiLFwiQ09OVEFPXCI6XCJNNC45NjgtNTkuODMxaDcuMDkycS0yLjUyIDIuMzA0LTQuNTM2IDUuMzY0LTEuMjk2IDIuMDE2LTIuMTI0IDQuMTR0LTEuMDggNC41MTgtLjMwNiA0LjMyLjM3OCA0Ljc1Mi43NTYgNC41MzYgMS4wMDggNC45MTRsLjIxNiAxLjAwOHExLjgzNiA4LjU2OCAyLjkxNiAxMS44NDQgMi4wNTIgNi4xNTYgNS40NzIgOS45aC05Ljc5MnEtMS43MjggMC0yLjk1Mi0xLjIyNHQtMS4yMjQtMi45NTJ2LTQ2Ljk0NHEwLTEuNzI4IDEuMjI0LTIuOTUydDIuOTUyLTEuMjI0em00My40ODggMGgxMS4wODhxMS43MjggMCAyLjk1MiAxLjIyNHQxLjIyNCAyLjk1MnY0Ni45NDRxMCAxLjcyOC0xLjIyNCAyLjk1MnQtMi45NTIgMS4yMjRoLTYuNDA4cTcuNjMyLTcuNTYgNy4wNTYtMjAuMzRsLTE2Ljg4NCAzLjYzNnEtLjA3MiAxLjYyLS40MzIgMi45NTJ0LTEuMTE2IDIuNTkyLTIuMTQyIDIuMTQyLTMuMzY2IDEuMzE0cS00LjQyOC45MzYtNy4xNjQtMS40NC0xLjE1Mi0uOTcyLTEuOTA4LTIuMTk2dC0xLjg1NC00LjY0NC0yLjMyMi05LjI4OHEtMS4yNi01Ljg2OC0xLjYzOC05LjQ2OHQtLjE5OC01LjAwNC44MjgtMi43NzJxLjcyLTEuNDc2IDIuMjUtMi42Mjh0My42OS0xLjYycTEuNjItLjQzMiAzLjAwNi0uMjM0dDIuNDEyLjYxMiAxLjk0NCAxLjI2IDEuNTQ4IDEuNzI4IDEuMjQyIDIuMDM0bDE2Ljg0OC0zLjZxLTIuNDQ4LTYuMy02LjQ4LTEwLjMzMnpcIixcIjUwMFBYXCI6XCJNNTAuNDM2LTguNzQ3bC0uMjE2LjIxNnEtNC4wNjggNC4xMDQtOS4zMjQgNi4zLTUuNTQ0IDIuMzA0LTExLjQxMiAyLjMwNC01Ljk0IDAtMTEuNDEyLTIuMzA0LTUuMzI4LTIuMjY4LTkuMzI0LTYuMy00LjA2OC00LjAzMi02LjMtOS4yODgtMS41MTItMy43MDgtMS45NDQtNi44MDQtLjE0NC0xLjAwOCAxLjcyOC0xLjI5NiAxLjgzNi0uMjg4IDIuMDE2LjcybC4wMzYuMTQ0cS42NDggMy4yNCAxLjY1NiA1LjcyNCAxLjggNC40NjQgNS40NzIgOC4xMzYgMy41MjggMy41MjggOC4xMzYgNS40NzIgNC43NTIgMi4wMTYgOS45MzYgMi4wMTYgNS4xNDggMCA5LjkzNi0yLjAxNiA0LjYwOC0xLjk4IDguMS01LjQ3MmwuMjE2LS4yMTZxLjM2LS4zNi45LS4yMTYuNDMyLjEwOCAxLjE4OC43OTIgMS4yOTYgMS4zMzIuNjEyIDIuMDg4em0tMTYuOTkyLTIyLjE0bC0yLjM3NiAyLjM3NiAyLjI2OCAyLjI2OHEuNzU2Ljc1Ni0uMjUyIDEuNzY0LS42MTIuNjEyLTEuMTUyLjYxMi0uMzYgMC0uNjg0LS4zNmwtMi4yMzItMi4xOTYtMi4zNzYgMi4zNzZxLS4xOC4xOC0uNTQuMTgtLjU0IDAtMS4xMTYtLjU3NmwtLjA3Mi0uMDcycS0uNjQ4LS41NC0uNjQ4LTEuMDQ0IDAtLjI1Mi4yODgtLjYxMmwyLjM3Ni0yLjM0LTIuMzc2LTIuMzc2cS0uNTc2LS41NzYuNTA0LTEuNjIuNjQ4LS42NDggMS4xMTYtLjY0OC4yMTYgMCAuNDY4LjE4bDIuMzQgMi4zNzYgMi4zNC0yLjM0cS42NDgtLjYxMiAxLjcyOC40NjguOTcyLjk3Mi4zOTYgMS41ODR6bTE2Ljk1NiAyLjA1MnEwIDQuMjQ4LTEuNjU2IDguMjA4LTEuNjIgMy43OC00LjUzNiA2LjY5Ni0yLjg4IDIuODgtNi43MzIgNC41MzZ0LTguMjA4IDEuNjU2LTguMjA4LTEuNjU2LTYuNzMyLTQuNTM2cS0yLjk1Mi0yLjk1Mi00LjUtNi42OTYtLjU0LTEuMTUyLS41NC0xLjQ0aC0uMDM2cS0uMzI0LS45NzIgMS41NDgtMS41ODQgMS44LS41NzYgMi4xNi40MzIgMS4zMzIgMy41NjQgMy40OTIgNi4wMTJoLjAzNnYtMTIuMjc2cS4xMDgtNC44OTYgMy42NzItOC4zNTIgMy43OC0zLjcwOCA5LjEwOC0zLjcwOCA1LjI5MiAwIDkuMDM2IDMuNzA4dDMuNzQ0IDguOTY0cTAgNS4yOTItMy43NjIgOS4wMzZ0LTkuMDE4IDMuNzQ0cS0yLjA4OCAwLTQuMDMyLS41NzYtMS4wMDgtLjM5Ni0uNDY4LTIuMTk2LjU3Ni0xLjgzNiAxLjU4NC0xLjU0OGwuNTA0LjEwOHEuNTA0LjEwOCAxLjE3LjIxNnQxLjA5OC4xMDhxMy43NDQgMCA2LjMzNi0yLjU3NHQyLjU5Mi02LjI4MnEwLTMuNjM2LTIuNTkyLTYuMTU2LTIuNTU2LTIuNTU2LTYuMy0yLjU1Ni0zLjg1MiAwLTYuNDA4IDIuODgtMi4zMDQgMi41OTItMi4zMDQgNS43NnYxNC44NjhxMy45NiAyLjQxMiA4LjcxMiAyLjQxMiAzLjQ1NiAwIDYuNjYtMS4zMTR0NS42MTYtMy43MjYgMy43MjYtNS41OCAxLjMxNC02LjU4OHEwLTcuMTI4LTUuMDc2LTEyLjIwNC01LjA0LTUuMDQtMTIuMjA0LTUuMDQtNy4yIDAtMTIuMjQgNS4wNC0xLjkwOCAxLjkwOC0yLjc3MiAzLjEzMmwtLjA3Mi4wNzJxLS4yODguMzk2LS40NjguNTU4dC0uNzc0LjM0Mi0xLjM4Ni0uMTA4cS0uNzU2LS4xOC0xLjMxNC0uNTk0dC0uNTU4LS45NTR2LTI0LjQ4cTAtLjU0LjM3OC0uOTU0dC45OS0uNDE0aDMxLjU3MnExLjA4IDAgMS4wOCAxLjk4dC0xLjA4IDEuOThoLTI5LjE5NnYxNy4zODhoLjAzNnExLjQ0LTEuNTEyIDMuNjcyLTMuMDI0dDMuODg4LTIuMTk2cTMuOTI0LTEuNjU2IDguMzE2LTEuNjU2IDQuMzU2IDAgOC4yMDggMS42NTZ0Ni43MzIgNC41MzZxMi45MTYgMi45MTYgNC41MzYgNi42OTYgMS42NTYgNC4wMzIgMS42NTYgOC4yNDR6bS0xLjExNi0yMC45MTZxLjMyNC4yODguMzI0LjY0OHQtLjE5OC42NDgtLjU5NC43NTZxLS45MzYuOTM2LTEuNDA0LjkzNi0uMzI0IDAtLjU3Ni0uMjUyLTMuODE2LTMuMjc2LTcuNDUyLTQuNzg4LTQuNjA4LTIuMDE2LTkuOTM2LTIuMDE2LTQuNzg4IDAtOS40MzIgMS43NjQtLjk3Mi4zNi0xLjYyLTEuMzMyLS4zMjQtLjktLjI4OC0xLjM2OC4xMDgtLjU3Ni41NzYtLjcyIDQuNjgtMi4wNTIgMTAuNzY0LTIuMDUyIDUuOTA0IDAgMTEuMzc2IDIuMzA0IDQuOTMyIDIuMDg4IDguNDYgNS40NzJ6XCIsXCJBTUFaT05cIjpcIk01NS44MzYtMTEuMzAzcS41NC0uMjE2LjkzNi0uMTA4dC4zOTYuNjMtLjU0IDEuMjA2cS0uNDY4LjU3Ni0xLjU4NCAxLjU2NnQtMy40MzggMi40NDgtNS4wNzYgMi42NjQtNi43NjggMi4wODgtOC4yNjIuODgycS00LjI4NCAwLTguNTY4LTEuMTE2dC03LjUyNC0yLjc1NC02LjIxLTMuNzQ0LTQuNzctMy43OC0zLjAyNC0zLjE1cS0uMjg4LS4zMjQtLjM2LS41OTR0LjAzNi0uNDMyLjI4OC0uMjUyLjQxNC0uMDcyLjQxNC4xNjJxNi45MTIgNC4yMTIgMTAuOCA1Ljk3NiAxNC4wMDQgNi4zMzYgMjguNzY0IDMuMjQgNi44NC0xLjQ0IDE0LjA3Ni00Ljg2em03LjQ1Mi00LjE0cS4zOTYuNTc2LjA5IDIuNTAydC0xLjAyNiAzLjY5cS0xLjIyNCAyLjk4OC0zLjA2IDQuNDY0LS42MTIuNTA0LS45MzYuMzI0dDAtLjg2NHEuNzU2LTEuNjIgMS42MDItNC4zNzR0LjIzNC0zLjU0NnEtLjE4LS4yNTItLjU1OC0uNDE0dC0uOTcyLS4yMTYtMS4wNjItLjA5LTEuMjYgMC0xLjEzNC4wNzItMS4xMTYuMTA4LS44MS4wNzJxLS4yMTYuMDM2LS40NjguMDU0dC0uMzk2LjAzNi0uMzA2LjAzNi0uMjUyLjAxOGgtLjM2bC0uMTA4LS4wMTgtLjA3Mi0uMDU0LS4wNTQtLjEwOHEtLjIxNi0uNTc2IDEuNjkyLTEuNDR0My43MDgtMS4wOHExLjY1Ni0uMjUyIDMuODg4LS4wMzZ0Mi43MzYuODY0em0tMTQuMTg0LTE1Ljk0OHEwIDEuMTE2LjQ4NiAyLjMwNHQxLjE1MiAyLjA4OCAxLjM1IDEuNjU2IDEuMTg4IDEuMTUybC40NjguMzk2LTguMTcyIDguMDY0cS0xLjQ0LTEuMzMyLTIuODQ0LTIuNzE4dC0yLjA4OC0yLjEwNmwtLjY4NC0uNzJxLS4zOTYtLjM5Ni0uOS0xLjE4OC0xLjM2OCAyLjEyNC0zLjUxIDMuNjl0LTQuNTkgMi4yODYtNS4wNC44MjgtNC45NS0uNzU2LTQuMjMtMi4zNTgtMi45ODgtNC4wNjgtMS4xMTYtNS44NXEwLTMuMDI0IDEuMDA4LTUuNTQ0dDIuNTkyLTQuMTk0IDMuODM0LTIuOTg4IDQuNDEtMi4wNTIgNC42OC0xLjI0MiA0LjMwMi0uNjY2IDMuNTgyLS4yMzR2LTQuNTcycTAtMi4zNC0uNzU2LTMuNDkyLTEuMjI0LTEuOTA4LTQuMzU2LTEuOTA4LS4yMTYgMC0uNTk0LjAzNnQtMS40NTguNDMyLTIuMDE2IDEuMDYyLTIuMDE2IDIuMTQyLTEuNzI4IDMuNDU2bC0xMC41ODQtLjk3MnEwLTIuMTYuNzkyLTQuMjg0dDIuNDEyLTQuMDY4IDMuODg4LTMuNDIgNS40NTQtMi4zNTggNi44NTgtLjg4MnEzLjYgMCA2LjUxNi45dDQuNjYyIDIuMjE0IDIuOTE2IDIuOTg4IDEuNjIgMy4wOTYuNDUgMi42NDZ2MjEuMjA0em0tMjQuMTkyLjc1NnEwIDMuMDk2IDIuNTIgNC43ODggMi4zNzYgMS41ODQgNS4wMDQuNzkyIDMuMDI0LS45IDQuMTA0LTQuNDI4LjUwNC0xLjYyLjUwNC0zLjYzNnYtNS44MzJxLTIuMTI0LjA3Mi0zLjk5Ni40MzJ0LTMuODM0IDEuMjA2LTMuMTMyIDIuNTU2LTEuMTcgNC4xMjJ6XCIsXCJDQUxFTkRBUl9QTFVTX09cIjpcIk01NS4yOTYtNTUuMjIzcTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0djQ2LjA4cTAgMS44NzItMS4zNjggMy4yNHQtMy4yNCAxLjM2OGgtNTAuNjg4cS0xLjg3MiAwLTMuMjQtMS4zNjh0LTEuMzY4LTMuMjR2LTQ2LjA4cTAtMS44NzIgMS4zNjgtMy4yNHQzLjI0LTEuMzY4aDQuNjA4di0zLjQ1NnEwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyaDIuMzA0cTIuMzc2IDAgNC4wNjggMS42OTJ0MS42OTIgNC4wNjh2My40NTZoMTMuODI0di0zLjQ1NnEwLTIuMzc2IDEuNjkyLTQuMDY4dDQuMDY4LTEuNjkyaDIuMzA0cTIuMzc2IDAgNC4wNjggMS42OTJ0MS42OTIgNC4wNjh2My40NTZoNC42MDh6bS0xMy44MjQtMy40NTZ2MTAuMzY4cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDIuMzA0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4di0xMC4zNjhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHptLTI3LjY0OCAwdjEwLjM2OHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyLjMwNHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOHYtMTAuMzY4cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh6bTQxLjQ3MiA1NC4xNDR2LTM2Ljg2NGgtNTAuNjg4djM2Ljg2NGg1MC42ODh6bS0yMy4wNC0yMC43MzZoOC4wNjRxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djIuMzA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTguMDY0djguMDY0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTIuMzA0cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTguMDY0aC04LjA2NHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDguMDY0di04LjA2NHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIuMzA0cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHY4LjA2NHpcIixcIkNBTEVOREFSX01JTlVTX09cIjpcIk00MS40NzItMjQuMTE5djIuMzA0cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTIwLjczNnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yLjMwNHEwLS41MDQuMzI0LS44Mjh0LjgyOC0uMzI0aDIwLjczNnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bS0zNi44NjQgMTkuNTg0aDUwLjY4OHYtMzYuODY0aC01MC42ODh2MzYuODY0em0xMy44MjQtNDMuNzc2di0xMC4zNjhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYxMC4zNjhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTI3LjY0OCAwdi0xMC4zNjhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYxMC4zNjhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTEzLjgyNC0yLjMwNHY0Ni4wOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTUwLjY4OHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di00Ni4wOHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg0LjYwOHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyLjMwNHEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djMuNDU2aDEzLjgyNHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyLjMwNHEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djMuNDU2aDQuNjA4cTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0elwiLFwiQ0FMRU5EQVJfVElNRVNfT1wiOlwiTTM5Ljk5Ni0xNC41NzlsLTEuNjU2IDEuNjU2cS0uMzI0LjMyNC0uNzkyLjMyNHQtLjgyOC0uMzI0bC02Ljc2OC02LjgwNC02Ljc2OCA2LjgwNHEtLjM2LjMyNC0uODI4LjMyNHQtLjc5Mi0uMzI0bC0xLjY1Ni0xLjY1NnEtLjMyNC0uMzI0LS4zMjQtLjc5MnQuMzI0LS44MjhsNi44MDQtNi43NjgtNi44MDQtNi43NjhxLS4zMjQtLjM2LS4zMjQtLjgyOHQuMzI0LS43OTJsMS42NTYtMS42NTZxLjMyNC0uMzI0Ljc5Mi0uMzI0dC44MjguMzI0bDYuNzY4IDYuNzY4IDYuNzY4LTYuNzY4cS4zNi0uMzI0LjgyOC0uMzI0dC43OTIuMzI0bDEuNjU2IDEuNjU2cS4zMjQuMzI0LjMyNC43OTJ0LS4zMjQuODI4bC02Ljc2OCA2Ljc2OCA2Ljc2OCA2Ljc2OHEuMzI0LjM2LjMyNC44Mjh0LS4zMjQuNzkyem0tMzUuMzg4IDEwLjA0NGg1MC42ODh2LTM2Ljg2NGgtNTAuNjg4djM2Ljg2NHptMTMuODI0LTQzLjc3NnYtMTAuMzY4cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2MTAuMzY4cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDIuMzA0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0yNy42NDggMHYtMTAuMzY4cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMi4zMDRxLS41MDQgMC0uODI4LjMyNHQtLjMyNC44Mjh2MTAuMzY4cTAgLjUwNC4zMjQuODI4dC44MjguMzI0aDIuMzA0cS41MDQgMCAuODI4LS4zMjR0LjMyNC0uODI4em0xMy44MjQtMi4zMDR2NDYuMDhxMCAxLjg3Mi0xLjM2OCAzLjI0dC0zLjI0IDEuMzY4aC01MC42ODhxLTEuODcyIDAtMy4yNC0xLjM2OHQtMS4zNjgtMy4yNHYtNDYuMDhxMC0xLjg3MiAxLjM2OC0zLjI0dDMuMjQtMS4zNjhoNC42MDh2LTMuNDU2cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoMi4zMDRxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHYzLjQ1NmgxMy44MjR2LTMuNDU2cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoMi4zMDRxMi4zNzYgMCA0LjA2OCAxLjY5MnQxLjY5MiA0LjA2OHYzLjQ1Nmg0LjYwOHExLjg3MiAwIDMuMjQgMS4zNjh0MS4zNjggMy4yNHpcIixcIkNBTEVOREFSX0NIRUNLX09cIjpcIk00Ni45MDgtMjkuNzM1bC0xOC40MzIgMTguNDMycS0uMzYuMzI0LS44MjguMzI0dC0uODI4LS4zMjRsLTEwLjM2OC0xMC4zNjhxLS4zMjQtLjM2LS4zMjQtLjgyOHQuMzI0LS43OTJsMS42NTYtMS42NTZxLjMyNC0uMzI0Ljc5Mi0uMzI0dC44MjguMzI0bDcuOTIgNy45MiAxNS45ODQtMTUuOTg0cS4zNi0uMzI0LjgyOC0uMzI0dC43OTIuMzI0bDEuNjU2IDEuNjU2cS4zMjQuMzI0LjMyNC43OTJ0LS4zMjQuODI4em0tNDIuMyAyNS4yaDUwLjY4OHYtMzYuODY0aC01MC42ODh2MzYuODY0em0xMy44MjQtNDMuNzc2di0xMC4zNjhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYxMC4zNjhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTI3LjY0OCAwdi0xMC4zNjhxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC0yLjMwNHEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYxMC4zNjhxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoMi4zMDRxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTEzLjgyNC0yLjMwNHY0Ni4wOHEwIDEuODcyLTEuMzY4IDMuMjR0LTMuMjQgMS4zNjhoLTUwLjY4OHEtMS44NzIgMC0zLjI0LTEuMzY4dC0xLjM2OC0zLjI0di00Ni4wOHEwLTEuODcyIDEuMzY4LTMuMjR0My4yNC0xLjM2OGg0LjYwOHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyLjMwNHEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djMuNDU2aDEzLjgyNHYtMy40NTZxMC0yLjM3NiAxLjY5Mi00LjA2OHQ0LjA2OC0xLjY5MmgyLjMwNHEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djMuNDU2aDQuNjA4cTEuODcyIDAgMy4yNCAxLjM2OHQxLjM2OCAzLjI0elwiLFwiSU5EVVNUUllcIjpcIk0xNi4xMjgtNjQuNDM5cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MzIuMDc2bDE5LjI5Ni0xNS40NDRxLjYxMi0uNTA0IDEuNDQtLjUwNC45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2MTMuNjQ0bDE5LjI5Ni0xNS40NDRxLjYxMi0uNTA0IDEuNDQtLjUwNC45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2NDEuNDcycTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC01OS45MDRxLS45MzYgMC0xLjYyLS42ODR0LS42ODQtMS42MnYtNTkuOTA0cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoMTMuODI0elwiLFwiTUFQX1BJTlwiOlwiTTE4LjQzMi0yNS4yNzFxMi4zNzYgMCA0LjYwOC0uNTR2MjMuNThxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODRoLTQuNjA4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTIzLjU4cTIuMTk2LjU0IDQuNjA4LjU0em0wLTM5LjE2OHE3LjYzMiAwIDEzLjAzMiA1LjR0NS40IDEzLjAzMi01LjQgMTMuMDMyLTEzLjAzMiA1LjQtMTMuMDMyLTUuNC01LjQtMTMuMDMyIDUuNC0xMy4wMzIgMTMuMDMyLTUuNHptMCA4LjA2NHEuNTA0IDAgLjgyOC0uMzI0dC4zMjQtLjgyOC0uMzI0LS44MjgtLjgyOC0uMzI0cS01LjI1NiAwLTguOTY0IDMuNzA4dC0zLjcwOCA4Ljk2NHEwIC41MDQuMzI0LjgyOHQuODI4LjMyNC44MjgtLjMyNC4zMjQtLjgyOHEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyelwiLFwiTUFQX1NJR05TXCI6XCJNNjIuODItNTMuNzQ3cS4zNi4zNi4zNi44Mjh0LS4zNi44MjhsLTUuMDc2IDUuMDc2cS0xLjAwOCAxLjAwOC0yLjQ0OCAxLjAwOGgtNDguMzg0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJ2LTkuMjE2cTAtLjkzNi42ODQtMS42MnQxLjYyLS42ODRoMjAuNzM2di0yLjMwNHEwLS45MzYuNjg0LTEuNjJ0MS42Mi0uNjg0aDQuNjA4cS45MzYgMCAxLjYyLjY4NHQuNjg0IDEuNjJ2Mi4zMDRoMTguNDMycTEuNDQgMCAyLjQ0OCAxLjAwOHptLTM1LjE3MiAzMy4wODRoOS4yMTZ2MTguNDMycTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0aC00LjYwOHEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYydi0xOC40MzJ6bTI5Ljk1Mi0xNi4xMjhxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42MnY5LjIxNnEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtNDguMzg0cS0xLjQ0IDAtMi40NDgtMS4wMDhsLTUuMDc2LTUuMDc2cS0uMzYtLjM2LS4zNi0uODI4dC4zNi0uODI4bDUuMDc2LTUuMDc2cTEuMDA4LTEuMDA4IDIuNDQ4LTEuMDA4aDE4LjQzMnYtNi45MTJoOS4yMTZ2Ni45MTJoMjAuNzM2elwiLFwiTUFQX09cIjpcIk03Mi43Mi02NC4wNDNxMS4wMDguNzIgMS4wMDggMS45MDh2NTAuNjg4cTAgLjcyLS4zOTYgMS4yOTZ0LTEuMDQ0LjgyOGwtMjMuMDQgOS4yMTZxLS44NjQuMzk2LTEuNzI4IDBsLTIyLjE3Ni04Ljg1Ni0yMi4xNzYgOC44NTZxLS4zNi4xOC0uODY0LjE4LS42ODQgMC0xLjI5Ni0uMzk2LTEuMDA4LS43Mi0xLjAwOC0xLjkwOHYtNTAuNjg4cTAtLjcyLjM5Ni0xLjI5NnQxLjA0NC0uODI4bDIzLjA0LTkuMjE2cS44NjQtLjM5NiAxLjcyOCAwbDIyLjE3NiA4Ljg1NiAyMi4xNzYtOC44NTZxMS4xNTItLjQ2OCAyLjE2LjIxNnptLTQ2LjIyNCA0Ljg2djQ1LjcybDIwLjczNiA4LjI4di00NS43MnptLTIxLjg4OCA3LjgxMnY0NS43MmwxOS41ODQtNy44MTJ2LTQ1Ljcyem02NC41MTIgMzguMzc2di00NS43MmwtMTkuNTg0IDcuODEydjQ1LjcyelwiLFwiTUFQXCI6XCJNMTguNDMyLTY0LjQzOXEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxdjUyLjk5MnEwIC43Mi0uNjEyIDEuMDA4bC0xNy4yOCA5LjIxNnEtLjI1Mi4xNDQtLjU0LjE0NC0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi01Mi45OTJxMC0uNzIuNjEyLTEuMDA4bDE3LjI4LTkuMjE2cS4yNTItLjE0NC41NC0uMTQ0em00NC45MjggMHEuNDY4IDAgLjgxLjM0MnQuMzQyLjgxdjUyLjk5MnEwIC43Mi0uNjEyIDEuMDA4bC0xNy4yOCA5LjIxNnEtLjI1Mi4xNDQtLjU0LjE0NC0uNDY4IDAtLjgxLS4zNDJ0LS4zNDItLjgxdi01Mi45OTJxMC0uNzIuNjEyLTEuMDA4bDE3LjI4LTkuMjE2cS4yNTItLjE0NC41NC0uMTQ0em0tNDAuMzIgMHEuMjg4IDAgLjUwNC4xMDhsMTguNDMyIDkuMjE2cS42NDguMzYuNjQ4IDEuMDQ0djUyLjk5MnEwIC40NjgtLjM0Mi44MXQtLjgxLjM0MnEtLjI4OCAwLS41MDQtLjEwOGwtMTguNDMyLTkuMjE2cS0uNjQ4LS4zNi0uNjQ4LTEuMDQ0di01Mi45OTJxMC0uNDY4LjM0Mi0uODF0LjgxLS4zNDJ6XCIsXCJDT01NRU5USU5HXCI6XCJNMjMuMDQtMzIuMTgzcTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptMTMuODI0IDBxMC0xLjkwOC0xLjM1LTMuMjU4dC0zLjI1OC0xLjM1LTMuMjU4IDEuMzUtMS4zNSAzLjI1OCAxLjM1IDMuMjU4IDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4em0xMy44MjQgMHEwLTEuOTA4LTEuMzUtMy4yNTh0LTMuMjU4LTEuMzUtMy4yNTggMS4zNS0xLjM1IDMuMjU4IDEuMzUgMy4yNTggMy4yNTggMS4zNSAzLjI1OC0xLjM1IDEuMzUtMy4yNTh6bTEzLjgyNCAwcTAgNi4yNjQtNC4zMiAxMS41NzR0LTExLjczNiA4LjM4OC0xNi4yIDMuMDc4cS0zLjk2IDAtNy41OTYtLjY0OC02LjIyOCA2LjIyOC0xNS42NiA4LjI0NC0xLjg3Mi4zNi0zLjA5Ni40NjgtLjQzMi4wMzYtLjc5Mi0uMjE2dC0uNDY4LS42NDhxLS4xNDQtLjU0LjcyLTEuMzMyLjE4LS4xOC44NDYtLjc3NHQuOTE4LS44NDYuODQ2LS45MTguODY0LTEuMTM0LjczOC0xLjMzMi43Mi0xLjcyOC41MjItMi4wNy40NS0yLjYxcS01LjI1Ni0zLjI0LTguMjYyLTcuNzk0dC0zLjAwNi05LjcwMnEwLTYuMjY0IDQuMzItMTEuNTc0dDExLjczNi04LjM4OCAxNi4yLTMuMDc4IDE2LjIgMy4wNzggMTEuNzM2IDguMzg4IDQuMzIgMTEuNTc0elwiLFwiQ09NTUVOVElOR19PXCI6XCJNMjMuMDQtMzIuMTgzcTAgMS45MDgtMS4zNSAzLjI1OHQtMy4yNTggMS4zNS0zLjI1OC0xLjM1LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1IDMuMjU4IDEuMzUgMS4zNSAzLjI1OHptMTMuODI0IDBxMCAxLjkwOC0xLjM1IDMuMjU4dC0zLjI1OCAxLjM1LTMuMjU4LTEuMzUtMS4zNS0zLjI1OCAxLjM1LTMuMjU4IDMuMjU4LTEuMzUgMy4yNTggMS4zNSAxLjM1IDMuMjU4em0xMy44MjQgMHEwIDEuOTA4LTEuMzUgMy4yNTh0LTMuMjU4IDEuMzUtMy4yNTgtMS4zNS0xLjM1LTMuMjU4IDEuMzUtMy4yNTggMy4yNTgtMS4zNSAzLjI1OCAxLjM1IDEuMzUgMy4yNTh6bS0xOC40MzItMTguNDMycS03LjM0NCAwLTEzLjczNCAyLjUwMnQtMTAuMTUyIDYuNzUtMy43NjIgOS4xOHEwIDQuMDMyIDIuNTc0IDcuNjg2dDcuMjU0IDYuMzE4bDMuMTMyIDEuOC0uOTcyIDMuNDU2cS0uODY0IDMuMjc2LTIuNTIgNi4xOTIgNS40NzItMi4yNjggOS45LTYuMTU2bDEuNTQ4LTEuMzY4IDIuMDUyLjIxNnEyLjQ4NC4yODggNC42OC4yODggNy4zNDQgMCAxMy43MzQtMi41MDJ0MTAuMTUyLTYuNzUgMy43NjItOS4xOC0zLjc2Mi05LjE4LTEwLjE1Mi02Ljc1LTEzLjczNC0yLjUwMnptMzIuMjU2IDE4LjQzMnEwIDYuMjY0LTQuMzIgMTEuNTc0dC0xMS43MzYgOC4zODgtMTYuMiAzLjA3OHEtMi41MiAwLTUuMjItLjI4OC03LjEyOCA2LjMtMTYuNTYgOC43MTItMS43NjQuNTA0LTQuMTA0Ljc5MmgtLjE4cS0uNTQgMC0uOTcyLS4zNzh0LS41NzYtLjk5di0uMDM2cS0uMTA4LS4xNDQtLjAxOC0uNDMydC4wNzItLjM2LjE2Mi0uMzQybC4yMTYtLjMyNC4yNTItLjMwNi4yODgtLjMyNHEuMjUyLS4yODggMS4xMTYtMS4yNDJ0MS4yNDItMS4zNjggMS4xMTYtMS40MjIgMS4xNy0xLjgzNi45NzItMi4xMjQuOTM2LTIuNzM2cS01LjY1Mi0zLjIwNC04LjkxLTcuOTJ0LTMuMjU4LTEwLjExNnEwLTQuNjggMi41NTYtOC45NDZ0Ni44NzYtNy4zNjIgMTAuMjk2LTQuOTE0IDEyLjUyOC0xLjgxOCAxMi41MjggMS44MTggMTAuMjk2IDQuOTE0IDYuODc2IDcuMzYyIDIuNTU2IDguOTQ2elwiLFwiSE9VWlpcIjpcIk0xOC40MzItMjEuNTYzbDE4LjQzMi0xMC42MnYyMS4yNzZsLTE4LjQzMiAxMC42NTZ2LTIxLjMxMnptLTE4LjQzMi0xMC42MnYyMS4yNzZsMTguNDMyLTEwLjY1NnptMTguNDMyLTMxLjkzMnYyMS4yNzZsLTE4LjQzMiAxMC42NTZ2LTIxLjI3NnptMCAyMS4yNzZsMTguNDMyLTEwLjYydjIxLjI3NnpcIixcIlZJTUVPXCI6XCJNNjEuNTI0LTQ1Ljc5MXEtLjM2IDguNDk2LTExLjk1MiAyMy40MzYtMTEuOTg4IDE1LjUxNi0yMC4yMzIgMTUuNTE2LTUuMTEyIDAtOC42NC05LjQ2OC0xLjU4NC01Ljc2LTQuNzUyLTE3LjM1Mi0yLjU5Mi05LjQzMi01LjY1Mi05LjQzMi0uNjQ4IDAtNC41NzIgMi43MzZsLTIuNzcyLTMuNTI4cS44NjQtLjc1NiAzLjg4OC0zLjQ3NHQ0LjY4LTQuMTU4cTUuNjE2LTQuOTY4IDguNjc2LTUuMjU2IDMuNDItLjMyNCA1LjUwOCAxLjk5OHQyLjkxNiA3LjMyNnExLjU4NCAxMC4zMzIgMi4zNzYgMTMuNDI4IDEuOTggOC45NjQgNC4zMiA4Ljk2NCAxLjgzNiAwIDUuNTQ0LTUuNzk2IDMuNjM2LTUuNzk2IDMuOTI0LTguODU2LjQ2OC01LjAwNC0zLjkyNC01LjAwNC0yLjA1MiAwLTQuMzU2LjkzNiA0LjMyLTE0LjE0OCAxNi41MjQtMTMuNzUyIDkuMDM2LjI4OCA4LjQ5NiAxMS43MzZ6XCIsXCJCTEFDS19USUVcIjpcIk0wLTU5LjgzMWg1NS4yOTZ2NTUuMjk2aC01NS4yOTZ2LTU1LjI5NnptMzkuMDYgNDAuMTRsLTcuOTU2LTIyLjcxNiA3Ljk1Ni0xMC42OTJoLTIyLjgyNGw3Ljk1NiAxMC42OTItNy45NTYgMjIuNzE2IDExLjQxMiAxMC45NDR6XCIsXCJGT05USUNPTlNcIjpcIk0wLTU5LjgzMWg1NS4yOTZ2NTUuMjk2aC01NS4yOTZ2LTU1LjI5NnptMzIuNjg4IDExLjUybC0uNDMyIDEuMTg4IDIuNyAyLjk4OC0xLjExNiA0LjEwNC45LjkgMy44NTItMi4wNTIgMy44NTIgMi4wNTIuOS0uOS0xLjExNi00LjEwNCAyLjctMi45ODgtLjQzMi0xLjE4OGgtMy40MmwtMS45MDgtMy40NTZoLTEuMTUybC0xLjkwOCAzLjQ1NmgtMy40MnptLTkuNjEyIDUuODY4cTEuMTUyIDAgMS42MDIuNTc2dC40MTQgMi4yNjhsNi4yNjQtLjc1NnEwLTEuOTgtLjYzLTMuMzN0LTEuODE4LTIuMDE2LTIuNDg0LS45MTgtMy4wNi0uMjUycS00Ljc4OCAwLTcuMTY0IDIuMDd0LTIuMzc2IDYuNTd2Mi41OTJoLTMuNDU2djQuNjA4aDIuNzM2cS43MiAwIC43Mi4yODh2MTMuNzUycTAgLjUwNC0uMTguNzJ0LS42NDguMjUybC0yLjYyOC4yNTJ2My4xNjhoMTYuMTI4di0zLjA5NmwtNS4zNjQtLjUwNHEtLjIxNi0uMDM2LS4zMDYtLjA1NHQtLjEyNi0uMDktLjAxOC0uMTQ0LjAzNi0uMjUyLjAxOC0uMzZ2LTEzLjkzMmg2Ljg3NmwxLjM2OC00LjYwOGgtOC4zMTZxLS4yMTYgMC0uMDcyLS4yMTZ0LjE0NC0uMzI0di0yLjg4cTAtLjk3Mi4wNTQtMS40NTh0LjI3LTEuMDA4LjcwMi0uNzIgMS4zMTQtLjE5OHptMjEuODUyIDI5Ljg0NHYtMy4wOTZsLTEuOTQ0LS4zMjRxLS4yNTItLjAzNi0uMzQyLS4wOXQtLjA5LS4xMDguMDM2LS4yNy4wMzYtLjQzMnYtMTguNzJoLTkuOWwtLjgyOCAzLjYzNiAyLjk4OC43OTJxLjgyOC4yNTIuODI4Ljk3MnYxMy4zMnEwIC41MDQtLjIxNi42NjZ0LS43Mi4yMzRsLTIuNTIuMzI0djMuMDk2aDEyLjY3MnpcIixcIlJFRERJVF9BTElFTlwiOlwiTTY0LjUxMi0zMy45ODNxMCAyLjA4OC0xLjA2MiAzLjc5OHQtMi44NjIgMi42MXEuNDMyIDEuNjU2LjQzMiAzLjQ1NiAwIDUuNTgtMy44MzQgMTAuMzMydC0xMC40NTggNy41MDYtMTQuNCAyLjc1NC0xNC4zODItMi43NTQtMTAuNDQtNy41MDYtMy44MzQtMTAuMzMycTAtMS42OTIuMzk2LTMuMzg0LTEuODM2LS45LTIuOTUyLTIuNjQ2dC0xLjExNi0zLjgzNHEwLTIuOTUyIDIuMDg4LTUuMDU4dDUuMDc2LTIuMTA2cTMuMDYgMCA1LjIyIDIuMjY4IDcuODQ4LTUuNDcyIDE4LjU0LTUuODMybDQuMTc2LTE4Ljc1NnEuMTA4LS40NjguNTQtLjc1NnQuOTM2LS4xOGwxMy4yODQgMi45MTZxLjY0OC0xLjMzMiAxLjk0NC0yLjE0MnQyLjg0NC0uODFxMi4yMzIgMCAzLjgxNiAxLjU2NnQxLjU4NCAzLjc5OC0xLjU4NCAzLjgxNi0zLjgxNiAxLjU4NC0zLjc5OC0xLjU2Ni0xLjU2Ni0zLjc5OGwtMTIuMDI0LTIuNjY0LTMuNzQ0IDE2Ljk5MnExMC44LjMyNCAxOC42ODQgNS43NiAyLjA4OC0yLjE5NiA1LjE0OC0yLjE5NiAyLjk4OCAwIDUuMDc2IDIuMTA2dDIuMDg4IDUuMDU4em0tNDkuNDY0IDcuMTY0cTAgMi4yMzIgMS41NjYgMy44MTZ0My43OTggMS41ODQgMy44MTYtMS41ODQgMS41ODQtMy44MTYtMS41ODQtMy43OTgtMy44MTYtMS41NjZxLTIuMTk2IDAtMy43OCAxLjU4NHQtMS41ODQgMy43OHptMjkuMTYgMTIuNzhxLjM5Ni0uMzk2LjM5Ni0uOTM2dC0uMzk2LS45MzZxLS4zNi0uMzYtLjktLjM2dC0uOTM2LjM2cS0xLjQ3NiAxLjUxMi00LjM1NiAyLjIzMnQtNS43Ni43Mi01Ljc2LS43Mi00LjM1Ni0yLjIzMnEtLjM5Ni0uMzYtLjkzNi0uMzZ0LS45LjM2cS0uMzk2LjM2LS4zOTYuOTE4dC4zOTYuOTU0cTEuNTQ4IDEuNTQ4IDQuMjY2IDIuNDQ4dDQuNDEgMS4wNjIgMy4yNzYuMTYyIDMuMjc2LS4xNjIgNC40MS0xLjA2MiA0LjI2Ni0yLjQ0OHptLS4xMDgtNy4zOHEyLjIzMiAwIDMuNzk4LTEuNTg0dDEuNTY2LTMuODE2cTAtMi4xOTYtMS41ODQtMy43OHQtMy43OC0xLjU4NHEtMi4yMzIgMC0zLjgxNiAxLjU2NnQtMS41ODQgMy43OTggMS41ODQgMy44MTYgMy44MTYgMS41ODR6XCIsXCJFREdFXCI6XCJNMi40ODQtMzUuODE5aC4wMzZxLjU3Ni00LjUzNiAyLjEwNi04LjY5NHQ0LjE0LTcuODEyIDYuMDMtNi4zMzYgOC4wNDYtNC4yMyA5Ljk1NC0xLjU0OHE4LjMxNiAwIDE0LjkwNCAzLjc5OHQxMC41ODQgMTAuOTI2cTMuNzQ0IDYuNzMyIDMuNzQ0IDE1LjkxMnY2Ljc2OGgtNDAuNXEuMDM2IDMuOTk2IDEuOTI2IDYuOTN0NC45MTQgNC40MSA2LjgyMiAyLjA1MiA3LjY2OC4xMDggNy40ODgtMS42NzQgNi4yNDYtMy4wNDJ2MTMuNTcycS0zLjMxMiAxLjk4LTguMjYyIDMuMzEydC0xMS4yNSAxLjM2OC0xMS4zNzYtMS45MDhxLTYuODA0LTIuNjI4LTExLjIxNC04Ljk2NHQtNC40ODItMTMuMzkycS0uMTA4LTguNzEyIDMuOTk2LTE0LjgzMnQxMS43LTkuNjQ4cS0xLjcyOCAyLjE2LTIuODA4IDQuNTE4dC0xLjY1NiA1Ljc0MmgyMi44NnEuMjg4LTIuNzcyLS4yODgtNS4wNHQtMS42OTItMy42NTQtMi41MzgtMi4zOTQtMi44OTgtMS40NzYtMi43LS43MzgtMi4wMTYtLjMwNmwtLjc5Mi0uMDM2cS00Ljg2LjE4LTkuMzQyIDEuNjAydC04LjA0NiAzLjc2Mi02LjMzNiA1LjA1OC00Ljk2OCA1Ljg4NnpcIixcIkNSRURJVF9DQVJEX0FMVFwiOlwiTTAtMTAuMjk1di0yMS44ODhoODIuOTQ0djIxLjg4OHEwIDIuMzc2LTEuNjkyIDQuMDY4dC00LjA2OCAxLjY5MmgtNzEuNDI0cS0yLjM3NiAwLTQuMDY4LTEuNjkydC0xLjY5Mi00LjA2OHptMjMuMDQtOC4wNjR2NC42MDhoMTMuODI0di00LjYwOGgtMTMuODI0em0tMTMuODI0IDB2NC42MDhoOS4yMTZ2LTQuNjA4aC05LjIxNnptNjcuOTY4LTQxLjQ3MnEyLjM3NiAwIDQuMDY4IDEuNjkydDEuNjkyIDQuMDY4djguMDY0aC04Mi45NDR2LTguMDY0cTAtMi4zNzYgMS42OTItNC4wNjh0NC4wNjgtMS42OTJoNzEuNDI0elwiLFwiQ09ESUVQSUVcIjpcIk01NS43NjQtMzkuOTk1cTEuOTggMCAzLjA3OCAxLjAyNnQxLjA5OCAzLjAwNi0xLjIyNCAyLjk1Mi0zLjI3Ni45NzJoLTQuODk2djYuMzcyaC0uOXYtMTQuMzI4aDYuMTJ6bTUuNzk2IDIxLjI0bC0uMTQ0LjM5Ni0uMTguMzZxLTQuMDY4IDguMjgtMTEuODk4IDEzLjE3NnQtMTcuMDgyIDQuODk2cS02LjU1MiAwLTEyLjUyOC0yLjU1NnQtMTAuMjk2LTYuODc2LTYuODc2LTEwLjI5Ni0yLjU1Ni0xMi41MjggMi41NTYtMTIuNTI4IDYuODc2LTEwLjI5NiAxMC4yOTYtNi44NzYgMTIuNTI4LTIuNTU2cTguNzg0IDAgMTYuMzYyIDQuNDY0dDExLjg2MiAxMi4xNjhsLjA3Mi4xNDQuMjg4LjU3NnEtMS4wOC41NC00LjkxNCAyLjQ2NnQtNS44ODYgMy4wNDJxLS4yMTYuMTA4LTE3LjI0NCA5LjY0OCAxMy44MjQgNi41ODggMjguNzY0IDEzLjE3NnptLTI5LjMwNCAxOC4wMzZxOSAwIDE2LjY1LTQuNzd0MTEuNjEtMTIuODdsLTEwLjMzMi00LjY0NHEtMi41OTIgNS4wNC03LjQxNiA3Ljk5MnQtMTAuNTEyIDIuOTUycS01LjQzNiAwLTEwLjA4LTIuN3QtNy4zNDQtNy4zNDQtMi43LTEwLjA4IDIuNy0xMC4wOCA3LjM0NC03LjM0NCAxMC4wOC0yLjcgMTAuMDggMi42NDYgNy4zNDQgNy4zNjJsMTAuMDgtNS4xNDhxLTQuMTc2LTcuNDg4LTExLjU1Ni0xMS44NDR0LTE1Ljk0OC00LjM1NnEtNC4yODQgMC04LjM3IDEuMTM0dC03LjUyNCAzLjE1LTYuMzU0IDQuOTMyLTQuOTMyIDYuMzU0LTMuMTUgNy41MjQtMS4xMzQgOC4zNyAxLjEzNCA4LjM3IDMuMTUgNy41MjQgNC45MzIgNi4zNTQgNi4zNTQgNC45MzIgNy41MjQgMy4xNSA4LjM3IDEuMTM0elwiLFwiTU9EWFwiOlwiTTUxLjM3Mi0zOC45MTVsLTIyLjEwNC0xMy44OTYgMy4zMTItNS40MzZoMzAuNzh6bS0zNi43OTIgOS41NGwtNi42MjQtNC4xNzZ2LTMwLjg4OGw0Mi41ODggMjYuNzQ4em0zNi42ODQtNC44Nmw1LjI5MiAzLjQydjMwLjg4OGwtMTkuMTUyLTEyLjA2em0tMS4zMzItLjc1NmwtMTggMjguODcyaC0zMC43OGwxMi44MTYtMjAuNTU2elwiLFwiRk9SVF9BV0VTT01FXCI6XCJNMjMuMDQtMjguMTUxdi04LjA2NHEwLS41NzYtLjU3Ni0uNTc2aC0zLjQ1NnEtLjU3NiAwLS41NzYuNTc2djguMDY0cTAgLjU3Ni41NzYuNTc2aDMuNDU2cS41NzYgMCAuNTc2LS41NzZ6bTE4LjQzMiAwdi04LjA2NHEwLS41NzYtLjU3Ni0uNTc2aC0zLjQ1NnEtLjU3NiAwLS41NzYuNTc2djguMDY0cTAgLjU3Ni41NzYuNTc2aDMuNDU2cS41NzYgMCAuNTc2LS41NzZ6bTE4LjQzMiAxLjE1MnYyNy4wNzJoLTIzLjA0di0xMS41MnEwLTIuODgtMi4wMTYtNC44OTZ0LTQuODk2LTIuMDE2LTQuODk2IDIuMDE2LTIuMDE2IDQuODk2djExLjUyaC0yMy4wNHYtMjcuMDcycTAtLjU3Ni41NzYtLjU3NmgzLjQ1NnEuNTc2IDAgLjU3Ni41NzZ2NC4wMzJoNC42MDh2LTIyLjQ2NHEwLS41NzYuNTc2LS41NzZoMy40NTZxLjU3NiAwIC41NzYuNTc2djQuMDMyaDQuNjA4di00LjAzMnEwLS41NzYuNTc2LS41NzZoMy40NTZxLjU3NiAwIC41NzYuNTc2djQuMDMyaDQuNjA4di00LjAzMnEwLS41NzYuNTc2LS41NzZoLjU3NnYtMTQuMTQ4cS0xLjE1Mi0uNjg0LTEuMTUyLTEuOTggMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NCAxLjYyLjY4NC42ODQgMS42MnEwIDEuMjk2LTEuMTUyIDEuOTh2LjMyNGg5Ljc5MnEuNTc2IDAgLjU3Ni41NzZ2OC4wNjRxMCAuNTc2LS41NzYuNTc2aC05Ljc5MnY0LjYwOGguNTc2cS41NzYgMCAuNTc2LjU3NnY0LjAzMmg0LjYwOHYtNC4wMzJxMC0uNTc2LjU3Ni0uNTc2aDMuNDU2cS41NzYgMCAuNTc2LjU3NnY0LjAzMmg0LjYwOHYtNC4wMzJxMC0uNTc2LjU3Ni0uNTc2aDMuNDU2cS41NzYgMCAuNTc2LjU3NnYyMi40NjRoNC42MDh2LTQuMDMycTAtLjU3Ni41NzYtLjU3NmgzLjQ1NnEuNTc2IDAgLjU3Ni41NzZ6XCIsXCJVU0JcIjpcIk04Mi4zNjgtMzUuNDU5cS41NzYuMjg4LjU3Ni45NzJ0LS41NzYuOTcybC0xMS41MiA2LjkxMnEtLjI4OC4xOC0uNTc2LjE4LS4zMjQgMC0uNTc2LS4xNDQtLjU3Ni0uMzYtLjU3Ni0xLjAwOHYtNC42MDhoLTMwLjg4OHExLjMzMiAyLjA4OCAyLjk4OCA1Ljk0LjU3NiAxLjMzMi44ODIgMS45OHQuODY0IDEuNzY0Ljk3MiAxLjY5Mi45NzIgMS4yMjQgMS4xMzQuOTM2IDEuMTg4LjI4OGgzLjQ1NnYtMy40NTZxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGgxMS41MnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2MTEuNTJxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMTEuNTJxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMy40NTZoLTMuNDU2cS0xLjE1MiAwLTIuMTk2LS4zNnQtMS44MzYtLjg0Ni0xLjYyLTEuNDU4LTEuMzMyLTEuNjU2LTEuMjA2LTIuMDUyLTEuMDI2LTIuMDctMS4wMDgtMi4xNzhxLS44MjgtMS45MDgtMS4zMzItMi45MzR0LTEuMjk2LTIuMzQtMS42MDItMS45MjYtMS42NzQtLjYxMmgtMTIuOTZxLS43OTIgMy4wMjQtMy4yNzYgNC45Njh0LTUuNjUyIDEuOTQ0cS0zLjgxNiAwLTYuNTE2LTIuN3QtMi43LTYuNTE2IDIuNy02LjUxNiA2LjUxNi0yLjdxMy4xNjggMCA1LjY1MiAxLjk0NHQzLjI3NiA0Ljk2OGgzLjc0NHEuODY0IDAgMS42NzQtLjYxMnQxLjYwMi0xLjkyNiAxLjI5Ni0yLjM0IDEuMzMyLTIuOTM0cS42ODQtMS40NzYgMS4wMDgtMi4xNzh0MS4wMjYtMi4wNyAxLjIwNi0yLjA1MiAxLjMzMi0xLjY1NiAxLjYyLTEuNDU4IDEuODM2LS44NDYgMi4xOTYtLjM2aDMuODUycS43NTYtMi4wNTIgMi41Mi0zLjMzdDMuOTk2LTEuMjc4cTIuODggMCA0Ljg5NiAyLjAxNnQyLjAxNiA0Ljg5Ni0yLjAxNiA0Ljg5Ni00Ljg5NiAyLjAxNnEtMi4yMzIgMC0zLjk5Ni0xLjI3OHQtMi41Mi0zLjMzaC0zLjg1MnEtLjYxMiAwLTEuMTg4LjI4OHQtMS4xMzQuOTM2LS45NzIgMS4yMjQtLjk3MiAxLjY5Mi0uODY0IDEuNzY0LS44ODIgMS45OHEtMS42NTYgMy44NTItMi45ODggNS45NGg0MC4xMDR2LTQuNjA4cTAtLjY0OC41NzYtMS4wMDh0MS4xNTIuMDM2elwiLFwiUFJPRFVDVF9IVU5UXCI6XCJNNDEuNC0zNy4wMDdxMCAyLjAxNi0xLjQyMiAzLjQydC0zLjQzOCAxLjQwNGgtOS4xMDh2LTkuNjg0aDkuMTA4cTIuMDE2IDAgMy40MzggMS40MjJ0MS40MjIgMy40Mzh6bTYuNDQ0IDBxMC00LjY4LTMuMjk0LTcuOTkydC04LjAxLTMuMzEyaC0xNS41ODh2MzIuMjU2aDYuNDh2LTkuNjg0aDkuMTA4cTQuNjggMCA3Ljk5Mi0zLjI5NHQzLjMxMi03Ljk3NHptMTYuNjY4IDQuODI0cTAgNi41NTItMi41NTYgMTIuNTI4dC02Ljg3NiAxMC4yOTYtMTAuMjk2IDYuODc2LTEyLjUyOCAyLjU1Ni0xMi41MjgtMi41NTYtMTAuMjk2LTYuODc2LTYuODc2LTEwLjI5Ni0yLjU1Ni0xMi41MjggMi41NTYtMTIuNTI4IDYuODc2LTEwLjI5NiAxMC4yOTYtNi44NzYgMTIuNTI4LTIuNTU2IDEyLjUyOCAyLjU1NiAxMC4yOTYgNi44NzYgNi44NzYgMTAuMjk2IDIuNTU2IDEyLjUyOHpcIixcIk1JWENMT1VEXCI6XCJNNTkuMjItMjQuOTExcTAtMi4xMjQtMS4yMjQtMy44MzR0LTMuMTMyLTIuNDY2cS0uMjUyIDEuNjItLjgyOCAzLjMxMi0uMjUyLjg2NC0uOTkgMS4zNjh0LTEuNjAyLjUwNHEtLjQzMiAwLS44NjQtLjEwOC0xLjExNi0uMzYtMS42Mi0xLjM4NnQtLjE0NC0yLjEwNnEuODI4LTIuNTU2LjgyOC01LjE0OCAwLTQuNDI4LTIuMTk2LTguMTl0LTUuOTc2LTUuOTU4LTguMjA4LTIuMTk2cS00LjgyNCAwLTguODkyIDIuNjI4dC02LjAxMiA2Ljk4NHEzLjg4OCAxLjAwOCA2Ljc2OCAzLjgxNi43OTIuODI4Ljc5MiAxLjk4dC0uNzkyIDEuOTQ0LTEuOTQ0Ljc5Mi0xLjk4LS43OTJxLTIuNy0yLjctNi40OC0yLjctMy44MTYgMC02LjUxNiAyLjY4MnQtMi43IDYuNDk4IDIuNyA2LjQ5OCA2LjUxNiAyLjY4MmgzNy42NTZxMi44NDQgMCA0Ljg0Mi0xLjk5OHQxLjk5OC00LjgwNnptNS41MDggMHEwIDUuMTEyLTMuNjE4IDguNzEydC04LjczIDMuNmgtMzcuNjU2cS02LjA4NCAwLTEwLjQwNC00LjMwMnQtNC4zMi0xMC4zODZxMC01LjUwOCAzLjYtOS42MTJ0OC45NjQtNC44OTZxMi4yMzItNi42MjQgNy45NTYtMTAuNzI4dDEyLjc0NC00LjEwNHE4LjQ2IDAgMTQuNzA2IDUuNzA2dDcuMDc0IDE0LjAyMnE0LjE3Ni45IDYuOTMgNC4yNjZ0Mi43NTQgNy43MjJ6bTkgMHEwIDYuMy0zLjQ5MiAxMS40ODQtLjgyOCAxLjE4OC0yLjMwNCAxLjE4OC0uODY0IDAtMS41NDgtLjQ2OC0uOTM2LS42MTItMS4xNTItMS43NDZ0LjQzMi0yLjA3cTIuNTU2LTMuNzQ0IDIuNTU2LTguMzg4dC0yLjU1Ni04LjM4OHEtLjY0OC0uOTM2LS40MzItMi4wNTJ0MS4xNTItMS43NjQgMi4wNy0uNDE0IDEuNzgyIDEuMTdxMy40OTIgNS4xMTIgMy40OTIgMTEuNDQ4em05LjIxNiAwcTAgOC43ODQtNC44MjQgMTUuOTQ4LS44MjggMS4yMjQtMi4zMDQgMS4yMjQtLjgyOCAwLTEuNTEyLS40NjgtLjkzNi0uNjQ4LTEuMTctMS43NjR0LjQxNC0yLjA1MnEzLjg4OC01LjkwNCAzLjg4OC0xMi44ODggMC03LjAyLTMuODg4LTEyLjg1Mi0uNjQ4LS45MzYtLjQxNC0yLjA3dDEuMTctMS43NDZxLjkzNi0uNjQ4IDIuMDUyLS40MzJ0MS43NjQgMS4xODhxNC44MjQgNy4xMjggNC44MjQgMTUuOTEyelwiLFwiU0NSSUJEXCI6XCJNNTQtOC42NzVxMCAzLjIwNC0yLjI2OCA1LjQ5dC01LjUwOCAyLjI4Ni01LjUyNi0yLjI4Ni0yLjI4Ni01LjQ5cTAtMy4yNCAyLjI4Ni01LjUyNnQ1LjUyNi0yLjI4NiA1LjUwOCAyLjI4NiAyLjI2OCA1LjUyNnptLTguMzg4LTEwLjExNnEtNC4xNC41NC02LjkzIDMuNjl0LTIuNzkgNy4zOThxMCAyLjY2NCAxLjE4OCA0Ljk2OC01LjI1NiAyLjgwOC0xMy42NDQgMi44MDgtMy45MjQgMC03LjIzNi0uNzU2dC01LjUyNi0xLjk2Mi0zLjk3OC0yLjc1NC0yLjczNi0zLjA2LTEuNjAyLTIuOTg4LS44NDYtMi4zOTQtLjIxNi0xLjQyMnEwLS42ODQuMTYyLTEuNTN0LjY2Ni0yLjAxNiAxLjMxNC0yLjA4OCAyLjMwNC0xLjU2NiAzLjQwMi0uNjQ4IDMuMzg0LjYzIDIuMjY4IDEuNDc2IDEuMjc4IDEuOTA4LjYzIDEuNzY0LjE0NCAxLjIwNnEwIDEuMjI0LS44MjggMi45MTYgMS4wMDguOTcyIDIuOTUyIDEuNTEydDMuMzQ4LjYxMmwxLjQ0LjAzNnE0LjE0IDAgNi44NC0xLjgzNnQyLjctNC43ODhxMC0uOTM2LS4zMjQtMS43NDZ0LTEuMTM0LTEuNjAyLTEuNzgyLTEuNDc2LTIuNjY0LTEuNTg0LTMuMzY2LTEuNzEtNC4zMDItMi4wMzRsLTEuNTQ4LS43MnEtNC4xNzYtMS45OC02LjczMi0zLjZ0LTQuNDEtMy42NzItMi41OTItNC41MTgtLjczOC01Ljg1cTAtMi44MDguNzM4LTUuNHQyLjM3Ni00Ljk1IDQuMDUtNC4xMDQgNS45OTQtMi43NzIgNy45NzQtMS4wMjZxNC4zMiAwIDcuOTIuOTM2dDUuOTIyIDIuNDEyIDMuOTQyIDMuMzg0IDIuMzA0IDMuNzk4LjY4NCAzLjcyNnEwIDEuNjU2LS41NCAyLjk3dC0xLjMxNCAyLjA4OC0xLjc0NiAxLjI5Ni0xLjc2NC43MDItMS40MDQuMThoLTEuNDRsLTEuNDA0LS4xOC0xLjU4NC0uNTA0LTEuNDc2LTEuMDA4LTEuMzMyLTEuNjU2LS44NjQtMi41MzgtLjM2LTMuNTFxLS41NC0uNTc2LTIuMTI0LS45MTh0LTIuOTE2LS4zNzhsLTEuMzMyLS4wMzZxLTIuNDQ4IDAtNC4yMyAxLjExNnQtMi41MzggMi41Mi0uNzU2IDIuNzM2cTAgLjg2NC4xOCAxLjU0OHQuODY0IDEuNjU2IDEuOTA4IDEuODM2IDMuNDkyIDEuOTI2IDUuNCAyLjEwNnEyLjczNi45IDQuOTg2IDEuOTI2dDMuOTI0IDEuOTk4IDIuOTg4IDIuMTI0IDIuMTc4IDIuMTQyIDEuNDc2IDIuMjUuOTU0IDIuMjMyLjUyMiAyLjI4Ni4yMTYgMi4yMzIuMDM2IDIuMjV6XCIsXCJQQVVTRV9DSVJDTEVcIjpcIk0yNS4zNDQtMjEuODE1di0yMC43MzZxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC05LjIxNnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyMC43MzZxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoOS4yMTZxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTE2LjEyOCAwdi0yMC43MzZxMC0uNTA0LS4zMjQtLjgyOHQtLjgyOC0uMzI0aC05LjIxNnEtLjUwNCAwLS44MjguMzI0dC0uMzI0LjgyOHYyMC43MzZxMCAuNTA0LjMyNC44Mjh0LjgyOC4zMjRoOS4yMTZxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTEzLjgyNC0xMC4zNjhxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiUEFVU0VfQ0lSQ0xFX09cIjpcIk0yNy42NDgtNTkuODMxcTcuNTI0IDAgMTMuODc4IDMuNzA4dDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4LTMuNzA4IDEzLjg3OC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4em0wIDQ3LjIzMnE1LjMyOCAwIDkuODI4LTIuNjI4dDcuMTI4LTcuMTI4IDIuNjI4LTkuODI4LTIuNjI4LTkuODI4LTcuMTI4LTcuMTI4LTkuODI4LTIuNjI4LTkuODI4IDIuNjI4LTcuMTI4IDcuMTI4LTIuNjI4IDkuODI4IDIuNjI4IDkuODI4IDcuMTI4IDcuMTI4IDkuODI4IDIuNjI4em0zLjQ1Ni04LjA2NHEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di0yMC43MzZxMC0uNTA0LjMyNC0uODI4dC44MjgtLjMyNGg2LjkxMnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh2MjAuNzM2cTAgLjUwNC0uMzI0LjgyOHQtLjgyOC4zMjRoLTYuOTEyem0tMTMuODI0IDBxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMjAuNzM2cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNi45MTJxLjUwNCAwIC44MjguMzI0dC4zMjQuODI4djIwLjczNnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC02LjkxMnpcIixcIlNUT1BfQ0lSQ0xFXCI6XCJNMzkuMTY4LTIxLjgxNXYtMjAuNzM2cTAtLjUwNC0uMzI0LS44Mjh0LS44MjgtLjMyNGgtMjAuNzM2cS0uNTA0IDAtLjgyOC4zMjR0LS4zMjQuODI4djIwLjczNnEwIC41MDQuMzI0LjgyOHQuODI4LjMyNGgyMC43MzZxLjUwNCAwIC44MjgtLjMyNHQuMzI0LS44Mjh6bTE2LjEyOC0xMC4zNjhxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiU1RPUF9DSVJDTEVfT1wiOlwiTTI3LjY0OC01OS44MzFxNy41MjQgMCAxMy44NzggMy43MDh0MTAuMDYyIDEwLjA2MiAzLjcwOCAxMy44NzgtMy43MDggMTMuODc4LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDh6bTAgNDcuMjMycTUuMzI4IDAgOS44MjgtMi42Mjh0Ny4xMjgtNy4xMjggMi42MjgtOS44MjgtMi42MjgtOS44MjgtNy4xMjgtNy4xMjgtOS44MjgtMi42MjgtOS44MjggMi42MjgtNy4xMjggNy4xMjgtMi42MjggOS44MjggMi42MjggOS44MjggNy4xMjggNy4xMjggOS44MjggMi42Mjh6bS0xMC4zNjgtOC4wNjRxLS41MDQgMC0uODI4LS4zMjR0LS4zMjQtLjgyOHYtMjAuNzM2cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoMjAuNzM2cS41MDQgMCAuODI4LjMyNHQuMzI0LjgyOHYyMC43MzZxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtMjAuNzM2elwiLFwiU0hPUFBJTkdfQkFHXCI6XCJNNjMuMjUyLTEzLjc1MWwxLjI2IDExLjI2OHEuMTA4IDEuMDA4LS41NzYgMS44LS42ODQuNzU2LTEuNzI4Ljc1NmgtNTkuOTA0cS0xLjA0NCAwLTEuNzI4LS43NTYtLjY4NC0uNzkyLS41NzYtMS44bDEuMjYtMTEuMjY4aDYxLjk5MnptLTMuMzQ4LTMwLjIwNGwzLjA5NiAyNy45aC02MS40ODhsMy4wOTYtMjcuOXEuMTA4LS44NjQuNzU2LTEuNDU4dDEuNTQ4LS41OTRoOS4yMTZ2NC42MDhxMCAxLjkwOCAxLjM1IDMuMjU4dDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4di00LjYwOGgxMy44MjR2NC42MDhxMCAxLjkwOCAxLjM1IDMuMjU4dDMuMjU4IDEuMzUgMy4yNTgtMS4zNSAxLjM1LTMuMjU4di00LjYwOGg5LjIxNnEuOSAwIDEuNTQ4LjU5NHQuNzU2IDEuNDU4em0tMTMuODI0LTYuNjZ2OS4yMTZxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODQtMS42Mi0uNjg0LS42ODQtMS42MnYtOS4yMTZxMC0zLjgxNi0yLjctNi41MTZ0LTYuNTE2LTIuNy02LjUxNiAyLjctMi43IDYuNTE2djkuMjE2cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0LTEuNjItLjY4NC0uNjg0LTEuNjJ2LTkuMjE2cTAtNS43MjQgNC4wNS05Ljc3NHQ5Ljc3NC00LjA1IDkuNzc0IDQuMDUgNC4wNSA5Ljc3NHpcIixcIlNIT1BQSU5HX0JBU0tFVFwiOlwiTTY5LjEyLTM2Ljc5MXExLjkwOCAwIDMuMjU4IDEuMzV0MS4zNSAzLjI1OC0xLjM1IDMuMjU4LTMuMjU4IDEuMzVoLS41NGwtNC4xNCAyMy44MzJxLS4yODggMS42NTYtMS41ODQgMi43MzZ0LTIuOTUyIDEuMDhoLTQ2LjA4cS0xLjY1NiAwLTIuOTUyLTEuMDh0LTEuNTg0LTIuNzM2bC00LjE0LTIzLjgzMmgtLjU0cS0xLjkwOCAwLTMuMjU4LTEuMzV0LTEuMzUtMy4yNTggMS4zNS0zLjI1OCAzLjI1OC0xLjM1aDY0LjUxMnptLTUxLjY2IDI4LjhxLjkzNi0uMDcyIDEuNTY2LS44MXQuNTU4LTEuNjc0bC0xLjE1Mi0xNC45NzZxLS4wNzItLjkzNi0uODEtMS41NjZ0LTEuNjc0LS41NTgtMS41NjYuODEtLjU1OCAxLjY3NGwxLjE1MiAxNC45NzZxLjA3Mi45LjczOCAxLjUxMnQxLjU2Ni42MTJoLjE4em0xNC43OTYtMi4zMDR2LTE0Ljk3NnEwLS45MzYtLjY4NC0xLjYydC0xLjYyLS42ODQtMS42Mi42ODQtLjY4NCAxLjYydjE0Ljk3NnEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODQgMS42Mi0uNjg0LjY4NC0xLjYyem0xMy44MjQgMHYtMTQuOTc2cTAtLjkzNi0uNjg0LTEuNjJ0LTEuNjItLjY4NC0xLjYyLjY4NC0uNjg0IDEuNjJ2MTQuOTc2cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJ6bTEyLjY3Mi4xOGwxLjE1Mi0xNC45NzZxLjA3Mi0uOTM2LS41NTgtMS42NzR0LTEuNTY2LS44MS0xLjY3NC41NTgtLjgxIDEuNTY2bC0xLjE1MiAxNC45NzZxLS4wNzIuOTM2LjU1OCAxLjY3NHQxLjU2Ni44MWguMThxLjkgMCAxLjU2Ni0uNjEydC43MzgtMS41MTJ6bS00MS42MTYtNDMuODEybC0zLjM0OCAxNC44MzJoLTQuNzUybDMuNjM2LTE1Ljg3NnEuNjg0LTMuMTY4IDMuMjA0LTUuMTY2dDUuNzYtMS45OThoNi4wMTJxMC0uOTM2LjY4NC0xLjYydDEuNjItLjY4NGgxMy44MjRxLjkzNiAwIDEuNjIuNjg0dC42ODQgMS42Mmg2LjAxMnEzLjI0IDAgNS43NiAxLjk5OHQzLjIwNCA1LjE2NmwzLjYzNiAxNS44NzZoLTQuNzUybC0zLjM0OC0xNC44MzJxLS4zOTYtMS41ODQtMS42MzgtMi41OTJ0LTIuODYyLTEuMDA4aC02LjAxMnEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NGgtMTMuODI0cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJoLTYuMDEycS0xLjYyIDAtMi44NjIgMS4wMDh0LTEuNjM4IDIuNTkyelwiLFwiSEFTSFRBR1wiOlwiTTM1LjY3Ni0yNy41NzVsMi4zMDQtOS4yMTZoLTkuMTQ0bC0yLjMwNCA5LjIxNmg5LjE0NHptMjcuNjQ4LTE4LjE0NGwtMi4wMTYgOC4wNjRxLS4yNTIuODY0LTEuMTE2Ljg2NGgtMTEuNzcybC0yLjMwNCA5LjIxNmgxMS4xOTZxLjU0IDAgLjkuNDMyLjM2LjUwNC4yMTYgMS4wMDhsLTIuMDE2IDguMDY0cS0uMTguODY0LTEuMTE2Ljg2NGgtMTEuNzcybC0yLjkxNiAxMS44MDhxLS4yNTIuODY0LTEuMTE2Ljg2NGgtOC4wNjRxLS41NzYgMC0uOTM2LS40MzItLjMyNC0uNDMyLS4yMTYtMS4wMDhsMi44MDgtMTEuMjMyaC05LjE0NGwtMi45MTYgMTEuODA4cS0uMjUyLjg2NC0xLjExNi44NjRoLTguMXEtLjU0IDAtLjktLjQzMi0uMzI0LS40MzItLjIxNi0xLjAwOGwyLjgwOC0xMS4yMzJoLTExLjE5NnEtLjU0IDAtLjktLjQzMi0uMzI0LS40MzItLjIxNi0xLjAwOGwyLjAxNi04LjA2NHEuMjUyLS44NjQgMS4xMTYtLjg2NGgxMS43NzJsMi4zMDQtOS4yMTZoLTExLjE5NnEtLjU0IDAtLjktLjQzMi0uMzYtLjUwNC0uMjE2LTEuMDA4bDIuMDE2LTguMDY0cS4xOC0uODY0IDEuMTE2LS44NjRoMTEuNzcybDIuOTE2LTExLjgwOHEuMjUyLS44NjQgMS4xNTItLjg2NGg4LjA2NHEuNTQgMCAuOS40MzIuMzI0LjQzMi4yMTYgMS4wMDhsLTIuODA4IDExLjIzMmg5LjE0NGwyLjkxNi0xMS44MDhxLjI1Mi0uODY0IDEuMTUyLS44NjRoOC4wNjRxLjU0IDAgLjkuNDMyLjMyNC40MzIuMjE2IDEuMDA4bC0yLjgwOCAxMS4yMzJoMTEuMTk2cS41NCAwIC45LjQzMi4zMjQuNDMyLjIxNiAxLjAwOHpcIixcIkJMVUVUT09USFwiOlwiTTMwLjI3Ni0yNi41MzFsNS4zMjggNS4zMjgtNS4zNjQgNS4zNjR6bS0uMDM2LTIxLjk5Nmw1LjM2NCA1LjM2NC01LjMyOCA1LjMyOHptLTQuNjggNDQuMDY0bDE2LjcwNC0xNi43MDQtMTEuMDE2LTExLjAxNiAxMS4wMTYtMTEuMDE2LTE2LjcwNC0xNi43MDR2MjEuOTk2bC05LjE4LTkuMTgtMy4zNDggMy4zNDggMTEuNTIgMTEuNTU2LTExLjUyIDExLjU1NiAzLjM0OCAzLjM0OCA5LjE4LTkuMTh2MjEuOTk2em0yNS44ODQtMjcuNzJxMCA3LjUyNC0xLjE1MiAxMy4xNTh0LTMuMTUgOS4yNTItNS4wNTggNS44NS02LjUzNCAzLjExNC03LjkwMi44ODItNy45MDItLjg4Mi02LjUzNC0zLjExNC01LjA1OC01Ljg1LTMuMTUtOS4yNTItMS4xNTItMTMuMTU4IDEuMTUyLTEzLjE1OCAzLjE1LTkuMjUyIDUuMDU4LTUuODUgNi41MzQtMy4xMTQgNy45MDItLjg4MiA3LjkwMi44ODIgNi41MzQgMy4xMTQgNS4wNTggNS44NSAzLjE1IDkuMjUyIDEuMTUyIDEzLjE1OHpcIixcIkJMVUVUT09USF9CXCI6XCJNMjEuNDU2LTEzLjIxMWw2LjIyOC02LjE5Mi02LjIyOC02LjE5MnYxMi4zODR6bTAtMjUuNTZsNi4yMjgtNi4xOTItNi4yMjgtNi4xOTJ2MTIuMzg0em0xLjE1MiA2LjU4OGwxMi44MTYgMTIuODE2LTE5LjQwNCAxOS40NHYtMjUuNTk2bC0xMC42OTIgMTAuNjU2LTMuODg4LTMuODg4IDEzLjM5Mi0xMy40MjgtMTMuMzkyLTEzLjQyOCAzLjg4OC0zLjg4OCAxMC42OTIgMTAuNjU2di0yNS41OTZsMTkuNDA0IDE5LjQ0elwiLFwiUEVSQ0VOVFwiOlwiTTQ2LjA4LTE4LjM1OXEwLTEuODcyLTEuMzY4LTMuMjR0LTMuMjQtMS4zNjgtMy4yNCAxLjM2OC0xLjM2OCAzLjI0IDEuMzY4IDMuMjQgMy4yNCAxLjM2OCAzLjI0LTEuMzY4IDEuMzY4LTMuMjR6bS0yNy42NDgtMjcuNjQ4cTAtMS44NzItMS4zNjgtMy4yNHQtMy4yNC0xLjM2OC0zLjI0IDEuMzY4LTEuMzY4IDMuMjQgMS4zNjggMy4yNCAzLjI0IDEuMzY4IDMuMjQtMS4zNjggMS4zNjgtMy4yNHptMzYuODY0IDI3LjY0OHEwIDUuNzI0LTQuMDUgOS43NzR0LTkuNzc0IDQuMDUtOS43NzQtNC4wNS00LjA1LTkuNzc0IDQuMDUtOS43NzQgOS43NzQtNC4wNSA5Ljc3NCA0LjA1IDQuMDUgOS43NzR6bS0zLjQ1Ni0zOS4xNjhxMCAuNzItLjQ2OCAxLjM2OGwtMzguMDE2IDUwLjY4OHEtLjY4NC45MzYtMS44MzYuOTM2aC01Ljc2cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjJxMC0uNzIuNDY4LTEuMzY4bDM4LjAxNi01MC42ODhxLjY4NC0uOTM2IDEuODM2LS45MzZoNS43NnEuOTM2IDAgMS42Mi42ODR0LjY4NCAxLjYyem0tMjQuMTkyIDExLjUycTAgNS43MjQtNC4wNSA5Ljc3NHQtOS43NzQgNC4wNS05Ljc3NC00LjA1LTQuMDUtOS43NzQgNC4wNS05Ljc3NCA5Ljc3NC00LjA1IDkuNzc0IDQuMDUgNC4wNSA5Ljc3NHpcIixcIkdJVExBQlwiOlwiTTMuNzQ0LTM5LjAyM2wyOC41MTIgMzYuNTQtMzEuMjQ4LTIyLjY4cS0uNjQ4LS40NjgtLjktMS4yNDJ0MC0xLjUzbDMuNjM2LTExLjA4OHptMTYuNjMyIDBoMjMuNzZsLTExLjg4IDM2LjU0em0tNy4xMjgtMjIuMDMybDcuMTI4IDIyLjAzMmgtMTYuNjMybDcuMTI4LTIyLjAzMnEuMjg4LS44MjggMS4xODgtLjgyOHQxLjE4OC44Mjh6bTQ3LjUyIDIyLjAzMmwzLjYzNiAxMS4wODhxLjI1Mi43NTYgMCAxLjUzdC0uOSAxLjI0MmwtMzEuMjQ4IDIyLjY4IDI4LjUxMi0zNi41NHptMCAwaC0xNi42MzJsNy4xMjgtMjIuMDMycS4yODgtLjgyOCAxLjE4OC0uODI4dDEuMTg4LjgyOHpcIixcIldQQkVHSU5ORVJcIjpcIk0xMy44MjQtMzQuNDg3aDUuNzZ2LTguMDY0aC01Ljc2djguMDY0em0zMC4xMzIgMTEuOTUydi0zLjMxMnEtMy43NDQgMS4yOTYtOC43NDggMS4zNjgtNC44Ni4wMzYtOS4zNDItMS42NzR0LTcuOTM4LTQuNDFsLjAzNiAzLjQ1NnEzLjE2OCAyLjg4IDcuNjMyIDQuNjI2dDkuNzkyIDEuNzFxNC42NDQgMCA4LjU2OC0xLjc2NHptLTIwLjkxNi0xMS45NTJoMjMuMDR2LTguMDY0aC0yMy4wNHY4LjA2NHptNDEuNDcyLTEuMTUycTAgNi43MzItMy41NjQgMTIuNjcyIDMuMjA0IDMuNjcyIDMuMjA0IDguMjQ0IDAgNS42NTItNC42NjIgOS42NDh0LTExLjI4NiAzLjk5NnEtNC4zOTIgMC04LjEtMS44OXQtNS43OTYtNS4wNThxLS42ODQuMDM2LTIuMDUyLjAzNnQtMi4wNTItLjAzNnEtMi4wODggMy4xNjgtNS43OTYgNS4wNTh0LTguMSAxLjg5cS02LjYyNCAwLTExLjI4Ni0zLjk5NnQtNC42NjItOS42NDhxMC00LjU3MiAzLjIwNC04LjI0NC0zLjU2NC01Ljk0LTMuNTY0LTEyLjY3MiAwLTcuNTI0IDQuMzItMTMuODc4dDExLjc1NC0xMC4wNjIgMTYuMTgyLTMuNzA4IDE2LjE4MiAzLjcwOCAxMS43NTQgMTAuMDYyIDQuMzIgMTMuODc4elwiLFwiV1BGT1JNU1wiOlwiTTE4LjU0LTMxLjY0M3Y0LjYwOGgtOS4wNzJ2LTQuNjA4aDkuMDcyem0wLTkuMTh2NC41NzJoLTkuMDcydi00LjU3Mmg5LjA3MnptMjcuMjg4IDE4LjM5NnY0LjYwOGgtMTIuMjc2di00LjYwOGgxMi4yNzZ6bTAtOS4yMTZ2NC42MDhoLTI0LjE5MnYtNC42MDhoMjQuMTkyem0wLTkuMTh2NC41NzJoLTI0LjE5MnYtNC41NzJoMjQuMTkyem00Ljg2IDMwLjk2di00NC42NHEwLS4yODgtLjIxNi0uNTA0dC0uNTA0LS4yMTZoLTEuMTUybC0xMy42MDggOS4yMTYtNy41Ni02LjE1Ni03LjU2IDYuMTU2LTEzLjYwOC05LjIxNmgtMS4xNTJxLS4yODggMC0uNTA0LjIxNnQtLjIxNi41MDR2NDQuNjRxMCAuMjg4LjIxNi41MDR0LjUwNC4yMTZoNDQuNjRxLjI4OCAwIC41MDQtLjIxNnQuMjE2LS41MDR6bS0zMC43OC0zOS45Nmw2LjY2LTUuNGgtMTQuNjE2em0xNS40OCAwbDcuOTU2LTUuNGgtMTQuNjE2em0xOS45MDgtNC42OHY0NC42NHEwIDIuMjMyLTEuNTQ4IDMuNzh0LTMuNzggMS41NDhoLTQ0LjY0cS0yLjIzMiAwLTMuNzgtMS41NDh0LTEuNTQ4LTMuNzh2LTQ0LjY0cTAtMi4yMzIgMS41NDgtMy43OHQzLjc4LTEuNTQ4aDQ0LjY0cTIuMjMyIDAgMy43OCAxLjU0OHQxLjU0OCAzLjc4elwiLFwiRU5WSVJBXCI6XCJNMzIuMjU2LTM1LjA2M3EtMy43NDQtNy4wNTYtNS43Ni0xMC4wMDgtNS4wMDQtNy4yNzItMTIuNDkyLTExLjQ0OC0xLjIyNC0uNjg0LTIuNTItMS4yOTYtMy4yMDQtMS40NC0zLjM4NC0xLjE1MnQxLjIyNCAxLjM2OGwxLjQwNCAxLjExNnEyLjIzMiAxLjU0OCA0LjA1IDMuMzY2dDMuNDAyIDQuMTk0IDIuNTM4IDQuMDY4IDIuNTM4IDQuNzE2cS4zMjQuNjEyLjQ2OC45IDEuNTg0IDMuMDI0IDMuMDI0IDUuNTA4dDMuNTI4IDUuNTQ0IDQuMTU4IDUuNCA0LjcxNiA0LjQ0NiA1LjM0NiAzLjI1OHE1LjUwOCAyLjM3NiA1LjU0NCAyLjE2LjAzNi0uMTA4LTEuNzY0LTEuMzMyLTEuOTA4LTEuMjk2LTIuOTE2LTIuMDUyLTIuNzcyLTIuMDg4LTYuNDQ0LTcuNTk2dC02LjY2LTExLjE2em0tMTIuNDkyIDE5LjU0OHEtMi43MzYtMi4xNi00Ljc3LTQuNXQtMy41MjgtNS4xNjYtMi41NTYtNS41NjItMi4xMDYtNi42OTYtMS44NzItNy41MjQtMi4xNzgtOS4wNzItMi43NTQtMTAuNDA0cTkuODI4IDAgMTcuOTEgMS4yOTZ0MTMuNjQ0IDMuMzEyIDkuNzU2IDUuMjAyIDYuNjc4IDYuMjEgMy45NiA3LjE0NiAyLjAxNiA3LjE4Mi40NSA3LjE0Ni0uMzQyIDYuMjI4LS43MiA1LjE2Ni0uNDY4IDMuODUybDExLjYyOCAxMS43NzJoLTMuNzQ0bC0xMC4xMTYtMTAuMjZxLS43OTIuMDcyLTMuMjk0LjUwNHQtNC4zNzQuNjg0LTQuOTY4LjIxNi01Ljc3OC0uNjEyLTYuMDMtMi4xMjQtNi40NDQtMy45OTZ6XCIsXCJVTklWRVJTQUxfQUNDRVNTXCI6XCJNNDkuNDY0LTQwLjc4N3EtLjIxNi0uOTM2LTEuMDI2LTEuNDIydC0xLjc0Ni0uMjdxLTkuMzk2IDIuMjMyLTE0LjQzNiAyLjIzMnQtMTQuNDM2LTIuMjMycS0uOTM2LS4yMTYtMS43NDYuMjd0LTEuMDI2IDEuNDIyLjI3IDEuNzQ2IDEuNDIyIDEuMDI2cTYuOTg0IDEuNjU2IDEwLjkwOCAyLjA4OC0uMDcyIDUuNjg4LS41NTggOS42ODR0LS45NTQgNS41OTgtMS40NzYgNC4xNThsLS4zMjQuNzU2cS0uMzYuOS4wMzYgMS43NjR0MS4yOTYgMS4yMjRxLjMyNC4xNDQuODI4LjE0NCAxLjU4NCAwIDIuMTYtMS40NzZsLjI4OC0uNzJxMS45NDQtNS4wMDQgMi41NTYtOS4zMjRoMS41MTJxLjYxMiA0LjMyIDIuNTU2IDkuMzI0bC4yODguNzJxLjU3NiAxLjQ3NiAyLjE2IDEuNDc2LjUwNCAwIC44MjgtLjE0NC45LS4zNiAxLjI5Ni0xLjIyNHQuMDM2LTEuNzY0bC0uMzI0LS43NTZxLTEuMDA4LTIuNTU2LTEuNDc2LTQuMTU4dC0uOTU0LTUuNTk4LS41NTgtOS42ODRxMy45MjQtLjQzMiAxMC45MDgtMi4wODguOTM2LS4yMTYgMS40MjItMS4wMjZ0LjI3LTEuNzQ2em0tMTIuNi01LjIycTAtMS45MDgtMS4zNS0zLjI1OHQtMy4yNTgtMS4zNS0zLjI1OCAxLjM1LTEuMzUgMy4yNTggMS4zNSAzLjI1OCAzLjI1OCAxLjM1IDMuMjU4LTEuMzUgMS4zNS0zLjI1OHptMjAuNzM2IDEzLjgyNHEwIDUuMTQ4LTEuOTk4IDkuODQ2dC01LjQgOC4xLTguMSA1LjQtOS44NDYgMS45OTgtOS44NDYtMS45OTgtOC4xLTUuNC01LjQtOC4xLTEuOTk4LTkuODQ2IDEuOTk4LTkuODQ2IDUuNC04LjEgOC4xLTUuNCA5Ljg0Ni0xLjk5OCA5Ljg0NiAxLjk5OCA4LjEgNS40IDUuNCA4LjEgMS45OTggOS44NDZ6bS0yNS4zNDQtMjcuNjQ4cS01LjYxNiAwLTEwLjcyOCAyLjE5NnQtOC44MiA1LjkwNC01LjkwNCA4LjgyLTIuMTk2IDEwLjcyOCAyLjE5NiAxMC43MjggNS45MDQgOC44MiA4LjgyIDUuOTA0IDEwLjcyOCAyLjE5NiAxMC43MjgtMi4xOTYgOC44Mi01LjkwNCA1LjkwNC04LjgyIDIuMTk2LTEwLjcyOC0yLjE5Ni0xMC43MjgtNS45MDQtOC44Mi04LjgyLTUuOTA0LTEwLjcyOC0yLjE5NnptMzIuMjU2IDI3LjY0OHEwIDYuNTUyLTIuNTU2IDEyLjUyOHQtNi44NzYgMTAuMjk2LTEwLjI5NiA2Ljg3Ni0xMi41MjggMi41NTYtMTIuNTI4LTIuNTU2LTEwLjI5Ni02Ljg3Ni02Ljg3Ni0xMC4yOTYtMi41NTYtMTIuNTI4IDIuNTU2LTEyLjUyOCA2Ljg3Ni0xMC4yOTYgMTAuMjk2LTYuODc2IDEyLjUyOC0yLjU1NiAxMi41MjggMi41NTYgMTAuMjk2IDYuODc2IDYuODc2IDEwLjI5NiAyLjU1NiAxMi41Mjh6XCIsXCJXSEVFTENIQUlSX0FMVFwiOlwiTTUxLjc2OC0zNS4xNzFxMS4yMjQgMS4yNiAxLjA0NCAyLjk1MmwtMS41ODQgMTkuODM2cS0uMTQ0IDEuNTEyLTEuMjQyIDIuNTJ0LTIuNTc0IDEuMDA4cS0uMjE2IDAtLjMyNC0uMDM2LTEuNTg0LS4xMDgtMi42MS0xLjMxNHQtLjkxOC0yLjc5bDEuMjYtMTUuNDQ0LTUuMTQ4LjI4OHExLjk4IDQuMDY4IDEuOTggOC42NCAwIDcuNzc2LTUuMzI4IDEzLjM5MmwtNC45MzItNC45MzJxMy4yNzYtMy42MzYgMy4yNzYtOC40NiAwLTUuMjItMy42OS04LjkyOHQtOC45MS0zLjcwOHEtNC44MjQgMC04LjQ5NiAzLjMxMmwtNC45MzItNC45NjhxNC4zMi00LjEwNCAxMC4yMjQtNS4wNzZsOS41MDQtMTAuOC01LjM2NC0zLjEzMi02LjUxNiA1Ljc5NnEtMS4xODggMS4wOC0yLjc3Mi45OXQtMi42MjgtMS4yNzgtLjk1NC0yLjc3MiAxLjI0Mi0yLjYyOGw4LjYwNC03LjY2OHEuOTM2LS44MjggMi4xNi0uOTU0dDIuMzA0LjUyMmwxNy41NjggMTAuMTg4cTEuMjk2Ljc1NiAxLjcyOCAyLjQ0OC42MTIgMi40MTItLjkzNiA0LjIxMmwtNy4zOCA4LjM1MiAxMy4zNTYtLjcycTEuNzY0LS4xMDggMi45ODggMS4xNTJ6bS03LjEyOC0xNi40NTJxLTIuNjY0IDAtNC41MzYtMS44NzJ0LTEuODcyLTQuNTM2IDEuODcyLTQuNTM2IDQuNTM2LTEuODcyIDQuNTU0IDEuODcyIDEuODkgNC41MzYtMS44OSA0LjUzNi00LjU1NCAxLjg3MnptLTIyLjU3MiA0NC43MTJxMy44MTYgMCA3LjA1Ni0yLjE5Nmw1LjAwNCA1LjAwNHEtNS4yNTYgNC4xNzYtMTIuMDYgNC4xNzYtNS4zMjggMC05Ljg0Ni0yLjYyOHQtNy4xNDYtNy4xMjgtMi42MjgtOS44MjhxMC02Ljc2OCA0LjE3Ni0xMi4wOTZsNS4wMDQgNS4wMDRxLTIuMTYgMy4xNjgtMi4xNiA3LjA5MiAwIDUuMjIgMy42OSA4LjkxdDguOTEgMy42OXpcIixcIlFVRVNUSU9OX0NJUkNMRV9PXCI6XCJNMzEuNjgtMjEuMjM5djUuNzZxMCAuNTA0LS4zMjQuODI4dC0uODI4LjMyNGgtNS43NnEtLjUwNCAwLS44MjgtLjMyNHQtLjMyNC0uODI4di01Ljc2cTAtLjUwNC4zMjQtLjgyOHQuODI4LS4zMjRoNS43NnEuNTA0IDAgLjgyOC4zMjR0LjMyNC44Mjh6bTkuMjE2LTE3Ljg1NnEwIDEuOC0uNTQgMy4yNHQtMS42MzggMi40ODQtMS44NzIgMS41ODQtMi4xNDIgMS4yOTZxLTEuMTUyLjY0OC0xLjY3NCAxLjAwOHQtLjkzNi44NjQtLjQxNCAxLjA0NHYxLjE1MnEwIC41MDQtLjMyNC44Mjh0LS44MjguMzI0aC01Ljc2cS0uNTA0IDAtLjgyOC0uMzI0dC0uMzI0LS44Mjh2LTIuNDQ4cTAtMS4yNi4zNzgtMi4zMjJ0Ljg2NC0xLjcxIDEuNDA0LTEuMjc4IDEuNDc2LS45MTggMS42MDItLjc1NnExLjkwOC0uOSAyLjctMS41NDh0Ljc5Mi0xLjc2NHEwLTEuNTEyLTEuNTY2LTIuNTc0dC0zLjQzOC0xLjA2MnEtMi4wMTYgMC0zLjQyLjk3Mi0xLjA0NC43Mi0yLjg4IDIuOTg4LS4zMjQuNDMyLS45LjQzMi0uMzk2IDAtLjY4NC0uMjE2bC0zLjg4OC0yLjk1MnEtLjM2LS4yNTItLjQzMi0uNzJ0LjE4LS44MjhxNC4zOTItNi45MTIgMTIuNTY0LTYuOTEyIDQuNjQ0IDAgOC41ODYgMy4yMjJ0My45NDIgNy43MjJ6bS0xMy4yNDgtMTYuMTI4cS00LjY4IDAtOC45NDYgMS44MzZ0LTcuMzQ0IDQuOTE0LTQuOTE0IDcuMzQ0LTEuODM2IDguOTQ2IDEuODM2IDguOTQ2IDQuOTE0IDcuMzQ0IDcuMzQ0IDQuOTE0IDguOTQ2IDEuODM2IDguOTQ2LTEuODM2IDcuMzQ0LTQuOTE0IDQuOTE0LTcuMzQ0IDEuODM2LTguOTQ2LTEuODM2LTguOTQ2LTQuOTE0LTcuMzQ0LTcuMzQ0LTQuOTE0LTguOTQ2LTEuODM2em0yNy42NDggMjMuMDRxMCA3LjUyNC0zLjcwOCAxMy44Nzh0LTEwLjA2MiAxMC4wNjItMTMuODc4IDMuNzA4LTEzLjg3OC0zLjcwOC0xMC4wNjItMTAuMDYyLTMuNzA4LTEzLjg3OCAzLjcwOC0xMy44NzggMTAuMDYyLTEwLjA2MiAxMy44NzgtMy43MDggMTMuODc4IDMuNzA4IDEwLjA2MiAxMC4wNjIgMy43MDggMTMuODc4elwiLFwiQkxJTkRcIjpcIk0xMy4xNzYtNTMuMjQzcS0yLjMwNCAwLTMuOTYtMS42Mzh0LTEuNjU2LTMuOTc4cTAtMi4zMDQgMS42NTYtMy45NDJ0My45Ni0xLjYzOCAzLjk0MiAxLjYzOCAxLjYzOCAzLjk0MnEwIDIuMzQtMS42MzggMy45Nzh0LTMuOTQyIDEuNjM4em0xOS44MzYgMjMuMTEycTAgMS44LTEuMDggMi40M3QtMi4yODYuMjM0LTEuNzEtMS4yMjRsLTEzLjIxMi0xNS43NjhxLS4yNTItLjQzMi0uNTA0LS41NTh0LS4zOTYtLjA1NGwtLjEwOC4xMDhxLS4yNTIuMjg4LjE0NC43NTZsNC4zOTIgNS4wMDQuMDM2IDEyLjc0NC01Ljc5NiAxNi40NTJxLTIuNDEyIDYuOTEyLTMuMzEyIDguNDI0LS41NzYuOTM2LTEuMDA4IDEuMTUyLTEuOC45MzYtMy43MDguMDM2LTEuMDQ0LS40NjgtMS40OTQtMS41NDh0LS4zNDItMi4wNTJxLjA3Mi0uNjEyIDcuMDkyLTIyLjI0OGwuMTgtMTQuOTc2LTMuMDYgNS45MDQgMS4yNiA3Ljk5MnEuMTQ0Ljg2NC0uMDM2IDEuNTEydC0uNTA0Ljk5LS42ODQuNTc2LS42MTIuMjdsLS4yNTIuMDcycS0uNjg0LjEwOC0xLjI0Mi0uMTA4dC0uODY0LS41NzYtLjUwNC0uNzkyLS4yNy0uNzAyLS4wNzItLjM0MmwtMS42NTYtMTAuNzY0IDcuNTk2LTEzLjcxNnEuODI4LTEuMjI0IDQuMDY4LTEuMjI0IDIuNyAwIDMuODUyIDEuNDRsMTUuMjY0IDE4Ljc1NnEuMjUyLjE4LjUwNC42MTJsLjEwOC4xMDgtLjAzNi4wMzZxLjI1Mi40NjguMjUyIDEuMDQ0em0tMTQuNTA4IDUuNHExLjU0OCA0LjA2OCAzLjE4NiA4LjF0Mi41MDIgNi4wNDhsLjg2NCAxLjk4cTEuMjk2IDMuMzQ4IDEuNTEyIDQuNS4zOTYgMi41Mi0xLjI5NiAzLjQ5Mi0xLjI2Ljc5Mi0yLjM3Ni41NzZ0LTEuODM2LS43OTItMS4wNDQtMS4yNmgtLjAzNnEtLjIxNi0uNTc2LS4yODgtLjlsLTQuNDY0LTEyLjYzNnptMjkuNjY0IDIxLjMxMnExLjExNiAxLjc2NCAxLjExNiAyLjA1MiAwIC4xOC0uMTA4LjI1Mi0uMzI0LjE4LS41MjItLjAxOHQtLjU1OC0uOTM2LS41NzYtMS4wOThxLTQuMTA0LTYuMTkyLTE1LjIyOC0yMy43OTYuMTA4LjAzNi4yNTItLjAzNnQuMjUyLS4xNDRsLjEwOC0uMDcycS4zOTYtLjMyNC4zOTYtLjYxMnpcIixcIkFVRElPX0RFU0NSSVBUSU9OXCI6XCJNMTguMTQ0LTI4LjY1NWg2LjE1NmwtLjAzNi05LjU0em0zNi45MzYtMy41NjRxMC0zLjEzMi0xLjgxOC01LjA0dC01LjI3NC0xLjkwOGgtMS45NDR2MTMuOTY4aDEuODcycTMuMjc2IDAgNS4yMi0yLjA1MnQxLjk0NC00Ljk2OHptLTIwLjY2NC0xMy41NzJsLjAzNiAyNy4yMTZxMCAuNTA0LS4zNDIuODY0dC0uODQ2LjM2aC03Ljc3NnEtLjUwNCAwLS44NDYtLjM2dC0uMzQyLS44NjR2LTIuMjMyaC0xMC40NzZsLTEuOTggMi45MTZxLS4zNi41NC0xLjAwOC41NGgtOS42MTJxLS43NTYgMC0xLjA5OC0uNjQ4dC4xMjYtMS4yNmwyMC4wMTYtMjcuMjUycS4zMjQtLjUwNC45NzItLjUwNGgxMS45NTJxLjUwNCAwIC44NjQuMzZ0LjM2Ljg2NHptMjkuNzcyIDEzLjU3MnEwIDYuOTQ4LTQuNTE4IDEwLjkwOHQtMTEuNjgyIDMuOTZoLTkuNzJxLS41MDQgMC0uODY0LS4zNnQtLjM2LS44NjR2LTI3LjIxNnEwLS41MDQuMzYtLjg2NHQuODY0LS4zNmg5LjY0OHE3LjIgMCAxMS43MzYgMy45MjR0NC41MzYgMTAuODcyem01LjYxNi4wMzZxMCAuMzk2LS4wMTggMS4wNDR0LS4yODggMi41NzQtLjc3NCAzLjY3Mi0xLjYwMiAzLjg4OC0yLjY0NiAzLjY5aC0xLjgzNnExLjM2OC0xLjYyIDIuMzk0LTMuNzYydDEuNDk0LTQuMDMyLjc1Ni0zLjUyOC4zMjQtMi42MWwuMDM2LS45NzJxMC0uMjg4LS4wMTgtLjgxdC0uMjctMi4xNi0uNzItMy4yOTQtMS40NzYtNC4wMTQtMi4zNzYtNC40ODJoMS41NDhxMS40NzYgMS42OTIgMi41OTIgMy44NTJ0MS42MzggNC4wMTQuODI4IDMuNDU2LjM3OCAyLjUzOHptNi42MjQgMHEwIC4zOTYtLjAxOCAxLjA0NHQtLjI4OCAyLjU3NC0uNzc0IDMuNjcyLTEuNjIgMy44ODgtMi42NjQgMy42OWgtMS44MzZxMS4zNjgtMS42MiAyLjM5NC0zLjc2MnQxLjQ5NC00LjAzMi43NTYtMy41MjguMzI0LTIuNjFsLjAzNi0uOTcycTAtLjI4OC0uMDE4LS44MXQtLjI3LTIuMTYtLjcwMi0zLjI5NC0xLjQ1OC00LjAxNC0yLjM3Ni00LjQ4MmgxLjU0OHExLjQ3NiAxLjY5MiAyLjU5MiAzLjg1MnQxLjYzOCA0LjAxNC44MjggMy40NTYuMzc4IDIuNTM4em02LjUxNiAwcTAgLjM5Ni0uMDE4IDEuMDQ0dC0uMjg4IDIuNTc0LS43NzQgMy42NzItMS42MDIgMy44ODgtMi42NDYgMy42OWgtMS44MzZxMS4zNjgtMS42MiAyLjM3Ni0zLjc2MnQxLjQ3Ni00LjAzMi43NTYtMy41MjguMzI0LTIuNjFsLjAzNi0uOTcycTAtLjI4OC0uMDE4LS44MXQtLjI3LTIuMTYtLjcwMi0zLjI5NC0xLjQ1OC00LjAxNC0yLjM3Ni00LjQ4MmgxLjU0OHExLjQ3NiAxLjY5MiAyLjU5MiAzLjg1MnQxLjYzOCA0LjAxNC44MjggMy40NTYuMzQyIDIuNTM4elwiLFwiVk9MVU1FX0NPTlRST0xfUEhPTkVcIjpcIk0yMi4yMTItMy42MzVxMC0uMzk2LS40NjgtMi4wODh0LTEuMTE2LTMuODUyLS43Mi0yLjQ4NHEtLjAzNi0uMTQ0LS4xOC0uOTU0dC0uMzA2LTEuMjk2LS40ODYtLjc3NHEtLjU0LS41MDQtMS44MzYtLjUwNC0uODI4IDAtMi41Mi4xOTh0LTIuNTU2LjE5OHEtMS4yMjQgMC0xLjY5Mi0uMzk2LS4yMTYtLjE4LS4zOTYtLjU1OHQtLjI3LS43Mi0uMjM0LS44NjQtLjE4LS42NjZxLTEuMzMyLTQuNjA4LTEuMzMyLTkuMTh0MS4zMzItOS4xOGwuMTgtLjY2Ni4yMzQtLjg2NC4yNy0uNzIuMzk2LS41NThxLjQ2OC0uMzk2IDEuNjkyLS4zOTYuODY0IDAgMi41NTYuMTk4dDIuNTIuMTk4cTEuMjk2IDAgMS44MzYtLjUwNC4zMjQtLjI4OC40ODYtLjc3NHQuMzA2LTEuMjk2LjE4LS45NTRxLjA3Mi0uMzI0LjcyLTIuNDg0dDEuMTE2LTMuODUyLjQ2OC0yLjA4OHEwLS43OTItMS41NjYtMS44OXQtMi43MTgtMS41M3EtLjcyLS4yODgtMS42Mi0uMjg4LTEuMjI0IDAtMy41MjguNjQ4LTIuMDUyLjYxMi0zLjQ3NCAxLjQ1OHQtMi41NTYgMi4zNzYtMS42NTYgMi41Mi0xLjYzOCAzLjQwMnEtLjIxNi40MzItLjMyNC42ODQtMS43NjQgMy44NTItMi40NDggNy43NzZ0LS42ODQgOC43ODQuNjg0IDguNzg0IDIuNDQ4IDcuNzc2cTIuMDE2IDQuMzkyIDIuOTg4IDUuNzk2IDIuMjY4IDMuMjc2IDYuNDQ0IDQuNTcybC4yMTYuMDcycTIuMzA0LjY0OCAzLjUyOC42NDguOSAwIDEuNjItLjI4OCAxLjE1Mi0uNDMyIDIuNzE4LTEuNTN0MS41NjYtMS44OXptNS43MjQtMzIuODY4cS0uOTM2IDAtMS42Mi0uNjg0dC0uNjg0LTEuNjM4LjY4NC0xLjYzOHExLjMzMi0xLjMzMiAxLjMzMi0zLjI0IDAtMS44NzItMS4zMzItMy4yNzYtLjY4NC0uNjg0LS42ODQtMS42MnQuNjg0LTEuNjIgMS42Mi0uNjg0IDEuNjIuNjg0cTIuNyAyLjcgMi43IDYuNTE2dC0yLjcgNi41MTZxLS43NTYuNjg0LTEuNjIuNjg0em02LjUxNiA2LjUxNnEtLjk3MiAwLTEuNjItLjY4NC0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MnE0LjAzMi00LjEwNCA0LjAzMi05Ljc5MnQtNC4wMzItOS43OTJxLS42ODQtLjY4NC0uNjg0LTEuNjJ0LjY4NC0xLjYyIDEuNjItLjY4NCAxLjYyLjY4NHE1LjQgNS40IDUuNCAxMy4wMzJ0LTUuNCAxMy4wMzJxLS42NDguNjg0LTEuNjIuNjg0em02LjUxNiA2LjUxNnEtLjk3MiAwLTEuNjItLjY4NC0uNjg0LS42ODQtLjY4NC0xLjYydC42ODQtMS42MnEzLjI0LTMuMjc2IDQuOTg2LTcuNDg4dDEuNzQ2LTguODItMS43NDYtOC44Mi00Ljk4Ni03LjQ4OHEtLjY4NC0uNjg0LS42ODQtMS42MnQuNjg0LTEuNjIgMS42Mi0uNjg0IDEuNjIuNjg0cTMuOTI0IDMuOTI0IDYuMDEyIDguOTY0dDIuMDg4IDEwLjU4NC0yLjA4OCAxMC41ODQtNi4wMTIgOC45NjRxLS42NDguNjg0LTEuNjIuNjg0elwiLFwiQlJBSUxMRVwiOlwiTTYuOTEyLTIxLjgxNXEtMi4zNzYgMC00LjA2OCAxLjY5MnQtMS42OTIgNC4wNjggMS42OTIgNC4wNjggNC4wNjggMS42OTIgNC4wNjgtMS42OTIgMS42OTItNC4wNjgtMS42OTItNC4wNjgtNC4wNjgtMS42OTJ6bTE4LjQzMiAwcS0yLjM3NiAwLTQuMDY4IDEuNjkydC0xLjY5MiA0LjA2OCAxLjY5MiA0LjA2OCA0LjA2OCAxLjY5MiA0LjA2OC0xLjY5MiAxLjY5Mi00LjA2OC0xLjY5Mi00LjA2OC00LjA2OC0xLjY5MnptMC0xOC40MzJxLTIuMzc2IDAtNC4wNjggMS42OTJ0LTEuNjkyIDQuMDY4IDEuNjkyIDQuMDY4IDQuMDY4IDEuNjkyIDQuMDY4LTEuNjkyIDEuNjkyLTQuMDY4LTEuNjkyLTQuMDY4LTQuMDY4LTEuNjkyem0yNy42NDggMTguNDMycS0yLjM3NiAwLTQuMDY4IDEuNjkydC0xLjY5MiA0LjA2OCAxLjY5MiA0LjA2OCA0LjA2OCAxLjY5MiA0LjA2OC0xLjY5MiAxLjY5Mi00LjA2OC0xLjY5Mi00LjA2OC00LjA2OC0xLjY5MnptMTguNDMyIDBxLTIuMzc2IDAtNC4wNjggMS42OTJ0LTEuNjkyIDQuMDY4IDEuNjkyIDQuMDY4IDQuMDY4IDEuNjkyIDQuMDY4LTEuNjkyIDEuNjkyLTQuMDY4LTEuNjkyLTQuMDY4LTQuMDY4LTEuNjkyem0tMTguNDMyLTE4LjQzMnEtMi4zNzYgMC00LjA2OCAxLjY5MnQtMS42OTIgNC4wNjggMS42OTIgNC4wNjggNC4wNjggMS42OTIgNC4wNjgtMS42OTIgMS42OTItNC4wNjgtMS42OTItNC4wNjgtNC4wNjgtMS42OTJ6bTE4LjQzMiAwcS0yLjM3NiAwLTQuMDY4IDEuNjkydC0xLjY5MiA0LjA2OCAxLjY5MiA0LjA2OCA0LjA2OCAxLjY5MiA0LjA2OC0xLjY5MiAxLjY5Mi00LjA2OC0xLjY5Mi00LjA2OC00LjA2OC0xLjY5MnptMC0xOC40MzJxLTIuMzc2IDAtNC4wNjggMS42OTJ0LTEuNjkyIDQuMDY4IDEuNjkyIDQuMDY4IDQuMDY4IDEuNjkyIDQuMDY4LTEuNjkyIDEuNjkyLTQuMDY4LTEuNjkyLTQuMDY4LTQuMDY4LTEuNjkyem0tNTcuNiA0Mi42MjRxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptMTguNDMyIDBxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptLTE4LjQzMi0xOC40MzJxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptMTguNDMyIDBxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptLTE4LjQzMi0xOC40MzJxMCAyLjg4LTIuMDE2IDQuODk2dC00Ljg5NiAyLjAxNi00Ljg5Ni0yLjAxNi0yLjAxNi00Ljg5NiAyLjAxNi00Ljg5NiA0Ljg5Ni0yLjAxNiA0Ljg5NiAyLjAxNiAyLjAxNiA0Ljg5NnptNDYuMDggMzYuODY0cTAgMi44OC0yLjAxNiA0Ljg5NnQtNC44OTYgMi4wMTYtNC44OTYtMi4wMTYtMi4wMTYtNC44OTYgMi4wMTYtNC44OTYgNC44OTYtMi4wMTYgNC44OTYgMi4wMTYgMi4wMTYgNC44OTZ6bS0yNy42NDgtMzYuODY0cTAgMi44OC0yLjAxNiA0Ljg5NnQtNC44OTYgMi4wMTYtNC44OTYtMi4wMTYtMi4wMTYtNC44OTYgMi4wMTYtNC44OTYgNC44OTYtMi4wMTYgNC44OTYgMi4wMTYgMi4wMTYgNC44OTZ6bTQ2LjA4IDM2Ljg2NHEwIDIuODgtMi4wMTYgNC44OTZ0LTQuODk2IDIuMDE2LTQuODk2LTIuMDE2LTIuMDE2LTQuODk2IDIuMDE2LTQuODk2IDQuODk2LTIuMDE2IDQuODk2IDIuMDE2IDIuMDE2IDQuODk2em0tMTguNDMyLTE4LjQzMnEwIDIuODgtMi4wMTYgNC44OTZ0LTQuODk2IDIuMDE2LTQuODk2LTIuMDE2LTIuMDE2LTQuODk2IDIuMDE2LTQuODk2IDQuODk2LTIuMDE2IDQuODk2IDIuMDE2IDIuMDE2IDQuODk2em0xOC40MzIgMHEwIDIuODgtMi4wMTYgNC44OTZ0LTQuODk2IDIuMDE2LTQuODk2LTIuMDE2LTIuMDE2LTQuODk2IDIuMDE2LTQuODk2IDQuODk2LTIuMDE2IDQuODk2IDIuMDE2IDIuMDE2IDQuODk2em0tMTguNDMyLTE4LjQzMnEwIDIuODgtMi4wMTYgNC44OTZ0LTQuODk2IDIuMDE2LTQuODk2LTIuMDE2LTIuMDE2LTQuODk2IDIuMDE2LTQuODk2IDQuODk2LTIuMDE2IDQuODk2IDIuMDE2IDIuMDE2IDQuODk2em0xOC40MzIgMHEwIDIuODgtMi4wMTYgNC44OTZ0LTQuODk2IDIuMDE2LTQuODk2LTIuMDE2LTIuMDE2LTQuODk2IDIuMDE2LTQuODk2IDQuODk2LTIuMDE2IDQuODk2IDIuMDE2IDIuMDE2IDQuODk2elwiLFwiQVNTSVNUSVZFX0xJU1RFTklOR19TWVNURU1TXCI6XCJNNC42MDgtMi4yMzFxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODQtMS42Mi0uNjg0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODQgMS42Mi42ODQuNjg0IDEuNjJ6bTYuOTEyLTYuOTEycTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0LTEuNjItLjY4NC0uNjg0LTEuNjIuNjg0LTEuNjIgMS42Mi0uNjg0IDEuNjIuNjg0LjY4NCAxLjYyem0xLjYyLTEzLjE0bDkuMjE2IDkuMjE2LTMuMjQgMy4yNC05LjIxNi05LjIxNnptMTIuMjA0LS42ODRxMCAuOTM2LS42ODQgMS42MnQtMS42Mi42ODQtMS42Mi0uNjg0LS42ODQtMS42Mi42ODQtMS42MiAxLjYyLS42ODQgMS42Mi42ODQuNjg0IDEuNjJ6bTI1LjQ1Mi0xMS41MnEwIDIuMTI0LS40MTQgMy45MDZ0LTEuMzUgMy4zNjYtMS41ODQgMi40My0xLjkwOCAyLjMyMnEtMS4xMTYgMS4yNi0xLjYzOCAxLjk0NHQtMS4yMDYgMS44LS45NTQgMi4zMDQtLjI3IDIuNjY0cTAgNS43MjQtNC4wNSA5Ljc3NHQtOS43NzQgNC4wNXEtLjkzNiAwLTEuNjItLjY4NHQtLjY4NC0xLjYyLjY4NC0xLjYyIDEuNjItLjY4NHEzLjgxNiAwIDYuNTE2LTIuN3QyLjctNi41MTZxMC0yLjA1Mi40MTQtMy43OTh0MS4zMzItMy4yNzYgMS41NjYtMi4zOTQgMS44NzItMi4yNjhxMS40NC0xLjY1NiAyLjE0Mi0yLjU5MnQxLjM1LTIuNjgyLjY0OC0zLjcyNnEwLTYuNjYtNC43MzQtMTEuMzk0dC0xMS4zOTQtNC43MzQtMTEuMzk0IDQuNzM0LTQuNzM0IDExLjM5NHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NC0xLjYyLS42ODQtLjY4NC0xLjYycTAtNC4yMTIgMS42MzgtOC4wNDZ0NC40MjgtNi42MjQgNi42MjQtNC40MjggOC4wNDYtMS42MzggOC4wNDYgMS42MzggNi42MjQgNC40MjggNC40MjggNi42MjQgMS42MzggOC4wNDZ6bS0xOC41NCA0LjYwOHEwIC45MzYtLjY4NCAxLjYydC0xLjYyLjY4NC0xLjYyLS42ODQtLjY4NC0xLjYyLjY4NC0xLjYyIDEuNjItLjY4NCAxLjYyLjY4NC42ODQgMS42MnptMTAuMzY4LTQuNjA4cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0LTEuNjItLjY4NC0uNjg0LTEuNjJxMC0zLjM0OC0yLjM1OC01LjcwNnQtNS43MDYtMi4zNThxLTMuMzEyIDAtNS42ODggMi4zNTh0LTIuMzc2IDUuNzA2cTAgLjkzNi0uNjg0IDEuNjJ0LTEuNjIuNjg0LTEuNjItLjY4NC0uNjg0LTEuNjJxMC01LjI1NiAzLjcwOC04Ljk2NHQ4Ljk2NC0zLjcwOCA4Ljk2NCAzLjcwOCAzLjcwOCA4Ljk2NHptMTQuMTg0LTEwLjQwNHEuMzYuOS0uMDM2IDEuNzY0dC0xLjI5NiAxLjIyNHEtLjMyNC4xNDQtLjgyOC4xNDQtLjY4NCAwLTEuMjc4LS4zOTZ0LS44NDYtMS4wOHEtMi40NDgtNi40MDgtOC4wNjQtMTAuNjItLjc1Ni0uNTc2LS45LTEuNTEydC40MzItMS42OTJxLjYxMi0uNzU2IDEuNTQ4LS45dDEuNjkyLjQzMnE2LjU4OCA0LjkzMiA5LjU3NiAxMi42MzZ6bTcuNTYtMi45MTZxLjMyNC45LS4wNTQgMS43NjR0LTEuMjc4IDEuMjI0cS0uMzk2LjE0NC0uODI4LjE0NC0xLjU4NCAwLTIuMTYtMS40NzYtMy4zMTItOC41NjgtMTAuNjkyLTE0LjE0OC0uNzkyLS41NzYtLjkxOC0xLjUxMnQuNDUtMS42OTJxLjU3Ni0uNzkyIDEuNTEyLS45MTh0MS42OTIuNDVxOC40NiA2LjMgMTIuMjc2IDE2LjE2NHpcIixcIkFTTF9JTlRFUlBSRVRJTkdcIjpcIk0zNy4xNTItMjkuODc5cS0yLjEyNC0uMDcyLTMuMDI0LTEuOTgtLjYxMi0xLjIyNC0xLjcyOC0xLjkyNnQtMi40NDgtLjcwMnEtMS45MDggMC0zLjI1OCAxLjM1dC0xLjM1IDMuMjU4cTAgMi4wMTYgMS4yOTYgMy4yMDRsLjM2LjI4OHExLjIyNCAxLjExNiAyLjk1MiAxLjExNiAxLjMzMiAwIDIuNDQ4LS43MDJ0MS43MjgtMS45MjZxLjktMS45MDggMy4wMjQtMS45OHptMjAuNDQ4LTQuNjA4cTAtMi4wMTYtMS4yOTYtMy4yMDRsLS4zNi0uMjg4cS0xLjIyNC0xLjExNi0yLjk1Mi0xLjExNi0xLjMzMiAwLTIuNDQ4LjcwMnQtMS43MjggMS45MjZxLS45IDEuOTA4LTMuMDI0IDEuOTggMi4xMjQuMDcyIDMuMDI0IDEuOTguNjEyIDEuMjI0IDEuNzI4IDEuOTI2dDIuNDQ4LjcwMnExLjkwOCAwIDMuMjU4LTEuMzV0MS4zNS0zLjI1OHptLTE1LjMzNi03Ljk1NnEtLjYxMiAxLjI2LTEuOTggMS43Mjh0LTIuNjI4LS4xNDRxLTIuMjMyLTEuMTE2LTQuODI0LTEuMTE2LTEuODM2IDAtMy41NjQuNjEybC4zNDItLjAxOC4zNDItLjAxOHEzLjMxMiAwIDYuMTM4IDEuOHQ0LjI2NiA0Ljc4OHEuNjEyIDEuMjk2LjEyNiAyLjY0NnQtMS43ODIgMS45NjJxLS42NDguMzI0LTEuNDA0LjMyNC43NTYgMCAxLjQwNC4zMjQgMS4yOTYuNjEyIDEuNzgyIDEuOTYydC0uMTI2IDIuNjQ2cS0xLjQ0IDIuOTg4LTQuMjY2IDQuNzg4dC02LjEzOCAxLjhoLS4yMTZxLS41NzYtLjA3Mi0xLjU4NC0uMTQ0bC0xMC40NC0uOTcyLTguNjA0IDQuMzJxLS41MDQuMjUyLTEuMDQ0LjI1Mi0xLjQ0IDAtMi4wNTItMS4yNmwtNS43Ni0xMS41MnEtLjM5Ni0uODI4LS4xNDQtMS43MXQxLjA0NC0xLjM1bDcuNTI0LTQuMjg0IDUuMzI4LTkuNjEycS42MTItNS41OCAzLjI5NC0xMC40OTR0Ny4wMzgtOC41MTRxMS4xMTYtLjkgMi41MzgtLjc3NHQyLjMyMiAxLjI0Mi43NzQgMi41Mi0xLjI0MiAyLjM0cS0yLjUyIDIuMTI0LTQuMjEyIDQuNjA4IDQuNDI4LTMuMDI0IDkuNjEyLTMuNjM2IDEuNDQtLjE4IDIuNTc0LjY4NHQxLjI3OCAyLjMwNHEuMTggMS40NC0uNjg0IDIuNTc0dC0yLjMwNCAxLjI3OHEtMy4wMjQuMzYtNS43MjQgMS45OCAxLjY1Ni0uMzYgMy41NjQtLjM2IDQuMTQgMCA3Ljg0OCAxLjggMS4yOTYuNjQ4IDEuNzY0IDEuOTk4dC0uMTggMi42NDZ6bTM0LjY2OC01Ljc2bDUuNzYgMTEuNTJxLjM5Ni44MjguMTQ0IDEuNzF0LTEuMDQ0IDEuMzVsLTcuNTI0IDQuMjg0LTUuMzI4IDkuNjEycS0uNjEyIDUuNTgtMy4yOTQgMTAuNDk0dC03LjAzOCA4LjUxNHEtLjkzNi43OTItMi4xOTYuNzkyLTEuNjIgMC0yLjY2NC0xLjI2LS45LTEuMTE2LS43NzQtMi41MnQxLjI0Mi0yLjM0cTIuNTItMi4xMjQgNC4yMTItNC42MDgtNC40MjggMy4wMjQtOS42MTIgMy42MzYtLjE0NC4wMzYtLjQzMi4wMzYtMS4yOTYgMC0yLjI4Ni0uODY0dC0xLjEzNC0yLjE2cS0uMTgtMS40NC42ODQtMi41NzR0Mi4zMDQtMS4yNzhxMy4wMjQtLjM2IDUuNzI0LTEuOTgtMS42NTYuMzYtMy41NjQuMzYtNC4xNCAwLTcuODQ4LTEuOC0xLjI5Ni0uNjQ4LTEuNzY0LTEuOTk4dC4xOC0yLjY0NnEuNjEyLTEuMjYgMS45OC0xLjcyOHQyLjYyOC4xNDRxMi4yMzIgMS4xMTYgNC44MjQgMS4xMTYgMS44MzYgMCAzLjU2NC0uNjEybC0uMzQyLjAxOC0uMzQyLjAxOHEtMy4zMTIgMC02LjEzOC0xLjh0LTQuMjY2LTQuNzg4cS0uNjEyLTEuMjk2LS4xMjYtMi42NDZ0MS43ODItMS45NjJxLjY0OC0uMzI0IDEuNDA0LS4zMjQtLjc1NiAwLTEuNDA0LS4zMjQtMS4yOTYtLjYxMi0xLjc4Mi0xLjk2MnQuMTI2LTIuNjQ2cTEuNDQtMi45ODggNC4yNjYtNC43ODh0Ni4xMzgtMS44aC4yNTJxLjUwNC4wNzIgMS41MTIuMTQ0bDEwLjQ3Ni45NzIgOC42MDQtNC4zMnEuNTA0LS4yNTIgMS4wNDQtLjI1MiAxLjQ0IDAgMi4wNTIgMS4yNnpcIixcIkhBUkRfT0ZfSEVBUklOR1wiOlwiTTM4LjAxNi0zNC40ODdxMCAuOTM2LjY4NCAxLjYydDEuNjIuNjg0IDEuNjItLjY4NC42ODQtMS42MnEwLTUuMjU2LTMuNzA4LTguOTY0dC04Ljk2NC0zLjcwOC04Ljk2NCAzLjcwOC0zLjcwOCA4Ljk2NHEwIC45MzYuNjg0IDEuNjJ0MS42Mi42ODQgMS42Mi0uNjg0LjY4NC0xLjYycTAtMy4zNDggMi4zNzYtNS43MDZ0NS42ODgtMi4zNTggNS42ODggMi4zNTggMi4zNzYgNS43MDZ6bS03Ljk1Ni0yMC43MzZxLTQuMjEyIDAtOC4wNDYgMS42Mzh0LTYuNjI0IDQuNDI4LTQuNDI4IDYuNjI0LTEuNjM4IDguMDQ2cTAgLjkzNi42ODQgMS42MnQxLjYyLjY4NCAxLjYyLS42ODQuNjg0LTEuNjJxMC02LjY2IDQuNzM0LTExLjM5NHQxMS4zOTQtNC43MzQgMTEuMzk0IDQuNzM0IDQuNzM0IDExLjM5NHEwIDEuOTgtLjY0OCAzLjcyNnQtMS4zNSAyLjY4Mi0yLjE0MiAyLjU5MnEtMS4yMjQgMS40MDQtMS44NzIgMi4yNjh0LTEuNTY2IDIuMzk0LTEuMzMyIDMuMjc2LS40MTQgMy43OThxMCAzLjgxNi0yLjcgNi41MTZ0LTYuNTE2IDIuN3EtLjkzNiAwLTEuNjIuNjg0dC0uNjg0IDEuNjIuNjg0IDEuNjIgMS42Mi42ODRxNS43MjQgMCA5Ljc3NC00LjA1dDQuMDUtOS43NzRxMC0xLjQ3Ni4yNy0yLjY2NHQuOTU0LTIuMzA0IDEuMjA2LTEuOCAxLjYzOC0xLjk0NHExLjI2LTEuNDc2IDEuOTA4LTIuMzIydDEuNTg0LTIuNDMgMS4zNS0zLjM2Ni40MTQtMy45MDZxMC00LjIxMi0xLjYzOC04LjA0NnQtNC40MjgtNi42MjQtNi42MjQtNC40MjgtOC4wNDYtMS42Mzh6bS04Ljc4NCAyNS44ODRsOC4xMzYgOC4xMzYtMjAuODQ0IDIwLjg0NHEtLjQzMi40MzItMS4wNDQuNDMydC0xLjA0NC0uNDMybC02LjA0OC02LjA0OHEtLjQzMi0uNDMyLS40MzItMS4wNDR0LjQzMi0xLjA0NHptMzYuNzU2LTM0LjY2OGw2LjA0OCA2LjA0OHEuNDMyLjQzMi40MzIgMS4wNDR0LS40MzIgMS4wOGwtOC4zODggOC4zODgtLjkzNi45LTIuNTU2IDIuNTU2cS0yLjM3Ni01LjUwOC03LjAyLTkuMjg4bDMuMjc2LTMuMjc2IDcuNDUyLTcuNDUycS40NjgtLjQzMiAxLjA4LS40MzJ0MS4wNDQuNDMyelwiLFwiR0xJREVcIjpcIk0zMS4xNzYtNDUuODk5cTAgLjk3Mi0uNDY4IDMuMzg0LS4zOTYgMS44LTEuMTM0IDUuNHQtMS4wOTggNS40cS0uMDcyLjM5Ni0uMTYyLjQ1dC0uNDg2LjA5cS0uNzIuMDcyLTEuMTE2LjA3Mi0yLjA4OCAwLTMuMDI0LTEuNzgydC0uOTM2LTQuMDg2cTAtMy4xNjggMS4yNi02LjI2NHQzLjcwOC00LjQ2NHExLjAwOC0uNTA0IDEuODM2LS41MDQgMS4wMDggMCAxLjMxNC41OTR0LjMwNiAxLjcxem0xNy40OTYgMTUuMjY0cTAtLjUwNC0xLjQwNC0yLjcxOHQtMS44NzItMi4zOTRxLS43NTYtLjI4OC0xLjIyNC0uMjg4LTMuMjc2IDAtOC4xMzYgMi43NzJsLS4wNzItLjA3MnEuMTA4LS43OTIuOTktNC44NnQuODgyLTYuNDA4cTAtOC4zODgtOC43MTItOC4zODgtLjg2NCAwLTIuNDQ4LjIxNi0zLjM4NC42MTItNi4wNjYgMy4yMjJ0LTQuMDE0IDUuOTk0LTEuMzMyIDYuODA0cTAgNS4yNTYgMi44OTggOC4xdDguMTkgMi44NDRxLjkgMCAuOS4xMDh0LS4wMzYuMThxLS4xNDQgMS4yMjQtLjkzNiA0LjIxMi0uNTA0IDEuODcyLTEuODU0IDMuNjM2dC0yLjk3IDEuNzY0cS0xLjUxMiAwLTEuNTEyLTEuNjkyIDAtLjg2NC4zNzgtMS43MXQuOS0xLjQyMiAxLjA2Mi0xLjAyNi45MzYtLjcyLjM5Ni0uMzA2cTAtLjEwOC0uMjUyLS4zNi0uODY0LS43OTItMi4xMDYtMS4zMTR0LTIuMzU4LS41MjJxLTEuMjYgMC0yLjI4NiAxLjIyNHQtMS40NzYgMi43LS40NSAyLjdxMCAzLjE2OCAxLjg1NCA1LjExMnQ0Ljk4NiAxLjk0NHEyLjk1MiAwIDUuNTgtMS45MDh0NC4yMy00LjUzNiAyLjM1OC01LjUwOHEuMjE2LS43OTIuNTU4LTIuMzk0dC41MjItMi4zOTRxLjEwOC0uNDMyLjUwNC0uNjQ4IDQuMjQ4LTIuMTYgOC4xNzItMi4xNiAxLjcyOCAwIDQuNTcyLjY0OGwuMTQ0LjAzNnEuMTggMCAuMzQyLS4xNjJ0LjE2Mi0uMzA2em02LjYyNC0xOC44Mjh2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiR0xJREVfR1wiOlwiTTI2Ljc4NC01My40NTlxMC0uODY0LS4wNzItMS4zODZ0LS4zMDYtMS4wOC0uNzU2LS44MjgtMS4zNS0uMjdxLTEuNDA0IDAtMi44MDguODI4LTMuNzggMi4wODgtNS43MjQgNi44NTh0LTEuOTQ0IDkuNzAycTAgMS41ODQuMzA2IDMuMDc4dC45NTQgMi44OTggMS44OSAyLjI1IDIuOTM0Ljg0NnEuMTQ0IDAgLjY0OC4wMTh0LjcyIDAgLjU3Ni0uMTA4LjU0LS4zMDYuMjUyLS41NzZxLjU3Ni0yLjc3MiAxLjcyOC04LjMzNHQxLjcyOC04LjMzNHEuNjg0LTMuMjc2LjY4NC01LjI1NnptMjcuMTQ0IDIzLjYxNnEwIC4yNTItLjI3LjQ4NnQtLjU1OC4yMzRsLS4yMTYtLjAzNnEtLjc5Mi0uMTA4LTIuMjMyLS4zOTZ0LTIuNTkyLS40NS0yLjI2OC0uMTYycS02LjAxMiAwLTEyLjYzNiAzLjM0OC0uNTQuMjg4LS43NTYuOTcyLS4zNiAxLjI5Ni0uODgyIDMuNzk4dC0uODEgMy42MThxLS44MjggMy4yNzYtMi41MiA2LjQ2MnQtNC4wNSA1LjkyMi01LjU2MiA0LjQyOC02LjY2IDEuNjkycS00Ljg2IDAtNy43MjItMy4wMDZ0LTIuODYyLTcuOTAycTAtMS45MDguNzAyLTQuMjEydDIuMjY4LTQuMTk0IDMuNTEtMS44OXExLjM2OCAwIDQuMzIgMS4yMDZ0Mi45ODggMi4yMTRxMCAuMDM2LS41OTQuNDV0LTEuNDIyIDEuMTE2LTEuNjU2IDEuNjAyLTEuNDA0IDIuMTk2LS41NzYgMi42NjRxMCAxLjE4OC41OTQgMS45MDh0MS43NDYuNzJxMS42MiAwIDMuMDYtMS4xMzR0Mi4zOTQtMi44MDggMS43MjgtMy43OTggMS4xNy0zLjg1Mi41NzYtMy4yNHYtLjMyNHEwLS4wNzItLjEyNi0uMTI2dC0uMzA2LS4wNTRoLS4zNmwtLjM2LjAxOC0uMjE2LjAxOHEtOC4xNzIgMC0xMi42NzItNC40MXQtNC41LTEyLjU0NnEwLTMuODg4IDEuMjQyLTcuOTU2dDMuNDU2LTcuNTYgNS42MTYtNi4wMyA3LjM2Mi0zLjIyMnExLjg3Mi0uMzI0IDMuODE2LS4zMjQgMTMuNDY0IDAgMTMuNDY0IDEyLjk2IDAgMy41MjgtMS4zNjggOS44Mjh0LTEuNTQ4IDcuNTk2bC4xMDguMTA4cTMuNjM2LTIuMDUyIDYuNTctMy4xNjh0Ni4wMy0xLjExNnEuNzkyIDAgMS45MDguNDY4LjY4NC4yNTIgMi44OCAzLjY5dDIuMTk2IDQuMTk0elwiLFwiU0lHTklOR1wiOlwiTTI5LjkxNi00MC4yMTFxMS4xNTIgMCAyLjEyNC42NDhsNy45OTIgNS4zMjhxMi4xOTYgMS40NCAzLjk2IDMuNDkybDUuMjU2IDYuMTJxMS40NCAxLjY1NiAxLjA0NCAzLjgxNmwtMi41OTIgMTQuODY4cS0uMjE2IDEuMTUyLTEuMDYyIDEuOTI2dC0xLjk5OC45MThsLTE4Ljk3MiAyLjAxNi0xMi42NzIgMS4xNTJoLS4zMjRxLTEuNDA0IDAtMi40My0xLjAwOHQtMS4wMjYtMi40NDhxMC0xLjMzMi45NzItMi4zMDR0Mi4zNC0xLjE1Mmw5LjM2LTEuMTUyaC0xNi4xMjhxLTEuNDc2IDAtMi41MDItMS4wOHQtLjk1NC0yLjU1NnEuMDcyLTEuNDA0IDEuMTUyLTIuMzR0Mi40ODQtLjkzNmwxNS45MTItLjAzNi0xOC43NTYtMi4zMDRxLTEuNDc2LS4xOC0yLjM3Ni0xLjMzMnQtLjY4NC0yLjYyOHEuMjE2LTEuMjYgMS4yNDItMi4wN3QyLjM1OC0uODFoLjM2bDE3LjMxNiAyLjE2LTEyLjYzNi0zLjM4NHEtMS4zNjgtLjM2LTIuMjMyLTEuNDk0dC0uNjQ4LTIuNDY2cS4yMTYtMS4yOTYgMS4xODgtMi4xMDZ0Mi4yMzItLjgxcS4yMTYgMCAuNzIuMDcybDE2LjEyOCAzLjQ1NiA3LjgxMiAxLjMzMi4xMDguMDE4LjEwOC4wMThxLjgyOCAwIDEuMDk4LS44Mjh0LS40NS0xLjI5NmwtNi42OTYtNC41cS0xLjI2LS44MjgtMS41MTItMi4yODZ0LjY0OC0yLjY0NnEuOTcyLTEuMzY4IDIuNzM2LTEuMzY4em0tMi41MiA3LjI3Mmw2LjY5NiA0LjUtNy44NDgtMS4zMzItLjE4LS4wNzItMS4yOTYtMS4zNjgtOC41NjgtOS40MzItLjA5LS4xMjYtLjA5LS4xMjZxLS44NjQtMS4xMTYtLjY2Ni0yLjUydDEuMzUtMi4zMDRxMS4xMTYtLjgyOCAyLjQ0OC0uNjN0Mi4zMDQgMS4yMDZsNS4xMTIgNS4yOTItLjE0NC4xNDQtLjE4LjE0NHEtMS4xNTIgMS42Mi0uODI4IDMuNTY0dDEuOTggMy4wNnptMzEuOTMyLTE2LjM0NGwuNTQgOS41NzZxLjE0NCAyLjYyOC0uMzk2IDUuMjkybC0xLjcyOCA3Ljg4NHEtLjQzMiAyLjEyNC0yLjQxMiAzLjEzMmwtMy44MTYgMS45NDRxLjA3Mi0yLjIzMi0xLjQwNC0zLjkyNGwtNS4yNTYtNi4xMnEtMS45MDgtMi4xOTYtNC4yMTItMy43MDhsLTcuOTkyLTUuMzI4cS0xLjIyNC0uODI4LTIuNzM2LS44MjgtMS44MzYgMC0zLjE2OCAxLjMzMmwtOC40Ni0xMS4yMzJxLS45LTEuMTg4LS42NDgtMi42NDZ0MS40NzYtMi4yODZxMS4xODgtLjc5MiAyLjU3NC0uNTA0dDIuMjUgMS40NGw5LjU3NiAxMi42NzItOS40MzItMTYuMzhxLS43NTYtMS4yNi0uMzc4LTIuN3QxLjcxLTIuMTI0cTEuMjYtLjY0OCAyLjYxLS4yMTZ0Mi4wNyAxLjY1Nmw4LjY3NiAxNS4xMi00Ljg5Ni0xMi4xMzJxLS41NC0xLjI2LS4xNjItMi42NjR0MS42MDItMi4wMTZxMS4zMzItLjY4NCAyLjczNi0uMjE2dDIuMDE2IDEuODM2bDYuOTQ4IDE0Ljk0IDMuNjM2IDcuMDU2cS4yODguNTQuODI4LjYzdC45NzItLjI3LjM5Ni0uOTM2bC0uNDMyLTguMDY0cS0uMDcyLTEuNDc2LjkzNi0yLjU1NnQyLjQ4NC0xLjExNnExLjQwNCAwIDIuNDEyIDEuMDI2dDEuMDggMi40M3pcIixcIkxPV19WSVNJT05cIjpcIk0xMi4wNi0xNS42MjNxLS4wNzIgMC0uMjE2LS4wNzItMy4wOTYtMi4wNTItNi4wNjYtNS4yMnQtNS4wMjItNi40OHEtLjc1Ni0xLjA4LS43NTYtMi40ODQgMC0uMzI0LjA3Mi0uNjg0dC4xNDQtLjY0OC4yNTItLjY0OC4zMDYtLjU3Ni4zNzgtLjYxMi4zNi0uNTQuNDMyLS41NTguMzk2LS41MjJxNi42MjQtOS4wMzYgMTYuMjcyLTEzLjE0LTMuOTYtNy4xMjgtMy45Ni03LjU5NiAwLS42ODQuNjEyLTEuMDQ0IDQuMTc2LTIuMzA0IDQuNjA4LTIuMzA0LjY0OCAwIDEuMDA4LjU3Nmw0LjQ2NCA4LjI0NHEzLjMxMi0uNjg0IDYuOTEyLS42ODQgOS41NzYgMCAxNy45MSA0Ljk1dDEzLjYyNiAxMy4zMDJxLjcyIDEuMTE2LjcyIDIuNDg0dC0uNzIgMi40ODRxLTMuMjc2IDUuMTEyLTcuODY2IDkuMTI2dC0xMC4wMjYgNi4zMThxMy45NiA3LjEyOCAzLjk2IDcuNTk2IDAgLjcyLS42MTIgMS4wNDQtNC4xNzYgMi4zMDQtNC41NzIgMi4zMDQtLjY4NCAwLTEuMDQ0LS41NzZsLTQuNDY0LTguMjQ0LTIuMzA0LTQuMjg0LTE1Ljk4NC0yOS41Mi4yNTItLjI1MnEtMi4wODguODY0LTMuNTY0IDEuNjkyLjEwOC4xOCA0LjU3MiA4LjQyNHQ4Ljc0OCAxNi4xNjQgNC4yODQgOC4wMjhxMCAuMjUyLS4zMjQuMzI0LS40NjguMTA4LTIuNTkyLjEwOC0yLjA1MiAwLTIuMTYtLjI1MmwtMTYuNDE2LTMwLjI3NnEtMS40MDQgMS4wMDgtMi45NTIgMi40NDguODY0IDEuNTQ4IDcuNzA0IDE0LjE2NnQ2Ljg0IDEyLjc2MnEwIC4zNi0uMzk2LjM2LS41MDQgMC0yLjk3LS43OTJ0LTIuNjEtMS4wMDhsLTMuODE2LTcuMDkyLTguMDY0LTE0Ljg2OHEtMS41ODQgMS45MDgtMi44MDggMy44MTYuMDcyLjEwOC42NDguOXQuODI4IDEuMjI0bDYuMzM2IDExLjc3MnEwIC4zNi0uMzYuMzZ6bTI5Ljg4LTMuNjcybDEuNzY0IDMuMjc2cTkuODI4LTMuOTk2IDE2LjItMTMuODYtNi40OC05Ljk3Mi0xNi41MjQtMTQuMDA0IDIuNDEyIDIuMzA0IDMuNzA4IDUuMzQ2dDEuMjk2IDYuMzU0cTAgMy44MTYtMS42OTIgNy4yMTh0LTQuNzUyIDUuNjd6bS0xMS40MTItMjIuMTA0cTAgLjcyLjUwNCAxLjIyNHQxLjIyNC41MDRxMy4wOTYgMCA1LjI5MiAyLjE5NnQyLjE5NiA1LjI5MnEwIC43Mi41MDQgMS4yMjR0MS4yMjQuNTA0IDEuMjI0LS41MDQuNTA0LTEuMjI0cTAtNC41MzYtMy4yMDQtNy43NHQtNy43NC0zLjIwNHEtLjcyIDAtMS4yMjQuNTA0dC0uNTA0IDEuMjI0em0xMy4xNzYtMi4zNGwtLjMyNC0uMTQ0LjI1Mi4yNTJ6XCIsXCJWSUFERU9cIjpcIk0zNy44LTI0LjYyM3EwIDcuNzQtNS4yOTIgMTMuNDY0LTUuMzI4IDUuNzk2LTEzLjYwOCA1Ljc5Ni04LjM1MiAwLTEzLjYwOC01Ljc5Ni01LjI5Mi01LjcyNC01LjI5Mi0xMy40NjQgMC01LjI5MiAyLjQ0OC05LjczOHQ2LjgwNC03LjA3NCA5LjY0OC0yLjYyOHEzLjQ1NiAwIDYuNTUyIDEuMTE2LTEuMTUyIDIuMjMyLTEuNDA0IDQuNTM2LTIuMzc2LTEuMDA4LTUuMTQ4LTEuMDA4LTYuMDEyIDAtMTAuMDk4IDQuNDI4dC00LjA4NiAxMC40NzZxMCA2LjEyIDQuMDUgMTAuMzg2dDEwLjEzNCA0LjI2NiAxMC4xMTYtNC4yNjYgNC4wMzItMTAuMzg2cTAtMy4yMDQtMS4xNTItNS45NzYgMi4zNzYtLjQ2OCA0LjQyOC0xLjc2NCAxLjQ3NiAzLjUyOCAxLjQ3NiA3LjYzMnptLTcuMzQ0LTYuODA0cTAgNi45MTItMi44NjIgMTIuNDJ0LTguNTg2IDkuMTA4bC0uNTA0LjAzNnEtMS4wNDQgMC0yLjIzMi0uMTggMi45ODgtMS4xNTIgNS4yNzQtMy42OXQzLjU4Mi01LjU2MiAyLjEwNi02LjgwNCAxLjA4LTYuOTMuMjctNi40MjZxMC0yLjQ4NC0uMTA4LTMuNzA4IDEuOTggNS43NiAxLjk4IDExLjczNnptLTEuOTgtMTEuODA4di4wNzJxLTIuNjI4LTcuNzA0LTcuNDE2LTE1Ljg0IDMuMTY4IDIuMTI0IDUuMTMgNi43MTR0Mi4yODYgOS4wNTR6bTguNzg0IDcuMzA4cS0yLjk4OCAwLTUuNzYtMi43IDcuODQ4LTQuMzIgMTAuNDQtOC44OTIuNjg0LTEuMzMyLjc1Ni0yLjAxNi0xLjUxMiAzLjM4NC01LjAyMiA1Ljk5NHQtNy4zNjIgMy41MXEtMS4yNi0xLjk0NC0xLjI2LTQuMDY4IDAtMS4zMzIuNjEyLTIuODQ0dDEuNTQ4LTIuNDQ4cTEuNjU2LTEuNTg0IDUuNjUyLTIuNjY0IDIuMTI0LS41NzYgMy44MTYtMi4xMDZ0Mi42NjQtMy42MThxMi42NjQgMy43OCAyLjY2NCA5LjEwOCAwIDMuOTI0LS44NjQgNi4xMi0xLjE1MiAyLjc3Mi0zLjE4NiA0LjY5OHQtNC42OTggMS45MjZ6XCIsXCJWSUFERU9fU1FVQVJFXCI6XCJNMzcuOC0yNi45NjNxMC0yLjgwOC0xLjAwOC01LjI5Mi0xLjQ3Ni45LTMuMDYgMS4yMjQuNzkyIDEuOC43OTIgNC4xMDQgMCA0LjIxMi0yLjc3MiA3LjE0NnQtNi45NDggMi45MzQtNi45NjYtMi45MzQtMi43OS03LjE0NnEwLTQuMTQgMi44MDgtNy4xODJ0Ni45NDgtMy4wNDJxMS45MDggMCAzLjUyOC42ODQuMTQ0LTEuNTQ4Ljk3Mi0zLjEzMi0yLjE2LS43NTYtNC41LS43NTYtNS41NDQgMC05LjI3IDMuOTA2dC0zLjcyNiA5LjQ4NiAzLjcyNiA5LjM5NiA5LjI3IDMuODE2IDkuMjctMy44MzQgMy43MjYtOS4zNzh6bS02LjQwOC0xMi43OHEuMDcyLjg2NC4wNzIgMi41NTYgMCAyLjI2OC0uMTggNC40Mjh0LS43MzggNC43Ny0xLjQ1OCA0LjY4LTIuNDY2IDMuODE2LTMuNjE4IDIuNTM4cS43NTYuMTA4IDEuNTEyLjEwOGguMzZxNy44ODQtNS4wMDQgNy44ODQtMTQuNzk2IDAtNC4xNzYtMS4zNjgtOC4xem0wIDBxLS4xNDQtMi44OC0xLjU4NC02LjE3NHQtMy41MjgtNC42OThxMy4zMTIgNS42MTYgNS4xMTIgMTAuODcyem0xMi4wNi0zLjc4cTAtMy42NzItMS44MzYtNi4yNjQtMS40NzYgMy4wOTYtNC40NjQgMy45MjQtMi40ODQuNjg0LTMuOTI0IDEuOTI2dC0xLjQ0IDMuNTgycTAgMS40NC44NjQgMi43NzIgMi42NjQtLjYxMiA1LjA1OC0yLjQxMnQzLjQzOC00LjE0cS0uMTQ0IDEuODcyLTIuNjgyIDQuMDE0dC00Ljk4NiAzLjUxcTEuODcyIDEuODcyIDMuOTYgMS44NzIgMS44MzYgMCAzLjI0LTEuMzMydDIuMTYtMy4yNHEuNjEyLTEuNTQ4LjYxMi00LjIxMnptMTEuODQ0LTUuOTR2MzQuNTZxMCA0LjI4NC0zLjA0MiA3LjMyNnQtNy4zMjYgMy4wNDJoLTM0LjU2cS00LjI4NCAwLTcuMzI2LTMuMDQydC0zLjA0Mi03LjMyNnYtMzQuNTZxMC00LjI4NCAzLjA0Mi03LjMyNnQ3LjMyNi0zLjA0MmgzNC41NnE0LjI4NCAwIDcuMzI2IDMuMDQydDMuMDQyIDcuMzI2elwiLFwiU05BUENIQVRcIjpcIk00Ni4wNDQtMjMuMTExcTAtLjc5Mi0uNzkyLS45NzItMi40MTItLjU0LTQuMjQ4LTIuMTI0dC0yLjg4LTMuODg4cS0uMjUyLS42ODQtLjI1Mi0uOSAwLS41NC43MDItLjkzNnQxLjU0OC0uNjEyIDEuNTQ4LS43MzguNzAyLTEuMzE0cTAtLjY4NC0uNjY2LTEuMTM0dC0xLjM4Ni0uNDVxLS40MzIgMC0xLjE1Mi4yODh0LTEuMTE2LjI4OHEtLjE0NCAwLS40MzItLjA3Mi4xOC0zLjQyLjE4LTQuMTA0IDAtMi44NDQtLjYxMi00LjEwNC0xLjI5Ni0yLjgwOC0zLjcwOC00LjM3NHQtNS40NzItMS41NjZxLTcuMTY0IDAtOS45IDUuOTQtLjYxMiAxLjI2LS42MTIgNC4xMDQgMCAuNjg0LjE4IDQuMTA0LS4xNDQuMDcyLS41MDQuMDcyLS40MzIgMC0xLjE1Mi0uMjd0LTEuMDgtLjI3cS0uNzU2IDAtMS4zODYuNDMydC0uNjMgMS4xNTJxMCAuNzU2LjcwMiAxLjI3OHQxLjU0OC43MzggMS41NDguNjEyLjcwMi45MzZxMCAuMjE2LS4yNTIuOS0yLjMwNCA0Ljk2OC03LjEyOCA2LjAxMi0uNzkyLjE4LS43OTIuOTcyIDAgMS42NTYgNC45MzIgMi40NDguMDcyLjE4LjIxNi45MzZ0LjQxNCAxLjA5OC44NDYuMzQycS40MzIgMCAxLjM1LS4xNjJ0MS40MjItLjE2MnExLjI2IDAgMi40MTIuNTR0MS45NDQgMS4xNyAyLjA3IDEuMTcgMi43NTQuNTRxMS41NDggMCAyLjg0NC0uNTR0Mi4wNy0xLjE3IDEuOTI2LTEuMTcgMi40MTItLjU0cS41MDQgMCAxLjQyMi4xNDR0MS4zODYuMTQ0cS41NzYgMCAuODI4LS4zNnQuMzk2LTEuMDguMjE2LS45cTQuOTMyLS43OTIgNC45MzItMi40NDh6bTkuMjUyLTkuMDcycTAgNy41MjQtMy43MDggMTMuODc4dC0xMC4wNjIgMTAuMDYyLTEzLjg3OCAzLjcwOC0xMy44NzgtMy43MDgtMTAuMDYyLTEwLjA2Mi0zLjcwOC0xMy44NzggMy43MDgtMTMuODc4IDEwLjA2Mi0xMC4wNjIgMTMuODc4LTMuNzA4IDEzLjg3OCAzLjcwOCAxMC4wNjIgMTAuMDYyIDMuNzA4IDEzLjg3OHpcIixcIlNOQVBDSEFUX0dIT1NUXCI6XCJNMzAuNTI4LTU5LjgzMXE0LjgyNC0uMDM2IDguNjU4IDIuNDY2dDUuODg2IDYuOTNxLjk3MiAyLjA4OC45NzIgNi40NDQgMCAxLjY5Mi0uMzI0IDYuODc2LjUwNC4yNTIgMS4wMDguMjUyLjY0OCAwIDEuODM2LS40ODZ0MS44MzYtLjQ4NnExLjA0NCAwIDIuMDE2LjY0OHQuOTcyIDEuNjU2cTAgMS4xNTItMS4xMzQgMS45NDR0LTIuNDg0IDEuMTM0LTIuNDg0IDEuMDQ0LTEuMTM0IDEuNzFxMCAuNTQuNDMyIDEuNTQ4IDEuMzMyIDIuOTUyIDMuNjkgNS40dDUuMjAyIDMuNjM2cTEuMDA4LjQzMiAyLjg4LjgyOCAxLjAwOC4yMTYgMS4wMDggMS4yNiAwIDIuNTItNy44ODQgMy43MDgtLjI1Mi4zOTYtLjM5NiAxLjQwNHQtLjUwNCAxLjY3NC0xLjE4OC42NjZxLS43MiAwLTIuMjMyLS4yMzR0LTIuMzA0LS4yMzRxLTEuMzMyIDAtMi4yMzIuMTgtMS4xNTIuMTgtMi4yNjguODF0LTIuMDg4IDEuMzY4LTIuMDg4IDEuNDU4LTIuNzM2IDEuMjA2LTMuNTY0LjQ4NnEtMS44NzIgMC0zLjQ3NC0uNDg2dC0yLjctMS4yMDYtMi4wNy0xLjQ1OC0yLjA4OC0xLjM2OC0yLjIzMi0uODFxLS45MzYtLjE4LTIuMjY4LS4xOC0uODY0IDAtMi4zNTguMjd0LTIuMTA2LjI3cS0uOSAwLTEuMjYtLjY2NnQtLjUwNC0xLjcxLS4zOTYtMS40NHEtNy44ODQtMS4xODgtNy44ODQtMy43MDggMC0xLjA0NCAxLjAwOC0xLjI2IDEuODcyLS4zOTYgMi44OC0uODI4IDIuODA4LTEuMTUyIDUuMjAyLTMuNjM2dDMuNjktNS40cS40MzItMS4wMDguNDMyLTEuNTQ4IDAtMS4wMDgtMS4xMzQtMS43MXQtMi41MDItMS4wNjItMi41MDItMS4xMzQtMS4xMzQtMS44OXEwLS45NzIuOTM2LTEuNjM4dDEuOTgtLjY2NnEuNTQgMCAxLjcyOC40Njh0MS45MDguNDY4cS42NDggMCAxLjE1Mi0uMjUyLS4zMjQtNS4xMTItLjMyNC02Ljg0IDAtNC4zOTIuOTcyLTYuNDggMi4zMDQtNC45MzIgNi4xOTItNy4xMjh0OS41MDQtMi4yNjh6XCIsXCJTTkFQQ0hBVF9TUVVBUkVcIjpcIk00Ni4wOC0yMy4xMTFxMC0uNzkyLS43OTItLjk3Mi0yLjQxMi0uNTA0LTQuMjQ4LTIuMDg4dC0yLjg4LTMuOTI0cS0uMjUyLS41MDQtLjI1Mi0uOSAwLS41NC43MDItLjkzNnQxLjUzLS42MTIgMS41My0uNzM4LjcwMi0xLjMxNHEwLS42ODQtLjY2Ni0xLjEzNHQtMS4zODYtLjQ1cS0uMzk2IDAtMS4xMTYuMjg4dC0xLjE1Mi4yODhxLS4xNDQgMC0uNDMyLS4wNzIuMTgtMi4yNjguMTgtNC4xNCAwLTIuODA4LS42MTItNC4xMDQtMS4yOTYtMi44MDgtMy42OS00LjM3NHQtNS40OS0xLjU2NnEtNy4xMjggMC05LjkgNS45NC0uNjQ4IDEuMzY4LS42NDggNC4xNCAwIDEuMzY4LjIxNiA0LjEwNC0uMzYuMDcyLS41NC4wNzItLjM5NiAwLTEuMTM0LS4yODh0LTEuMDk4LS4yODhxLS43MiAwLTEuMzUuNDV0LS42MyAxLjE3cTAgLjc1Ni43MDIgMS4yNzh0MS41My43MzggMS41My42MTIuNzAyLjkzNnEwIC4zOTYtLjI1Mi45LTIuMzA0IDQuOTY4LTcuMTI4IDYuMDEyLS43OTIuMTgtLjc5Mi45NzIgMCAxLjY5MiA0Ljk2OCAyLjQ4NC4wNzIuMTguMjE2LjkzNnQuMzk2IDEuMDk4LjgyOC4zNDJxLjQ2OCAwIDEuMzg2LS4xOHQxLjM4Ni0uMThxMS4yNiAwIDIuNDMuNTR0MS45NjIgMS4xNyAyLjA3IDEuMTcgMi43NTQuNTRxMS41NDggMCAyLjg0NC0uNTR0Mi4wNy0xLjE3IDEuOTQ0LTEuMTcgMi40My0uNTRxLjQ2OCAwIDEuNDA0LjE2MnQxLjQwNC4xNjJxLjU0IDAgLjgxLS4zNDJ0LjQxNC0xLjExNi4xOC0uODgycTQuOTY4LS43OTIgNC45NjgtMi40ODR6bTkuMjE2LTI2LjM1MnYzNC41NnEwIDQuMjg0LTMuMDQyIDcuMzI2dC03LjMyNiAzLjA0MmgtMzQuNTZxLTQuMjg0IDAtNy4zMjYtMy4wNDJ0LTMuMDQyLTcuMzI2di0zNC41NnEwLTQuMjg0IDMuMDQyLTcuMzI2dDcuMzI2LTMuMDQyaDM0LjU2cTQuMjg0IDAgNy4zMjYgMy4wNDJ0My4wNDIgNy4zMjZ6XCJ9IiwiLyplc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyovXG4vKiFcbiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjMuMS4wXG4gKiBodHRwczovL2pxdWVyeS5jb20vXG4gKlxuICogSW5jbHVkZXMgU2l6emxlLmpzXG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMTYtMDctMDdUMjE6NDRaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxuXHRcdG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmRvY3VtZW50ID9cblx0XHRcdGZhY3RvcnkoIGdsb2JhbCwgdHJ1ZSApIDpcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xuXHRcdFx0XHRpZiAoICF3LmRvY3VtZW50ICkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvciggXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFjdG9yeSggdyApO1xuXHRcdFx0fTtcblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KCBnbG9iYWwgKTtcblx0fVxuXG4vLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldFxufSApKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7XG5cbi8vIEVkZ2UgPD0gMTIgLSAxMyssIEZpcmVmb3ggPD0xOCAtIDQ1KywgSUUgMTAgLSAxMSwgU2FmYXJpIDUuMSAtIDkrLCBpT1MgNiAtIDkuMVxuLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxuLy8gZW5vdWdoIHRoYXQgYWxsIHN1Y2ggYXR0ZW1wdHMgYXJlIGd1YXJkZWQgaW4gYSB0cnkgYmxvY2suXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGFyciA9IFtdO1xuXG52YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7XG5cbnZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcblxudmFyIHNsaWNlID0gYXJyLnNsaWNlO1xuXG52YXIgY29uY2F0ID0gYXJyLmNvbmNhdDtcblxudmFyIHB1c2ggPSBhcnIucHVzaDtcblxudmFyIGluZGV4T2YgPSBhcnIuaW5kZXhPZjtcblxudmFyIGNsYXNzMnR5cGUgPSB7fTtcblxudmFyIHRvU3RyaW5nID0gY2xhc3MydHlwZS50b1N0cmluZztcblxudmFyIGhhc093biA9IGNsYXNzMnR5cGUuaGFzT3duUHJvcGVydHk7XG5cbnZhciBmblRvU3RyaW5nID0gaGFzT3duLnRvU3RyaW5nO1xuXG52YXIgT2JqZWN0RnVuY3Rpb25TdHJpbmcgPSBmblRvU3RyaW5nLmNhbGwoIE9iamVjdCApO1xuXG52YXIgc3VwcG9ydCA9IHt9O1xuXG5cblxuXHRmdW5jdGlvbiBET01FdmFsKCBjb2RlLCBkb2MgKSB7XG5cdFx0ZG9jID0gZG9jIHx8IGRvY3VtZW50O1xuXG5cdFx0dmFyIHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XG5cblx0XHRzY3JpcHQudGV4dCA9IGNvZGU7XG5cdFx0ZG9jLmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdCApLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHNjcmlwdCApO1xuXHR9XG4vKiBnbG9iYWwgU3ltYm9sICovXG4vLyBEZWZpbmluZyB0aGlzIGdsb2JhbCBpbiAuZXNsaW50cmMgd291bGQgY3JlYXRlIGEgZGFuZ2VyIG9mIHVzaW5nIHRoZSBnbG9iYWxcbi8vIHVuZ3VhcmRlZCBpbiBhbm90aGVyIHBsYWNlLCBpdCBzZWVtcyBzYWZlciB0byBkZWZpbmUgZ2xvYmFsIG9ubHkgZm9yIHRoaXMgbW9kdWxlXG5cblxuXG52YXJcblx0dmVyc2lvbiA9IFwiMy4xLjBcIixcblxuXHQvLyBEZWZpbmUgYSBsb2NhbCBjb3B5IG9mIGpRdWVyeVxuXHRqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7XG5cblx0XHQvLyBUaGUgalF1ZXJ5IG9iamVjdCBpcyBhY3R1YWxseSBqdXN0IHRoZSBpbml0IGNvbnN0cnVjdG9yICdlbmhhbmNlZCdcblx0XHQvLyBOZWVkIGluaXQgaWYgalF1ZXJ5IGlzIGNhbGxlZCAoanVzdCBhbGxvdyBlcnJvciB0byBiZSB0aHJvd24gaWYgbm90IGluY2x1ZGVkKVxuXHRcdHJldHVybiBuZXcgalF1ZXJ5LmZuLmluaXQoIHNlbGVjdG9yLCBjb250ZXh0ICk7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5XG5cdC8vIE1ha2Ugc3VyZSB3ZSB0cmltIEJPTSBhbmQgTkJTUFxuXHRydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZyxcblxuXHQvLyBNYXRjaGVzIGRhc2hlZCBzdHJpbmcgZm9yIGNhbWVsaXppbmdcblx0cm1zUHJlZml4ID0gL14tbXMtLyxcblx0cmRhc2hBbHBoYSA9IC8tKFthLXpdKS9nLFxuXG5cdC8vIFVzZWQgYnkgalF1ZXJ5LmNhbWVsQ2FzZSBhcyBjYWxsYmFjayB0byByZXBsYWNlKClcblx0ZmNhbWVsQ2FzZSA9IGZ1bmN0aW9uKCBhbGwsIGxldHRlciApIHtcblx0XHRyZXR1cm4gbGV0dGVyLnRvVXBwZXJDYXNlKCk7XG5cdH07XG5cbmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5cGUgPSB7XG5cblx0Ly8gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBqUXVlcnkgYmVpbmcgdXNlZFxuXHRqcXVlcnk6IHZlcnNpb24sXG5cblx0Y29uc3RydWN0b3I6IGpRdWVyeSxcblxuXHQvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDBcblx0bGVuZ3RoOiAwLFxuXG5cdHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gR2V0IHRoZSBOdGggZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldCBPUlxuXHQvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheVxuXHRnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7XG5cdFx0cmV0dXJuIG51bSAhPSBudWxsID9cblxuXHRcdFx0Ly8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldFxuXHRcdFx0KCBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdICkgOlxuXG5cdFx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XG5cdFx0XHRzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gVGFrZSBhbiBhcnJheSBvZiBlbGVtZW50cyBhbmQgcHVzaCBpdCBvbnRvIHRoZSBzdGFja1xuXHQvLyAocmV0dXJuaW5nIHRoZSBuZXcgbWF0Y2hlZCBlbGVtZW50IHNldClcblx0cHVzaFN0YWNrOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cblx0XHQvLyBCdWlsZCBhIG5ldyBqUXVlcnkgbWF0Y2hlZCBlbGVtZW50IHNldFxuXHRcdHZhciByZXQgPSBqUXVlcnkubWVyZ2UoIHRoaXMuY29uc3RydWN0b3IoKSwgZWxlbXMgKTtcblxuXHRcdC8vIEFkZCB0aGUgb2xkIG9iamVjdCBvbnRvIHRoZSBzdGFjayAoYXMgYSByZWZlcmVuY2UpXG5cdFx0cmV0LnByZXZPYmplY3QgPSB0aGlzO1xuXG5cdFx0Ly8gUmV0dXJuIHRoZSBuZXdseS1mb3JtZWQgZWxlbWVudCBzZXRcblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdC8vIEV4ZWN1dGUgYSBjYWxsYmFjayBmb3IgZXZlcnkgZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBzZXQuXG5cdGVhY2g6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmVhY2goIHRoaXMsIGNhbGxiYWNrICk7XG5cdH0sXG5cblx0bWFwOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkubWFwKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiBjYWxsYmFjay5jYWxsKCBlbGVtLCBpLCBlbGVtICk7XG5cdFx0fSApICk7XG5cdH0sXG5cblx0c2xpY2U6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggc2xpY2UuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApICk7XG5cdH0sXG5cblx0Zmlyc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAwICk7XG5cdH0sXG5cblx0bGFzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIC0xICk7XG5cdH0sXG5cblx0ZXE6IGZ1bmN0aW9uKCBpICkge1xuXHRcdHZhciBsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdGogPSAraSArICggaSA8IDAgPyBsZW4gOiAwICk7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqID49IDAgJiYgaiA8IGxlbiA/IFsgdGhpc1sgaiBdIF0gOiBbXSApO1xuXHR9LFxuXG5cdGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHJldk9iamVjdCB8fCB0aGlzLmNvbnN0cnVjdG9yKCk7XG5cdH0sXG5cblx0Ly8gRm9yIGludGVybmFsIHVzZSBvbmx5LlxuXHQvLyBCZWhhdmVzIGxpa2UgYW4gQXJyYXkncyBtZXRob2QsIG5vdCBsaWtlIGEgalF1ZXJ5IG1ldGhvZC5cblx0cHVzaDogcHVzaCxcblx0c29ydDogYXJyLnNvcnQsXG5cdHNwbGljZTogYXJyLnNwbGljZVxufTtcblxualF1ZXJ5LmV4dGVuZCA9IGpRdWVyeS5mbi5leHRlbmQgPSBmdW5jdGlvbigpIHtcblx0dmFyIG9wdGlvbnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lLFxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sgMCBdIHx8IHt9LFxuXHRcdGkgPSAxLFxuXHRcdGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cdFx0ZGVlcCA9IGZhbHNlO1xuXG5cdC8vIEhhbmRsZSBhIGRlZXAgY29weSBzaXR1YXRpb25cblx0aWYgKCB0eXBlb2YgdGFyZ2V0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRkZWVwID0gdGFyZ2V0O1xuXG5cdFx0Ly8gU2tpcCB0aGUgYm9vbGVhbiBhbmQgdGhlIHRhcmdldFxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sgaSBdIHx8IHt9O1xuXHRcdGkrKztcblx0fVxuXG5cdC8vIEhhbmRsZSBjYXNlIHdoZW4gdGFyZ2V0IGlzIGEgc3RyaW5nIG9yIHNvbWV0aGluZyAocG9zc2libGUgaW4gZGVlcCBjb3B5KVxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgIT09IFwib2JqZWN0XCIgJiYgIWpRdWVyeS5pc0Z1bmN0aW9uKCB0YXJnZXQgKSApIHtcblx0XHR0YXJnZXQgPSB7fTtcblx0fVxuXG5cdC8vIEV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZFxuXHRpZiAoIGkgPT09IGxlbmd0aCApIHtcblx0XHR0YXJnZXQgPSB0aGlzO1xuXHRcdGktLTtcblx0fVxuXG5cdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXG5cdFx0Ly8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlc1xuXHRcdGlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkge1xuXG5cdFx0XHQvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XG5cdFx0XHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRcdHNyYyA9IHRhcmdldFsgbmFtZSBdO1xuXHRcdFx0XHRjb3B5ID0gb3B0aW9uc1sgbmFtZSBdO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3Bcblx0XHRcdFx0aWYgKCB0YXJnZXQgPT09IGNvcHkgKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcblx0XHRcdFx0aWYgKCBkZWVwICYmIGNvcHkgJiYgKCBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29weSApIHx8XG5cdFx0XHRcdFx0KCBjb3B5SXNBcnJheSA9IGpRdWVyeS5pc0FycmF5KCBjb3B5ICkgKSApICkge1xuXG5cdFx0XHRcdFx0aWYgKCBjb3B5SXNBcnJheSApIHtcblx0XHRcdFx0XHRcdGNvcHlJc0FycmF5ID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBqUXVlcnkuaXNBcnJheSggc3JjICkgPyBzcmMgOiBbXTtcblxuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggc3JjICkgPyBzcmMgOiB7fTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBOZXZlciBtb3ZlIG9yaWdpbmFsIG9iamVjdHMsIGNsb25lIHRoZW1cblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGpRdWVyeS5leHRlbmQoIGRlZXAsIGNsb25lLCBjb3B5ICk7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb3B5ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBjb3B5O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3Rcblx0cmV0dXJuIHRhcmdldDtcbn07XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBVbmlxdWUgZm9yIGVhY2ggY29weSBvZiBqUXVlcnkgb24gdGhlIHBhZ2Vcblx0ZXhwYW5kbzogXCJqUXVlcnlcIiArICggdmVyc2lvbiArIE1hdGgucmFuZG9tKCkgKS5yZXBsYWNlKCAvXFxEL2csIFwiXCIgKSxcblxuXHQvLyBBc3N1bWUgalF1ZXJ5IGlzIHJlYWR5IHdpdGhvdXQgdGhlIHJlYWR5IG1vZHVsZVxuXHRpc1JlYWR5OiB0cnVlLFxuXG5cdGVycm9yOiBmdW5jdGlvbiggbXNnICkge1xuXHRcdHRocm93IG5ldyBFcnJvciggbXNnICk7XG5cdH0sXG5cblx0bm9vcDogZnVuY3Rpb24oKSB7fSxcblxuXHRpc0Z1bmN0aW9uOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHJldHVybiBqUXVlcnkudHlwZSggb2JqICkgPT09IFwiZnVuY3Rpb25cIjtcblx0fSxcblxuXHRpc0FycmF5OiBBcnJheS5pc0FycmF5LFxuXG5cdGlzV2luZG93OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmogPT09IG9iai53aW5kb3c7XG5cdH0sXG5cblx0aXNOdW1lcmljOiBmdW5jdGlvbiggb2JqICkge1xuXG5cdFx0Ly8gQXMgb2YgalF1ZXJ5IDMuMCwgaXNOdW1lcmljIGlzIGxpbWl0ZWQgdG9cblx0XHQvLyBzdHJpbmdzIGFuZCBudW1iZXJzIChwcmltaXRpdmVzIG9yIG9iamVjdHMpXG5cdFx0Ly8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAoZ2gtMjY2Milcblx0XHR2YXIgdHlwZSA9IGpRdWVyeS50eXBlKCBvYmogKTtcblx0XHRyZXR1cm4gKCB0eXBlID09PSBcIm51bWJlclwiIHx8IHR5cGUgPT09IFwic3RyaW5nXCIgKSAmJlxuXG5cdFx0XHQvLyBwYXJzZUZsb2F0IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAoXCJcIilcblx0XHRcdC8vIC4uLmJ1dCBtaXNpbnRlcnByZXRzIGxlYWRpbmctbnVtYmVyIHN0cmluZ3MsIHBhcnRpY3VsYXJseSBoZXggbGl0ZXJhbHMgKFwiMHguLi5cIilcblx0XHRcdC8vIHN1YnRyYWN0aW9uIGZvcmNlcyBpbmZpbml0aWVzIHRvIE5hTlxuXHRcdFx0IWlzTmFOKCBvYmogLSBwYXJzZUZsb2F0KCBvYmogKSApO1xuXHR9LFxuXG5cdGlzUGxhaW5PYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIHByb3RvLCBDdG9yO1xuXG5cdFx0Ly8gRGV0ZWN0IG9idmlvdXMgbmVnYXRpdmVzXG5cdFx0Ly8gVXNlIHRvU3RyaW5nIGluc3RlYWQgb2YgalF1ZXJ5LnR5cGUgdG8gY2F0Y2ggaG9zdCBvYmplY3RzXG5cdFx0aWYgKCAhb2JqIHx8IHRvU3RyaW5nLmNhbGwoIG9iaiApICE9PSBcIltvYmplY3QgT2JqZWN0XVwiICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHByb3RvID0gZ2V0UHJvdG8oIG9iaiApO1xuXG5cdFx0Ly8gT2JqZWN0cyB3aXRoIG5vIHByb3RvdHlwZSAoZS5nLiwgYE9iamVjdC5jcmVhdGUoIG51bGwgKWApIGFyZSBwbGFpblxuXHRcdGlmICggIXByb3RvICkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0Ly8gT2JqZWN0cyB3aXRoIHByb3RvdHlwZSBhcmUgcGxhaW4gaWZmIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCBieSBhIGdsb2JhbCBPYmplY3QgZnVuY3Rpb25cblx0XHRDdG9yID0gaGFzT3duLmNhbGwoIHByb3RvLCBcImNvbnN0cnVjdG9yXCIgKSAmJiBwcm90by5jb25zdHJ1Y3Rvcjtcblx0XHRyZXR1cm4gdHlwZW9mIEN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBmblRvU3RyaW5nLmNhbGwoIEN0b3IgKSA9PT0gT2JqZWN0RnVuY3Rpb25TdHJpbmc7XG5cdH0sXG5cblx0aXNFbXB0eU9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblxuXHRcdC8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG5cdFx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQvZXNsaW50L2lzc3Vlcy82MTI1XG5cdFx0dmFyIG5hbWU7XG5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0sXG5cblx0dHlwZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRpZiAoIG9iaiA9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIG9iaiArIFwiXCI7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTIuMyBvbmx5IChmdW5jdGlvbmlzaCBSZWdFeHApXG5cdFx0cmV0dXJuIHR5cGVvZiBvYmogPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiID9cblx0XHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XG5cdFx0XHR0eXBlb2Ygb2JqO1xuXHR9LFxuXG5cdC8vIEV2YWx1YXRlcyBhIHNjcmlwdCBpbiBhIGdsb2JhbCBjb250ZXh0XG5cdGdsb2JhbEV2YWw6IGZ1bmN0aW9uKCBjb2RlICkge1xuXHRcdERPTUV2YWwoIGNvZGUgKTtcblx0fSxcblxuXHQvLyBDb252ZXJ0IGRhc2hlZCB0byBjYW1lbENhc2U7IHVzZWQgYnkgdGhlIGNzcyBhbmQgZGF0YSBtb2R1bGVzXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExLCBFZGdlIDEyIC0gMTNcblx0Ly8gTWljcm9zb2Z0IGZvcmdvdCB0byBodW1wIHRoZWlyIHZlbmRvciBwcmVmaXggKCM5NTcyKVxuXHRjYW1lbENhc2U6IGZ1bmN0aW9uKCBzdHJpbmcgKSB7XG5cdFx0cmV0dXJuIHN0cmluZy5yZXBsYWNlKCBybXNQcmVmaXgsIFwibXMtXCIgKS5yZXBsYWNlKCByZGFzaEFscGhhLCBmY2FtZWxDYXNlICk7XG5cdH0sXG5cblx0bm9kZU5hbWU6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXHR9LFxuXG5cdGVhY2g6IGZ1bmN0aW9uKCBvYmosIGNhbGxiYWNrICkge1xuXHRcdHZhciBsZW5ndGgsIGkgPSAwO1xuXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggb2JqICkgKSB7XG5cdFx0XHRsZW5ndGggPSBvYmoubGVuZ3RoO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gb2JqICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBvYmo7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5XG5cdHRyaW06IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdHJldHVybiB0ZXh0ID09IG51bGwgP1xuXHRcdFx0XCJcIiA6XG5cdFx0XHQoIHRleHQgKyBcIlwiICkucmVwbGFjZSggcnRyaW0sIFwiXCIgKTtcblx0fSxcblxuXHQvLyByZXN1bHRzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1ha2VBcnJheTogZnVuY3Rpb24oIGFyciwgcmVzdWx0cyApIHtcblx0XHR2YXIgcmV0ID0gcmVzdWx0cyB8fCBbXTtcblxuXHRcdGlmICggYXJyICE9IG51bGwgKSB7XG5cdFx0XHRpZiAoIGlzQXJyYXlMaWtlKCBPYmplY3QoIGFyciApICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggcmV0LFxuXHRcdFx0XHRcdHR5cGVvZiBhcnIgPT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRcdFsgYXJyIF0gOiBhcnJcblx0XHRcdFx0KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB1c2guY2FsbCggcmV0LCBhcnIgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdGluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7XG5cdFx0cmV0dXJuIGFyciA9PSBudWxsID8gLTEgOiBpbmRleE9mLmNhbGwoIGFyciwgZWxlbSwgaSApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdG1lcmdlOiBmdW5jdGlvbiggZmlyc3QsIHNlY29uZCApIHtcblx0XHR2YXIgbGVuID0gK3NlY29uZC5sZW5ndGgsXG5cdFx0XHRqID0gMCxcblx0XHRcdGkgPSBmaXJzdC5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaiBdO1xuXHRcdH1cblxuXHRcdGZpcnN0Lmxlbmd0aCA9IGk7XG5cblx0XHRyZXR1cm4gZmlyc3Q7XG5cdH0sXG5cblx0Z3JlcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgaW52ZXJ0ICkge1xuXHRcdHZhciBjYWxsYmFja0ludmVyc2UsXG5cdFx0XHRtYXRjaGVzID0gW10sXG5cdFx0XHRpID0gMCxcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aCxcblx0XHRcdGNhbGxiYWNrRXhwZWN0ID0gIWludmVydDtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCBvbmx5IHNhdmluZyB0aGUgaXRlbXNcblx0XHQvLyB0aGF0IHBhc3MgdGhlIHZhbGlkYXRvciBmdW5jdGlvblxuXHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0Y2FsbGJhY2tJbnZlcnNlID0gIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7XG5cdFx0XHRpZiAoIGNhbGxiYWNrSW52ZXJzZSAhPT0gY2FsbGJhY2tFeHBlY3QgKSB7XG5cdFx0XHRcdG1hdGNoZXMucHVzaCggZWxlbXNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBtYXRjaGVzO1xuXHR9LFxuXG5cdC8vIGFyZyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGFyZyApIHtcblx0XHR2YXIgbGVuZ3RoLCB2YWx1ZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0cmV0ID0gW107XG5cblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgdHJhbnNsYXRpbmcgZWFjaCBvZiB0aGUgaXRlbXMgdG8gdGhlaXIgbmV3IHZhbHVlc1xuXHRcdGlmICggaXNBcnJheUxpa2UoIGVsZW1zICkgKSB7XG5cdFx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XG5cblx0XHRcdFx0aWYgKCB2YWx1ZSAhPSBudWxsICkge1xuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBHbyB0aHJvdWdoIGV2ZXJ5IGtleSBvbiB0aGUgb2JqZWN0LFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIGVsZW1zICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdFx0cmV0dXJuIGNvbmNhdC5hcHBseSggW10sIHJldCApO1xuXHR9LFxuXG5cdC8vIEEgZ2xvYmFsIEdVSUQgY291bnRlciBmb3Igb2JqZWN0c1xuXHRndWlkOiAxLFxuXG5cdC8vIEJpbmQgYSBmdW5jdGlvbiB0byBhIGNvbnRleHQsIG9wdGlvbmFsbHkgcGFydGlhbGx5IGFwcGx5aW5nIGFueVxuXHQvLyBhcmd1bWVudHMuXG5cdHByb3h5OiBmdW5jdGlvbiggZm4sIGNvbnRleHQgKSB7XG5cdFx0dmFyIHRtcCwgYXJncywgcHJveHk7XG5cblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0dG1wID0gZm5bIGNvbnRleHQgXTtcblx0XHRcdGNvbnRleHQgPSBmbjtcblx0XHRcdGZuID0gdG1wO1xuXHRcdH1cblxuXHRcdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXG5cdFx0Ly8gdGhpcyB0aHJvd3MgYSBUeXBlRXJyb3IsIGJ1dCB3ZSB3aWxsIGp1c3QgcmV0dXJuIHVuZGVmaW5lZC5cblx0XHRpZiAoICFqUXVlcnkuaXNGdW5jdGlvbiggZm4gKSApIHtcblx0XHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Ly8gU2ltdWxhdGVkIGJpbmRcblx0XHRhcmdzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzLCAyICk7XG5cdFx0cHJveHkgPSBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBmbi5hcHBseSggY29udGV4dCB8fCB0aGlzLCBhcmdzLmNvbmNhdCggc2xpY2UuY2FsbCggYXJndW1lbnRzICkgKSApO1xuXHRcdH07XG5cblx0XHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcblx0XHRwcm94eS5ndWlkID0gZm4uZ3VpZCA9IGZuLmd1aWQgfHwgalF1ZXJ5Lmd1aWQrKztcblxuXHRcdHJldHVybiBwcm94eTtcblx0fSxcblxuXHRub3c6IERhdGUubm93LFxuXG5cdC8vIGpRdWVyeS5zdXBwb3J0IGlzIG5vdCB1c2VkIGluIENvcmUgYnV0IG90aGVyIHByb2plY3RzIGF0dGFjaCB0aGVpclxuXHQvLyBwcm9wZXJ0aWVzIHRvIGl0IHNvIGl0IG5lZWRzIHRvIGV4aXN0LlxuXHRzdXBwb3J0OiBzdXBwb3J0XG59ICk7XG5cbmlmICggdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICkge1xuXHRqUXVlcnkuZm5bIFN5bWJvbC5pdGVyYXRvciBdID0gYXJyWyBTeW1ib2wuaXRlcmF0b3IgXTtcbn1cblxuLy8gUG9wdWxhdGUgdGhlIGNsYXNzMnR5cGUgbWFwXG5qUXVlcnkuZWFjaCggXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KCBcIiBcIiApLFxuZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdGNsYXNzMnR5cGVbIFwiW29iamVjdCBcIiArIG5hbWUgKyBcIl1cIiBdID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xufSApO1xuXG5mdW5jdGlvbiBpc0FycmF5TGlrZSggb2JqICkge1xuXG5cdC8vIFN1cHBvcnQ6IHJlYWwgaU9TIDguMiBvbmx5IChub3QgcmVwcm9kdWNpYmxlIGluIHNpbXVsYXRvcilcblx0Ly8gYGluYCBjaGVjayB1c2VkIHRvIHByZXZlbnQgSklUIGVycm9yIChnaC0yMTQ1KVxuXHQvLyBoYXNPd24gaXNuJ3QgdXNlZCBoZXJlIGR1ZSB0byBmYWxzZSBuZWdhdGl2ZXNcblx0Ly8gcmVnYXJkaW5nIE5vZGVsaXN0IGxlbmd0aCBpbiBJRVxuXHR2YXIgbGVuZ3RoID0gISFvYmogJiYgXCJsZW5ndGhcIiBpbiBvYmogJiYgb2JqLmxlbmd0aCxcblx0XHR0eXBlID0galF1ZXJ5LnR5cGUoIG9iaiApO1xuXG5cdGlmICggdHlwZSA9PT0gXCJmdW5jdGlvblwiIHx8IGpRdWVyeS5pc1dpbmRvdyggb2JqICkgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHR5cGUgPT09IFwiYXJyYXlcIiB8fCBsZW5ndGggPT09IDAgfHxcblx0XHR0eXBlb2YgbGVuZ3RoID09PSBcIm51bWJlclwiICYmIGxlbmd0aCA+IDAgJiYgKCBsZW5ndGggLSAxICkgaW4gb2JqO1xufVxudmFyIFNpenpsZSA9XG4vKiFcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjMuMFxuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMTYtMDEtMDRcbiAqL1xuKGZ1bmN0aW9uKCB3aW5kb3cgKSB7XG5cbnZhciBpLFxuXHRzdXBwb3J0LFxuXHRFeHByLFxuXHRnZXRUZXh0LFxuXHRpc1hNTCxcblx0dG9rZW5pemUsXG5cdGNvbXBpbGUsXG5cdHNlbGVjdCxcblx0b3V0ZXJtb3N0Q29udGV4dCxcblx0c29ydElucHV0LFxuXHRoYXNEdXBsaWNhdGUsXG5cblx0Ly8gTG9jYWwgZG9jdW1lbnQgdmFyc1xuXHRzZXREb2N1bWVudCxcblx0ZG9jdW1lbnQsXG5cdGRvY0VsZW0sXG5cdGRvY3VtZW50SXNIVE1MLFxuXHRyYnVnZ3lRU0EsXG5cdHJidWdneU1hdGNoZXMsXG5cdG1hdGNoZXMsXG5cdGNvbnRhaW5zLFxuXG5cdC8vIEluc3RhbmNlLXNwZWNpZmljIGRhdGFcblx0ZXhwYW5kbyA9IFwic2l6emxlXCIgKyAxICogbmV3IERhdGUoKSxcblx0cHJlZmVycmVkRG9jID0gd2luZG93LmRvY3VtZW50LFxuXHRkaXJydW5zID0gMCxcblx0ZG9uZSA9IDAsXG5cdGNsYXNzQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHR0b2tlbkNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0Y29tcGlsZXJDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdHNvcnRPcmRlciA9IGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdGlmICggYSA9PT0gYiApIHtcblx0XHRcdGhhc0R1cGxpY2F0ZSA9IHRydWU7XG5cdFx0fVxuXHRcdHJldHVybiAwO1xuXHR9LFxuXG5cdC8vIEluc3RhbmNlIG1ldGhvZHNcblx0aGFzT3duID0gKHt9KS5oYXNPd25Qcm9wZXJ0eSxcblx0YXJyID0gW10sXG5cdHBvcCA9IGFyci5wb3AsXG5cdHB1c2hfbmF0aXZlID0gYXJyLnB1c2gsXG5cdHB1c2ggPSBhcnIucHVzaCxcblx0c2xpY2UgPSBhcnIuc2xpY2UsXG5cdC8vIFVzZSBhIHN0cmlwcGVkLWRvd24gaW5kZXhPZiBhcyBpdCdzIGZhc3RlciB0aGFuIG5hdGl2ZVxuXHQvLyBodHRwczovL2pzcGVyZi5jb20vdGhvci1pbmRleG9mLXZzLWZvci81XG5cdGluZGV4T2YgPSBmdW5jdGlvbiggbGlzdCwgZWxlbSApIHtcblx0XHR2YXIgaSA9IDAsXG5cdFx0XHRsZW4gPSBsaXN0Lmxlbmd0aDtcblx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdGlmICggbGlzdFtpXSA9PT0gZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIGk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiAtMTtcblx0fSxcblxuXHRib29sZWFucyA9IFwiY2hlY2tlZHxzZWxlY3RlZHxhc3luY3xhdXRvZm9jdXN8YXV0b3BsYXl8Y29udHJvbHN8ZGVmZXJ8ZGlzYWJsZWR8aGlkZGVufGlzbWFwfGxvb3B8bXVsdGlwbGV8b3BlbnxyZWFkb25seXxyZXF1aXJlZHxzY29wZWRcIixcblxuXHQvLyBSZWd1bGFyIGV4cHJlc3Npb25zXG5cblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvY3NzMy1zZWxlY3RvcnMvI3doaXRlc3BhY2Vcblx0d2hpdGVzcGFjZSA9IFwiW1xcXFx4MjBcXFxcdFxcXFxyXFxcXG5cXFxcZl1cIixcblxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9DU1MyMS9zeW5kYXRhLmh0bWwjdmFsdWUtZGVmLWlkZW50aWZpZXJcblx0aWRlbnRpZmllciA9IFwiKD86XFxcXFxcXFwufFtcXFxcdy1dfFteXFwwLVxcXFx4YTBdKStcIixcblxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcblx0YXR0cmlidXRlcyA9IFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XCIgKyB3aGl0ZXNwYWNlICtcblx0XHQvLyBPcGVyYXRvciAoY2FwdHVyZSAyKVxuXHRcdFwiKihbKl4kfCF+XT89KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0Ly8gXCJBdHRyaWJ1dGUgdmFsdWVzIG11c3QgYmUgQ1NTIGlkZW50aWZpZXJzIFtjYXB0dXJlIDVdIG9yIHN0cmluZ3MgW2NhcHR1cmUgMyBvciBjYXB0dXJlIDRdXCJcblx0XHRcIiooPzonKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCJ8KFwiICsgaWRlbnRpZmllciArIFwiKSl8KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XCIqXFxcXF1cIixcblxuXHRwc2V1ZG9zID0gXCI6KFwiICsgaWRlbnRpZmllciArIFwiKSg/OlxcXFwoKFwiICtcblx0XHQvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOlxuXHRcdC8vIDEuIHF1b3RlZCAoY2FwdHVyZSAzOyBjYXB0dXJlIDQgb3IgY2FwdHVyZSA1KVxuXHRcdFwiKCcoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcIil8XCIgK1xuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxuXHRcdFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcKClbXFxcXF1dfFwiICsgYXR0cmlidXRlcyArIFwiKSopfFwiICtcblx0XHQvLyAzLiBhbnl0aGluZyBlbHNlIChjYXB0dXJlIDIpXG5cdFx0XCIuKlwiICtcblx0XHRcIilcXFxcKXwpXCIsXG5cblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxuXHRyd2hpdGVzcGFjZSA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcIitcIiwgXCJnXCIgKSxcblx0cnRyaW0gPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIit8KCg/Ol58W15cXFxcXFxcXF0pKD86XFxcXFxcXFwuKSopXCIgKyB3aGl0ZXNwYWNlICsgXCIrJFwiLCBcImdcIiApLFxuXG5cdHJjb21tYSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKixcIiArIHdoaXRlc3BhY2UgKyBcIipcIiApLFxuXHRyY29tYmluYXRvcnMgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiooWz4rfl18XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblxuXHRyYXR0cmlidXRlUXVvdGVzID0gbmV3IFJlZ0V4cCggXCI9XCIgKyB3aGl0ZXNwYWNlICsgXCIqKFteXFxcXF0nXFxcIl0qPylcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcXVwiLCBcImdcIiApLFxuXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXG5cdHJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggXCJeXCIgKyBpZGVudGlmaWVyICsgXCIkXCIgKSxcblxuXHRtYXRjaEV4cHIgPSB7XG5cdFx0XCJJRFwiOiBuZXcgUmVnRXhwKCBcIl4jKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJDTEFTU1wiOiBuZXcgUmVnRXhwKCBcIl5cXFxcLihcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcblx0XHRcIkFUVFJcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBhdHRyaWJ1dGVzICksXG5cdFx0XCJQU0VVRE9cIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBwc2V1ZG9zICksXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86KFsrLV18KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooXFxcXGQrKXwpKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfClcIiwgXCJpXCIgKSxcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcblx0XHQvLyBGb3IgdXNlIGluIGxpYnJhcmllcyBpbXBsZW1lbnRpbmcgLmlzKClcblx0XHQvLyBXZSB1c2UgdGhpcyBmb3IgUE9TIG1hdGNoaW5nIGluIGBzZWxlY3RgXG5cdFx0XCJuZWVkc0NvbnRleHRcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooKD86LVxcXFxkKT9cXFxcZCopXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KSg/PVteLV18JClcIiwgXCJpXCIgKVxuXHR9LFxuXG5cdHJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyaGVhZGVyID0gL15oXFxkJC9pLFxuXG5cdHJuYXRpdmUgPSAvXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFxuXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xuXHRycXVpY2tFeHByID0gL14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sXG5cblx0cnNpYmxpbmcgPSAvWyt+XS8sXG5cblx0Ly8gQ1NTIGVzY2FwZXNcblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xuXHRydW5lc2NhcGUgPSBuZXcgUmVnRXhwKCBcIlxcXFxcXFxcKFtcXFxcZGEtZl17MSw2fVwiICsgd2hpdGVzcGFjZSArIFwiP3woXCIgKyB3aGl0ZXNwYWNlICsgXCIpfC4pXCIsIFwiaWdcIiApLFxuXHRmdW5lc2NhcGUgPSBmdW5jdGlvbiggXywgZXNjYXBlZCwgZXNjYXBlZFdoaXRlc3BhY2UgKSB7XG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGVkIC0gMHgxMDAwMDtcblx0XHQvLyBOYU4gbWVhbnMgbm9uLWNvZGVwb2ludFxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3g8MjRcblx0XHQvLyBXb3JrYXJvdW5kIGVycm9uZW91cyBudW1lcmljIGludGVycHJldGF0aW9uIG9mICtcIjB4XCJcblx0XHRyZXR1cm4gaGlnaCAhPT0gaGlnaCB8fCBlc2NhcGVkV2hpdGVzcGFjZSA/XG5cdFx0XHRlc2NhcGVkIDpcblx0XHRcdGhpZ2ggPCAwID9cblx0XHRcdFx0Ly8gQk1QIGNvZGVwb2ludFxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoICsgMHgxMDAwMCApIDpcblx0XHRcdFx0Ly8gU3VwcGxlbWVudGFsIFBsYW5lIGNvZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpXG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggPj4gMTAgfCAweEQ4MDAsIGhpZ2ggJiAweDNGRiB8IDB4REMwMCApO1xuXHR9LFxuXG5cdC8vIENTUyBzdHJpbmcvaWRlbnRpZmllciBzZXJpYWxpemF0aW9uXG5cdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jY29tbW9uLXNlcmlhbGl6aW5nLWlkaW9tc1xuXHRyY3NzZXNjYXBlID0gLyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFx4ODAtXFx1RkZGRlxcdy1dL2csXG5cdGZjc3Nlc2NhcGUgPSBmdW5jdGlvbiggY2gsIGFzQ29kZVBvaW50ICkge1xuXHRcdGlmICggYXNDb2RlUG9pbnQgKSB7XG5cblx0XHRcdC8vIFUrMDAwMCBOVUxMIGJlY29tZXMgVStGRkZEIFJFUExBQ0VNRU5UIENIQVJBQ1RFUlxuXHRcdFx0aWYgKCBjaCA9PT0gXCJcXDBcIiApIHtcblx0XHRcdFx0cmV0dXJuIFwiXFx1RkZGRFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb250cm9sIGNoYXJhY3RlcnMgYW5kIChkZXBlbmRlbnQgdXBvbiBwb3NpdGlvbikgbnVtYmVycyBnZXQgZXNjYXBlZCBhcyBjb2RlIHBvaW50c1xuXHRcdFx0cmV0dXJuIGNoLnNsaWNlKCAwLCAtMSApICsgXCJcXFxcXCIgKyBjaC5jaGFyQ29kZUF0KCBjaC5sZW5ndGggLSAxICkudG9TdHJpbmcoIDE2ICkgKyBcIiBcIjtcblx0XHR9XG5cblx0XHQvLyBPdGhlciBwb3RlbnRpYWxseS1zcGVjaWFsIEFTQ0lJIGNoYXJhY3RlcnMgZ2V0IGJhY2tzbGFzaC1lc2NhcGVkXG5cdFx0cmV0dXJuIFwiXFxcXFwiICsgY2g7XG5cdH0sXG5cblx0Ly8gVXNlZCBmb3IgaWZyYW1lc1xuXHQvLyBTZWUgc2V0RG9jdW1lbnQoKVxuXHQvLyBSZW1vdmluZyB0aGUgZnVuY3Rpb24gd3JhcHBlciBjYXVzZXMgYSBcIlBlcm1pc3Npb24gRGVuaWVkXCJcblx0Ly8gZXJyb3IgaW4gSUVcblx0dW5sb2FkSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xuXHRcdHNldERvY3VtZW50KCk7XG5cdH0sXG5cblx0ZGlzYWJsZWRBbmNlc3RvciA9IGFkZENvbWJpbmF0b3IoXG5cdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZTtcblx0XHR9LFxuXHRcdHsgZGlyOiBcInBhcmVudE5vZGVcIiwgbmV4dDogXCJsZWdlbmRcIiB9XG5cdCk7XG5cbi8vIE9wdGltaXplIGZvciBwdXNoLmFwcGx5KCBfLCBOb2RlTGlzdCApXG50cnkge1xuXHRwdXNoLmFwcGx5KFxuXHRcdChhcnIgPSBzbGljZS5jYWxsKCBwcmVmZXJyZWREb2MuY2hpbGROb2RlcyApKSxcblx0XHRwcmVmZXJyZWREb2MuY2hpbGROb2Rlc1xuXHQpO1xuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMFxuXHQvLyBEZXRlY3Qgc2lsZW50bHkgZmFpbGluZyBwdXNoLmFwcGx5XG5cdGFyclsgcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMubGVuZ3RoIF0ubm9kZVR5cGU7XG59IGNhdGNoICggZSApIHtcblx0cHVzaCA9IHsgYXBwbHk6IGFyci5sZW5ndGggP1xuXG5cdFx0Ly8gTGV2ZXJhZ2Ugc2xpY2UgaWYgcG9zc2libGVcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XG5cdFx0XHRwdXNoX25hdGl2ZS5hcHBseSggdGFyZ2V0LCBzbGljZS5jYWxsKGVscykgKTtcblx0XHR9IDpcblxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHQvLyBPdGhlcndpc2UgYXBwZW5kIGRpcmVjdGx5XG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0dmFyIGogPSB0YXJnZXQubGVuZ3RoLFxuXHRcdFx0XHRpID0gMDtcblx0XHRcdC8vIENhbid0IHRydXN0IE5vZGVMaXN0Lmxlbmd0aFxuXHRcdFx0d2hpbGUgKCAodGFyZ2V0W2orK10gPSBlbHNbaSsrXSkgKSB7fVxuXHRcdFx0dGFyZ2V0Lmxlbmd0aCA9IGogLSAxO1xuXHRcdH1cblx0fTtcbn1cblxuZnVuY3Rpb24gU2l6emxlKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIG0sIGksIGVsZW0sIG5pZCwgbWF0Y2gsIGdyb3VwcywgbmV3U2VsZWN0b3IsXG5cdFx0bmV3Q29udGV4dCA9IGNvbnRleHQgJiYgY29udGV4dC5vd25lckRvY3VtZW50LFxuXG5cdFx0Ly8gbm9kZVR5cGUgZGVmYXVsdHMgdG8gOSwgc2luY2UgY29udGV4dCBkZWZhdWx0cyB0byBkb2N1bWVudFxuXHRcdG5vZGVUeXBlID0gY29udGV4dCA/IGNvbnRleHQubm9kZVR5cGUgOiA5O1xuXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xuXG5cdC8vIFJldHVybiBlYXJseSBmcm9tIGNhbGxzIHdpdGggaW52YWxpZCBzZWxlY3RvciBvciBjb250ZXh0XG5cdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiIHx8ICFzZWxlY3RvciB8fFxuXHRcdG5vZGVUeXBlICE9PSAxICYmIG5vZGVUeXBlICE9PSA5ICYmIG5vZGVUeXBlICE9PSAxMSApIHtcblxuXHRcdHJldHVybiByZXN1bHRzO1xuXHR9XG5cblx0Ly8gVHJ5IHRvIHNob3J0Y3V0IGZpbmQgb3BlcmF0aW9ucyAoYXMgb3Bwb3NlZCB0byBmaWx0ZXJzKSBpbiBIVE1MIGRvY3VtZW50c1xuXHRpZiAoICFzZWVkICkge1xuXG5cdFx0aWYgKCAoIGNvbnRleHQgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IHByZWZlcnJlZERvYyApICE9PSBkb2N1bWVudCApIHtcblx0XHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdFx0fVxuXHRcdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXG5cdFx0aWYgKCBkb2N1bWVudElzSFRNTCApIHtcblxuXHRcdFx0Ly8gSWYgdGhlIHNlbGVjdG9yIGlzIHN1ZmZpY2llbnRseSBzaW1wbGUsIHRyeSB1c2luZyBhIFwiZ2V0KkJ5KlwiIERPTSBtZXRob2Rcblx0XHRcdC8vIChleGNlcHRpbmcgRG9jdW1lbnRGcmFnbWVudCBjb250ZXh0LCB3aGVyZSB0aGUgbWV0aG9kcyBkb24ndCBleGlzdClcblx0XHRcdGlmICggbm9kZVR5cGUgIT09IDExICYmIChtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKSkgKSB7XG5cblx0XHRcdFx0Ly8gSUQgc2VsZWN0b3Jcblx0XHRcdFx0aWYgKCAobSA9IG1hdGNoWzFdKSApIHtcblxuXHRcdFx0XHRcdC8vIERvY3VtZW50IGNvbnRleHRcblx0XHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0XHRpZiAoIGVsZW0uaWQgPT09IG0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRWxlbWVudCBjb250ZXh0XG5cdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgJiYgKGVsZW0gPSBuZXdDb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkpICYmXG5cdFx0XHRcdFx0XHRcdGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICkgJiZcblx0XHRcdFx0XHRcdFx0ZWxlbS5pZCA9PT0gbSApIHtcblxuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFR5cGUgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbMl0gKSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggc2VsZWN0b3IgKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHRcdC8vIENsYXNzIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoIChtID0gbWF0Y2hbM10pICYmIHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJlxuXHRcdFx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggbSApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gVGFrZSBhZHZhbnRhZ2Ugb2YgcXVlcnlTZWxlY3RvckFsbFxuXHRcdFx0aWYgKCBzdXBwb3J0LnFzYSAmJlxuXHRcdFx0XHQhY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdICYmXG5cdFx0XHRcdCghcmJ1Z2d5UVNBIHx8ICFyYnVnZ3lRU0EudGVzdCggc2VsZWN0b3IgKSkgKSB7XG5cblx0XHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gY29udGV4dDtcblx0XHRcdFx0XHRuZXdTZWxlY3RvciA9IHNlbGVjdG9yO1xuXG5cdFx0XHRcdC8vIHFTQSBsb29rcyBvdXRzaWRlIEVsZW1lbnQgY29udGV4dCwgd2hpY2ggaXMgbm90IHdoYXQgd2Ugd2FudFxuXHRcdFx0XHQvLyBUaGFua3MgdG8gQW5kcmV3IER1cG9udCBmb3IgdGhpcyB3b3JrYXJvdW5kIHRlY2huaXF1ZVxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PThcblx0XHRcdFx0Ly8gRXhjbHVkZSBvYmplY3QgZWxlbWVudHNcblx0XHRcdFx0fSBlbHNlIGlmICggY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdFx0Ly8gQ2FwdHVyZSB0aGUgY29udGV4dCBJRCwgc2V0dGluZyBpdCBmaXJzdCBpZiBuZWNlc3Nhcnlcblx0XHRcdFx0XHRpZiAoIChuaWQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggXCJpZFwiICkpICkge1xuXHRcdFx0XHRcdFx0bmlkID0gbmlkLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y29udGV4dC5zZXRBdHRyaWJ1dGUoIFwiaWRcIiwgKG5pZCA9IGV4cGFuZG8pICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJlZml4IGV2ZXJ5IHNlbGVjdG9yIGluIHRoZSBsaXN0XG5cdFx0XHRcdFx0Z3JvdXBzID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0XHRcdFx0aSA9IGdyb3Vwcy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRncm91cHNbaV0gPSBcIiNcIiArIG5pZCArIFwiIFwiICsgdG9TZWxlY3RvciggZ3JvdXBzW2ldICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XG5cblx0XHRcdFx0XHQvLyBFeHBhbmQgY29udGV4dCBmb3Igc2libGluZyBzZWxlY3RvcnNcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcblx0XHRcdFx0XHRcdGNvbnRleHQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIG5ld1NlbGVjdG9yICkge1xuXHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLFxuXHRcdFx0XHRcdFx0XHRuZXdDb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIG5ld1NlbGVjdG9yIClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHR9IGNhdGNoICggcXNhRXJyb3IgKSB7XG5cdFx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xuXHRcdFx0XHRcdFx0XHRjb250ZXh0LnJlbW92ZUF0dHJpYnV0ZSggXCJpZFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQWxsIG90aGVyc1xuXHRyZXR1cm4gc2VsZWN0KCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICksIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUga2V5LXZhbHVlIGNhY2hlcyBvZiBsaW1pdGVkIHNpemVcbiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCl9IFJldHVybnMgdGhlIE9iamVjdCBkYXRhIGFmdGVyIHN0b3JpbmcgaXQgb24gaXRzZWxmIHdpdGhcbiAqXHRwcm9wZXJ0eSBuYW1lIHRoZSAoc3BhY2Utc3VmZml4ZWQpIHN0cmluZyBhbmQgKGlmIHRoZSBjYWNoZSBpcyBsYXJnZXIgdGhhbiBFeHByLmNhY2hlTGVuZ3RoKVxuICpcdGRlbGV0aW5nIHRoZSBvbGRlc3QgZW50cnlcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2FjaGUoKSB7XG5cdHZhciBrZXlzID0gW107XG5cblx0ZnVuY3Rpb24gY2FjaGUoIGtleSwgdmFsdWUgKSB7XG5cdFx0Ly8gVXNlIChrZXkgKyBcIiBcIikgdG8gYXZvaWQgY29sbGlzaW9uIHdpdGggbmF0aXZlIHByb3RvdHlwZSBwcm9wZXJ0aWVzIChzZWUgSXNzdWUgIzE1Nylcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XG5cdFx0XHQvLyBPbmx5IGtlZXAgdGhlIG1vc3QgcmVjZW50IGVudHJpZXNcblx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5cy5zaGlmdCgpIF07XG5cdFx0fVxuXHRcdHJldHVybiAoY2FjaGVbIGtleSArIFwiIFwiIF0gPSB2YWx1ZSk7XG5cdH1cblx0cmV0dXJuIGNhY2hlO1xufVxuXG4vKipcbiAqIE1hcmsgYSBmdW5jdGlvbiBmb3Igc3BlY2lhbCB1c2UgYnkgU2l6emxlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gbWFya1xuICovXG5mdW5jdGlvbiBtYXJrRnVuY3Rpb24oIGZuICkge1xuXHRmblsgZXhwYW5kbyBdID0gdHJ1ZTtcblx0cmV0dXJuIGZuO1xufVxuXG4vKipcbiAqIFN1cHBvcnQgdGVzdGluZyB1c2luZyBhbiBlbGVtZW50XG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBQYXNzZWQgdGhlIGNyZWF0ZWQgZWxlbWVudCBhbmQgcmV0dXJucyBhIGJvb2xlYW4gcmVzdWx0XG4gKi9cbmZ1bmN0aW9uIGFzc2VydCggZm4gKSB7XG5cdHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKTtcblxuXHR0cnkge1xuXHRcdHJldHVybiAhIWZuKCBlbCApO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9IGZpbmFsbHkge1xuXHRcdC8vIFJlbW92ZSBmcm9tIGl0cyBwYXJlbnQgYnkgZGVmYXVsdFxuXHRcdGlmICggZWwucGFyZW50Tm9kZSApIHtcblx0XHRcdGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIGVsICk7XG5cdFx0fVxuXHRcdC8vIHJlbGVhc2UgbWVtb3J5IGluIElFXG5cdFx0ZWwgPSBudWxsO1xuXHR9XG59XG5cbi8qKlxuICogQWRkcyB0aGUgc2FtZSBoYW5kbGVyIGZvciBhbGwgb2YgdGhlIHNwZWNpZmllZCBhdHRyc1xuICogQHBhcmFtIHtTdHJpbmd9IGF0dHJzIFBpcGUtc2VwYXJhdGVkIGxpc3Qgb2YgYXR0cmlidXRlc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXG4gKi9cbmZ1bmN0aW9uIGFkZEhhbmRsZSggYXR0cnMsIGhhbmRsZXIgKSB7XG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdChcInxcIiksXG5cdFx0aSA9IGFyci5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0RXhwci5hdHRySGFuZGxlWyBhcnJbaV0gXSA9IGhhbmRsZXI7XG5cdH1cbn1cblxuLyoqXG4gKiBDaGVja3MgZG9jdW1lbnQgb3JkZXIgb2YgdHdvIHNpYmxpbmdzXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGFcbiAqIEBwYXJhbSB7RWxlbWVudH0gYlxuICogQHJldHVybnMge051bWJlcn0gUmV0dXJucyBsZXNzIHRoYW4gMCBpZiBhIHByZWNlZGVzIGIsIGdyZWF0ZXIgdGhhbiAwIGlmIGEgZm9sbG93cyBiXG4gKi9cbmZ1bmN0aW9uIHNpYmxpbmdDaGVjayggYSwgYiApIHtcblx0dmFyIGN1ciA9IGIgJiYgYSxcblx0XHRkaWZmID0gY3VyICYmIGEubm9kZVR5cGUgPT09IDEgJiYgYi5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0YS5zb3VyY2VJbmRleCAtIGIuc291cmNlSW5kZXg7XG5cblx0Ly8gVXNlIElFIHNvdXJjZUluZGV4IGlmIGF2YWlsYWJsZSBvbiBib3RoIG5vZGVzXG5cdGlmICggZGlmZiApIHtcblx0XHRyZXR1cm4gZGlmZjtcblx0fVxuXG5cdC8vIENoZWNrIGlmIGIgZm9sbG93cyBhXG5cdGlmICggY3VyICkge1xuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5uZXh0U2libGluZykgKSB7XG5cdFx0XHRpZiAoIGN1ciA9PT0gYiApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBhID8gMSA6IC0xO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgaW5wdXQgdHlwZXNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUlucHV0UHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gKG5hbWUgPT09IFwiaW5wdXRcIiB8fCBuYW1lID09PSBcImJ1dHRvblwiKSAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciA6ZW5hYmxlZC86ZGlzYWJsZWRcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gZGlzYWJsZWQgdHJ1ZSBmb3IgOmRpc2FibGVkOyBmYWxzZSBmb3IgOmVuYWJsZWRcbiAqL1xuZnVuY3Rpb24gY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIGRpc2FibGVkICkge1xuXHQvLyBLbm93biA6ZGlzYWJsZWQgZmFsc2UgcG9zaXRpdmVzOlxuXHQvLyBJRTogKltkaXNhYmxlZF06bm90KGJ1dHRvbiwgaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEsIG9wdGdyb3VwLCBvcHRpb24sIG1lbnVpdGVtLCBmaWVsZHNldClcblx0Ly8gbm90IElFOiBmaWVsZHNldFtkaXNhYmxlZF0gPiBsZWdlbmQ6bnRoLW9mLXR5cGUobisyKSA6Y2FuLWRpc2FibGVcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gQ2hlY2sgZm9ybSBlbGVtZW50cyBhbmQgb3B0aW9uIGVsZW1lbnRzIGZvciBleHBsaWNpdCBkaXNhYmxpbmdcblx0XHRyZXR1cm4gXCJsYWJlbFwiIGluIGVsZW0gJiYgZWxlbS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQgfHxcblx0XHRcdFwiZm9ybVwiIGluIGVsZW0gJiYgZWxlbS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQgfHxcblxuXHRcdFx0Ly8gQ2hlY2sgbm9uLWRpc2FibGVkIGZvcm0gZWxlbWVudHMgZm9yIGZpZWxkc2V0W2Rpc2FibGVkXSBhbmNlc3RvcnNcblx0XHRcdFwiZm9ybVwiIGluIGVsZW0gJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgJiYgKFxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTYtMTErXG5cdFx0XHRcdC8vIEFuY2VzdHJ5IGlzIGNvdmVyZWQgZm9yIHVzXG5cdFx0XHRcdGVsZW0uaXNEaXNhYmxlZCA9PT0gZGlzYWJsZWQgfHxcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIGFzc3VtZSBhbnkgbm9uLTxvcHRpb24+IHVuZGVyIGZpZWxkc2V0W2Rpc2FibGVkXSBpcyBkaXNhYmxlZFxuXHRcdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdFx0ZWxlbS5pc0Rpc2FibGVkICE9PSAhZGlzYWJsZWQgJiZcblx0XHRcdFx0XHQoXCJsYWJlbFwiIGluIGVsZW0gfHwgIWRpc2FibGVkQW5jZXN0b3IoIGVsZW0gKSkgIT09IGRpc2FibGVkXG5cdFx0XHQpO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBhcmd1bWVudCApIHtcblx0XHRhcmd1bWVudCA9ICthcmd1bWVudDtcblx0XHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbIChqID0gbWF0Y2hJbmRleGVzW2ldKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbal0gPSAhKG1hdGNoZXNbal0gPSBzZWVkW2pdKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcbn1cblxuLyoqXG4gKiBDaGVja3MgYSBub2RlIGZvciB2YWxpZGl0eSBhcyBhIFNpenpsZSBjb250ZXh0XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0PX0gY29udGV4dFxuICogQHJldHVybnMge0VsZW1lbnR8T2JqZWN0fEJvb2xlYW59IFRoZSBpbnB1dCBub2RlIGlmIGFjY2VwdGFibGUsIG90aGVyd2lzZSBhIGZhbHN5IHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHRlc3RDb250ZXh0KCBjb250ZXh0ICkge1xuXHRyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb250ZXh0O1xufVxuXG4vLyBFeHBvc2Ugc3VwcG9ydCB2YXJzIGZvciBjb252ZW5pZW5jZVxuc3VwcG9ydCA9IFNpenpsZS5zdXBwb3J0ID0ge307XG5cbi8qKlxuICogRGV0ZWN0cyBYTUwgbm9kZXNcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IGVsZW0gQW4gZWxlbWVudCBvciBhIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZmYgZWxlbSBpcyBhIG5vbi1IVE1MIFhNTCBub2RlXG4gKi9cbmlzWE1MID0gU2l6emxlLmlzWE1MID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdC8vIGRvY3VtZW50RWxlbWVudCBpcyB2ZXJpZmllZCBmb3IgY2FzZXMgd2hlcmUgaXQgZG9lc24ndCB5ZXQgZXhpc3Rcblx0Ly8gKHN1Y2ggYXMgbG9hZGluZyBpZnJhbWVzIGluIElFIC0gIzQ4MzMpXG5cdHZhciBkb2N1bWVudEVsZW1lbnQgPSBlbGVtICYmIChlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSkuZG9jdW1lbnRFbGVtZW50O1xuXHRyZXR1cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSBcIkhUTUxcIiA6IGZhbHNlO1xufTtcblxuLyoqXG4gKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IFtkb2NdIEFuIGVsZW1lbnQgb3IgZG9jdW1lbnQgb2JqZWN0IHRvIHVzZSB0byBzZXQgdGhlIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKi9cbnNldERvY3VtZW50ID0gU2l6emxlLnNldERvY3VtZW50ID0gZnVuY3Rpb24oIG5vZGUgKSB7XG5cdHZhciBoYXNDb21wYXJlLCBzdWJXaW5kb3csXG5cdFx0ZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jO1xuXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXG5cdGlmICggZG9jID09PSBkb2N1bWVudCB8fCBkb2Mubm9kZVR5cGUgIT09IDkgfHwgIWRvYy5kb2N1bWVudEVsZW1lbnQgKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50O1xuXHR9XG5cblx0Ly8gVXBkYXRlIGdsb2JhbCB2YXJpYWJsZXNcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdGRvY3VtZW50SXNIVE1MID0gIWlzWE1MKCBkb2N1bWVudCApO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDktMTEsIEVkZ2Vcblx0Ly8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyBcInBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3JzIChqUXVlcnkgIzEzOTM2KVxuXHRpZiAoIHByZWZlcnJlZERvYyAhPT0gZG9jdW1lbnQgJiZcblx0XHQoc3ViV2luZG93ID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcpICYmIHN1YldpbmRvdy50b3AgIT09IHN1YldpbmRvdyApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDExLCBFZGdlXG5cdFx0aWYgKCBzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHlcblx0XHR9IGVsc2UgaWYgKCBzdWJXaW5kb3cuYXR0YWNoRXZlbnQgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xuXHRcdH1cblx0fVxuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmNsYXNzTmFtZSA9IFwiaVwiO1xuXHRcdHJldHVybiAhZWwuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpO1xuXHR9KTtcblxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KFwiXCIpICk7XG5cdFx0cmV0dXJuICFlbC5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBTdXBwb3J0OiBJRTw5XG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDEwXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRCeUlkIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZVxuXHQvLyBUaGUgYnJva2VuIGdldEVsZW1lbnRCeUlkIG1ldGhvZHMgZG9uJ3QgcGljayB1cCBwcm9ncmFtbWF0aWNhbGx5LXNldCBuYW1lcyxcblx0Ly8gc28gdXNlIGEgcm91bmRhYm91dCBnZXRFbGVtZW50c0J5TmFtZSB0ZXN0XG5cdHN1cHBvcnQuZ2V0QnlJZCA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pZCA9IGV4cGFuZG87XG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XG5cdH0pO1xuXG5cdC8vIElEIGZpbmQgYW5kIGZpbHRlclxuXHRpZiAoIHN1cHBvcnQuZ2V0QnlJZCApIHtcblx0XHRFeHByLmZpbmRbXCJJRFwiXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRcdHZhciBtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcblx0XHRcdFx0cmV0dXJuIG0gPyBbIG0gXSA6IFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdFx0RXhwci5maWx0ZXJbXCJJRFwiXSA9IGZ1bmN0aW9uKCBpZCApIHtcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoXCJpZFwiKSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdC8vIFN1cHBvcnQ6IElFNi83XG5cdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgaXMgbm90IHJlbGlhYmxlIGFzIGEgZmluZCBzaG9ydGN1dFxuXHRcdGRlbGV0ZSBFeHByLmZpbmRbXCJJRFwiXTtcblxuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSAgZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBub2RlID0gdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cdH1cblxuXHQvLyBUYWdcblx0RXhwci5maW5kW1wiVEFHXCJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/XG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcblxuXHRcdFx0Ly8gRG9jdW1lbnRGcmFnbWVudCBub2RlcyBkb24ndCBoYXZlIGdFQlROXG5cdFx0XHR9IGVsc2UgaWYgKCBzdXBwb3J0LnFzYSApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnICk7XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdHRtcCA9IFtdLFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0Ly8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvb1xuXHRcdFx0XHRyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIEZpbHRlciBvdXQgcG9zc2libGUgY29tbWVudHNcblx0XHRcdGlmICggdGFnID09PSBcIipcIiApIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0dG1wLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdG1wO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0fTtcblxuXHQvLyBDbGFzc1xuXHRFeHByLmZpbmRbXCJDTEFTU1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJiBmdW5jdGlvbiggY2xhc3NOYW1lLCBjb250ZXh0ICkge1xuXHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIGNsYXNzTmFtZSApO1xuXHRcdH1cblx0fTtcblxuXHQvKiBRU0EvbWF0Y2hlc1NlbGVjdG9yXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBRU0EgYW5kIG1hdGNoZXNTZWxlY3RvciBzdXBwb3J0XG5cblx0Ly8gbWF0Y2hlc1NlbGVjdG9yKDphY3RpdmUpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChJRTkvT3BlcmEgMTEuNSlcblx0cmJ1Z2d5TWF0Y2hlcyA9IFtdO1xuXG5cdC8vIHFTYSg6Zm9jdXMpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChDaHJvbWUgMjEpXG5cdC8vIFdlIGFsbG93IHRoaXMgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBJRTgvOSB0aGF0IHRocm93cyBhbiBlcnJvclxuXHQvLyB3aGVuZXZlciBgZG9jdW1lbnQuYWN0aXZlRWxlbWVudGAgaXMgYWNjZXNzZWQgb24gYW4gaWZyYW1lXG5cdC8vIFNvLCB3ZSBhbGxvdyA6Zm9jdXMgdG8gcGFzcyB0aHJvdWdoIFFTQSBhbGwgdGhlIHRpbWUgdG8gYXZvaWQgdGhlIElFIGVycm9yXG5cdC8vIFNlZSBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSkgKSB7XG5cdFx0Ly8gQnVpbGQgUVNBIHJlZ2V4XG5cdFx0Ly8gUmVnZXggc3RyYXRlZ3kgYWRvcHRlZCBmcm9tIERpZWdvIFBlcmluaVxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHQvLyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlXG5cdFx0XHQvLyBUaGlzIGlzIHRvIHRlc3QgSUUncyB0cmVhdG1lbnQgb2Ygbm90IGV4cGxpY2l0bHlcblx0XHRcdC8vIHNldHRpbmcgYSBib29sZWFuIGNvbnRlbnQgYXR0cmlidXRlLFxuXHRcdFx0Ly8gc2luY2UgaXRzIHByZXNlbmNlIHNob3VsZCBiZSBlbm91Z2hcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pbm5lckhUTUwgPSBcIjxhIGlkPSdcIiArIGV4cGFuZG8gKyBcIic+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGlkPSdcIiArIGV4cGFuZG8gKyBcIi1cXHJcXFxcJyBtc2FsbG93Y2FwdHVyZT0nJz5cIiArXG5cdFx0XHRcdFwiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNlxuXHRcdFx0Ly8gTm90aGluZyBzaG91bGQgYmUgc2VsZWN0ZWQgd2hlbiBlbXB0eSBzdHJpbmdzIGZvbGxvdyBePSBvciAkPSBvciAqPVxuXHRcdFx0Ly8gVGhlIHRlc3QgYXR0cmlidXRlIG11c3QgYmUgdW5rbm93biBpbiBPcGVyYSBidXQgXCJzYWZlXCIgZm9yIFdpblJUXG5cdFx0XHQvLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNDY1Mzg4LmFzcHgjYXR0cmlidXRlX3NlY3Rpb25cblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIlttc2FsbG93Y2FwdHVyZV49JyddXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiWypeJF09XCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBCb29sZWFuIGF0dHJpYnV0ZXMgYW5kIFwidmFsdWVcIiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86dmFsdWV8XCIgKyBib29sZWFucyArIFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZTwyOSwgQW5kcm9pZDw0LjQsIFNhZmFyaTw3LjArLCBpT1M8Ny4wKywgUGhhbnRvbUpTPDEuOS44K1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbaWR+PVwiICsgZXhwYW5kbyArIFwiLV1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCJ+PVwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbChcIjpjaGVja2VkXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCI6Y2hlY2tlZFwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrLCBpT1MgOCtcblx0XHRcdC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzY4NTFcblx0XHRcdC8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNpYmxpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiYSNcIiArIGV4cGFuZG8gKyBcIisqXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiLiMuK1srfl1cIik7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScnIGRpc2FibGVkPSdkaXNhYmxlZCc+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGRpc2FibGVkPSdkaXNhYmxlZCc+PG9wdGlvbi8+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFdpbmRvd3MgOCBOYXRpdmUgQXBwc1xuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XG5cdFx0XHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcImhpZGRlblwiICk7XG5cdFx0XHRlbC5hcHBlbmRDaGlsZCggaW5wdXQgKS5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcIkRcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEVuZm9yY2UgY2FzZS1zZW5zaXRpdml0eSBvZiBuYW1lIGF0dHJpYnV0ZVxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW25hbWU9ZF1cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiOmVuYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIElFJ3MgOmRpc2FibGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZpZWxkc2V0c1xuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZGlzYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9wZXJhIDEwLTExIGRvZXMgbm90IHRocm93IG9uIHBvc3QtY29tbWEgaW52YWxpZCBwc2V1ZG9zXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKFwiLC4qOlwiKTtcblx0XHR9KTtcblx0fVxuXG5cdGlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHtcblxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3Jcblx0XHRcdC8vIG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgKElFIDkpXG5cdFx0XHRzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoID0gbWF0Y2hlcy5jYWxsKCBlbCwgXCIqXCIgKTtcblxuXHRcdFx0Ly8gVGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvblxuXHRcdFx0Ly8gR2Vja28gZG9lcyBub3QgZXJyb3IsIHJldHVybnMgZmFsc2UgaW5zdGVhZFxuXHRcdFx0bWF0Y2hlcy5jYWxsKCBlbCwgXCJbcyE9JyddOnhcIiApO1xuXHRcdFx0cmJ1Z2d5TWF0Y2hlcy5wdXNoKCBcIiE9XCIsIHBzZXVkb3MgKTtcblx0XHR9KTtcblx0fVxuXG5cdHJidWdneVFTQSA9IHJidWdneVFTQS5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5UVNBLmpvaW4oXCJ8XCIpICk7XG5cdHJidWdneU1hdGNoZXMgPSByYnVnZ3lNYXRjaGVzLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lNYXRjaGVzLmpvaW4oXCJ8XCIpICk7XG5cblx0LyogQ29udGFpbnNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHRoYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7XG5cblx0Ly8gRWxlbWVudCBjb250YWlucyBhbm90aGVyXG5cdC8vIFB1cnBvc2VmdWxseSBzZWxmLWV4Y2x1c2l2ZVxuXHQvLyBBcyBpbiwgYW4gZWxlbWVudCBkb2VzIG5vdCBjb250YWluIGl0c2VsZlxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0dmFyIGFkb3duID0gYS5ub2RlVHlwZSA9PT0gOSA/IGEuZG9jdW1lbnRFbGVtZW50IDogYSxcblx0XHRcdFx0YnVwID0gYiAmJiBiLnBhcmVudE5vZGU7XG5cdFx0XHRyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0YWRvd24uY29udGFpbnMgP1xuXHRcdFx0XHRcdGFkb3duLmNvbnRhaW5zKCBidXAgKSA6XG5cdFx0XHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBidXAgKSAmIDE2XG5cdFx0XHQpKTtcblx0XHR9IDpcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdGlmICggYiApIHtcblx0XHRcdFx0d2hpbGUgKCAoYiA9IGIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBiID09PSBhICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHQvKiBTb3J0aW5nXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBEb2N1bWVudCBvcmRlciBzb3J0aW5nXG5cdHNvcnRPcmRlciA9IGhhc0NvbXBhcmUgP1xuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdC8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb25cblx0XHR2YXIgY29tcGFyZSA9ICFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIC0gIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247XG5cdFx0aWYgKCBjb21wYXJlICkge1xuXHRcdFx0cmV0dXJuIGNvbXBhcmU7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0aGUgc2FtZSBkb2N1bWVudFxuXHRcdGNvbXBhcmUgPSAoIGEub3duZXJEb2N1bWVudCB8fCBhICkgPT09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/XG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWRcblx0XHRcdDE7XG5cblx0XHQvLyBEaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XG5cdFx0XHQoIXN1cHBvcnQuc29ydERldGFjaGVkICYmIGIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGEgKSA9PT0gY29tcGFyZSkgKSB7XG5cblx0XHRcdC8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudFxuXHRcdFx0aWYgKCBhID09PSBkb2N1bWVudCB8fCBhLm93bmVyRG9jdW1lbnQgPT09IHByZWZlcnJlZERvYyAmJiBjb250YWlucyhwcmVmZXJyZWREb2MsIGEpICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGIgPT09IGRvY3VtZW50IHx8IGIub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYikgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWludGFpbiBvcmlnaW5hbCBvcmRlclxuXHRcdFx0cmV0dXJuIHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY29tcGFyZSAmIDQgPyAtMSA6IDE7XG5cdH0gOlxuXHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHQvLyBFeGl0IGVhcmx5IGlmIHRoZSBub2RlcyBhcmUgaWRlbnRpY2FsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHZhciBjdXIsXG5cdFx0XHRpID0gMCxcblx0XHRcdGF1cCA9IGEucGFyZW50Tm9kZSxcblx0XHRcdGJ1cCA9IGIucGFyZW50Tm9kZSxcblx0XHRcdGFwID0gWyBhIF0sXG5cdFx0XHRicCA9IFsgYiBdO1xuXG5cdFx0Ly8gUGFyZW50bGVzcyBub2RlcyBhcmUgZWl0aGVyIGRvY3VtZW50cyBvciBkaXNjb25uZWN0ZWRcblx0XHRpZiAoICFhdXAgfHwgIWJ1cCApIHtcblx0XHRcdHJldHVybiBhID09PSBkb2N1bWVudCA/IC0xIDpcblx0XHRcdFx0YiA9PT0gZG9jdW1lbnQgPyAxIDpcblx0XHRcdFx0YXVwID8gLTEgOlxuXHRcdFx0XHRidXAgPyAxIDpcblx0XHRcdFx0c29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXG5cdFx0Ly8gSWYgdGhlIG5vZGVzIGFyZSBzaWJsaW5ncywgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2tcblx0XHR9IGVsc2UgaWYgKCBhdXAgPT09IGJ1cCApIHtcblx0XHRcdHJldHVybiBzaWJsaW5nQ2hlY2soIGEsIGIgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCBmdWxsIGxpc3RzIG9mIHRoZWlyIGFuY2VzdG9ycyBmb3IgY29tcGFyaXNvblxuXHRcdGN1ciA9IGE7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xuXHRcdFx0YXAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXHRcdGN1ciA9IGI7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xuXHRcdFx0YnAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2FsayBkb3duIHRoZSB0cmVlIGxvb2tpbmcgZm9yIGEgZGlzY3JlcGFuY3lcblx0XHR3aGlsZSAoIGFwW2ldID09PSBicFtpXSApIHtcblx0XHRcdGkrKztcblx0XHR9XG5cblx0XHRyZXR1cm4gaSA/XG5cdFx0XHQvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3Jcblx0XHRcdHNpYmxpbmdDaGVjayggYXBbaV0sIGJwW2ldICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugbm9kZXMgaW4gb3VyIGRvY3VtZW50IHNvcnQgZmlyc3Rcblx0XHRcdGFwW2ldID09PSBwcmVmZXJyZWREb2MgPyAtMSA6XG5cdFx0XHRicFtpXSA9PT0gcHJlZmVycmVkRG9jID8gMSA6XG5cdFx0XHQwO1xuXHR9O1xuXG5cdHJldHVybiBkb2N1bWVudDtcbn07XG5cblNpenpsZS5tYXRjaGVzID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1lbnRzICkge1xuXHRyZXR1cm4gU2l6emxlKCBleHByLCBudWxsLCBudWxsLCBlbGVtZW50cyApO1xufTtcblxuU2l6emxlLm1hdGNoZXNTZWxlY3RvciA9IGZ1bmN0aW9uKCBlbGVtLCBleHByICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHQvLyBNYWtlIHN1cmUgdGhhdCBhdHRyaWJ1dGUgc2VsZWN0b3JzIGFyZSBxdW90ZWRcblx0ZXhwciA9IGV4cHIucmVwbGFjZSggcmF0dHJpYnV0ZVF1b3RlcywgXCI9JyQxJ11cIiApO1xuXG5cdGlmICggc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3IgJiYgZG9jdW1lbnRJc0hUTUwgJiZcblx0XHQhY29tcGlsZXJDYWNoZVsgZXhwciArIFwiIFwiIF0gJiZcblx0XHQoICFyYnVnZ3lNYXRjaGVzIHx8ICFyYnVnZ3lNYXRjaGVzLnRlc3QoIGV4cHIgKSApICYmXG5cdFx0KCAhcmJ1Z2d5UVNBICAgICB8fCAhcmJ1Z2d5UVNBLnRlc3QoIGV4cHIgKSApICkge1xuXG5cdFx0dHJ5IHtcblx0XHRcdHZhciByZXQgPSBtYXRjaGVzLmNhbGwoIGVsZW0sIGV4cHIgKTtcblxuXHRcdFx0Ly8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciByZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdFx0aWYgKCByZXQgfHwgc3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCB8fFxuXHRcdFx0XHRcdC8vIEFzIHdlbGwsIGRpc2Nvbm5lY3RlZCBub2RlcyBhcmUgc2FpZCB0byBiZSBpbiBhIGRvY3VtZW50XG5cdFx0XHRcdFx0Ly8gZnJhZ21lbnQgaW4gSUUgOVxuXHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQgJiYgZWxlbS5kb2N1bWVudC5ub2RlVHlwZSAhPT0gMTEgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoZSkge31cblx0fVxuXG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIGRvY3VtZW50LCBudWxsLCBbIGVsZW0gXSApLmxlbmd0aCA+IDA7XG59O1xuXG5TaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbiggY29udGV4dCwgZWxlbSApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHR9XG5cdHJldHVybiBjb250YWlucyggY29udGV4dCwgZWxlbSApO1xufTtcblxuU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHR9XG5cblx0dmFyIGZuID0gRXhwci5hdHRySGFuZGxlWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSxcblx0XHQvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoalF1ZXJ5ICMxMzgwNylcblx0XHR2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRmbiggZWxlbSwgbmFtZSwgIWRvY3VtZW50SXNIVE1MICkgOlxuXHRcdFx0dW5kZWZpbmVkO1xuXG5cdHJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/XG5cdFx0dmFsIDpcblx0XHRzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID9cblx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgOlxuXHRcdFx0KHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShuYW1lKSkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdG51bGw7XG59O1xuXG5TaXp6bGUuZXNjYXBlID0gZnVuY3Rpb24oIHNlbCApIHtcblx0cmV0dXJuIChzZWwgKyBcIlwiKS5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG59O1xuXG5TaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIgKyBtc2cgKTtcbn07XG5cbi8qKlxuICogRG9jdW1lbnQgc29ydGluZyBhbmQgcmVtb3ZpbmcgZHVwbGljYXRlc1xuICogQHBhcmFtIHtBcnJheUxpa2V9IHJlc3VsdHNcbiAqL1xuU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHtcblx0dmFyIGVsZW0sXG5cdFx0ZHVwbGljYXRlcyA9IFtdLFxuXHRcdGogPSAwLFxuXHRcdGkgPSAwO1xuXG5cdC8vIFVubGVzcyB3ZSAqa25vdyogd2UgY2FuIGRldGVjdCBkdXBsaWNhdGVzLCBhc3N1bWUgdGhlaXIgcHJlc2VuY2Vcblx0aGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcztcblx0c29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7XG5cdHJlc3VsdHMuc29ydCggc29ydE9yZGVyICk7XG5cblx0aWYgKCBoYXNEdXBsaWNhdGUgKSB7XG5cdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRpZiAoIGVsZW0gPT09IHJlc3VsdHNbIGkgXSApIHtcblx0XHRcdFx0aiA9IGR1cGxpY2F0ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdHJlc3VsdHMuc3BsaWNlKCBkdXBsaWNhdGVzWyBqIF0sIDEgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBDbGVhciBpbnB1dCBhZnRlciBzb3J0aW5nIHRvIHJlbGVhc2Ugb2JqZWN0c1xuXHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9zaXp6bGUvcHVsbC8yMjVcblx0c29ydElucHV0ID0gbnVsbDtcblxuXHRyZXR1cm4gcmVzdWx0cztcbn07XG5cbi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmV0cmlldmluZyB0aGUgdGV4dCB2YWx1ZSBvZiBhbiBhcnJheSBvZiBET00gbm9kZXNcbiAqIEBwYXJhbSB7QXJyYXl8RWxlbWVudH0gZWxlbVxuICovXG5nZXRUZXh0ID0gU2l6emxlLmdldFRleHQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5vZGUsXG5cdFx0cmV0ID0gXCJcIixcblx0XHRpID0gMCxcblx0XHRub2RlVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0aWYgKCAhbm9kZVR5cGUgKSB7XG5cdFx0Ly8gSWYgbm8gbm9kZVR5cGUsIHRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXlcblx0XHR3aGlsZSAoIChub2RlID0gZWxlbVtpKytdKSApIHtcblx0XHRcdC8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzXG5cdFx0XHRyZXQgKz0gZ2V0VGV4dCggbm9kZSApO1xuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkge1xuXHRcdC8vIFVzZSB0ZXh0Q29udGVudCBmb3IgZWxlbWVudHNcblx0XHQvLyBpbm5lclRleHQgdXNhZ2UgcmVtb3ZlZCBmb3IgY29uc2lzdGVuY3kgb2YgbmV3IGxpbmVzIChqUXVlcnkgIzExMTUzKVxuXHRcdGlmICggdHlwZW9mIGVsZW0udGV4dENvbnRlbnQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS50ZXh0Q29udGVudDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gVHJhdmVyc2UgaXRzIGNoaWxkcmVuXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcblx0XHRcdFx0cmV0ICs9IGdldFRleHQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAzIHx8IG5vZGVUeXBlID09PSA0ICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVWYWx1ZTtcblx0fVxuXHQvLyBEbyBub3QgaW5jbHVkZSBjb21tZW50IG9yIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gbm9kZXNcblxuXHRyZXR1cm4gcmV0O1xufTtcblxuRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7XG5cblx0Ly8gQ2FuIGJlIGFkanVzdGVkIGJ5IHRoZSB1c2VyXG5cdGNhY2hlTGVuZ3RoOiA1MCxcblxuXHRjcmVhdGVQc2V1ZG86IG1hcmtGdW5jdGlvbixcblxuXHRtYXRjaDogbWF0Y2hFeHByLFxuXG5cdGF0dHJIYW5kbGU6IHt9LFxuXG5cdGZpbmQ6IHt9LFxuXG5cdHJlbGF0aXZlOiB7XG5cdFx0XCI+XCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIiBcIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiIH0sXG5cdFx0XCIrXCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiflwiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiB9XG5cdH0sXG5cblx0cHJlRmlsdGVyOiB7XG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0Ly8gTW92ZSB0aGUgZ2l2ZW4gdmFsdWUgdG8gbWF0Y2hbM10gd2hldGhlciBxdW90ZWQgb3IgdW5xdW90ZWRcblx0XHRcdG1hdGNoWzNdID0gKCBtYXRjaFszXSB8fCBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiICkucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsyXSA9PT0gXCJ+PVwiICkge1xuXHRcdFx0XHRtYXRjaFszXSA9IFwiIFwiICsgbWF0Y2hbM10gKyBcIiBcIjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0LyogbWF0Y2hlcyBmcm9tIG1hdGNoRXhwcltcIkNISUxEXCJdXG5cdFx0XHRcdDEgdHlwZSAob25seXxudGh8Li4uKVxuXHRcdFx0XHQyIHdoYXQgKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdDMgYXJndW1lbnQgKGV2ZW58b2RkfFxcZCp8XFxkKm4oWystXVxcZCspP3wuLi4pXG5cdFx0XHRcdDQgeG4tY29tcG9uZW50IG9mIHhuK3kgYXJndW1lbnQgKFsrLV0/XFxkKm58KVxuXHRcdFx0XHQ1IHNpZ24gb2YgeG4tY29tcG9uZW50XG5cdFx0XHRcdDYgeCBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NyBzaWduIG9mIHktY29tcG9uZW50XG5cdFx0XHRcdDggeSBvZiB5LWNvbXBvbmVudFxuXHRcdFx0Ki9cblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsxXS5zbGljZSggMCwgMyApID09PSBcIm50aFwiICkge1xuXHRcdFx0XHQvLyBudGgtKiByZXF1aXJlcyBhcmd1bWVudFxuXHRcdFx0XHRpZiAoICFtYXRjaFszXSApIHtcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWzBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBudW1lcmljIHggYW5kIHkgcGFyYW1ldGVycyBmb3IgRXhwci5maWx0ZXIuQ0hJTERcblx0XHRcdFx0Ly8gcmVtZW1iZXIgdGhhdCBmYWxzZS90cnVlIGNhc3QgcmVzcGVjdGl2ZWx5IHRvIDAvMVxuXHRcdFx0XHRtYXRjaFs0XSA9ICsoIG1hdGNoWzRdID8gbWF0Y2hbNV0gKyAobWF0Y2hbNl0gfHwgMSkgOiAyICogKCBtYXRjaFszXSA9PT0gXCJldmVuXCIgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKSApO1xuXHRcdFx0XHRtYXRjaFs1XSA9ICsoICggbWF0Y2hbN10gKyBtYXRjaFs4XSApIHx8IG1hdGNoWzNdID09PSBcIm9kZFwiICk7XG5cblx0XHRcdC8vIG90aGVyIHR5cGVzIHByb2hpYml0IGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbM10gKSB7XG5cdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoO1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHR2YXIgZXhjZXNzLFxuXHRcdFx0XHR1bnF1b3RlZCA9ICFtYXRjaFs2XSAmJiBtYXRjaFsyXTtcblxuXHRcdFx0aWYgKCBtYXRjaEV4cHJbXCJDSElMRFwiXS50ZXN0KCBtYXRjaFswXSApICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWNjZXB0IHF1b3RlZCBhcmd1bWVudHMgYXMtaXNcblx0XHRcdGlmICggbWF0Y2hbM10gKSB7XG5cdFx0XHRcdG1hdGNoWzJdID0gbWF0Y2hbNF0gfHwgbWF0Y2hbNV0gfHwgXCJcIjtcblxuXHRcdFx0Ly8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHVucXVvdGVkICYmIHJwc2V1ZG8udGVzdCggdW5xdW90ZWQgKSAmJlxuXHRcdFx0XHQvLyBHZXQgZXhjZXNzIGZyb20gdG9rZW5pemUgKHJlY3Vyc2l2ZWx5KVxuXHRcdFx0XHQoZXhjZXNzID0gdG9rZW5pemUoIHVucXVvdGVkLCB0cnVlICkpICYmXG5cdFx0XHRcdC8vIGFkdmFuY2UgdG8gdGhlIG5leHQgY2xvc2luZyBwYXJlbnRoZXNpc1xuXHRcdFx0XHQoZXhjZXNzID0gdW5xdW90ZWQuaW5kZXhPZiggXCIpXCIsIHVucXVvdGVkLmxlbmd0aCAtIGV4Y2VzcyApIC0gdW5xdW90ZWQubGVuZ3RoKSApIHtcblxuXHRcdFx0XHQvLyBleGNlc3MgaXMgYSBuZWdhdGl2ZSBpbmRleFxuXHRcdFx0XHRtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdFx0bWF0Y2hbMl0gPSB1bnF1b3RlZC5zbGljZSggMCwgZXhjZXNzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldHVybiBvbmx5IGNhcHR1cmVzIG5lZWRlZCBieSB0aGUgcHNldWRvIGZpbHRlciBtZXRob2QgKHR5cGUgYW5kIGFyZ3VtZW50KVxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCAzICk7XG5cdFx0fVxuXHR9LFxuXG5cdGZpbHRlcjoge1xuXG5cdFx0XCJUQUdcIjogZnVuY3Rpb24oIG5vZGVOYW1lU2VsZWN0b3IgKSB7XG5cdFx0XHR2YXIgbm9kZU5hbWUgPSBub2RlTmFtZVNlbGVjdG9yLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICkudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBub2RlTmFtZVNlbGVjdG9yID09PSBcIipcIiA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbm9kZU5hbWU7XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0xBU1NcIjogZnVuY3Rpb24oIGNsYXNzTmFtZSApIHtcblx0XHRcdHZhciBwYXR0ZXJuID0gY2xhc3NDYWNoZVsgY2xhc3NOYW1lICsgXCIgXCIgXTtcblxuXHRcdFx0cmV0dXJuIHBhdHRlcm4gfHxcblx0XHRcdFx0KHBhdHRlcm4gPSBuZXcgUmVnRXhwKCBcIihefFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgY2xhc3NOYW1lICsgXCIoXCIgKyB3aGl0ZXNwYWNlICsgXCJ8JClcIiApKSAmJlxuXHRcdFx0XHRjbGFzc0NhY2hlKCBjbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBwYXR0ZXJuLnRlc3QoIHR5cGVvZiBlbGVtLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBlbGVtLmNsYXNzTmFtZSB8fCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgIT09IFwidW5kZWZpbmVkXCIgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiICk7XG5cdFx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG5hbWUsIG9wZXJhdG9yLCBjaGVjayApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHJlc3VsdCA9IFNpenpsZS5hdHRyKCBlbGVtLCBuYW1lICk7XG5cblx0XHRcdFx0aWYgKCByZXN1bHQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiIT1cIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoICFvcGVyYXRvciApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJlc3VsdCArPSBcIlwiO1xuXG5cdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCI9XCIgPyByZXN1bHQgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIhPVwiID8gcmVzdWx0ICE9PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiXj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID09PSAwIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIqPVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiJD1cIiA/IGNoZWNrICYmIHJlc3VsdC5zbGljZSggLWNoZWNrLmxlbmd0aCApID09PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifj1cIiA/ICggXCIgXCIgKyByZXN1bHQucmVwbGFjZSggcndoaXRlc3BhY2UsIFwiIFwiICkgKyBcIiBcIiApLmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifD1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgfHwgcmVzdWx0LnNsaWNlKCAwLCBjaGVjay5sZW5ndGggKyAxICkgPT09IGNoZWNrICsgXCItXCIgOlxuXHRcdFx0XHRcdGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggdHlwZSwgd2hhdCwgYXJndW1lbnQsIGZpcnN0LCBsYXN0ICkge1xuXHRcdFx0dmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gXCJudGhcIixcblx0XHRcdFx0Zm9yd2FyZCA9IHR5cGUuc2xpY2UoIC00ICkgIT09IFwibGFzdFwiLFxuXHRcdFx0XHRvZlR5cGUgPSB3aGF0ID09PSBcIm9mLXR5cGVcIjtcblxuXHRcdFx0cmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgP1xuXG5cdFx0XHRcdC8vIFNob3J0Y3V0IGZvciA6bnRoLSoobilcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuICEhZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0XHR9IDpcblxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBjYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsIG5vZGUsIG5vZGVJbmRleCwgc3RhcnQsXG5cdFx0XHRcdFx0XHRkaXIgPSBzaW1wbGUgIT09IGZvcndhcmQgPyBcIm5leHRTaWJsaW5nXCIgOiBcInByZXZpb3VzU2libGluZ1wiLFxuXHRcdFx0XHRcdFx0cGFyZW50ID0gZWxlbS5wYXJlbnROb2RlLFxuXHRcdFx0XHRcdFx0bmFtZSA9IG9mVHlwZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXG5cdFx0XHRcdFx0XHR1c2VDYWNoZSA9ICF4bWwgJiYgIW9mVHlwZSxcblx0XHRcdFx0XHRcdGRpZmYgPSBmYWxzZTtcblxuXHRcdFx0XHRcdGlmICggcGFyZW50ICkge1xuXG5cdFx0XHRcdFx0XHQvLyA6KGZpcnN0fGxhc3R8b25seSktKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdFx0XHRpZiAoIHNpbXBsZSApIHtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCBkaXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW07XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9IG5vZGVbIGRpciBdKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdC8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKVxuXHRcdFx0XHRcdFx0XHRcdHN0YXJ0ID0gZGlyID0gdHlwZSA9PT0gXCJvbmx5XCIgJiYgIXN0YXJ0ICYmIFwibmV4dFNpYmxpbmdcIjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0c3RhcnQgPSBbIGZvcndhcmQgPyBwYXJlbnQuZmlyc3RDaGlsZCA6IHBhcmVudC5sYXN0Q2hpbGQgXTtcblxuXHRcdFx0XHRcdFx0Ly8gbm9uLXhtbCA6bnRoLWNoaWxkKC4uLikgc3RvcmVzIGNhY2hlIGRhdGEgb24gYHBhcmVudGBcblx0XHRcdFx0XHRcdGlmICggZm9yd2FyZCAmJiB1c2VDYWNoZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTZWVrIGBlbGVtYCBmcm9tIGEgcHJldmlvdXNseS1jYWNoZWQgaW5kZXhcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBwYXJlbnQ7XG5cdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXggJiYgY2FjaGVbIDIgXTtcblx0XHRcdFx0XHRcdFx0bm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07XG5cblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEZhbGxiYWNrIHRvIHNlZWtpbmcgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0KGRpZmYgPSBub2RlSW5kZXggPSAwKSB8fCBzdGFydC5wb3AoKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBXaGVuIGZvdW5kLCBjYWNoZSBpbmRleGVzIG9uIGBwYXJlbnRgIGFuZCBicmVha1xuXHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSAmJiArK2RpZmYgJiYgbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIG5vZGVJbmRleCwgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8IChub2RlWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXg7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQvLyB4bWwgOm50aC1jaGlsZCguLi4pXG5cdFx0XHRcdFx0XHRcdC8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcblx0XHRcdFx0XHRcdFx0aWYgKCBkaWZmID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBVc2UgdGhlIHNhbWUgbG9vcCBhcyBhYm92ZSB0byBzZWVrIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoZGlmZiA9IG5vZGVJbmRleCA9IDApIHx8IHN0YXJ0LnBvcCgpKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQrK2RpZmYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gQ2FjaGUgdGhlIGluZGV4IG9mIGVhY2ggZW5jb3VudGVyZWQgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSB0aGUgb2Zmc2V0LCB0aGVuIGNoZWNrIGFnYWluc3QgY3ljbGUgc2l6ZVxuXHRcdFx0XHRcdFx0ZGlmZiAtPSBsYXN0O1xuXHRcdFx0XHRcdFx0cmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggcHNldWRvLCBhcmd1bWVudCApIHtcblx0XHRcdC8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZVxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNwc2V1ZG8tY2xhc3Nlc1xuXHRcdFx0Ly8gUHJpb3JpdGl6ZSBieSBjYXNlIHNlbnNpdGl2aXR5IGluIGNhc2UgY3VzdG9tIHBzZXVkb3MgYXJlIGFkZGVkIHdpdGggdXBwZXJjYXNlIGxldHRlcnNcblx0XHRcdC8vIFJlbWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3Ncblx0XHRcdHZhciBhcmdzLFxuXHRcdFx0XHRmbiA9IEV4cHIucHNldWRvc1sgcHNldWRvIF0gfHwgRXhwci5zZXRGaWx0ZXJzWyBwc2V1ZG8udG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIgKyBwc2V1ZG8gKTtcblxuXHRcdFx0Ly8gVGhlIHVzZXIgbWF5IHVzZSBjcmVhdGVQc2V1ZG8gdG8gaW5kaWNhdGUgdGhhdFxuXHRcdFx0Ly8gYXJndW1lbnRzIGFyZSBuZWVkZWQgdG8gY3JlYXRlIHRoZSBmaWx0ZXIgZnVuY3Rpb25cblx0XHRcdC8vIGp1c3QgYXMgU2l6emxlIGRvZXNcblx0XHRcdGlmICggZm5bIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0cmV0dXJuIGZuKCBhcmd1bWVudCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBCdXQgbWFpbnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXNcblx0XHRcdGlmICggZm4ubGVuZ3RoID4gMSApIHtcblx0XHRcdFx0YXJncyA9IFsgcHNldWRvLCBwc2V1ZG8sIFwiXCIsIGFyZ3VtZW50IF07XG5cdFx0XHRcdHJldHVybiBFeHByLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoIHBzZXVkby50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcblx0XHRcdFx0XHRcdHZhciBpZHgsXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSxcblx0XHRcdFx0XHRcdFx0aSA9IG1hdGNoZWQubGVuZ3RoO1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlkeCA9IGluZGV4T2YoIHNlZWQsIG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdFx0c2VlZFsgaWR4IF0gPSAhKCBtYXRjaGVzWyBpZHggXSA9IG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KSA6XG5cdFx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZm4oIGVsZW0sIDAsIGFyZ3MgKTtcblx0XHRcdFx0XHR9O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZm47XG5cdFx0fVxuXHR9LFxuXG5cdHBzZXVkb3M6IHtcblx0XHQvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBzZXVkb3Ncblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcblx0XHRcdC8vIHRvIGF2b2lkIHRyZWF0aW5nIGxlYWRpbmcgYW5kIHRyYWlsaW5nXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxuXHRcdFx0XHRyZXN1bHRzID0gW10sXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcblxuXHRcdFx0cmV0dXJuIG1hdGNoZXJbIGV4cGFuZG8gXSA/XG5cdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcywgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHRcdFx0dW5tYXRjaGVkID0gbWF0Y2hlciggc2VlZCwgbnVsbCwgeG1sLCBbXSApLFxuXHRcdFx0XHRcdFx0aSA9IHNlZWQubGVuZ3RoO1xuXG5cdFx0XHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgdW5tYXRjaGVkIGJ5IGBtYXRjaGVyYFxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRcdFx0XHRcdHNlZWRbaV0gPSAhKG1hdGNoZXNbaV0gPSBlbGVtKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pIDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHRpbnB1dFswXSA9IGVsZW07XG5cdFx0XHRcdFx0bWF0Y2hlciggaW5wdXQsIG51bGwsIHhtbCwgcmVzdWx0cyApO1xuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRcdFx0aW5wdXRbMF0gPSBudWxsO1xuXHRcdFx0XHRcdHJldHVybiAhcmVzdWx0cy5wb3AoKTtcblx0XHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBTaXp6bGUoIHNlbGVjdG9yLCBlbGVtICkubGVuZ3RoID4gMDtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHRcImNvbnRhaW5zXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZWxlbS5pbm5lclRleHQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gXCJXaGV0aGVyIGFuIGVsZW1lbnQgaXMgcmVwcmVzZW50ZWQgYnkgYSA6bGFuZygpIHNlbGVjdG9yXG5cdFx0Ly8gaXMgYmFzZWQgc29sZWx5IG9uIHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWVcblx0XHQvLyBiZWluZyBlcXVhbCB0byB0aGUgaWRlbnRpZmllciBDLFxuXHRcdC8vIG9yIGJlZ2lubmluZyB3aXRoIHRoZSBpZGVudGlmaWVyIEMgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgXCItXCIuXG5cdFx0Ly8gVGhlIG1hdGNoaW5nIG9mIEMgYWdhaW5zdCB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlIGlzIHBlcmZvcm1lZCBjYXNlLWluc2Vuc2l0aXZlbHkuXG5cdFx0Ly8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEgdmFsaWQgbGFuZ3VhZ2UgbmFtZS5cIlxuXHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jbGFuZy1wc2V1ZG9cblx0XHRcImxhbmdcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggbGFuZyApIHtcblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QobGFuZyB8fCBcIlwiKSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIGxhbmc6IFwiICsgbGFuZyApO1xuXHRcdFx0fVxuXHRcdFx0bGFuZyA9IGxhbmcucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgZWxlbUxhbmc7XG5cdFx0XHRcdGRvIHtcblx0XHRcdFx0XHRpZiAoIChlbGVtTGFuZyA9IGRvY3VtZW50SXNIVE1MID9cblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZShcInhtbDpsYW5nXCIpIHx8IGVsZW0uZ2V0QXR0cmlidXRlKFwibGFuZ1wiKSkgKSB7XG5cblx0XHRcdFx0XHRcdGVsZW1MYW5nID0gZWxlbUxhbmcudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgXCItXCIgKSA9PT0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gd2hpbGUgKCAoZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSkgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gTWlzY2VsbGFuZW91c1xuXHRcdFwidGFyZ2V0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2g7XG5cdFx0XHRyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkgPT09IGVsZW0uaWQ7XG5cdFx0fSxcblxuXHRcdFwicm9vdFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2NFbGVtO1xuXHRcdH0sXG5cblx0XHRcImZvY3VzXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgKCFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpKSAmJiAhIShlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4KTtcblx0XHR9LFxuXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXG5cdFx0XCJlbmFibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCBmYWxzZSApLFxuXHRcdFwiZGlzYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIHRydWUgKSxcblxuXHRcdFwiY2hlY2tlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIEluIENTUzMsIDpjaGVja2VkIHNob3VsZCByZXR1cm4gYm90aCBjaGVja2VkIGFuZCBzZWxlY3RlZCBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdHZhciBub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiAobm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiAhIWVsZW0uY2hlY2tlZCkgfHwgKG5vZGVOYW1lID09PSBcIm9wdGlvblwiICYmICEhZWxlbS5zZWxlY3RlZCk7XG5cdFx0fSxcblxuXHRcdFwic2VsZWN0ZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XG5cdFx0XHQvLyBvcHRpb25zIGluIFNhZmFyaSB3b3JrIHByb3Blcmx5XG5cdFx0XHRpZiAoIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZWxlbS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLnNlbGVjdGVkID09PSB0cnVlO1xuXHRcdH0sXG5cblx0XHQvLyBDb250ZW50c1xuXHRcdFwiZW1wdHlcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkb1xuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxuXHRcdFx0Ly8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLilcblx0XHRcdC8vIG5vZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdFwicGFyZW50XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbXCJlbXB0eVwiXSggZWxlbSApO1xuXHRcdH0sXG5cblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXG5cdFx0XCJoZWFkZXJcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmhlYWRlci50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiaW5wdXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gXCJidXR0b25cIiB8fCBuYW1lID09PSBcImJ1dHRvblwiO1xuXHRcdH0sXG5cblx0XHRcInRleHRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgYXR0cjtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiAmJlxuXHRcdFx0XHRlbGVtLnR5cGUgPT09IFwidGV4dFwiICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OFxuXHRcdFx0XHQvLyBOZXcgSFRNTDUgYXR0cmlidXRlIHZhbHVlcyAoZS5nLiwgXCJzZWFyY2hcIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSBcInRleHRcIlxuXHRcdFx0XHQoIChhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpKSA9PSBudWxsIHx8IGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxuXHRcdFwiZmlyc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBbIDAgXTtcblx0XHR9KSxcblxuXHRcdFwibGFzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcblx0XHR9KSxcblxuXHRcdFwiZXFcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0cmV0dXJuIFsgYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudCBdO1xuXHRcdH0pLFxuXG5cdFx0XCJldmVuXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDE7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcImx0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgLS1pID49IDA7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwiZ3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KVxuXHR9XG59O1xuXG5FeHByLnBzZXVkb3NbXCJudGhcIl0gPSBFeHByLnBzZXVkb3NbXCJlcVwiXTtcblxuLy8gQWRkIGJ1dHRvbi9pbnB1dCB0eXBlIHBzZXVkb3NcbmZvciAoIGkgaW4geyByYWRpbzogdHJ1ZSwgY2hlY2tib3g6IHRydWUsIGZpbGU6IHRydWUsIHBhc3N3b3JkOiB0cnVlLCBpbWFnZTogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7XG59XG5mb3IgKCBpIGluIHsgc3VibWl0OiB0cnVlLCByZXNldDogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUJ1dHRvblBzZXVkbyggaSApO1xufVxuXG4vLyBFYXN5IEFQSSBmb3IgY3JlYXRpbmcgbmV3IHNldEZpbHRlcnNcbmZ1bmN0aW9uIHNldEZpbHRlcnMoKSB7fVxuc2V0RmlsdGVycy5wcm90b3R5cGUgPSBFeHByLmZpbHRlcnMgPSBFeHByLnBzZXVkb3M7XG5FeHByLnNldEZpbHRlcnMgPSBuZXcgc2V0RmlsdGVycygpO1xuXG50b2tlbml6ZSA9IFNpenpsZS50b2tlbml6ZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgcGFyc2VPbmx5ICkge1xuXHR2YXIgbWF0Y2hlZCwgbWF0Y2gsIHRva2VucywgdHlwZSxcblx0XHRzb0ZhciwgZ3JvdXBzLCBwcmVGaWx0ZXJzLFxuXHRcdGNhY2hlZCA9IHRva2VuQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoIGNhY2hlZCApIHtcblx0XHRyZXR1cm4gcGFyc2VPbmx5ID8gMCA6IGNhY2hlZC5zbGljZSggMCApO1xuXHR9XG5cblx0c29GYXIgPSBzZWxlY3Rvcjtcblx0Z3JvdXBzID0gW107XG5cdHByZUZpbHRlcnMgPSBFeHByLnByZUZpbHRlcjtcblxuXHR3aGlsZSAoIHNvRmFyICkge1xuXG5cdFx0Ly8gQ29tbWEgYW5kIGZpcnN0IHJ1blxuXHRcdGlmICggIW1hdGNoZWQgfHwgKG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkpICkge1xuXHRcdFx0aWYgKCBtYXRjaCApIHtcblx0XHRcdFx0Ly8gRG9uJ3QgY29uc3VtZSB0cmFpbGluZyBjb21tYXMgYXMgdmFsaWRcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbMF0ubGVuZ3RoICkgfHwgc29GYXI7XG5cdFx0XHR9XG5cdFx0XHRncm91cHMucHVzaCggKHRva2VucyA9IFtdKSApO1xuXHRcdH1cblxuXHRcdG1hdGNoZWQgPSBmYWxzZTtcblxuXHRcdC8vIENvbWJpbmF0b3JzXG5cdFx0aWYgKCAobWF0Y2ggPSByY29tYmluYXRvcnMuZXhlYyggc29GYXIgKSkgKSB7XG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxuXHRcdFx0XHR0eXBlOiBtYXRjaFswXS5yZXBsYWNlKCBydHJpbSwgXCIgXCIgKVxuXHRcdFx0fSk7XG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZpbHRlcnNcblx0XHRmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkge1xuXHRcdFx0aWYgKCAobWF0Y2ggPSBtYXRjaEV4cHJbIHR5cGUgXS5leGVjKCBzb0ZhciApKSAmJiAoIXByZUZpbHRlcnNbIHR5cGUgXSB8fFxuXHRcdFx0XHQobWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkpKSApIHtcblx0XHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRcdG1hdGNoZXM6IG1hdGNoXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggIW1hdGNoZWQgKSB7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIGxlbmd0aCBvZiB0aGUgaW52YWxpZCBleGNlc3Ncblx0Ly8gaWYgd2UncmUganVzdCBwYXJzaW5nXG5cdC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3Igb3IgcmV0dXJuIHRva2Vuc1xuXHRyZXR1cm4gcGFyc2VPbmx5ID9cblx0XHRzb0Zhci5sZW5ndGggOlxuXHRcdHNvRmFyID9cblx0XHRcdFNpenpsZS5lcnJvciggc2VsZWN0b3IgKSA6XG5cdFx0XHQvLyBDYWNoZSB0aGUgdG9rZW5zXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcbn07XG5cbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRzZWxlY3RvciArPSB0b2tlbnNbaV0udmFsdWU7XG5cdH1cblx0cmV0dXJuIHNlbGVjdG9yO1xufVxuXG5mdW5jdGlvbiBhZGRDb21iaW5hdG9yKCBtYXRjaGVyLCBjb21iaW5hdG9yLCBiYXNlICkge1xuXHR2YXIgZGlyID0gY29tYmluYXRvci5kaXIsXG5cdFx0c2tpcCA9IGNvbWJpbmF0b3IubmV4dCxcblx0XHRrZXkgPSBza2lwIHx8IGRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBrZXkgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xuXHRcdFx0aWYgKCB4bWwgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8IChlbGVtWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHwgKG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0aWYgKCBza2lwICYmIHNraXAgPT09IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0ZWxlbSA9IGVsZW1bIGRpciBdIHx8IGVsZW07XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCAob2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsga2V5IF0pICYmXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQXNzaWduIHRvIG5ld0NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBrZXkgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoIChuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkpICkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICkge1xuXHRyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoID4gMSA/XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBpID0gbWF0Y2hlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggIW1hdGNoZXJzW2ldKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gOlxuXHRcdG1hdGNoZXJzWzBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzW2ldLCByZXN1bHRzICk7XG5cdH1cblx0cmV0dXJuIHJlc3VsdHM7XG59XG5cbmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7XG5cdHZhciBlbGVtLFxuXHRcdG5ld1VubWF0Y2hlZCA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGxlbiA9IHVubWF0Y2hlZC5sZW5ndGgsXG5cdFx0bWFwcGVkID0gbWFwICE9IG51bGw7XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4dCwgeG1sICkge1xuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxuXHRcdFx0cHJlTWFwID0gW10sXG5cdFx0XHRwb3N0TWFwID0gW10sXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBHZXQgaW5pdGlhbCBlbGVtZW50cyBmcm9tIHNlZWQgb3IgY29udGV4dFxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yIHx8IFwiKlwiLCBjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LCBbXSApLFxuXG5cdFx0XHQvLyBQcmVmaWx0ZXIgdG8gZ2V0IG1hdGNoZXIgaW5wdXQsIHByZXNlcnZpbmcgYSBtYXAgZm9yIHNlZWQtcmVzdWx0cyBzeW5jaHJvbml6YXRpb25cblx0XHRcdG1hdGNoZXJJbiA9IHByZUZpbHRlciAmJiAoIHNlZWQgfHwgIXNlbGVjdG9yICkgP1xuXHRcdFx0XHRjb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdGVsZW1zLFxuXG5cdFx0XHRtYXRjaGVyT3V0ID0gbWF0Y2hlciA/XG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSBwb3N0RmluZGVyLCBvciBmaWx0ZXJlZCBzZWVkLCBvciBub24tc2VlZCBwb3N0RmlsdGVyIG9yIHByZWV4aXN0aW5nIHJlc3VsdHMsXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cblxuXHRcdFx0XHRcdC8vIC4uLmludGVybWVkaWF0ZSBwcm9jZXNzaW5nIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFtdIDpcblxuXHRcdFx0XHRcdC8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseVxuXHRcdFx0XHRcdHJlc3VsdHMgOlxuXHRcdFx0XHRtYXRjaGVySW47XG5cblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xuXHRcdGlmICggbWF0Y2hlciApIHtcblx0XHRcdG1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0Y2hlck91dCwgY29udGV4dCwgeG1sICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcG9zdEZpbHRlclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xuXHRcdFx0cG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApO1xuXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXG5cdFx0XHRpID0gdGVtcC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAoZWxlbSA9IHRlbXBbaV0pICkge1xuXHRcdFx0XHRcdG1hdGNoZXJPdXRbIHBvc3RNYXBbaV0gXSA9ICEobWF0Y2hlckluWyBwb3N0TWFwW2ldIF0gPSBlbGVtKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggc2VlZCApIHtcblx0XHRcdGlmICggcG9zdEZpbmRlciB8fCBwcmVGaWx0ZXIgKSB7XG5cdFx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcblx0XHRcdFx0XHR0ZW1wID0gW107XG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goIChtYXRjaGVySW5baV0gPSBlbGVtKSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCAobWF0Y2hlck91dCA9IFtdKSwgdGVtcCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxuXHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSAmJlxuXHRcdFx0XHRcdFx0KHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwW2ldKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkW3RlbXBdID0gIShyZXN1bHRzW3RlbXBdID0gZWxlbSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XG5cdHZhciBjaGVja0NvbnRleHQsIG1hdGNoZXIsIGosXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbMF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVtcIiBcIl0sXG5cdFx0aSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLFxuXG5cdFx0Ly8gVGhlIGZvdW5kYXRpb25hbCBtYXRjaGVyIGVuc3VyZXMgdGhhdCBlbGVtZW50cyBhcmUgcmVhY2hhYmxlIGZyb20gdG9wLWxldmVsIGNvbnRleHQocylcblx0XHRtYXRjaENvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBjaGVja0NvbnRleHQ7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoQW55Q29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIHJldCA9ICggIWxlYWRpbmdSZWxhdGl2ZSAmJiAoIHhtbCB8fCBjb250ZXh0ICE9PSBvdXRlcm1vc3RDb250ZXh0ICkgKSB8fCAoXG5cdFx0XHRcdChjaGVja0NvbnRleHQgPSBjb250ZXh0KS5ub2RlVHlwZSA/XG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAobWF0Y2hlciA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1tpXS50eXBlIF0pICkge1xuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksIG1hdGNoZXIpIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zW2ldLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5zW2ldLm1hdGNoZXMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcblx0XHRcdGlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbal0udHlwZSBdICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZXRNYXRjaGVyKFxuXHRcdFx0XHRcdGkgPiAxICYmIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLFxuXHRcdFx0XHRcdGkgPiAxICYmIHRvU2VsZWN0b3IoXG5cdFx0XHRcdFx0XHQvLyBJZiB0aGUgcHJlY2VkaW5nIHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFueS1lbGVtZW50IGAqYFxuXHRcdFx0XHRcdFx0dG9rZW5zLnNsaWNlKCAwLCBpIC0gMSApLmNvbmNhdCh7IHZhbHVlOiB0b2tlbnNbIGkgLSAyIF0udHlwZSA9PT0gXCIgXCIgPyBcIipcIiA6IFwiXCIgfSlcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICh0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIHRvU2VsZWN0b3IoIHRva2VucyApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSB7XG5cdHZhciBieVNldCA9IHNldE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0YnlFbGVtZW50ID0gZWxlbWVudE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0c3VwZXJNYXRjaGVyID0gZnVuY3Rpb24oIHNlZWQsIGNvbnRleHQsIHhtbCwgcmVzdWx0cywgb3V0ZXJtb3N0ICkge1xuXHRcdFx0dmFyIGVsZW0sIGosIG1hdGNoZXIsXG5cdFx0XHRcdG1hdGNoZWRDb3VudCA9IDAsXG5cdFx0XHRcdGkgPSBcIjBcIixcblx0XHRcdFx0dW5tYXRjaGVkID0gc2VlZCAmJiBbXSxcblx0XHRcdFx0c2V0TWF0Y2hlZCA9IFtdLFxuXHRcdFx0XHRjb250ZXh0QmFja3VwID0gb3V0ZXJtb3N0Q29udGV4dCxcblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFtcIlRBR1wiXSggXCIqXCIsIG91dGVybW9zdCApLFxuXHRcdFx0XHQvLyBVc2UgaW50ZWdlciBkaXJydW5zIGlmZiB0aGlzIGlzIHRoZSBvdXRlcm1vc3QgbWF0Y2hlclxuXHRcdFx0XHRkaXJydW5zVW5pcXVlID0gKGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xKSxcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0c1xuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OSwgU2FmYXJpXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmIChlbGVtID0gZWxlbXNbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwpICkge1xuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVyc1xuXHRcdFx0XHRpZiAoIGJ5U2V0ICkge1xuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcblx0XHRcdFx0XHRpZiAoIChlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IHNldE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdG1hdGNoZXIoIHVubWF0Y2hlZCwgc2V0TWF0Y2hlZCwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEodW5tYXRjaGVkW2ldIHx8IHNldE1hdGNoZWRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbaV0gPSBwb3AuY2FsbCggcmVzdWx0cyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRGlzY2FyZCBpbmRleCBwbGFjZWhvbGRlciB2YWx1ZXMgdG8gZ2V0IG9ubHkgYWN0dWFsIG1hdGNoZXNcblx0XHRcdFx0XHRzZXRNYXRjaGVkID0gY29uZGVuc2UoIHNldE1hdGNoZWQgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHNcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2V0TWF0Y2hlZCApO1xuXG5cdFx0XHRcdC8vIFNlZWRsZXNzIHNldCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxhdGUgc29ydGluZ1xuXHRcdFx0XHRpZiAoIG91dGVybW9zdCAmJiAhc2VlZCAmJiBzZXRNYXRjaGVkLmxlbmd0aCA+IDAgJiZcblx0XHRcdFx0XHQoIG1hdGNoZWRDb3VudCArIHNldE1hdGNoZXJzLmxlbmd0aCApID4gMSApIHtcblxuXHRcdFx0XHRcdFNpenpsZS51bmlxdWVTb3J0KCByZXN1bHRzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gT3ZlcnJpZGUgbWFuaXB1bGF0aW9uIG9mIGdsb2JhbHMgYnkgbmVzdGVkIG1hdGNoZXJzXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdW5tYXRjaGVkO1xuXHRcdH07XG5cblx0cmV0dXJuIGJ5U2V0ID9cblx0XHRtYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDpcblx0XHRzdXBlck1hdGNoZXI7XG59XG5cbmNvbXBpbGUgPSBTaXp6bGUuY29tcGlsZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgbWF0Y2ggLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdHZhciBpLFxuXHRcdHNldE1hdGNoZXJzID0gW10sXG5cdFx0ZWxlbWVudE1hdGNoZXJzID0gW10sXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggIWNhY2hlZCApIHtcblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcblx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdG1hdGNoID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0fVxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbaV0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoIHNlbGVjdG9yLCBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSApO1xuXG5cdFx0Ly8gU2F2ZSBzZWxlY3RvciBhbmQgdG9rZW5pemF0aW9uXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdH1cblx0cmV0dXJuIGNhY2hlZDtcbn07XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHNlbGVjdG9yIEEgc2VsZWN0b3Igb3IgYSBwcmUtY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHRzXVxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuc2VsZWN0ID0gU2l6emxlLnNlbGVjdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3Rvcixcblx0XHRtYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoc2VsZWN0b3IgPSBjb21waWxlZC5zZWxlY3RvciB8fCBzZWxlY3RvcikgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwICk7XG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAodG9rZW4gPSB0b2tlbnNbMF0pLnR5cGUgPT09IFwiSURcIiAmJlxuXHRcdFx0XHRzdXBwb3J0LmdldEJ5SWQgJiYgY29udGV4dC5ub2RlVHlwZSA9PT0gOSAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdFx0XHRFeHByLnJlbGF0aXZlWyB0b2tlbnNbMV0udHlwZSBdICkge1xuXG5cdFx0XHRjb250ZXh0ID0gKCBFeHByLmZpbmRbXCJJRFwiXSggdG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKHJ1bmVzY2FwZSwgZnVuZXNjYXBlKSwgY29udGV4dCApIHx8IFtdIClbMF07XG5cdFx0XHRpZiAoICFjb250ZXh0ICkge1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0Ly8gUHJlY29tcGlsZWQgbWF0Y2hlcnMgd2lsbCBzdGlsbCB2ZXJpZnkgYW5jZXN0cnksIHNvIHN0ZXAgdXAgYSBsZXZlbFxuXHRcdFx0fSBlbHNlIGlmICggY29tcGlsZWQgKSB7XG5cdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cblx0XHRcdHNlbGVjdG9yID0gc2VsZWN0b3Iuc2xpY2UoIHRva2Vucy5zaGlmdCgpLnZhbHVlLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZldGNoIGEgc2VlZCBzZXQgZm9yIHJpZ2h0LXRvLWxlZnQgbWF0Y2hpbmdcblx0XHRpID0gbWF0Y2hFeHByW1wibmVlZHNDb250ZXh0XCJdLnRlc3QoIHNlbGVjdG9yICkgPyAwIDogdG9rZW5zLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRva2VuID0gdG9rZW5zW2ldO1xuXG5cdFx0XHQvLyBBYm9ydCBpZiB3ZSBoaXQgYSBjb21iaW5hdG9yXG5cdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbICh0eXBlID0gdG9rZW4udHlwZSkgXSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIChmaW5kID0gRXhwci5maW5kWyB0eXBlIF0pICkge1xuXHRcdFx0XHQvLyBTZWFyY2gsIGV4cGFuZGluZyBjb250ZXh0IGZvciBsZWFkaW5nIHNpYmxpbmcgY29tYmluYXRvcnNcblx0XHRcdFx0aWYgKCAoc2VlZCA9IGZpbmQoXG5cdFx0XHRcdFx0dG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLFxuXHRcdFx0XHRcdHJzaWJsaW5nLnRlc3QoIHRva2Vuc1swXS50eXBlICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0XHRcdFx0KSkgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiBzZWVkIGlzIGVtcHR5IG9yIG5vIHRva2VucyByZW1haW4sIHdlIGNhbiByZXR1cm4gZWFybHlcblx0XHRcdFx0XHR0b2tlbnMuc3BsaWNlKCBpLCAxICk7XG5cdFx0XHRcdFx0c2VsZWN0b3IgPSBzZWVkLmxlbmd0aCAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKTtcblx0XHRcdFx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNlZWQgKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkXG5cdC8vIFByb3ZpZGUgYG1hdGNoYCB0byBhdm9pZCByZXRva2VuaXphdGlvbiBpZiB3ZSBtb2RpZmllZCB0aGUgc2VsZWN0b3IgYWJvdmVcblx0KCBjb21waWxlZCB8fCBjb21waWxlKCBzZWxlY3RvciwgbWF0Y2ggKSApKFxuXHRcdHNlZWQsXG5cdFx0Y29udGV4dCxcblx0XHQhZG9jdW1lbnRJc0hUTUwsXG5cdFx0cmVzdWx0cyxcblx0XHQhY29udGV4dCB8fCByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XG5cdCk7XG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLy8gT25lLXRpbWUgYXNzaWdubWVudHNcblxuLy8gU29ydCBzdGFiaWxpdHlcbnN1cHBvcnQuc29ydFN0YWJsZSA9IGV4cGFuZG8uc3BsaXQoXCJcIikuc29ydCggc29ydE9yZGVyICkuam9pbihcIlwiKSA9PT0gZXhwYW5kbztcblxuLy8gU3VwcG9ydDogQ2hyb21lIDE0LTM1K1xuLy8gQWx3YXlzIGFzc3VtZSBkdXBsaWNhdGVzIGlmIHRoZXkgYXJlbid0IHBhc3NlZCB0byB0aGUgY29tcGFyaXNvbiBmdW5jdGlvblxuc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzID0gISFoYXNEdXBsaWNhdGU7XG5cbi8vIEluaXRpYWxpemUgYWdhaW5zdCB0aGUgZGVmYXVsdCBkb2N1bWVudFxuc2V0RG9jdW1lbnQoKTtcblxuLy8gU3VwcG9ydDogV2Via2l0PDUzNy4zMiAtIFNhZmFyaSA2LjAuMy9DaHJvbWUgMjUgKGZpeGVkIGluIENocm9tZSAyNylcbi8vIERldGFjaGVkIG5vZGVzIGNvbmZvdW5kaW5nbHkgZm9sbG93ICplYWNoIG90aGVyKlxuc3VwcG9ydC5zb3J0RGV0YWNoZWQgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHQvLyBTaG91bGQgcmV0dXJuIDEsIGJ1dCByZXR1cm5zIDQgKGZvbGxvd2luZylcblx0cmV0dXJuIGVsLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIikgKSAmIDE7XG59KTtcblxuLy8gU3VwcG9ydDogSUU8OFxuLy8gUHJldmVudCBhdHRyaWJ1dGUvcHJvcGVydHkgXCJpbnRlcnBvbGF0aW9uXCJcbi8vIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzY0MjklMjhWUy44NSUyOS5hc3B4XG5pZiAoICFhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRlbC5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JyMnPjwvYT5cIjtcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSA9PT0gXCIjXCIgO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggXCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSwgbmFtZS50b0xvd2VyQ2FzZSgpID09PSBcInR5cGVcIiA/IDEgOiAyICk7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGRlZmF1bHRWYWx1ZSBpbiBwbGFjZSBvZiBnZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKVxuaWYgKCAhc3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRlbC5pbm5lckhUTUwgPSBcIjxpbnB1dC8+XCI7XG5cdGVsLmZpcnN0Q2hpbGQuc2V0QXR0cmlidXRlKCBcInZhbHVlXCIsIFwiXCIgKTtcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gXCJcIjtcbn0pICkge1xuXHRhZGRIYW5kbGUoIFwidmFsdWVcIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdGlmICggIWlzWE1MICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGVmYXVsdFZhbHVlO1xuXHRcdH1cblx0fSk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBnZXRBdHRyaWJ1dGVOb2RlIHRvIGZldGNoIGJvb2xlYW5zIHdoZW4gZ2V0QXR0cmlidXRlIGxpZXNcbmlmICggIWFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdHJldHVybiBlbC5nZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSA9PSBudWxsO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggYm9vbGVhbnMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgdmFsO1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW1bIG5hbWUgXSA9PT0gdHJ1ZSA/IG5hbWUudG9Mb3dlckNhc2UoKSA6XG5cdFx0XHRcdFx0KHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRudWxsO1xuXHRcdH1cblx0fSk7XG59XG5cbnJldHVybiBTaXp6bGU7XG5cbn0pKCB3aW5kb3cgKTtcblxuXG5cbmpRdWVyeS5maW5kID0gU2l6emxlO1xualF1ZXJ5LmV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzO1xuXG4vLyBEZXByZWNhdGVkXG5qUXVlcnkuZXhwclsgXCI6XCIgXSA9IGpRdWVyeS5leHByLnBzZXVkb3M7XG5qUXVlcnkudW5pcXVlU29ydCA9IGpRdWVyeS51bmlxdWUgPSBTaXp6bGUudW5pcXVlU29ydDtcbmpRdWVyeS50ZXh0ID0gU2l6emxlLmdldFRleHQ7XG5qUXVlcnkuaXNYTUxEb2MgPSBTaXp6bGUuaXNYTUw7XG5qUXVlcnkuY29udGFpbnMgPSBTaXp6bGUuY29udGFpbnM7XG5qUXVlcnkuZXNjYXBlU2VsZWN0b3IgPSBTaXp6bGUuZXNjYXBlO1xuXG5cblxuXG52YXIgZGlyID0gZnVuY3Rpb24oIGVsZW0sIGRpciwgdW50aWwgKSB7XG5cdHZhciBtYXRjaGVkID0gW10sXG5cdFx0dHJ1bmNhdGUgPSB1bnRpbCAhPT0gdW5kZWZpbmVkO1xuXG5cdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSAmJiBlbGVtLm5vZGVUeXBlICE9PSA5ICkge1xuXHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGlmICggdHJ1bmNhdGUgJiYgalF1ZXJ5KCBlbGVtICkuaXMoIHVudGlsICkgKSB7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0bWF0Y2hlZC5wdXNoKCBlbGVtICk7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBtYXRjaGVkO1xufTtcblxuXG52YXIgc2libGluZ3MgPSBmdW5jdGlvbiggbiwgZWxlbSApIHtcblx0dmFyIG1hdGNoZWQgPSBbXTtcblxuXHRmb3IgKCA7IG47IG4gPSBuLm5leHRTaWJsaW5nICkge1xuXHRcdGlmICggbi5ub2RlVHlwZSA9PT0gMSAmJiBuICE9PSBlbGVtICkge1xuXHRcdFx0bWF0Y2hlZC5wdXNoKCBuICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBybmVlZHNDb250ZXh0ID0galF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0O1xuXG52YXIgcnNpbmdsZVRhZyA9ICggL148KFthLXpdW15cXC9cXDA+OlxceDIwXFx0XFxyXFxuXFxmXSopW1xceDIwXFx0XFxyXFxuXFxmXSpcXC8/Pig/OjxcXC9cXDE+fCkkL2kgKTtcblxuXG5cbnZhciByaXNTaW1wbGUgPSAvXi5bXjojXFxbXFwuLF0qJC87XG5cbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcblx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcXVhbGlmaWVyICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gISFxdWFsaWZpZXIuY2FsbCggZWxlbSwgaSwgZWxlbSApICE9PSBub3Q7XG5cdFx0fSApO1xuXG5cdH1cblxuXHRpZiAoIHF1YWxpZmllci5ub2RlVHlwZSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGVsZW0gPT09IHF1YWxpZmllciApICE9PSBub3Q7XG5cdFx0fSApO1xuXG5cdH1cblxuXHRpZiAoIHR5cGVvZiBxdWFsaWZpZXIgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0aWYgKCByaXNTaW1wbGUudGVzdCggcXVhbGlmaWVyICkgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmZpbHRlciggcXVhbGlmaWVyLCBlbGVtZW50cywgbm90ICk7XG5cdFx0fVxuXG5cdFx0cXVhbGlmaWVyID0galF1ZXJ5LmZpbHRlciggcXVhbGlmaWVyLCBlbGVtZW50cyApO1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuICggaW5kZXhPZi5jYWxsKCBxdWFsaWZpZXIsIGVsZW0gKSA+IC0xICkgIT09IG5vdCAmJiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHR9ICk7XG59XG5cbmpRdWVyeS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgZWxlbXMsIG5vdCApIHtcblx0dmFyIGVsZW0gPSBlbGVtc1sgMCBdO1xuXG5cdGlmICggbm90ICkge1xuXHRcdGV4cHIgPSBcIjpub3QoXCIgKyBleHByICsgXCIpXCI7XG5cdH1cblxuXHRyZXR1cm4gZWxlbXMubGVuZ3RoID09PSAxICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgP1xuXHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXSA6XG5cdFx0alF1ZXJ5LmZpbmQubWF0Y2hlcyggZXhwciwgalF1ZXJ5LmdyZXAoIGVsZW1zLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHRcdH0gKSApO1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRmaW5kOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGksIHJldCxcblx0XHRcdGxlbiA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0c2VsZiA9IHRoaXM7XG5cblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5KCBzZWxlY3RvciApLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHNlbGZbIGkgXSwgdGhpcyApICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9ICkgKTtcblx0XHR9XG5cblx0XHRyZXQgPSB0aGlzLnB1c2hTdGFjayggW10gKTtcblxuXHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRqUXVlcnkuZmluZCggc2VsZWN0b3IsIHNlbGZbIGkgXSwgcmV0ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGxlbiA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggcmV0ICkgOiByZXQ7XG5cdH0sXG5cdGZpbHRlcjogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgZmFsc2UgKSApO1xuXHR9LFxuXHRub3Q6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIHRydWUgKSApO1xuXHR9LFxuXHRpczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiAhIXdpbm5vdyhcblx0XHRcdHRoaXMsXG5cblx0XHRcdC8vIElmIHRoaXMgaXMgYSBwb3NpdGlvbmFsL3JlbGF0aXZlIHNlbGVjdG9yLCBjaGVjayBtZW1iZXJzaGlwIGluIHRoZSByZXR1cm5lZCBzZXRcblx0XHRcdC8vIHNvICQoXCJwOmZpcnN0XCIpLmlzKFwicDpsYXN0XCIpIHdvbid0IHJldHVybiB0cnVlIGZvciBhIGRvYyB3aXRoIHR3byBcInBcIi5cblx0XHRcdHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiAmJiBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICkgP1xuXHRcdFx0XHRqUXVlcnkoIHNlbGVjdG9yICkgOlxuXHRcdFx0XHRzZWxlY3RvciB8fCBbXSxcblx0XHRcdGZhbHNlXG5cdFx0KS5sZW5ndGg7XG5cdH1cbn0gKTtcblxuXG4vLyBJbml0aWFsaXplIGEgalF1ZXJ5IG9iamVjdFxuXG5cbi8vIEEgY2VudHJhbCByZWZlcmVuY2UgdG8gdGhlIHJvb3QgalF1ZXJ5KGRvY3VtZW50KVxudmFyIHJvb3RqUXVlcnksXG5cblx0Ly8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3Ncblx0Ly8gUHJpb3JpdGl6ZSAjaWQgb3ZlciA8dGFnPiB0byBhdm9pZCBYU1MgdmlhIGxvY2F0aW9uLmhhc2ggKCM5NTIxKVxuXHQvLyBTdHJpY3QgSFRNTCByZWNvZ25pdGlvbiAoIzExMjkwOiBtdXN0IHN0YXJ0IHdpdGggPClcblx0Ly8gU2hvcnRjdXQgc2ltcGxlICNpZCBjYXNlIGZvciBzcGVlZFxuXHRycXVpY2tFeHByID0gL14oPzpcXHMqKDxbXFx3XFxXXSs+KVtePl0qfCMoW1xcdy1dKykpJC8sXG5cblx0aW5pdCA9IGpRdWVyeS5mbi5pbml0ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0LCByb290ICkge1xuXHRcdHZhciBtYXRjaCwgZWxlbTtcblxuXHRcdC8vIEhBTkRMRTogJChcIlwiKSwgJChudWxsKSwgJCh1bmRlZmluZWQpLCAkKGZhbHNlKVxuXHRcdGlmICggIXNlbGVjdG9yICkge1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXG5cdFx0Ly8gTWV0aG9kIGluaXQoKSBhY2NlcHRzIGFuIGFsdGVybmF0ZSByb290alF1ZXJ5XG5cdFx0Ly8gc28gbWlncmF0ZSBjYW4gc3VwcG9ydCBqUXVlcnkuc3ViIChnaC0yMTAxKVxuXHRcdHJvb3QgPSByb290IHx8IHJvb3RqUXVlcnk7XG5cblx0XHQvLyBIYW5kbGUgSFRNTCBzdHJpbmdzXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRpZiAoIHNlbGVjdG9yWyAwIF0gPT09IFwiPFwiICYmXG5cdFx0XHRcdHNlbGVjdG9yWyBzZWxlY3Rvci5sZW5ndGggLSAxIF0gPT09IFwiPlwiICYmXG5cdFx0XHRcdHNlbGVjdG9yLmxlbmd0aCA+PSAzICkge1xuXG5cdFx0XHRcdC8vIEFzc3VtZSB0aGF0IHN0cmluZ3MgdGhhdCBzdGFydCBhbmQgZW5kIHdpdGggPD4gYXJlIEhUTUwgYW5kIHNraXAgdGhlIHJlZ2V4IGNoZWNrXG5cdFx0XHRcdG1hdGNoID0gWyBudWxsLCBzZWxlY3RvciwgbnVsbCBdO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWF0Y2ggaHRtbCBvciBtYWtlIHN1cmUgbm8gY29udGV4dCBpcyBzcGVjaWZpZWQgZm9yICNpZFxuXHRcdFx0aWYgKCBtYXRjaCAmJiAoIG1hdGNoWyAxIF0gfHwgIWNvbnRleHQgKSApIHtcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCkgLT4gJChhcnJheSlcblx0XHRcdFx0aWYgKCBtYXRjaFsgMSBdICkge1xuXHRcdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0IGluc3RhbmNlb2YgalF1ZXJ5ID8gY29udGV4dFsgMCBdIDogY29udGV4dDtcblxuXHRcdFx0XHRcdC8vIE9wdGlvbiB0byBydW4gc2NyaXB0cyBpcyB0cnVlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRcdC8vIEludGVudGlvbmFsbHkgbGV0IHRoZSBlcnJvciBiZSB0aHJvd24gaWYgcGFyc2VIVE1MIGlzIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLCBqUXVlcnkucGFyc2VIVE1MKFxuXHRcdFx0XHRcdFx0bWF0Y2hbIDEgXSxcblx0XHRcdFx0XHRcdGNvbnRleHQgJiYgY29udGV4dC5ub2RlVHlwZSA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogZG9jdW1lbnQsXG5cdFx0XHRcdFx0XHR0cnVlXG5cdFx0XHRcdFx0KSApO1xuXG5cdFx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwsIHByb3BzKVxuXHRcdFx0XHRcdGlmICggcnNpbmdsZVRhZy50ZXN0KCBtYXRjaFsgMSBdICkgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvbnRleHQgKSApIHtcblx0XHRcdFx0XHRcdGZvciAoIG1hdGNoIGluIGNvbnRleHQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gUHJvcGVydGllcyBvZiBjb250ZXh0IGFyZSBjYWxsZWQgYXMgbWV0aG9kcyBpZiBwb3NzaWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB0aGlzWyBtYXRjaCBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpc1sgbWF0Y2ggXSggY29udGV4dFsgbWF0Y2ggXSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBvdGhlcndpc2Ugc2V0IGFzIGF0dHJpYnV0ZXNcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmF0dHIoIG1hdGNoLCBjb250ZXh0WyBtYXRjaCBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoI2lkKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbIDIgXSApO1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJbmplY3QgdGhlIGVsZW1lbnQgZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdFxuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcblx0XHRcdFx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSlcblx0XHRcdH0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkge1xuXHRcdFx0XHRyZXR1cm4gKCBjb250ZXh0IHx8IHJvb3QgKS5maW5kKCBzZWxlY3RvciApO1xuXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgY29udGV4dClcblx0XHRcdC8vICh3aGljaCBpcyBqdXN0IGVxdWl2YWxlbnQgdG86ICQoY29udGV4dCkuZmluZChleHByKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSEFORExFOiAkKERPTUVsZW1lbnQpXG5cdFx0fSBlbHNlIGlmICggc2VsZWN0b3Iubm9kZVR5cGUgKSB7XG5cdFx0XHR0aGlzWyAwIF0gPSBzZWxlY3Rvcjtcblx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0Ly8gSEFORExFOiAkKGZ1bmN0aW9uKVxuXHRcdC8vIFNob3J0Y3V0IGZvciBkb2N1bWVudCByZWFkeVxuXHRcdH0gZWxzZSBpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBzZWxlY3RvciApICkge1xuXHRcdFx0cmV0dXJuIHJvb3QucmVhZHkgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHJvb3QucmVhZHkoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIEV4ZWN1dGUgaW1tZWRpYXRlbHkgaWYgcmVhZHkgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0c2VsZWN0b3IoIGpRdWVyeSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApO1xuXHR9O1xuXG4vLyBHaXZlIHRoZSBpbml0IGZ1bmN0aW9uIHRoZSBqUXVlcnkgcHJvdG90eXBlIGZvciBsYXRlciBpbnN0YW50aWF0aW9uXG5pbml0LnByb3RvdHlwZSA9IGpRdWVyeS5mbjtcblxuLy8gSW5pdGlhbGl6ZSBjZW50cmFsIHJlZmVyZW5jZVxucm9vdGpRdWVyeSA9IGpRdWVyeSggZG9jdW1lbnQgKTtcblxuXG52YXIgcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sXG5cblx0Ly8gTWV0aG9kcyBndWFyYW50ZWVkIHRvIHByb2R1Y2UgYSB1bmlxdWUgc2V0IHdoZW4gc3RhcnRpbmcgZnJvbSBhIHVuaXF1ZSBzZXRcblx0Z3VhcmFudGVlZFVuaXF1ZSA9IHtcblx0XHRjaGlsZHJlbjogdHJ1ZSxcblx0XHRjb250ZW50czogdHJ1ZSxcblx0XHRuZXh0OiB0cnVlLFxuXHRcdHByZXY6IHRydWVcblx0fTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0dmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHRoaXMsIHRhcmdldHNbIGkgXSApICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7XG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0bWF0Y2hlZCA9IFtdLFxuXHRcdFx0dGFyZ2V0cyA9IHR5cGVvZiBzZWxlY3RvcnMgIT09IFwic3RyaW5nXCIgJiYgalF1ZXJ5KCBzZWxlY3RvcnMgKTtcblxuXHRcdC8vIFBvc2l0aW9uYWwgc2VsZWN0b3JzIG5ldmVyIG1hdGNoLCBzaW5jZSB0aGVyZSdzIG5vIF9zZWxlY3Rpb25fIGNvbnRleHRcblx0XHRpZiAoICFybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9ycyApICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXG5cdFx0XHRcdFx0Ly8gQWx3YXlzIHNraXAgZG9jdW1lbnQgZnJhZ21lbnRzXG5cdFx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPCAxMSAmJiAoIHRhcmdldHMgP1xuXHRcdFx0XHRcdFx0dGFyZ2V0cy5pbmRleCggY3VyICkgPiAtMSA6XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IHBhc3Mgbm9uLWVsZW1lbnRzIHRvIFNpenpsZVxuXHRcdFx0XHRcdFx0Y3VyLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggY3VyLCBzZWxlY3RvcnMgKSApICkge1xuXG5cdFx0XHRcdFx0XHRtYXRjaGVkLnB1c2goIGN1ciApO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0Y2hlZCApO1xuXHR9LFxuXG5cdC8vIERldGVybWluZSB0aGUgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIHNldFxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBObyBhcmd1bWVudCwgcmV0dXJuIGluZGV4IGluIHBhcmVudFxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XG5cdFx0fVxuXG5cdFx0Ly8gSW5kZXggaW4gc2VsZWN0b3Jcblx0XHRpZiAoIHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBpbmRleE9mLmNhbGwoIHRoaXMsXG5cblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxuXHRcdFx0ZWxlbS5qcXVlcnkgPyBlbGVtWyAwIF0gOiBlbGVtXG5cdFx0KTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLmdldCgpLCBqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/XG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXG5cdFx0KTtcblx0fVxufSApO1xuXG5mdW5jdGlvbiBzaWJsaW5nKCBjdXIsIGRpciApIHtcblx0d2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fVxuXHRyZXR1cm4gY3VyO1xufVxuXG5qUXVlcnkuZWFjaCgge1xuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0cmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDtcblx0fSxcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIgKTtcblx0fSxcblx0cGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIsIHVudGlsICk7XG5cdH0sXG5cdG5leHQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcblx0fSxcblx0cHJldjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dEFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXZBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dFVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRwcmV2VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCAoIGVsZW0ucGFyZW50Tm9kZSB8fCB7fSApLmZpcnN0Q2hpbGQsIGVsZW0gKTtcblx0fSxcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggZWxlbS5maXJzdENoaWxkICk7XG5cdH0sXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnQgfHwgalF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGlsZE5vZGVzICk7XG5cdH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggdW50aWwsIHNlbGVjdG9yICkge1xuXHRcdHZhciBtYXRjaGVkID0galF1ZXJ5Lm1hcCggdGhpcywgZm4sIHVudGlsICk7XG5cblx0XHRpZiAoIG5hbWUuc2xpY2UoIC01ICkgIT09IFwiVW50aWxcIiApIHtcblx0XHRcdHNlbGVjdG9yID0gdW50aWw7XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRtYXRjaGVkID0galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIG1hdGNoZWQgKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMubGVuZ3RoID4gMSApIHtcblxuXHRcdFx0Ly8gUmVtb3ZlIGR1cGxpY2F0ZXNcblx0XHRcdGlmICggIWd1YXJhbnRlZWRVbmlxdWVbIG5hbWUgXSApIHtcblx0XHRcdFx0alF1ZXJ5LnVuaXF1ZVNvcnQoIG1hdGNoZWQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV2ZXJzZSBvcmRlciBmb3IgcGFyZW50cyogYW5kIHByZXYtZGVyaXZhdGl2ZXNcblx0XHRcdGlmICggcnBhcmVudHNwcmV2LnRlc3QoIG5hbWUgKSApIHtcblx0XHRcdFx0bWF0Y2hlZC5yZXZlcnNlKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkICk7XG5cdH07XG59ICk7XG52YXIgcm5vdHdoaXRlID0gKCAvXFxTKy9nICk7XG5cblxuXG4vLyBDb252ZXJ0IFN0cmluZy1mb3JtYXR0ZWQgb3B0aW9ucyBpbnRvIE9iamVjdC1mb3JtYXR0ZWQgb25lc1xuZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIHtcblx0dmFyIG9iamVjdCA9IHt9O1xuXHRqUXVlcnkuZWFjaCggb3B0aW9ucy5tYXRjaCggcm5vdHdoaXRlICkgfHwgW10sIGZ1bmN0aW9uKCBfLCBmbGFnICkge1xuXHRcdG9iamVjdFsgZmxhZyBdID0gdHJ1ZTtcblx0fSApO1xuXHRyZXR1cm4gb2JqZWN0O1xufVxuXG4vKlxuICogQ3JlYXRlIGEgY2FsbGJhY2sgbGlzdCB1c2luZyB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnM6XG4gKlxuICpcdG9wdGlvbnM6IGFuIG9wdGlvbmFsIGxpc3Qgb2Ygc3BhY2Utc2VwYXJhdGVkIG9wdGlvbnMgdGhhdCB3aWxsIGNoYW5nZSBob3dcbiAqXHRcdFx0dGhlIGNhbGxiYWNrIGxpc3QgYmVoYXZlcyBvciBhIG1vcmUgdHJhZGl0aW9uYWwgb3B0aW9uIG9iamVjdFxuICpcbiAqIEJ5IGRlZmF1bHQgYSBjYWxsYmFjayBsaXN0IHdpbGwgYWN0IGxpa2UgYW4gZXZlbnQgY2FsbGJhY2sgbGlzdCBhbmQgY2FuIGJlXG4gKiBcImZpcmVkXCIgbXVsdGlwbGUgdGltZXMuXG4gKlxuICogUG9zc2libGUgb3B0aW9uczpcbiAqXG4gKlx0b25jZTpcdFx0XHR3aWxsIGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNlIChsaWtlIGEgRGVmZXJyZWQpXG4gKlxuICpcdG1lbW9yeTpcdFx0XHR3aWxsIGtlZXAgdHJhY2sgb2YgcHJldmlvdXMgdmFsdWVzIGFuZCB3aWxsIGNhbGwgYW55IGNhbGxiYWNrIGFkZGVkXG4gKlx0XHRcdFx0XHRhZnRlciB0aGUgbGlzdCBoYXMgYmVlbiBmaXJlZCByaWdodCBhd2F5IHdpdGggdGhlIGxhdGVzdCBcIm1lbW9yaXplZFwiXG4gKlx0XHRcdFx0XHR2YWx1ZXMgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0dW5pcXVlOlx0XHRcdHdpbGwgZW5zdXJlIGEgY2FsbGJhY2sgY2FuIG9ubHkgYmUgYWRkZWQgb25jZSAobm8gZHVwbGljYXRlIGluIHRoZSBsaXN0KVxuICpcbiAqXHRzdG9wT25GYWxzZTpcdGludGVycnVwdCBjYWxsaW5ncyB3aGVuIGEgY2FsbGJhY2sgcmV0dXJucyBmYWxzZVxuICpcbiAqL1xualF1ZXJ5LkNhbGxiYWNrcyA9IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXG5cdC8vIENvbnZlcnQgb3B0aW9ucyBmcm9tIFN0cmluZy1mb3JtYXR0ZWQgdG8gT2JqZWN0LWZvcm1hdHRlZCBpZiBuZWVkZWRcblx0Ly8gKHdlIGNoZWNrIGluIGNhY2hlIGZpcnN0KVxuXHRvcHRpb25zID0gdHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgP1xuXHRcdGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSA6XG5cdFx0alF1ZXJ5LmV4dGVuZCgge30sIG9wdGlvbnMgKTtcblxuXHR2YXIgLy8gRmxhZyB0byBrbm93IGlmIGxpc3QgaXMgY3VycmVudGx5IGZpcmluZ1xuXHRcdGZpcmluZyxcblxuXHRcdC8vIExhc3QgZmlyZSB2YWx1ZSBmb3Igbm9uLWZvcmdldHRhYmxlIGxpc3RzXG5cdFx0bWVtb3J5LFxuXG5cdFx0Ly8gRmxhZyB0byBrbm93IGlmIGxpc3Qgd2FzIGFscmVhZHkgZmlyZWRcblx0XHRmaXJlZCxcblxuXHRcdC8vIEZsYWcgdG8gcHJldmVudCBmaXJpbmdcblx0XHRsb2NrZWQsXG5cblx0XHQvLyBBY3R1YWwgY2FsbGJhY2sgbGlzdFxuXHRcdGxpc3QgPSBbXSxcblxuXHRcdC8vIFF1ZXVlIG9mIGV4ZWN1dGlvbiBkYXRhIGZvciByZXBlYXRhYmxlIGxpc3RzXG5cdFx0cXVldWUgPSBbXSxcblxuXHRcdC8vIEluZGV4IG9mIGN1cnJlbnRseSBmaXJpbmcgY2FsbGJhY2sgKG1vZGlmaWVkIGJ5IGFkZC9yZW1vdmUgYXMgbmVlZGVkKVxuXHRcdGZpcmluZ0luZGV4ID0gLTEsXG5cblx0XHQvLyBGaXJlIGNhbGxiYWNrc1xuXHRcdGZpcmUgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5mb3JjZSBzaW5nbGUtZmlyaW5nXG5cdFx0XHRsb2NrZWQgPSBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBhcmcgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoICFvcHRpb25zLnVuaXF1ZSB8fCAhc2VsZi5oYXMoIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0bGlzdC5wdXNoKCBhcmcgKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIGFyZyAmJiBhcmcubGVuZ3RoICYmIGpRdWVyeS50eXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxuZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7XG5cdHJldHVybiB2O1xufVxuZnVuY3Rpb24gVGhyb3dlciggZXggKSB7XG5cdHRocm93IGV4O1xufVxuXG5mdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICkge1xuXHR2YXIgbWV0aG9kO1xuXG5cdHRyeSB7XG5cblx0XHQvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yXG5cdFx0aWYgKCB2YWx1ZSAmJiBqUXVlcnkuaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS5wcm9taXNlICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSApLmRvbmUoIHJlc29sdmUgKS5mYWlsKCByZWplY3QgKTtcblxuXHRcdC8vIE90aGVyIHRoZW5hYmxlc1xuXHRcdH0gZWxzZSBpZiAoIHZhbHVlICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnRoZW4gKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlLCByZXNvbHZlLCByZWplY3QgKTtcblxuXHRcdC8vIE90aGVyIG5vbi10aGVuYWJsZXNcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCBvbmx5XG5cdFx0XHQvLyBTdHJpY3QgbW9kZSBmdW5jdGlvbnMgaW52b2tlZCB3aXRob3V0IC5jYWxsLy5hcHBseSBnZXQgZ2xvYmFsLW9iamVjdCBjb250ZXh0XG5cdFx0XHRyZXNvbHZlLmNhbGwoIHVuZGVmaW5lZCwgdmFsdWUgKTtcblx0XHR9XG5cblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXG5cdC8vIFNpbmNlIGpRdWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJhIGNoZWNrcyBhcHBlYXJpbmcgaW5cblx0Ly8gRGVmZXJyZWQjdGhlbiB0byBjb25kaXRpb25hbGx5IHN1cHByZXNzIHJlamVjdGlvbi5cblx0fSBjYXRjaCAoIHZhbHVlICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgb25seVxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcblx0XHRyZWplY3QuY2FsbCggdW5kZWZpbmVkLCB2YWx1ZSApO1xuXHR9XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHREZWZlcnJlZDogZnVuY3Rpb24oIGZ1bmMgKSB7XG5cdFx0dmFyIHR1cGxlcyA9IFtcblxuXHRcdFx0XHQvLyBhY3Rpb24sIGFkZCBsaXN0ZW5lciwgY2FsbGJhY2tzLFxuXHRcdFx0XHQvLyAuLi4gLnRoZW4gaGFuZGxlcnMsIGFyZ3VtZW50IGluZGV4LCBbZmluYWwgc3RhdGVdXG5cdFx0XHRcdFsgXCJub3RpZnlcIiwgXCJwcm9ncmVzc1wiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJtZW1vcnlcIiApLCAyIF0sXG5cdFx0XHRcdFsgXCJyZXNvbHZlXCIsIFwiZG9uZVwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSwgMCwgXCJyZXNvbHZlZFwiIF0sXG5cdFx0XHRcdFsgXCJyZWplY3RcIiwgXCJmYWlsXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAxLCBcInJlamVjdGVkXCIgXVxuXHRcdFx0XSxcblx0XHRcdHN0YXRlID0gXCJwZW5kaW5nXCIsXG5cdFx0XHRwcm9taXNlID0ge1xuXHRcdFx0XHRzdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHN0YXRlO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRhbHdheXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGRlZmVycmVkLmRvbmUoIGFyZ3VtZW50cyApLmZhaWwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRcImNhdGNoXCI6IGZ1bmN0aW9uKCBmbiApIHtcblx0XHRcdFx0XHRyZXR1cm4gcHJvbWlzZS50aGVuKCBudWxsLCBmbiApO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEtlZXAgcGlwZSBmb3IgYmFjay1jb21wYXRcblx0XHRcdFx0cGlwZTogZnVuY3Rpb24oIC8qIGZuRG9uZSwgZm5GYWlsLCBmblByb2dyZXNzICovICkge1xuXHRcdFx0XHRcdHZhciBmbnMgPSBhcmd1bWVudHM7XG5cblx0XHRcdFx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCBmdW5jdGlvbiggbmV3RGVmZXIgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkuZWFjaCggdHVwbGVzLCBmdW5jdGlvbiggaSwgdHVwbGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTWFwIHR1cGxlcyAocHJvZ3Jlc3MsIGRvbmUsIGZhaWwpIHRvIGFyZ3VtZW50cyAoZG9uZSwgZmFpbCwgcHJvZ3Jlc3MpXG5cdFx0XHRcdFx0XHRcdHZhciBmbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBmbnNbIHR1cGxlWyA0IF0gXSApICYmIGZuc1sgdHVwbGVbIDQgXSBdO1xuXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLnByb2dyZXNzKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLm5vdGlmeSB9KVxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5kb25lKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlc29sdmUgfSlcblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQuZmFpbChmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5yZWplY3QgfSlcblx0XHRcdFx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAxIF0gXSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIHJldHVybmVkID0gZm4gJiYgZm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5kb25lKCBuZXdEZWZlci5yZXNvbHZlIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmZhaWwoIG5ld0RlZmVyLnJlamVjdCApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlclsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGZuID8gWyByZXR1cm5lZCBdIDogYXJndW1lbnRzXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHR0aGVuOiBmdW5jdGlvbiggb25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIG9uUHJvZ3Jlc3MgKSB7XG5cdFx0XHRcdFx0dmFyIG1heERlcHRoID0gMDtcblx0XHRcdFx0XHRmdW5jdGlvbiByZXNvbHZlKCBkZXB0aCwgZGVmZXJyZWQsIGhhbmRsZXIsIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdFx0XHRcdFx0XHRhcmdzID0gYXJndW1lbnRzLFxuXHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3cgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCwgdGhlbjtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjNcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgZG91YmxlLXJlc29sdXRpb24gYXR0ZW1wdHNcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggPCBtYXhEZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCA9IGhhbmRsZXIuYXBwbHkoIHRoYXQsIGFyZ3MgKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNDhcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgPT09IGRlZmVycmVkLnByb21pc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvciggXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIiApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU0XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC03NVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gUmV0cmlldmUgYHRoZW5gIG9ubHkgb25jZVxuXHRcdFx0XHRcdFx0XHRcdFx0dGhlbiA9IHJldHVybmVkICYmXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuNFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02NFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IGNoZWNrIG9iamVjdHMgYW5kIGZ1bmN0aW9ucyBmb3IgdGhlbmFiaWxpdHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCB0eXBlb2YgcmV0dXJuZWQgPT09IFwib2JqZWN0XCIgfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgcmV0dXJuZWQgPT09IFwiZnVuY3Rpb25cIiApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhIHJldHVybmVkIHRoZW5hYmxlXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCB0aGVuICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3BlY2lhbCBwcm9jZXNzb3JzIChub3RpZnkpIGp1c3Qgd2FpdCBmb3IgcmVzb2x1dGlvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gTm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGFsc28gaG9vayBpbnRvIHByb2dyZXNzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgZGlzcmVnYXJkIG9sZGVyIHJlc29sdXRpb24gdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bWF4RGVwdGgrKztcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoZW4uY2FsbChcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBUaHJvd2VyLCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhbGwgb3RoZXIgcmV0dXJuZWQgdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gSWRlbnRpdHkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhcmdzID0gWyByZXR1cm5lZCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gUHJvY2VzcyB0aGUgdmFsdWUocylcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmYXVsdCBwcm9jZXNzIGlzIHJlc29sdmVcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCBzcGVjaWFsIHx8IGRlZmVycmVkLnJlc29sdmVXaXRoICkoIHRoYXQsIGFyZ3MgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBub3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgY2F0Y2ggYW5kIHJlamVjdCBleGNlcHRpb25zXG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcyA9IHNwZWNpYWwgP1xuXHRcdFx0XHRcdFx0XHRcdFx0bWlnaHRUaHJvdyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93KCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rKCBlLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuNC4xXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgcG9zdC1yZXNvbHV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoICsgMSA+PSBtYXhEZXB0aCApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGhhbmRsZXIgIT09IFRocm93ZXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoYXQgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIGUgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuMVxuXHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01N1xuXHRcdFx0XHRcdFx0XHQvLyBSZS1yZXNvbHZlIHByb21pc2VzIGltbWVkaWF0ZWx5IHRvIGRvZGdlIGZhbHNlIHJlamVjdGlvbiBmcm9tXG5cdFx0XHRcdFx0XHRcdC8vIHN1YnNlcXVlbnQgZXJyb3JzXG5cdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcygpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ2FsbCBhbiBvcHRpb25hbCBob29rIHRvIHJlY29yZCB0aGUgc3RhY2ssIGluIGNhc2Ugb2YgZXhjZXB0aW9uXG5cdFx0XHRcdFx0XHRcdFx0Ly8gc2luY2UgaXQncyBvdGhlcndpc2UgbG9zdCB3aGVuIGV4ZWN1dGlvbiBnb2VzIGFzeW5jXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0cHJvY2Vzcy5zdGFja1RyYWNlID0galF1ZXJ5LkRlZmVycmVkLmdldFN0YWNrSG9vaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggcHJvY2VzcyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblxuXHRcdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuaXNGdW5jdGlvbiggb25Qcm9ncmVzcyApID9cblx0XHRcdFx0XHRcdFx0XHRcdG9uUHJvZ3Jlc3MgOlxuXHRcdFx0XHRcdFx0XHRcdFx0SWRlbnRpdHksXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIubm90aWZ5V2l0aFxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAxIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuaXNGdW5jdGlvbiggb25GdWxmaWxsZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvbkZ1bGZpbGxlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDIgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5pc0Z1bmN0aW9uKCBvblJlamVjdGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25SZWplY3RlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRUaHJvd2VyXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBHZXQgYSBwcm9taXNlIGZvciB0aGlzIGRlZmVycmVkXG5cdFx0XHRcdC8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3Rcblx0XHRcdFx0cHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRcdFx0XHRyZXR1cm4gb2JqICE9IG51bGwgPyBqUXVlcnkuZXh0ZW5kKCBvYmosIHByb21pc2UgKSA6IHByb21pc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZlcnJlZCA9IHt9O1xuXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xuXHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblx0XHRcdHZhciBsaXN0ID0gdHVwbGVbIDIgXSxcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgNSBdO1xuXG5cdFx0XHQvLyBwcm9taXNlLnByb2dyZXNzID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZG9uZSA9IGxpc3QuYWRkXG5cdFx0XHQvLyBwcm9taXNlLmZhaWwgPSBsaXN0LmFkZFxuXHRcdFx0cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7XG5cblx0XHRcdC8vIEhhbmRsZSBzdGF0ZVxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcblx0XHRcdFx0bGlzdC5hZGQoXG5cdFx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZXNvbHZlZFwiIChpLmUuLCBmdWxmaWxsZWQpXG5cdFx0XHRcdFx0XHQvLyBzdGF0ZSA9IFwicmVqZWN0ZWRcIlxuXHRcdFx0XHRcdFx0c3RhdGUgPSBzdGF0ZVN0cmluZztcblx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDIgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfY2FsbGJhY2tzLmxvY2tcblx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMiBdLmxvY2tcblx0XHRcdFx0KTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMuZmlyZVxuXHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmZpcmVcblx0XHRcdC8vIHJlamVjdGVkX2hhbmRsZXJzLmZpcmVcblx0XHRcdGxpc3QuYWRkKCB0dXBsZVsgMyBdLmZpcmUgKTtcblxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5ID0gZnVuY3Rpb24oKSB7IGRlZmVycmVkLm5vdGlmeVdpdGgoLi4uKSB9XG5cdFx0XHQvLyBkZWZlcnJlZC5yZXNvbHZlID0gZnVuY3Rpb24oKSB7IGRlZmVycmVkLnJlc29sdmVXaXRoKC4uLikgfVxuXHRcdFx0Ly8gZGVmZXJyZWQucmVqZWN0ID0gZnVuY3Rpb24oKSB7IGRlZmVycmVkLnJlamVjdFdpdGgoLi4uKSB9XG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXSggdGhpcyA9PT0gZGVmZXJyZWQgPyB1bmRlZmluZWQgOiB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9O1xuXG5cdFx0XHQvLyBkZWZlcnJlZC5ub3RpZnlXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0Ly8gZGVmZXJyZWQucmVzb2x2ZVdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHQvLyBkZWZlcnJlZC5yZWplY3RXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdID0gbGlzdC5maXJlV2l0aDtcblx0XHR9ICk7XG5cblx0XHQvLyBNYWtlIHRoZSBkZWZlcnJlZCBhIHByb21pc2Vcblx0XHRwcm9taXNlLnByb21pc2UoIGRlZmVycmVkICk7XG5cblx0XHQvLyBDYWxsIGdpdmVuIGZ1bmMgaWYgYW55XG5cdFx0aWYgKCBmdW5jICkge1xuXHRcdFx0ZnVuYy5jYWxsKCBkZWZlcnJlZCwgZGVmZXJyZWQgKTtcblx0XHR9XG5cblx0XHQvLyBBbGwgZG9uZSFcblx0XHRyZXR1cm4gZGVmZXJyZWQ7XG5cdH0sXG5cblx0Ly8gRGVmZXJyZWQgaGVscGVyXG5cdHdoZW46IGZ1bmN0aW9uKCBzaW5nbGVWYWx1ZSApIHtcblx0XHR2YXJcblxuXHRcdFx0Ly8gY291bnQgb2YgdW5jb21wbGV0ZWQgc3Vib3JkaW5hdGVzXG5cdFx0XHRyZW1haW5pbmcgPSBhcmd1bWVudHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBjb3VudCBvZiB1bnByb2Nlc3NlZCBhcmd1bWVudHNcblx0XHRcdGkgPSByZW1haW5pbmcsXG5cblx0XHRcdC8vIHN1Ym9yZGluYXRlIGZ1bGZpbGxtZW50IGRhdGFcblx0XHRcdHJlc29sdmVDb250ZXh0cyA9IEFycmF5KCBpICksXG5cdFx0XHRyZXNvbHZlVmFsdWVzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzICksXG5cblx0XHRcdC8vIHRoZSBtYXN0ZXIgRGVmZXJyZWRcblx0XHRcdG1hc3RlciA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXG5cdFx0XHQvLyBzdWJvcmRpbmF0ZSBjYWxsYmFjayBmYWN0b3J5XG5cdFx0XHR1cGRhdGVGdW5jID0gZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmVzb2x2ZUNvbnRleHRzWyBpIF0gPSB0aGlzO1xuXHRcdFx0XHRcdHJlc29sdmVWYWx1ZXNbIGkgXSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gc2xpY2UuY2FsbCggYXJndW1lbnRzICkgOiB2YWx1ZTtcblx0XHRcdFx0XHRpZiAoICEoIC0tcmVtYWluaW5nICkgKSB7XG5cdFx0XHRcdFx0XHRtYXN0ZXIucmVzb2x2ZVdpdGgoIHJlc29sdmVDb250ZXh0cywgcmVzb2x2ZVZhbHVlcyApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblx0XHRcdH07XG5cblx0XHQvLyBTaW5nbGUtIGFuZCBlbXB0eSBhcmd1bWVudHMgYXJlIGFkb3B0ZWQgbGlrZSBQcm9taXNlLnJlc29sdmVcblx0XHRpZiAoIHJlbWFpbmluZyA8PSAxICkge1xuXHRcdFx0YWRvcHRWYWx1ZSggc2luZ2xlVmFsdWUsIG1hc3Rlci5kb25lKCB1cGRhdGVGdW5jKCBpICkgKS5yZXNvbHZlLCBtYXN0ZXIucmVqZWN0ICk7XG5cblx0XHRcdC8vIFVzZSAudGhlbigpIHRvIHVud3JhcCBzZWNvbmRhcnkgdGhlbmFibGVzIChjZi4gZ2gtMzAwMClcblx0XHRcdGlmICggbWFzdGVyLnN0YXRlKCkgPT09IFwicGVuZGluZ1wiIHx8XG5cdFx0XHRcdGpRdWVyeS5pc0Z1bmN0aW9uKCByZXNvbHZlVmFsdWVzWyBpIF0gJiYgcmVzb2x2ZVZhbHVlc1sgaSBdLnRoZW4gKSApIHtcblxuXHRcdFx0XHRyZXR1cm4gbWFzdGVyLnRoZW4oKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBNdWx0aXBsZSBhcmd1bWVudHMgYXJlIGFnZ3JlZ2F0ZWQgbGlrZSBQcm9taXNlLmFsbCBhcnJheSBlbGVtZW50c1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0YWRvcHRWYWx1ZSggcmVzb2x2ZVZhbHVlc1sgaSBdLCB1cGRhdGVGdW5jKCBpICksIG1hc3Rlci5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbWFzdGVyLnByb21pc2UoKTtcblx0fVxufSApO1xuXG5cbi8vIFRoZXNlIHVzdWFsbHkgaW5kaWNhdGUgYSBwcm9ncmFtbWVyIG1pc3Rha2UgZHVyaW5nIGRldmVsb3BtZW50LFxuLy8gd2FybiBhYm91dCB0aGVtIEFTQVAgcmF0aGVyIHRoYW4gc3dhbGxvd2luZyB0aGVtIGJ5IGRlZmF1bHQuXG52YXIgcmVycm9yTmFtZXMgPSAvXihFdmFsfEludGVybmFsfFJhbmdlfFJlZmVyZW5jZXxTeW50YXh8VHlwZXxVUkkpRXJyb3IkLztcblxualF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgPSBmdW5jdGlvbiggZXJyb3IsIHN0YWNrICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDggLSA5IG9ubHlcblx0Ly8gQ29uc29sZSBleGlzdHMgd2hlbiBkZXYgdG9vbHMgYXJlIG9wZW4sIHdoaWNoIGNhbiBoYXBwZW4gYXQgYW55IHRpbWVcblx0aWYgKCB3aW5kb3cuY29uc29sZSAmJiB3aW5kb3cuY29uc29sZS53YXJuICYmIGVycm9yICYmIHJlcnJvck5hbWVzLnRlc3QoIGVycm9yLm5hbWUgKSApIHtcblx0XHR3aW5kb3cuY29uc29sZS53YXJuKCBcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiICsgZXJyb3IubWVzc2FnZSwgZXJyb3Iuc3RhY2ssIHN0YWNrICk7XG5cdH1cbn07XG5cblxuXG5cbmpRdWVyeS5yZWFkeUV4Y2VwdGlvbiA9IGZ1bmN0aW9uKCBlcnJvciApIHtcblx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdHRocm93IGVycm9yO1xuXHR9ICk7XG59O1xuXG5cblxuXG4vLyBUaGUgZGVmZXJyZWQgdXNlZCBvbiBET00gcmVhZHlcbnZhciByZWFkeUxpc3QgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxualF1ZXJ5LmZuLnJlYWR5ID0gZnVuY3Rpb24oIGZuICkge1xuXG5cdHJlYWR5TGlzdFxuXHRcdC50aGVuKCBmbiApXG5cblx0XHQvLyBXcmFwIGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgdGhlIGxvb2t1cFxuXHRcdC8vIGhhcHBlbnMgYXQgdGhlIHRpbWUgb2YgZXJyb3IgaGFuZGxpbmcgaW5zdGVhZCBvZiBjYWxsYmFja1xuXHRcdC8vIHJlZ2lzdHJhdGlvbi5cblx0XHQuY2F0Y2goIGZ1bmN0aW9uKCBlcnJvciApIHtcblx0XHRcdGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiggZXJyb3IgKTtcblx0XHR9ICk7XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy5cblx0aXNSZWFkeTogZmFsc2UsXG5cblx0Ly8gQSBjb3VudGVyIHRvIHRyYWNrIGhvdyBtYW55IGl0ZW1zIHRvIHdhaXQgZm9yIGJlZm9yZVxuXHQvLyB0aGUgcmVhZHkgZXZlbnQgZmlyZXMuIFNlZSAjNjc4MVxuXHRyZWFkeVdhaXQ6IDEsXG5cblx0Ly8gSG9sZCAob3IgcmVsZWFzZSkgdGhlIHJlYWR5IGV2ZW50XG5cdGhvbGRSZWFkeTogZnVuY3Rpb24oIGhvbGQgKSB7XG5cdFx0aWYgKCBob2xkICkge1xuXHRcdFx0alF1ZXJ5LnJlYWR5V2FpdCsrO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqUXVlcnkucmVhZHkoIHRydWUgKTtcblx0XHR9XG5cdH0sXG5cblx0Ly8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeVxuXHRyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7XG5cblx0XHQvLyBBYm9ydCBpZiB0aGVyZSBhcmUgcGVuZGluZyBob2xkcyBvciB3ZSdyZSBhbHJlYWR5IHJlYWR5XG5cdFx0aWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVlcnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5XG5cdFx0alF1ZXJ5LmlzUmVhZHkgPSB0cnVlO1xuXG5cdFx0Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmVcblx0XHRpZiAoIHdhaXQgIT09IHRydWUgJiYgLS1qUXVlcnkucmVhZHlXYWl0ID4gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXG5cdFx0cmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5yZWFkeS50aGVuID0gcmVhZHlMaXN0LnRoZW47XG5cbi8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kXG5mdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG5cdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcblx0alF1ZXJ5LnJlYWR5KCk7XG59XG5cbi8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkXG4vLyBhZnRlciB0aGUgYnJvd3NlciBldmVudCBoYXMgYWxyZWFkeSBvY2N1cnJlZC5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDEwIG9ubHlcbi8vIE9sZGVyIElFIHNvbWV0aW1lcyBzaWduYWxzIFwiaW50ZXJhY3RpdmVcIiB0b28gc29vblxuaWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIgfHxcblx0KCBkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIiAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7XG5cblx0Ly8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcblxufSBlbHNlIHtcblxuXHQvLyBVc2UgdGhlIGhhbmR5IGV2ZW50IGNhbGxiYWNrXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblxuXHQvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29ya1xuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xufVxuXG5cblxuXG4vLyBNdWx0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyBvZiBhIGNvbGxlY3Rpb25cbi8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvblxudmFyIGFjY2VzcyA9IGZ1bmN0aW9uKCBlbGVtcywgZm4sIGtleSwgdmFsdWUsIGNoYWluYWJsZSwgZW1wdHlHZXQsIHJhdyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGVsZW1zLmxlbmd0aCxcblx0XHRidWxrID0ga2V5ID09IG51bGw7XG5cblx0Ly8gU2V0cyBtYW55IHZhbHVlc1xuXHRpZiAoIGpRdWVyeS50eXBlKCBrZXkgKSA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXHRcdGZvciAoIGkgaW4ga2V5ICkge1xuXHRcdFx0YWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVsgaSBdLCB0cnVlLCBlbXB0eUdldCwgcmF3ICk7XG5cdFx0fVxuXG5cdC8vIFNldHMgb25lIHZhbHVlXG5cdH0gZWxzZSBpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblxuXHRcdGlmICggIWpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmF3ID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGJ1bGsgKSB7XG5cblx0XHRcdC8vIEJ1bGsgb3BlcmF0aW9ucyBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldFxuXHRcdFx0aWYgKCByYXcgKSB7XG5cdFx0XHRcdGZuLmNhbGwoIGVsZW1zLCB2YWx1ZSApO1xuXHRcdFx0XHRmbiA9IG51bGw7XG5cblx0XHRcdC8vIC4uLmV4Y2VwdCB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGJ1bGsgPSBmbjtcblx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gYnVsay5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdmFsdWUgKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdGZuKFxuXHRcdFx0XHRcdGVsZW1zWyBpIF0sIGtleSwgcmF3ID9cblx0XHRcdFx0XHR2YWx1ZSA6XG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggZWxlbXNbIGkgXSwgaSwgZm4oIGVsZW1zWyBpIF0sIGtleSApIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gY2hhaW5hYmxlID9cblx0XHRlbGVtcyA6XG5cblx0XHQvLyBHZXRzXG5cdFx0YnVsayA/XG5cdFx0XHRmbi5jYWxsKCBlbGVtcyApIDpcblx0XHRcdGxlbiA/IGZuKCBlbGVtc1sgMCBdLCBrZXkgKSA6IGVtcHR5R2V0O1xufTtcbnZhciBhY2NlcHREYXRhID0gZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdC8vIEFjY2VwdHMgb25seTpcblx0Ly8gIC0gTm9kZVxuXHQvLyAgICAtIE5vZGUuRUxFTUVOVF9OT0RFXG5cdC8vICAgIC0gTm9kZS5ET0NVTUVOVF9OT0RFXG5cdC8vICAtIE9iamVjdFxuXHQvLyAgICAtIEFueVxuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XG59O1xuXG5cblxuXG5mdW5jdGlvbiBEYXRhKCkge1xuXHR0aGlzLmV4cGFuZG8gPSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7XG59XG5cbkRhdGEudWlkID0gMTtcblxuRGF0YS5wcm90b3R5cGUgPSB7XG5cblx0Y2FjaGU6IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHRcdC8vIENoZWNrIGlmIHRoZSBvd25lciBvYmplY3QgYWxyZWFkeSBoYXMgYSBjYWNoZVxuXHRcdHZhciB2YWx1ZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdC8vIElmIG5vdCwgY3JlYXRlIG9uZVxuXHRcdGlmICggIXZhbHVlICkge1xuXHRcdFx0dmFsdWUgPSB7fTtcblxuXHRcdFx0Ly8gV2UgY2FuIGFjY2VwdCBkYXRhIGZvciBub24tZWxlbWVudCBub2RlcyBpbiBtb2Rlcm4gYnJvd3NlcnMsXG5cdFx0XHQvLyBidXQgd2Ugc2hvdWxkIG5vdCwgc2VlICM4MzM1LlxuXHRcdFx0Ly8gQWx3YXlzIHJldHVybiBhbiBlbXB0eSBvYmplY3QuXG5cdFx0XHRpZiAoIGFjY2VwdERhdGEoIG93bmVyICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgaXQgaXMgYSBub2RlIHVubGlrZWx5IHRvIGJlIHN0cmluZ2lmeS1lZCBvciBsb29wZWQgb3ZlclxuXHRcdFx0XHQvLyB1c2UgcGxhaW4gYXNzaWdubWVudFxuXHRcdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHZhbHVlO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBzZWN1cmUgaXQgaW4gYSBub24tZW51bWVyYWJsZSBwcm9wZXJ0eVxuXHRcdFx0XHQvLyBjb25maWd1cmFibGUgbXVzdCBiZSB0cnVlIHRvIGFsbG93IHRoZSBwcm9wZXJ0eSB0byBiZVxuXHRcdFx0XHQvLyBkZWxldGVkIHdoZW4gZGF0YSBpcyByZW1vdmVkXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBvd25lciwgdGhpcy5leHBhbmRvLCB7XG5cdFx0XHRcdFx0XHR2YWx1ZTogdmFsdWUsXG5cdFx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWVcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsdWU7XG5cdH0sXG5cdHNldDogZnVuY3Rpb24oIG93bmVyLCBkYXRhLCB2YWx1ZSApIHtcblx0XHR2YXIgcHJvcCxcblx0XHRcdGNhY2hlID0gdGhpcy5jYWNoZSggb3duZXIgKTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwga2V5LCB2YWx1ZSBdIGFyZ3Ncblx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGNhY2hlWyBqUXVlcnkuY2FtZWxDYXNlKCBkYXRhICkgXSA9IHZhbHVlO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCB7IHByb3BlcnRpZXMgfSBdIGFyZ3Ncblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb3B5IHRoZSBwcm9wZXJ0aWVzIG9uZS1ieS1vbmUgdG8gdGhlIGNhY2hlIG9iamVjdFxuXHRcdFx0Zm9yICggcHJvcCBpbiBkYXRhICkge1xuXHRcdFx0XHRjYWNoZVsgalF1ZXJ5LmNhbWVsQ2FzZSggcHJvcCApIF0gPSBkYXRhWyBwcm9wIF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBjYWNoZTtcblx0fSxcblx0Z2V0OiBmdW5jdGlvbiggb3duZXIsIGtleSApIHtcblx0XHRyZXR1cm4ga2V5ID09PSB1bmRlZmluZWQgP1xuXHRcdFx0dGhpcy5jYWNoZSggb3duZXIgKSA6XG5cblx0XHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1Nylcblx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSAmJiBvd25lclsgdGhpcy5leHBhbmRvIF1bIGpRdWVyeS5jYW1lbENhc2UoIGtleSApIF07XG5cdH0sXG5cdGFjY2VzczogZnVuY3Rpb24oIG93bmVyLCBrZXksIHZhbHVlICkge1xuXG5cdFx0Ly8gSW4gY2FzZXMgd2hlcmUgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBObyBrZXkgd2FzIHNwZWNpZmllZFxuXHRcdC8vICAgMi4gQSBzdHJpbmcga2V5IHdhcyBzcGVjaWZpZWQsIGJ1dCBubyB2YWx1ZSBwcm92aWRlZFxuXHRcdC8vXG5cdFx0Ly8gVGFrZSB0aGUgXCJyZWFkXCIgcGF0aCBhbmQgYWxsb3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lXG5cdFx0Ly8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9iamVjdFxuXHRcdC8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXlcblx0XHQvL1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0KCAoIGtleSAmJiB0eXBlb2Yga2V5ID09PSBcInN0cmluZ1wiICkgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApICkge1xuXG5cdFx0XHRyZXR1cm4gdGhpcy5nZXQoIG93bmVyLCBrZXkgKTtcblx0XHR9XG5cblx0XHQvLyBXaGVuIHRoZSBrZXkgaXMgbm90IGEgc3RyaW5nLCBvciBib3RoIGEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vIGFyZSBzcGVjaWZpZWQsIHNldCBvciBleHRlbmQgKGV4aXN0aW5nIG9iamVjdHMpIHdpdGggZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBBbiBvYmplY3Qgb2YgcHJvcGVydGllc1xuXHRcdC8vICAgMi4gQSBrZXkgYW5kIHZhbHVlXG5cdFx0Ly9cblx0XHR0aGlzLnNldCggb3duZXIsIGtleSwgdmFsdWUgKTtcblxuXHRcdC8vIFNpbmNlIHRoZSBcInNldFwiIHBhdGggY2FuIGhhdmUgdHdvIHBvc3NpYmxlIGVudHJ5IHBvaW50c1xuXHRcdC8vIHJldHVybiB0aGUgZXhwZWN0ZWQgZGF0YSBiYXNlZCBvbiB3aGljaCBwYXRoIHdhcyB0YWtlblsqXVxuXHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiBrZXk7XG5cdH0sXG5cdHJlbW92ZTogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0dmFyIGksXG5cdFx0XHRjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdGlmICggY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIGtleSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgb2Yga2V5c1xuXHRcdFx0aWYgKCBqUXVlcnkuaXNBcnJheSgga2V5ICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYga2V5IGlzIGFuIGFycmF5IG9mIGtleXMuLi5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHNldCBjYW1lbENhc2Uga2V5cywgc28gcmVtb3ZlIHRoYXQuXG5cdFx0XHRcdGtleSA9IGtleS5tYXAoIGpRdWVyeS5jYW1lbENhc2UgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGtleSA9IGpRdWVyeS5jYW1lbENhc2UoIGtleSApO1xuXG5cdFx0XHRcdC8vIElmIGEga2V5IHdpdGggdGhlIHNwYWNlcyBleGlzdHMsIHVzZSBpdC5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCBjcmVhdGUgYW4gYXJyYXkgYnkgbWF0Y2hpbmcgbm9uLXdoaXRlc3BhY2Vcblx0XHRcdFx0a2V5ID0ga2V5IGluIGNhY2hlID9cblx0XHRcdFx0XHRbIGtleSBdIDpcblx0XHRcdFx0XHQoIGtleS5tYXRjaCggcm5vdHdoaXRlICkgfHwgW10gKTtcblx0XHRcdH1cblxuXHRcdFx0aSA9IGtleS5sZW5ndGg7XG5cblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRkZWxldGUgY2FjaGVbIGtleVsgaSBdIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIHRoZSBleHBhbmRvIGlmIHRoZXJlJ3Mgbm8gbW9yZSBkYXRhXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCB8fCBqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKSApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NVxuXHRcdFx0Ly8gV2Via2l0ICYgQmxpbmsgcGVyZm9ybWFuY2Ugc3VmZmVycyB3aGVuIGRlbGV0aW5nIHByb3BlcnRpZXNcblx0XHRcdC8vIGZyb20gRE9NIG5vZGVzLCBzbyBzZXQgdG8gdW5kZWZpbmVkIGluc3RlYWRcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTM3ODYwNyAoYnVnIHJlc3RyaWN0ZWQpXG5cdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZWxldGUgb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblx0aGFzRGF0YTogZnVuY3Rpb24oIG93bmVyICkge1xuXHRcdHZhciBjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0XHRyZXR1cm4gY2FjaGUgIT09IHVuZGVmaW5lZCAmJiAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICk7XG5cdH1cbn07XG52YXIgZGF0YVByaXYgPSBuZXcgRGF0YSgpO1xuXG52YXIgZGF0YVVzZXIgPSBuZXcgRGF0YSgpO1xuXG5cblxuLy9cdEltcGxlbWVudGF0aW9uIFN1bW1hcnlcbi8vXG4vL1x0MS4gRW5mb3JjZSBBUEkgc3VyZmFjZSBhbmQgc2VtYW50aWMgY29tcGF0aWJpbGl0eSB3aXRoIDEuOS54IGJyYW5jaFxuLy9cdDIuIEltcHJvdmUgdGhlIG1vZHVsZSdzIG1haW50YWluYWJpbGl0eSBieSByZWR1Y2luZyB0aGUgc3RvcmFnZVxuLy9cdFx0cGF0aHMgdG8gYSBzaW5nbGUgbWVjaGFuaXNtLlxuLy9cdDMuIFVzZSB0aGUgc2FtZSBzaW5nbGUgbWVjaGFuaXNtIHRvIHN1cHBvcnQgXCJwcml2YXRlXCIgYW5kIFwidXNlclwiIGRhdGEuXG4vL1x0NC4gX05ldmVyXyBleHBvc2UgXCJwcml2YXRlXCIgZGF0YSB0byB1c2VyIGNvZGUgKFRPRE86IERyb3AgX2RhdGEsIF9yZW1vdmVEYXRhKVxuLy9cdDUuIEF2b2lkIGV4cG9zaW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb24gdXNlciBvYmplY3RzIChlZy4gZXhwYW5kbyBwcm9wZXJ0aWVzKVxuLy9cdDYuIFByb3ZpZGUgYSBjbGVhciBwYXRoIGZvciBpbXBsZW1lbnRhdGlvbiB1cGdyYWRlIHRvIFdlYWtNYXAgaW4gMjAxNFxuXG52YXIgcmJyYWNlID0gL14oPzpcXHtbXFx3XFxXXSpcXH18XFxbW1xcd1xcV10qXFxdKSQvLFxuXHRybXVsdGlEYXNoID0gL1tBLVpdL2c7XG5cbmZ1bmN0aW9uIGRhdGFBdHRyKCBlbGVtLCBrZXksIGRhdGEgKSB7XG5cdHZhciBuYW1lO1xuXG5cdC8vIElmIG5vdGhpbmcgd2FzIGZvdW5kIGludGVybmFsbHksIHRyeSB0byBmZXRjaCBhbnlcblx0Ly8gZGF0YSBmcm9tIHRoZSBIVE1MNSBkYXRhLSogYXR0cmlidXRlXG5cdGlmICggZGF0YSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0bmFtZSA9IFwiZGF0YS1cIiArIGtleS5yZXBsYWNlKCBybXVsdGlEYXNoLCBcIi0kJlwiICkudG9Mb3dlckNhc2UoKTtcblx0XHRkYXRhID0gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKTtcblxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRkYXRhID0gZGF0YSA9PT0gXCJ0cnVlXCIgPyB0cnVlIDpcblx0XHRcdFx0XHRkYXRhID09PSBcImZhbHNlXCIgPyBmYWxzZSA6XG5cdFx0XHRcdFx0ZGF0YSA9PT0gXCJudWxsXCIgPyBudWxsIDpcblxuXHRcdFx0XHRcdC8vIE9ubHkgY29udmVydCB0byBhIG51bWJlciBpZiBpdCBkb2Vzbid0IGNoYW5nZSB0aGUgc3RyaW5nXG5cdFx0XHRcdFx0K2RhdGEgKyBcIlwiID09PSBkYXRhID8gK2RhdGEgOlxuXHRcdFx0XHRcdHJicmFjZS50ZXN0KCBkYXRhICkgPyBKU09OLnBhcnNlKCBkYXRhICkgOlxuXHRcdFx0XHRcdGRhdGE7XG5cdFx0XHR9IGNhdGNoICggZSApIHt9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB3ZSBzZXQgdGhlIGRhdGEgc28gaXQgaXNuJ3QgY2hhbmdlZCBsYXRlclxuXHRcdFx0ZGF0YVVzZXIuc2V0KCBlbGVtLCBrZXksIGRhdGEgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGRhdGE7XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0aGFzRGF0YTogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRhdGFVc2VyLmhhc0RhdGEoIGVsZW0gKSB8fCBkYXRhUHJpdi5oYXNEYXRhKCBlbGVtICk7XG5cdH0sXG5cblx0ZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIGRhdGFVc2VyLmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xuXHR9LFxuXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFVc2VyLnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9LFxuXG5cdC8vIFRPRE86IE5vdyB0aGF0IGFsbCBjYWxscyB0byBfZGF0YSBhbmQgX3JlbW92ZURhdGEgaGF2ZSBiZWVuIHJlcGxhY2VkXG5cdC8vIHdpdGggZGlyZWN0IGNhbGxzIHRvIGRhdGFQcml2IG1ldGhvZHMsIHRoZXNlIGNhbiBiZSBkZXByZWNhdGVkLlxuXHRfZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xuXHR9LFxuXG5cdF9yZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGRhdGE6IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkge1xuXHRcdHZhciBpLCBuYW1lLCBkYXRhLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdGF0dHJzID0gZWxlbSAmJiBlbGVtLmF0dHJpYnV0ZXM7XG5cblx0XHQvLyBHZXRzIGFsbCB2YWx1ZXNcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB0aGlzLmxlbmd0aCApIHtcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSApO1xuXG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAhZGF0YVByaXYuZ2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiICkgKSB7XG5cdFx0XHRcdFx0aSA9IGF0dHJzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTEgb25seVxuXHRcdFx0XHRcdFx0Ly8gVGhlIGF0dHJzIGVsZW1lbnRzIGNhbiBiZSBudWxsICgjMTQ4OTQpXG5cdFx0XHRcdFx0XHRpZiAoIGF0dHJzWyBpIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG5hbWUgPSBhdHRyc1sgaSBdLm5hbWU7XG5cdFx0XHRcdFx0XHRcdGlmICggbmFtZS5pbmRleE9mKCBcImRhdGEtXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0XHRcdFx0XHRuYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZS5zbGljZSggNSApICk7XG5cdFx0XHRcdFx0XHRcdFx0ZGF0YUF0dHIoIGVsZW0sIG5hbWUsIGRhdGFbIG5hbWUgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBkYXRhO1xuXHRcdH1cblxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5ICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGRhdGE7XG5cblx0XHRcdC8vIFRoZSBjYWxsaW5nIGpRdWVyeSBvYmplY3QgKGVsZW1lbnQgbWF0Y2hlcykgaXMgbm90IGVtcHR5XG5cdFx0XHQvLyAoYW5kIHRoZXJlZm9yZSBoYXMgYW4gZWxlbWVudCBhcHBlYXJzIGF0IHRoaXNbIDAgXSkgYW5kIHRoZVxuXHRcdFx0Ly8gYHZhbHVlYCBwYXJhbWV0ZXIgd2FzIG5vdCB1bmRlZmluZWQuIEFuIGVtcHR5IGpRdWVyeSBvYmplY3Rcblx0XHRcdC8vIHdpbGwgcmVzdWx0IGluIGB1bmRlZmluZWRgIGZvciBlbGVtID0gdGhpc1sgMCBdIHdoaWNoIHdpbGxcblx0XHRcdC8vIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhbiBhdHRlbXB0IHRvIHJlYWQgYSBkYXRhIGNhY2hlIGlzIG1hZGUuXG5cdFx0XHRpZiAoIGVsZW0gJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIGdldCBkYXRhIGZyb20gdGhlIGNhY2hlXG5cdFx0XHRcdC8vIFRoZSBrZXkgd2lsbCBhbHdheXMgYmUgY2FtZWxDYXNlZCBpbiBEYXRhXG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gXCJkaXNjb3ZlclwiIHRoZSBkYXRhIGluXG5cdFx0XHRcdC8vIEhUTUw1IGN1c3RvbSBkYXRhLSogYXR0cnNcblx0XHRcdFx0ZGF0YSA9IGRhdGFBdHRyKCBlbGVtLCBrZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBXZSB0cmllZCByZWFsbHkgaGFyZCwgYnV0IHRoZSBkYXRhIGRvZXNuJ3QgZXhpc3QuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IHRoZSBkYXRhLi4uXG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzdG9yZSB0aGUgY2FtZWxDYXNlZCBrZXlcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXksIHZhbHVlICk7XG5cdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxLCBudWxsLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRhdGFVc2VyLnJlbW92ZSggdGhpcywga2V5ICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHF1ZXVlO1xuXG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcblx0XHRcdHF1ZXVlID0gZGF0YVByaXYuZ2V0KCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdC8vIFNwZWVkIHVwIGRlcXVldWUgYnkgZ2V0dGluZyBvdXQgcXVpY2tseSBpZiB0aGlzIGlzIGp1c3QgYSBsb29rdXBcblx0XHRcdGlmICggZGF0YSApIHtcblx0XHRcdFx0aWYgKCAhcXVldWUgfHwgalF1ZXJ5LmlzQXJyYXkoIGRhdGEgKSApIHtcblx0XHRcdFx0XHRxdWV1ZSA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VBcnJheSggZGF0YSApICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cXVldWUucHVzaCggZGF0YSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcXVldWUgfHwgW107XG5cdFx0fVxuXHR9LFxuXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLFxuXHRcdFx0c3RhcnRMZW5ndGggPSBxdWV1ZS5sZW5ndGgsXG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCksXG5cdFx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgdHlwZSApLFxuXHRcdFx0bmV4dCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggZWxlbSwgdHlwZSApO1xuXHRcdFx0fTtcblxuXHRcdC8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWxcblx0XHRpZiAoIGZuID09PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdHN0YXJ0TGVuZ3RoLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblxuXHRcdFx0Ly8gQWRkIGEgcHJvZ3Jlc3Mgc2VudGluZWwgdG8gcHJldmVudCB0aGUgZnggcXVldWUgZnJvbSBiZWluZ1xuXHRcdFx0Ly8gYXV0b21hdGljYWxseSBkZXF1ZXVlZFxuXHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgKSB7XG5cdFx0XHRcdHF1ZXVlLnVuc2hpZnQoIFwiaW5wcm9ncmVzc1wiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENsZWFyIHVwIHRoZSBsYXN0IHF1ZXVlIHN0b3AgZnVuY3Rpb25cblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0Zm4uY2FsbCggZWxlbSwgbmV4dCwgaG9va3MgKTtcblx0XHR9XG5cblx0XHRpZiAoICFzdGFydExlbmd0aCAmJiBob29rcyApIHtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcblx0XHR9XG5cdH0sXG5cblx0Ly8gTm90IHB1YmxpYyAtIGdlbmVyYXRlIGEgcXVldWVIb29rcyBvYmplY3QsIG9yIHJldHVybiB0aGUgY3VycmVudCBvbmVcblx0X3F1ZXVlSG9va3M6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHZhciBrZXkgPSB0eXBlICsgXCJxdWV1ZUhvb2tzXCI7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmdldCggZWxlbSwga2V5ICkgfHwgZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBrZXksIHtcblx0XHRcdGVtcHR5OiBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKS5hZGQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFsgdHlwZSArIFwicXVldWVcIiwga2V5IF0gKTtcblx0XHRcdH0gKVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgc2V0dGVyID0gMjtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRkYXRhID0gdHlwZTtcblx0XHRcdHR5cGUgPSBcImZ4XCI7XG5cdFx0XHRzZXR0ZXItLTtcblx0XHR9XG5cblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggPCBzZXR0ZXIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnF1ZXVlKCB0aGlzWyAwIF0sIHR5cGUgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGF0YSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMgOlxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBkYXRhICk7XG5cblx0XHRcdFx0Ly8gRW5zdXJlIGEgaG9va3MgZm9yIHRoaXMgcXVldWVcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgJiYgcXVldWVbIDAgXSAhPT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHR9LFxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0fSApO1xuXHR9LFxuXHRjbGVhclF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XG5cdH0sXG5cblx0Ly8gR2V0IGEgcHJvbWlzZSByZXNvbHZlZCB3aGVuIHF1ZXVlcyBvZiBhIGNlcnRhaW4gdHlwZVxuXHQvLyBhcmUgZW1wdGllZCAoZnggaXMgdGhlIHR5cGUgYnkgZGVmYXVsdClcblx0cHJvbWlzZTogZnVuY3Rpb24oIHR5cGUsIG9iaiApIHtcblx0XHR2YXIgdG1wLFxuXHRcdFx0Y291bnQgPSAxLFxuXHRcdFx0ZGVmZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGVsZW1lbnRzID0gdGhpcyxcblx0XHRcdGkgPSB0aGlzLmxlbmd0aCxcblx0XHRcdHJlc29sdmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhKCAtLWNvdW50ICkgKSB7XG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZVdpdGgoIGVsZW1lbnRzLCBbIGVsZW1lbnRzIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRvYmogPSB0eXBlO1xuXHRcdFx0dHlwZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR0bXAgPSBkYXRhUHJpdi5nZXQoIGVsZW1lbnRzWyBpIF0sIHR5cGUgKyBcInF1ZXVlSG9va3NcIiApO1xuXHRcdFx0aWYgKCB0bXAgJiYgdG1wLmVtcHR5ICkge1xuXHRcdFx0XHRjb3VudCsrO1xuXHRcdFx0XHR0bXAuZW1wdHkuYWRkKCByZXNvbHZlICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJlc29sdmUoKTtcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZSggb2JqICk7XG5cdH1cbn0gKTtcbnZhciBwbnVtID0gKCAvWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLyApLnNvdXJjZTtcblxudmFyIHJjc3NOdW0gPSBuZXcgUmVnRXhwKCBcIl4oPzooWystXSk9fCkoXCIgKyBwbnVtICsgXCIpKFthLXolXSopJFwiLCBcImlcIiApO1xuXG5cbnZhciBjc3NFeHBhbmQgPSBbIFwiVG9wXCIsIFwiUmlnaHRcIiwgXCJCb3R0b21cIiwgXCJMZWZ0XCIgXTtcblxudmFyIGlzSGlkZGVuV2l0aGluVHJlZSA9IGZ1bmN0aW9uKCBlbGVtLCBlbCApIHtcblxuXHRcdC8vIGlzSGlkZGVuV2l0aGluVHJlZSBtaWdodCBiZSBjYWxsZWQgZnJvbSBqUXVlcnkjZmlsdGVyIGZ1bmN0aW9uO1xuXHRcdC8vIGluIHRoYXQgY2FzZSwgZWxlbWVudCB3aWxsIGJlIHNlY29uZCBhcmd1bWVudFxuXHRcdGVsZW0gPSBlbCB8fCBlbGVtO1xuXG5cdFx0Ly8gSW5saW5lIHN0eWxlIHRydW1wcyBhbGxcblx0XHRyZXR1cm4gZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIiB8fFxuXHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmXG5cblx0XHRcdC8vIE90aGVyd2lzZSwgY2hlY2sgY29tcHV0ZWQgc3R5bGVcblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MyAtIDQ1XG5cdFx0XHQvLyBEaXNjb25uZWN0ZWQgZWxlbWVudHMgY2FuIGhhdmUgY29tcHV0ZWQgZGlzcGxheTogbm9uZSwgc28gZmlyc3QgY29uZmlybSB0aGF0IGVsZW0gaXNcblx0XHRcdC8vIGluIHRoZSBkb2N1bWVudC5cblx0XHRcdGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICkgJiZcblxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSA9PT0gXCJub25lXCI7XG5cdH07XG5cbnZhciBzd2FwID0gZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGNhbGxiYWNrLCBhcmdzICkge1xuXHR2YXIgcmV0LCBuYW1lLFxuXHRcdG9sZCA9IHt9O1xuXG5cdC8vIFJlbWVtYmVyIHRoZSBvbGQgdmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0b2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdO1xuXHR9XG5cblx0cmV0ID0gY2FsbGJhY2suYXBwbHkoIGVsZW0sIGFyZ3MgfHwgW10gKTtcblxuXHQvLyBSZXZlcnQgdGhlIG9sZCB2YWx1ZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9sZFsgbmFtZSBdO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn07XG5cblxuXG5cbmZ1bmN0aW9uIGFkanVzdENTUyggZWxlbSwgcHJvcCwgdmFsdWVQYXJ0cywgdHdlZW4gKSB7XG5cdHZhciBhZGp1c3RlZCxcblx0XHRzY2FsZSA9IDEsXG5cdFx0bWF4SXRlcmF0aW9ucyA9IDIwLFxuXHRcdGN1cnJlbnRWYWx1ZSA9IHR3ZWVuID9cblx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gdHdlZW4uY3VyKCk7XG5cdFx0XHR9IDpcblx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgcHJvcCwgXCJcIiApO1xuXHRcdFx0fSxcblx0XHRpbml0aWFsID0gY3VycmVudFZhbHVlKCksXG5cdFx0dW5pdCA9IHZhbHVlUGFydHMgJiYgdmFsdWVQYXJ0c1sgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApLFxuXG5cdFx0Ly8gU3RhcnRpbmcgdmFsdWUgY29tcHV0YXRpb24gaXMgcmVxdWlyZWQgZm9yIHBvdGVudGlhbCB1bml0IG1pc21hdGNoZXNcblx0XHRpbml0aWFsSW5Vbml0ID0gKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gfHwgdW5pdCAhPT0gXCJweFwiICYmICtpbml0aWFsICkgJiZcblx0XHRcdHJjc3NOdW0uZXhlYyggalF1ZXJ5LmNzcyggZWxlbSwgcHJvcCApICk7XG5cblx0aWYgKCBpbml0aWFsSW5Vbml0ICYmIGluaXRpYWxJblVuaXRbIDMgXSAhPT0gdW5pdCApIHtcblxuXHRcdC8vIFRydXN0IHVuaXRzIHJlcG9ydGVkIGJ5IGpRdWVyeS5jc3Ncblx0XHR1bml0ID0gdW5pdCB8fCBpbml0aWFsSW5Vbml0WyAzIF07XG5cblx0XHQvLyBNYWtlIHN1cmUgd2UgdXBkYXRlIHRoZSB0d2VlbiBwcm9wZXJ0aWVzIGxhdGVyIG9uXG5cdFx0dmFsdWVQYXJ0cyA9IHZhbHVlUGFydHMgfHwgW107XG5cblx0XHQvLyBJdGVyYXRpdmVseSBhcHByb3hpbWF0ZSBmcm9tIGEgbm9uemVybyBzdGFydGluZyBwb2ludFxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbCB8fCAxO1xuXG5cdFx0ZG8ge1xuXG5cdFx0XHQvLyBJZiBwcmV2aW91cyBpdGVyYXRpb24gemVyb2VkIG91dCwgZG91YmxlIHVudGlsIHdlIGdldCAqc29tZXRoaW5nKi5cblx0XHRcdC8vIFVzZSBzdHJpbmcgZm9yIGRvdWJsaW5nIHNvIHdlIGRvbid0IGFjY2lkZW50YWxseSBzZWUgc2NhbGUgYXMgdW5jaGFuZ2VkIGJlbG93XG5cdFx0XHRzY2FsZSA9IHNjYWxlIHx8IFwiLjVcIjtcblxuXHRcdFx0Ly8gQWRqdXN0IGFuZCBhcHBseVxuXHRcdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgLyBzY2FsZTtcblx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblxuXHRcdC8vIFVwZGF0ZSBzY2FsZSwgdG9sZXJhdGluZyB6ZXJvIG9yIE5hTiBmcm9tIHR3ZWVuLmN1cigpXG5cdFx0Ly8gQnJlYWsgdGhlIGxvb3AgaWYgc2NhbGUgaXMgdW5jaGFuZ2VkIG9yIHBlcmZlY3QsIG9yIGlmIHdlJ3ZlIGp1c3QgaGFkIGVub3VnaC5cblx0XHR9IHdoaWxlIChcblx0XHRcdHNjYWxlICE9PSAoIHNjYWxlID0gY3VycmVudFZhbHVlKCkgLyBpbml0aWFsICkgJiYgc2NhbGUgIT09IDEgJiYgLS1tYXhJdGVyYXRpb25zXG5cdFx0KTtcblx0fVxuXG5cdGlmICggdmFsdWVQYXJ0cyApIHtcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWxJblVuaXQgfHwgK2luaXRpYWwgfHwgMDtcblxuXHRcdC8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZFxuXHRcdGFkanVzdGVkID0gdmFsdWVQYXJ0c1sgMSBdID9cblx0XHRcdGluaXRpYWxJblVuaXQgKyAoIHZhbHVlUGFydHNbIDEgXSArIDEgKSAqIHZhbHVlUGFydHNbIDIgXSA6XG5cdFx0XHQrdmFsdWVQYXJ0c1sgMiBdO1xuXHRcdGlmICggdHdlZW4gKSB7XG5cdFx0XHR0d2Vlbi51bml0ID0gdW5pdDtcblx0XHRcdHR3ZWVuLnN0YXJ0ID0gaW5pdGlhbEluVW5pdDtcblx0XHRcdHR3ZWVuLmVuZCA9IGFkanVzdGVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gYWRqdXN0ZWQ7XG59XG5cblxudmFyIGRlZmF1bHREaXNwbGF5TWFwID0ge307XG5cbmZ1bmN0aW9uIGdldERlZmF1bHREaXNwbGF5KCBlbGVtICkge1xuXHR2YXIgdGVtcCxcblx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQsXG5cdFx0bm9kZU5hbWUgPSBlbGVtLm5vZGVOYW1lLFxuXHRcdGRpc3BsYXkgPSBkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXTtcblxuXHRpZiAoIGRpc3BsYXkgKSB7XG5cdFx0cmV0dXJuIGRpc3BsYXk7XG5cdH1cblxuXHR0ZW1wID0gZG9jLmJvZHkuYXBwZW5kQ2hpbGQoIGRvYy5jcmVhdGVFbGVtZW50KCBub2RlTmFtZSApICksXG5cdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCB0ZW1wLCBcImRpc3BsYXlcIiApO1xuXG5cdHRlbXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggdGVtcCApO1xuXG5cdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0ZGlzcGxheSA9IFwiYmxvY2tcIjtcblx0fVxuXHRkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXSA9IGRpc3BsYXk7XG5cblx0cmV0dXJuIGRpc3BsYXk7XG59XG5cbmZ1bmN0aW9uIHNob3dIaWRlKCBlbGVtZW50cywgc2hvdyApIHtcblx0dmFyIGRpc3BsYXksIGVsZW0sXG5cdFx0dmFsdWVzID0gW10sXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aDtcblxuXHQvLyBEZXRlcm1pbmUgbmV3IGRpc3BsYXkgdmFsdWUgZm9yIGVsZW1lbnRzIHRoYXQgbmVlZCB0byBjaGFuZ2Vcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRlbGVtID0gZWxlbWVudHNbIGluZGV4IF07XG5cdFx0aWYgKCAhZWxlbS5zdHlsZSApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7XG5cdFx0aWYgKCBzaG93ICkge1xuXG5cdFx0XHQvLyBTaW5jZSB3ZSBmb3JjZSB2aXNpYmlsaXR5IHVwb24gY2FzY2FkZS1oaWRkZW4gZWxlbWVudHMsIGFuIGltbWVkaWF0ZSAoYW5kIHNsb3cpXG5cdFx0XHQvLyBjaGVjayBpcyByZXF1aXJlZCBpbiB0aGlzIGZpcnN0IGxvb3AgdW5sZXNzIHdlIGhhdmUgYSBub25lbXB0eSBkaXNwbGF5IHZhbHVlIChlaXRoZXJcblx0XHRcdC8vIGlubGluZSBvciBhYm91dC10by1iZS1yZXN0b3JlZClcblx0XHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKSB8fCBudWxsO1xuXHRcdFx0XHRpZiAoICF2YWx1ZXNbIGluZGV4IF0gKSB7XG5cdFx0XHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICkgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGdldERlZmF1bHREaXNwbGF5KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICggZGlzcGxheSAhPT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IFwibm9uZVwiO1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHdoYXQgd2UncmUgb3ZlcndyaXRpbmdcblx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImRpc3BsYXlcIiwgZGlzcGxheSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFNldCB0aGUgZGlzcGxheSBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcCB0byBhdm9pZCBjb25zdGFudCByZWZsb3dcblx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRpZiAoIHZhbHVlc1sgaW5kZXggXSAhPSBudWxsICkge1xuXHRcdFx0ZWxlbWVudHNbIGluZGV4IF0uc3R5bGUuZGlzcGxheSA9IHZhbHVlc1sgaW5kZXggXTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudHM7XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2hvdzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzLCB0cnVlICk7XG5cdH0sXG5cdGhpZGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcyApO1xuXHR9LFxuXHR0b2dnbGU6IGZ1bmN0aW9uKCBzdGF0ZSApIHtcblx0XHRpZiAoIHR5cGVvZiBzdGF0ZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBpc0hpZGRlbldpdGhpblRyZWUoIHRoaXMgKSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuc2hvdygpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xudmFyIHJjaGVja2FibGVUeXBlID0gKCAvXig/OmNoZWNrYm94fHJhZGlvKSQvaSApO1xuXG52YXIgcnRhZ05hbWUgPSAoIC88KFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKykvaSApO1xuXG52YXIgcnNjcmlwdFR5cGUgPSAoIC9eJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2kgKTtcblxuXG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXG52YXIgd3JhcE1hcCA9IHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRvcHRpb246IFsgMSwgXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsIFwiPC9zZWxlY3Q+XCIgXSxcblxuXHQvLyBYSFRNTCBwYXJzZXJzIGRvIG5vdCBtYWdpY2FsbHkgaW5zZXJ0IGVsZW1lbnRzIGluIHRoZVxuXHQvLyBzYW1lIHdheSB0aGF0IHRhZyBzb3VwIHBhcnNlcnMgZG8uIFNvIHdlIGNhbm5vdCBzaG9ydGVuXG5cdC8vIHRoaXMgYnkgb21pdHRpbmcgPHRib2R5PiBvciBvdGhlciByZXF1aXJlZCBlbGVtZW50cy5cblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxuXHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcblxuXHRfZGVmYXVsdDogWyAwLCBcIlwiLCBcIlwiIF1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG53cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb247XG5cbndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7XG53cmFwTWFwLnRoID0gd3JhcE1hcC50ZDtcblxuXG5mdW5jdGlvbiBnZXRBbGwoIGNvbnRleHQsIHRhZyApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFVzZSB0eXBlb2YgdG8gYXZvaWQgemVyby1hcmd1bWVudCBtZXRob2QgaW52b2NhdGlvbiBvbiBob3N0IG9iamVjdHMgKCMxNTE1MSlcblx0dmFyIHJldCA9IHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiID9cblx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApIDpcblx0XHRcdHR5cGVvZiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgP1xuXHRcdFx0XHRjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyB8fCBcIipcIiApIDpcblx0XHRcdFtdO1xuXG5cdHJldHVybiB0YWcgPT09IHVuZGVmaW5lZCB8fCB0YWcgJiYgalF1ZXJ5Lm5vZGVOYW1lKCBjb250ZXh0LCB0YWcgKSA/XG5cdFx0alF1ZXJ5Lm1lcmdlKCBbIGNvbnRleHQgXSwgcmV0ICkgOlxuXHRcdHJldDtcbn1cblxuXG4vLyBNYXJrIHNjcmlwdHMgYXMgaGF2aW5nIGFscmVhZHkgYmVlbiBldmFsdWF0ZWRcbmZ1bmN0aW9uIHNldEdsb2JhbEV2YWwoIGVsZW1zLCByZWZFbGVtZW50cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGRhdGFQcml2LnNldChcblx0XHRcdGVsZW1zWyBpIF0sXG5cdFx0XHRcImdsb2JhbEV2YWxcIixcblx0XHRcdCFyZWZFbGVtZW50cyB8fCBkYXRhUHJpdi5nZXQoIHJlZkVsZW1lbnRzWyBpIF0sIFwiZ2xvYmFsRXZhbFwiIClcblx0XHQpO1xuXHR9XG59XG5cblxudmFyIHJodG1sID0gLzx8JiM/XFx3KzsvO1xuXG5mdW5jdGlvbiBidWlsZEZyYWdtZW50KCBlbGVtcywgY29udGV4dCwgc2NyaXB0cywgc2VsZWN0aW9uLCBpZ25vcmVkICkge1xuXHR2YXIgZWxlbSwgdG1wLCB0YWcsIHdyYXAsIGNvbnRhaW5zLCBqLFxuXHRcdGZyYWdtZW50ID0gY29udGV4dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG5cdFx0bm9kZXMgPSBbXSxcblx0XHRpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRlbGVtID0gZWxlbXNbIGkgXTtcblxuXHRcdGlmICggZWxlbSB8fCBlbGVtID09PSAwICkge1xuXG5cdFx0XHQvLyBBZGQgbm9kZXMgZGlyZWN0bHlcblx0XHRcdGlmICggalF1ZXJ5LnR5cGUoIGVsZW0gKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCBlbGVtLm5vZGVUeXBlID8gWyBlbGVtIF0gOiBlbGVtICk7XG5cblx0XHRcdC8vIENvbnZlcnQgbm9uLWh0bWwgaW50byBhIHRleHQgbm9kZVxuXHRcdFx0fSBlbHNlIGlmICggIXJodG1sLnRlc3QoIGVsZW0gKSApIHtcblx0XHRcdFx0bm9kZXMucHVzaCggY29udGV4dC5jcmVhdGVUZXh0Tm9kZSggZWxlbSApICk7XG5cblx0XHRcdC8vIENvbnZlcnQgaHRtbCBpbnRvIERPTSBub2Rlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dG1wID0gdG1wIHx8IGZyYWdtZW50LmFwcGVuZENoaWxkKCBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xuXG5cdFx0XHRcdC8vIERlc2VyaWFsaXplIGEgc3RhbmRhcmQgcmVwcmVzZW50YXRpb25cblx0XHRcdFx0dGFnID0gKCBydGFnTmFtZS5leGVjKCBlbGVtICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRcdHdyYXAgPSB3cmFwTWFwWyB0YWcgXSB8fCB3cmFwTWFwLl9kZWZhdWx0O1xuXHRcdFx0XHR0bXAuaW5uZXJIVE1MID0gd3JhcFsgMSBdICsgalF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIGVsZW0gKSArIHdyYXBbIDIgXTtcblxuXHRcdFx0XHQvLyBEZXNjZW5kIHRocm91Z2ggd3JhcHBlcnMgdG8gdGhlIHJpZ2h0IGNvbnRlbnRcblx0XHRcdFx0aiA9IHdyYXBbIDAgXTtcblx0XHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdFx0dG1wID0gdG1wLmxhc3RDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIHRtcC5jaGlsZE5vZGVzICk7XG5cblx0XHRcdFx0Ly8gUmVtZW1iZXIgdGhlIHRvcC1sZXZlbCBjb250YWluZXJcblx0XHRcdFx0dG1wID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdFx0XHQvLyBFbnN1cmUgdGhlIGNyZWF0ZWQgbm9kZXMgYXJlIG9ycGhhbmVkICgjMTIzOTIpXG5cdFx0XHRcdHRtcC50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmVtb3ZlIHdyYXBwZXIgZnJvbSBmcmFnbWVudFxuXHRmcmFnbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG5cblx0aSA9IDA7XG5cdHdoaWxlICggKCBlbGVtID0gbm9kZXNbIGkrKyBdICkgKSB7XG5cblx0XHQvLyBTa2lwIGVsZW1lbnRzIGFscmVhZHkgaW4gdGhlIGNvbnRleHQgY29sbGVjdGlvbiAodHJhYy00MDg3KVxuXHRcdGlmICggc2VsZWN0aW9uICYmIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBzZWxlY3Rpb24gKSA+IC0xICkge1xuXHRcdFx0aWYgKCBpZ25vcmVkICkge1xuXHRcdFx0XHRpZ25vcmVkLnB1c2goIGVsZW0gKTtcblx0XHRcdH1cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGNvbnRhaW5zID0galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblxuXHRcdC8vIEFwcGVuZCB0byBmcmFnbWVudFxuXHRcdHRtcCA9IGdldEFsbCggZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGVsZW0gKSwgXCJzY3JpcHRcIiApO1xuXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxuXHRcdGlmICggY29udGFpbnMgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCB0bXAgKTtcblx0XHR9XG5cblx0XHQvLyBDYXB0dXJlIGV4ZWN1dGFibGVzXG5cdFx0aWYgKCBzY3JpcHRzICkge1xuXHRcdFx0aiA9IDA7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRtcFsgaisrIF0gKSApIHtcblx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBlbGVtLnR5cGUgfHwgXCJcIiApICkge1xuXHRcdFx0XHRcdHNjcmlwdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGZyYWdtZW50O1xufVxuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcblx0XHRkaXYgPSBmcmFnbWVudC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICksXG5cdFx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5XG5cdC8vIENoZWNrIHN0YXRlIGxvc3QgaWYgdGhlIG5hbWUgaXMgc2V0ICgjMTEyMTcpXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcblx0Ly8gYG5hbWVgIGFuZCBgdHlwZWAgbXVzdCB1c2UgLnNldEF0dHJpYnV0ZSBmb3IgV1dBICgjMTQ5MDEpXG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwicmFkaW9cIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwiY2hlY2tlZFwiLCBcImNoZWNrZWRcIiApO1xuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcInRcIiApO1xuXG5cdGRpdi5hcHBlbmRDaGlsZCggaW5wdXQgKTtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4xIG9ubHlcblx0Ly8gT2xkZXIgV2ViS2l0IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3JyZWN0bHkgaW4gZnJhZ21lbnRzXG5cdHN1cHBvcnQuY2hlY2tDbG9uZSA9IGRpdi5jbG9uZU5vZGUoIHRydWUgKS5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuY2hlY2tlZDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gTWFrZSBzdXJlIHRleHRhcmVhIChhbmQgY2hlY2tib3gpIGRlZmF1bHRWYWx1ZSBpcyBwcm9wZXJseSBjbG9uZWRcblx0ZGl2LmlubmVySFRNTCA9IFwiPHRleHRhcmVhPng8L3RleHRhcmVhPlwiO1xuXHRzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkID0gISFkaXYuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZTtcbn0gKSgpO1xudmFyIGRvY3VtZW50RWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblxuXG5cbnZhclxuXHRya2V5RXZlbnQgPSAvXmtleS8sXG5cdHJtb3VzZUV2ZW50ID0gL14oPzptb3VzZXxwb2ludGVyfGNvbnRleHRtZW51fGRyYWd8ZHJvcCl8Y2xpY2svLFxuXHRydHlwZW5hbWVzcGFjZSA9IC9eKFteLl0qKSg/OlxcLiguKyl8KS87XG5cbmZ1bmN0aW9uIHJldHVyblRydWUoKSB7XG5cdHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiByZXR1cm5GYWxzZSgpIHtcblx0cmV0dXJuIGZhbHNlO1xufVxuXG4vLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuLy8gU2VlICMxMzM5MyBmb3IgbW9yZSBpbmZvXG5mdW5jdGlvbiBzYWZlQWN0aXZlRWxlbWVudCgpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcblx0fSBjYXRjaCAoIGVyciApIHsgfVxufVxuXG5mdW5jdGlvbiBvbiggZWxlbSwgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgb25lICkge1xuXHR2YXIgb3JpZ0ZuLCB0eXBlO1xuXG5cdC8vIFR5cGVzIGNhbiBiZSBhIG1hcCBvZiB0eXBlcy9oYW5kbGVyc1xuXHRpZiAoIHR5cGVvZiB0eXBlcyA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vICggdHlwZXMtT2JqZWN0LCBzZWxlY3RvciwgZGF0YSApXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMtT2JqZWN0LCBkYXRhIClcblx0XHRcdGRhdGEgPSBkYXRhIHx8IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGZvciAoIHR5cGUgaW4gdHlwZXMgKSB7XG5cdFx0XHRvbiggZWxlbSwgdHlwZSwgc2VsZWN0b3IsIGRhdGEsIHR5cGVzWyB0eXBlIF0sIG9uZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gZWxlbTtcblx0fVxuXG5cdGlmICggZGF0YSA9PSBudWxsICYmIGZuID09IG51bGwgKSB7XG5cblx0XHQvLyAoIHR5cGVzLCBmbiApXG5cdFx0Zm4gPSBzZWxlY3Rvcjtcblx0XHRkYXRhID0gc2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdH0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7XG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMsIHNlbGVjdG9yLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vICggdHlwZXMsIGRhdGEsIGZuIClcblx0XHRcdGZuID0gZGF0YTtcblx0XHRcdGRhdGEgPSBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXHRpZiAoIGZuID09PSBmYWxzZSApIHtcblx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHR9IGVsc2UgaWYgKCAhZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIG9uZSA9PT0gMSApIHtcblx0XHRvcmlnRm4gPSBmbjtcblx0XHRmbiA9IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0Ly8gQ2FuIHVzZSBhbiBlbXB0eSBzZXQsIHNpbmNlIGV2ZW50IGNvbnRhaW5zIHRoZSBpbmZvXG5cdFx0XHRqUXVlcnkoKS5vZmYoIGV2ZW50ICk7XG5cdFx0XHRyZXR1cm4gb3JpZ0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9O1xuXG5cdFx0Ly8gVXNlIHNhbWUgZ3VpZCBzbyBjYWxsZXIgY2FuIHJlbW92ZSB1c2luZyBvcmlnRm5cblx0XHRmbi5ndWlkID0gb3JpZ0ZuLmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVyeS5ndWlkKysgKTtcblx0fVxuXHRyZXR1cm4gZWxlbS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCB0eXBlcywgZm4sIGRhdGEsIHNlbGVjdG9yICk7XG5cdH0gKTtcbn1cblxuLypcbiAqIEhlbHBlciBmdW5jdGlvbnMgZm9yIG1hbmFnaW5nIGV2ZW50cyAtLSBub3QgcGFydCBvZiB0aGUgcHVibGljIGludGVyZmFjZS5cbiAqIFByb3BzIHRvIERlYW4gRWR3YXJkcycgYWRkRXZlbnQgbGlicmFyeSBmb3IgbWFueSBvZiB0aGUgaWRlYXMuXG4gKi9cbmpRdWVyeS5ldmVudCA9IHtcblxuXHRnbG9iYWw6IHt9LFxuXG5cdGFkZDogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBkYXRhLCBzZWxlY3RvciApIHtcblxuXHRcdHZhciBoYW5kbGVPYmpJbiwgZXZlbnRIYW5kbGUsIHRtcCxcblx0XHRcdGV2ZW50cywgdCwgaGFuZGxlT2JqLFxuXHRcdFx0c3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLFxuXHRcdFx0ZWxlbURhdGEgPSBkYXRhUHJpdi5nZXQoIGVsZW0gKTtcblxuXHRcdC8vIERvbid0IGF0dGFjaCBldmVudHMgdG8gbm9EYXRhIG9yIHRleHQvY29tbWVudCBub2RlcyAoYnV0IGFsbG93IHBsYWluIG9iamVjdHMpXG5cdFx0aWYgKCAhZWxlbURhdGEgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGFuIG9iamVjdCBvZiBjdXN0b20gZGF0YSBpbiBsaWV1IG9mIHRoZSBoYW5kbGVyXG5cdFx0aWYgKCBoYW5kbGVyLmhhbmRsZXIgKSB7XG5cdFx0XHRoYW5kbGVPYmpJbiA9IGhhbmRsZXI7XG5cdFx0XHRoYW5kbGVyID0gaGFuZGxlT2JqSW4uaGFuZGxlcjtcblx0XHRcdHNlbGVjdG9yID0gaGFuZGxlT2JqSW4uc2VsZWN0b3I7XG5cdFx0fVxuXG5cdFx0Ly8gRW5zdXJlIHRoYXQgaW52YWxpZCBzZWxlY3RvcnMgdGhyb3cgZXhjZXB0aW9ucyBhdCBhdHRhY2ggdGltZVxuXHRcdC8vIEV2YWx1YXRlIGFnYWluc3QgZG9jdW1lbnRFbGVtZW50IGluIGNhc2UgZWxlbSBpcyBhIG5vbi1lbGVtZW50IG5vZGUgKGUuZy4sIGRvY3VtZW50KVxuXHRcdGlmICggc2VsZWN0b3IgKSB7XG5cdFx0XHRqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGRvY3VtZW50RWxlbWVudCwgc2VsZWN0b3IgKTtcblx0XHR9XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB0aGUgaGFuZGxlciBoYXMgYSB1bmlxdWUgSUQsIHVzZWQgdG8gZmluZC9yZW1vdmUgaXQgbGF0ZXJcblx0XHRpZiAoICFoYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRoYW5kbGVyLmd1aWQgPSBqUXVlcnkuZ3VpZCsrO1xuXHRcdH1cblxuXHRcdC8vIEluaXQgdGhlIGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYgdGhpcyBpcyB0aGUgZmlyc3Rcblx0XHRpZiAoICEoIGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkge1xuXHRcdFx0ZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzID0ge307XG5cdFx0fVxuXHRcdGlmICggISggZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgKSApIHtcblx0XHRcdGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlID0gZnVuY3Rpb24oIGUgKSB7XG5cblx0XHRcdFx0Ly8gRGlzY2FyZCB0aGUgc2Vjb25kIGV2ZW50IG9mIGEgalF1ZXJ5LmV2ZW50LnRyaWdnZXIoKSBhbmRcblx0XHRcdFx0Ly8gd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgYSBwYWdlIGhhcyB1bmxvYWRlZFxuXHRcdFx0XHRyZXR1cm4gdHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUgP1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5kaXNwYXRjaC5hcHBseSggZWxlbSwgYXJndW1lbnRzICkgOiB1bmRlZmluZWQ7XG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdC8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJhdGVkIGJ5IGEgc3BhY2Vcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcblx0XHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdFx0aGFuZGxlcjogaGFuZGxlcixcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXG5cdFx0XHRcdG5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XG5cdFx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTtcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XG5cblx0XHRcdFx0Ly8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lciBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggc3BlY2lhbC5hZGQgKSB7XG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXG5cdFx0XHRcdGlmICggIWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgdG8gdGhlIGVsZW1lbnQncyBoYW5kbGVyIGxpc3QsIGRlbGVnYXRlcyBpbiBmcm9udFxuXHRcdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEtlZXAgdHJhY2sgb2Ygd2hpY2ggZXZlbnRzIGhhdmUgZXZlciBiZWVuIHVzZWQsIGZvciBldmVudCBvcHRpbWl6YXRpb25cblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XG5cdFx0fVxuXG5cdH0sXG5cblx0Ly8gRGV0YWNoIGFuIGV2ZW50IG9yIHNldCBvZiBldmVudHMgZnJvbSBhbiBlbGVtZW50XG5cdHJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7XG5cblx0XHR2YXIgaiwgb3JpZ0NvdW50LCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuaGFzRGF0YSggZWxlbSApICYmIGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gT25jZSBmb3IgZWFjaCB0eXBlLm5hbWVzcGFjZSBpbiB0eXBlczsgdHlwZSBtYXkgYmUgb21pdHRlZFxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3R3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XG5cdFx0d2hpbGUgKCB0LS0gKSB7XG5cdFx0XHR0bXAgPSBydHlwZW5hbWVzcGFjZS5leGVjKCB0eXBlc1sgdCBdICkgfHwgW107XG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsgMiBdIHx8IFwiXCIgKS5zcGxpdCggXCIuXCIgKS5zb3J0KCk7XG5cblx0XHRcdC8vIFVuYmluZCBhbGwgZXZlbnRzIChvbiB0aGlzIG5hbWVzcGFjZSwgaWYgcHJvdmlkZWQpIGZvciB0aGUgZWxlbWVudFxuXHRcdFx0aWYgKCAhdHlwZSApIHtcblx0XHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSArIHR5cGVzWyB0IF0sIGhhbmRsZXIsIHNlbGVjdG9yLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xuXHRcdFx0aGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSB8fCBbXTtcblx0XHRcdHRtcCA9IHRtcFsgMiBdICYmXG5cdFx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApO1xuXG5cdFx0XHQvLyBSZW1vdmUgbWF0Y2hpbmcgZXZlbnRzXG5cdFx0XHRvcmlnQ291bnQgPSBqID0gaGFuZGxlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBqIF07XG5cblx0XHRcdFx0aWYgKCAoIG1hcHBlZFR5cGVzIHx8IG9yaWdUeXBlID09PSBoYW5kbGVPYmoub3JpZ1R5cGUgKSAmJlxuXHRcdFx0XHRcdCggIWhhbmRsZXIgfHwgaGFuZGxlci5ndWlkID09PSBoYW5kbGVPYmouZ3VpZCApICYmXG5cdFx0XHRcdFx0KCAhdG1wIHx8IHRtcC50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSAmJlxuXHRcdFx0XHRcdCggIXNlbGVjdG9yIHx8IHNlbGVjdG9yID09PSBoYW5kbGVPYmouc2VsZWN0b3IgfHxcblx0XHRcdFx0XHRcdHNlbGVjdG9yID09PSBcIioqXCIgJiYgaGFuZGxlT2JqLnNlbGVjdG9yICkgKSB7XG5cdFx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBqLCAxICk7XG5cblx0XHRcdFx0XHRpZiAoIGhhbmRsZU9iai5zZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBzcGVjaWFsLnJlbW92ZSApIHtcblx0XHRcdFx0XHRcdHNwZWNpYWwucmVtb3ZlLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZW1vdmUgZ2VuZXJpYyBldmVudCBoYW5kbGVyIGlmIHdlIHJlbW92ZWQgc29tZXRoaW5nIGFuZCBubyBtb3JlIGhhbmRsZXJzIGV4aXN0XG5cdFx0XHQvLyAoYXZvaWRzIHBvdGVudGlhbCBmb3IgZW5kbGVzcyByZWN1cnNpb24gZHVyaW5nIHJlbW92YWwgb2Ygc3BlY2lhbCBldmVudCBoYW5kbGVycylcblx0XHRcdGlmICggb3JpZ0NvdW50ICYmICFoYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRcdGlmICggIXNwZWNpYWwudGVhcmRvd24gfHxcblx0XHRcdFx0XHRzcGVjaWFsLnRlYXJkb3duLmNhbGwoIGVsZW0sIG5hbWVzcGFjZXMsIGVsZW1EYXRhLmhhbmRsZSApID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZWxlbURhdGEuaGFuZGxlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRkZWxldGUgZXZlbnRzWyB0eXBlIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIGRhdGEgYW5kIHRoZSBleHBhbmRvIGlmIGl0J3Mgbm8gbG9uZ2VyIHVzZWRcblx0XHRpZiAoIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBldmVudHMgKSApIHtcblx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJoYW5kbGUgZXZlbnRzXCIgKTtcblx0XHR9XG5cdH0sXG5cblx0ZGlzcGF0Y2g6IGZ1bmN0aW9uKCBuYXRpdmVFdmVudCApIHtcblxuXHRcdC8vIE1ha2UgYSB3cml0YWJsZSBqUXVlcnkuRXZlbnQgZnJvbSB0aGUgbmF0aXZlIGV2ZW50IG9iamVjdFxuXHRcdHZhciBldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIG5hdGl2ZUV2ZW50ICk7XG5cblx0XHR2YXIgaSwgaiwgcmV0LCBtYXRjaGVkLCBoYW5kbGVPYmosIGhhbmRsZXJRdWV1ZSxcblx0XHRcdGFyZ3MgPSBuZXcgQXJyYXkoIGFyZ3VtZW50cy5sZW5ndGggKSxcblx0XHRcdGhhbmRsZXJzID0gKCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZXZlbnRzXCIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gfHwgW10sXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGV2ZW50LnR5cGUgXSB8fCB7fTtcblxuXHRcdC8vIFVzZSB0aGUgZml4LWVkIGpRdWVyeS5FdmVudCByYXRoZXIgdGhhbiB0aGUgKHJlYWQtb25seSkgbmF0aXZlIGV2ZW50XG5cdFx0YXJnc1sgMCBdID0gZXZlbnQ7XG5cblx0XHRmb3IgKCBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdGFyZ3NbIGkgXSA9IGFyZ3VtZW50c1sgaSBdO1xuXHRcdH1cblxuXHRcdGV2ZW50LmRlbGVnYXRlVGFyZ2V0ID0gdGhpcztcblxuXHRcdC8vIENhbGwgdGhlIHByZURpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZSwgYW5kIGxldCBpdCBiYWlsIGlmIGRlc2lyZWRcblx0XHRpZiAoIHNwZWNpYWwucHJlRGlzcGF0Y2ggJiYgc3BlY2lhbC5wcmVEaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgaGFuZGxlcnNcblx0XHRoYW5kbGVyUXVldWUgPSBqUXVlcnkuZXZlbnQuaGFuZGxlcnMuY2FsbCggdGhpcywgZXZlbnQsIGhhbmRsZXJzICk7XG5cblx0XHQvLyBSdW4gZGVsZWdhdGVzIGZpcnN0OyB0aGV5IG1heSB3YW50IHRvIHN0b3AgcHJvcGFnYXRpb24gYmVuZWF0aCB1c1xuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBtYXRjaGVkID0gaGFuZGxlclF1ZXVlWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0ZXZlbnQuY3VycmVudFRhcmdldCA9IG1hdGNoZWQuZWxlbTtcblxuXHRcdFx0aiA9IDA7XG5cdFx0XHR3aGlsZSAoICggaGFuZGxlT2JqID0gbWF0Y2hlZC5oYW5kbGVyc1sgaisrIF0gKSAmJlxuXHRcdFx0XHQhZXZlbnQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblxuXHRcdFx0XHQvLyBUcmlnZ2VyZWQgZXZlbnQgbXVzdCBlaXRoZXIgMSkgaGF2ZSBubyBuYW1lc3BhY2UsIG9yIDIpIGhhdmUgbmFtZXNwYWNlKHMpXG5cdFx0XHRcdC8vIGEgc3Vic2V0IG9yIGVxdWFsIHRvIHRob3NlIGluIHRoZSBib3VuZCBldmVudCAoYm90aCBjYW4gaGF2ZSBubyBuYW1lc3BhY2UpLlxuXHRcdFx0XHRpZiAoICFldmVudC5ybmFtZXNwYWNlIHx8IGV2ZW50LnJuYW1lc3BhY2UudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHxcblx0XHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyICkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApO1xuXG5cdFx0XHRcdFx0aWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdGlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGVcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xuXHRcdFx0c3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdGhhbmRsZXJzOiBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXJzICkge1xuXHRcdHZhciBpLCBtYXRjaGVzLCBzZWwsIGhhbmRsZU9iaixcblx0XHRcdGhhbmRsZXJRdWV1ZSA9IFtdLFxuXHRcdFx0ZGVsZWdhdGVDb3VudCA9IGhhbmRsZXJzLmRlbGVnYXRlQ291bnQsXG5cdFx0XHRjdXIgPSBldmVudC50YXJnZXQ7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTlcblx0XHQvLyBGaW5kIGRlbGVnYXRlIGhhbmRsZXJzXG5cdFx0Ly8gQmxhY2staG9sZSBTVkcgPHVzZT4gaW5zdGFuY2UgdHJlZXMgKCMxMzE4MClcblx0XHQvL1xuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MlxuXHRcdC8vIEF2b2lkIG5vbi1sZWZ0LWNsaWNrIGluIEZGIGJ1dCBkb24ndCBibG9jayBJRSByYWRpbyBldmVudHMgKCMzODYxLCBnaC0yMzQzKVxuXHRcdGlmICggZGVsZWdhdGVDb3VudCAmJiBjdXIubm9kZVR5cGUgJiZcblx0XHRcdCggZXZlbnQudHlwZSAhPT0gXCJjbGlja1wiIHx8IGlzTmFOKCBldmVudC5idXR0b24gKSB8fCBldmVudC5idXR0b24gPCAxICkgKSB7XG5cblx0XHRcdGZvciAoIDsgY3VyICE9PSB0aGlzOyBjdXIgPSBjdXIucGFyZW50Tm9kZSB8fCB0aGlzICkge1xuXG5cdFx0XHRcdC8vIERvbid0IGNoZWNrIG5vbi1lbGVtZW50cyAoIzEzMjA4KVxuXHRcdFx0XHQvLyBEb24ndCBwcm9jZXNzIGNsaWNrcyBvbiBkaXNhYmxlZCBlbGVtZW50cyAoIzY5MTEsICM4MTY1LCAjMTEzODIsICMxMTc2NClcblx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPT09IDEgJiYgKCBjdXIuZGlzYWJsZWQgIT09IHRydWUgfHwgZXZlbnQudHlwZSAhPT0gXCJjbGlja1wiICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlcyA9IFtdO1xuXHRcdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgZGVsZWdhdGVDb3VudDsgaSsrICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGkgXTtcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgY29uZmxpY3Qgd2l0aCBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKCMxMzIwMylcblx0XHRcdFx0XHRcdHNlbCA9IGhhbmRsZU9iai5zZWxlY3RvciArIFwiIFwiO1xuXG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXNbIHNlbCBdID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZXNbIHNlbCBdID0gaGFuZGxlT2JqLm5lZWRzQ29udGV4dCA/XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5KCBzZWwsIHRoaXMgKS5pbmRleCggY3VyICkgPiAtMSA6XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQoIHNlbCwgdGhpcywgbnVsbCwgWyBjdXIgXSApLmxlbmd0aDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlc1sgc2VsIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZXMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggbWF0Y2hlcy5sZW5ndGggKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBtYXRjaGVzIH0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBZGQgdGhlIHJlbWFpbmluZyAoZGlyZWN0bHktYm91bmQpIGhhbmRsZXJzXG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50IDwgaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogdGhpcywgaGFuZGxlcnM6IGhhbmRsZXJzLnNsaWNlKCBkZWxlZ2F0ZUNvdW50ICkgfSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBoYW5kbGVyUXVldWU7XG5cdH0sXG5cblx0YWRkUHJvcDogZnVuY3Rpb24oIG5hbWUsIGhvb2sgKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBqUXVlcnkuRXZlbnQucHJvdG90eXBlLCBuYW1lLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXG5cdFx0XHRnZXQ6IGpRdWVyeS5pc0Z1bmN0aW9uKCBob29rICkgP1xuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGhvb2soIHRoaXMub3JpZ2luYWxFdmVudCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdGhpcy5vcmlnaW5hbEV2ZW50WyBuYW1lIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCB0aGlzLCBuYW1lLCB7XG5cdFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRcdFx0d3JpdGFibGU6IHRydWUsXG5cdFx0XHRcdFx0dmFsdWU6IHZhbHVlXG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Zml4OiBmdW5jdGlvbiggb3JpZ2luYWxFdmVudCApIHtcblx0XHRyZXR1cm4gb3JpZ2luYWxFdmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XG5cdFx0XHRvcmlnaW5hbEV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIG9yaWdpbmFsRXZlbnQgKTtcblx0fSxcblxuXHRzcGVjaWFsOiB7XG5cdFx0bG9hZDoge1xuXG5cdFx0XHQvLyBQcmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRvdy5sb2FkXG5cdFx0XHRub0J1YmJsZTogdHJ1ZVxuXHRcdH0sXG5cdFx0Zm9jdXM6IHtcblxuXHRcdFx0Ly8gRmlyZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0XG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCB0aGlzICE9PSBzYWZlQWN0aXZlRWxlbWVudCgpICYmIHRoaXMuZm9jdXMgKSB7XG5cdFx0XHRcdFx0dGhpcy5mb2N1cygpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGVnYXRlVHlwZTogXCJmb2N1c2luXCJcblx0XHR9LFxuXHRcdGJsdXI6IHtcblx0XHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIHRoaXMgPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgJiYgdGhpcy5ibHVyICkge1xuXHRcdFx0XHRcdHRoaXMuYmx1cigpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGVnYXRlVHlwZTogXCJmb2N1c291dFwiXG5cdFx0fSxcblx0XHRjbGljazoge1xuXG5cdFx0XHQvLyBGb3IgY2hlY2tib3gsIGZpcmUgbmF0aXZlIGV2ZW50IHNvIGNoZWNrZWQgc3RhdGUgd2lsbCBiZSByaWdodFxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggdGhpcy50eXBlID09PSBcImNoZWNrYm94XCIgJiYgdGhpcy5jbGljayAmJiBqUXVlcnkubm9kZU5hbWUoIHRoaXMsIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHRoaXMuY2xpY2soKTtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdC8vIEZvciBjcm9zcy1icm93c2VyIGNvbnNpc3RlbmN5LCBkb24ndCBmaXJlIG5hdGl2ZSAuY2xpY2soKSBvbiBsaW5rc1xuXHRcdFx0X2RlZmF1bHQ6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0cmV0dXJuIGpRdWVyeS5ub2RlTmFtZSggZXZlbnQudGFyZ2V0LCBcImFcIiApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRiZWZvcmV1bmxvYWQ6IHtcblx0XHRcdHBvc3REaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggMjArXG5cdFx0XHRcdC8vIEZpcmVmb3ggZG9lc24ndCBhbGVydCBpZiB0aGUgcmV0dXJuVmFsdWUgZmllbGQgaXMgbm90IHNldC5cblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgIT09IHVuZGVmaW5lZCAmJiBldmVudC5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdGV2ZW50Lm9yaWdpbmFsRXZlbnQucmV0dXJuVmFsdWUgPSBldmVudC5yZXN1bHQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5yZW1vdmVFdmVudCA9IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBoYW5kbGUgKSB7XG5cblx0Ly8gVGhpcyBcImlmXCIgaXMgbmVlZGVkIGZvciBwbGFpbiBvYmplY3RzXG5cdGlmICggZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyICkge1xuXHRcdGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciggdHlwZSwgaGFuZGxlICk7XG5cdH1cbn07XG5cbmpRdWVyeS5FdmVudCA9IGZ1bmN0aW9uKCBzcmMsIHByb3BzICkge1xuXG5cdC8vIEFsbG93IGluc3RhbnRpYXRpb24gd2l0aG91dCB0aGUgJ25ldycga2V5d29yZFxuXHRpZiAoICEoIHRoaXMgaW5zdGFuY2VvZiBqUXVlcnkuRXZlbnQgKSApIHtcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5FdmVudCggc3JjLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gRXZlbnQgb2JqZWN0XG5cdGlmICggc3JjICYmIHNyYy50eXBlICkge1xuXHRcdHRoaXMub3JpZ2luYWxFdmVudCA9IHNyYztcblx0XHR0aGlzLnR5cGUgPSBzcmMudHlwZTtcblxuXHRcdC8vIEV2ZW50cyBidWJibGluZyB1cCB0aGUgZG9jdW1lbnQgbWF5IGhhdmUgYmVlbiBtYXJrZWQgYXMgcHJldmVudGVkXG5cdFx0Ly8gYnkgYSBoYW5kbGVyIGxvd2VyIGRvd24gdGhlIHRyZWU7IHJlZmxlY3QgdGhlIGNvcnJlY3QgdmFsdWUuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSBzcmMuZGVmYXVsdFByZXZlbnRlZCB8fFxuXHRcdFx0XHRzcmMuZGVmYXVsdFByZXZlbnRlZCA9PT0gdW5kZWZpbmVkICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTIuMyBvbmx5XG5cdFx0XHRcdHNyYy5yZXR1cm5WYWx1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0cmV0dXJuVHJ1ZSA6XG5cdFx0XHRyZXR1cm5GYWxzZTtcblxuXHRcdC8vIENyZWF0ZSB0YXJnZXQgcHJvcGVydGllc1xuXHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA8PTYgLSA3IG9ubHlcblx0XHQvLyBUYXJnZXQgc2hvdWxkIG5vdCBiZSBhIHRleHQgbm9kZSAoIzUwNCwgIzEzMTQzKVxuXHRcdHRoaXMudGFyZ2V0ID0gKCBzcmMudGFyZ2V0ICYmIHNyYy50YXJnZXQubm9kZVR5cGUgPT09IDMgKSA/XG5cdFx0XHRzcmMudGFyZ2V0LnBhcmVudE5vZGUgOlxuXHRcdFx0c3JjLnRhcmdldDtcblxuXHRcdHRoaXMuY3VycmVudFRhcmdldCA9IHNyYy5jdXJyZW50VGFyZ2V0O1xuXHRcdHRoaXMucmVsYXRlZFRhcmdldCA9IHNyYy5yZWxhdGVkVGFyZ2V0O1xuXG5cdC8vIEV2ZW50IHR5cGVcblx0fSBlbHNlIHtcblx0XHR0aGlzLnR5cGUgPSBzcmM7XG5cdH1cblxuXHQvLyBQdXQgZXhwbGljaXRseSBwcm92aWRlZCBwcm9wZXJ0aWVzIG9udG8gdGhlIGV2ZW50IG9iamVjdFxuXHRpZiAoIHByb3BzICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRoaXMsIHByb3BzICk7XG5cdH1cblxuXHQvLyBDcmVhdGUgYSB0aW1lc3RhbXAgaWYgaW5jb21pbmcgZXZlbnQgZG9lc24ndCBoYXZlIG9uZVxuXHR0aGlzLnRpbWVTdGFtcCA9IHNyYyAmJiBzcmMudGltZVN0YW1wIHx8IGpRdWVyeS5ub3coKTtcblxuXHQvLyBNYXJrIGl0IGFzIGZpeGVkXG5cdHRoaXNbIGpRdWVyeS5leHBhbmRvIF0gPSB0cnVlO1xufTtcblxuLy8galF1ZXJ5LkV2ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUgRUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nXG4vLyBodHRwczovL3d3dy53My5vcmcvVFIvMjAwMy9XRC1ET00tTGV2ZWwtMy1FdmVudHMtMjAwMzAzMzEvZWNtYS1zY3JpcHQtYmluZGluZy5odG1sXG5qUXVlcnkuRXZlbnQucHJvdG90eXBlID0ge1xuXHRjb25zdHJ1Y3RvcjogalF1ZXJ5LkV2ZW50LFxuXHRpc0RlZmF1bHRQcmV2ZW50ZWQ6IHJldHVybkZhbHNlLFxuXHRpc1Byb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UsXG5cdGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNTaW11bGF0ZWQ6IGZhbHNlLFxuXG5cdHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXHR9LFxuXHRzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XG5cdFx0XHRlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdH1cblxuXHRcdHRoaXMuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH1cbn07XG5cbi8vIEluY2x1ZGVzIGFsbCBjb21tb24gZXZlbnQgcHJvcHMgaW5jbHVkaW5nIEtleUV2ZW50IGFuZCBNb3VzZUV2ZW50IHNwZWNpZmljIHByb3BzXG5qUXVlcnkuZWFjaCgge1xuXHRhbHRLZXk6IHRydWUsXG5cdGJ1YmJsZXM6IHRydWUsXG5cdGNhbmNlbGFibGU6IHRydWUsXG5cdGNoYW5nZWRUb3VjaGVzOiB0cnVlLFxuXHRjdHJsS2V5OiB0cnVlLFxuXHRkZXRhaWw6IHRydWUsXG5cdGV2ZW50UGhhc2U6IHRydWUsXG5cdG1ldGFLZXk6IHRydWUsXG5cdHBhZ2VYOiB0cnVlLFxuXHRwYWdlWTogdHJ1ZSxcblx0c2hpZnRLZXk6IHRydWUsXG5cdHZpZXc6IHRydWUsXG5cdFwiY2hhclwiOiB0cnVlLFxuXHRjaGFyQ29kZTogdHJ1ZSxcblx0a2V5OiB0cnVlLFxuXHRrZXlDb2RlOiB0cnVlLFxuXHRidXR0b246IHRydWUsXG5cdGJ1dHRvbnM6IHRydWUsXG5cdGNsaWVudFg6IHRydWUsXG5cdGNsaWVudFk6IHRydWUsXG5cdG9mZnNldFg6IHRydWUsXG5cdG9mZnNldFk6IHRydWUsXG5cdHBvaW50ZXJJZDogdHJ1ZSxcblx0cG9pbnRlclR5cGU6IHRydWUsXG5cdHNjcmVlblg6IHRydWUsXG5cdHNjcmVlblk6IHRydWUsXG5cdHRhcmdldFRvdWNoZXM6IHRydWUsXG5cdHRvRWxlbWVudDogdHJ1ZSxcblx0dG91Y2hlczogdHJ1ZSxcblxuXHR3aGljaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdHZhciBidXR0b24gPSBldmVudC5idXR0b247XG5cblx0XHQvLyBBZGQgd2hpY2ggZm9yIGtleSBldmVudHNcblx0XHRpZiAoIGV2ZW50LndoaWNoID09IG51bGwgJiYgcmtleUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUgKSApIHtcblx0XHRcdHJldHVybiBldmVudC5jaGFyQ29kZSAhPSBudWxsID8gZXZlbnQuY2hhckNvZGUgOiBldmVudC5rZXlDb2RlO1xuXHRcdH1cblxuXHRcdC8vIEFkZCB3aGljaCBmb3IgY2xpY2s6IDEgPT09IGxlZnQ7IDIgPT09IG1pZGRsZTsgMyA9PT0gcmlnaHRcblx0XHRpZiAoICFldmVudC53aGljaCAmJiBidXR0b24gIT09IHVuZGVmaW5lZCAmJiBybW91c2VFdmVudC50ZXN0KCBldmVudC50eXBlICkgKSB7XG5cdFx0XHRyZXR1cm4gKCBidXR0b24gJiAxID8gMSA6ICggYnV0dG9uICYgMiA/IDMgOiAoIGJ1dHRvbiAmIDQgPyAyIDogMCApICkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQud2hpY2g7XG5cdH1cbn0sIGpRdWVyeS5ldmVudC5hZGRQcm9wICk7XG5cbi8vIENyZWF0ZSBtb3VzZWVudGVyL2xlYXZlIGV2ZW50cyB1c2luZyBtb3VzZW92ZXIvb3V0IGFuZCBldmVudC10aW1lIGNoZWNrc1xuLy8gc28gdGhhdCBldmVudCBkZWxlZ2F0aW9uIHdvcmtzIGluIGpRdWVyeS5cbi8vIERvIHRoZSBzYW1lIGZvciBwb2ludGVyZW50ZXIvcG9pbnRlcmxlYXZlIGFuZCBwb2ludGVyb3Zlci9wb2ludGVyb3V0XG4vL1xuLy8gU3VwcG9ydDogU2FmYXJpIDcgb25seVxuLy8gU2FmYXJpIHNlbmRzIG1vdXNlZW50ZXIgdG9vIG9mdGVuOyBzZWU6XG4vLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NzAyNThcbi8vIGZvciB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIGJ1ZyAoaXQgZXhpc3RlZCBpbiBvbGRlciBDaHJvbWUgdmVyc2lvbnMgYXMgd2VsbCkuXG5qUXVlcnkuZWFjaCgge1xuXHRtb3VzZWVudGVyOiBcIm1vdXNlb3ZlclwiLFxuXHRtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCIsXG5cdHBvaW50ZXJlbnRlcjogXCJwb2ludGVyb3ZlclwiLFxuXHRwb2ludGVybGVhdmU6IFwicG9pbnRlcm91dFwiXG59LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgb3JpZyBdID0ge1xuXHRcdGRlbGVnYXRlVHlwZTogZml4LFxuXHRcdGJpbmRUeXBlOiBmaXgsXG5cblx0XHRoYW5kbGU6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdHZhciByZXQsXG5cdFx0XHRcdHRhcmdldCA9IHRoaXMsXG5cdFx0XHRcdHJlbGF0ZWQgPSBldmVudC5yZWxhdGVkVGFyZ2V0LFxuXHRcdFx0XHRoYW5kbGVPYmogPSBldmVudC5oYW5kbGVPYmo7XG5cblx0XHRcdC8vIEZvciBtb3VzZWVudGVyL2xlYXZlIGNhbGwgdGhlIGhhbmRsZXIgaWYgcmVsYXRlZCBpcyBvdXRzaWRlIHRoZSB0YXJnZXQuXG5cdFx0XHQvLyBOQjogTm8gcmVsYXRlZFRhcmdldCBpZiB0aGUgbW91c2UgbGVmdC9lbnRlcmVkIHRoZSBicm93c2VyIHdpbmRvd1xuXHRcdFx0aWYgKCAhcmVsYXRlZCB8fCAoIHJlbGF0ZWQgIT09IHRhcmdldCAmJiAhalF1ZXJ5LmNvbnRhaW5zKCB0YXJnZXQsIHJlbGF0ZWQgKSApICkge1xuXHRcdFx0XHRldmVudC50eXBlID0gaGFuZGxlT2JqLm9yaWdUeXBlO1xuXHRcdFx0XHRyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBmaXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblx0fTtcbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdG9uOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gb24oIHRoaXMsIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKTtcblx0fSxcblx0b25lOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gb24oIHRoaXMsIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIDEgKTtcblx0fSxcblx0b2ZmOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBmbiApIHtcblx0XHR2YXIgaGFuZGxlT2JqLCB0eXBlO1xuXHRcdGlmICggdHlwZXMgJiYgdHlwZXMucHJldmVudERlZmF1bHQgJiYgdHlwZXMuaGFuZGxlT2JqICkge1xuXG5cdFx0XHQvLyAoIGV2ZW50ICkgIGRpc3BhdGNoZWQgalF1ZXJ5LkV2ZW50XG5cdFx0XHRoYW5kbGVPYmogPSB0eXBlcy5oYW5kbGVPYmo7XG5cdFx0XHRqUXVlcnkoIHR5cGVzLmRlbGVnYXRlVGFyZ2V0ICkub2ZmKFxuXHRcdFx0XHRoYW5kbGVPYmoubmFtZXNwYWNlID9cblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUgKyBcIi5cIiArIGhhbmRsZU9iai5uYW1lc3BhY2UgOlxuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSxcblx0XHRcdFx0aGFuZGxlT2JqLnNlbGVjdG9yLFxuXHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlclxuXHRcdFx0KTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHR5cGVvZiB0eXBlcyA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcy1vYmplY3QgWywgc2VsZWN0b3JdIClcblx0XHRcdGZvciAoIHR5cGUgaW4gdHlwZXMgKSB7XG5cdFx0XHRcdHRoaXMub2ZmKCB0eXBlLCBzZWxlY3RvciwgdHlwZXNbIHR5cGUgXSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggc2VsZWN0b3IgPT09IGZhbHNlIHx8IHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzIFssIGZuXSApXG5cdFx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCB0eXBlcywgZm4sIHNlbGVjdG9yICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxudmFyXG5cblx0LyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZXNsaW50L2VzbGludC9pc3N1ZXMvMzIyOVxuXHRyeGh0bWxUYWcgPSAvPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbYS16XVteXFwvXFwwPlxceDIwXFx0XFxyXFxuXFxmXSopW14+XSopXFwvPi9naSxcblxuXHQvKiBlc2xpbnQtZW5hYmxlICovXG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMCAtIDExLCBFZGdlIDEyIC0gMTNcblx0Ly8gSW4gSUUvRWRnZSB1c2luZyByZWdleCBncm91cHMgaGVyZSBjYXVzZXMgc2V2ZXJlIHNsb3dkb3ducy5cblx0Ly8gU2VlIGh0dHBzOi8vY29ubmVjdC5taWNyb3NvZnQuY29tL0lFL2ZlZWRiYWNrL2RldGFpbHMvMTczNjUxMi9cblx0cm5vSW5uZXJodG1sID0gLzxzY3JpcHR8PHN0eWxlfDxsaW5rL2ksXG5cblx0Ly8gY2hlY2tlZD1cImNoZWNrZWRcIiBvciBjaGVja2VkXG5cdHJjaGVja2VkID0gL2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxcblx0cnNjcmlwdFR5cGVNYXNrZWQgPSAvXnRydWVcXC8oLiopLyxcblx0cmNsZWFuU2NyaXB0ID0gL15cXHMqPCEoPzpcXFtDREFUQVxcW3wtLSl8KD86XFxdXFxdfC0tKT5cXHMqJC9nO1xuXG5mdW5jdGlvbiBtYW5pcHVsYXRpb25UYXJnZXQoIGVsZW0sIGNvbnRlbnQgKSB7XG5cdGlmICggalF1ZXJ5Lm5vZGVOYW1lKCBlbGVtLCBcInRhYmxlXCIgKSAmJlxuXHRcdGpRdWVyeS5ub2RlTmFtZSggY29udGVudC5ub2RlVHlwZSAhPT0gMTEgPyBjb250ZW50IDogY29udGVudC5maXJzdENoaWxkLCBcInRyXCIgKSApIHtcblxuXHRcdHJldHVybiBlbGVtLmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcInRib2R5XCIgKVsgMCBdIHx8IGVsZW07XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuLy8gUmVwbGFjZS9yZXN0b3JlIHRoZSB0eXBlIGF0dHJpYnV0ZSBvZiBzY3JpcHQgZWxlbWVudHMgZm9yIHNhZmUgRE9NIG1hbmlwdWxhdGlvblxuZnVuY3Rpb24gZGlzYWJsZVNjcmlwdCggZWxlbSApIHtcblx0ZWxlbS50eXBlID0gKCBlbGVtLmdldEF0dHJpYnV0ZSggXCJ0eXBlXCIgKSAhPT0gbnVsbCApICsgXCIvXCIgKyBlbGVtLnR5cGU7XG5cdHJldHVybiBlbGVtO1xufVxuZnVuY3Rpb24gcmVzdG9yZVNjcmlwdCggZWxlbSApIHtcblx0dmFyIG1hdGNoID0gcnNjcmlwdFR5cGVNYXNrZWQuZXhlYyggZWxlbS50eXBlICk7XG5cblx0aWYgKCBtYXRjaCApIHtcblx0XHRlbGVtLnR5cGUgPSBtYXRjaFsgMSBdO1xuXHR9IGVsc2Uge1xuXHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBcInR5cGVcIiApO1xuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbmZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBpLCBsLCB0eXBlLCBwZGF0YU9sZCwgcGRhdGFDdXIsIHVkYXRhT2xkLCB1ZGF0YUN1ciwgZXZlbnRzO1xuXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyAxLiBDb3B5IHByaXZhdGUgZGF0YTogZXZlbnRzLCBoYW5kbGVycywgZXRjLlxuXHRpZiAoIGRhdGFQcml2Lmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHBkYXRhT2xkID0gZGF0YVByaXYuYWNjZXNzKCBzcmMgKTtcblx0XHRwZGF0YUN1ciA9IGRhdGFQcml2LnNldCggZGVzdCwgcGRhdGFPbGQgKTtcblx0XHRldmVudHMgPSBwZGF0YU9sZC5ldmVudHM7XG5cblx0XHRpZiAoIGV2ZW50cyApIHtcblx0XHRcdGRlbGV0ZSBwZGF0YUN1ci5oYW5kbGU7XG5cdFx0XHRwZGF0YUN1ci5ldmVudHMgPSB7fTtcblxuXHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGRlc3QsIHR5cGUsIGV2ZW50c1sgdHlwZSBdWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIDIuIENvcHkgdXNlciBkYXRhXG5cdGlmICggZGF0YVVzZXIuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0dWRhdGFPbGQgPSBkYXRhVXNlci5hY2Nlc3MoIHNyYyApO1xuXHRcdHVkYXRhQ3VyID0galF1ZXJ5LmV4dGVuZCgge30sIHVkYXRhT2xkICk7XG5cblx0XHRkYXRhVXNlci5zZXQoIGRlc3QsIHVkYXRhQ3VyICk7XG5cdH1cbn1cblxuLy8gRml4IElFIGJ1Z3MsIHNlZSBzdXBwb3J0IHRlc3RzXG5mdW5jdGlvbiBmaXhJbnB1dCggc3JjLCBkZXN0ICkge1xuXHR2YXIgbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0Ly8gRmFpbHMgdG8gcGVyc2lzdCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiBhIGNsb25lZCBjaGVja2JveCBvciByYWRpbyBidXR0b24uXG5cdGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiByY2hlY2thYmxlVHlwZS50ZXN0KCBzcmMudHlwZSApICkge1xuXHRcdGRlc3QuY2hlY2tlZCA9IHNyYy5jaGVja2VkO1xuXG5cdC8vIEZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgfHwgbm9kZU5hbWUgPT09IFwidGV4dGFyZWFcIiApIHtcblx0XHRkZXN0LmRlZmF1bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7XG5cdH1cbn1cblxuZnVuY3Rpb24gZG9tTWFuaXAoIGNvbGxlY3Rpb24sIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICkge1xuXG5cdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0YXJncyA9IGNvbmNhdC5hcHBseSggW10sIGFyZ3MgKTtcblxuXHR2YXIgZnJhZ21lbnQsIGZpcnN0LCBzY3JpcHRzLCBoYXNTY3JpcHRzLCBub2RlLCBkb2MsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuXHRcdGlOb0Nsb25lID0gbCAtIDEsXG5cdFx0dmFsdWUgPSBhcmdzWyAwIF0sXG5cdFx0aXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdC8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdFxuXHRpZiAoIGlzRnVuY3Rpb24gfHxcblx0XHRcdCggbCA+IDEgJiYgdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzdXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkge1xuXHRcdHJldHVybiBjb2xsZWN0aW9uLmVhY2goIGZ1bmN0aW9uKCBpbmRleCApIHtcblx0XHRcdHZhciBzZWxmID0gY29sbGVjdGlvbi5lcSggaW5kZXggKTtcblx0XHRcdGlmICggaXNGdW5jdGlvbiApIHtcblx0XHRcdFx0YXJnc1sgMCBdID0gdmFsdWUuY2FsbCggdGhpcywgaW5kZXgsIHNlbGYuaHRtbCgpICk7XG5cdFx0XHR9XG5cdFx0XHRkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTtcblx0XHR9ICk7XG5cdH1cblxuXHRpZiAoIGwgKSB7XG5cdFx0ZnJhZ21lbnQgPSBidWlsZEZyYWdtZW50KCBhcmdzLCBjb2xsZWN0aW9uWyAwIF0ub3duZXJEb2N1bWVudCwgZmFsc2UsIGNvbGxlY3Rpb24sIGlnbm9yZWQgKTtcblx0XHRmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XG5cblx0XHRpZiAoIGZyYWdtZW50LmNoaWxkTm9kZXMubGVuZ3RoID09PSAxICkge1xuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcblx0XHR9XG5cblx0XHQvLyBSZXF1aXJlIGVpdGhlciBuZXcgY29udGVudCBvciBhbiBpbnRlcmVzdCBpbiBpZ25vcmVkIGVsZW1lbnRzIHRvIGludm9rZSB0aGUgY2FsbGJhY2tcblx0XHRpZiAoIGZpcnN0IHx8IGlnbm9yZWQgKSB7XG5cdFx0XHRzY3JpcHRzID0galF1ZXJ5Lm1hcCggZ2V0QWxsKCBmcmFnbWVudCwgXCJzY3JpcHRcIiApLCBkaXNhYmxlU2NyaXB0ICk7XG5cdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XG5cblx0XHRcdC8vIFVzZSB0aGUgb3JpZ2luYWwgZnJhZ21lbnQgZm9yIHRoZSBsYXN0IGl0ZW1cblx0XHRcdC8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cFxuXHRcdFx0Ly8gYmVpbmcgZW1wdGllZCBpbmNvcnJlY3RseSBpbiBjZXJ0YWluIHNpdHVhdGlvbnMgKCM4MDcwKS5cblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0bm9kZSA9IGZyYWdtZW50O1xuXG5cdFx0XHRcdGlmICggaSAhPT0gaU5vQ2xvbmUgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApO1xuXG5cdFx0XHRcdFx0Ly8gS2VlcCByZWZlcmVuY2VzIHRvIGNsb25lZCBzY3JpcHRzIGZvciBsYXRlciByZXN0b3JhdGlvblxuXHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHNjcmlwdHMsIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y2FsbGJhY2suY2FsbCggY29sbGVjdGlvblsgaSBdLCBub2RlLCBpICk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcblx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcblxuXHRcdFx0XHQvLyBSZWVuYWJsZSBzY3JpcHRzXG5cdFx0XHRcdGpRdWVyeS5tYXAoIHNjcmlwdHMsIHJlc3RvcmVTY3JpcHQgKTtcblxuXHRcdFx0XHQvLyBFdmFsdWF0ZSBleGVjdXRhYmxlIHNjcmlwdHMgb24gZmlyc3QgZG9jdW1lbnQgaW5zZXJ0aW9uXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkge1xuXHRcdFx0XHRcdG5vZGUgPSBzY3JpcHRzWyBpIF07XG5cdFx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBub2RlLnR5cGUgfHwgXCJcIiApICYmXG5cdFx0XHRcdFx0XHQhZGF0YVByaXYuYWNjZXNzKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmXG5cdFx0XHRcdFx0XHRqUXVlcnkuY29udGFpbnMoIGRvYywgbm9kZSApICkge1xuXG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUuc3JjICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIE9wdGlvbmFsIEFKQVggZGVwZW5kZW5jeSwgYnV0IHdvbid0IHJ1biBzY3JpcHRzIGlmIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5fZXZhbFVybCggbm9kZS5zcmMgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0RE9NRXZhbCggbm9kZS50ZXh0Q29udGVudC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKSwgZG9jICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGNvbGxlY3Rpb247XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xuXHR2YXIgbm9kZSxcblx0XHRub2RlcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIGVsZW0gKSA6IGVsZW0sXG5cdFx0aSA9IDA7XG5cblx0Zm9yICggOyAoIG5vZGUgPSBub2Rlc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdGlmICggIWtlZXBEYXRhICYmIG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIG5vZGUgKSApO1xuXHRcdH1cblxuXHRcdGlmICggbm9kZS5wYXJlbnROb2RlICkge1xuXHRcdFx0aWYgKCBrZWVwRGF0YSAmJiBqUXVlcnkuY29udGFpbnMoIG5vZGUub3duZXJEb2N1bWVudCwgbm9kZSApICkge1xuXHRcdFx0XHRzZXRHbG9iYWxFdmFsKCBnZXRBbGwoIG5vZGUsIFwic2NyaXB0XCIgKSApO1xuXHRcdFx0fVxuXHRcdFx0bm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBub2RlICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0aHRtbFByZWZpbHRlcjogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0cmV0dXJuIGh0bWwucmVwbGFjZSggcnhodG1sVGFnLCBcIjwkMT48LyQyPlwiICk7XG5cdH0sXG5cblx0Y2xvbmU6IGZ1bmN0aW9uKCBlbGVtLCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHR2YXIgaSwgbCwgc3JjRWxlbWVudHMsIGRlc3RFbGVtZW50cyxcblx0XHRcdGNsb25lID0gZWxlbS5jbG9uZU5vZGUoIHRydWUgKSxcblx0XHRcdGluUGFnZSA9IGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICk7XG5cblx0XHQvLyBGaXggSUUgY2xvbmluZyBpc3N1ZXNcblx0XHRpZiAoICFzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkICYmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBlbGVtLm5vZGVUeXBlID09PSAxMSApICYmXG5cdFx0XHRcdCFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gV2UgZXNjaGV3IFNpenpsZSBoZXJlIGZvciBwZXJmb3JtYW5jZSByZWFzb25zOiBodHRwczovL2pzcGVyZi5jb20vZ2V0YWxsLXZzLXNpenpsZS8yXG5cdFx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lICk7XG5cdFx0XHRzcmNFbGVtZW50cyA9IGdldEFsbCggZWxlbSApO1xuXG5cdFx0XHRmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0Zml4SW5wdXQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29weSB0aGUgZXZlbnRzIGZyb20gdGhlIG9yaWdpbmFsIHRvIHRoZSBjbG9uZVxuXHRcdGlmICggZGF0YUFuZEV2ZW50cyApIHtcblx0XHRcdGlmICggZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRcdHNyY0VsZW1lbnRzID0gc3JjRWxlbWVudHMgfHwgZ2V0QWxsKCBlbGVtICk7XG5cdFx0XHRcdGRlc3RFbGVtZW50cyA9IGRlc3RFbGVtZW50cyB8fCBnZXRBbGwoIGNsb25lICk7XG5cblx0XHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNsb25lQ29weUV2ZW50KCBlbGVtLCBjbG9uZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFByZXNlcnZlIHNjcmlwdCBldmFsdWF0aW9uIGhpc3Rvcnlcblx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lLCBcInNjcmlwdFwiICk7XG5cdFx0aWYgKCBkZXN0RWxlbWVudHMubGVuZ3RoID4gMCApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIGRlc3RFbGVtZW50cywgIWluUGFnZSAmJiBnZXRBbGwoIGVsZW0sIFwic2NyaXB0XCIgKSApO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiB0aGUgY2xvbmVkIHNldFxuXHRcdHJldHVybiBjbG9uZTtcblx0fSxcblxuXHRjbGVhbkRhdGE6IGZ1bmN0aW9uKCBlbGVtcyApIHtcblx0XHR2YXIgZGF0YSwgZWxlbSwgdHlwZSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbCxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT09IHVuZGVmaW5lZDsgaSsrICkge1xuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cdFx0XHRcdGlmICggKCBkYXRhID0gZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdGZvciAoIHR5cGUgaW4gZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbFsgdHlwZSBdICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0XHRcdFx0XHQvLyBUaGlzIGlzIGEgc2hvcnRjdXQgdG8gYXZvaWQgalF1ZXJ5LmV2ZW50LnJlbW92ZSdzIG92ZXJoZWFkXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBkYXRhLmhhbmRsZSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCBlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gKSB7XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1K1xuXHRcdFx0XHRcdC8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZVxuXHRcdFx0XHRcdGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGRldGFjaDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IgKTtcblx0fSxcblxuXHR0ZXh0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkudGV4dCggdGhpcyApIDpcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0dGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH0sXG5cblx0YXBwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0cHJlcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZSggZWxlbSwgdGFyZ2V0LmZpcnN0Q2hpbGQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YmVmb3JlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRhZnRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMubmV4dFNpYmxpbmcgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlbGVtLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7ICggZWxlbSA9IHRoaXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblxuXHRcdFx0XHQvLyBSZW1vdmUgYW55IHJlbWFpbmluZyBub2Rlc1xuXHRcdFx0XHRlbGVtLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdGRhdGFBbmRFdmVudHMgPSBkYXRhQW5kRXZlbnRzID09IG51bGwgPyBmYWxzZSA6IGRhdGFBbmRFdmVudHM7XG5cdFx0ZGVlcERhdGFBbmRFdmVudHMgPSBkZWVwRGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZGF0YUFuZEV2ZW50cyA6IGRlZXBEYXRhQW5kRXZlbnRzO1xuXG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY2xvbmUoIHRoaXMsIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdGh0bWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZWxlbSA9IHRoaXNbIDAgXSB8fCB7fSxcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdGwgPSB0aGlzLmxlbmd0aDtcblxuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmlubmVySFRNTDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2VlIGlmIHdlIGNhbiB0YWtlIGEgc2hvcnRjdXQgYW5kIGp1c3QgdXNlIGlubmVySFRNTFxuXHRcdFx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgIXJub0lubmVyaHRtbC50ZXN0KCB2YWx1ZSApICYmXG5cdFx0XHRcdCF3cmFwTWFwWyAoIHJ0YWdOYW1lLmV4ZWMoIHZhbHVlICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCkgXSApIHtcblxuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5odG1sUHJlZmlsdGVyKCB2YWx1ZSApO1xuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdFx0ZWxlbSA9IHRoaXNbIGkgXSB8fCB7fTtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlIGVsZW1lbnQgbm9kZXMgYW5kIHByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xuXHRcdFx0XHRcdFx0XHRlbGVtLmlubmVySFRNTCA9IHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVsZW0gPSAwO1xuXG5cdFx0XHRcdC8vIElmIHVzaW5nIGlubmVySFRNTCB0aHJvd3MgYW4gZXhjZXB0aW9uLCB1c2UgdGhlIGZhbGxiYWNrIG1ldGhvZFxuXHRcdFx0XHR9IGNhdGNoICggZSApIHt9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmFwcGVuZCggdmFsdWUgKTtcblx0XHRcdH1cblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdHJlcGxhY2VXaXRoOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaWdub3JlZCA9IFtdO1xuXG5cdFx0Ly8gTWFrZSB0aGUgY2hhbmdlcywgcmVwbGFjaW5nIGVhY2ggbm9uLWlnbm9yZWQgY29udGV4dCBlbGVtZW50IHdpdGggdGhlIG5ldyBjb250ZW50XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcblxuXHRcdFx0aWYgKCBqUXVlcnkuaW5BcnJheSggdGhpcywgaWdub3JlZCApIDwgMCApIHtcblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCB0aGlzICkgKTtcblx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnJlcGxhY2VDaGlsZCggZWxlbSwgdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBGb3JjZSBjYWxsYmFjayBpbnZvY2F0aW9uXG5cdFx0fSwgaWdub3JlZCApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCB7XG5cdGFwcGVuZFRvOiBcImFwcGVuZFwiLFxuXHRwcmVwZW5kVG86IFwicHJlcGVuZFwiLFxuXHRpbnNlcnRCZWZvcmU6IFwiYmVmb3JlXCIsXG5cdGluc2VydEFmdGVyOiBcImFmdGVyXCIsXG5cdHJlcGxhY2VBbGw6IFwicmVwbGFjZVdpdGhcIlxufSwgZnVuY3Rpb24oIG5hbWUsIG9yaWdpbmFsICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgZWxlbXMsXG5cdFx0XHRyZXQgPSBbXSxcblx0XHRcdGluc2VydCA9IGpRdWVyeSggc2VsZWN0b3IgKSxcblx0XHRcdGxhc3QgPSBpbnNlcnQubGVuZ3RoIC0gMSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyBpIDw9IGxhc3Q7IGkrKyApIHtcblx0XHRcdGVsZW1zID0gaSA9PT0gbGFzdCA/IHRoaXMgOiB0aGlzLmNsb25lKCB0cnVlICk7XG5cdFx0XHRqUXVlcnkoIGluc2VydFsgaSBdIClbIG9yaWdpbmFsIF0oIGVsZW1zICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0Ly8gLmdldCgpIGJlY2F1c2UgcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0cHVzaC5hcHBseSggcmV0LCBlbGVtcy5nZXQoKSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggcmV0ICk7XG5cdH07XG59ICk7XG52YXIgcm1hcmdpbiA9ICggL15tYXJnaW4vICk7XG5cbnZhciBybnVtbm9ucHggPSBuZXcgUmVnRXhwKCBcIl4oXCIgKyBwbnVtICsgXCIpKD8hcHgpW2EteiVdKyRcIiwgXCJpXCIgKTtcblxudmFyIGdldFN0eWxlcyA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5LCBGaXJlZm94IDw9MzAgKCMxNTA5OCwgIzE0MTUwKVxuXHRcdC8vIElFIHRocm93cyBvbiBlbGVtZW50cyBjcmVhdGVkIGluIHBvcHVwc1xuXHRcdC8vIEZGIG1lYW53aGlsZSB0aHJvd3Mgb24gZnJhbWUgZWxlbWVudHMgdGhyb3VnaCBcImRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGVcIlxuXHRcdHZhciB2aWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXG5cdFx0aWYgKCAhdmlldyB8fCAhdmlldy5vcGVuZXIgKSB7XG5cdFx0XHR2aWV3ID0gd2luZG93O1xuXHRcdH1cblxuXHRcdHJldHVybiB2aWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0gKTtcblx0fTtcblxuXG5cbiggZnVuY3Rpb24oKSB7XG5cblx0Ly8gRXhlY3V0aW5nIGJvdGggcGl4ZWxQb3NpdGlvbiAmIGJveFNpemluZ1JlbGlhYmxlIHRlc3RzIHJlcXVpcmUgb25seSBvbmUgbGF5b3V0XG5cdC8vIHNvIHRoZXkncmUgZXhlY3V0ZWQgYXQgdGhlIHNhbWUgdGltZSB0byBzYXZlIHRoZSBzZWNvbmQgY29tcHV0YXRpb24uXG5cdGZ1bmN0aW9uIGNvbXB1dGVTdHlsZVRlc3RzKCkge1xuXG5cdFx0Ly8gVGhpcyBpcyBhIHNpbmdsZXRvbiwgd2UgbmVlZCB0byBleGVjdXRlIGl0IG9ubHkgb25jZVxuXHRcdGlmICggIWRpdiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9XG5cdFx0XHRcImJveC1zaXppbmc6Ym9yZGVyLWJveDtcIiArXG5cdFx0XHRcInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7XCIgK1xuXHRcdFx0XCJtYXJnaW46YXV0bztib3JkZXI6MXB4O3BhZGRpbmc6MXB4O1wiICtcblx0XHRcdFwidG9wOjElO3dpZHRoOjUwJVwiO1xuXHRcdGRpdi5pbm5lckhUTUwgPSBcIlwiO1xuXHRcdGRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2ICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSA0NFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9IGRpdlN0eWxlLm1hcmdpbkxlZnQgPT09IFwiMnB4XCI7XG5cdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSBkaXZTdHlsZS53aWR0aCA9PT0gXCI0cHhcIjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcblx0XHQvLyBTb21lIHN0eWxlcyBjb21lIGJhY2sgd2l0aCBwZXJjZW50YWdlIHZhbHVlcywgZXZlbiB0aG91Z2ggdGhleSBzaG91bGRuJ3Rcblx0XHRkaXYuc3R5bGUubWFyZ2luUmlnaHQgPSBcIjUwJVwiO1xuXHRcdHBpeGVsTWFyZ2luUmlnaHRWYWwgPSBkaXZTdHlsZS5tYXJnaW5SaWdodCA9PT0gXCI0cHhcIjtcblxuXHRcdGRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHQvLyBOdWxsaWZ5IHRoZSBkaXYgc28gaXQgd291bGRuJ3QgYmUgc3RvcmVkIGluIHRoZSBtZW1vcnkgYW5kXG5cdFx0Ly8gaXQgd2lsbCBhbHNvIGJlIGEgc2lnbiB0aGF0IGNoZWNrcyBhbHJlYWR5IHBlcmZvcm1lZFxuXHRcdGRpdiA9IG51bGw7XG5cdH1cblxuXHR2YXIgcGl4ZWxQb3NpdGlvblZhbCwgYm94U2l6aW5nUmVsaWFibGVWYWwsIHBpeGVsTWFyZ2luUmlnaHRWYWwsIHJlbGlhYmxlTWFyZ2luTGVmdFZhbCxcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICksXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdC8vIEZpbmlzaCBlYXJseSBpbiBsaW1pdGVkIChub24tYnJvd3NlcikgZW52aXJvbm1lbnRzXG5cdGlmICggIWRpdi5zdHlsZSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFN0eWxlIG9mIGNsb25lZCBlbGVtZW50IGFmZmVjdHMgc291cmNlIGVsZW1lbnQgY2xvbmVkICgjODkwOClcblx0ZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJjb250ZW50LWJveFwiO1xuXHRkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcIlwiO1xuXHRzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSA9IGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9PT0gXCJjb250ZW50LWJveFwiO1xuXG5cdGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gXCJib3JkZXI6MDt3aWR0aDo4cHg7aGVpZ2h0OjA7dG9wOjA7bGVmdDotOTk5OXB4O1wiICtcblx0XHRcInBhZGRpbmc6MDttYXJnaW4tdG9wOjFweDtwb3NpdGlvbjphYnNvbHV0ZVwiO1xuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIGRpdiApO1xuXG5cdGpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIHtcblx0XHRwaXhlbFBvc2l0aW9uOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcGl4ZWxQb3NpdGlvblZhbDtcblx0XHR9LFxuXHRcdGJveFNpemluZ1JlbGlhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XG5cdFx0fSxcblx0XHRwaXhlbE1hcmdpblJpZ2h0OiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcGl4ZWxNYXJnaW5SaWdodFZhbDtcblx0XHR9LFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdDogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHJlbGlhYmxlTWFyZ2luTGVmdFZhbDtcblx0XHR9XG5cdH0gKTtcbn0gKSgpO1xuXG5cbmZ1bmN0aW9uIGN1ckNTUyggZWxlbSwgbmFtZSwgY29tcHV0ZWQgKSB7XG5cdHZhciB3aWR0aCwgbWluV2lkdGgsIG1heFdpZHRoLCByZXQsXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdGNvbXB1dGVkID0gY29tcHV0ZWQgfHwgZ2V0U3R5bGVzKCBlbGVtICk7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0Ly8gZ2V0UHJvcGVydHlWYWx1ZSBpcyBvbmx5IG5lZWRlZCBmb3IgLmNzcygnZmlsdGVyJykgKCMxMjUzNylcblx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRyZXQgPSBjb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCBuYW1lICkgfHwgY29tcHV0ZWRbIG5hbWUgXTtcblxuXHRcdGlmICggcmV0ID09PSBcIlwiICYmICFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdC8vIEFuZHJvaWQgQnJvd3NlciByZXR1cm5zIHBlcmNlbnRhZ2UgZm9yIHNvbWUgdmFsdWVzLFxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXG5cdFx0Ly8gVGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5waXhlbE1hcmdpblJpZ2h0KCkgJiYgcm51bW5vbnB4LnRlc3QoIHJldCApICYmIHJtYXJnaW4udGVzdCggbmFtZSApICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXG5cdFx0XHR3aWR0aCA9IHN0eWxlLndpZHRoO1xuXHRcdFx0bWluV2lkdGggPSBzdHlsZS5taW5XaWR0aDtcblx0XHRcdG1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7XG5cblx0XHRcdC8vIFB1dCBpbiB0aGUgbmV3IHZhbHVlcyB0byBnZXQgYSBjb21wdXRlZCB2YWx1ZSBvdXRcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDtcblx0XHRcdHJldCA9IGNvbXB1dGVkLndpZHRoO1xuXG5cdFx0XHQvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzXG5cdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xuXHRcdFx0c3R5bGUubWluV2lkdGggPSBtaW5XaWR0aDtcblx0XHRcdHN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJldCAhPT0gdW5kZWZpbmVkID9cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxuXHRcdHJldCArIFwiXCIgOlxuXHRcdHJldDtcbn1cblxuXG5mdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7XG5cblx0Ly8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC5cblx0cmV0dXJuIHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBjb25kaXRpb25GbigpICkge1xuXG5cdFx0XHRcdC8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZVxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi5cblx0XHRcdHJldHVybiAoIHRoaXMuZ2V0ID0gaG9va0ZuICkuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0fTtcbn1cblxuXG52YXJcblxuXHQvLyBTd2FwcGFibGUgaWYgZGlzcGxheSBpcyBub25lIG9yIHN0YXJ0cyB3aXRoIHRhYmxlXG5cdC8vIGV4Y2VwdCBcInRhYmxlXCIsIFwidGFibGUtY2VsbFwiLCBvciBcInRhYmxlLWNhcHRpb25cIlxuXHQvLyBTZWUgaGVyZSBmb3IgZGlzcGxheSB2YWx1ZXM6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvQ1NTL2Rpc3BsYXlcblx0cmRpc3BsYXlzd2FwID0gL14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLFxuXHRjc3NTaG93ID0geyBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLCB2aXNpYmlsaXR5OiBcImhpZGRlblwiLCBkaXNwbGF5OiBcImJsb2NrXCIgfSxcblx0Y3NzTm9ybWFsVHJhbnNmb3JtID0ge1xuXHRcdGxldHRlclNwYWNpbmc6IFwiMFwiLFxuXHRcdGZvbnRXZWlnaHQ6IFwiNDAwXCJcblx0fSxcblxuXHRjc3NQcmVmaXhlcyA9IFsgXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiIF0sXG5cdGVtcHR5U3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkuc3R5bGU7XG5cbi8vIFJldHVybiBhIGNzcyBwcm9wZXJ0eSBtYXBwZWQgdG8gYSBwb3RlbnRpYWxseSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcbmZ1bmN0aW9uIHZlbmRvclByb3BOYW1lKCBuYW1lICkge1xuXG5cdC8vIFNob3J0Y3V0IGZvciBuYW1lcyB0aGF0IGFyZSBub3QgdmVuZG9yIHByZWZpeGVkXG5cdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdHJldHVybiBuYW1lO1xuXHR9XG5cblx0Ly8gQ2hlY2sgZm9yIHZlbmRvciBwcmVmaXhlZCBuYW1lc1xuXHR2YXIgY2FwTmFtZSA9IG5hbWVbIDAgXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xuXHRcdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHNldFBvc2l0aXZlTnVtYmVyKCBlbGVtLCB2YWx1ZSwgc3VidHJhY3QgKSB7XG5cblx0Ly8gQW55IHJlbGF0aXZlICgrLy0pIHZhbHVlcyBoYXZlIGFscmVhZHkgYmVlblxuXHQvLyBub3JtYWxpemVkIGF0IHRoaXMgcG9pbnRcblx0dmFyIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICk7XG5cdHJldHVybiBtYXRjaGVzID9cblxuXHRcdC8vIEd1YXJkIGFnYWluc3QgdW5kZWZpbmVkIFwic3VidHJhY3RcIiwgZS5nLiwgd2hlbiB1c2VkIGFzIGluIGNzc0hvb2tzXG5cdFx0TWF0aC5tYXgoIDAsIG1hdGNoZXNbIDIgXSAtICggc3VidHJhY3QgfHwgMCApICkgKyAoIG1hdGNoZXNbIDMgXSB8fCBcInB4XCIgKSA6XG5cdFx0dmFsdWU7XG59XG5cbmZ1bmN0aW9uIGF1Z21lbnRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBuYW1lLCBleHRyYSwgaXNCb3JkZXJCb3gsIHN0eWxlcyApIHtcblx0dmFyIGkgPSBleHRyYSA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApID9cblxuXHRcdC8vIElmIHdlIGFscmVhZHkgaGF2ZSB0aGUgcmlnaHQgbWVhc3VyZW1lbnQsIGF2b2lkIGF1Z21lbnRhdGlvblxuXHRcdDQgOlxuXG5cdFx0Ly8gT3RoZXJ3aXNlIGluaXRpYWxpemUgZm9yIGhvcml6b250YWwgb3IgdmVydGljYWwgcHJvcGVydGllc1xuXHRcdG5hbWUgPT09IFwid2lkdGhcIiA/IDEgOiAwLFxuXG5cdFx0dmFsID0gMDtcblxuXHRmb3IgKCA7IGkgPCA0OyBpICs9IDIgKSB7XG5cblx0XHQvLyBCb3RoIGJveCBtb2RlbHMgZXhjbHVkZSBtYXJnaW4sIHNvIGFkZCBpdCBpZiB3ZSB3YW50IGl0XG5cdFx0aWYgKCBleHRyYSA9PT0gXCJtYXJnaW5cIiApIHtcblx0XHRcdHZhbCArPSBqUXVlcnkuY3NzKCBlbGVtLCBleHRyYSArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBzdHlsZXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIGlzQm9yZGVyQm94ICkge1xuXG5cdFx0XHQvLyBib3JkZXItYm94IGluY2x1ZGVzIHBhZGRpbmcsIHNvIHJlbW92ZSBpdCBpZiB3ZSB3YW50IGNvbnRlbnRcblx0XHRcdGlmICggZXh0cmEgPT09IFwiY29udGVudFwiICkge1xuXHRcdFx0XHR2YWwgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEF0IHRoaXMgcG9pbnQsIGV4dHJhIGlzbid0IGJvcmRlciBub3IgbWFyZ2luLCBzbyByZW1vdmUgYm9yZGVyXG5cdFx0XHRpZiAoIGV4dHJhICE9PSBcIm1hcmdpblwiICkge1xuXHRcdFx0XHR2YWwgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBBdCB0aGlzIHBvaW50LCBleHRyYSBpc24ndCBjb250ZW50LCBzbyBhZGQgcGFkZGluZ1xuXHRcdFx0dmFsICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwicGFkZGluZ1wiICsgY3NzRXhwYW5kWyBpIF0sIHRydWUsIHN0eWxlcyApO1xuXG5cdFx0XHQvLyBBdCB0aGlzIHBvaW50LCBleHRyYSBpc24ndCBjb250ZW50IG5vciBwYWRkaW5nLCBzbyBhZGQgYm9yZGVyXG5cdFx0XHRpZiAoIGV4dHJhICE9PSBcInBhZGRpbmdcIiApIHtcblx0XHRcdFx0dmFsICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHZhbDtcbn1cblxuZnVuY3Rpb24gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgbmFtZSwgZXh0cmEgKSB7XG5cblx0Ly8gU3RhcnQgd2l0aCBvZmZzZXQgcHJvcGVydHksIHdoaWNoIGlzIGVxdWl2YWxlbnQgdG8gdGhlIGJvcmRlci1ib3ggdmFsdWVcblx0dmFyIHZhbCxcblx0XHR2YWx1ZUlzQm9yZGVyQm94ID0gdHJ1ZSxcblx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblx0XHRpc0JvcmRlckJveCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCI7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIFJ1bm5pbmcgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IG9uIGEgZGlzY29ubmVjdGVkIG5vZGVcblx0Ly8gaW4gSUUgdGhyb3dzIGFuIGVycm9yLlxuXHRpZiAoIGVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cdFx0dmFsID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVsgbmFtZSBdO1xuXHR9XG5cblx0Ly8gU29tZSBub24taHRtbCBlbGVtZW50cyByZXR1cm4gdW5kZWZpbmVkIGZvciBvZmZzZXRXaWR0aCwgc28gY2hlY2sgZm9yIG51bGwvdW5kZWZpbmVkXG5cdC8vIHN2ZyAtIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY0OTI4NVxuXHQvLyBNYXRoTUwgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD00OTE2Njhcblx0aWYgKCB2YWwgPD0gMCB8fCB2YWwgPT0gbnVsbCApIHtcblxuXHRcdC8vIEZhbGwgYmFjayB0byBjb21wdXRlZCB0aGVuIHVuY29tcHV0ZWQgY3NzIGlmIG5lY2Vzc2FyeVxuXHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgbmFtZSwgc3R5bGVzICk7XG5cdFx0aWYgKCB2YWwgPCAwIHx8IHZhbCA9PSBudWxsICkge1xuXHRcdFx0dmFsID0gZWxlbS5zdHlsZVsgbmFtZSBdO1xuXHRcdH1cblxuXHRcdC8vIENvbXB1dGVkIHVuaXQgaXMgbm90IHBpeGVscy4gU3RvcCBoZXJlIGFuZCByZXR1cm4uXG5cdFx0aWYgKCBybnVtbm9ucHgudGVzdCggdmFsICkgKSB7XG5cdFx0XHRyZXR1cm4gdmFsO1xuXHRcdH1cblxuXHRcdC8vIENoZWNrIGZvciBzdHlsZSBpbiBjYXNlIGEgYnJvd3NlciB3aGljaCByZXR1cm5zIHVucmVsaWFibGUgdmFsdWVzXG5cdFx0Ly8gZm9yIGdldENvbXB1dGVkU3R5bGUgc2lsZW50bHkgZmFsbHMgYmFjayB0byB0aGUgcmVsaWFibGUgZWxlbS5zdHlsZVxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveCAmJlxuXHRcdFx0KCBzdXBwb3J0LmJveFNpemluZ1JlbGlhYmxlKCkgfHwgdmFsID09PSBlbGVtLnN0eWxlWyBuYW1lIF0gKTtcblxuXHRcdC8vIE5vcm1hbGl6ZSBcIlwiLCBhdXRvLCBhbmQgcHJlcGFyZSBmb3IgZXh0cmFcblx0XHR2YWwgPSBwYXJzZUZsb2F0KCB2YWwgKSB8fCAwO1xuXHR9XG5cblx0Ly8gVXNlIHRoZSBhY3RpdmUgYm94LXNpemluZyBtb2RlbCB0byBhZGQvc3VidHJhY3QgaXJyZWxldmFudCBzdHlsZXNcblx0cmV0dXJuICggdmFsICtcblx0XHRhdWdtZW50V2lkdGhPckhlaWdodChcblx0XHRcdGVsZW0sXG5cdFx0XHRuYW1lLFxuXHRcdFx0ZXh0cmEgfHwgKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApLFxuXHRcdFx0dmFsdWVJc0JvcmRlckJveCxcblx0XHRcdHN0eWxlc1xuXHRcdClcblx0KSArIFwicHhcIjtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGluZyB0aGUgZGVmYXVsdFxuXHQvLyBiZWhhdmlvciBvZiBnZXR0aW5nIGFuZCBzZXR0aW5nIGEgc3R5bGUgcHJvcGVydHlcblx0Y3NzSG9va3M6IHtcblx0XHRvcGFjaXR5OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHRcdC8vIFdlIHNob3VsZCBhbHdheXMgZ2V0IGEgbnVtYmVyIGJhY2sgZnJvbSBvcGFjaXR5XG5cdFx0XHRcdFx0dmFyIHJldCA9IGN1ckNTUyggZWxlbSwgXCJvcGFjaXR5XCIgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmV0ID09PSBcIlwiID8gXCIxXCIgOiByZXQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0Ly8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgXCJweFwiIHRvIHRoZXNlIHBvc3NpYmx5LXVuaXRsZXNzIHByb3BlcnRpZXNcblx0Y3NzTnVtYmVyOiB7XG5cdFx0XCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiB0cnVlLFxuXHRcdFwiY29sdW1uQ291bnRcIjogdHJ1ZSxcblx0XHRcImZpbGxPcGFjaXR5XCI6IHRydWUsXG5cdFx0XCJmbGV4R3Jvd1wiOiB0cnVlLFxuXHRcdFwiZmxleFNocmlua1wiOiB0cnVlLFxuXHRcdFwiZm9udFdlaWdodFwiOiB0cnVlLFxuXHRcdFwibGluZUhlaWdodFwiOiB0cnVlLFxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwib3JkZXJcIjogdHJ1ZSxcblx0XHRcIm9ycGhhbnNcIjogdHJ1ZSxcblx0XHRcIndpZG93c1wiOiB0cnVlLFxuXHRcdFwiekluZGV4XCI6IHRydWUsXG5cdFx0XCJ6b29tXCI6IHRydWVcblx0fSxcblxuXHQvLyBBZGQgaW4gcHJvcGVydGllcyB3aG9zZSBuYW1lcyB5b3Ugd2lzaCB0byBmaXggYmVmb3JlXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcblx0Y3NzUHJvcHM6IHtcblx0XHRcImZsb2F0XCI6IFwiY3NzRmxvYXRcIlxuXHR9LFxuXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXG5cdHN0eWxlOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIGV4dHJhICkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGpRdWVyeS5jYW1lbENhc2UoIG5hbWUgKSxcblx0XHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRcdG5hbWUgPSBqUXVlcnkuY3NzUHJvcHNbIG9yaWdOYW1lIF0gfHxcblx0XHRcdCggalF1ZXJ5LmNzc1Byb3BzWyBvcmlnTmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG9yaWdOYW1lICkgfHwgb3JpZ05hbWUgKTtcblxuXHRcdC8vIEdldHMgaG9vayBmb3IgdGhlIHByZWZpeGVkIHZlcnNpb24sIHRoZW4gdW5wcmVmaXhlZCB2ZXJzaW9uXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XG5cblx0XHQvLyBDaGVjayBpZiB3ZSdyZSBzZXR0aW5nIGEgdmFsdWVcblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR0eXBlID0gdHlwZW9mIHZhbHVlO1xuXG5cdFx0XHQvLyBDb252ZXJ0IFwiKz1cIiBvciBcIi09XCIgdG8gcmVsYXRpdmUgbnVtYmVycyAoIzczNDUpXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwic3RyaW5nXCIgJiYgKCByZXQgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJiByZXRbIDEgXSApIHtcblx0XHRcdFx0dmFsdWUgPSBhZGp1c3RDU1MoIGVsZW0sIG5hbWUsIHJldCApO1xuXG5cdFx0XHRcdC8vIEZpeGVzIGJ1ZyAjOTIzN1xuXHRcdFx0XHR0eXBlID0gXCJudW1iZXJcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgbnVsbCBhbmQgTmFOIHZhbHVlcyBhcmVuJ3Qgc2V0ICgjNzExNilcblx0XHRcdGlmICggdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgYSBudW1iZXIgd2FzIHBhc3NlZCBpbiwgYWRkIHRoZSB1bml0IChleGNlcHQgZm9yIGNlcnRhaW4gQ1NTIHByb3BlcnRpZXMpXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIGJhY2tncm91bmQtKiBwcm9wcyBhZmZlY3Qgb3JpZ2luYWwgY2xvbmUncyB2YWx1ZXNcblx0XHRcdGlmICggIXN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlICYmIHZhbHVlID09PSBcIlwiICYmIG5hbWUuaW5kZXhPZiggXCJiYWNrZ3JvdW5kXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IFwiaW5oZXJpdFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkLCB1c2UgdGhhdCB2YWx1ZSwgb3RoZXJ3aXNlIGp1c3Qgc2V0IHRoZSBzcGVjaWZpZWQgdmFsdWVcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fFxuXHRcdFx0XHQoIHZhbHVlID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIG5vbi1jb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIGZhbHNlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZhbHVlIGZyb20gdGhlIHN0eWxlIG9iamVjdFxuXHRcdFx0cmV0dXJuIHN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXHR9LFxuXG5cdGNzczogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGV4dHJhLCBzdHlsZXMgKSB7XG5cdFx0dmFyIHZhbCwgbnVtLCBob29rcyxcblx0XHRcdG9yaWdOYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0bmFtZSA9IGpRdWVyeS5jc3NQcm9wc1sgb3JpZ05hbWUgXSB8fFxuXHRcdFx0KCBqUXVlcnkuY3NzUHJvcHNbIG9yaWdOYW1lIF0gPSB2ZW5kb3JQcm9wTmFtZSggb3JpZ05hbWUgKSB8fCBvcmlnTmFtZSApO1xuXG5cdFx0Ly8gVHJ5IHByZWZpeGVkIG5hbWUgZm9sbG93ZWQgYnkgdGhlIHVucHJlZml4ZWQgbmFtZVxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWwgPSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlLCBpZiBhIHdheSB0byBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGV4aXN0cywgdXNlIHRoYXRcblx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IFwibm9ybWFsXCIgdG8gY29tcHV0ZWQgdmFsdWVcblx0XHRpZiAoIHZhbCA9PT0gXCJub3JtYWxcIiAmJiBuYW1lIGluIGNzc05vcm1hbFRyYW5zZm9ybSApIHtcblx0XHRcdHZhbCA9IGNzc05vcm1hbFRyYW5zZm9ybVsgbmFtZSBdO1xuXHRcdH1cblxuXHRcdC8vIE1ha2UgbnVtZXJpYyBpZiBmb3JjZWQgb3IgYSBxdWFsaWZpZXIgd2FzIHByb3ZpZGVkIGFuZCB2YWwgbG9va3MgbnVtZXJpY1xuXHRcdGlmICggZXh0cmEgPT09IFwiXCIgfHwgZXh0cmEgKSB7XG5cdFx0XHRudW0gPSBwYXJzZUZsb2F0KCB2YWwgKTtcblx0XHRcdHJldHVybiBleHRyYSA9PT0gdHJ1ZSB8fCBpc0Zpbml0ZSggbnVtICkgPyBudW0gfHwgMCA6IHZhbDtcblx0XHR9XG5cdFx0cmV0dXJuIHZhbDtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImhlaWdodFwiLCBcIndpZHRoXCIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkLCBleHRyYSApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cblx0XHRcdFx0Ly8gQ2VydGFpbiBlbGVtZW50cyBjYW4gaGF2ZSBkaW1lbnNpb24gaW5mbyBpZiB3ZSBpbnZpc2libHkgc2hvdyB0aGVtXG5cdFx0XHRcdC8vIGJ1dCBpdCBtdXN0IGhhdmUgYSBjdXJyZW50IGRpc3BsYXkgc3R5bGUgdGhhdCB3b3VsZCBiZW5lZml0XG5cdFx0XHRcdHJldHVybiByZGlzcGxheXN3YXAudGVzdCggalF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSApICYmXG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgOCtcblx0XHRcdFx0XHQvLyBUYWJsZSBjb2x1bW5zIGluIFNhZmFyaSBoYXZlIG5vbi16ZXJvIG9mZnNldFdpZHRoICYgemVyb1xuXHRcdFx0XHRcdC8vIGdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoIHVubGVzcyBkaXNwbGF5IGlzIGNoYW5nZWQuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdFx0XHRcdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYSBkaXNjb25uZWN0ZWQgbm9kZVxuXHRcdFx0XHRcdC8vIGluIElFIHRocm93cyBhbiBlcnJvci5cblx0XHRcdFx0XHQoICFlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoIHx8ICFlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoICkgP1xuXHRcdFx0XHRcdFx0c3dhcCggZWxlbSwgY3NzU2hvdywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBuYW1lLCBleHRyYSApO1xuXHRcdFx0XHRcdFx0fSApIDpcblx0XHRcdFx0XHRcdGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIG5hbWUsIGV4dHJhICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBleHRyYSApIHtcblx0XHRcdHZhciBtYXRjaGVzLFxuXHRcdFx0XHRzdHlsZXMgPSBleHRyYSAmJiBnZXRTdHlsZXMoIGVsZW0gKSxcblx0XHRcdFx0c3VidHJhY3QgPSBleHRyYSAmJiBhdWdtZW50V2lkdGhPckhlaWdodChcblx0XHRcdFx0XHRlbGVtLFxuXHRcdFx0XHRcdG5hbWUsXG5cdFx0XHRcdFx0ZXh0cmEsXG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHRcdFx0XHRzdHlsZXNcblx0XHRcdFx0KTtcblxuXHRcdFx0Ly8gQ29udmVydCB0byBwaXhlbHMgaWYgdmFsdWUgYWRqdXN0bWVudCBpcyBuZWVkZWRcblx0XHRcdGlmICggc3VidHJhY3QgJiYgKCBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiZcblx0XHRcdFx0KCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgIT09IFwicHhcIiApIHtcblxuXHRcdFx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICk7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuY3NzSG9va3MubWFyZ2luTGVmdCA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5yZWxpYWJsZU1hcmdpbkxlZnQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuICggcGFyc2VGbG9hdCggY3VyQ1NTKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiApICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC1cblx0XHRcdFx0XHRzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuXHRcdFx0XHRcdH0gKVxuXHRcdFx0XHQpICsgXCJweFwiO1xuXHRcdH1cblx0fVxuKTtcblxuLy8gVGhlc2UgaG9va3MgYXJlIHVzZWQgYnkgYW5pbWF0ZSB0byBleHBhbmQgcHJvcGVydGllc1xualF1ZXJ5LmVhY2goIHtcblx0bWFyZ2luOiBcIlwiLFxuXHRwYWRkaW5nOiBcIlwiLFxuXHRib3JkZXI6IFwiV2lkdGhcIlxufSwgZnVuY3Rpb24oIHByZWZpeCwgc3VmZml4ICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdID0ge1xuXHRcdGV4cGFuZDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGkgPSAwLFxuXHRcdFx0XHRleHBhbmRlZCA9IHt9LFxuXG5cdFx0XHRcdC8vIEFzc3VtZXMgYSBzaW5nbGUgbnVtYmVyIGlmIG5vdCBhIHN0cmluZ1xuXHRcdFx0XHRwYXJ0cyA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IHZhbHVlLnNwbGl0KCBcIiBcIiApIDogWyB2YWx1ZSBdO1xuXG5cdFx0XHRmb3IgKCA7IGkgPCA0OyBpKysgKSB7XG5cdFx0XHRcdGV4cGFuZGVkWyBwcmVmaXggKyBjc3NFeHBhbmRbIGkgXSArIHN1ZmZpeCBdID1cblx0XHRcdFx0XHRwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBleHBhbmRlZDtcblx0XHR9XG5cdH07XG5cblx0aWYgKCAhcm1hcmdpbi50ZXN0KCBwcmVmaXggKSApIHtcblx0XHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdLnNldCA9IHNldFBvc2l0aXZlTnVtYmVyO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0Y3NzOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdFx0dmFyIHN0eWxlcywgbGVuLFxuXHRcdFx0XHRtYXAgPSB7fSxcblx0XHRcdFx0aSA9IDA7XG5cblx0XHRcdGlmICggalF1ZXJ5LmlzQXJyYXkoIG5hbWUgKSApIHtcblx0XHRcdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICk7XG5cdFx0XHRcdGxlbiA9IG5hbWUubGVuZ3RoO1xuXG5cdFx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdG1hcFsgbmFtZVsgaSBdIF0gPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lWyBpIF0sIGZhbHNlLCBzdHlsZXMgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBtYXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lLCB2YWx1ZSApIDpcblx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApO1xuXHRcdH0sIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9XG59ICk7XG5cblxuZnVuY3Rpb24gVHdlZW4oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICkge1xuXHRyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApO1xufVxualF1ZXJ5LlR3ZWVuID0gVHdlZW47XG5cblR3ZWVuLnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IFR3ZWVuLFxuXHRpbml0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQgKSB7XG5cdFx0dGhpcy5lbGVtID0gZWxlbTtcblx0XHR0aGlzLnByb3AgPSBwcm9wO1xuXHRcdHRoaXMuZWFzaW5nID0gZWFzaW5nIHx8IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHQ7XG5cdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcblx0XHR0aGlzLnN0YXJ0ID0gdGhpcy5ub3cgPSB0aGlzLmN1cigpO1xuXHRcdHRoaXMuZW5kID0gZW5kO1xuXHRcdHRoaXMudW5pdCA9IHVuaXQgfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdH0sXG5cdGN1cjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdHJldHVybiBob29rcyAmJiBob29rcy5nZXQgP1xuXHRcdFx0aG9va3MuZ2V0KCB0aGlzICkgOlxuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LmdldCggdGhpcyApO1xuXHR9LFxuXHRydW46IGZ1bmN0aW9uKCBwZXJjZW50ICkge1xuXHRcdHZhciBlYXNlZCxcblx0XHRcdGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmR1cmF0aW9uICkge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IGpRdWVyeS5lYXNpbmdbIHRoaXMuZWFzaW5nIF0oXG5cdFx0XHRcdHBlcmNlbnQsIHRoaXMub3B0aW9ucy5kdXJhdGlvbiAqIHBlcmNlbnQsIDAsIDEsIHRoaXMub3B0aW9ucy5kdXJhdGlvblxuXHRcdFx0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IHBlcmNlbnQ7XG5cdFx0fVxuXHRcdHRoaXMubm93ID0gKCB0aGlzLmVuZCAtIHRoaXMuc3RhcnQgKSAqIGVhc2VkICsgdGhpcy5zdGFydDtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnN0ZXAgKSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBob29rcy5zZXQgKSB7XG5cdFx0XHRob29rcy5zZXQoIHRoaXMgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LnNldCggdGhpcyApO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcztcblx0fVxufTtcblxuVHdlZW4ucHJvdG90eXBlLmluaXQucHJvdG90eXBlID0gVHdlZW4ucHJvdG90eXBlO1xuXG5Ud2Vlbi5wcm9wSG9va3MgPSB7XG5cdF9kZWZhdWx0OiB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0XHR2YXIgcmVzdWx0O1xuXG5cdFx0XHQvLyBVc2UgYSBwcm9wZXJ0eSBvbiB0aGUgZWxlbWVudCBkaXJlY3RseSB3aGVuIGl0IGlzIG5vdCBhIERPTSBlbGVtZW50LFxuXHRcdFx0Ly8gb3Igd2hlbiB0aGVyZSBpcyBubyBtYXRjaGluZyBzdHlsZSBwcm9wZXJ0eSB0aGF0IGV4aXN0cy5cblx0XHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fFxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gIT0gbnVsbCAmJiB0d2Vlbi5lbGVtLnN0eWxlWyB0d2Vlbi5wcm9wIF0gPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUGFzc2luZyBhbiBlbXB0eSBzdHJpbmcgYXMgYSAzcmQgcGFyYW1ldGVyIHRvIC5jc3Mgd2lsbCBhdXRvbWF0aWNhbGx5XG5cdFx0XHQvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLlxuXHRcdFx0Ly8gU2ltcGxlIHZhbHVlcyBzdWNoIGFzIFwiMTBweFwiIGFyZSBwYXJzZWQgdG8gRmxvYXQ7XG5cdFx0XHQvLyBjb21wbGV4IHZhbHVlcyBzdWNoIGFzIFwicm90YXRlKDFyYWQpXCIgYXJlIHJldHVybmVkIGFzLWlzLlxuXHRcdFx0cmVzdWx0ID0galF1ZXJ5LmNzcyggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgXCJcIiApO1xuXG5cdFx0XHQvLyBFbXB0eSBzdHJpbmdzLCBudWxsLCB1bmRlZmluZWQgYW5kIFwiYXV0b1wiIGFyZSBjb252ZXJ0ZWQgdG8gMC5cblx0XHRcdHJldHVybiAhcmVzdWx0IHx8IHJlc3VsdCA9PT0gXCJhdXRvXCIgPyAwIDogcmVzdWx0O1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cblx0XHRcdC8vIFVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0LlxuXHRcdFx0Ly8gVXNlIGNzc0hvb2sgaWYgaXRzIHRoZXJlLlxuXHRcdFx0Ly8gVXNlIC5zdHlsZSBpZiBhdmFpbGFibGUgYW5kIHVzZSBwbGFpbiBwcm9wZXJ0aWVzIHdoZXJlIGF2YWlsYWJsZS5cblx0XHRcdGlmICggalF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSApIHtcblx0XHRcdFx0alF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSggdHdlZW4gKTtcblx0XHRcdH0gZWxzZSBpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCB0d2Vlbi5lbGVtLnN0eWxlWyBqUXVlcnkuY3NzUHJvcHNbIHR3ZWVuLnByb3AgXSBdICE9IG51bGwgfHxcblx0XHRcdFx0XHRqUXVlcnkuY3NzSG9va3NbIHR3ZWVuLnByb3AgXSApICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBQYW5pYyBiYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIHRoaW5ncyBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3AgPSBUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsTGVmdCA9IHtcblx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5lYXNpbmcgPSB7XG5cdGxpbmVhcjogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIHA7XG5cdH0sXG5cdHN3aW5nOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJICkgLyAyO1xuXHR9LFxuXHRfZGVmYXVsdDogXCJzd2luZ1wiXG59O1xuXG5qUXVlcnkuZnggPSBUd2Vlbi5wcm90b3R5cGUuaW5pdDtcblxuLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnRcbmpRdWVyeS5meC5zdGVwID0ge307XG5cblxuXG5cbnZhclxuXHRmeE5vdywgdGltZXJJZCxcblx0cmZ4dHlwZXMgPSAvXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sXG5cdHJydW4gPSAvcXVldWVIb29rcyQvO1xuXG5mdW5jdGlvbiByYWYoKSB7XG5cdGlmICggdGltZXJJZCApIHtcblx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKCByYWYgKTtcblx0XHRqUXVlcnkuZngudGljaygpO1xuXHR9XG59XG5cbi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHlcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0ZnhOb3cgPSB1bmRlZmluZWQ7XG5cdH0gKTtcblx0cmV0dXJuICggZnhOb3cgPSBqUXVlcnkubm93KCkgKTtcbn1cblxuLy8gR2VuZXJhdGUgcGFyYW1ldGVycyB0byBjcmVhdGUgYSBzdGFuZGFyZCBhbmltYXRpb25cbmZ1bmN0aW9uIGdlbkZ4KCB0eXBlLCBpbmNsdWRlV2lkdGggKSB7XG5cdHZhciB3aGljaCxcblx0XHRpID0gMCxcblx0XHRhdHRycyA9IHsgaGVpZ2h0OiB0eXBlIH07XG5cblx0Ly8gSWYgd2UgaW5jbHVkZSB3aWR0aCwgc3RlcCB2YWx1ZSBpcyAxIHRvIGRvIGFsbCBjc3NFeHBhbmQgdmFsdWVzLFxuXHQvLyBvdGhlcndpc2Ugc3RlcCB2YWx1ZSBpcyAyIHRvIHNraXAgb3ZlciBMZWZ0IGFuZCBSaWdodFxuXHRpbmNsdWRlV2lkdGggPSBpbmNsdWRlV2lkdGggPyAxIDogMDtcblx0Zm9yICggOyBpIDwgNDsgaSArPSAyIC0gaW5jbHVkZVdpZHRoICkge1xuXHRcdHdoaWNoID0gY3NzRXhwYW5kWyBpIF07XG5cdFx0YXR0cnNbIFwibWFyZ2luXCIgKyB3aGljaCBdID0gYXR0cnNbIFwicGFkZGluZ1wiICsgd2hpY2ggXSA9IHR5cGU7XG5cdH1cblxuXHRpZiAoIGluY2x1ZGVXaWR0aCApIHtcblx0XHRhdHRycy5vcGFjaXR5ID0gYXR0cnMud2lkdGggPSB0eXBlO1xuXHR9XG5cblx0cmV0dXJuIGF0dHJzO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVUd2VlbiggdmFsdWUsIHByb3AsIGFuaW1hdGlvbiApIHtcblx0dmFyIHR3ZWVuLFxuXHRcdGNvbGxlY3Rpb24gPSAoIEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdICkuY29uY2F0KCBBbmltYXRpb24udHdlZW5lcnNbIFwiKlwiIF0gKSxcblx0XHRpbmRleCA9IDAsXG5cdFx0bGVuZ3RoID0gY29sbGVjdGlvbi5sZW5ndGg7XG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0aWYgKCAoIHR3ZWVuID0gY29sbGVjdGlvblsgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIHByb3AsIHZhbHVlICkgKSApIHtcblxuXHRcdFx0Ly8gV2UncmUgZG9uZSB3aXRoIHRoaXMgcHJvcGVydHlcblx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gZGVmYXVsdFByZWZpbHRlciggZWxlbSwgcHJvcHMsIG9wdHMgKSB7XG5cdHZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCBob29rcywgb2xkZmlyZSwgcHJvcFR3ZWVuLCByZXN0b3JlRGlzcGxheSwgZGlzcGxheSxcblx0XHRpc0JveCA9IFwid2lkdGhcIiBpbiBwcm9wcyB8fCBcImhlaWdodFwiIGluIHByb3BzLFxuXHRcdGFuaW0gPSB0aGlzLFxuXHRcdG9yaWcgPSB7fSxcblx0XHRzdHlsZSA9IGVsZW0uc3R5bGUsXG5cdFx0aGlkZGVuID0gZWxlbS5ub2RlVHlwZSAmJiBpc0hpZGRlbldpdGhpblRyZWUoIGVsZW0gKSxcblx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJmeHNob3dcIiApO1xuXG5cdC8vIFF1ZXVlLXNraXBwaW5nIGFuaW1hdGlvbnMgaGlqYWNrIHRoZSBmeCBob29rc1xuXHRpZiAoICFvcHRzLnF1ZXVlICkge1xuXHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCBcImZ4XCIgKTtcblx0XHRpZiAoIGhvb2tzLnVucXVldWVkID09IG51bGwgKSB7XG5cdFx0XHRob29rcy51bnF1ZXVlZCA9IDA7XG5cdFx0XHRvbGRmaXJlID0gaG9va3MuZW1wdHkuZmlyZTtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhaG9va3MudW5xdWV1ZWQgKSB7XG5cdFx0XHRcdFx0b2xkZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdH1cblx0XHRob29rcy51bnF1ZXVlZCsrO1xuXG5cdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbnN1cmUgdGhlIGNvbXBsZXRlIGhhbmRsZXIgaXMgY2FsbGVkIGJlZm9yZSB0aGlzIGNvbXBsZXRlc1xuXHRcdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRob29rcy51bnF1ZXVlZC0tO1xuXHRcdFx0XHRpZiAoICFqUXVlcnkucXVldWUoIGVsZW0sIFwiZnhcIiApLmxlbmd0aCApIHtcblx0XHRcdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBEZXRlY3Qgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0Zm9yICggcHJvcCBpbiBwcm9wcyApIHtcblx0XHR2YWx1ZSA9IHByb3BzWyBwcm9wIF07XG5cdFx0aWYgKCByZnh0eXBlcy50ZXN0KCB2YWx1ZSApICkge1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBwcm9wIF07XG5cdFx0XHR0b2dnbGUgPSB0b2dnbGUgfHwgdmFsdWUgPT09IFwidG9nZ2xlXCI7XG5cdFx0XHRpZiAoIHZhbHVlID09PSAoIGhpZGRlbiA/IFwiaGlkZVwiIDogXCJzaG93XCIgKSApIHtcblxuXHRcdFx0XHQvLyBQcmV0ZW5kIHRvIGJlIGhpZGRlbiBpZiB0aGlzIGlzIGEgXCJzaG93XCIgYW5kXG5cdFx0XHRcdC8vIHRoZXJlIGlzIHN0aWxsIGRhdGEgZnJvbSBhIHN0b3BwZWQgc2hvdy9oaWRlXG5cdFx0XHRcdGlmICggdmFsdWUgPT09IFwic2hvd1wiICYmIGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRoaWRkZW4gPSB0cnVlO1xuXG5cdFx0XHRcdC8vIElnbm9yZSBhbGwgb3RoZXIgbm8tb3Agc2hvdy9oaWRlIGRhdGFcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0b3JpZ1sgcHJvcCBdID0gZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSB8fCBqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBCYWlsIG91dCBpZiB0aGlzIGlzIGEgbm8tb3AgbGlrZSAuaGlkZSgpLmhpZGUoKVxuXHRwcm9wVHdlZW4gPSAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3BzICk7XG5cdGlmICggIXByb3BUd2VlbiAmJiBqUXVlcnkuaXNFbXB0eU9iamVjdCggb3JpZyApICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFJlc3RyaWN0IFwib3ZlcmZsb3dcIiBhbmQgXCJkaXNwbGF5XCIgc3R5bGVzIGR1cmluZyBib3ggYW5pbWF0aW9uc1xuXHRpZiAoIGlzQm94ICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSwgRWRnZSAxMiAtIDEzXG5cdFx0Ly8gUmVjb3JkIGFsbCAzIG92ZXJmbG93IGF0dHJpYnV0ZXMgYmVjYXVzZSBJRSBkb2VzIG5vdCBpbmZlciB0aGUgc2hvcnRoYW5kXG5cdFx0Ly8gZnJvbSBpZGVudGljYWxseS12YWx1ZWQgb3ZlcmZsb3dYIGFuZCBvdmVyZmxvd1lcblx0XHRvcHRzLm92ZXJmbG93ID0gWyBzdHlsZS5vdmVyZmxvdywgc3R5bGUub3ZlcmZsb3dYLCBzdHlsZS5vdmVyZmxvd1kgXTtcblxuXHRcdC8vIElkZW50aWZ5IGEgZGlzcGxheSB0eXBlLCBwcmVmZXJyaW5nIG9sZCBzaG93L2hpZGUgZGF0YSBvdmVyIHRoZSBDU1MgY2FzY2FkZVxuXHRcdHJlc3RvcmVEaXNwbGF5ID0gZGF0YVNob3cgJiYgZGF0YVNob3cuZGlzcGxheTtcblx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHR9XG5cdFx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiApIHtcblx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgKSB7XG5cdFx0XHRcdGRpc3BsYXkgPSByZXN0b3JlRGlzcGxheTtcblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gR2V0IG5vbmVtcHR5IHZhbHVlKHMpIGJ5IHRlbXBvcmFyaWx5IGZvcmNpbmcgdmlzaWJpbGl0eVxuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0sIHRydWUgKTtcblx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXkgfHwgcmVzdG9yZURpc3BsYXk7XG5cdFx0XHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBbmltYXRlIGlubGluZSBlbGVtZW50cyBhcyBpbmxpbmUtYmxvY2tcblx0XHRpZiAoIGRpc3BsYXkgPT09IFwiaW5saW5lXCIgfHwgZGlzcGxheSA9PT0gXCJpbmxpbmUtYmxvY2tcIiAmJiByZXN0b3JlRGlzcGxheSAhPSBudWxsICkge1xuXHRcdFx0aWYgKCBqUXVlcnkuY3NzKCBlbGVtLCBcImZsb2F0XCIgKSA9PT0gXCJub25lXCIgKSB7XG5cblx0XHRcdFx0Ly8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgZGlzcGxheSB2YWx1ZSBhdCB0aGUgZW5kIG9mIHB1cmUgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0XHRcdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0XHRcdGFuaW0uZG9uZSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRzdHlsZS5kaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdGlmICggcmVzdG9yZURpc3BsYXkgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdGRpc3BsYXkgPSBzdHlsZS5kaXNwbGF5O1xuXHRcdFx0XHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkaXNwbGF5ID09PSBcIm5vbmVcIiA/IFwiXCIgOiBkaXNwbGF5O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRzdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmUtYmxvY2tcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIG9wdHMub3ZlcmZsb3cgKSB7XG5cdFx0c3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdHN0eWxlLm92ZXJmbG93ID0gb3B0cy5vdmVyZmxvd1sgMCBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dYID0gb3B0cy5vdmVyZmxvd1sgMSBdO1xuXHRcdFx0c3R5bGUub3ZlcmZsb3dZID0gb3B0cy5vdmVyZmxvd1sgMiBdO1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIEltcGxlbWVudCBzaG93L2hpZGUgYW5pbWF0aW9uc1xuXHRwcm9wVHdlZW4gPSBmYWxzZTtcblx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXG5cdFx0Ly8gR2VuZXJhbCBzaG93L2hpZGUgc2V0dXAgZm9yIHRoaXMgZWxlbWVudCBhbmltYXRpb25cblx0XHRpZiAoICFwcm9wVHdlZW4gKSB7XG5cdFx0XHRpZiAoIGRhdGFTaG93ICkge1xuXHRcdFx0XHRpZiAoIFwiaGlkZGVuXCIgaW4gZGF0YVNob3cgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gZGF0YVNob3cuaGlkZGVuO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkYXRhU2hvdyA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgXCJmeHNob3dcIiwgeyBkaXNwbGF5OiByZXN0b3JlRGlzcGxheSB9ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0b3JlIGhpZGRlbi92aXNpYmxlIGZvciB0b2dnbGUgc28gYC5zdG9wKCkudG9nZ2xlKClgIFwicmV2ZXJzZXNcIlxuXHRcdFx0aWYgKCB0b2dnbGUgKSB7XG5cdFx0XHRcdGRhdGFTaG93LmhpZGRlbiA9ICFoaWRkZW47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNob3cgZWxlbWVudHMgYmVmb3JlIGFuaW1hdGluZyB0aGVtXG5cdFx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHR9XG5cblx0XHRcdC8qIGVzbGludC1kaXNhYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWxvb3AtZnVuYyAqL1xuXG5cdFx0XHRcdC8vIFRoZSBmaW5hbCBzdGVwIG9mIGEgXCJoaWRlXCIgYW5pbWF0aW9uIGlzIGFjdHVhbGx5IGhpZGluZyB0aGUgZWxlbWVudFxuXHRcdFx0XHRpZiAoICFoaWRkZW4gKSB7XG5cdFx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImZ4c2hvd1wiICk7XG5cdFx0XHRcdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Ly8gUGVyLXByb3BlcnR5IHNldHVwXG5cdFx0cHJvcFR3ZWVuID0gY3JlYXRlVHdlZW4oIGhpZGRlbiA/IGRhdGFTaG93WyBwcm9wIF0gOiAwLCBwcm9wLCBhbmltICk7XG5cdFx0aWYgKCAhKCBwcm9wIGluIGRhdGFTaG93ICkgKSB7XG5cdFx0XHRkYXRhU2hvd1sgcHJvcCBdID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHByb3BUd2Vlbi5lbmQgPSBwcm9wVHdlZW4uc3RhcnQ7XG5cdFx0XHRcdHByb3BUd2Vlbi5zdGFydCA9IDA7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xuXHR2YXIgaW5kZXgsIG5hbWUsIGVhc2luZywgdmFsdWUsIGhvb2tzO1xuXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xuXHRmb3IgKCBpbmRleCBpbiBwcm9wcyApIHtcblx0XHRuYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggaW5kZXggKTtcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XG5cdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRpZiAoIGpRdWVyeS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0ZWFzaW5nID0gdmFsdWVbIDEgXTtcblx0XHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgMCBdO1xuXHRcdH1cblxuXHRcdGlmICggaW5kZXggIT09IG5hbWUgKSB7XG5cdFx0XHRwcm9wc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRkZWxldGUgcHJvcHNbIGluZGV4IF07XG5cdFx0fVxuXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXTtcblx0XHRpZiAoIGhvb2tzICYmIFwiZXhwYW5kXCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWx1ZSA9IGhvb2tzLmV4cGFuZCggdmFsdWUgKTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgbmFtZSBdO1xuXG5cdFx0XHQvLyBOb3QgcXVpdGUgJC5leHRlbmQsIHRoaXMgd29uJ3Qgb3ZlcndyaXRlIGV4aXN0aW5nIGtleXMuXG5cdFx0XHQvLyBSZXVzaW5nICdpbmRleCcgYmVjYXVzZSB3ZSBoYXZlIHRoZSBjb3JyZWN0IFwibmFtZVwiXG5cdFx0XHRmb3IgKCBpbmRleCBpbiB2YWx1ZSApIHtcblx0XHRcdFx0aWYgKCAhKCBpbmRleCBpbiBwcm9wcyApICkge1xuXHRcdFx0XHRcdHByb3BzWyBpbmRleCBdID0gdmFsdWVbIGluZGV4IF07XG5cdFx0XHRcdFx0c3BlY2lhbEVhc2luZ1sgaW5kZXggXSA9IGVhc2luZztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRzcGVjaWFsRWFzaW5nWyBuYW1lIF0gPSBlYXNpbmc7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIEFuaW1hdGlvbiggZWxlbSwgcHJvcGVydGllcywgb3B0aW9ucyApIHtcblx0dmFyIHJlc3VsdCxcblx0XHRzdG9wcGVkLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBBbmltYXRpb24ucHJlZmlsdGVycy5sZW5ndGgsXG5cdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBEb24ndCBtYXRjaCBlbGVtIGluIHRoZSA6YW5pbWF0ZWQgc2VsZWN0b3Jcblx0XHRcdGRlbGV0ZSB0aWNrLmVsZW07XG5cdFx0fSApLFxuXHRcdHRpY2sgPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGN1cnJlbnRUaW1lID0gZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdFx0cmVtYWluaW5nID0gTWF0aC5tYXgoIDAsIGFuaW1hdGlvbi5zdGFydFRpbWUgKyBhbmltYXRpb24uZHVyYXRpb24gLSBjdXJyZW50VGltZSApLFxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zIG9ubHlcblx0XHRcdFx0Ly8gQXJjaGFpYyBjcmFzaCBidWcgd29uJ3QgYWxsb3cgdXMgdG8gdXNlIGAxIC0gKCAwLjUgfHwgMCApYCAoIzEyNDk3KVxuXHRcdFx0XHR0ZW1wID0gcmVtYWluaW5nIC8gYW5pbWF0aW9uLmR1cmF0aW9uIHx8IDAsXG5cdFx0XHRcdHBlcmNlbnQgPSAxIC0gdGVtcCxcblx0XHRcdFx0aW5kZXggPSAwLFxuXHRcdFx0XHRsZW5ndGggPSBhbmltYXRpb24udHdlZW5zLmxlbmd0aDtcblxuXHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0YW5pbWF0aW9uLnR3ZWVuc1sgaW5kZXggXS5ydW4oIHBlcmNlbnQgKTtcblx0XHRcdH1cblxuXHRcdFx0ZGVmZXJyZWQubm90aWZ5V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIHBlcmNlbnQsIHJlbWFpbmluZyBdICk7XG5cblx0XHRcdGlmICggcGVyY2VudCA8IDEgJiYgbGVuZ3RoICkge1xuXHRcdFx0XHRyZXR1cm4gcmVtYWluaW5nO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uIF0gKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0YW5pbWF0aW9uID0gZGVmZXJyZWQucHJvbWlzZSgge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdHByb3BzOiBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcGVydGllcyApLFxuXHRcdFx0b3B0czogalF1ZXJ5LmV4dGVuZCggdHJ1ZSwge1xuXHRcdFx0XHRzcGVjaWFsRWFzaW5nOiB7fSxcblx0XHRcdFx0ZWFzaW5nOiBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0XG5cdFx0XHR9LCBvcHRpb25zICksXG5cdFx0XHRvcmlnaW5hbFByb3BlcnRpZXM6IHByb3BlcnRpZXMsXG5cdFx0XHRvcmlnaW5hbE9wdGlvbnM6IG9wdGlvbnMsXG5cdFx0XHRzdGFydFRpbWU6IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbixcblx0XHRcdHR3ZWVuczogW10sXG5cdFx0XHRjcmVhdGVUd2VlbjogZnVuY3Rpb24oIHByb3AsIGVuZCApIHtcblx0XHRcdFx0dmFyIHR3ZWVuID0galF1ZXJ5LlR3ZWVuKCBlbGVtLCBhbmltYXRpb24ub3B0cywgcHJvcCwgZW5kLFxuXHRcdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblxuXHRcdFx0XHRcdC8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xuXHRcdFx0XHRcdC8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMgcGFydFxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCByZXN1bHQuc3RvcCApICkge1xuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIGFuaW1hdGlvbi5lbGVtLCBhbmltYXRpb24ub3B0cy5xdWV1ZSApLnN0b3AgPVxuXHRcdFx0XHRcdGpRdWVyeS5wcm94eSggcmVzdWx0LnN0b3AsIHJlc3VsdCApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHR9XG5cdH1cblxuXHRqUXVlcnkubWFwKCBwcm9wcywgY3JlYXRlVHdlZW4sIGFuaW1hdGlvbiApO1xuXG5cdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGFuaW1hdGlvbi5vcHRzLnN0YXJ0ICkgKSB7XG5cdFx0YW5pbWF0aW9uLm9wdHMuc3RhcnQuY2FsbCggZWxlbSwgYW5pbWF0aW9uICk7XG5cdH1cblxuXHRqUXVlcnkuZngudGltZXIoXG5cdFx0alF1ZXJ5LmV4dGVuZCggdGljaywge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdGFuaW06IGFuaW1hdGlvbixcblx0XHRcdHF1ZXVlOiBhbmltYXRpb24ub3B0cy5xdWV1ZVxuXHRcdH0gKVxuXHQpO1xuXG5cdC8vIGF0dGFjaCBjYWxsYmFja3MgZnJvbSBvcHRpb25zXG5cdHJldHVybiBhbmltYXRpb24ucHJvZ3Jlc3MoIGFuaW1hdGlvbi5vcHRzLnByb2dyZXNzIClcblx0XHQuZG9uZSggYW5pbWF0aW9uLm9wdHMuZG9uZSwgYW5pbWF0aW9uLm9wdHMuY29tcGxldGUgKVxuXHRcdC5mYWlsKCBhbmltYXRpb24ub3B0cy5mYWlsIClcblx0XHQuYWx3YXlzKCBhbmltYXRpb24ub3B0cy5hbHdheXMgKTtcbn1cblxualF1ZXJ5LkFuaW1hdGlvbiA9IGpRdWVyeS5leHRlbmQoIEFuaW1hdGlvbiwge1xuXG5cdHR3ZWVuZXJzOiB7XG5cdFx0XCIqXCI6IFsgZnVuY3Rpb24oIHByb3AsIHZhbHVlICkge1xuXHRcdFx0dmFyIHR3ZWVuID0gdGhpcy5jcmVhdGVUd2VlbiggcHJvcCwgdmFsdWUgKTtcblx0XHRcdGFkanVzdENTUyggdHdlZW4uZWxlbSwgcHJvcCwgcmNzc051bS5leGVjKCB2YWx1ZSApLCB0d2VlbiApO1xuXHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdH0gXVxuXHR9LFxuXG5cdHR3ZWVuZXI6IGZ1bmN0aW9uKCBwcm9wcywgY2FsbGJhY2sgKSB7XG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggcHJvcHMgKSApIHtcblx0XHRcdGNhbGxiYWNrID0gcHJvcHM7XG5cdFx0XHRwcm9wcyA9IFsgXCIqXCIgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cHJvcHMgPSBwcm9wcy5tYXRjaCggcm5vdHdoaXRlICk7XG5cdFx0fVxuXG5cdFx0dmFyIHByb3AsXG5cdFx0XHRpbmRleCA9IDAsXG5cdFx0XHRsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0cHJvcCA9IHByb3BzWyBpbmRleCBdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gPSBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXTtcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdLnVuc2hpZnQoIGNhbGxiYWNrICk7XG5cdFx0fVxuXHR9LFxuXG5cdHByZWZpbHRlcnM6IFsgZGVmYXVsdFByZWZpbHRlciBdLFxuXG5cdHByZWZpbHRlcjogZnVuY3Rpb24oIGNhbGxiYWNrLCBwcmVwZW5kICkge1xuXHRcdGlmICggcHJlcGVuZCApIHtcblx0XHRcdEFuaW1hdGlvbi5wcmVmaWx0ZXJzLnVuc2hpZnQoIGNhbGxiYWNrICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdEFuaW1hdGlvbi5wcmVmaWx0ZXJzLnB1c2goIGNhbGxiYWNrICk7XG5cdFx0fVxuXHR9XG59ICk7XG5cbmpRdWVyeS5zcGVlZCA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBmbiApIHtcblx0dmFyIG9wdCA9IHNwZWVkICYmIHR5cGVvZiBzcGVlZCA9PT0gXCJvYmplY3RcIiA/IGpRdWVyeS5leHRlbmQoIHt9LCBzcGVlZCApIDoge1xuXHRcdGNvbXBsZXRlOiBmbiB8fCAhZm4gJiYgZWFzaW5nIHx8XG5cdFx0XHRqUXVlcnkuaXNGdW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCxcblx0XHRkdXJhdGlvbjogc3BlZWQsXG5cdFx0ZWFzaW5nOiBmbiAmJiBlYXNpbmcgfHwgZWFzaW5nICYmICFqUXVlcnkuaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0Ly8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmIG9yIGlmIGRvY3VtZW50IGlzIGhpZGRlblxuXHRpZiAoIGpRdWVyeS5meC5vZmYgfHwgZG9jdW1lbnQuaGlkZGVuICkge1xuXHRcdG9wdC5kdXJhdGlvbiA9IDA7XG5cblx0fSBlbHNlIHtcblx0XHRvcHQuZHVyYXRpb24gPSB0eXBlb2Ygb3B0LmR1cmF0aW9uID09PSBcIm51bWJlclwiID9cblx0XHRcdG9wdC5kdXJhdGlvbiA6IG9wdC5kdXJhdGlvbiBpbiBqUXVlcnkuZnguc3BlZWRzID9cblx0XHRcdFx0alF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF0gOiBqUXVlcnkuZnguc3BlZWRzLl9kZWZhdWx0O1xuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggb3B0Lm9sZCApICkge1xuXHRcdFx0b3B0Lm9sZC5jYWxsKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBvcHQucXVldWUgKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgb3B0LnF1ZXVlICk7XG5cdFx0fVxuXHR9O1xuXG5cdHJldHVybiBvcHQ7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGZhZGVUbzogZnVuY3Rpb24oIHNwZWVkLCB0bywgZWFzaW5nLCBjYWxsYmFjayApIHtcblxuXHRcdC8vIFNob3cgYW55IGhpZGRlbiBlbGVtZW50cyBhZnRlciBzZXR0aW5nIG9wYWNpdHkgdG8gMFxuXHRcdHJldHVybiB0aGlzLmZpbHRlciggaXNIaWRkZW5XaXRoaW5UcmVlICkuY3NzKCBcIm9wYWNpdHlcIiwgMCApLnNob3coKVxuXG5cdFx0XHQvLyBBbmltYXRlIHRvIHRoZSB2YWx1ZSBzcGVjaWZpZWRcblx0XHRcdC5lbmQoKS5hbmltYXRlKCB7IG9wYWNpdHk6IHRvIH0sIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH0sXG5cdGFuaW1hdGU6IGZ1bmN0aW9uKCBwcm9wLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHR2YXIgZW1wdHkgPSBqUXVlcnkuaXNFbXB0eU9iamVjdCggcHJvcCApLFxuXHRcdFx0b3B0YWxsID0galF1ZXJ5LnNwZWVkKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApLFxuXHRcdFx0ZG9BbmltYXRpb24gPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvLyBPcGVyYXRlIG9uIGEgY29weSBvZiBwcm9wIHNvIHBlci1wcm9wZXJ0eSBlYXNpbmcgd29uJ3QgYmUgbG9zdFxuXHRcdFx0XHR2YXIgYW5pbSA9IEFuaW1hdGlvbiggdGhpcywgalF1ZXJ5LmV4dGVuZCgge30sIHByb3AgKSwgb3B0YWxsICk7XG5cblx0XHRcdFx0Ly8gRW1wdHkgYW5pbWF0aW9ucywgb3IgZmluaXNoaW5nIHJlc29sdmVzIGltbWVkaWF0ZWx5XG5cdFx0XHRcdGlmICggZW1wdHkgfHwgZGF0YVByaXYuZ2V0KCB0aGlzLCBcImZpbmlzaFwiICkgKSB7XG5cdFx0XHRcdFx0YW5pbS5zdG9wKCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0XHRkb0FuaW1hdGlvbi5maW5pc2ggPSBkb0FuaW1hdGlvbjtcblxuXHRcdHJldHVybiBlbXB0eSB8fCBvcHRhbGwucXVldWUgPT09IGZhbHNlID9cblx0XHRcdHRoaXMuZWFjaCggZG9BbmltYXRpb24gKSA6XG5cdFx0XHR0aGlzLnF1ZXVlKCBvcHRhbGwucXVldWUsIGRvQW5pbWF0aW9uICk7XG5cdH0sXG5cdHN0b3A6IGZ1bmN0aW9uKCB0eXBlLCBjbGVhclF1ZXVlLCBnb3RvRW5kICkge1xuXHRcdHZhciBzdG9wUXVldWUgPSBmdW5jdGlvbiggaG9va3MgKSB7XG5cdFx0XHR2YXIgc3RvcCA9IGhvb2tzLnN0b3A7XG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdHN0b3AoIGdvdG9FbmQgKTtcblx0XHR9O1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGdvdG9FbmQgPSBjbGVhclF1ZXVlO1xuXHRcdFx0Y2xlYXJRdWV1ZSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRpZiAoIGNsZWFyUXVldWUgJiYgdHlwZSAhPT0gZmFsc2UgKSB7XG5cdFx0XHR0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBkZXF1ZXVlID0gdHJ1ZSxcblx0XHRcdFx0aW5kZXggPSB0eXBlICE9IG51bGwgJiYgdHlwZSArIFwicXVldWVIb29rc1wiLFxuXHRcdFx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzLFxuXHRcdFx0XHRkYXRhID0gZGF0YVByaXYuZ2V0KCB0aGlzICk7XG5cblx0XHRcdGlmICggaW5kZXggKSB7XG5cdFx0XHRcdGlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgKSB7XG5cdFx0XHRcdFx0c3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZvciAoIGluZGV4IGluIGRhdGEgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCAmJiBycnVuLnRlc3QoIGluZGV4ICkgKSB7XG5cdFx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Zm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHtcblx0XHRcdFx0aWYgKCB0aW1lcnNbIGluZGV4IF0uZWxlbSA9PT0gdGhpcyAmJlxuXHRcdFx0XHRcdCggdHlwZSA9PSBudWxsIHx8IHRpbWVyc1sgaW5kZXggXS5xdWV1ZSA9PT0gdHlwZSApICkge1xuXG5cdFx0XHRcdFx0dGltZXJzWyBpbmRleCBdLmFuaW0uc3RvcCggZ290b0VuZCApO1xuXHRcdFx0XHRcdGRlcXVldWUgPSBmYWxzZTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0YXJ0IHRoZSBuZXh0IGluIHRoZSBxdWV1ZSBpZiB0aGUgbGFzdCBzdGVwIHdhc24ndCBmb3JjZWQuXG5cdFx0XHQvLyBUaW1lcnMgY3VycmVudGx5IHdpbGwgY2FsbCB0aGVpciBjb21wbGV0ZSBjYWxsYmFja3MsIHdoaWNoXG5cdFx0XHQvLyB3aWxsIGRlcXVldWUgYnV0IG9ubHkgaWYgdGhleSB3ZXJlIGdvdG9FbmQuXG5cdFx0XHRpZiAoIGRlcXVldWUgfHwgIWdvdG9FbmQgKSB7XG5cdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXHRmaW5pc2g6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdGlmICggdHlwZSAhPT0gZmFsc2UgKSB7XG5cdFx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGluZGV4LFxuXHRcdFx0XHRkYXRhID0gZGF0YVByaXYuZ2V0KCB0aGlzICksXG5cdFx0XHRcdHF1ZXVlID0gZGF0YVsgdHlwZSArIFwicXVldWVcIiBdLFxuXHRcdFx0XHRob29rcyA9IGRhdGFbIHR5cGUgKyBcInF1ZXVlSG9va3NcIiBdLFxuXHRcdFx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzLFxuXHRcdFx0XHRsZW5ndGggPSBxdWV1ZSA/IHF1ZXVlLmxlbmd0aCA6IDA7XG5cblx0XHRcdC8vIEVuYWJsZSBmaW5pc2hpbmcgZmxhZyBvbiBwcml2YXRlIGRhdGFcblx0XHRcdGRhdGEuZmluaXNoID0gdHJ1ZTtcblxuXHRcdFx0Ly8gRW1wdHkgdGhlIHF1ZXVlIGZpcnN0XG5cdFx0XHRqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIFtdICk7XG5cblx0XHRcdGlmICggaG9va3MgJiYgaG9va3Muc3RvcCApIHtcblx0XHRcdFx0aG9va3Muc3RvcC5jYWxsKCB0aGlzLCB0cnVlICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhY3RpdmUgYW5pbWF0aW9ucywgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmIHRpbWVyc1sgaW5kZXggXS5xdWV1ZSA9PT0gdHlwZSApIHtcblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCB0cnVlICk7XG5cdFx0XHRcdFx0dGltZXJzLnNwbGljZSggaW5kZXgsIDEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBMb29rIGZvciBhbnkgYW5pbWF0aW9ucyBpbiB0aGUgb2xkIHF1ZXVlIGFuZCBmaW5pc2ggdGhlbVxuXHRcdFx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0aWYgKCBxdWV1ZVsgaW5kZXggXSAmJiBxdWV1ZVsgaW5kZXggXS5maW5pc2ggKSB7XG5cdFx0XHRcdFx0cXVldWVbIGluZGV4IF0uZmluaXNoLmNhbGwoIHRoaXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBUdXJuIG9mZiBmaW5pc2hpbmcgZmxhZ1xuXHRcdFx0ZGVsZXRlIGRhdGEuZmluaXNoO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcInRvZ2dsZVwiLCBcInNob3dcIiwgXCJoaWRlXCIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdHZhciBjc3NGbiA9IGpRdWVyeS5mblsgbmFtZSBdO1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gc3BlZWQgPT0gbnVsbCB8fCB0eXBlb2Ygc3BlZWQgPT09IFwiYm9vbGVhblwiID9cblx0XHRcdGNzc0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSA6XG5cdFx0XHR0aGlzLmFuaW1hdGUoIGdlbkZ4KCBuYW1lLCB0cnVlICksIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbi8vIEdlbmVyYXRlIHNob3J0Y3V0cyBmb3IgY3VzdG9tIGFuaW1hdGlvbnNcbmpRdWVyeS5lYWNoKCB7XG5cdHNsaWRlRG93bjogZ2VuRngoIFwic2hvd1wiICksXG5cdHNsaWRlVXA6IGdlbkZ4KCBcImhpZGVcIiApLFxuXHRzbGlkZVRvZ2dsZTogZ2VuRngoIFwidG9nZ2xlXCIgKSxcblx0ZmFkZUluOiB7IG9wYWNpdHk6IFwic2hvd1wiIH0sXG5cdGZhZGVPdXQ6IHsgb3BhY2l0eTogXCJoaWRlXCIgfSxcblx0ZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiBcInRvZ2dsZVwiIH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBwcm9wcyApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZSggcHJvcHMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS50aW1lcnMgPSBbXTtcbmpRdWVyeS5meC50aWNrID0gZnVuY3Rpb24oKSB7XG5cdHZhciB0aW1lcixcblx0XHRpID0gMCxcblx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzO1xuXG5cdGZ4Tm93ID0galF1ZXJ5Lm5vdygpO1xuXG5cdGZvciAoIDsgaSA8IHRpbWVycy5sZW5ndGg7IGkrKyApIHtcblx0XHR0aW1lciA9IHRpbWVyc1sgaSBdO1xuXG5cdFx0Ly8gQ2hlY2tzIHRoZSB0aW1lciBoYXMgbm90IGFscmVhZHkgYmVlbiByZW1vdmVkXG5cdFx0aWYgKCAhdGltZXIoKSAmJiB0aW1lcnNbIGkgXSA9PT0gdGltZXIgKSB7XG5cdFx0XHR0aW1lcnMuc3BsaWNlKCBpLS0sIDEgKTtcblx0XHR9XG5cdH1cblxuXHRpZiAoICF0aW1lcnMubGVuZ3RoICkge1xuXHRcdGpRdWVyeS5meC5zdG9wKCk7XG5cdH1cblx0ZnhOb3cgPSB1bmRlZmluZWQ7XG59O1xuXG5qUXVlcnkuZngudGltZXIgPSBmdW5jdGlvbiggdGltZXIgKSB7XG5cdGpRdWVyeS50aW1lcnMucHVzaCggdGltZXIgKTtcblx0aWYgKCB0aW1lcigpICkge1xuXHRcdGpRdWVyeS5meC5zdGFydCgpO1xuXHR9IGVsc2Uge1xuXHRcdGpRdWVyeS50aW1lcnMucG9wKCk7XG5cdH1cbn07XG5cbmpRdWVyeS5meC5pbnRlcnZhbCA9IDEzO1xualF1ZXJ5LmZ4LnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG5cdGlmICggIXRpbWVySWQgKSB7XG5cdFx0dGltZXJJZCA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgP1xuXHRcdFx0d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggcmFmICkgOlxuXHRcdFx0d2luZG93LnNldEludGVydmFsKCBqUXVlcnkuZngudGljaywgalF1ZXJ5LmZ4LmludGVydmFsICk7XG5cdH1cbn07XG5cbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdGlmICggd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lICkge1xuXHRcdHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSggdGltZXJJZCApO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGVhckludGVydmFsKCB0aW1lcklkICk7XG5cdH1cblxuXHR0aW1lcklkID0gbnVsbDtcbn07XG5cbmpRdWVyeS5meC5zcGVlZHMgPSB7XG5cdHNsb3c6IDYwMCxcblx0ZmFzdDogMjAwLFxuXG5cdC8vIERlZmF1bHQgc3BlZWRcblx0X2RlZmF1bHQ6IDQwMFxufTtcblxuXG4vLyBCYXNlZCBvZmYgb2YgdGhlIHBsdWdpbiBieSBDbGludCBIZWxmZXJzLCB3aXRoIHBlcm1pc3Npb24uXG4vLyBodHRwczovL3dlYi5hcmNoaXZlLm9yZy93ZWIvMjAxMDAzMjQwMTQ3NDcvaHR0cDovL2JsaW5kc2lnbmFscy5jb20vaW5kZXgucGhwLzIwMDkvMDcvanF1ZXJ5LWRlbGF5L1xualF1ZXJ5LmZuLmRlbGF5ID0gZnVuY3Rpb24oIHRpbWUsIHR5cGUgKSB7XG5cdHRpbWUgPSBqUXVlcnkuZnggPyBqUXVlcnkuZnguc3BlZWRzWyB0aW1lIF0gfHwgdGltZSA6IHRpbWU7XG5cdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSwgZnVuY3Rpb24oIG5leHQsIGhvb2tzICkge1xuXHRcdHZhciB0aW1lb3V0ID0gd2luZG93LnNldFRpbWVvdXQoIG5leHQsIHRpbWUgKTtcblx0XHRob29rcy5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0ICk7XG5cdFx0fTtcblx0fSApO1xufTtcblxuXG4oIGZ1bmN0aW9uKCkge1xuXHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKSxcblx0XHRzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcInNlbGVjdFwiICksXG5cdFx0b3B0ID0gc2VsZWN0LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcIm9wdGlvblwiICkgKTtcblxuXHRpbnB1dC50eXBlID0gXCJjaGVja2JveFwiO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjMgb25seVxuXHQvLyBEZWZhdWx0IHZhbHVlIGZvciBhIGNoZWNrYm94IHNob3VsZCBiZSBcIm9uXCJcblx0c3VwcG9ydC5jaGVja09uID0gaW5wdXQudmFsdWUgIT09IFwiXCI7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIE11c3QgYWNjZXNzIHNlbGVjdGVkSW5kZXggdG8gbWFrZSBkZWZhdWx0IG9wdGlvbnMgc2VsZWN0XG5cdHN1cHBvcnQub3B0U2VsZWN0ZWQgPSBvcHQuc2VsZWN0ZWQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIEFuIGlucHV0IGxvc2VzIGl0cyB2YWx1ZSBhZnRlciBiZWNvbWluZyBhIHJhZGlvXG5cdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cdGlucHV0LnZhbHVlID0gXCJ0XCI7XG5cdGlucHV0LnR5cGUgPSBcInJhZGlvXCI7XG5cdHN1cHBvcnQucmFkaW9WYWx1ZSA9IGlucHV0LnZhbHVlID09PSBcInRcIjtcbn0gKSgpO1xuXG5cbnZhciBib29sSG9vayxcblx0YXR0ckhhbmRsZSA9IGpRdWVyeS5leHByLmF0dHJIYW5kbGU7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0YXR0cjogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5hdHRyLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggbmFtZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCB0aGlzLCBuYW1lICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0YXR0cjogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBhdHRyaWJ1dGVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRmFsbGJhY2sgdG8gcHJvcCB3aGVuIGF0dHJpYnV0ZXMgYXJlIG5vdCBzdXBwb3J0ZWRcblx0XHRpZiAoIHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSA9PT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdHJldHVybiBqUXVlcnkucHJvcCggZWxlbSwgbmFtZSwgdmFsdWUgKTtcblx0XHR9XG5cblx0XHQvLyBBdHRyaWJ1dGUgaG9va3MgYXJlIGRldGVybWluZWQgYnkgdGhlIGxvd2VyY2FzZSB2ZXJzaW9uXG5cdFx0Ly8gR3JhYiBuZWNlc3NhcnkgaG9vayBpZiBvbmUgaXMgZGVmaW5lZFxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXHRcdFx0aG9va3MgPSBqUXVlcnkuYXR0ckhvb2tzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSB8fFxuXHRcdFx0XHQoIGpRdWVyeS5leHByLm1hdGNoLmJvb2wudGVzdCggbmFtZSApID8gYm9vbEhvb2sgOiB1bmRlZmluZWQgKTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIHZhbHVlID09PSBudWxsICkge1xuXHRcdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApO1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCB2YWx1ZSArIFwiXCIgKTtcblx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiYgKCByZXQgPSBob29rcy5nZXQoIGVsZW0sIG5hbWUgKSApICE9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9XG5cblx0XHRyZXQgPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBuYW1lICk7XG5cblx0XHQvLyBOb24tZXhpc3RlbnQgYXR0cmlidXRlcyByZXR1cm4gbnVsbCwgd2Ugbm9ybWFsaXplIHRvIHVuZGVmaW5lZFxuXHRcdHJldHVybiByZXQgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IHJldDtcblx0fSxcblxuXHRhdHRySG9va3M6IHtcblx0XHR0eXBlOiB7XG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0aWYgKCAhc3VwcG9ydC5yYWRpb1ZhbHVlICYmIHZhbHVlID09PSBcInJhZGlvXCIgJiZcblx0XHRcdFx0XHRqUXVlcnkubm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHZhciB2YWwgPSBlbGVtLnZhbHVlO1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgdmFsdWUgKTtcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRcdGVsZW0udmFsdWUgPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0dmFyIG5hbWUsXG5cdFx0XHRpID0gMCxcblx0XHRcdGF0dHJOYW1lcyA9IHZhbHVlICYmIHZhbHVlLm1hdGNoKCBybm90d2hpdGUgKTtcblxuXHRcdGlmICggYXR0ck5hbWVzICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHR3aGlsZSAoICggbmFtZSA9IGF0dHJOYW1lc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIG5hbWUgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSG9va3MgZm9yIGJvb2xlYW4gYXR0cmlidXRlc1xuYm9vbEhvb2sgPSB7XG5cdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkge1xuXHRcdGlmICggdmFsdWUgPT09IGZhbHNlICkge1xuXG5cdFx0XHQvLyBSZW1vdmUgYm9vbGVhbiBhdHRyaWJ1dGVzIHdoZW4gc2V0IHRvIGZhbHNlXG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgbmFtZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gbmFtZTtcblx0fVxufTtcblxualF1ZXJ5LmVhY2goIGpRdWVyeS5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKCAvXFx3Ky9nICksIGZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXHR2YXIgZ2V0dGVyID0gYXR0ckhhbmRsZVsgbmFtZSBdIHx8IGpRdWVyeS5maW5kLmF0dHI7XG5cblx0YXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciByZXQsIGhhbmRsZSxcblx0XHRcdGxvd2VyY2FzZU5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRpZiAoICFpc1hNTCApIHtcblxuXHRcdFx0Ly8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlclxuXHRcdFx0aGFuZGxlID0gYXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdO1xuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gcmV0O1xuXHRcdFx0cmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgP1xuXHRcdFx0XHRsb3dlcmNhc2VOYW1lIDpcblx0XHRcdFx0bnVsbDtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IGhhbmRsZTtcblx0XHR9XG5cdFx0cmV0dXJuIHJldDtcblx0fTtcbn0gKTtcblxuXG5cblxudmFyIHJmb2N1c2FibGUgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyY2xpY2thYmxlID0gL14oPzphfGFyZWEpJC9pO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkucHJvcCwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRkZWxldGUgdGhpc1sgalF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lIF07XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBwcm9wZXJ0aWVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIEZpeCBuYW1lIGFuZCBhdHRhY2ggaG9va3Ncblx0XHRcdG5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldHVybiBlbGVtWyBuYW1lIF07XG5cdH0sXG5cblx0cHJvcEhvb2tzOiB7XG5cdFx0dGFiSW5kZXg6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHRcdFx0XHQvLyBlbGVtLnRhYkluZGV4IGRvZXNuJ3QgYWx3YXlzIHJldHVybiB0aGVcblx0XHRcdFx0Ly8gY29ycmVjdCB2YWx1ZSB3aGVuIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0XG5cdFx0XHRcdC8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDE0MTExNjIzMzM0Ny9odHRwOi8vZmx1aWRwcm9qZWN0Lm9yZy9ibG9nLzIwMDgvMDEvMDkvZ2V0dGluZy1zZXR0aW5nLWFuZC1yZW1vdmluZy10YWJpbmRleC12YWx1ZXMtd2l0aC1qYXZhc2NyaXB0L1xuXHRcdFx0XHQvLyBVc2UgcHJvcGVyIGF0dHJpYnV0ZSByZXRyaWV2YWwoIzEyMDcyKVxuXHRcdFx0XHR2YXIgdGFiaW5kZXggPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInRhYmluZGV4XCIgKTtcblxuXHRcdFx0XHRyZXR1cm4gdGFiaW5kZXggP1xuXHRcdFx0XHRcdHBhcnNlSW50KCB0YWJpbmRleCwgMTAgKSA6XG5cdFx0XHRcdFx0cmZvY3VzYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgfHxcblx0XHRcdFx0XHRcdHJjbGlja2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApICYmIGVsZW0uaHJlZiA/XG5cdFx0XHRcdFx0XHRcdDAgOlxuXHRcdFx0XHRcdFx0XHQtMTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0cHJvcEZpeDoge1xuXHRcdFwiZm9yXCI6IFwiaHRtbEZvclwiLFxuXHRcdFwiY2xhc3NcIjogXCJjbGFzc05hbWVcIlxuXHR9XG59ICk7XG5cbi8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuLy8gQWNjZXNzaW5nIHRoZSBzZWxlY3RlZEluZGV4IHByb3BlcnR5XG4vLyBmb3JjZXMgdGhlIGJyb3dzZXIgdG8gcmVzcGVjdCBzZXR0aW5nIHNlbGVjdGVkXG4vLyBvbiB0aGUgb3B0aW9uXG4vLyBUaGUgZ2V0dGVyIGVuc3VyZXMgYSBkZWZhdWx0IG9wdGlvbiBpcyBzZWxlY3RlZFxuLy8gd2hlbiBpbiBhbiBvcHRncm91cFxuaWYgKCAhc3VwcG9ydC5vcHRTZWxlY3RlZCApIHtcblx0alF1ZXJ5LnByb3BIb29rcy5zZWxlY3RlZCA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICYmIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fSxcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRwYXJlbnQuc2VsZWN0ZWRJbmRleDtcblxuXHRcdFx0XHRpZiAoIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbmpRdWVyeS5lYWNoKCBbXG5cdFwidGFiSW5kZXhcIixcblx0XCJyZWFkT25seVwiLFxuXHRcIm1heExlbmd0aFwiLFxuXHRcImNlbGxTcGFjaW5nXCIsXG5cdFwiY2VsbFBhZGRpbmdcIixcblx0XCJyb3dTcGFuXCIsXG5cdFwiY29sU3BhblwiLFxuXHRcInVzZU1hcFwiLFxuXHRcImZyYW1lQm9yZGVyXCIsXG5cdFwiY29udGVudEVkaXRhYmxlXCJcbl0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkucHJvcEZpeFsgdGhpcy50b0xvd2VyQ2FzZSgpIF0gPSB0aGlzO1xufSApO1xuXG5cblxuXG52YXIgcmNsYXNzID0gL1tcXHRcXHJcXG5cXGZdL2c7XG5cbmZ1bmN0aW9uIGdldENsYXNzKCBlbGVtICkge1xuXHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiApIHx8IFwiXCI7XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0YWRkQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXG5cdFx0XHRpID0gMDtcblxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuYWRkQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlICkge1xuXHRcdFx0Y2xhc3NlcyA9IHZhbHVlLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXTtcblxuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCBlbGVtICk7XG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0XHQoIFwiIFwiICsgY3VyVmFsdWUgKyBcIiBcIiApLnJlcGxhY2UoIHJjbGFzcywgXCIgXCIgKTtcblxuXHRcdFx0XHRpZiAoIGN1ciApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggY2xhenogPSBjbGFzc2VzWyBqKysgXSApICkge1xuXHRcdFx0XHRcdFx0aWYgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPCAwICkge1xuXHRcdFx0XHRcdFx0XHRjdXIgKz0gY2xhenogKyBcIiBcIjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBqUXVlcnkudHJpbSggY3VyICk7XG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcblx0XHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcImNsYXNzXCIsIGZpbmFsVmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRyZW1vdmVDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5yZW1vdmVDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB0aGlzLmF0dHIoIFwiY2xhc3NcIiwgXCJcIiApO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlICkge1xuXHRcdFx0Y2xhc3NlcyA9IHZhbHVlLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXTtcblxuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCBlbGVtICk7XG5cblx0XHRcdFx0Ly8gVGhpcyBleHByZXNzaW9uIGlzIGhlcmUgZm9yIGJldHRlciBjb21wcmVzc2liaWxpdHkgKHNlZSBhZGRDbGFzcylcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHRcdCggXCIgXCIgKyBjdXJWYWx1ZSArIFwiIFwiICkucmVwbGFjZSggcmNsYXNzLCBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSAqYWxsKiBpbnN0YW5jZXNcblx0XHRcdFx0XHRcdHdoaWxlICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciA9IGN1ci5yZXBsYWNlKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIsIFwiIFwiICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gT25seSBhc3NpZ24gaWYgZGlmZmVyZW50IHRvIGF2b2lkIHVubmVlZGVkIHJlbmRlcmluZy5cblx0XHRcdFx0XHRmaW5hbFZhbHVlID0galF1ZXJ5LnRyaW0oIGN1ciApO1xuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLCBmaW5hbFZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0dG9nZ2xlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSwgc3RhdGVWYWwgKSB7XG5cdFx0dmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG5cblx0XHRpZiAoIHR5cGVvZiBzdGF0ZVZhbCA9PT0gXCJib29sZWFuXCIgJiYgdHlwZSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBzdGF0ZVZhbCA/IHRoaXMuYWRkQ2xhc3MoIHZhbHVlICkgOiB0aGlzLnJlbW92ZUNsYXNzKCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkudG9nZ2xlQ2xhc3MoXG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xhc3MoIHRoaXMgKSwgc3RhdGVWYWwgKSxcblx0XHRcdFx0XHRzdGF0ZVZhbFxuXHRcdFx0XHQpO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGNsYXNzTmFtZSwgaSwgc2VsZiwgY2xhc3NOYW1lcztcblxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHRcdC8vIFRvZ2dsZSBpbmRpdmlkdWFsIGNsYXNzIG5hbWVzXG5cdFx0XHRcdGkgPSAwO1xuXHRcdFx0XHRzZWxmID0galF1ZXJ5KCB0aGlzICk7XG5cdFx0XHRcdGNsYXNzTmFtZXMgPSB2YWx1ZS5tYXRjaCggcm5vdHdoaXRlICkgfHwgW107XG5cblx0XHRcdFx0d2hpbGUgKCAoIGNsYXNzTmFtZSA9IGNsYXNzTmFtZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0XHQvLyBDaGVjayBlYWNoIGNsYXNzTmFtZSBnaXZlbiwgc3BhY2Ugc2VwYXJhdGVkIGxpc3Rcblx0XHRcdFx0XHRpZiAoIHNlbGYuaGFzQ2xhc3MoIGNsYXNzTmFtZSApICkge1xuXHRcdFx0XHRcdFx0c2VsZi5yZW1vdmVDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHNlbGYuYWRkQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBUb2dnbGUgd2hvbGUgY2xhc3MgbmFtZVxuXHRcdFx0fSBlbHNlIGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB0eXBlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdFx0Y2xhc3NOYW1lID0gZ2V0Q2xhc3MoIHRoaXMgKTtcblx0XHRcdFx0aWYgKCBjbGFzc05hbWUgKSB7XG5cblx0XHRcdFx0XHQvLyBTdG9yZSBjbGFzc05hbWUgaWYgc2V0XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCBcIl9fY2xhc3NOYW1lX19cIiwgY2xhc3NOYW1lICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGUgZWxlbWVudCBoYXMgYSBjbGFzcyBuYW1lIG9yIGlmIHdlJ3JlIHBhc3NlZCBgZmFsc2VgLFxuXHRcdFx0XHQvLyB0aGVuIHJlbW92ZSB0aGUgd2hvbGUgY2xhc3NuYW1lIChpZiB0aGVyZSB3YXMgb25lLCB0aGUgYWJvdmUgc2F2ZWQgaXQpLlxuXHRcdFx0XHQvLyBPdGhlcndpc2UgYnJpbmcgYmFjayB3aGF0ZXZlciB3YXMgcHJldmlvdXNseSBzYXZlZCAoaWYgYW55dGhpbmcpLFxuXHRcdFx0XHQvLyBmYWxsaW5nIGJhY2sgdG8gdGhlIGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuXG5cdFx0XHRcdGlmICggdGhpcy5zZXRBdHRyaWJ1dGUgKSB7XG5cdFx0XHRcdFx0dGhpcy5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIixcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0XHRcdFx0XCJcIiA6XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiICkgfHwgXCJcIlxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0aGFzQ2xhc3M6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgY2xhc3NOYW1lLCBlbGVtLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRjbGFzc05hbWUgPSBcIiBcIiArIHNlbGVjdG9yICsgXCIgXCI7XG5cdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdCggXCIgXCIgKyBnZXRDbGFzcyggZWxlbSApICsgXCIgXCIgKS5yZXBsYWNlKCByY2xhc3MsIFwiIFwiIClcblx0XHRcdFx0XHQuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMVxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufSApO1xuXG5cblxuXG52YXIgcnJldHVybiA9IC9cXHIvZyxcblx0cnNwYWNlcyA9IC9bXFx4MjBcXHRcXHJcXG5cXGZdKy9nO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHZhbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LCBpc0Z1bmN0aW9uLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdGhvb2tzID0galF1ZXJ5LnZhbEhvb2tzWyBlbGVtLnR5cGUgXSB8fFxuXHRcdFx0XHRcdGpRdWVyeS52YWxIb29rc1sgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XG5cblx0XHRcdFx0aWYgKCBob29rcyAmJlxuXHRcdFx0XHRcdFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0XHQoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgXCJ2YWx1ZVwiICkgKSAhPT0gdW5kZWZpbmVkXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXQgPSBlbGVtLnZhbHVlO1xuXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgcmV0ID09PSBcInN0cmluZ1wiID9cblxuXHRcdFx0XHRcdC8vIEhhbmRsZSBtb3N0IGNvbW1vbiBzdHJpbmcgY2FzZXNcblx0XHRcdFx0XHRyZXQucmVwbGFjZSggcnJldHVybiwgXCJcIiApIDpcblxuXHRcdFx0XHRcdC8vIEhhbmRsZSBjYXNlcyB3aGVyZSB2YWx1ZSBpcyBudWxsL3VuZGVmIG9yIG51bWJlclxuXHRcdFx0XHRcdHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlzRnVuY3Rpb24gPSBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0dmFyIHZhbDtcblxuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlICE9PSAxICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaXNGdW5jdGlvbiApIHtcblx0XHRcdFx0dmFsID0gdmFsdWUuY2FsbCggdGhpcywgaSwgalF1ZXJ5KCB0aGlzICkudmFsKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR2YWwgPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCB0eXBlb2YgdmFsID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWwgKz0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggalF1ZXJ5LmlzQXJyYXkoIHZhbCApICkge1xuXHRcdFx0XHR2YWwgPSBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSArIFwiXCI7XG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblxuXHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIHRoaXMudHlwZSBdIHx8IGpRdWVyeS52YWxIb29rc1sgdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XG5cblx0XHRcdC8vIElmIHNldCByZXR1cm5zIHVuZGVmaW5lZCwgZmFsbCBiYWNrIHRvIG5vcm1hbCBzZXR0aW5nXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKCBcInNldFwiIGluIGhvb2tzICkgfHwgaG9va3Muc2V0KCB0aGlzLCB2YWwsIFwidmFsdWVcIiApID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHRoaXMudmFsdWUgPSB2YWw7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0dmFsSG9va3M6IHtcblx0XHRvcHRpb246IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdFx0dmFyIHZhbCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidmFsdWVcIiApO1xuXHRcdFx0XHRyZXR1cm4gdmFsICE9IG51bGwgP1xuXHRcdFx0XHRcdHZhbCA6XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEgb25seVxuXHRcdFx0XHRcdC8vIG9wdGlvbi50ZXh0IHRocm93cyBleGNlcHRpb25zICgjMTQ2ODYsICMxNDg1OClcblx0XHRcdFx0XHQvLyBTdHJpcCBhbmQgY29sbGFwc2Ugd2hpdGVzcGFjZVxuXHRcdFx0XHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI3N0cmlwLWFuZC1jb2xsYXBzZS13aGl0ZXNwYWNlXG5cdFx0XHRcdFx0alF1ZXJ5LnRyaW0oIGpRdWVyeS50ZXh0KCBlbGVtICkgKS5yZXBsYWNlKCByc3BhY2VzLCBcIiBcIiApO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0c2VsZWN0OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgdmFsdWUsIG9wdGlvbixcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxuXHRcdFx0XHRcdGluZGV4ID0gZWxlbS5zZWxlY3RlZEluZGV4LFxuXHRcdFx0XHRcdG9uZSA9IGVsZW0udHlwZSA9PT0gXCJzZWxlY3Qtb25lXCIsXG5cdFx0XHRcdFx0dmFsdWVzID0gb25lID8gbnVsbCA6IFtdLFxuXHRcdFx0XHRcdG1heCA9IG9uZSA/IGluZGV4ICsgMSA6IG9wdGlvbnMubGVuZ3RoLFxuXHRcdFx0XHRcdGkgPSBpbmRleCA8IDAgP1xuXHRcdFx0XHRcdFx0bWF4IDpcblx0XHRcdFx0XHRcdG9uZSA/IGluZGV4IDogMDtcblxuXHRcdFx0XHQvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBzZWxlY3RlZCBvcHRpb25zXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0Ly8gSUU4LTkgZG9lc24ndCB1cGRhdGUgc2VsZWN0ZWQgYWZ0ZXIgZm9ybSByZXNldCAoIzI1NTEpXG5cdFx0XHRcdFx0aWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmXG5cblx0XHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0XHRcdFx0XHQhb3B0aW9uLmRpc2FibGVkICYmXG5cdFx0XHRcdFx0XHRcdCggIW9wdGlvbi5wYXJlbnROb2RlLmRpc2FibGVkIHx8XG5cdFx0XHRcdFx0XHRcdFx0IWpRdWVyeS5ub2RlTmFtZSggb3B0aW9uLnBhcmVudE5vZGUsIFwib3B0Z3JvdXBcIiApICkgKSB7XG5cblx0XHRcdFx0XHRcdC8vIEdldCB0aGUgc3BlY2lmaWMgdmFsdWUgZm9yIHRoZSBvcHRpb25cblx0XHRcdFx0XHRcdHZhbHVlID0galF1ZXJ5KCBvcHRpb24gKS52YWwoKTtcblxuXHRcdFx0XHRcdFx0Ly8gV2UgZG9uJ3QgbmVlZCBhbiBhcnJheSBmb3Igb25lIHNlbGVjdHNcblx0XHRcdFx0XHRcdGlmICggb25lICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIE11bHRpLVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5XG5cdFx0XHRcdFx0XHR2YWx1ZXMucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWVzO1xuXHRcdFx0fSxcblxuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBvcHRpb25TZXQsIG9wdGlvbixcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxuXHRcdFx0XHRcdHZhbHVlcyA9IGpRdWVyeS5tYWtlQXJyYXkoIHZhbHVlICksXG5cdFx0XHRcdFx0aSA9IG9wdGlvbnMubGVuZ3RoO1xuXG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8qIGVzbGludC1kaXNhYmxlIG5vLWNvbmQtYXNzaWduICovXG5cblx0XHRcdFx0XHRpZiAoIG9wdGlvbi5zZWxlY3RlZCA9XG5cdFx0XHRcdFx0XHRqUXVlcnkuaW5BcnJheSggalF1ZXJ5LnZhbEhvb2tzLm9wdGlvbi5nZXQoIG9wdGlvbiApLCB2YWx1ZXMgKSA+IC0xXG5cdFx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0XHRvcHRpb25TZXQgPSB0cnVlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8qIGVzbGludC1lbmFibGUgbm8tY29uZC1hc3NpZ24gKi9cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEZvcmNlIGJyb3dzZXJzIHRvIGJlaGF2ZSBjb25zaXN0ZW50bHkgd2hlbiBub24tbWF0Y2hpbmcgdmFsdWUgaXMgc2V0XG5cdFx0XHRcdGlmICggIW9wdGlvblNldCApIHtcblx0XHRcdFx0XHRlbGVtLnNlbGVjdGVkSW5kZXggPSAtMTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdmFsdWVzO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBSYWRpb3MgYW5kIGNoZWNrYm94ZXMgZ2V0dGVyL3NldHRlclxualF1ZXJ5LmVhY2goIFsgXCJyYWRpb1wiLCBcImNoZWNrYm94XCIgXSwgZnVuY3Rpb24oKSB7XG5cdGpRdWVyeS52YWxIb29rc1sgdGhpcyBdID0ge1xuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0aWYgKCBqUXVlcnkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRcdFx0cmV0dXJuICggZWxlbS5jaGVja2VkID0galF1ZXJ5LmluQXJyYXkoIGpRdWVyeSggZWxlbSApLnZhbCgpLCB2YWx1ZSApID4gLTEgKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdGlmICggIXN1cHBvcnQuY2hlY2tPbiApIHtcblx0XHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXS5nZXQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IG51bGwgPyBcIm9uXCIgOiBlbGVtLnZhbHVlO1xuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gUmV0dXJuIGpRdWVyeSBmb3IgYXR0cmlidXRlcy1vbmx5IGluY2x1c2lvblxuXG5cbnZhciByZm9jdXNNb3JwaCA9IC9eKD86Zm9jdXNpbmZvY3VzfGZvY3Vzb3V0Ymx1cikkLztcblxualF1ZXJ5LmV4dGVuZCggalF1ZXJ5LmV2ZW50LCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIGV2ZW50LCBkYXRhLCBlbGVtLCBvbmx5SGFuZGxlcnMgKSB7XG5cblx0XHR2YXIgaSwgY3VyLCB0bXAsIGJ1YmJsZVR5cGUsIG9udHlwZSwgaGFuZGxlLCBzcGVjaWFsLFxuXHRcdFx0ZXZlbnRQYXRoID0gWyBlbGVtIHx8IGRvY3VtZW50IF0sXG5cdFx0XHR0eXBlID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcInR5cGVcIiApID8gZXZlbnQudHlwZSA6IGV2ZW50LFxuXHRcdFx0bmFtZXNwYWNlcyA9IGhhc093bi5jYWxsKCBldmVudCwgXCJuYW1lc3BhY2VcIiApID8gZXZlbnQubmFtZXNwYWNlLnNwbGl0KCBcIi5cIiApIDogW107XG5cblx0XHRjdXIgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKCBcIi5cIiApID4gLTEgKSB7XG5cblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcblx0XHRcdG5hbWVzcGFjZXMgPSB0eXBlLnNwbGl0KCBcIi5cIiApO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoIFwiOlwiICkgPCAwICYmIFwib25cIiArIHR5cGU7XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYSBqUXVlcnkuRXZlbnQgb2JqZWN0LCBPYmplY3QsIG9yIGp1c3QgYW4gZXZlbnQgdHlwZSBzdHJpbmdcblx0XHRldmVudCA9IGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdGV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gXCJvYmplY3RcIiAmJiBldmVudCApO1xuXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxuXHRcdGV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5kbGVycyA/IDIgOiAzO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKTtcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cblx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApIDpcblx0XHRcdG51bGw7XG5cblx0XHQvLyBDbGVhbiB1cCB0aGUgZXZlbnQgaW4gY2FzZSBpdCBpcyBiZWluZyByZXVzZWRcblx0XHRldmVudC5yZXN1bHQgPSB1bmRlZmluZWQ7XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZWxlbTtcblx0XHR9XG5cblx0XHQvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0XG5cdFx0ZGF0YSA9IGRhdGEgPT0gbnVsbCA/XG5cdFx0XHRbIGV2ZW50IF0gOlxuXHRcdFx0alF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7XG5cblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXG5cdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVjaWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXG5cdFx0Ly8gQnViYmxlIHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xvYmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNClcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIXNwZWNpYWwubm9CdWJibGUgJiYgIWpRdWVyeS5pc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRidWJibGVUeXBlID0gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgfHwgdHlwZTtcblx0XHRcdGlmICggIXJmb2N1c01vcnBoLnRlc3QoIGJ1YmJsZVR5cGUgKyB0eXBlICkgKSB7XG5cdFx0XHRcdGN1ciA9IGN1ci5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXHRcdFx0Zm9yICggOyBjdXI7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggY3VyICk7XG5cdFx0XHRcdHRtcCA9IGN1cjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT25seSBhZGQgd2luZG93IGlmIHdlIGdvdCB0byBkb2N1bWVudCAoZS5nLiwgbm90IHBsYWluIG9iaiBvciBkZXRhY2hlZCBET00pXG5cdFx0XHRpZiAoIHRtcCA9PT0gKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQgKSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIHRtcC5kZWZhdWx0VmlldyB8fCB0bXAucGFyZW50V2luZG93IHx8IHdpbmRvdyApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZpcmUgaGFuZGxlcnMgb24gdGhlIGV2ZW50IHBhdGhcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggY3VyID0gZXZlbnRQYXRoWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXG5cdFx0XHRldmVudC50eXBlID0gaSA+IDEgP1xuXHRcdFx0XHRidWJibGVUeXBlIDpcblx0XHRcdFx0c3BlY2lhbC5iaW5kVHlwZSB8fCB0eXBlO1xuXG5cdFx0XHQvLyBqUXVlcnkgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gKCBkYXRhUHJpdi5nZXQoIGN1ciwgXCJldmVudHNcIiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSAmJlxuXHRcdFx0XHRkYXRhUHJpdi5nZXQoIGN1ciwgXCJoYW5kbGVcIiApO1xuXHRcdFx0aWYgKCBoYW5kbGUgKSB7XG5cdFx0XHRcdGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE5hdGl2ZSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSBvbnR5cGUgJiYgY3VyWyBvbnR5cGUgXTtcblx0XHRcdGlmICggaGFuZGxlICYmIGhhbmRsZS5hcHBseSAmJiBhY2NlcHREYXRhKCBjdXIgKSApIHtcblx0XHRcdFx0ZXZlbnQucmVzdWx0ID0gaGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZXZlbnQudHlwZSA9IHR5cGU7XG5cblx0XHQvLyBJZiBub2JvZHkgcHJldmVudGVkIHRoZSBkZWZhdWx0IGFjdGlvbiwgZG8gaXQgbm93XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApIHtcblxuXHRcdFx0aWYgKCAoICFzcGVjaWFsLl9kZWZhdWx0IHx8XG5cdFx0XHRcdHNwZWNpYWwuX2RlZmF1bHQuYXBwbHkoIGV2ZW50UGF0aC5wb3AoKSwgZGF0YSApID09PSBmYWxzZSApICYmXG5cdFx0XHRcdGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblxuXHRcdFx0XHQvLyBDYWxsIGEgbmF0aXZlIERPTSBtZXRob2Qgb24gdGhlIHRhcmdldCB3aXRoIHRoZSBzYW1lIG5hbWUgYXMgdGhlIGV2ZW50LlxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXG5cdFx0XHRcdGlmICggb250eXBlICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBlbGVtWyB0eXBlIF0gKSAmJiAhalF1ZXJ5LmlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kXG5cdFx0XHRcdFx0dG1wID0gZWxlbVsgb250eXBlIF07XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZVxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB0eXBlO1xuXHRcdFx0XHRcdGVsZW1bIHR5cGUgXSgpO1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gdG1wO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XG5cdH0sXG5cblx0Ly8gUGlnZ3liYWNrIG9uIGEgZG9ub3IgZXZlbnQgdG8gc2ltdWxhdGUgYSBkaWZmZXJlbnQgb25lXG5cdC8vIFVzZWQgb25seSBmb3IgYGZvY3VzKGluIHwgb3V0KWAgZXZlbnRzXG5cdHNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7XG5cdFx0dmFyIGUgPSBqUXVlcnkuZXh0ZW5kKFxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCgpLFxuXHRcdFx0ZXZlbnQsXG5cdFx0XHR7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdGlzU2ltdWxhdGVkOiB0cnVlXG5cdFx0XHR9XG5cdFx0KTtcblxuXHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBlLCBudWxsLCBlbGVtICk7XG5cdH1cblxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xuXHRcdH0gKTtcblx0fSxcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBlbGVtID0gdGhpc1sgMCBdO1xuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xuXHRcdH1cblx0fVxufSApO1xuXG5cbmpRdWVyeS5lYWNoKCAoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cblx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0dGhpcy50cmlnZ2VyKCBuYW1lICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cblxuXG5cbnN1cHBvcnQuZm9jdXNpbiA9IFwib25mb2N1c2luXCIgaW4gd2luZG93O1xuXG5cbi8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00NFxuLy8gRmlyZWZveCBkb2Vzbid0IGhhdmUgZm9jdXMoaW4gfCBvdXQpIGV2ZW50c1xuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD02ODc3ODdcbi8vXG4vLyBTdXBwb3J0OiBDaHJvbWUgPD00OCAtIDQ5LCBTYWZhcmkgPD05LjAgLSA5LjFcbi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLFxuLy8gd2hpY2ggaXMgc3BlYyB2aW9sYXRpb24gLSBodHRwOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50cy1mb2N1c2V2ZW50LWV2ZW50LW9yZGVyXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ0OTg1N1xuaWYgKCAhc3VwcG9ydC5mb2N1c2luICkge1xuXHRqUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXG5cdFx0Ly8gQXR0YWNoIGEgc2luZ2xlIGNhcHR1cmluZyBoYW5kbGVyIG9uIHRoZSBkb2N1bWVudCB3aGlsZSBzb21lb25lIHdhbnRzIGZvY3VzaW4vZm9jdXNvdXRcblx0XHR2YXIgaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggZml4LCBldmVudC50YXJnZXQsIGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICkgKTtcblx0XHR9O1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGZpeCBdID0ge1xuXHRcdFx0c2V0dXA6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLmFkZEV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCAoIGF0dGFjaGVzIHx8IDAgKSArIDEgKTtcblx0XHRcdH0sXG5cdFx0XHR0ZWFyZG93bjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcyxcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXggKSAtIDE7XG5cblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XG5cdFx0XHRcdFx0ZG9jLnJlbW92ZUV2ZW50TGlzdGVuZXIoIG9yaWcsIGhhbmRsZXIsIHRydWUgKTtcblx0XHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGRvYywgZml4ICk7XG5cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4LCBhdHRhY2hlcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fSApO1xufVxudmFyIGxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uO1xuXG52YXIgbm9uY2UgPSBqUXVlcnkubm93KCk7XG5cbnZhciBycXVlcnkgPSAoIC9cXD8vICk7XG5cblxuXG4vLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nXG5qUXVlcnkucGFyc2VYTUwgPSBmdW5jdGlvbiggZGF0YSApIHtcblx0dmFyIHhtbDtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcgd2l0aCBpbnZhbGlkIGlucHV0LlxuXHR0cnkge1xuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge1xuXHRcdHhtbCA9IHVuZGVmaW5lZDtcblx0fVxuXG5cdGlmICggIXhtbCB8fCB4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwicGFyc2VyZXJyb3JcIiApLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZXJyb3IoIFwiSW52YWxpZCBYTUw6IFwiICsgZGF0YSApO1xuXHR9XG5cdHJldHVybiB4bWw7XG59O1xuXG5cbnZhclxuXHRyYnJhY2tldCA9IC9cXFtcXF0kLyxcblx0ckNSTEYgPSAvXFxyP1xcbi9nLFxuXHRyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksXG5cdHJzdWJtaXR0YWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtcblxuZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkge1xuXHR2YXIgbmFtZTtcblxuXHRpZiAoIGpRdWVyeS5pc0FycmF5KCBvYmogKSApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBhcnJheSBpdGVtLlxuXHRcdGpRdWVyeS5lYWNoKCBvYmosIGZ1bmN0aW9uKCBpLCB2ICkge1xuXHRcdFx0aWYgKCB0cmFkaXRpb25hbCB8fCByYnJhY2tldC50ZXN0KCBwcmVmaXggKSApIHtcblxuXHRcdFx0XHQvLyBUcmVhdCBlYWNoIGFycmF5IGl0ZW0gYXMgYSBzY2FsYXIuXG5cdFx0XHRcdGFkZCggcHJlZml4LCB2ICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gSXRlbSBpcyBub24tc2NhbGFyIChhcnJheSBvciBvYmplY3QpLCBlbmNvZGUgaXRzIG51bWVyaWMgaW5kZXguXG5cdFx0XHRcdGJ1aWxkUGFyYW1zKFxuXHRcdFx0XHRcdHByZWZpeCArIFwiW1wiICsgKCB0eXBlb2YgdiA9PT0gXCJvYmplY3RcIiAmJiB2ICE9IG51bGwgPyBpIDogXCJcIiApICsgXCJdXCIsXG5cdFx0XHRcdFx0dixcblx0XHRcdFx0XHR0cmFkaXRpb25hbCxcblx0XHRcdFx0XHRhZGRcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9ICk7XG5cblx0fSBlbHNlIGlmICggIXRyYWRpdGlvbmFsICYmIGpRdWVyeS50eXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBvYmplY3QgaXRlbS5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXggKyBcIltcIiArIG5hbWUgKyBcIl1cIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcblx0XHR9XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBzY2FsYXIgaXRlbS5cblx0XHRhZGQoIHByZWZpeCwgb2JqICk7XG5cdH1cbn1cblxuLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2Zcbi8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZ1xualF1ZXJ5LnBhcmFtID0gZnVuY3Rpb24oIGEsIHRyYWRpdGlvbmFsICkge1xuXHR2YXIgcHJlZml4LFxuXHRcdHMgPSBbXSxcblx0XHRhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZU9yRnVuY3Rpb24gKSB7XG5cblx0XHRcdC8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgdXNlIGl0cyByZXR1cm4gdmFsdWVcblx0XHRcdHZhciB2YWx1ZSA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZU9yRnVuY3Rpb24gKSA/XG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbigpIDpcblx0XHRcdFx0dmFsdWVPckZ1bmN0aW9uO1xuXG5cdFx0XHRzWyBzLmxlbmd0aCBdID0gZW5jb2RlVVJJQ29tcG9uZW50KCBrZXkgKSArIFwiPVwiICtcblx0XHRcdFx0ZW5jb2RlVVJJQ29tcG9uZW50KCB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICk7XG5cdFx0fTtcblxuXHQvLyBJZiBhbiBhcnJheSB3YXMgcGFzc2VkIGluLCBhc3N1bWUgdGhhdCBpdCBpcyBhbiBhcnJheSBvZiBmb3JtIGVsZW1lbnRzLlxuXHRpZiAoIGpRdWVyeS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcblx0XHR9ICk7XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXG5cdFx0Zm9yICggcHJlZml4IGluIGEgKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cblx0cmV0dXJuIHMuam9pbiggXCImXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoIFwiOmRpc2FibGVkXCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3Jrc1xuXHRcdFx0cmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoIFwiOmRpc2FibGVkXCIgKSAmJlxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXG5cdFx0XHRcdCggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTtcblx0XHR9IClcblx0XHQubWFwKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0cmV0dXJuIHZhbCA9PSBudWxsID9cblx0XHRcdFx0bnVsbCA6XG5cdFx0XHRcdGpRdWVyeS5pc0FycmF5KCB2YWwgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRcdHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHR9ICkuZ2V0KCk7XG5cdH1cbn0gKTtcblxuXG52YXJcblx0cjIwID0gLyUyMC9nLFxuXHRyaGFzaCA9IC8jLiokLyxcblx0cnRzID0gLyhbPyZdKV89W14mXSovLFxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKSQvbWcsXG5cblx0Ly8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cblx0LyogUHJlZmlsdGVyc1xuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxuXHQgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOlxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcblx0ICogMykga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHRwcmVmaWx0ZXJzID0ge30sXG5cblx0LyogVHJhbnNwb3J0cyBiaW5kaW5nc1xuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogMykgc2VsZWN0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gZ28gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHR0cmFuc3BvcnRzID0ge30sXG5cblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAoIzEwMDk4KTsgbXVzdCBhcHBlYXNlIGxpbnQgYW5kIGV2YWRlIGNvbXByZXNzaW9uXG5cdGFsbFR5cGVzID0gXCIqL1wiLmNvbmNhdCggXCIqXCIgKSxcblxuXHQvLyBBbmNob3IgdGFnIGZvciBwYXJzaW5nIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblx0b3JpZ2luQW5jaG9yLmhyZWYgPSBsb2NhdGlvbi5ocmVmO1xuXG4vLyBCYXNlIFwiY29uc3RydWN0b3JcIiBmb3IgalF1ZXJ5LmFqYXhQcmVmaWx0ZXIgYW5kIGpRdWVyeS5hamF4VHJhbnNwb3J0XG5mdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHtcblxuXHQvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvIFwiKlwiXG5cdHJldHVybiBmdW5jdGlvbiggZGF0YVR5cGVFeHByZXNzaW9uLCBmdW5jICkge1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZnVuYyA9IGRhdGFUeXBlRXhwcmVzc2lvbjtcblx0XHRcdGRhdGFUeXBlRXhwcmVzc2lvbiA9IFwiKlwiO1xuXHRcdH1cblxuXHRcdHZhciBkYXRhVHlwZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0ZGF0YVR5cGVzID0gZGF0YVR5cGVFeHByZXNzaW9uLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggZnVuYyApICkge1xuXG5cdFx0XHQvLyBGb3IgZWFjaCBkYXRhVHlwZSBpbiB0aGUgZGF0YVR5cGVFeHByZXNzaW9uXG5cdFx0XHR3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJlcGVuZCBpZiByZXF1ZXN0ZWRcblx0XHRcdFx0aWYgKCBkYXRhVHlwZVsgMCBdID09PSBcIitcIiApIHtcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkucHVzaCggZnVuYyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHByZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHNcbmZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUsIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKSB7XG5cblx0dmFyIGluc3BlY3RlZCA9IHt9LFxuXHRcdHNlZWtpbmdUcmFuc3BvcnQgPSAoIHN0cnVjdHVyZSA9PT0gdHJhbnNwb3J0cyApO1xuXG5cdGZ1bmN0aW9uIGluc3BlY3QoIGRhdGFUeXBlICkge1xuXHRcdHZhciBzZWxlY3RlZDtcblx0XHRpbnNwZWN0ZWRbIGRhdGFUeXBlIF0gPSB0cnVlO1xuXHRcdGpRdWVyeS5lYWNoKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10sIGZ1bmN0aW9uKCBfLCBwcmVmaWx0ZXJPckZhY3RvcnkgKSB7XG5cdFx0XHR2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApO1xuXHRcdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVPclRyYW5zcG9ydCA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc2Vla2luZ1RyYW5zcG9ydCAmJiAhaW5zcGVjdGVkWyBkYXRhVHlwZU9yVHJhbnNwb3J0IF0gKSB7XG5cblx0XHRcdFx0b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQgKSB7XG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdFx0cmV0dXJuIHNlbGVjdGVkO1xuXHR9XG5cblx0cmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyBcIipcIiBdICYmIGluc3BlY3QoIFwiKlwiICk7XG59XG5cbi8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9uc1xuLy8gdGhhdCB0YWtlcyBcImZsYXRcIiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZClcbi8vIEZpeGVzICM5ODg3XG5mdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHtcblx0dmFyIGtleSwgZGVlcCxcblx0XHRmbGF0T3B0aW9ucyA9IGpRdWVyeS5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnMgfHwge307XG5cblx0Zm9yICgga2V5IGluIHNyYyApIHtcblx0XHRpZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdCggZmxhdE9wdGlvbnNbIGtleSBdID8gdGFyZ2V0IDogKCBkZWVwIHx8ICggZGVlcCA9IHt9ICkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XG5cdFx0fVxuXHR9XG5cdGlmICggZGVlcCApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59XG5cbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcbiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHtcblxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJDb250ZW50LVR5cGVcIiApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxuXHRpZiAoIGN0ICkge1xuXHRcdGZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7XG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcblx0aWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7XG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xuXHRcdFx0aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgXCIgXCIgKyBkYXRhVHlwZXNbIDAgXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmVcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xuXHR9XG5cblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxuXHQvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xuXHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xuXHR9XG59XG5cbi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2VcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7XG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcblxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xuXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xuXHRcdGZvciAoIGNvbnYgaW4gcy5jb252ZXJ0ZXJzICkge1xuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcblx0XHR9XG5cdH1cblxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcblx0d2hpbGUgKCBjdXJyZW50ICkge1xuXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxuXHRcdGlmICggIXByZXYgJiYgaXNTdWNjZXNzICYmIHMuZGF0YUZpbHRlciApIHtcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xuXHRcdH1cblxuXHRcdHByZXYgPSBjdXJyZW50O1xuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHRcdGlmICggY3VycmVudCApIHtcblxuXHRcdFx0Ly8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0b1xuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcblxuXHRcdFx0XHRjdXJyZW50ID0gcHJldjtcblxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxuXHRcdFx0fSBlbHNlIGlmICggcHJldiAhPT0gXCIqXCIgJiYgcHJldiAhPT0gY3VycmVudCApIHtcblxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxuXHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbIFwiKiBcIiArIGN1cnJlbnQgXTtcblxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxuXHRcdFx0XHRpZiAoICFjb252ICkge1xuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudFxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdGNvbnZlcnRlcnNbIFwiKiBcIiArIHRtcFsgMCBdIF07XG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIENvbmRlbnNlIGVxdWl2YWxlbmNlIGNvbnZlcnRlcnNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgPT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgY29udjIgXTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGVcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y3VycmVudCA9IHRtcFsgMCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHRtcFsgMSBdICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXBwbHkgY29udmVydGVyIChpZiBub3QgYW4gZXF1aXZhbGVuY2UpXG5cdFx0XHRcdGlmICggY29udiAhPT0gdHJ1ZSApIHtcblxuXHRcdFx0XHRcdC8vIFVubGVzcyBlcnJvcnMgYXJlIGFsbG93ZWQgdG8gYnViYmxlLCBjYXRjaCBhbmQgcmV0dXJuIHRoZW1cblx0XHRcdFx0XHRpZiAoIGNvbnYgJiYgcy50aHJvd3MgKSB7XG5cdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXRlOiBcInBhcnNlcmVycm9yXCIsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGNvbnYgPyBlIDogXCJObyBjb252ZXJzaW9uIGZyb20gXCIgKyBwcmV2ICsgXCIgdG8gXCIgKyBjdXJyZW50XG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHsgc3RhdGU6IFwic3VjY2Vzc1wiLCBkYXRhOiByZXNwb25zZSB9O1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzXG5cdGFjdGl2ZTogMCxcblxuXHQvLyBMYXN0LU1vZGlmaWVkIGhlYWRlciBjYWNoZSBmb3IgbmV4dCByZXF1ZXN0XG5cdGxhc3RNb2RpZmllZDoge30sXG5cdGV0YWc6IHt9LFxuXG5cdGFqYXhTZXR0aW5nczoge1xuXHRcdHVybDogbG9jYXRpb24uaHJlZixcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGlzTG9jYWw6IHJsb2NhbFByb3RvY29sLnRlc3QoIGxvY2F0aW9uLnByb3RvY29sICksXG5cdFx0Z2xvYmFsOiB0cnVlLFxuXHRcdHByb2Nlc3NEYXRhOiB0cnVlLFxuXHRcdGFzeW5jOiB0cnVlLFxuXHRcdGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiLFxuXG5cdFx0Lypcblx0XHR0aW1lb3V0OiAwLFxuXHRcdGRhdGE6IG51bGwsXG5cdFx0ZGF0YVR5cGU6IG51bGwsXG5cdFx0dXNlcm5hbWU6IG51bGwsXG5cdFx0cGFzc3dvcmQ6IG51bGwsXG5cdFx0Y2FjaGU6IG51bGwsXG5cdFx0dGhyb3dzOiBmYWxzZSxcblx0XHR0cmFkaXRpb25hbDogZmFsc2UsXG5cdFx0aGVhZGVyczoge30sXG5cdFx0Ki9cblxuXHRcdGFjY2VwdHM6IHtcblx0XHRcdFwiKlwiOiBhbGxUeXBlcyxcblx0XHRcdHRleHQ6IFwidGV4dC9wbGFpblwiLFxuXHRcdFx0aHRtbDogXCJ0ZXh0L2h0bWxcIixcblx0XHRcdHhtbDogXCJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sXCIsXG5cdFx0XHRqc29uOiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdFwiXG5cdFx0fSxcblxuXHRcdGNvbnRlbnRzOiB7XG5cdFx0XHR4bWw6IC9cXGJ4bWxcXGIvLFxuXHRcdFx0aHRtbDogL1xcYmh0bWwvLFxuXHRcdFx0anNvbjogL1xcYmpzb25cXGIvXG5cdFx0fSxcblxuXHRcdHJlc3BvbnNlRmllbGRzOiB7XG5cdFx0XHR4bWw6IFwicmVzcG9uc2VYTUxcIixcblx0XHRcdHRleHQ6IFwicmVzcG9uc2VUZXh0XCIsXG5cdFx0XHRqc29uOiBcInJlc3BvbnNlSlNPTlwiXG5cdFx0fSxcblxuXHRcdC8vIERhdGEgY29udmVydGVyc1xuXHRcdC8vIEtleXMgc2VwYXJhdGUgc291cmNlIChvciBjYXRjaGFsbCBcIipcIikgYW5kIGRlc3RpbmF0aW9uIHR5cGVzIHdpdGggYSBzaW5nbGUgc3BhY2Vcblx0XHRjb252ZXJ0ZXJzOiB7XG5cblx0XHRcdC8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dFxuXHRcdFx0XCIqIHRleHRcIjogU3RyaW5nLFxuXG5cdFx0XHQvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0cmFuc2Zvcm1hdGlvbilcblx0XHRcdFwidGV4dCBodG1sXCI6IHRydWUsXG5cblx0XHRcdC8vIEV2YWx1YXRlIHRleHQgYXMgYSBqc29uIGV4cHJlc3Npb25cblx0XHRcdFwidGV4dCBqc29uXCI6IEpTT04ucGFyc2UsXG5cblx0XHRcdC8vIFBhcnNlIHRleHQgYXMgeG1sXG5cdFx0XHRcInRleHQgeG1sXCI6IGpRdWVyeS5wYXJzZVhNTFxuXHRcdH0sXG5cblx0XHQvLyBGb3Igb3B0aW9ucyB0aGF0IHNob3VsZG4ndCBiZSBkZWVwIGV4dGVuZGVkOlxuXHRcdC8vIHlvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBvcHRpb25zIGhlcmUgaWZcblx0XHQvLyBhbmQgd2hlbiB5b3UgY3JlYXRlIG9uZSB0aGF0IHNob3VsZG4ndCBiZVxuXHRcdC8vIGRlZXAgZXh0ZW5kZWQgKHNlZSBhamF4RXh0ZW5kKVxuXHRcdGZsYXRPcHRpb25zOiB7XG5cdFx0XHR1cmw6IHRydWUsXG5cdFx0XHRjb250ZXh0OiB0cnVlXG5cdFx0fVxuXHR9LFxuXG5cdC8vIENyZWF0ZXMgYSBmdWxsIGZsZWRnZWQgc2V0dGluZ3Mgb2JqZWN0IGludG8gdGFyZ2V0XG5cdC8vIHdpdGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy5cblx0Ly8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy5cblx0YWpheFNldHVwOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHtcblx0XHRyZXR1cm4gc2V0dGluZ3MgP1xuXG5cdFx0XHQvLyBCdWlsZGluZyBhIHNldHRpbmdzIG9iamVjdFxuXHRcdFx0YWpheEV4dGVuZCggYWpheEV4dGVuZCggdGFyZ2V0LCBqUXVlcnkuYWpheFNldHRpbmdzICksIHNldHRpbmdzICkgOlxuXG5cdFx0XHQvLyBFeHRlbmRpbmcgYWpheFNldHRpbmdzXG5cdFx0XHRhamF4RXh0ZW5kKCBqUXVlcnkuYWpheFNldHRpbmdzLCB0YXJnZXQgKTtcblx0fSxcblxuXHRhamF4UHJlZmlsdGVyOiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMgKSxcblx0YWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksXG5cblx0Ly8gTWFpbiBtZXRob2Rcblx0YWpheDogZnVuY3Rpb24oIHVybCwgb3B0aW9ucyApIHtcblxuXHRcdC8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlXG5cdFx0aWYgKCB0eXBlb2YgdXJsID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0b3B0aW9ucyA9IHVybDtcblx0XHRcdHVybCA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBGb3JjZSBvcHRpb25zIHRvIGJlIGFuIG9iamVjdFxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdFx0dmFyIHRyYW5zcG9ydCxcblxuXHRcdFx0Ly8gVVJMIHdpdGhvdXQgYW50aS1jYWNoZSBwYXJhbVxuXHRcdFx0Y2FjaGVVUkwsXG5cblx0XHRcdC8vIFJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyxcblx0XHRcdHJlc3BvbnNlSGVhZGVycyxcblxuXHRcdFx0Ly8gdGltZW91dCBoYW5kbGVcblx0XHRcdHRpbWVvdXRUaW1lcixcblxuXHRcdFx0Ly8gVXJsIGNsZWFudXAgdmFyXG5cdFx0XHR1cmxBbmNob3IsXG5cblx0XHRcdC8vIFJlcXVlc3Qgc3RhdGUgKGJlY29tZXMgZmFsc2UgdXBvbiBzZW5kIGFuZCB0cnVlIHVwb24gY29tcGxldGlvbilcblx0XHRcdGNvbXBsZXRlZCxcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkXG5cdFx0XHRmaXJlR2xvYmFscyxcblxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblxuXHRcdFx0Ly8gdW5jYWNoZWQgcGFydCBvZiB0aGUgdXJsXG5cdFx0XHR1bmNhY2hlZCxcblxuXHRcdFx0Ly8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdFxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXG5cblx0XHRcdC8vIENhbGxiYWNrcyBjb250ZXh0XG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcblxuXHRcdFx0Ly8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvblxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXG5cdFx0XHRcdCggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LFxuXG5cdFx0XHQvLyBEZWZlcnJlZHNcblx0XHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRjb21wbGV0ZURlZmVycmVkID0galF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRzdGF0dXNDb2RlID0gcy5zdGF0dXNDb2RlIHx8IHt9LFxuXG5cdFx0XHQvLyBIZWFkZXJzICh0aGV5IGFyZSBzZW50IGFsbCBhdCBvbmNlKVxuXHRcdFx0cmVxdWVzdEhlYWRlcnMgPSB7fSxcblx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXMgPSB7fSxcblxuXHRcdFx0Ly8gRGVmYXVsdCBhYm9ydCBtZXNzYWdlXG5cdFx0XHRzdHJBYm9ydCA9IFwiY2FuY2VsZWRcIixcblxuXHRcdFx0Ly8gRmFrZSB4aHJcblx0XHRcdGpxWEhSID0ge1xuXHRcdFx0XHRyZWFkeVN0YXRlOiAwLFxuXG5cdFx0XHRcdC8vIEJ1aWxkcyBoZWFkZXJzIGhhc2h0YWJsZSBpZiBuZWVkZWRcblx0XHRcdFx0Z2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7XG5cdFx0XHRcdFx0dmFyIG1hdGNoO1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRcdFx0aWYgKCAhcmVzcG9uc2VIZWFkZXJzICkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnMgPSB7fTtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoID0gcmhlYWRlcnMuZXhlYyggcmVzcG9uc2VIZWFkZXJzU3RyaW5nICkgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSBdID0gbWF0Y2hbIDIgXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBtYXRjaCA9PSBudWxsID8gbnVsbCA6IG1hdGNoO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFJhdyBzdHJpbmdcblx0XHRcdFx0Z2V0QWxsUmVzcG9uc2VIZWFkZXJzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gY29tcGxldGVkID8gcmVzcG9uc2VIZWFkZXJzU3RyaW5nIDogbnVsbDtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYWNoZXMgdGhlIGhlYWRlclxuXHRcdFx0XHRzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdG5hbWUgPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSA9XG5cdFx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdIHx8IG5hbWU7XG5cdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIE92ZXJyaWRlcyByZXNwb25zZSBjb250ZW50LXR5cGUgaGVhZGVyXG5cdFx0XHRcdG92ZXJyaWRlTWltZVR5cGU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRzLm1pbWVUeXBlID0gdHlwZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdFx0c3RhdHVzQ29kZTogZnVuY3Rpb24oIG1hcCApIHtcblx0XHRcdFx0XHR2YXIgY29kZTtcblx0XHRcdFx0XHRpZiAoIG1hcCApIHtcblx0XHRcdFx0XHRcdGlmICggY29tcGxldGVkICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEV4ZWN1dGUgdGhlIGFwcHJvcHJpYXRlIGNhbGxiYWNrc1xuXHRcdFx0XHRcdFx0XHRqcVhIUi5hbHdheXMoIG1hcFsganFYSFIuc3RhdHVzIF0gKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTGF6eS1hZGQgdGhlIG5ldyBjYWxsYmFja3MgaW4gYSB3YXkgdGhhdCBwcmVzZXJ2ZXMgb2xkIG9uZXNcblx0XHRcdFx0XHRcdFx0Zm9yICggY29kZSBpbiBtYXAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdHVzQ29kZVsgY29kZSBdID0gWyBzdGF0dXNDb2RlWyBjb2RlIF0sIG1hcFsgY29kZSBdIF07XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FuY2VsIHRoZSByZXF1ZXN0XG5cdFx0XHRcdGFib3J0OiBmdW5jdGlvbiggc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHR2YXIgZmluYWxUZXh0ID0gc3RhdHVzVGV4dCB8fCBzdHJBYm9ydDtcblx0XHRcdFx0XHRpZiAoIHRyYW5zcG9ydCApIHtcblx0XHRcdFx0XHRcdHRyYW5zcG9ydC5hYm9ydCggZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRvbmUoIDAsIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0Ly8gQXR0YWNoIGRlZmVycmVkc1xuXHRcdGRlZmVycmVkLnByb21pc2UoIGpxWEhSICk7XG5cblx0XHQvLyBBZGQgcHJvdG9jb2wgaWYgbm90IHByb3ZpZGVkIChwcmVmaWx0ZXJzIG1pZ2h0IGV4cGVjdCBpdClcblx0XHQvLyBIYW5kbGUgZmFsc3kgdXJsIGluIHRoZSBzZXR0aW5ncyBvYmplY3QgKCMxMDA5MzogY29uc2lzdGVuY3kgd2l0aCBvbGQgc2lnbmF0dXJlKVxuXHRcdC8vIFdlIGFsc28gdXNlIHRoZSB1cmwgcGFyYW1ldGVyIGlmIGF2YWlsYWJsZVxuXHRcdHMudXJsID0gKCAoIHVybCB8fCBzLnVybCB8fCBsb2NhdGlvbi5ocmVmICkgKyBcIlwiIClcblx0XHRcdC5yZXBsYWNlKCBycHJvdG9jb2wsIGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICk7XG5cblx0XHQvLyBBbGlhcyBtZXRob2Qgb3B0aW9uIHRvIHR5cGUgYXMgcGVyIHRpY2tldCAjMTIwMDRcblx0XHRzLnR5cGUgPSBvcHRpb25zLm1ldGhvZCB8fCBvcHRpb25zLnR5cGUgfHwgcy5tZXRob2QgfHwgcy50eXBlO1xuXG5cdFx0Ly8gRXh0cmFjdCBkYXRhVHlwZXMgbGlzdFxuXHRcdHMuZGF0YVR5cGVzID0gKCBzLmRhdGFUeXBlIHx8IFwiKlwiICkudG9Mb3dlckNhc2UoKS5tYXRjaCggcm5vdHdoaXRlICkgfHwgWyBcIlwiIF07XG5cblx0XHQvLyBBIGNyb3NzLWRvbWFpbiByZXF1ZXN0IGlzIGluIG9yZGVyIHdoZW4gdGhlIG9yaWdpbiBkb2Vzbid0IG1hdGNoIHRoZSBjdXJyZW50IG9yaWdpbi5cblx0XHRpZiAoIHMuY3Jvc3NEb21haW4gPT0gbnVsbCApIHtcblx0XHRcdHVybEFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiYVwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExLCBFZGdlIDEyIC0gMTNcblx0XHRcdC8vIElFIHRocm93cyBleGNlcHRpb24gb24gYWNjZXNzaW5nIHRoZSBocmVmIHByb3BlcnR5IGlmIHVybCBpcyBtYWxmb3JtZWQsXG5cdFx0XHQvLyBlLmcuIGh0dHA6Ly9leGFtcGxlLmNvbTo4MHgvXG5cdFx0XHR0cnkge1xuXHRcdFx0XHR1cmxBbmNob3IuaHJlZiA9IHMudXJsO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExIG9ubHlcblx0XHRcdFx0Ly8gQW5jaG9yJ3MgaG9zdCBwcm9wZXJ0eSBpc24ndCBjb3JyZWN0bHkgc2V0IHdoZW4gcy51cmwgaXMgcmVsYXRpdmVcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSB1cmxBbmNob3IuaHJlZjtcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IG9yaWdpbkFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIG9yaWdpbkFuY2hvci5ob3N0ICE9PVxuXHRcdFx0XHRcdHVybEFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIHVybEFuY2hvci5ob3N0O1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlcmUgaXMgYW4gZXJyb3IgcGFyc2luZyB0aGUgVVJMLCBhc3N1bWUgaXQgaXMgY3Jvc3NEb21haW4sXG5cdFx0XHRcdC8vIGl0IGNhbiBiZSByZWplY3RlZCBieSB0aGUgdHJhbnNwb3J0IGlmIGl0IGlzIGludmFsaWRcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nXG5cdFx0aWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cy5kYXRhID0galF1ZXJ5LnBhcmFtKCBzLmRhdGEsIHMudHJhZGl0aW9uYWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwcmVmaWx0ZXJzXG5cdFx0aW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhIHByZWZpbHRlciwgc3RvcCB0aGVyZVxuXHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdH1cblxuXHRcdC8vIFdlIGNhbiBmaXJlIGdsb2JhbCBldmVudHMgYXMgb2Ygbm93IGlmIGFza2VkIHRvXG5cdFx0Ly8gRG9uJ3QgZmlyZSBldmVudHMgaWYgalF1ZXJ5LmV2ZW50IGlzIHVuZGVmaW5lZCBpbiBhbiBBTUQtdXNhZ2Ugc2NlbmFyaW8gKCMxNTExOClcblx0XHRmaXJlR2xvYmFscyA9IGpRdWVyeS5ldmVudCAmJiBzLmdsb2JhbDtcblxuXHRcdC8vIFdhdGNoIGZvciBhIG5ldyBzZXQgb2YgcmVxdWVzdHNcblx0XHRpZiAoIGZpcmVHbG9iYWxzICYmIGpRdWVyeS5hY3RpdmUrKyA9PT0gMCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdGFydFwiICk7XG5cdFx0fVxuXG5cdFx0Ly8gVXBwZXJjYXNlIHRoZSB0eXBlXG5cdFx0cy50eXBlID0gcy50eXBlLnRvVXBwZXJDYXNlKCk7XG5cblx0XHQvLyBEZXRlcm1pbmUgaWYgcmVxdWVzdCBoYXMgY29udGVudFxuXHRcdHMuaGFzQ29udGVudCA9ICFybm9Db250ZW50LnRlc3QoIHMudHlwZSApO1xuXG5cdFx0Ly8gU2F2ZSB0aGUgVVJMIGluIGNhc2Ugd2UncmUgdG95aW5nIHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlXG5cdFx0Ly8gYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyIGxhdGVyIG9uXG5cdFx0Ly8gUmVtb3ZlIGhhc2ggdG8gc2ltcGxpZnkgdXJsIG1hbmlwdWxhdGlvblxuXHRcdGNhY2hlVVJMID0gcy51cmwucmVwbGFjZSggcmhhc2gsIFwiXCIgKTtcblxuXHRcdC8vIE1vcmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50XG5cdFx0aWYgKCAhcy5oYXNDb250ZW50ICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgaGFzaCBzbyB3ZSBjYW4gcHV0IGl0IGJhY2tcblx0XHRcdHVuY2FjaGVkID0gcy51cmwuc2xpY2UoIGNhY2hlVVJMLmxlbmd0aCApO1xuXG5cdFx0XHQvLyBJZiBkYXRhIGlzIGF2YWlsYWJsZSwgYXBwZW5kIGRhdGEgdG8gdXJsXG5cdFx0XHRpZiAoIHMuZGF0YSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgKz0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuZGF0YTtcblxuXHRcdFx0XHQvLyAjOTY4MjogcmVtb3ZlIGRhdGEgc28gdGhhdCBpdCdzIG5vdCB1c2VkIGluIGFuIGV2ZW50dWFsIHJldHJ5XG5cdFx0XHRcdGRlbGV0ZSBzLmRhdGE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBhbnRpLWNhY2hlIGluIHVuY2FjaGVkIHVybCBpZiBuZWVkZWRcblx0XHRcdGlmICggcy5jYWNoZSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdGNhY2hlVVJMID0gY2FjaGVVUkwucmVwbGFjZSggcnRzLCBcIlwiICk7XG5cdFx0XHRcdHVuY2FjaGVkID0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIFwiXz1cIiArICggbm9uY2UrKyApICsgdW5jYWNoZWQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAoZ2gtMTczMilcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcblxuXHRcdC8vIENoYW5nZSAnJTIwJyB0byAnKycgaWYgdGhpcyBpcyBlbmNvZGVkIGZvcm0gYm9keSBjb250ZW50IChnaC0yNjU4KVxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXG5cdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApLmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCApIHtcblx0XHRcdHMuZGF0YSA9IHMuZGF0YS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xuXG5cdFx0XHQvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm5cblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xuXHRcdH1cblxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxuXHRcdHN0ckFib3J0ID0gXCJhYm9ydFwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXG5cdFx0Y29tcGxldGVEZWZlcnJlZC5hZGQoIHMuY29tcGxldGUgKTtcblx0XHRqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTtcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybiBqcVhIUjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGltZW91dFxuXHRcdFx0aWYgKCBzLmFzeW5jICYmIHMudGltZW91dCA+IDAgKSB7XG5cdFx0XHRcdHRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcblx0XHRcdFx0fSwgcy50aW1lb3V0ICk7XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbXBsZXRlZCA9IGZhbHNlO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBvdGhlcnMgYXMgcmVzdWx0c1xuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcblx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGNvbXBsZXRlZCA9IHRydWU7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcblx0XHRcdHJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7XG5cblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdFx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkxhc3QtTW9kaWZpZWRcIiApO1xuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiZXRhZ1wiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaWYgbm8gY29udGVudFxuXHRcdFx0XHRpZiAoIHN0YXR1cyA9PT0gMjA0IHx8IHMudHlwZSA9PT0gXCJIRUFEXCIgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm9jb250ZW50XCI7XG5cblx0XHRcdFx0Ly8gaWYgbm90IG1vZGlmaWVkXG5cdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vdG1vZGlmaWVkXCI7XG5cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBkYXRhLCBsZXQncyBjb252ZXJ0IGl0XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IHJlc3BvbnNlLnN0YXRlO1xuXHRcdFx0XHRcdHN1Y2Nlc3MgPSByZXNwb25zZS5kYXRhO1xuXHRcdFx0XHRcdGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG5cdFx0XHRcdFx0aXNTdWNjZXNzID0gIWVycm9yO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHNcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xuXHRcdFx0XHRpZiAoIHN0YXR1cyB8fCAhc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJlcnJvclwiO1xuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcblx0XHRcdFx0XHRcdHN0YXR1cyA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XG5cdFx0XHRqcVhIUi5zdGF0dXMgPSBzdGF0dXM7XG5cdFx0XHRqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArIFwiXCI7XG5cblx0XHRcdC8vIFN1Y2Nlc3MvRXJyb3Jcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwgZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xuXHRcdFx0c3RhdHVzQ29kZSA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlzU3VjY2VzcyA/IFwiYWpheFN1Y2Nlc3NcIiA6IFwiYWpheEVycm9yXCIsXG5cdFx0XHRcdFx0WyBqcVhIUiwgcywgaXNTdWNjZXNzID8gc3VjY2VzcyA6IGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29tcGxldGVcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgdGhlIGdsb2JhbCBBSkFYIGNvdW50ZXJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RvcFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ganFYSFI7XG5cdH0sXG5cblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgZGF0YSwgY2FsbGJhY2ssIFwianNvblwiICk7XG5cdH0sXG5cblx0Z2V0U2NyaXB0OiBmdW5jdGlvbiggdXJsLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCB1bmRlZmluZWQsIGNhbGxiYWNrLCBcInNjcmlwdFwiICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHtcblx0alF1ZXJ5WyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrLCB0eXBlICkge1xuXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBkYXRhICkgKSB7XG5cdFx0XHR0eXBlID0gdHlwZSB8fCBjYWxsYmFjaztcblx0XHRcdGNhbGxiYWNrID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0Ly8gVGhlIHVybCBjYW4gYmUgYW4gb3B0aW9ucyBvYmplY3QgKHdoaWNoIHRoZW4gbXVzdCBoYXZlIC51cmwpXG5cdFx0cmV0dXJuIGpRdWVyeS5hamF4KCBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHR1cmw6IHVybCxcblx0XHRcdHR5cGU6IG1ldGhvZCxcblx0XHRcdGRhdGFUeXBlOiB0eXBlLFxuXHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdHN1Y2Nlc3M6IGNhbGxiYWNrXG5cdFx0fSwgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHVybCApICYmIHVybCApICk7XG5cdH07XG59ICk7XG5cblxualF1ZXJ5Ll9ldmFsVXJsID0gZnVuY3Rpb24oIHVybCApIHtcblx0cmV0dXJuIGpRdWVyeS5hamF4KCB7XG5cdFx0dXJsOiB1cmwsXG5cblx0XHQvLyBNYWtlIHRoaXMgZXhwbGljaXQsIHNpbmNlIHVzZXIgY2FuIG92ZXJyaWRlIHRoaXMgdGhyb3VnaCBhamF4U2V0dXAgKCMxMTI2NClcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGRhdGFUeXBlOiBcInNjcmlwdFwiLFxuXHRcdGNhY2hlOiB0cnVlLFxuXHRcdGFzeW5jOiBmYWxzZSxcblx0XHRnbG9iYWw6IGZhbHNlLFxuXHRcdFwidGhyb3dzXCI6IHRydWVcblx0fSApO1xufTtcblxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHdyYXBBbGw6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciB3cmFwO1xuXG5cdFx0aWYgKCB0aGlzWyAwIF0gKSB7XG5cdFx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRcdGh0bWwgPSBodG1sLmNhbGwoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUaGUgZWxlbWVudHMgdG8gd3JhcCB0aGUgdGFyZ2V0IGFyb3VuZFxuXHRcdFx0d3JhcCA9IGpRdWVyeSggaHRtbCwgdGhpc1sgMCBdLm93bmVyRG9jdW1lbnQgKS5lcSggMCApLmNsb25lKCB0cnVlICk7XG5cblx0XHRcdGlmICggdGhpc1sgMCBdLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHdyYXAuaW5zZXJ0QmVmb3JlKCB0aGlzWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0d3JhcC5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZWxlbSA9IHRoaXM7XG5cblx0XHRcdFx0d2hpbGUgKCBlbGVtLmZpcnN0RWxlbWVudENoaWxkICkge1xuXHRcdFx0XHRcdGVsZW0gPSBlbGVtLmZpcnN0RWxlbWVudENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIGVsZW07XG5cdFx0XHR9ICkuYXBwZW5kKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0d3JhcElubmVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcElubmVyKCBodG1sLmNhbGwoIHRoaXMsIGkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKSxcblx0XHRcdFx0Y29udGVudHMgPSBzZWxmLmNvbnRlbnRzKCk7XG5cblx0XHRcdGlmICggY29udGVudHMubGVuZ3RoICkge1xuXHRcdFx0XHRjb250ZW50cy53cmFwQWxsKCBodG1sICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNlbGYuYXBwZW5kKCBodG1sICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHdyYXA6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciBpc0Z1bmN0aW9uID0galF1ZXJ5LmlzRnVuY3Rpb24oIGh0bWwgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcEFsbCggaXNGdW5jdGlvbiA/IGh0bWwuY2FsbCggdGhpcywgaSApIDogaHRtbCApO1xuXHRcdH0gKTtcblx0fSxcblxuXHR1bndyYXA6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR0aGlzLnBhcmVudCggc2VsZWN0b3IgKS5ub3QoIFwiYm9keVwiICkuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkoIHRoaXMgKS5yZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5vZGVzICk7XG5cdFx0fSApO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4cHIucHNldWRvcy5oaWRkZW4gPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuICFqUXVlcnkuZXhwci5wc2V1ZG9zLnZpc2libGUoIGVsZW0gKTtcbn07XG5qUXVlcnkuZXhwci5wc2V1ZG9zLnZpc2libGUgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuICEhKCBlbGVtLm9mZnNldFdpZHRoIHx8IGVsZW0ub2Zmc2V0SGVpZ2h0IHx8IGVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKTtcbn07XG5cblxuXG5cbmpRdWVyeS5hamF4U2V0dGluZ3MueGhyID0gZnVuY3Rpb24oKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3QoKTtcblx0fSBjYXRjaCAoIGUgKSB7fVxufTtcblxudmFyIHhoclN1Y2Nlc3NTdGF0dXMgPSB7XG5cblx0XHQvLyBGaWxlIHByb3RvY29sIGFsd2F5cyB5aWVsZHMgc3RhdHVzIGNvZGUgMCwgYXNzdW1lIDIwMFxuXHRcdDA6IDIwMCxcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0Ly8gIzE0NTA6IHNvbWV0aW1lcyBJRSByZXR1cm5zIDEyMjMgd2hlbiBpdCBzaG91bGQgYmUgMjA0XG5cdFx0MTIyMzogMjA0XG5cdH0sXG5cdHhoclN1cHBvcnRlZCA9IGpRdWVyeS5hamF4U2V0dGluZ3MueGhyKCk7XG5cbnN1cHBvcnQuY29ycyA9ICEheGhyU3VwcG9ydGVkICYmICggXCJ3aXRoQ3JlZGVudGlhbHNcIiBpbiB4aHJTdXBwb3J0ZWQgKTtcbnN1cHBvcnQuYWpheCA9IHhoclN1cHBvcnRlZCA9ICEheGhyU3VwcG9ydGVkO1xuXG5qUXVlcnkuYWpheFRyYW5zcG9ydCggZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cdHZhciBjYWxsYmFjaywgZXJyb3JDYWxsYmFjaztcblxuXHQvLyBDcm9zcyBkb21haW4gb25seSBhbGxvd2VkIGlmIHN1cHBvcnRlZCB0aHJvdWdoIFhNTEh0dHBSZXF1ZXN0XG5cdGlmICggc3VwcG9ydC5jb3JzIHx8IHhoclN1cHBvcnRlZCAmJiAhb3B0aW9ucy5jcm9zc0RvbWFpbiApIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2VuZDogZnVuY3Rpb24oIGhlYWRlcnMsIGNvbXBsZXRlICkge1xuXHRcdFx0XHR2YXIgaSxcblx0XHRcdFx0XHR4aHIgPSBvcHRpb25zLnhocigpO1xuXG5cdFx0XHRcdHhoci5vcGVuKFxuXHRcdFx0XHRcdG9wdGlvbnMudHlwZSxcblx0XHRcdFx0XHRvcHRpb25zLnVybCxcblx0XHRcdFx0XHRvcHRpb25zLmFzeW5jLFxuXHRcdFx0XHRcdG9wdGlvbnMudXNlcm5hbWUsXG5cdFx0XHRcdFx0b3B0aW9ucy5wYXNzd29yZFxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdC8vIEFwcGx5IGN1c3RvbSBmaWVsZHMgaWYgcHJvdmlkZWRcblx0XHRcdFx0aWYgKCBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRmb3IgKCBpIGluIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdFx0eGhyWyBpIF0gPSBvcHRpb25zLnhockZpZWxkc1sgaSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIE92ZXJyaWRlIG1pbWUgdHlwZSBpZiBuZWVkZWRcblx0XHRcdFx0aWYgKCBvcHRpb25zLm1pbWVUeXBlICYmIHhoci5vdmVycmlkZU1pbWVUeXBlICkge1xuXHRcdFx0XHRcdHhoci5vdmVycmlkZU1pbWVUeXBlKCBvcHRpb25zLm1pbWVUeXBlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBYLVJlcXVlc3RlZC1XaXRoIGhlYWRlclxuXHRcdFx0XHQvLyBGb3IgY3Jvc3MtZG9tYWluIHJlcXVlc3RzLCBzZWVpbmcgYXMgY29uZGl0aW9ucyBmb3IgYSBwcmVmbGlnaHQgYXJlXG5cdFx0XHRcdC8vIGFraW4gdG8gYSBqaWdzYXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2ZXIgc2V0IGl0IHRvIGJlIHN1cmUuXG5cdFx0XHRcdC8vIChpdCBjYW4gYWx3YXlzIGJlIHNldCBvbiBhIHBlci1yZXF1ZXN0IGJhc2lzIG9yIGV2ZW4gdXNpbmcgYWpheFNldHVwKVxuXHRcdFx0XHQvLyBGb3Igc2FtZS1kb21haW4gcmVxdWVzdHMsIHdvbid0IGNoYW5nZSBoZWFkZXIgaWYgYWxyZWFkeSBwcm92aWRlZC5cblx0XHRcdFx0aWYgKCAhb3B0aW9ucy5jcm9zc0RvbWFpbiAmJiAhaGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSApIHtcblx0XHRcdFx0XHRoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdID0gXCJYTUxIdHRwUmVxdWVzdFwiO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU2V0IGhlYWRlcnNcblx0XHRcdFx0Zm9yICggaSBpbiBoZWFkZXJzICkge1xuXHRcdFx0XHRcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBoZWFkZXJzWyBpIF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0gZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBlcnJvckNhbGxiYWNrID0geGhyLm9ubG9hZCA9XG5cdFx0XHRcdFx0XHRcdFx0eGhyLm9uZXJyb3IgPSB4aHIub25hYm9ydCA9IHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuXG5cdFx0XHRcdFx0XHRcdGlmICggdHlwZSA9PT0gXCJhYm9ydFwiICkge1xuXHRcdFx0XHRcdFx0XHRcdHhoci5hYm9ydCgpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCB0eXBlID09PSBcImVycm9yXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIE9uIGEgbWFudWFsIG5hdGl2ZSBhYm9ydCwgSUU5IHRocm93c1xuXHRcdFx0XHRcdFx0XHRcdC8vIGVycm9ycyBvbiBhbnkgcHJvcGVydHkgYWNjZXNzIHRoYXQgaXMgbm90IHJlYWR5U3RhdGVcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHR5cGVvZiB4aHIuc3RhdHVzICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIDAsIFwiZXJyb3JcIiApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZShcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBGaWxlOiBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyAwOyBzZWUgIzg2MDUsICMxNDIwN1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHJTdWNjZXNzU3RhdHVzWyB4aHIuc3RhdHVzIF0gfHwgeGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0LFxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSUU5IGhhcyBubyBYSFIyIGJ1dCB0aHJvd3Mgb24gYmluYXJ5ICh0cmFjLTExNDI2KVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gRm9yIFhIUjIgbm9uLXRleHQsIGxldCB0aGUgY2FsbGVyIGhhbmRsZSBpdCAoZ2gtMjQ5OClcblx0XHRcdFx0XHRcdFx0XHRcdCggeGhyLnJlc3BvbnNlVHlwZSB8fCBcInRleHRcIiApICE9PSBcInRleHRcIiAgfHxcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGVvZiB4aHIucmVzcG9uc2VUZXh0ICE9PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0eyBiaW5hcnk6IHhoci5yZXNwb25zZSB9IDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0eyB0ZXh0OiB4aHIucmVzcG9uc2VUZXh0IH0sXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKClcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBMaXN0ZW4gdG8gZXZlbnRzXG5cdFx0XHRcdHhoci5vbmxvYWQgPSBjYWxsYmFjaygpO1xuXHRcdFx0XHRlcnJvckNhbGxiYWNrID0geGhyLm9uZXJyb3IgPSBjYWxsYmFjayggXCJlcnJvclwiICk7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0XHRcdC8vIFVzZSBvbnJlYWR5c3RhdGVjaGFuZ2UgdG8gcmVwbGFjZSBvbmFib3J0XG5cdFx0XHRcdC8vIHRvIGhhbmRsZSB1bmNhdWdodCBhYm9ydHNcblx0XHRcdFx0aWYgKCB4aHIub25hYm9ydCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHhoci5vbmFib3J0ID0gZXJyb3JDYWxsYmFjaztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIENoZWNrIHJlYWR5U3RhdGUgYmVmb3JlIHRpbWVvdXQgYXMgaXQgY2hhbmdlc1xuXHRcdFx0XHRcdFx0aWYgKCB4aHIucmVhZHlTdGF0ZSA9PT0gNCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBBbGxvdyBvbmVycm9yIHRvIGJlIGNhbGxlZCBmaXJzdCxcblx0XHRcdFx0XHRcdFx0Ly8gYnV0IHRoYXQgd2lsbCBub3QgaGFuZGxlIGEgbmF0aXZlIGFib3J0XG5cdFx0XHRcdFx0XHRcdC8vIEFsc28sIHNhdmUgZXJyb3JDYWxsYmFjayB0byBhIHZhcmlhYmxlXG5cdFx0XHRcdFx0XHRcdC8vIGFzIHhoci5vbmVycm9yIGNhbm5vdCBiZSBhY2Nlc3NlZFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGVycm9yQ2FsbGJhY2soKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQ3JlYXRlIHRoZSBhYm9ydCBjYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGNhbGxiYWNrKCBcImFib3J0XCIgKTtcblxuXHRcdFx0XHR0cnkge1xuXG5cdFx0XHRcdFx0Ly8gRG8gc2VuZCB0aGUgcmVxdWVzdCAodGhpcyBtYXkgcmFpc2UgYW4gZXhjZXB0aW9uKVxuXHRcdFx0XHRcdHhoci5zZW5kKCBvcHRpb25zLmhhc0NvbnRlbnQgJiYgb3B0aW9ucy5kYXRhIHx8IG51bGwgKTtcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHQvLyAjMTQ2ODM6IE9ubHkgcmV0aHJvdyBpZiB0aGlzIGhhc24ndCBiZWVuIG5vdGlmaWVkIGFzIGFuIGVycm9yIHlldFxuXHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFByZXZlbnQgYXV0by1leGVjdXRpb24gb2Ygc2NyaXB0cyB3aGVuIG5vIGV4cGxpY2l0IGRhdGFUeXBlIHdhcyBwcm92aWRlZCAoU2VlIGdoLTI0MzIpXG5qUXVlcnkuYWpheFByZWZpbHRlciggZnVuY3Rpb24oIHMgKSB7XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLmNvbnRlbnRzLnNjcmlwdCA9IGZhbHNlO1xuXHR9XG59ICk7XG5cbi8vIEluc3RhbGwgc2NyaXB0IGRhdGFUeXBlXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGFjY2VwdHM6IHtcblx0XHRzY3JpcHQ6IFwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBcIiArXG5cdFx0XHRcImFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdFwiXG5cdH0sXG5cdGNvbnRlbnRzOiB7XG5cdFx0c2NyaXB0OiAvXFxiKD86amF2YXxlY21hKXNjcmlwdFxcYi9cblx0fSxcblx0Y29udmVydGVyczoge1xuXHRcdFwidGV4dCBzY3JpcHRcIjogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggdGV4dCApO1xuXHRcdFx0cmV0dXJuIHRleHQ7XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIEhhbmRsZSBjYWNoZSdzIHNwZWNpYWwgY2FzZSBhbmQgY3Jvc3NEb21haW5cbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0cy5jYWNoZSA9IGZhbHNlO1xuXHR9XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLnR5cGUgPSBcIkdFVFwiO1xuXHR9XG59ICk7XG5cbi8vIEJpbmQgc2NyaXB0IHRhZyBoYWNrIHRyYW5zcG9ydFxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xuXG5cdC8vIFRoaXMgdHJhbnNwb3J0IG9ubHkgZGVhbHMgd2l0aCBjcm9zcyBkb21haW4gcmVxdWVzdHNcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHZhciBzY3JpcHQsIGNhbGxiYWNrO1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggXywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHNjcmlwdCA9IGpRdWVyeSggXCI8c2NyaXB0PlwiICkucHJvcCgge1xuXHRcdFx0XHRcdGNoYXJzZXQ6IHMuc2NyaXB0Q2hhcnNldCxcblx0XHRcdFx0XHRzcmM6IHMudXJsXG5cdFx0XHRcdH0gKS5vbihcblx0XHRcdFx0XHRcImxvYWQgZXJyb3JcIixcblx0XHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRzY3JpcHQucmVtb3ZlKCk7XG5cdFx0XHRcdFx0XHRjYWxsYmFjayA9IG51bGw7XG5cdFx0XHRcdFx0XHRpZiAoIGV2dCApIHtcblx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIGV2dC50eXBlID09PSBcImVycm9yXCIgPyA0MDQgOiAyMDAsIGV2dC50eXBlICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdC8vIFVzZSBuYXRpdmUgRE9NIG1hbmlwdWxhdGlvbiB0byBhdm9pZCBvdXIgZG9tTWFuaXAgQUpBWCB0cmlja2VyeVxuXHRcdFx0XHRkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHRbIDAgXSApO1xuXHRcdFx0fSxcblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG52YXIgb2xkQ2FsbGJhY2tzID0gW10sXG5cdHJqc29ucCA9IC8oPSlcXD8oPz0mfCQpfFxcP1xcPy87XG5cbi8vIERlZmF1bHQganNvbnAgc2V0dGluZ3NcbmpRdWVyeS5hamF4U2V0dXAoIHtcblx0anNvbnA6IFwiY2FsbGJhY2tcIixcblx0anNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGNhbGxiYWNrID0gb2xkQ2FsbGJhY2tzLnBvcCgpIHx8ICggalF1ZXJ5LmV4cGFuZG8gKyBcIl9cIiArICggbm9uY2UrKyApICk7XG5cdFx0dGhpc1sgY2FsbGJhY2sgXSA9IHRydWU7XG5cdFx0cmV0dXJuIGNhbGxiYWNrO1xuXHR9XG59ICk7XG5cbi8vIERldGVjdCwgbm9ybWFsaXplIG9wdGlvbnMgYW5kIGluc3RhbGwgY2FsbGJhY2tzIGZvciBqc29ucCByZXF1ZXN0c1xualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIFwianNvbiBqc29ucFwiLCBmdW5jdGlvbiggcywgb3JpZ2luYWxTZXR0aW5ncywganFYSFIgKSB7XG5cblx0dmFyIGNhbGxiYWNrTmFtZSwgb3ZlcndyaXR0ZW4sIHJlc3BvbnNlQ29udGFpbmVyLFxuXHRcdGpzb25Qcm9wID0gcy5qc29ucCAhPT0gZmFsc2UgJiYgKCByanNvbnAudGVzdCggcy51cmwgKSA/XG5cdFx0XHRcInVybFwiIDpcblx0XHRcdHR5cGVvZiBzLmRhdGEgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0KCBzLmNvbnRlbnRUeXBlIHx8IFwiXCIgKVxuXHRcdFx0XHRcdC5pbmRleE9mKCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiICkgPT09IDAgJiZcblx0XHRcdFx0cmpzb25wLnRlc3QoIHMuZGF0YSApICYmIFwiZGF0YVwiXG5cdFx0KTtcblxuXHQvLyBIYW5kbGUgaWZmIHRoZSBleHBlY3RlZCBkYXRhIHR5cGUgaXMgXCJqc29ucFwiIG9yIHdlIGhhdmUgYSBwYXJhbWV0ZXIgdG8gc2V0XG5cdGlmICgganNvblByb3AgfHwgcy5kYXRhVHlwZXNbIDAgXSA9PT0gXCJqc29ucFwiICkge1xuXG5cdFx0Ly8gR2V0IGNhbGxiYWNrIG5hbWUsIHJlbWVtYmVyaW5nIHByZWV4aXN0aW5nIHZhbHVlIGFzc29jaWF0ZWQgd2l0aCBpdFxuXHRcdGNhbGxiYWNrTmFtZSA9IHMuanNvbnBDYWxsYmFjayA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2soKSA6XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHQvLyBJbnNlcnQgY2FsbGJhY2sgaW50byB1cmwgb3IgZm9ybSBkYXRhXG5cdFx0aWYgKCBqc29uUHJvcCApIHtcblx0XHRcdHNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgXCIkMVwiICsgY2FsbGJhY2tOYW1lICk7XG5cdFx0fSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7XG5cdFx0XHRzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gXCImXCIgOiBcIj9cIiApICsgcy5qc29ucCArIFwiPVwiICsgY2FsbGJhY2tOYW1lO1xuXHRcdH1cblxuXHRcdC8vIFVzZSBkYXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVjdXRpb25cblx0XHRzLmNvbnZlcnRlcnNbIFwic2NyaXB0IGpzb25cIiBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICFyZXNwb25zZUNvbnRhaW5lciApIHtcblx0XHRcdFx0alF1ZXJ5LmVycm9yKCBjYWxsYmFja05hbWUgKyBcIiB3YXMgbm90IGNhbGxlZFwiICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzcG9uc2VDb250YWluZXJbIDAgXTtcblx0XHR9O1xuXG5cdFx0Ly8gRm9yY2UganNvbiBkYXRhVHlwZVxuXHRcdHMuZGF0YVR5cGVzWyAwIF0gPSBcImpzb25cIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tcblx0XHRvdmVyd3JpdHRlbiA9IHdpbmRvd1sgY2FsbGJhY2tOYW1lIF07XG5cdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7XG5cdFx0fTtcblxuXHRcdC8vIENsZWFuLXVwIGZ1bmN0aW9uIChmaXJlcyBhZnRlciBjb252ZXJ0ZXJzKVxuXHRcdGpxWEhSLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdFxuXHRcdFx0aWYgKCBvdmVyd3JpdHRlbiA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApO1xuXG5cdFx0XHQvLyBPdGhlcndpc2UgcmVzdG9yZSBwcmVleGlzdGluZyB2YWx1ZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxuXHRcdFx0aWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHtcblxuXHRcdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmRcblx0XHRcdFx0cy5qc29ucENhbGxiYWNrID0gb3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrO1xuXG5cdFx0XHRcdC8vIFNhdmUgdGhlIGNhbGxiYWNrIG5hbWUgZm9yIGZ1dHVyZSB1c2Vcblx0XHRcdFx0b2xkQ2FsbGJhY2tzLnB1c2goIGNhbGxiYWNrTmFtZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDYWxsIGlmIGl0IHdhcyBhIGZ1bmN0aW9uIGFuZCB3ZSBoYXZlIGEgcmVzcG9uc2Vcblx0XHRcdGlmICggcmVzcG9uc2VDb250YWluZXIgJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIG92ZXJ3cml0dGVuICkgKSB7XG5cdFx0XHRcdG92ZXJ3cml0dGVuKCByZXNwb25zZUNvbnRhaW5lclsgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gb3ZlcndyaXR0ZW4gPSB1bmRlZmluZWQ7XG5cdFx0fSApO1xuXG5cdFx0Ly8gRGVsZWdhdGUgdG8gc2NyaXB0XG5cdFx0cmV0dXJuIFwic2NyaXB0XCI7XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gU3VwcG9ydDogU2FmYXJpIDggb25seVxuLy8gSW4gU2FmYXJpIDggZG9jdW1lbnRzIGNyZWF0ZWQgdmlhIGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudFxuLy8gY29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9mIHRoZSBmaXJzdCBvbmUuXG4vLyBCZWNhdXNlIG9mIHRoYXQsIHRoaXMgc2VjdXJpdHkgbWVhc3VyZSBoYXMgdG8gYmUgZGlzYWJsZWQgaW4gU2FmYXJpIDguXG4vLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM3MzM3XG5zdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9ICggZnVuY3Rpb24oKSB7XG5cdHZhciBib2R5ID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCBcIlwiICkuYm9keTtcblx0Ym9keS5pbm5lckhUTUwgPSBcIjxmb3JtPjwvZm9ybT48Zm9ybT48L2Zvcm0+XCI7XG5cdHJldHVybiBib2R5LmNoaWxkTm9kZXMubGVuZ3RoID09PSAyO1xufSApKCk7XG5cblxuLy8gQXJndW1lbnQgXCJkYXRhXCIgc2hvdWxkIGJlIHN0cmluZyBvZiBodG1sXG4vLyBjb250ZXh0IChvcHRpb25hbCk6IElmIHNwZWNpZmllZCwgdGhlIGZyYWdtZW50IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGlzIGNvbnRleHQsXG4vLyBkZWZhdWx0cyB0byBkb2N1bWVudFxuLy8ga2VlcFNjcmlwdHMgKG9wdGlvbmFsKTogSWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIHNjcmlwdHMgcGFzc2VkIGluIHRoZSBodG1sIHN0cmluZ1xualF1ZXJ5LnBhcnNlSFRNTCA9IGZ1bmN0aW9uKCBkYXRhLCBjb250ZXh0LCBrZWVwU2NyaXB0cyApIHtcblx0aWYgKCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gW107XG5cdH1cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0a2VlcFNjcmlwdHMgPSBjb250ZXh0O1xuXHRcdGNvbnRleHQgPSBmYWxzZTtcblx0fVxuXG5cdHZhciBiYXNlLCBwYXJzZWQsIHNjcmlwdHM7XG5cblx0aWYgKCAhY29udGV4dCApIHtcblxuXHRcdC8vIFN0b3Agc2NyaXB0cyBvciBpbmxpbmUgZXZlbnQgaGFuZGxlcnMgZnJvbSBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseVxuXHRcdC8vIGJ5IHVzaW5nIGRvY3VtZW50LmltcGxlbWVudGF0aW9uXG5cdFx0aWYgKCBzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCApIHtcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKTtcblxuXHRcdFx0Ly8gU2V0IHRoZSBiYXNlIGhyZWYgZm9yIHRoZSBjcmVhdGVkIGRvY3VtZW50XG5cdFx0XHQvLyBzbyBhbnkgcGFyc2VkIGVsZW1lbnRzIHdpdGggVVJMc1xuXHRcdFx0Ly8gYXJlIGJhc2VkIG9uIHRoZSBkb2N1bWVudCdzIFVSTCAoZ2gtMjk2NSlcblx0XHRcdGJhc2UgPSBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiYmFzZVwiICk7XG5cdFx0XHRiYXNlLmhyZWYgPSBkb2N1bWVudC5sb2NhdGlvbi5ocmVmO1xuXHRcdFx0Y29udGV4dC5oZWFkLmFwcGVuZENoaWxkKCBiYXNlICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudDtcblx0XHR9XG5cdH1cblxuXHRwYXJzZWQgPSByc2luZ2xlVGFnLmV4ZWMoIGRhdGEgKTtcblx0c2NyaXB0cyA9ICFrZWVwU2NyaXB0cyAmJiBbXTtcblxuXHQvLyBTaW5nbGUgdGFnXG5cdGlmICggcGFyc2VkICkge1xuXHRcdHJldHVybiBbIGNvbnRleHQuY3JlYXRlRWxlbWVudCggcGFyc2VkWyAxIF0gKSBdO1xuXHR9XG5cblx0cGFyc2VkID0gYnVpbGRGcmFnbWVudCggWyBkYXRhIF0sIGNvbnRleHQsIHNjcmlwdHMgKTtcblxuXHRpZiAoIHNjcmlwdHMgJiYgc2NyaXB0cy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5KCBzY3JpcHRzICkucmVtb3ZlKCk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgcGFyc2VkLmNoaWxkTm9kZXMgKTtcbn07XG5cblxuLyoqXG4gKiBMb2FkIGEgdXJsIGludG8gYSBwYWdlXG4gKi9cbmpRdWVyeS5mbi5sb2FkID0gZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFjayApIHtcblx0dmFyIHNlbGVjdG9yLCB0eXBlLCByZXNwb25zZSxcblx0XHRzZWxmID0gdGhpcyxcblx0XHRvZmYgPSB1cmwuaW5kZXhPZiggXCIgXCIgKTtcblxuXHRpZiAoIG9mZiA+IC0xICkge1xuXHRcdHNlbGVjdG9yID0galF1ZXJ5LnRyaW0oIHVybC5zbGljZSggb2ZmICkgKTtcblx0XHR1cmwgPSB1cmwuc2xpY2UoIDAsIG9mZiApO1xuXHR9XG5cblx0Ly8gSWYgaXQncyBhIGZ1bmN0aW9uXG5cdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHBhcmFtcyApICkge1xuXG5cdFx0Ly8gV2UgYXNzdW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2tcblx0XHRjYWxsYmFjayA9IHBhcmFtcztcblx0XHRwYXJhbXMgPSB1bmRlZmluZWQ7XG5cblx0Ly8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZ1xuXHR9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHR0eXBlID0gXCJQT1NUXCI7XG5cdH1cblxuXHQvLyBJZiB3ZSBoYXZlIGVsZW1lbnRzIHRvIG1vZGlmeSwgbWFrZSB0aGUgcmVxdWVzdFxuXHRpZiAoIHNlbGYubGVuZ3RoID4gMCApIHtcblx0XHRqUXVlcnkuYWpheCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cblx0XHRcdC8vIElmIFwidHlwZVwiIHZhcmlhYmxlIGlzIHVuZGVmaW5lZCwgdGhlbiBcIkdFVFwiIG1ldGhvZCB3aWxsIGJlIHVzZWQuXG5cdFx0XHQvLyBNYWtlIHZhbHVlIG9mIHRoaXMgZmllbGQgZXhwbGljaXQgc2luY2Vcblx0XHRcdC8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZFxuXHRcdFx0dHlwZTogdHlwZSB8fCBcIkdFVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxuXHRcdFx0ZGF0YTogcGFyYW1zXG5cdFx0fSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQgKSB7XG5cblx0XHRcdC8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFja1xuXHRcdFx0cmVzcG9uc2UgPSBhcmd1bWVudHM7XG5cblx0XHRcdHNlbGYuaHRtbCggc2VsZWN0b3IgP1xuXG5cdFx0XHRcdC8vIElmIGEgc2VsZWN0b3Igd2FzIHNwZWNpZmllZCwgbG9jYXRlIHRoZSByaWdodCBlbGVtZW50cyBpbiBhIGR1bW15IGRpdlxuXHRcdFx0XHQvLyBFeGNsdWRlIHNjcmlwdHMgdG8gYXZvaWQgSUUgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnNcblx0XHRcdFx0alF1ZXJ5KCBcIjxkaXY+XCIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHRcblx0XHRcdFx0cmVzcG9uc2VUZXh0ICk7XG5cblx0XHQvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzIFwiZGF0YVwiLCBcInN0YXR1c1wiLCBcImpxWEhSXCJcblx0XHQvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuXG5cdFx0Ly8gSWYgaXQgZmFpbHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImpxWEhSXCIsIFwic3RhdHVzXCIsIFwiZXJyb3JcIlxuXHRcdH0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkge1xuXHRcdFx0c2VsZi5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoIHRoaXMsIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTtcblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cblxuXG5cbi8vIEF0dGFjaCBhIGJ1bmNoIG9mIGZ1bmN0aW9ucyBmb3IgaGFuZGxpbmcgY29tbW9uIEFKQVggZXZlbnRzXG5qUXVlcnkuZWFjaCggW1xuXHRcImFqYXhTdGFydFwiLFxuXHRcImFqYXhTdG9wXCIsXG5cdFwiYWpheENvbXBsZXRlXCIsXG5cdFwiYWpheEVycm9yXCIsXG5cdFwiYWpheFN1Y2Nlc3NcIixcblx0XCJhamF4U2VuZFwiXG5dLCBmdW5jdGlvbiggaSwgdHlwZSApIHtcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7XG5cdH07XG59ICk7XG5cblxuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBqUXVlcnkudGltZXJzLCBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW0gPT09IGZuLmVsZW07XG5cdH0gKS5sZW5ndGg7XG59O1xuXG5cblxuXG4vKipcbiAqIEdldHMgYSB3aW5kb3cgZnJvbSBhbiBlbGVtZW50XG4gKi9cbmZ1bmN0aW9uIGdldFdpbmRvdyggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5pc1dpbmRvdyggZWxlbSApID8gZWxlbSA6IGVsZW0ubm9kZVR5cGUgPT09IDkgJiYgZWxlbS5kZWZhdWx0Vmlldztcbn1cblxualF1ZXJ5Lm9mZnNldCA9IHtcblx0c2V0T2Zmc2V0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgaSApIHtcblx0XHR2YXIgY3VyUG9zaXRpb24sIGN1ckxlZnQsIGN1ckNTU1RvcCwgY3VyVG9wLCBjdXJPZmZzZXQsIGN1ckNTU0xlZnQsIGNhbGN1bGF0ZVBvc2l0aW9uLFxuXHRcdFx0cG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSxcblx0XHRcdGN1ckVsZW0gPSBqUXVlcnkoIGVsZW0gKSxcblx0XHRcdHByb3BzID0ge307XG5cblx0XHQvLyBTZXQgcG9zaXRpb24gZmlyc3QsIGluLWNhc2UgdG9wL2xlZnQgYXJlIHNldCBldmVuIG9uIHN0YXRpYyBlbGVtXG5cdFx0aWYgKCBwb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XG5cdFx0fVxuXG5cdFx0Y3VyT2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTtcblx0XHRjdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVtLCBcInRvcFwiICk7XG5cdFx0Y3VyQ1NTTGVmdCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwibGVmdFwiICk7XG5cdFx0Y2FsY3VsYXRlUG9zaXRpb24gPSAoIHBvc2l0aW9uID09PSBcImFic29sdXRlXCIgfHwgcG9zaXRpb24gPT09IFwiZml4ZWRcIiApICYmXG5cdFx0XHQoIGN1ckNTU1RvcCArIGN1ckNTU0xlZnQgKS5pbmRleE9mKCBcImF1dG9cIiApID4gLTE7XG5cblx0XHQvLyBOZWVkIHRvIGJlIGFibGUgdG8gY2FsY3VsYXRlIHBvc2l0aW9uIGlmIGVpdGhlclxuXHRcdC8vIHRvcCBvciBsZWZ0IGlzIGF1dG8gYW5kIHBvc2l0aW9uIGlzIGVpdGhlciBhYnNvbHV0ZSBvciBmaXhlZFxuXHRcdGlmICggY2FsY3VsYXRlUG9zaXRpb24gKSB7XG5cdFx0XHRjdXJQb3NpdGlvbiA9IGN1ckVsZW0ucG9zaXRpb24oKTtcblx0XHRcdGN1clRvcCA9IGN1clBvc2l0aW9uLnRvcDtcblx0XHRcdGN1ckxlZnQgPSBjdXJQb3NpdGlvbi5sZWZ0O1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1clRvcCA9IHBhcnNlRmxvYXQoIGN1ckNTU1RvcCApIHx8IDA7XG5cdFx0XHRjdXJMZWZ0ID0gcGFyc2VGbG9hdCggY3VyQ1NTTGVmdCApIHx8IDA7XG5cdFx0fVxuXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggb3B0aW9ucyApICkge1xuXG5cdFx0XHQvLyBVc2UgalF1ZXJ5LmV4dGVuZCBoZXJlIHRvIGFsbG93IG1vZGlmaWNhdGlvbiBvZiBjb29yZGluYXRlcyBhcmd1bWVudCAoZ2gtMTg0OClcblx0XHRcdG9wdGlvbnMgPSBvcHRpb25zLmNhbGwoIGVsZW0sIGksIGpRdWVyeS5leHRlbmQoIHt9LCBjdXJPZmZzZXQgKSApO1xuXHRcdH1cblxuXHRcdGlmICggb3B0aW9ucy50b3AgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLnRvcCA9ICggb3B0aW9ucy50b3AgLSBjdXJPZmZzZXQudG9wICkgKyBjdXJUb3A7XG5cdFx0fVxuXHRcdGlmICggb3B0aW9ucy5sZWZ0ICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy5sZWZ0ID0gKCBvcHRpb25zLmxlZnQgLSBjdXJPZmZzZXQubGVmdCApICsgY3VyTGVmdDtcblx0XHR9XG5cblx0XHRpZiAoIFwidXNpbmdcIiBpbiBvcHRpb25zICkge1xuXHRcdFx0b3B0aW9ucy51c2luZy5jYWxsKCBlbGVtLCBwcm9wcyApO1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1ckVsZW0uY3NzKCBwcm9wcyApO1xuXHRcdH1cblx0fVxufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRvZmZzZXQ6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXG5cdFx0Ly8gUHJlc2VydmUgY2hhaW5pbmcgZm9yIHNldHRlclxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiBvcHRpb25zID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHR0aGlzIDpcblx0XHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0XHRqUXVlcnkub2Zmc2V0LnNldE9mZnNldCggdGhpcywgb3B0aW9ucywgaSApO1xuXHRcdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0dmFyIGRvY0VsZW0sIHdpbiwgcmVjdCwgZG9jLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYVxuXHRcdC8vIGRpc2Nvbm5lY3RlZCBub2RlIGluIElFIHRocm93cyBhbiBlcnJvclxuXHRcdGlmICggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTtcblx0XHR9XG5cblx0XHRyZWN0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSBlbGVtZW50IGlzIG5vdCBoaWRkZW4gKGRpc3BsYXk6IG5vbmUpXG5cdFx0aWYgKCByZWN0LndpZHRoIHx8IHJlY3QuaGVpZ2h0ICkge1xuXHRcdFx0ZG9jID0gZWxlbS5vd25lckRvY3VtZW50O1xuXHRcdFx0d2luID0gZ2V0V2luZG93KCBkb2MgKTtcblx0XHRcdGRvY0VsZW0gPSBkb2MuZG9jdW1lbnRFbGVtZW50O1xuXG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHR0b3A6IHJlY3QudG9wICsgd2luLnBhZ2VZT2Zmc2V0IC0gZG9jRWxlbS5jbGllbnRUb3AsXG5cdFx0XHRcdGxlZnQ6IHJlY3QubGVmdCArIHdpbi5wYWdlWE9mZnNldCAtIGRvY0VsZW0uY2xpZW50TGVmdFxuXHRcdFx0fTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gemVyb3MgZm9yIGRpc2Nvbm5lY3RlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChnaC0yMzEwKVxuXHRcdHJldHVybiByZWN0O1xuXHR9LFxuXG5cdHBvc2l0aW9uOiBmdW5jdGlvbigpIHtcblx0XHRpZiAoICF0aGlzWyAwIF0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dmFyIG9mZnNldFBhcmVudCwgb2Zmc2V0LFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cblx0XHQvLyBGaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gd2luZG93IChwYXJlbnRPZmZzZXQgPSB7dG9wOjAsIGxlZnQ6IDB9LFxuXHRcdC8vIGJlY2F1c2UgaXQgaXMgaXRzIG9ubHkgb2Zmc2V0IHBhcmVudFxuXHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICkgPT09IFwiZml4ZWRcIiApIHtcblxuXHRcdFx0Ly8gQXNzdW1lIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBpcyB0aGVyZSB3aGVuIGNvbXB1dGVkIHBvc2l0aW9uIGlzIGZpeGVkXG5cdFx0XHRvZmZzZXQgPSBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gR2V0ICpyZWFsKiBvZmZzZXRQYXJlbnRcblx0XHRcdG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50KCk7XG5cblx0XHRcdC8vIEdldCBjb3JyZWN0IG9mZnNldHNcblx0XHRcdG9mZnNldCA9IHRoaXMub2Zmc2V0KCk7XG5cdFx0XHRpZiAoICFqUXVlcnkubm9kZU5hbWUoIG9mZnNldFBhcmVudFsgMCBdLCBcImh0bWxcIiApICkge1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0KCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBvZmZzZXRQYXJlbnQgYm9yZGVyc1xuXHRcdFx0cGFyZW50T2Zmc2V0ID0ge1xuXHRcdFx0XHR0b3A6IHBhcmVudE9mZnNldC50b3AgKyBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnRbIDAgXSwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICksXG5cdFx0XHRcdGxlZnQ6IHBhcmVudE9mZnNldC5sZWZ0ICsgalF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50WyAwIF0sIFwiYm9yZGVyTGVmdFdpZHRoXCIsIHRydWUgKVxuXHRcdFx0fTtcblx0XHR9XG5cblx0XHQvLyBTdWJ0cmFjdCBwYXJlbnQgb2Zmc2V0cyBhbmQgZWxlbWVudCBtYXJnaW5zXG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogb2Zmc2V0LnRvcCAtIHBhcmVudE9mZnNldC50b3AgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpblRvcFwiLCB0cnVlICksXG5cdFx0XHRsZWZ0OiBvZmZzZXQubGVmdCAtIHBhcmVudE9mZnNldC5sZWZ0IC0galF1ZXJ5LmNzcyggZWxlbSwgXCJtYXJnaW5MZWZ0XCIsIHRydWUgKVxuXHRcdH07XG5cdH0sXG5cblx0Ly8gVGhpcyBtZXRob2Qgd2lsbCByZXR1cm4gZG9jdW1lbnRFbGVtZW50IGluIHRoZSBmb2xsb3dpbmcgY2FzZXM6XG5cdC8vIDEpIEZvciB0aGUgZWxlbWVudCBpbnNpZGUgdGhlIGlmcmFtZSB3aXRob3V0IG9mZnNldFBhcmVudCwgdGhpcyBtZXRob2Qgd2lsbCByZXR1cm5cblx0Ly8gICAgZG9jdW1lbnRFbGVtZW50IG9mIHRoZSBwYXJlbnQgd2luZG93XG5cdC8vIDIpIEZvciB0aGUgaGlkZGVuIG9yIGRldGFjaGVkIGVsZW1lbnRcblx0Ly8gMykgRm9yIGJvZHkgb3IgaHRtbCBlbGVtZW50LCBpLmUuIGluIGNhc2Ugb2YgdGhlIGh0bWwgbm9kZSAtIGl0IHdpbGwgcmV0dXJuIGl0c2VsZlxuXHQvL1xuXHQvLyBidXQgdGhvc2UgZXhjZXB0aW9ucyB3ZXJlIG5ldmVyIHByZXNlbnRlZCBhcyBhIHJlYWwgbGlmZSB1c2UtY2FzZXNcblx0Ly8gYW5kIG1pZ2h0IGJlIGNvbnNpZGVyZWQgYXMgbW9yZSBwcmVmZXJhYmxlIHJlc3VsdHMuXG5cdC8vXG5cdC8vIFRoaXMgbG9naWMsIGhvd2V2ZXIsIGlzIG5vdCBndWFyYW50ZWVkIGFuZCBjYW4gY2hhbmdlIGF0IGFueSBwb2ludCBpbiB0aGUgZnV0dXJlXG5cdG9mZnNldFBhcmVudDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBvZmZzZXRQYXJlbnQgPSB0aGlzLm9mZnNldFBhcmVudDtcblxuXHRcdFx0d2hpbGUgKCBvZmZzZXRQYXJlbnQgJiYgalF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcInBvc2l0aW9uXCIgKSA9PT0gXCJzdGF0aWNcIiApIHtcblx0XHRcdFx0b2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50Lm9mZnNldFBhcmVudDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG9mZnNldFBhcmVudCB8fCBkb2N1bWVudEVsZW1lbnQ7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbi8vIENyZWF0ZSBzY3JvbGxMZWZ0IGFuZCBzY3JvbGxUb3AgbWV0aG9kc1xualF1ZXJ5LmVhY2goIHsgc2Nyb2xsTGVmdDogXCJwYWdlWE9mZnNldFwiLCBzY3JvbGxUb3A6IFwicGFnZVlPZmZzZXRcIiB9LCBmdW5jdGlvbiggbWV0aG9kLCBwcm9wICkge1xuXHR2YXIgdG9wID0gXCJwYWdlWU9mZnNldFwiID09PSBwcm9wO1xuXG5cdGpRdWVyeS5mblsgbWV0aG9kIF0gPSBmdW5jdGlvbiggdmFsICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2QsIHZhbCApIHtcblx0XHRcdHZhciB3aW4gPSBnZXRXaW5kb3coIGVsZW0gKTtcblxuXHRcdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHdpbiA/IHdpblsgcHJvcCBdIDogZWxlbVsgbWV0aG9kIF07XG5cdFx0XHR9XG5cblx0XHRcdGlmICggd2luICkge1xuXHRcdFx0XHR3aW4uc2Nyb2xsVG8oXG5cdFx0XHRcdFx0IXRvcCA/IHZhbCA6IHdpbi5wYWdlWE9mZnNldCxcblx0XHRcdFx0XHR0b3AgPyB2YWwgOiB3aW4ucGFnZVlPZmZzZXRcblx0XHRcdFx0KTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbVsgbWV0aG9kIF0gPSB2YWw7XG5cdFx0XHR9XG5cdFx0fSwgbWV0aG9kLCB2YWwsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fTtcbn0gKTtcblxuLy8gU3VwcG9ydDogU2FmYXJpIDw9NyAtIDkuMSwgQ2hyb21lIDw9MzcgLSA0OVxuLy8gQWRkIHRoZSB0b3AvbGVmdCBjc3NIb29rcyB1c2luZyBqUXVlcnkuZm4ucG9zaXRpb25cbi8vIFdlYmtpdCBidWc6IGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0yOTA4NFxuLy8gQmxpbmsgYnVnOiBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD01ODkzNDdcbi8vIGdldENvbXB1dGVkU3R5bGUgcmV0dXJucyBwZXJjZW50IHdoZW4gc3BlY2lmaWVkIGZvciB0b3AvbGVmdC9ib3R0b20vcmlnaHQ7XG4vLyByYXRoZXIgdGhhbiBtYWtlIHRoZSBjc3MgbW9kdWxlIGRlcGVuZCBvbiB0aGUgb2Zmc2V0IG1vZHVsZSwganVzdCBjaGVjayBmb3IgaXQgaGVyZVxualF1ZXJ5LmVhY2goIFsgXCJ0b3BcIiwgXCJsZWZ0XCIgXSwgZnVuY3Rpb24oIGksIHByb3AgKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgcHJvcCBdID0gYWRkR2V0SG9va0lmKCBzdXBwb3J0LnBpeGVsUG9zaXRpb24sXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRcdFx0Y29tcHV0ZWQgPSBjdXJDU1MoIGVsZW0sIHByb3AgKTtcblxuXHRcdFx0XHQvLyBJZiBjdXJDU1MgcmV0dXJucyBwZXJjZW50YWdlLCBmYWxsYmFjayB0byBvZmZzZXRcblx0XHRcdFx0cmV0dXJuIHJudW1ub25weC50ZXN0KCBjb21wdXRlZCApID9cblx0XHRcdFx0XHRqUXVlcnkoIGVsZW0gKS5wb3NpdGlvbigpWyBwcm9wIF0gKyBcInB4XCIgOlxuXHRcdFx0XHRcdGNvbXB1dGVkO1xuXHRcdFx0fVxuXHRcdH1cblx0KTtcbn0gKTtcblxuXG4vLyBDcmVhdGUgaW5uZXJIZWlnaHQsIGlubmVyV2lkdGgsIGhlaWdodCwgd2lkdGgsIG91dGVySGVpZ2h0IGFuZCBvdXRlcldpZHRoIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IEhlaWdodDogXCJoZWlnaHRcIiwgV2lkdGg6IFwid2lkdGhcIiB9LCBmdW5jdGlvbiggbmFtZSwgdHlwZSApIHtcblx0alF1ZXJ5LmVhY2goIHsgcGFkZGluZzogXCJpbm5lclwiICsgbmFtZSwgY29udGVudDogdHlwZSwgXCJcIjogXCJvdXRlclwiICsgbmFtZSB9LFxuXHRcdGZ1bmN0aW9uKCBkZWZhdWx0RXh0cmEsIGZ1bmNOYW1lICkge1xuXG5cdFx0Ly8gTWFyZ2luIGlzIG9ubHkgZm9yIG91dGVySGVpZ2h0LCBvdXRlcldpZHRoXG5cdFx0alF1ZXJ5LmZuWyBmdW5jTmFtZSBdID0gZnVuY3Rpb24oIG1hcmdpbiwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgY2hhaW5hYmxlID0gYXJndW1lbnRzLmxlbmd0aCAmJiAoIGRlZmF1bHRFeHRyYSB8fCB0eXBlb2YgbWFyZ2luICE9PSBcImJvb2xlYW5cIiApLFxuXHRcdFx0XHRleHRyYSA9IGRlZmF1bHRFeHRyYSB8fCAoIG1hcmdpbiA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gdHJ1ZSA/IFwibWFyZ2luXCIgOiBcImJvcmRlclwiICk7XG5cblx0XHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIGRvYztcblxuXHRcdFx0XHRpZiAoIGpRdWVyeS5pc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gJCggd2luZG93ICkub3V0ZXJXaWR0aC9IZWlnaHQgcmV0dXJuIHcvaCBpbmNsdWRpbmcgc2Nyb2xsYmFycyAoZ2gtMTcyOSlcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xuXHRcdFx0XHRcdFx0ZWxlbVsgXCJpbm5lclwiICsgbmFtZSBdIDpcblx0XHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG5cblxuXG5cbi8vIFJlZ2lzdGVyIGFzIGEgbmFtZWQgQU1EIG1vZHVsZSwgc2luY2UgalF1ZXJ5IGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aCBvdGhlclxuLy8gZmlsZXMgdGhhdCBtYXkgdXNlIGRlZmluZSwgYnV0IG5vdCB2aWEgYSBwcm9wZXIgY29uY2F0ZW5hdGlvbiBzY3JpcHQgdGhhdFxuLy8gdW5kZXJzdGFuZHMgYW5vbnltb3VzIEFNRCBtb2R1bGVzLiBBIG5hbWVkIEFNRCBpcyBzYWZlc3QgYW5kIG1vc3Qgcm9idXN0XG4vLyB3YXkgdG8gcmVnaXN0ZXIuIExvd2VyY2FzZSBqcXVlcnkgaXMgdXNlZCBiZWNhdXNlIEFNRCBtb2R1bGUgbmFtZXMgYXJlXG4vLyBkZXJpdmVkIGZyb20gZmlsZSBuYW1lcywgYW5kIGpRdWVyeSBpcyBub3JtYWxseSBkZWxpdmVyZWQgaW4gYSBsb3dlcmNhc2Vcbi8vIGZpbGUgbmFtZS4gRG8gdGhpcyBhZnRlciBjcmVhdGluZyB0aGUgZ2xvYmFsIHNvIHRoYXQgaWYgYW4gQU1EIG1vZHVsZSB3YW50c1xuLy8gdG8gY2FsbCBub0NvbmZsaWN0IHRvIGhpZGUgdGhpcyB2ZXJzaW9uIG9mIGpRdWVyeSwgaXQgd2lsbCB3b3JrLlxuXG4vLyBOb3RlIHRoYXQgZm9yIG1heGltdW0gcG9ydGFiaWxpdHksIGxpYnJhcmllcyB0aGF0IGFyZSBub3QgalF1ZXJ5IHNob3VsZFxuLy8gZGVjbGFyZSB0aGVtc2VsdmVzIGFzIGFub255bW91cyBtb2R1bGVzLCBhbmQgYXZvaWQgc2V0dGluZyBhIGdsb2JhbCBpZiBhblxuLy8gQU1EIGxvYWRlciBpcyBwcmVzZW50LiBqUXVlcnkgaXMgYSBzcGVjaWFsIGNhc2UuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWVcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcmJ1cmtlL3JlcXVpcmVqcy93aWtpL1VwZGF0aW5nLWV4aXN0aW5nLWxpYnJhcmllcyN3aWtpLWFub25cblxuaWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblx0ZGVmaW5lKCBcImpxdWVyeVwiLCBbXSwgZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGpRdWVyeTtcblx0fSApO1xufVxuXG5cblxuXG5cbnZhclxuXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSxcblxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfJCA9IHdpbmRvdy4kO1xuXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xuXHRpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LiQgPSBfJDtcblx0fVxuXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5O1xufTtcblxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBBTURcbi8vICgjNzEwMiNjb21tZW50OjEwLCBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzU1Nylcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcbmlmICggIW5vR2xvYmFsICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cblxucmV0dXJuIGpRdWVyeTtcbn0gKTtcbiJdfQ==
